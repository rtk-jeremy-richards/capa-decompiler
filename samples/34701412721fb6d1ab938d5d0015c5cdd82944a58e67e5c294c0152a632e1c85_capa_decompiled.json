{
    "00401000": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401000(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint arg_8h_01;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    // [00] -r-x section size 573440 named .text\n    uVar2 = *(in_ECX + 0x160);\n    if (arg_ch != '\\0') {\n        fcn.0040109f(arg_8h);\n    }\n    arg_8h_00 = fcn.0040124c();\n    *(in_ECX + 0x474) = 0;\n    *(in_ECX + 0xfc) = 0;\n    fcn.0040e1f0(arg_8h);\n    iVar3 = fcn.00407be1();\n    uVar1 = *(iVar3 + 0x10);\n    if (arg_10h != NULL) {\n        if (uVar1 == 0) {\n            fcn.00412570();\n            *arg_10h = 0;\n            arg_10h[3] = 1;\n        }\n        else {\n            arg_8h_01 = fcn.00407be1();\n            fcn.0040d89e(arg_8h_01);\n        }\n    }\n    uVar4 = fcn.00401ac0(arg_8h_00);\n    if (arg_ch != '\\0') {\n        uVar4 = fcn.00401188();\n    }\n    while (uVar2 < *(in_ECX + 0x160)) {\n        uVar4 = fcn.0040d9f2();\n    }\n    return uVar4 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 437
    },
    "004010e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004010e8(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        puVar2 = fcn.0042010a(0xc);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            *puVar2 = 0;\n            iVar1 = arg_8h[1];\n            puVar2[1] = iVar1;\n            if (iVar1 < 0) {\n                puVar2[1] = 0;\n            }\n            fcn.0040113c(puVar2, *arg_8h);\n        }\n        puVar2[2] = in_ECX[1];\n        in_ECX[1] = puVar2;\n    }\n    else {\n        puVar2 = in_ECX[1];\n        *puVar2 = *arg_8h;\n        puVar2[1] = arg_8h[1];\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 273
    },
    "00401188": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401188(int32_t *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(param_1 + 9) != '\\0') {\n        iVar2 = param_1[1];\n        iVar3 = *(iVar2 + 8);\n        if (iVar2 != 0) {\n            fcn.0043ea90(iVar2);\n        }\n        param_1[1] = iVar3;\n        *(param_1 + 9) = 0;\n    }\n    if (*(param_1 + 2) == '\\0') {\n        puVar1 = param_1[1];\n        iVar2 = puVar1[2];\n        if (puVar1 != NULL) {\n            fcn.004011ca(*puVar1);\n            fcn.0042017e(puVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    else {\n        *(param_1 + 9) = 1;\n    }\n    *param_1 = *param_1 + -1;\n    return;\n}\n",
        "token_count": 262
    },
    "004011ca": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004011ca(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h != NULL) {\n        if (arg_8h[6] != 0) {\n            fcn.004011ca(arg_8h[6]);\n        }\n        if (arg_8h[7] != 0) {\n            fcn.004011ca(arg_8h[7]);\n        }\n        if ((*(arg_8h + 4) == '\\0') && (iVar1 = arg_8h[5],  iVar1 != 0)) {\n            fcn.00414430();\n            fcn.0042017e(iVar1);\n        }\n        *arg_8h[3] = *arg_8h[3] + -1;\n        if (*arg_8h[3] == 0) {\n            fcn.0042017e(*arg_8h);\n            fcn.0042017e(arg_8h[3]);\n        }\n        fcn.0042017e(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "0040175e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040175e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        iVar1 = fcn.0042010a(0x40);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.0040179c(arg_8h);\n        }\n        *(iVar1 + 0x38) = in_ECX[1];\n        in_ECX[1] = iVar1;\n    }\n    else {\n        fcn.0044d231(arg_8h);\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 182
    },
    "00412570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412570(int32_t *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = param_1[2];\n    if (puVar1 == NULL) {\n        iVar2 = param_1[3];\n    }\n    else {\n        *puVar1[3] = *puVar1[3] + -1;\n        if (*puVar1[3] == 0) {\n            fcn.0042017e(*puVar1);\n            fcn.0042017e(puVar1[3]);\n        }\n        fcn.0042017e(puVar1);\n        iVar2 = param_1[3];\n        param_1[2] = 0;\n    }\n    if (4 < iVar2) {\n    // switch table (11 cases) at 0x4125f4\n        switch(iVar2) {\n        case 5:\n            fcn.0041e3cc();\n            param_1[3] = 1;\n            *param_1 = 0;\n            return;\n        case 8:\n            if (*param_1 != 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*param_1);\n                fcn.0042017e(*param_1);\n            }\n            break;\n        case 10:\n            if (*param_1 != 0) {\n                fcn.0044aa9c(*param_1);\n            }\n            break;\n        case 0xb:\n            fcn.0042017e(*(*param_1 + 4));\n            fcn.0042017e(*param_1);\n            break;\n        case 0xc:\n            if (*param_1 != 0) {\n                fcn.0043a56f(*param_1);\n            }\n            break;\n        case 0xd:\n        case 0xe:\n            if (*param_1 != 0) {\n                fcn.00401926(*param_1);\n            }\n            break;\n        case 0xf:\n            if (*param_1 != 0) {\n                fcn.0043a599(*param_1);\n            }\n        }\n    }\n    param_1[3] = 1;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 503
    },
    "0040197e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040197e(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.0042010a(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.0041faa0(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0042017e(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    puVar4 = fcn.0042010a(4);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        *puVar4 = *arg_8h;\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 377
    },
    "00401a85": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401a85(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_ECX;\n    \n    cVar1 = fcn.0040193b(*in_ECX);\n    if ((cVar1 == '\\0') && (iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0xc, 0, *arg_8h),  iVar2 != 0)) {\n        if (arg_ch != '\\0') {\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*in_ECX, 0, 1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(uVar3);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 184
    },
    "00401e58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e58(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint lpData;\n    uint var_3b8h;\n    uint var_3b4h;\n    uint var_3b0h;\n    uint var_3a8h;\n    \n    if (arg_ch != 1) {\n        return;\n    }\n    lpData = 0x3a8;\n    fcn.00421970(&var_3b8h, 0, 0x3b4);\n    fcn.004038e4();\n    if (*0x4c10c6 == '\\0') goto code_r0x00401eda;\n    var_3b8h = arg_8h;\n    var_3b4h = 1;\n    var_3b0h = 2;\n    if (*0x4c10c5 == '\\0') {\n        if (*(in_ECX + 9) == '\\0') {\n            if (*(in_ECX + 0x194) != '\\x01') goto code_r0x00401eda;\ncode_r0x00401ef8:\n            *(in_ECX + 0x194) = 0;\n        }\n        else {\n            if (*(in_ECX + 0x195) == '\\0') {\n                var_3a8h = *(in_ECX + 0x1b0);\n                *(in_ECX + 0x195) = 1;\n                goto code_r0x00474518;\n            }\n            *(in_ECX + 0x195) = 0;\n        }\n        var_3a8h = *(in_ECX + 0x19c);\n    }\n    else {\n        if (*(in_ECX + 0x194) == '\\x01') goto code_r0x00401ef8;\n        var_3a8h = *(in_ECX + 0x1a8);\n        *(in_ECX + 0x194) = 1;\n    }\ncode_r0x00474518:\n    (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &lpData);\ncode_r0x00401eda:\n    (*_sym.imp.USER32.dll_KillTimer)(arg_8h, 1);\n    (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0x2ee, 0);\n    return;\n}\n",
        "token_count": 536
    },
    "0040203a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040203a(int32_t arg_8h, uint32_t *arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint unaff_ESI;\n    ulong uVar8;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    uVar7 = 0;\n    *arg_ch = *arg_ch + 1;\n    var_24h = 0;\n    var_1ch = 0;\n    var_18h = 1;\n    if (*arg_ch < *(arg_8h + 8)) {\n        var_ch = 0x4e;\n        do {\n            uVar7 = 0;\n            uVar8 = fcn.0040218e(0);\n            iVar4 = uVar8 >> 0x20;\n            if (uVar8 < arg_18h) {\n                iVar4 = 0x7d;\ncode_r0x00477813:\n                uVar7 = 0;\n                fcn.0044d520(iVar4, unaff_ESI);\n                break;\n            }\n            uVar2 = *(*(*(arg_8h + 4) + iVar4 * 4) + 8);\n            var_10h = uVar2;\n            if (uVar2 == var_ch) {\n                *(arg_14h + arg_18h * 4) = 0;\n                cVar3 = fcn.0040203a(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (cVar3 == '\\0') break;\n            }\n            else {\n                if (arg_18h < uVar8) {\n                    iVar4 = 0x7e;\n                    goto code_r0x00477813;\n                }\n                var_14h = *(*(*(arg_8h + 4) + iVar4 * 4) + 10);\n                if ((uVar2 != 0x4f) || (*(*(*(arg_8h + 4) + -4 + iVar4 * 4) + 8) != 0x4e)) {\n                    iVar4 = fcn.0040fa40(arg_8h, arg_ch, &var_24h, 0xffffffff);\n                    if (iVar4 < 0) break;\n                    fcn.0040346e();\n                    var_10h = 0;\n                    if (0 < arg_18h) {\n                        do {\n                            unaff_ESI = *(arg_14h + uVar7 * 4);\n                            fcn.00403489(unaff_ESI);\n                            uVar7 = uVar7 + 1;\n                        } while (uVar7 < arg_18h);\n                    }\n                    iVar5 = fcn.004114a0(arg_10h, 0, 0);\n                    iVar4 = var_14h;\n                    if (iVar5 == 0) goto code_r0x00477813;\n                    fcn.0040d89e(&var_24h);\n                }\n            }\n            uVar7 = 0;\n            uVar6 = *arg_ch;\n            if (*(*(*(arg_8h + 4) + uVar6 * 4) + 8) != 0x40) {\n                if (*(*(*(arg_8h + 4) + uVar6 * 4) + 8) != 0x4f) {\n                    iVar4 = 0x6b;\n                    goto code_r0x00477813;\n                }\n                *arg_ch = uVar6 + 1;\n                uVar7 = 1;\n                break;\n            }\n            piVar1 = arg_14h + -4 + arg_18h * 4;\n            *piVar1 = *piVar1 + 1;\n            *arg_ch = uVar6 + 1;\n        } while (uVar6 + 1 < *(arg_8h + 8));\n    }\n    uVar6 = fcn.00412570();\n    return uVar6 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 1022
    },
    "004021dd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004023e2)\n// WARNING: Removing unreachable block (ram,0x0040244b)\n// WARNING: Removing unreachable block (ram,0x004026b9)\n// WARNING: Removing unreachable block (ram,0x0047a75a)\n// WARNING: Removing unreachable block (ram,0x00402551)\n// WARNING: Removing unreachable block (ram,0x004025fd)\n// WARNING: Removing unreachable block (ram,0x00402784)\n// WARNING: Removing unreachable block (ram,0x00402742)\n// WARNING: Removing unreachable block (ram,0x00402761)\n// WARNING: Removing unreachable block (ram,0x00402669)\n// WARNING: Removing unreachable block (ram,0x0040267c)\n\nuint fcn.004021dd(void)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint32_t arg_8h;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    bool bVar9;\n    uint arg_8h_00;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t *var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_30h = 1;\n    var_14h = 0;\n    var_1ch = 0;\n    var_2ch = 0;\n    var_8h = 0;\n    var_4h = 0;\n    var_ch = 0;\n    var_18h = 0;\n    var_20h = 0;\n    arg_8h = 0;\n    iVar7 = var_30h;\ncode_r0x00402272:\n    do {\n        var_30h = iVar7;\n        iVar5 = 0;\n        if ((var_30h <= *0x4c22f8) && (0 < var_30h)) {\n            iVar5 = var_30h * 0x10 + *0x4c232c;\n        }\n        iVar7 = var_30h + 1;\n        uVar8 = 0xffffffff;\n        if (iVar5 == 0) {\n            iVar7 = fcn.004028af(0, var_ch, var_8h, var_4h, var_1ch, var_18h, var_14h, var_20h);\n            if (-1 < iVar7) {\n                uVar8 = 0;\n            }\n            goto code_r0x00402700;\n        }\n        *0x4c143c = var_30h;\n        var_24h = 0;\n        var_34h = **(iVar5 + 4);\n        uVar1 = *(var_34h + 2);\n        var_10h = uVar1;\n        piVar4 = *(iVar5 + 4);\n        var_28h = 0;\n        if (uVar1 != 0x7f) {\n            var_24h = 0;\n            do {\n                iVar3 = var_24h;\n                piVar4 = piVar4 + 1;\n                var_24h = iVar3 + 1;\n            } while (*(*piVar4 + 8) != 0x7f);\n            piVar4 = *(iVar5 + 4);\n            if (var_24h != 0) {\n                var_24h = iVar3;\n            }\n        }\n        uVar8 = 0xffffffff;\n    } while (uVar1 != 0);\n    iVar3 = *var_34h;\n    if (iVar3 < 0x14) {\n        uVar6 = arg_8h;\n        if (iVar3 < 0x12) goto code_r0x00402321;\n        goto code_r0x0040262c;\n    }\n    if (iVar3 < 0x21) {\n        if (iVar3 == 0x20) {\ncode_r0x004024dc:\n            var_2ch = var_2ch + 1;\n            if (1 < var_2ch) {\ncode_r0x0047a7d6:\n                iVar7 = -1;\n                arg_8h_00 = 0x83;\n                goto code_r0x0047a7eb;\n            }\ncode_r0x004024ec:\n            iVar5 = fcn.004028af(arg_8h, var_ch, var_8h, var_4h, var_1ch, var_18h, var_14h, var_20h);\n            if (iVar5 < 0) goto code_r0x00402700;\n            goto code_r0x00402272;\n        }\n        if (iVar3 == 0x14) {\n            if (*(piVar4[1] + 8) != 0x7f) goto code_r0x0047a7de;\n            var_1ch = var_1ch + 1;\n            goto code_r0x0040251d;\n        }\n        if (iVar3 == 0x15) {\n            *0x4c143c = var_30h;\n            iVar7 = -1;\n            arg_8h_00 = 0x98;\n            goto code_r0x0047a7eb;\n        }\n        if (iVar3 == 0x16) {\n            if (*(piVar4[1] + 8) != 0x7f) goto code_r0x0047a7de;\n            var_1ch = var_1ch + -1;\n            if ((var_1ch < 0) || (bVar9 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar9)) {\n                iVar7 = -1;\n                arg_8h_00 = 0x99;\n                goto code_r0x0047a7eb;\n            }\n            goto code_r0x00402272;\n        }\n        if (iVar3 == 0x17) {\n            var_18h = var_18h + 1;\n            goto code_r0x0040251d;\n        }\n        if (iVar3 != 0x18) goto code_r0x00402272;\n        if (*(piVar4[1] + 8) == 0x7f) {\n            var_18h = var_18h + -1;\n            *0x4c143c = var_30h;\n            if ((var_18h < 0) || (bVar9 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar9)) {\n                iVar7 = -1;\n                arg_8h_00 = 0xb3;\n                goto code_r0x0047a7eb;\n            }\n            goto code_r0x00402272;\n        }\n    }\n    else {\n        if (iVar3 != 0x21) {\n            if (iVar3 == 0x25) {\n                var_20h = var_20h + 1;\n                goto code_r0x0040251d;\n            }\n            if (iVar3 == 0x26) {\n                if (*(piVar4[1] + 8) != 0x7f) goto code_r0x0047a7de;\n                var_20h = var_20h + -1;\n                *0x4c143c = var_30h;\n                if ((var_20h < 0) || (bVar9 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar9)) {\n                    iVar7 = -1;\n                    arg_8h_00 = 0x68;\n                    goto code_r0x0047a7eb;\n                }\n            }\n            else if (iVar3 == 0x2b) goto code_r0x004024dc;\n            goto code_r0x00402272;\n        }\n        if (*(piVar4[1] + 8) == 0x7f) {\n            var_2ch = var_2ch + -1;\n            if (var_2ch != 0) goto code_r0x0047a7d6;\n            goto code_r0x004024ec;\n        }\n    }\n    goto code_r0x0047a7de;\ncode_r0x00402321:\n    // switch table (11 cases) at 0x402809\n    switch(iVar3) {\n    case 4:\n        iVar2 = 0;\n        while ((iVar2 != 0 || (*var_34h != 5))) {\n            var_28h = var_28h + 1;\n            var_34h = piVar4[var_28h];\n            iVar2 = *(var_34h + 2);\n            if (iVar2 == 0x7f) {\n                iVar7 = -1;\n                arg_8h_00 = 0xa1;\n                goto code_r0x0047a7eb;\n            }\n        }\n        if ((*(piVar4[var_24h] + 2) == 0) && (*piVar4[var_24h] == 5)) {\n            var_14h = var_14h + 1;\n            uVar6 = arg_8h + 1;\n            var_10h = arg_8h;\n            fcn.00402876(&var_10h);\n        }\n        piVar4 = *(*(iVar5 + 4) + 4 + var_28h * 4);\n        arg_8h = uVar6;\n        if (*(piVar4 + 2) == 0) {\n            if (0x11 < *piVar4) {\n                if (*piVar4 < 0x14) {\ncode_r0x0040262c:\n                    arg_8h = uVar6;\n                    if (((var_ch == 0) && (var_8h == 0)) && (var_4h == 0)) {\n                        iVar7 = -1;\n                        arg_8h_00 = 0x96;\n                        goto code_r0x0047a7eb;\n                    }\n                    goto code_r0x00402272;\n                }\n                if ((0x18 < *piVar4) && ((*piVar4 < 0x1f || ((0x21 < *piVar4 && (*piVar4 < 0x24))))))\n                goto code_r0x00402272;\n            }\n            iVar7 = *(*(*(iVar5 + 4) + 4 + var_28h * 4) + 10);\n            arg_8h_00 = 0x9f;\n            goto code_r0x0047a7eb;\n        }\n        goto code_r0x00402272;\n    case 5:\n        goto code_r0x0047a7b6;\n    case 6:\n        if (*(piVar4[1] + 8) == 0x7f) goto code_r0x0040258e;\n        break;\n    case 7:\ncode_r0x0040258e:\n        if (var_14h == 0) {\n            iVar7 = -1;\n            arg_8h_00 = 0x74;\n            goto code_r0x0047a7eb;\n        }\n        goto code_r0x00402272;\n    case 8:\n        if (*(piVar4[1] + 8) == 0x7f) {\n            var_14h = var_14h + -1;\n            *0x4c143c = var_30h;\n            if ((var_14h < 0) || (bVar9 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar9)) {\n                iVar7 = -1;\n                arg_8h_00 = 0x75;\n                goto code_r0x0047a7eb;\n            }\n            goto code_r0x00402272;\n        }\n        break;\n    case 9:\n        var_8h = var_8h + 1;\n        goto code_r0x0040251d;\n    case 10:\n        if (*(piVar4[1] + 8) == 0x7f) {\n            var_8h = var_8h + -1;\n            if ((var_8h < 0) || (bVar9 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar9)) {\n                iVar7 = -1;\n                arg_8h_00 = 0x78;\n                goto code_r0x0047a7eb;\n            }\n            goto code_r0x00402272;\n        }\n        break;\n    case 0xb:\n        if (*(piVar4[1] + 8) == 0x7f) {\n            var_ch = var_ch + 1;\n            goto code_r0x0040251d;\n        }\n        break;\n    case 0xc:\n        var_ch = var_ch + -1;\n        if ((var_ch < 0) || (bVar9 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar9)) {\n            iVar7 = -1;\n            arg_8h_00 = 0x93;\n            goto code_r0x0047a7eb;\n        }\n        goto code_r0x00402272;\n    case 0xd:\n        var_4h = var_4h + 1;\ncode_r0x0040251d:\n        var_10h = arg_8h;\n        fcn.00402876(&var_10h);\n        arg_8h = arg_8h + 1;\n        goto code_r0x00402272;\n    case 0xe:\n        if (*(piVar4[1] + 8) == 0x7f) {\n            var_4h = var_4h + -1;\n            if ((var_4h < 0) || (bVar9 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar9)) {\n                iVar7 = -1;\n                arg_8h_00 = 0x95;\n                goto code_r0x0047a7eb;\n            }\n        }\n        break;\n    default:\n        goto code_r0x00402272;\n    }\ncode_r0x0047a7de:\n    iVar7 = *(*(*(iVar5 + 4) + 4) + 10);\n    arg_8h_00 = 0x72;\n    goto code_r0x0047a7eb;\ncode_r0x0047a7b6:\n    iVar7 = -1;\n    arg_8h_00 = 0x81;\ncode_r0x0047a7eb:\n    fcn.0044d520(arg_8h_00, iVar7);\ncode_r0x00402700:\n    fcn.00402933();\n    fcn.00402933();\n    fcn.00402933();\n    fcn.00402933();\n    fcn.00402933();\n    fcn.00402933();\n    fcn.00402933();\n    return uVar8;\n}\n",
        "token_count": 3656
    },
    "00402835": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402835(int32_t param_1)\n\n{\n    if (*(param_1 + 9) == '\\0') {\n        return *(param_1 + 4);\n    }\n    return *(*(param_1 + 4) + 4);\n}\n",
        "token_count": 63
    },
    "00402843": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402843(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = *(param_1[1] + 4);\n        fcn.0042017e(param_1[1]);\n        param_1[1] = iVar1;\n        *(param_1 + 9) = 0;\n    }\n    if (*(param_1 + 2) == '\\0') {\n        iVar1 = *(param_1[1] + 4);\n        fcn.0042017e(param_1[1]);\n        param_1[1] = iVar1;\n        *(param_1 + 9) = 0;\n    }\n    else {\n        *(param_1 + 9) = 1;\n    }\n    *param_1 = *param_1 + -1;\n    return;\n}\n",
        "token_count": 203
    },
    "00402876": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402876(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        puVar1 = fcn.0042010a(8);\n        if (puVar1 == NULL) {\n            puVar1 = NULL;\n        }\n        else {\n            *puVar1 = *arg_8h;\n        }\n        puVar1[1] = in_ECX[1];\n        in_ECX[1] = puVar1;\n    }\n    else {\n        *in_ECX[1] = *arg_8h;\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 180
    },
    "004028af": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004028af(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    uint arg_8h_00;\n    \n    if (arg_8h < 1) {\n        if (arg_ch != 0) {\ncode_r0x004028f1:\n            arg_8h_00 = 0x92;\n            goto code_r0x0047a6ea;\n        }\n        if (arg_10h != 0) {\ncode_r0x004028fd:\n            arg_8h_00 = 0x77;\n            goto code_r0x0047a6ea;\n        }\n        if (arg_14h != 0) {\ncode_r0x00402906:\n            arg_8h_00 = 0x97;\n            goto code_r0x0047a6ea;\n        }\n        if (arg_18h != 0) {\ncode_r0x00402912:\n            arg_8h_00 = 0xa0;\n            goto code_r0x0047a6ea;\n        }\n        if (arg_1ch != 0) {\ncode_r0x0040291e:\n            arg_8h_00 = 0xb4;\n            goto code_r0x0047a6ea;\n        }\n        if (arg_20h != 0) {\ncode_r0x0040292a:\n            arg_8h_00 = 0x73;\n            goto code_r0x0047a6ea;\n        }\n    }\n    else {\n        if (arg_ch == arg_8h) goto code_r0x004028f1;\n        if (arg_10h == arg_8h) goto code_r0x004028fd;\n        if (arg_14h == arg_8h) goto code_r0x00402906;\n        if (arg_18h == arg_8h) goto code_r0x00402912;\n        if (arg_1ch == arg_8h) goto code_r0x0040291e;\n        if (arg_20h == arg_8h) goto code_r0x0040292a;\n    }\n    if (arg_24h == 0) {\n        return 0;\n    }\n    arg_8h_00 = 0x6a;\ncode_r0x0047a6ea:\n    fcn.0044d520(arg_8h_00, 0xffffffff);\n    return 0xffffffff;\n}\n",
        "token_count": 589
    },
    "004029c2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004029c2(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint in_ECX;\n    \n    if ((arg_8h == *0x4c10e8) || (*0x4c10e8 == 0)) {\n        if (arg_ch < 0x12) {\n            if (arg_ch == 0x11) {\n                *0x4c10b0 = 4 - ((arg_14h & 0x80000000) != 0);\n                *0x4c10c0 = 0;\n                fcn.0040322e();\n                fcn.0041ec33();\n                goto code_r0x00402a2b;\n            }\n            if (arg_ch == 1) {\n                (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0x2ee, 0);\n                *0x4c2368 = (*_sym.imp.USER32.dll_RegisterWindowMessageW)(L\"TaskbarCreated\");\n                if (*0x4c18f0 == 0) {\n                    *0x4c18f0 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                }\n            }\n            else if (arg_ch == 2) {\n                (*_sym.imp.USER32.dll_KillTimer)(arg_8h, 1);\n                fcn.00402b94();\n                fcn.00402ac7();\n            }\n            else if (arg_ch == 5) {\n                (*_sym.imp.USER32.dll_MoveWindow)(*0x4c10e4, 0, 0, arg_14h & 0xffff, arg_14h >> 0x10, 1);\n            }\n            else if (arg_ch == 7) {\n                (*_sym.imp.USER32.dll_SetFocus)(*0x4c10e4);\n            }\n            else {\n                if (arg_ch != 0x10) goto code_r0x00402a1f;\n                *0x4c10c0 = 1;\n                fcn.0040322e();\n            }\n        }\n        else if (arg_ch == 0x82) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        }\n        else if (arg_ch == 0x111) {\n            cVar1 = fcn.004457fb(in_ECX, in_ECX, arg_10h, arg_14h);\n            if (cVar1 != '\\x01') goto code_r0x00402a2b;\n        }\n        else {\n            if (arg_ch != 0x113) {\n                if (arg_ch == 0x312) {\n                    if (*0x4c10c5 == '\\0') {\n                        fcn.0043b31f(&arg_10h);\n                    }\n                }\n                else {\n                    if (arg_ch == 0x401) {\n                        fcn.00445fdb(arg_8h, in_ECX, in_ECX, arg_14h);\n                        goto code_r0x00402a72;\n                    }\ncode_r0x00402a1f:\n                    if ((arg_ch == *0x4c2368) && (*0x4c10c6 == '\\x01')) {\n                        fcn.00402b94();\n                        fcn.00403598();\n                    }\n                }\n                goto code_r0x00402a2b;\n            }\n            fcn.00401e58(arg_8h, arg_10h);\n        }\ncode_r0x00402a72:\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00402a2b:\n        uVar2 = (*_sym.imp.USER32.dll_DefWindowProcW)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar2;\n}\n",
        "token_count": 866
    },
    "00402ac7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402ac7(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint unaff_ESI;\n    \n    while (*0x4c1874 != 0) {\n        puVar1 = **(*0x4c1870 + -4 + *0x4c1874 * 4);\n        if (puVar1 == NULL) {\n            fcn.004041e7();\n        }\n        else {\n            (*_sym.imp.USER32.dll_DestroyWindow)(*puVar1);\n        }\n    }\n    fcn.00402b6e();\n    while (*0x4c18a0 != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(*(**0x4c189c + 8));\n        fcn.00402b2b();\n    }\n    if (*0x4c183c != 0) {\n        do {\n            iVar2 = **0x4c1840;\n            fcn.00446417(unaff_ESI);\n            if (iVar2 != 0) {\n                fcn.00468ba4(extraout_ECX);\n            }\n        } while (*0x4c183c != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "00402b94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402b94(int32_t param_1)\n\n{\n    uint lpData;\n    uint var_3b4h;\n    uint var_3b0h;\n    \n    if (*0x4c10c6 != '\\0') {\n        *0x4c10c6 = '\\0';\n        *(param_1 + 0x19c) = 0;\n        fcn.00421970(&var_3b4h, 0, 0x3b4);\n        var_3b4h = *0x4c10e8;\n        lpData = 0x3a8;\n        var_3b0h = 1;\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(2, &lpData);\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "00402d7f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d7f(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = param_1[1];\n        iVar2 = *(iVar1 + 0x38);\n        if (iVar1 != 0) {\n            fcn.00402db5(iVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    if (*(param_1 + 2) == '\\0') {\n        iVar1 = param_1[1];\n        iVar2 = *(iVar1 + 0x38);\n        if (iVar1 != 0) {\n            fcn.00402db5(iVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    else {\n        *(param_1 + 9) = 1;\n    }\n    *param_1 = *param_1 + -1;\n    return;\n}\n",
        "token_count": 248
    },
    "00405cd3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405cd3(uint *param_1)\n\n{\n    *param_1[3] = *param_1[3] + -1;\n    if (*param_1[3] == 0) {\n        fcn.0042017e(*param_1);\n        fcn.0042017e(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004030a5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004030a5(void)\n\n{\n    code *pcVar1;\n    uint noname_0;\n    uint noname_0_00;\n    uint arg_10h;\n    uint ARG_0;\n    uint var_2ch;\n    code *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n    var_14h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f00);\n    pcVar1 = _sym.imp.USER32.dll_LoadIconW;\n    *0x4c1110 = (*_sym.imp.USER32.dll_LoadIconW)(*0x4c10b8, 99);\n    *0x4c1118 = (*pcVar1)(*0x4c10b8, 0xa4);\n    *0x4c111c = (*pcVar1)(*0x4c10b8, 0xa2);\n    if (*(*0x4c236c + 0x1d) == '\\0') {\n        arg_10h = 4;\n    }\n    else {\n        arg_10h = 0xffffffff;\n    }\n    *0x4c1114 = fcn.0040318a(noname_0, noname_0, arg_10h);\n    var_1ch = *0x4c10b8;\n    var_18h = *0x4c1110;\n    ARG_0 = 0x30;\n    var_2ch = 0x23;\n    var_24h = 0;\n    var_20h = 0;\n    var_ch = 0;\n    var_8h = 0x49daa8;\n    var_28h = fcn.004029c2;\n    var_4h = *0x4c1114;\n    *0x4c10b4 = (*_sym.imp.USER32.dll_RegisterClassExW)(&ARG_0);\n    fcn.00402f58(noname_0_00, *0x4c1110, *0x4c1114);\n    return;\n}\n",
        "token_count": 529
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv, uint noname_1, uint argv)\n\n{\n    uint uVar1;\n    \n    if (*(*0x4c236c + 0x1d) == '\\0') {\n        uVar1 = 1;\n    }\n    else {\n        *0x4c10b8 = argv;\n        *0x4c10bc = 0;\n        *0x4c10b0 = 0;\n        fcn.00412570();\n        *0x4c10ec = (*_sym.imp.UxTheme.dll_IsThemeActive)();\n        fcn.00422025(0x43b35d);\n        fcn.0042208d(1);\n        fcn.004032de();\n        fcn.0040374e(argv);\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x2001, 0, *(*0x4c2370 + 4), 2);\n        uVar1 = *0x4c10bc;\n        fcn.00412570();\n        fcn.00412570();\n    }\n    return uVar1;\n}\n",
        "token_count": 243
    },
    "0040374e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040374e(uint arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint noname_2;\n    uint uVar4;\n    uint var_43ch;\n    uint lpPathName;\n    uint var_18h;\n    char var_6h;\n    uint var_5h;\n    \n    var_5h._0_1_ = '\\0';\n    cVar1 = '\\0';\n    cVar2 = '\\0';\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &lpPathName);\n    fcn.00404257(arg_8h, &var_6h);\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_MessageBoxA)\n                  (0, \n                   \"This is a compiled AutoIt script. AV researchers please email avsupport@autoitscript.com for support.\"\n                   , 0x4b2934, 0x10);\n        return;\n    }\n    if (*0x4c1124 == 0) {\n        *0x4c10bc = 0xffffffff;\n    }\n    else {\n        if (*0x4c1124 == 1) {\n            fcn.00442f5b(1, *0x4c112c, 0xffffffff);\n            *0x4c22ea = *0x4c10c2;\n        }\n        else {\n            cVar1 = fcn.00403bff(0x4c113c, 0x4c1124, noname_2, &var_5h);\n            cVar2 = *0x4c22e9;\n            if (cVar1 == '\\0') {\n                *0x4c10bc = 1;\n                goto code_r0x00403859;\n            }\n            *0x4c1128 = *0x4c22e8;\n            (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(0x4c113c, 0x104, &var_43ch, 0x4c1120);\n            cVar1 = var_5h;\n        }\n        iVar3 = fcn.004034f3(0x4c113c, *0x4c1124);\n        if (iVar3 != 0) {\n            fcn.00402c7d();\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(&lpPathName);\n            *0x4c10bc = 1;\n            return;\n        }\n        if (((cVar2 == '\\x01') && (cVar2 = fcn.0043be31(),  cVar2 == '\\0')) && (var_6h == '\\0')) {\n            (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &var_43ch, 0x104);\n            fcn.0040caee(0x49daa4);\n            if (cVar1 == '\\0') {\n                fcn.004039e8(arg_8h);\n                uVar4 = 1;\n            }\n            else {\n                fcn.004039e8(0x4b29a0);\n                uVar4 = 0x4c113c;\n                fcn.004039e8(0x4c113c);\n                fcn.004039e8(0x4b29a0);\n            }\n            uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)(0x4b29a4, &var_43ch, var_18h, &lpPathName, uVar4);\n            (*_sym.imp.SHELL32.dll_ShellExecuteW)(uVar4);\n            fcn.00405cd3();\n        }\n        else {\n            fcn.004030a5();\n            fcn.00402e9d();\n            if (*0x4c1128 == '\\0') {\n                fcn.00403598();\n            }\n            fcn.0040e1f0(1);\n            if (*0x4c1128 == '\\0') {\n                fcn.00402b94();\n            }\n        }\n        fcn.00402c7d();\n    }\ncode_r0x00403859:\n    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(&lpPathName);\n    return;\n}\n",
        "token_count": 977
    },
    "0040387e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040387e(void)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    int32_t *piVar2;\n    uint uVar3;\n    \n    piVar2 = 0x4c1aa4;\n    do {\n        if (*piVar2 != 0) {\n            fcn.0044aa9c(*piVar2);\n            *piVar2 = 0;\n        }\n        piVar2 = piVar2 + 1;\n    } while (piVar2 < 0x4c22c0);\n    fcn.004038c4(0x4c1a8c, 0x4c1a90);\n    uVar3 = 0x4c1a98;\n    fcn.004038c4(0x4c1a98, 0x4c1a9c);\n    if (*0x4c197c != 0) {\n        do {\n            iVar1 = **0x4c1980;\n            fcn.00446417(uVar3);\n            if (iVar1 != 0) {\n                fcn.00468ba4(extraout_ECX);\n            }\n        } while (*0x4c197c != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "004038c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004038c4(int32_t *arg_8h, char *arg_ch)\n\n{\n    if ((*arg_8h != 0) && (*arg_ch != '\\0')) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*arg_8h);\n    }\n    *arg_8h = 0;\n    *arg_ch = '\\0';\n    return;\n}\n",
        "token_count": 86
    },
    "004038e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004038e4(int32_t param_1)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint in_stack_fffffb0c;\n    ushort auStack1220 [116];\n    uint uStack988;\n    uint uStack984;\n    uint uStack980;\n    uint uStack976;\n    uchar auStack964 [960];\n    \n    if (*0x4c10c6 == '\\0') {\n        return;\n    }\n    fcn.00407b6e(0x104);\n    if (*0x4c10c5 == '\\x01') {\n        (*_sym.imp.USER32.dll_LoadStringW)(*0x4c10b8, 0x65, auStack1220, 0x7f);\n    }\n    else {\n        auStack1220[0] = 0;\n    }\n    fcn.00407e53(auStack1220);\n    if (*0x4c10c3 == '\\0') {\n        if (*(param_1 + 0x60) != 0) {\n            fcn.0040c935(param_1 + 0x5c);\n            goto code_r0x00403956;\n        }\n    }\n    else {\n        fcn.004039e8(*0x4c1120);\n        arg_8h = *0x4c143c;\n        iVar1 = fcn.00443438(*0x4c143c);\n        if (iVar1 == 0) goto code_r0x00403956;\n        fcn.004039e8(L\"\\nLine: \");\n        in_stack_fffffb0c = fcn.00443438(arg_8h);\n    }\n    fcn.004039e8(in_stack_fffffb0c);\ncode_r0x00403956:\n    fcn.00421970(&uStack984, 0, 0x3b4);\n    uStack988 = 0x3a8;\n    uStack984 = *0x4c10e8;\n    uStack980 = 1;\n    uStack976 = 4;\n    fcn.00403b1e(0x80);\n    fcn.00421943(auStack964, &stack0xfffffb24);\n    (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &uStack988);\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 530
    },
    "00403e78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403ea8)\n\nvoid __fastcall fcn.00403e78(uint *param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint hLibModule;\n    uint var_4h;\n    \n    cVar1 = fcn.00403eb3();\n    if (cVar1 != '\\0') {\n        pcVar2 = fcn.00403ef0(*param_1);\n        (*pcVar2)();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00403ec5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403ec5(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32.dll\");\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"Wow64RevertWow64FsRedirection\");\n            param_1[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00403f32": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403f32(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32.dll\");\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"Wow64DisableWow64FsRedirection\");\n            param_1[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00403f5d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403f8d)\n\nuint * __fastcall fcn.00403f5d(uint *param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint hLibModule;\n    uint var_4h;\n    \n    *param_1 = 0;\n    cVar1 = fcn.00403f20();\n    if (cVar1 != '\\0') {\n        pcVar2 = fcn.00403f08(param_1);\n        (*pcVar2)();\n    }\n    return param_1;\n}\n",
        "token_count": 128
    },
    "00404010": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404010(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_28h;\n    char var_24h [4];\n    uchar auStack36 [8];\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    uVar1 = fcn.0042010a(0x10000);\n    fcn.00404bce(uVar1);\n    iVar3 = 0;\n    do {\n        var_24h[iVar3 + -4] = *(iVar3 + 0x4bbc10);\n        auStack36[iVar3] = *(iVar3 + 0x4bbc18);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 8);\n    fcn.0041faa0(&var_18h, str.AU3_, 4);\n    if (in_ECX[3] != 0) {\n        if (arg_8h == '\\0') {\n            fcn.0044d03f();\n        }\n        else {\n            fcn.004031f2();\n        }\n    }\n    arg_8h = fcn.004041cb(*in_ECX);\n    while( true ) {\n        if (*(in_ECX + 5) == '\\0') {\n            uVar1 = 0x10000;\n        }\n        else {\n            uVar1 = 0x18;\n        }\n        var_8h = fcn.0040417d(var_14h, 1, uVar1, *in_ECX);\n        if (var_8h < 0x18) break;\n        iVar3 = 0;\n        if (0 < var_8h + -0x14) {\n            iVar4 = var_14h + 2;\n            do {\n                iVar2 = 0;\n                do {\n                    if (var_24h[iVar2 + -4] != *(iVar4 + -2 + iVar2)) break;\n                    if (var_24h[iVar2 + -3] != *(iVar4 + -1 + iVar2)) {\n                        iVar2 = iVar2 + 1;\n                        break;\n                    }\n                    if (var_24h[iVar2 + -2] != *(iVar4 + iVar2)) {\n                        iVar2 = iVar2 + 2;\n                        break;\n                    }\n                    if (var_24h[iVar2 + -1] != *(iVar4 + 1 + iVar2)) {\n                        iVar2 = iVar2 + 3;\n                        break;\n                    }\n                    if (var_24h[iVar2] != *(iVar4 + 2 + iVar2)) {\n                        iVar2 = iVar2 + 4;\n                        break;\n                    }\n                    iVar2 = iVar2 + 5;\n                } while (iVar2 < 0x14);\n                if (iVar2 == 0x14) {\n                    fcn.004041a7(*in_ECX, arg_8h + 0x14 + iVar3, 0);\n                    fcn.0040417d(&var_ch, 4, 1, *in_ECX);\n                    if (var_ch == 0x36304145) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 4;\n                    }\n                    goto code_r0x0040410e;\n                }\n                iVar3 = iVar3 + 1;\n                iVar4 = iVar4 + 1;\n            } while (iVar3 < var_8h + -0x14);\n        }\n        if (*(in_ECX + 5) != '\\0') break;\n        arg_8h = arg_8h + -0x14 + var_8h;\n        fcn.004041a7(*in_ECX, 0xffffffec, 1);\n    }\n    uVar1 = 3;\ncode_r0x0040410e:\n    fcn.00404fd2();\n    return uVar1;\n}\n",
        "token_count": 896
    },
    "0040417d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040417d(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (*(in_ECX + 0x14) == '\\0') {\n        var_4h = fcn.004244ae(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        (**(**(in_ECX + 0x10) + 0xc))(*(in_ECX + 0x10), arg_8h, arg_ch * arg_10h, &var_4h);\n    }\n    return var_4h;\n}\n",
        "token_count": 172
    },
    "004041a7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004041a7(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    int32_t var_8h;\n    \n    if (*(in_ECX + 0x14) == '\\0') {\n        var_8h = fcn.0042471d(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        var_8h = in_ECX;\n        (**(**(in_ECX + 0x10) + 0x14))(*(in_ECX + 0x10), arg_ch, arg_ch >> 0x1f, arg_10h, &var_8h);\n    }\n    return var_8h;\n}\n",
        "token_count": 170
    },
    "004041cb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004041cb(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t var_8h;\n    \n    if (*(in_ECX + 0x14) == '\\0') {\n        var_8h = fcn.00424af5(arg_8h);\n    }\n    else {\n        var_8h = in_ECX;\n        (**(**(in_ECX + 0x10) + 0x14))(*(in_ECX + 0x10), 0, 0, 1, &var_8h);\n    }\n    return var_8h;\n}\n",
        "token_count": 141
    },
    "00404257": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404257(uint arg_8h, uchar *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint noname_0;\n    uint arg_ch_00;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00403c70();\n    var_4h = 0;\n    fcn.0040a359(arg_8h);\n    *arg_ch = var_2ch;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x4c113c, 0x104);\n    cVar1 = fcn.004034c1(noname_0, 0x4c113c);\n    *0x4c1120 = 0x4c113c;\n    fcn.00408182(&var_4ch);\n    fcn.0040caee(L\"CMDLINERAW\");\n    fcn.0040d380(&var_14h, &var_28h, 1, 0);\n    fcn.00405cd3();\n    fcn.00412570();\n    var_1ch = 1;\n    var_28h = 0;\n    fcn.0040caee(L\"CMDLINE\");\n    fcn.0040d380(&var_14h, &var_28h, 0x100, 0);\n    fcn.00405cd3();\n    fcn.0040caee(L\"CMDLINE\");\n    fcn.0040d2d2(&var_14h, &arg_8h, &var_4h, 0);\n    fcn.00405cd3();\n    fcn.0040d3d2();\n    fcn.00404477(&var_14h);\n    arg_ch_00 = var_14h;\n    iVar2 = fcn.00421bc7(L\"/ErrorStdOut\", var_14h);\n    if (iVar2 == 0) {\n        *0x4c10c2 = 1;\n        var_34h = var_34h + -1;\n        fcn.00404477(&var_14h);\n        arg_ch_00 = var_14h;\n    }\n    iVar2 = fcn.00421bc7(L\"/AutoIt3OutputDebug\", arg_ch_00);\n    if (iVar2 == 0) {\n        *0x4c10c1 = 1;\n        var_34h = var_34h + -1;\n        fcn.00404477(&var_14h);\n        arg_ch_00 = var_14h;\n    }\n    iVar2 = fcn.00421bc7(L\"/AutoIt3ExecuteLine\", arg_ch_00);\n    if (iVar2 == 0) {\n        *0x4c1124 = cVar1 == '\\0';\n        *0x4c1128 = 1;\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x4c113c, 0x104);\n        fcn.00404477(&var_14h);\n        fcn.0040c935(&var_14h);\n        var_34h = var_34h + -2;\n        fcn.00404477(&var_14h);\n        arg_ch_00 = var_14h;\n    }\n    iVar2 = fcn.00421bc7(L\"/AutoIt3ExecuteScript\", arg_ch_00);\n    if (iVar2 == 0) {\n        if (cVar1 == '\\0') {\n            *0x4c1124 = 3;\n        }\n        else {\n            *0x4c1124 = 0;\n        }\n        fcn.00404477(&var_14h);\n        fcn.00421943(0x4c113c, var_14h);\n        var_34h = var_34h + -2;\n        fcn.00404477(&var_14h);\n        arg_ch_00 = var_14h;\n    }\n    if (*0x4c113c == 0) {\n        fcn.00421943(0x4c113c, arg_ch_00);\n        var_34h = var_34h + -1;\n        fcn.00404477(&var_14h);\n    }\n    if (var_34h < 0) {\n        var_34h = 0;\n    }\n    fcn.00403320(arg_8h, 1);\n    piVar3 = fcn.004114a0(arg_8h, 0, 1);\n    fcn.00412570();\n    piVar3[3] = 1;\n    *piVar3 = var_34h;\n    iVar2 = 0;\n    if (0 < var_34h) {\n        do {\n            iVar2 = iVar2 + 1;\n            fcn.004114a0(arg_8h, 0, 1);\n            fcn.00407bef(&var_14h);\n            fcn.00404477(&var_14h);\n        } while (iVar2 < var_34h);\n    }\n    fcn.00405cd3();\n    fcn.00412570();\n    fcn.00403c4b();\n    return;\n}\n",
        "token_count": 1220
    },
    "004044ab": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004044ab(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    ulong uVar5;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_30h;\n    uint var_20h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 1;\n    fcn.00404ae8();\n    var_40h = 1;\n    iVar4 = fcn.00405322(arg_8h, &var_8h, &var_1h);\n    if (-1 < iVar4) {\n        iVar4 = *(*(arg_8h + 4) + var_8h * 4);\n        if (*(iVar4 + 8) == 0x7f) {\n            iVar4 = *arg_ch;\n            var_3ch = iVar4 + -1;\n            bVar3 = false;\n            while( true ) {\n                arg_8h_00 = *arg_ch;\n                *arg_ch = arg_8h_00 + 1;\n                uVar5 = fcn.00405554(arg_8h_00);\n                arg_ch = uVar5 >> 0x20;\n                if ((uVar5 == 0) || (bVar3)) break;\n                piVar1 = **(uVar5 + 4);\n                if ((((*(piVar1 + 2) == 0) && (iVar2 = *piVar1,  iVar2 != 9)) && (iVar2 == 10)) && (extraout_ECX == 0))\n                {\n                    bVar3 = true;\n                    var_38h = arg_8h_00;\n                }\n            }\n            if (var_1h == '\\0') {\n                *arg_ch = var_38h + 1;\n            }\n            else {\n                *arg_ch = iVar4;\n                fcn.00404b02(&var_40h);\n            }\n        }\n        else {\n            fcn.0044d520(0x72, *(iVar4 + 10));\n        }\n    }\n    fcn.00412570();\n    fcn.00412570();\n    return;\n}\n",
        "token_count": 573
    },
    "004045a7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004045a7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t var_4h;\n    \n    *(*(*(param_1 + -0x4b4) + 4) + -0x4b4 + param_1) = 0x4b182c;\n    iVar1 = *(*(param_1 + -0x4b4) + 4);\n    *(iVar1 + -0x4b8 + param_1) = iVar1 + -0x4b4;\n    var_4h = param_1;\n    if (*(param_1 + -0x3cc) != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + -0x3cc));\n    }\n    uVar4 = 0;\n    (*_sym.imp.WINMM.dll_mciSendStringW)(L\"close all\", 0, 0, 0);\n    uVar5 = 0;\n    if (*(param_1 + -0x2e8) != 0) {\n        do {\n            puVar2 = **(*(param_1 + -0x2ec) + uVar5 * 4);\n            if (puVar2 != NULL) {\n                uVar6 = *puVar2;\n                (*_sym.imp.USER32.dll_UnregisterHotKey)(*0x4c10e8, uVar6);\n                iVar1 = **(*(param_1 + -0x2ec) + uVar5 * 4);\n                if (iVar1 != 0) {\n                    fcn.0041f902(uVar6, iVar1);\n                }\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *(param_1 + -0x2e8));\n    }\n    if (*(param_1 + -0x318) != 0) {\n        do {\n            piVar3 = **(*(param_1 + -0x31c) + uVar4 * 4);\n            if (piVar3 != NULL) {\n                if (*piVar3 == 0) {\n                    iVar1 = piVar3[1];\n                    fcn.004050ec();\n                    *(iVar1 + 0x2c) = 0;\n                    *(iVar1 + 0x30) = 0;\n                }\n                else {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(piVar3[2]);\n                    fcn.0042017e(*(**(*(param_1 + -0x31c) + uVar4 * 4) + 0xc));\n                }\n                fcn.0042017e(**(*(param_1 + -0x31c) + uVar4 * 4));\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -0x318));\n    }\n    fcn.00403029();\n    uVar4 = 0;\n    if (*(param_1 + -0x308) != 0) {\n        do {\n            piVar3 = *(*(param_1 + -0x30c) + uVar4 * 4);\n            if (*piVar3 != 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(*piVar3);\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -0x308));\n    }\n    uVar4 = 0;\n    if (*(param_1 + -0x2f8) != 0) {\n        do {\n            iVar1 = **(*(param_1 + -0x2fc) + uVar4 * 4);\n            if (iVar1 != 0) {\n                uVar6 = 0x8000;\n                (*_sym.imp.KERNEL32.dll_VirtualFree)(*(iVar1 + 0x10), 0, 0x8000);\n                iVar1 = **(*(param_1 + -0x2fc) + uVar4 * 4);\n                if (iVar1 != 0) {\n                    fcn.0044d323(uVar6, iVar1);\n                }\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -0x2f8));\n    }\n    fcn.00412570();\n    *(param_1 + -0x2d0) = 1;\n    *(param_1 + -0x2dc) = 0;\n    if (*(*(*(param_1 + -0x4b4) + 4) + param_1 + -0x4b0) != 0) {\n        var_4h = 0;\n        do {\n            fcn.00402f0e(&var_4h);\n            fcn.00402d7f();\n        } while (*(*(*(param_1 + -0x4b4) + 4) + param_1 + -0x4b0) != 0);\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    puVar2 = *(param_1 + -0x20);\n    if (puVar2 != NULL) {\n        piVar3 = puVar2 + 1;\n        *piVar3 = *piVar3 + -1;\n        if (*piVar3 == 0) {\n            (***puVar2)(1);\n        }\n    }\n    fcn.004032c9();\n    fcn.00402e6d();\n    fcn.00405cd3();\n    fcn.00404208();\n    fcn.00402e54();\n    fcn.00402de4();\n    fcn.00405cd3();\n    fcn.00412570();\n    fcn.00402e54();\n    fcn.00402c64();\n    fcn.00402c64();\n    fcn.00402e54();\n    fcn.0041f8a4();\n    fcn.00402c64();\n    fcn.00402e8f();\n    fcn.00402f47();\n    fcn.00405cd3();\n    fcn.00405202();\n    fcn.00403d9b();\n    fcn.00403d9b();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00403282();\n    return;\n}\n",
        "token_count": 1451
    },
    "004048c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004048c8(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t iVar3;\n    int32_t *piVar4;\n    code *pcVar5;\n    code *pcVar6;\n    char cVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    uint *puVar10;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint32_t unaff_ESI;\n    uint *puVar11;\n    int32_t iVar12;\n    uint *unaff_EDI;\n    uint32_t uVar13;\n    int32_t iStack104;\n    int32_t iStack100;\n    uint uStack92;\n    uint uStack88;\n    int32_t iStack84;\n    uint uStack68;\n    uint auStack64 [4];\n    int32_t iStack48;\n    \n    puVar11 = &uStack88;\n    cVar7 = fcn.0040cf2c(arg_8h, &uStack92, puVar11);\n    pcVar6 = _sym.imp.USER32.dll_SendMessageW;\n    pcVar5 = _sym.imp.COMCTL32.dll_ImageList_Destroy;\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    puVar10 = **(*(in_ECX + 0x60) + iStack104 * 4);\n    arg_8h_00 = **(*(in_ECX + 0x74) + iStack100 * 4);\n    uVar1 = *(arg_8h_00 + 0x24);\n    uVar13 = unaff_ESI & 0xffffff | uVar1 << 0x18;\n    if (uVar1 < 0x12) {\n        if (uVar1 == 0x11) {\n            puVar11 = unaff_EDI;\n            (*_sym.imp.USER32.dll_SendMessageW)(arg_8h_00[0xd], 0x1101, 0, arg_8h_00[4]);\n            goto code_r0x00404960;\n        }\n        if (uVar1 < 0xd) {\n            if (uVar1 == 0xc) {\n                iVar12 = 3;\n                puVar11 = unaff_EDI;\n                if (2 < *(in_ECX + 0x84)) {\n                    do {\n                        iVar8 = **(*(in_ECX + 0x74) + iVar12 * 4);\n                        if ((iVar8 != 0) && (*(iVar8 + 0xc) == arg_8h_00[3])) {\n                            if ((*(iVar8 + 0x90) == '\\x0f') || (*(iVar8 + 0x90) == '\\x0e')) {\n                                fcn.00404a54(iVar12);\n                            }\n                            else {\n                                *(iVar8 + 0xc) = 0;\n                            }\n                        }\n                        iVar12 = iVar12 + 1;\n                        puVar11 = unaff_EDI;\n                    } while (iVar12 <= *(in_ECX + 0x84));\n                }\n                if (arg_8h_00[3] == puVar10[0x68]) {\n                    (*_sym.imp.USER32.dll_DestroyMenu)(puVar10[0x68]);\n                    puVar11[0x68] = 0;\n                }\n                else {\n                    (*_sym.imp.USER32.dll_DestroyMenu)(arg_8h_00[3]);\n                }\n                goto code_r0x00404960;\n            }\n            if (1 < uVar1) {\n                iVar12 = 3;\n                if (uVar1 < 4) {\n                    if ((0 < puVar10[0x71]) && (arg_8h == puVar10[0x71])) {\n                        puVar10[0x71] = 0;\n                    }\n                }\n                else {\n                    if (uVar1 == 10) {\n                        puVar11 = unaff_EDI;\n                        for (iVar12 = *(in_ECX + 0x84); 2 < iVar12; iVar12 = iVar12 + -1) {\n                            iVar8 = **(*(in_ECX + 0x74) + iVar12 * 4);\n                            if ((iVar8 != 0) && (*(iVar8 + 0x90) == '\\v')) {\n                                fcn.004048c8(iVar12);\n                            }\n                        }\n                        puVar10[0x62] = 0;\n                        puVar10[99] = 0xffffffff;\n                        puVar10[100] = 0xffffffff;\n                        puVar10[0x65] = 0;\n                        *(puVar10 + 0x66) = 0;\n                        (*_sym.imp.USER32.dll_DestroyWindow)(*arg_8h_00);\n                        if (arg_8h_00[0x10] != 0) {\n                            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0x10]);\n                        }\n                        goto code_r0x00404960;\n                    }\n                    if (uVar1 == 0xb) {\n                        arg_ch = puVar10[100];\n                        (*_sym.imp.USER32.dll_SendMessageW)(puVar10[0x62], 0x1308, *(arg_8h_00 + 0x93), 0);\n                        iVar8 = fcn.0041b155(*0x187);\n                        iVar8 = *(**(*(in_ECX + 0x74) + iVar8 * 4) + 0x40);\n                        puVar11 = puVar10;\n                        if ((iVar8 != 0) && (*(arg_8h_00 + 0x22) != -1)) {\n                            (*_sym.imp.COMCTL32.dll_ImageList_Remove)(iVar8, *(arg_8h_00 + 0x22));\n                            puVar11 = puVar10;\n                        }\n                        if (2 < *(in_ECX + 0x84)) {\n                            do {\n                                iVar8 = **(*(in_ECX + 0x74) + iVar12 * 4);\n                                if ((iVar8 != 0) && (uVar1 = *(iVar8 + 0x93),  uVar1 != 0xff)) {\n                                    if ((uVar1 == *(arg_8h_00 + 0x93)) && (*(iVar8 + 0x90) != '\\v')) {\n                                        fcn.004048c8(iVar12);\n                                    }\n                                    else {\n                                        if (*(arg_8h_00 + 0x93) < uVar1) {\n                                            *(iVar8 + 0x93) = uVar1 - 1;\n                                        }\n                                        iVar8 = **(*(in_ECX + 0x74) + iVar12 * 4);\n                                        if ((((*(iVar8 + 0x90) == '\\v') && (-1 < *(arg_8h_00 + 0x22))) &&\n                                            (iVar2 = *(iVar8 + 0x88),  -1 < iVar2)) && (*(arg_8h_00 + 0x22) < iVar2)) {\n                                            *(iVar8 + 0x88) = iVar2 + -1;\n                                            uStack68 = 2;\n                                            iStack48 = *(**(*(in_ECX + 0x74) + iVar12 * 4) + 0x88);\n                                            (*_sym.imp.USER32.dll_SendMessageW)\n                                                      (puVar11[0x62], 0x133d, \n                                                       *(**(*(in_ECX + 0x74) + iVar12 * 4) + 0x93), &uStack68);\n                                        }\n                                    }\n                                }\n                                iVar12 = iVar12 + 1;\n                            } while (iVar12 <= *(in_ECX + 0x84));\n                        }\n                        if (*(arg_8h_00 + 0x93) == arg_ch) {\n                            if (arg_ch == puVar11[99]) {\ncode_r0x0047e2c5:\n                                arg_ch = arg_ch - 1;\n                            }\n                        }\n                        else {\n                            puVar11[100] = 0xffffffff;\n                            if (*(arg_8h_00 + 0x93) < arg_ch) goto code_r0x0047e2c5;\n                        }\n                        *(arg_8h_00 + 0x93) = 0xff;\n                        fcn.0046e1a7(puVar11, arg_ch);\n                        puVar11[99] = puVar11[99] + -1;\n                        puVar11[0x65] = 0;\n                        goto code_r0x00404960;\n                    }\n                }\n            }\n        }\n        else if (0xd < uVar1) {\n            if (uVar1 < 0x10) {\n                if (uVar1 == 0xe) {\n                    uStack68 = 0x30;\n                    fcn.00421970(auStack64, 0, 0x2c);\n                    auStack64[0] = 4;\n                    iVar12 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(arg_8h_00[3], arg_8h, 0, &uStack68);\n                    if (((iVar12 != 0) && (iStack48 != 0)) && (iVar8 = 3,  iVar12 = iStack48,  2 < *(in_ECX + 0x84))) {\n                        do {\n                            iVar3 = **(*(in_ECX + 0x74) + iVar8 * 4);\n                            if (((iVar3 != 0) && (*(iVar3 + 0xc) == iVar12)) && (*(iVar3 + 0x90) == '\\x0f')) {\n                                fcn.00404a54(iVar8);\n                                iVar12 = iStack100;\n                            }\n                            iVar8 = iVar8 + 1;\n                        } while (iVar8 <= *(in_ECX + 0x84));\n                    }\n                }\n                iVar12 = (*_sym.imp.USER32.dll_DeleteMenu)(arg_8h_00[3], arg_8h, 0);\n                if (iVar12 == 0) {\n                    (*_sym.imp.USER32.dll_DeleteMenu)(puVar11[0x67], arg_8h, 0);\n                }\n                if ((puVar11[0x67] != 0) &&\n                   (iVar12 = (*_sym.imp.USER32.dll_GetMenuItemCount)(puVar11[0x67]),  iVar12 == 0)) {\n                    (*_sym.imp.USER32.dll_SetMenu)(*puVar11, 0);\n                    (*_sym.imp.USER32.dll_DestroyMenu)(puVar11[0x67]);\n                    puVar11[0x67] = 0;\n                }\n                (*_sym.imp.USER32.dll_DrawMenuBar)(*puVar11);\n                goto code_r0x00404960;\n            }\n            if (uVar1 == 0x10) {\n                if (arg_8h_00[0x10] != 0) {\n                    (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0x10]);\n                }\n                iVar12 = 3;\n                if (2 < *(in_ECX + 0x84)) {\n                    do {\n                        iVar8 = **(*(in_ECX + 0x74) + iVar12 * 4);\n                        if (((iVar8 != 0) && (*(iVar8 + 0x34) == *arg_8h_00)) && (*(iVar8 + 0x90) == '\\x11')) {\n                            fcn.00404a54(iVar12);\n                        }\n                        iVar12 = iVar12 + 1;\n                    } while (iVar12 <= *(in_ECX + 0x84));\n                }\n            }\n        }\n    }\n    else if (uVar1 == 0x13) {\n        if (arg_8h_00[0xe] != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0xe]);\n        }\n        if (arg_8h_00[0xf] != 0) {\n            (*pcVar5)(arg_8h_00[0xf]);\n        }\n        iVar12 = 3;\n        if (2 < *(in_ECX + 0x84)) {\n            do {\n                iVar8 = **(*(in_ECX + 0x74) + iVar12 * 4);\n                if ((((iVar8 != 0) && (*(iVar8 + 4) == unaff_EDI[1])) && (*(iVar8 + 0x90) == '\\x14')) &&\n                   (*(iVar8 + 0x34) == *arg_8h_00)) {\n                    fcn.004048c8(iVar12);\n                }\n                iVar12 = iVar12 + 1;\n            } while (iVar12 <= *(in_ECX + 0x84));\n        }\n    }\n    else {\n        if (uVar1 == 0x14) {\n            iStack84 = arg_8h;\n            uStack92 = 1;\n            puVar10 = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h_00[0xd], 0x1053, 0xffffffff, &uStack92);\n            if (puVar10 == puVar11) {\n                return 0;\n            }\n            puVar11 = unaff_EDI;\n            (*pcVar6)(arg_8h_00[0xd], 0x1008, puVar10, 0);\n            goto code_r0x00404960;\n        }\n        if (uVar1 == 0x16) {\n            iVar12 = 3;\n            if (2 < *(in_ECX + 0x84)) {\n                ppiVar9 = *(in_ECX + 0x74) + 0xc;\n                do {\n                    piVar4 = **ppiVar9;\n                    if (((piVar4 != NULL) && (piVar4[1] == puVar10[1])) &&\n                       ((*(piVar4 + 0x24) == '\\x03' && (*piVar4 == arg_8h_00[0xd])))) {\n                        puVar11 = **(*(in_ECX + 0x74) + iVar12 * 4);\n                        (*_sym.imp.USER32.dll_MoveWindow)\n                                  (*puVar11, *(puVar11 + 0x22), *(puVar11 + 0x8a), *(puVar11 + 0x23), *(puVar11 + 0x8e)\n                                   , 0);\n                        break;\n                    }\n                    iVar12 = iVar12 + 1;\n                    ppiVar9 = ppiVar9 + 1;\n                } while (iVar12 <= *(in_ECX + 0x84));\n            }\n        }\n        else if (uVar1 == 0x1b) {\n            fcn.004049ca(puVar10, arg_8h_00);\n        }\n        else if (uVar1 == 0x1d) {\n            puVar11 = unaff_EDI;\n            fcn.0046cefc(arg_8h_00, puVar10);\n            goto code_r0x00404960;\n        }\n    }\n    puVar11 = unaff_EDI;\n    (*_sym.imp.USER32.dll_DestroyWindow)(*arg_8h_00);\ncode_r0x00404960:\n    if (arg_8h_00[0x11] != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x11]);\n    }\n    if (arg_8h_00[0x19] != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x19]);\n    }\n    if (arg_8h_00[0x1a] != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h_00[0x1a]);\n    }\n    if (arg_8h_00[0x14] != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(arg_8h_00[0x14]);\n    }\n    if (puVar11[7] == -1) {\n        puVar11[7] = uVar13;\n    }\n    fcn.00404a54(0xffffffff);\n    return 1;\n}\n",
        "token_count": 3611
    },
    "00404a54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a54(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    iVar3 = arg_8h * 4;\n    iVar1 = **(iVar3 + *(in_ECX + 0x74));\n    if (iVar1 != 0) {\n        fcn.00404ad3(iVar1);\n    }\n    **(iVar3 + *(in_ECX + 0x74)) = 0;\n    *(in_ECX + 0x80) = *(in_ECX + 0x80) + -1;\n    if (arg_8h == *(in_ECX + 0x84)) {\n        if (2 < arg_8h) {\n            ppiVar2 = *(in_ECX + 0x74) + iVar3;\n            do {\n                if (**ppiVar2 != 0) break;\n                arg_8h = arg_8h + -1;\n                ppiVar2 = ppiVar2 + -1;\n            } while (2 < arg_8h);\n        }\n        *(in_ECX + 0x84) = arg_8h;\n    }\n    while ((3 < *(in_ECX + 0x78) && (**(*(in_ECX + 0x74) + -4 + *(in_ECX + 0x78) * 4) == 0))) {\n        fcn.004041e7();\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "00404b02": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b02(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        iVar1 = fcn.0042010a(0x38);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.00404b40(arg_8h);\n        }\n        *(iVar1 + 0x30) = in_ECX[1];\n        in_ECX[1] = iVar1;\n    }\n    else {\n        fcn.0045d1da(arg_8h);\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 183
    },
    "00404ca0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404ca0(int32_t arg_8h, uint32_t lpNumberOfBytesRead)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    if (in_ECX[2] == 0) {\n        in_ECX[2] = 0;\n        in_ECX[3] = 0;\n        fcn.00404dc1();\n    }\n    uVar2 = lpNumberOfBytesRead;\n    uVar4 = 0;\n    if (lpNumberOfBytesRead != 0) {\n        do {\n            if (in_ECX[3] == in_ECX[2]) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(*in_ECX, in_ECX[1], 0x10000, &lpNumberOfBytesRead, 0);\n                if ((iVar3 == 0) || (lpNumberOfBytesRead == 0)) break;\n                in_ECX[2] = lpNumberOfBytesRead;\n                in_ECX[3] = 0;\n            }\n            uVar5 = uVar4 + 1;\n            *(uVar4 + arg_8h) = *(in_ECX[1] + in_ECX[3]);\n            in_ECX[3] = in_ECX[3] + 1;\n            uVar4 = uVar5;\n        } while (uVar5 < uVar2);\n    }\n    puVar1 = in_ECX + 4;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + uVar4;\n    in_ECX[5] = in_ECX[5] + CARRY4(uVar2, uVar4);\n    return uVar4;\n}\n",
        "token_count": 411
    },
    "00404d67": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d67(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    uVar1 = arg_8h + 1;\n    if (in_ECX[2] < uVar1) {\n        if (uVar1 < 0x41c2) {\n            iVar2 = uVar1 * 2;\n        }\n        else {\n            iVar2 = fcn.00471e16();\n        }\n        in_ECX[2] = iVar2;\n        iVar2 = fcn.00403d82(iVar2);\n        in_ECX[2] = iVar2;\n        iVar2 = fcn.0042010a(iVar2);\n        if (*in_ECX != 0) {\n            fcn.0041faa0(iVar2, *in_ECX, in_ECX[1] + 1);\n            fcn.0042017e(*in_ECX);\n        }\n        *in_ECX = iVar2;\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00404ee9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404ee9(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    ulong uVar6;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if ((in_ECX[2] != 0) && ((arg_10h == 1 || (arg_10h == 0)))) {\n        var_8h = arg_ch;\n        uVar3 = arg_8h;\n        if (arg_10h == 1) {\n            uVar3 = in_ECX[4] + arg_8h;\n            var_8h = in_ECX[5] + arg_ch + CARRY4(in_ECX[4], arg_8h);\n        }\n        uVar1 = in_ECX[3];\n        uVar4 = in_ECX[4] - uVar1;\n        iVar2 = (in_ECX[5] - (uVar1 >> 0x1f)) - (in_ECX[4] < uVar1);\n        if ((iVar2 <= var_8h) && ((iVar2 < var_8h || (uVar4 <= uVar3)))) {\n            uVar1 = in_ECX[2];\n            iVar2 = ((uVar1 >> 0x1f) + iVar2 + CARRY4(uVar1, uVar4)) - (uVar1 + uVar4 == 0);\n            if ((var_8h <= iVar2) && ((var_8h < iVar2 || (uVar3 <= (uVar1 + uVar4) - 1)))) {\n                in_ECX[3] = uVar3 - uVar4;\n                in_ECX[4] = uVar3;\n                in_ECX[5] = var_8h;\n                return CONCAT31(uVar4 >> 8, 1);\n            }\n        }\n    }\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    if (arg_10h == 1) {\n        uVar6 = fcn.00404fb3();\n        uVar3 = in_ECX[4] - uVar6;\n        bVar5 = CARRY4(arg_8h, uVar3);\n        arg_8h = arg_8h + uVar3;\n        arg_ch = arg_ch + ((in_ECX[5] - (uVar6 >> 0x20)) - (in_ECX[4] < uVar6)) + bVar5;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(*in_ECX, arg_8h, arg_ch, 0, arg_10h);\n    uVar6 = fcn.00404fb3();\n    in_ECX[4] = uVar6;\n    in_ECX[5] = uVar6 >> 0x20;\n    return uVar6 & 0xffffff00 | iVar2 != 0;\n}\n",
        "token_count": 707
    },
    "00405116": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405116(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    if (in_ECX[2] == 0) {\n        puVar1 = fcn.0042010a(0x28);\n        if (puVar1 == NULL) {\n            puVar1 = NULL;\n        }\n        else {\n            fcn.0040d3d2();\n        }\n        fcn.00405176(arg_8h);\n        fcn.0040b8a7();\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(*puVar1, puVar1[1]);\n        puVar1[9] = 0;\n        if (in_ECX[1] == 0) {\n            *in_ECX = puVar1;\n        }\n        else {\n            *(in_ECX[1] + 0x24) = puVar1;\n        }\n        in_ECX[3] = in_ECX[3] + 1;\n        in_ECX[1] = puVar1;\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00405202": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405202(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] != 0) {\n        fcn.0042017e(param_1[2]);\n    }\n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        return;\n    }\n    do {\n        iVar1 = *(iVar1 + 0x24);\n        fcn.00401926();\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 119
    },
    "00405265": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405265(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.004053b6();\n    arg_8h_00 = fcn.00405554(*(iVar1 + 4));\n    var_8h = 1;\n    iVar1 = fcn.00405322(arg_8h_00, &var_8h, &var_1h);\n    if (-1 < iVar1) {\n        if (var_1h == '\\0') {\n            fcn.0040d9f2();\n        }\n        else {\n            iVar1 = fcn.004053b6();\n            *arg_8h = *(iVar1 + 4) + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "004052c2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004052c2(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 1;\n    iVar1 = fcn.00405322(arg_8h, &var_8h, &var_1h);\n    if (-1 < iVar1) {\n        iVar1 = *(*(arg_8h + 4) + var_8h * 4);\n        if (*(iVar1 + 8) == 0x7f) {\n            if (var_1h == '\\0') {\n                iVar1 = fcn.004053b6();\n                *arg_ch = *(iVar1 + 4) + 1;\n            }\n            else {\n                fcn.0040d9f2();\n            }\n        }\n        else {\n            fcn.0044d520(0x72, *(iVar1 + 10));\n        }\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "00405372": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405372(double *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    \n    iVar1 = *(param_1 + 0xc);\n    piVar2 = iVar1 + -1;\n    if (piVar2 == NULL) {\n        iVar1 = *param_1;\ncode_r0x0040539c:\n        return piVar2 & 0xffffff00 | iVar1 != 0;\n    }\n    if (iVar1 == 2) {\n        uVar3 = *param_1 | *(param_1 + 4);\n        if (uVar3 != 0) {\ncode_r0x004756d1:\n            return CONCAT31(uVar3 >> 8, 1);\n        }\n    }\n    else {\n        if (iVar1 != 3) {\n            if (iVar1 == 4) {\n                iVar1 = *(*(param_1 + 1) + 4);\n            }\n            else {\n                if (iVar1 != 7) {\n                    if (iVar1 == 9) {\n                        return *param_1;\n                    }\n                    uVar3 = iVar1 - 0xb;\n                    if (uVar3 == 0) {\n                        piVar2 = *param_1;\n                        iVar1 = *piVar2;\n                        goto code_r0x0040539c;\n                    }\n                    goto code_r0x004756db;\n                }\n                iVar1 = *param_1;\n            }\n            return iVar1 != 0;\n        }\n        uVar3 = (0.0 < *param_1) << 8 | (*param_1 == 0.0) << 0xe;\n        if (POPCOUNT(uVar3 >> 8 & 0x44) == '\\0') goto code_r0x004756d1;\n    }\ncode_r0x004756db:\n    return uVar3 & 0xffffff00;\n}\n",
        "token_count": 431
    },
    "004053b6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004053b6(int32_t param_1)\n\n{\n    if (*(param_1 + 9) == '\\0') {\n        return *(param_1 + 4);\n    }\n    return *(*(param_1 + 4) + 0x30);\n}\n",
        "token_count": 66
    },
    "00405577": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_164h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405577(int32_t **arg_8h, int32_t **arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    char cVar3;\n    uint16_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t **ppiVar7;\n    int32_t **unaff_EBX;\n    int32_t *piVar8;\n    int32_t **unaff_ESI;\n    uint *puVar9;\n    int32_t **arg_14h;\n    uint uStack404;\n    int32_t **in_stack_fffffe7c;\n    int32_t **in_stack_fffffe80;\n    int32_t *var_164h;\n    uint var_64h;\n    uint var_60h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t **var_20h;\n    uint var_1ch;\n    int32_t **var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    \n    *arg_ch = *arg_ch + 1;\n    var_18h = NULL;\n    var_20h = NULL;\n    var_34h = 0;\n    var_2ch = 0;\n    var_28h = 1;\n    var_1ch = 0;\n    if ((*(arg_8h[1][*arg_ch] + 2) == 0) && (*arg_8h[1][*arg_ch] == 0x2c)) {\n        fcn.0045d443(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        fcn.0040d3d2();\n        piVar8 = arg_8h[1];\n        var_48h = 0x7f;\n        var_3ch = 0x33;\n        if (*(piVar8[*arg_ch] + 8) == 0x33) {\n            var_50h = 0x4e;\n            var_64h = 0x4f;\n            var_4ch = 0x47;\n            var_44h = 0x48;\n            var_38h = 0x40;\n            while( true ) {\n                fcn.0040c935(*piVar8[*arg_ch]);\n                fcn.0040d2d2(&fcn.00405577::var_60h, &fcn.00405577::var_10h, &fcn.00405577::var_1ch, arg_10h);\n                if (var_10h != NULL) break;\n                fcn.0040ca8e(0x49dbf0);\n                fcn.0040d380(&fcn.00405577::var_60h, &fcn.00405577::var_34h, 0x100, arg_10h);\n                fcn.0040d2d2(&fcn.00405577::var_60h, &fcn.00405577::var_10h, &fcn.00405577::var_1ch, arg_10h);\n                *arg_ch = *arg_ch + 1;\n                if (*(arg_8h[1][*arg_ch] + 8) == 0x4e) {\n                    var_18h = NULL;\n                    do {\n                        *arg_ch = *arg_ch + 1;\n                        var_ch = *(arg_8h[1][*arg_ch] + 10);\n                        if (*(arg_8h[1][*arg_ch] + 8) == 0x4f) {\n                            ppiVar7 = arg_8h;\n                            fcn.0045d154(arg_8h);\n                            in_stack_fffffe80 = var_18h;\n                            iVar6 = fcn.0045ec7e(var_18h, *arg_ch, 0, ppiVar7, unaff_EBX);\n                            in_stack_fffffe7c = 0x477952;\n                            fcn.00412570();\n                            var_28h = 1;\n                            var_34h = iVar6;\n                        }\n                        else {\n                            var_164h = &fcn.00405577::var_34h;\n                            unaff_EBX = arg_8h;\n                            iVar6 = fcn.0040fa40(arg_8h, arg_ch, var_164h, 0xffffffff);\n                            if (iVar6 < 0) goto code_r0x00477bd9;\n                        }\n                        iVar6 = fcn.0040cdb4();\n                        if ((iVar6 < 0) || (*(arg_8h[1][*arg_ch] + 8) != 0x4f)) goto code_r0x00477bd9;\n                        *arg_ch = *arg_ch + 1;\n                        uVar5 = fcn.0040cdb4();\n                        piVar8 = *arg_ch;\n                        (&fcn.00405577::var_164h)[var_18h] = uVar5;\n                        var_20h = var_18h + 1;\n                        var_18h = var_20h;\n                    } while (*(arg_8h[1][piVar8] + 8) == 0x4e);\n                    if (var_20h < 1) {\n                        var_164h = var_ch;\n                        break;\n                    }\n                    unaff_ESI = 0x4779e1;\n                    fcn.0040346e();\n                    var_14h = NULL;\n                    if (0 < var_18h) {\n                        do {\n                            in_stack_fffffe7c = (&fcn.00405577::var_164h)[var_14h];\n                            cVar3 = fcn.00403489(in_stack_fffffe7c);\n                            if (cVar3 == '\\0') goto code_r0x00477bd9;\n                            var_14h = var_14h + 1;\n                        } while (var_14h < var_18h);\n                    }\n                    var_164h = var_10h;\n                    cVar3 = fcn.00403320(var_10h, 0);\n                    if (cVar3 == '\\0') break;\n                }\n                piVar8 = arg_8h[1];\n                if (*(piVar8[*arg_ch] + 8) != 0x41) break;\n                var_ch = *arg_ch + 1;\n                *arg_ch = var_ch;\n                iVar6 = piVar8[var_ch];\n                var_14h = *(iVar6 + 10);\n                unaff_EBX = 0x5;\n                if (*(iVar6 + 8) == 0x4e) {\n                    var_164h = 0x477a2f;\n                    cVar3 = fcn.0040d2c0(5);\n                    if (cVar3 == '\\0') {\n                        *arg_ch = var_ch + -1;\n                        ppiVar7 = arg_8h;\n                        fcn.0045d154(arg_8h);\n                        in_stack_fffffe80 = *arg_ch;\n                        in_stack_fffffe7c = NULL;\n                        var_164h = fcn.0045ec7e(0, in_stack_fffffe80, &fcn.00405577::var_20h, ppiVar7, unaff_ESI);\n                        ppiVar7 = 0x1;\n                        var_18h = var_20h;\n                        if (1 < var_20h) {\n                            do {\n                                arg_14h = arg_8h;\n                                fcn.0045d154(arg_8h);\n                                in_stack_fffffe7c = ppiVar7;\n                                uVar5 = fcn.0045ec7e(ppiVar7, *arg_ch, 0, arg_14h, uStack404);\n                                (&fcn.00405577::var_164h)[ppiVar7] = uVar5;\n                                ppiVar7 = ppiVar7 + 1;\n                            } while (ppiVar7 < var_18h);\n                        }\n                        fcn.0040346e();\n                        var_8h = 0;\n                        if (0 < var_18h) {\n                            do {\n                                in_stack_fffffe7c = (&fcn.00405577::var_164h)[var_8h];\n                                cVar3 = fcn.00403489(in_stack_fffffe7c);\n                                if (cVar3 == '\\0') goto code_r0x00477bd9;\n                                var_8h = var_8h + 1;\n                            } while (var_8h < var_18h);\n                        }\n                        cVar3 = fcn.00403320(var_10h, 0);\n                        if (cVar3 == '\\0') break;\n                        *arg_ch = *arg_ch + 1;\n                        var_ch = *arg_ch;\n                    }\n                    var_8h = 0;\n                    if (var_ch < arg_8h[2]) {\n                        var_14h = arg_8h[1] + var_ch;\n                        do {\n                            uVar4 = *(*var_14h + 8);\n                            var_24h = uVar4;\n                            if (uVar4 == var_3ch) {\n                                cVar3 = fcn.00405b2a();\n                                if (cVar3 != '\\0') goto code_r0x00477bd9;\n                                uVar4 = var_24h;\n                            }\n                            if ((uVar4 == 0x4e) || (uVar4 == 0x47)) {\n                                var_8h = var_8h + 1;\n                            }\n                            else if ((uVar4 == 0x4f) || (uVar4 == 0x48)) {\n                                var_8h = var_8h + -1;\n                            }\n                            else if (((uVar4 == 0x40) && (var_8h == 0)) || (uVar4 == 0x7f)) break;\n                            var_ch = var_ch + 1;\n                            var_14h = var_14h + 1;\n                        } while (var_ch < arg_8h[2]);\n                    }\n                    if (0 < var_18h) {\n                        puVar9 = &fcn.00405577::var_164h;\n                        for (ppiVar7 = var_18h; ppiVar7 != NULL; ppiVar7 = ppiVar7 + -1) {\n                            *puVar9 = 0;\n                            puVar9 = puVar9 + 1;\n                        }\n                    }\n                    unaff_ESI = 0x1;\n                    in_stack_fffffe7c = arg_8h;\n                    in_stack_fffffe80 = arg_ch;\n                    cVar3 = fcn.0040203a(arg_8h, arg_ch, var_10h, &fcn.00405577::var_164h, 1);\n                    if (cVar3 == '\\0') goto code_r0x0040576b;\n                }\n                else {\n                    var_164h = 0x4056be;\n                    cVar3 = fcn.0040d2c0(5);\n                    if (cVar3 != '\\0') {\n                        var_164h = var_14h;\n                        break;\n                    }\n                    iVar6 = 0;\n                    var_8h = 0;\n                    piVar8 = var_ch;\n                    if (var_ch < arg_8h[2]) {\n                        do {\n                            var_24h = arg_8h[1][piVar8];\n                            iVar2 = *(var_24h + 8);\n                            if (iVar2 == 0x7f) break;\n                            if ((iVar2 == var_4ch) || (iVar2 == var_50h)) {\n                                iVar6 = iVar6 + 1;\n                                var_8h = iVar6;\n                            }\n                            else if ((iVar2 == var_44h) || (iVar2 == var_64h)) {\n                                iVar6 = iVar6 + -1;\n                                var_8h = iVar6;\n                            }\n                            else {\n                                if ((iVar2 == var_38h) && (iVar6 == 0)) break;\n                                if (iVar2 == var_3ch) {\n                                    var_164h = 0x40578f;\n                                    cVar3 = fcn.00405b2a();\n                                    iVar6 = var_8h;\n                                    if (cVar3 != '\\0') {\n                                        *0x4c22e4 = 1;\n                                    }\n                                }\n                            }\n                            piVar8 = piVar8 + 1;\n                        } while (piVar8 < arg_8h[2]);\n                    }\n                    var_164h = 0xffffffff;\n                    unaff_ESI = arg_8h;\n                    unaff_EBX = arg_ch;\n                    iVar6 = fcn.0040fa40(arg_8h, arg_ch, &fcn.00405577::var_34h, 0xffffffff);\n                    if (iVar6 < 0) break;\n                    *0x4c22e4 = 0;\n                    fcn.0040d89e(&fcn.00405577::var_34h);\n                }\n                piVar8 = arg_8h[1];\n                if (*(piVar8[*arg_ch] + 8) == var_48h) goto code_r0x0040576b;\n                if ((*(piVar8[*arg_ch] + 8) != var_38h) ||\n                   (piVar1 = *arg_ch + 1,  *arg_ch = piVar1,  *(piVar8[piVar1] + 8) != 0x33)) break;\n            }\n        }\ncode_r0x00477bd9:\n        fcn.0044d520(in_stack_fffffe7c, in_stack_fffffe80);\ncode_r0x0040576b:\n        fcn.00405cd3();\n    }\n    fcn.00412570();\n    return;\n}\n",
        "token_count": 3195
    },
    "00405800": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405800(uint *param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar3 = 0;\n    *param_1 = 0x49dd90;\n    if (param_1[2] != 0) {\n        do {\n            piVar1 = *(param_1[1] + uVar3 * 4);\n            if (piVar1 != NULL) {\n                if (((*(piVar1 + 2) < 0x40) && (0x2f < *(piVar1 + 2))) && (puVar2 = *piVar1,  puVar2 != NULL)) {\n                    *puVar2[3] = *puVar2[3] + -1;\n                    if (*puVar2[3] == 0) {\n                        fcn.0042017e(*puVar2);\n                        fcn.0042017e(puVar2[3]);\n                    }\n                    fcn.0042017e(puVar2);\n                }\n                fcn.0042017e(piVar1);\n            }\n            uVar3 = uVar3 + 1;\n            *(param_1[1] + -4 + uVar3 * 4) = 0;\n        } while (uVar3 < param_1[2]);\n    }\n    param_1[2] = 0;\n    fcn.0042017e(param_1[1]);\n    return;\n}\n",
        "token_count": 341
    },
    "0040589c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040589c(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t *arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint arg_8h_00;\n    uint var_64h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    fcn.0040d3d2();\n    var_18h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_ch = 0;\n    var_20h = *arg_14h + -1;\n    var_30h = 0x49dbf4;\n    var_10h = -1;\n    fcn.0040d3d2();\n    iVar5 = *(arg_8h + 4);\n    iVar4 = *(*(iVar5 + *arg_ch * 4) + 8);\n    var_1ch = 0x7f;\n    iVar6 = -1;\n    if (iVar4 != 0x48) {\n        var_14h = 0x40;\n        do {\n            var_5h._0_1_ = '\\0';\n            while (iVar4 == 0) {\n                iVar7 = *arg_ch;\n                iVar6 = **(iVar5 + iVar7 * 4);\n                if (iVar6 == 0x24) {\n                    var_5h._0_1_ = '\\x01';\n                }\n                else if (iVar6 != 0x1e) goto code_r0x00405b0d;\n                *arg_ch = iVar7 + 1;\n                iVar4 = *(*(iVar5 + (iVar7 + 1) * 4) + 8);\n            }\n            piVar1 = *(iVar5 + *arg_ch * 4);\n            if (*(piVar1 + 2) != 0x33) {\n                iVar7 = *arg_ch;\ncode_r0x004766ed:\n                iVar5 = *(*(*(arg_8h + 4) + iVar7 * 4) + 10);\n                arg_8h_00 = 0x91;\n                goto code_r0x00476717;\n            }\n            iVar5 = *piVar1;\n            fcn.0040c935(iVar5);\n            uVar2 = var_28h;\n            uVar8 = 0;\n            if (var_28h != 0) {\n                do {\n                    cVar3 = fcn.00405b2a();\n                    if (cVar3 != '\\0') break;\n                    uVar8 = uVar8 + 1;\n                } while (uVar8 < uVar2);\n            }\n            if (uVar8 != var_28h) {\n                arg_8h_00 = 0xab;\n                goto code_r0x00476717;\n            }\n            fcn.00405b47(&var_40h);\n            *arg_ch = *arg_ch + 1;\n            iVar6 = *arg_ch;\n            iVar5 = *(arg_8h + 4);\n            if ((*(*(iVar5 + iVar6 * 4) + 8) != 0x41) || (var_5h != '\\0')) {\n                if (var_10h == -1) goto code_r0x00405992;\ncode_r0x00405b23:\n                iVar5 = -1;\ncode_r0x004766e7:\n                arg_8h_00 = 0x69;\n                goto code_r0x00476717;\n            }\n            iVar7 = 0;\n            do {\n                while( true ) {\n                    while( true ) {\n                        iVar6 = iVar6 + 1;\n                        *arg_ch = iVar6;\n                        iVar4 = *(*(iVar5 + iVar6 * 4) + 8);\n                        if (iVar4 != 0x47) break;\n                        iVar7 = iVar7 + 1;\n                    }\n                    if (iVar4 == 0x48) break;\n                    if (iVar4 == var_14h) {\n                        if (iVar7 == 0) goto code_r0x00405aa3;\n                    }\n                    else if (iVar4 == var_1ch) goto code_r0x00405b23;\n                }\n                iVar7 = iVar7 + -1;\n            } while (-1 < iVar7);\ncode_r0x00405aa3:\n            if (var_10h == -1) {\n                var_10h = var_ch;\n            }\ncode_r0x00405992:\n            iVar7 = *arg_ch;\n            var_ch = var_ch + 1;\n            iVar4 = *(*(iVar5 + iVar7 * 4) + 8);\n            if (iVar4 == var_14h) {\ncode_r0x004059a9:\n                iVar7 = iVar7 + 1;\n                iVar4 = *(*(iVar5 + iVar7 * 4) + 8);\n                *arg_ch = iVar7;\n                if (iVar4 == 0x48) goto code_r0x004766ed;\n            }\n            else {\n                if (iVar4 != 0x48) {\ncode_r0x00405b0d:\n                    iVar5 = *(*(*(arg_8h + 4) + iVar7 * 4) + 10);\n                    goto code_r0x004766e7;\n                }\n                if (var_14h == 0x48) goto code_r0x004059a9;\n            }\n            iVar4 = *(*(iVar5 + *arg_ch * 4) + 8);\n            iVar6 = var_10h;\n        } while (iVar4 != 0x48);\n    }\n    *arg_ch = *arg_ch + 1;\n    if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) == 0x7f) {\n        iVar5 = fcn.004051ac(arg_14h);\n        if (-1 < iVar5) {\n            fcn.0040c935(arg_10h);\n            var_54h = var_20h;\n            var_48h = *arg_14h + -1;\n            var_50h = var_ch;\n            var_4ch = iVar6;\n            if (iVar6 == -1) {\n                var_4ch = var_ch;\n            }\n            var_44h._0_1_ = arg_18h;\n            fcn.00405116(&var_64h);\n            goto code_r0x00405a39;\n        }\n    }\n    else {\n        iVar5 = -1;\n        arg_8h_00 = 0x72;\ncode_r0x00476717:\n        fcn.0044d520(arg_8h_00, iVar5);\n    }\n    var_18h = 0xffffffff;\ncode_r0x00405a39:\n    fcn.00405cd3();\n    fcn.00407da8();\n    fcn.00405cd3();\n    return var_18h;\n}\n",
        "token_count": 1735
    },
    "00405b47": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b47(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar2 = *(in_ECX + 0xc) * 2;\n        uVar4 = 8;\n        if (7 < uVar2) {\n            uVar4 = uVar2;\n        }\n        *(in_ECX + 0xc) = uVar4;\n        uVar5 = fcn.0042010a(-(uVar4 * 4 >> 0x20 != 0) | uVar4 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.0041faa0(uVar5, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0042017e(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar5;\n    }\n    puVar3 = fcn.0042010a(0x10);\n    if (puVar3 == NULL) {\n        puVar3 = NULL;\n    }\n    else {\n        *puVar3 = *arg_8h;\n        puVar3[1] = arg_8h[1];\n        puVar3[2] = arg_8h[2];\n        piVar1 = arg_8h[3];\n        puVar3[3] = piVar1;\n        *piVar1 = *piVar1 + 1;\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar3;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 456
    },
    "00405cf6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405cf6(int32_t param_1)\n\n{\n    if (*(param_1 + 0x24) != 0) {\n        fcn.004228ca(*(param_1 + 0x24));\n    }\n    *(param_1 + 0x24) = 0;\n    if (*(param_1 + 0x2c) != 0) {\n        fcn.0042017e(*(param_1 + 0x2c));\n    }\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    *(param_1 + 0x34) = 0;\n    *(param_1 + 0x38) = 0;\n    *(param_1 + 0x10) = 0;\n    return;\n}\n",
        "token_count": 189
    },
    "00405d32": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00405d32(uint noname_0, uint *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    ushort uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint *extraout_ECX;\n    uint *extraout_EDX;\n    uint *puVar9;\n    uint32_t unaff_EDI;\n    uint32_t uVar10;\n    uint *puVar11;\n    bool bVar12;\n    uint var_10b0h;\n    uint var_b0h;\n    int32_t var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint *var_a0h;\n    uint *var_9ch;\n    uint var_98h;\n    int16_t *var_94h;\n    uint var_90h;\n    uint *var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint *var_60h;\n    uint32_t var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint *var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x405d3f;\n    fcn.00430650();\n    var_24h = 0xffffffff;\n    var_1ch = 0xffffffff;\n    var_30h = 1;\n    var_28h = NULL;\n    var_4h = 0;\n    var_14h = NULL;\n    if (arg_ch == NULL) {\n        return NULL;\n    }\n    *arg_ch = 0;\n    var_20h = extraout_ECX;\n    var_18h = extraout_ECX;\n    var_ch = unaff_EDI;\n    var_8h = extraout_EDX;\n    if (arg_10h == NULL) goto code_r0x00483a94;\n    *arg_10h = 0;\n    var_b0h = 0x4ae7b0;\n    var_ach = 0x4ae8b0;\n    var_a8h = 0x4ae9b0;\n    var_a4h = 0x4aeaf0;\n    if ((extraout_EDX & 0xd8028580) == 0) {\n        var_14h = (extraout_EDX & 0x10000) != 0;\n        var_5ch = 0;\n        iVar1 = *extraout_ECX;\n        puVar6 = extraout_ECX;\n        puVar11 = extraout_EDX;\n        iVar5 = var_4h;\n        while ((iVar1 == 0x28 && (*(puVar6 + iVar5 * 2 + 2) == 0x2a))) {\n            var_10h = 0x6;\n            var_14h = 0x40619f;\n            var_4h = iVar5;\n            iVar7 = fcn.0041ee64(6);\n            if (iVar7 == 0) {\n                iVar5 = iVar5 + 8;\ncode_r0x00483747:\n                puVar11 = puVar11 | 0x800;\n                puVar6 = var_18h;\n                var_8h = puVar11;\n            }\n            else {\n                var_10h = 0x4;\n                var_14h = 0x4061b6;\n                iVar7 = fcn.0041ee64(4);\n                if (iVar7 == 0) {\n                    iVar5 = iVar5 + 6;\n                    goto code_r0x00483747;\n                }\n                var_10h = 0x4;\n                var_14h = 0x4061cd;\n                iVar7 = fcn.0041ee64(4);\n                if (iVar7 == 0) {\n                    iVar5 = iVar5 + 6;\n                    puVar11 = puVar11 | 0x20000000;\n                    puVar6 = var_18h;\n                    var_8h = puVar11;\n                }\n                else {\n                    var_10h = 0xd;\n                    var_14h = 0x4061e4;\n                    iVar7 = fcn.0041ee64(0xd);\n                    if (iVar7 == 0) {\n                        iVar5 = iVar5 + 0xf;\n                        puVar11 = puVar11 | 0x4000000;\n                        puVar6 = var_18h;\n                        var_8h = puVar11;\n                    }\n                    else {\n                        var_10h = 0xc;\n                        var_14h = 0x4061fb;\n                        iVar7 = fcn.0041ee64(0xc);\n                        puVar6 = var_18h;\n                        if (iVar7 == 0) {\n                            var_ch = iVar5 + 0xe;\n                            var_10h = *(var_18h + var_ch * 2);\n                            var_14h = 0x483786;\n                            iVar5 = fcn.00422952(var_10h);\n                            uVar4 = var_ch;\n                            while ((iVar5 != 0 && (puVar11 = var_8h,  var_10h < 0x19999999))) {\n                                uVar3 = *(puVar6 + uVar4 * 2);\n                                iVar7 = var_10h * 10;\n                                uVar4 = uVar4 + 1;\n                                var_10h = *(puVar6 + uVar4 * 2);\n                                var_14h = 0x4837b0;\n                                iVar5 = fcn.00422952(var_10h);\n                                puVar11 = var_8h;\n                                var_10h = iVar7 + (uVar3 - 0x30);\n                            }\n                            var_ch = uVar4;\n                            if (*(puVar6 + uVar4 * 2) != 0x29) break;\n                            if (0x29 < var_24h) {\n                                var_5ch = var_5ch | 0x2000;\n                                var_24h = 0x29;\n                            }\n                        }\n                        else {\n                            var_10h = 0x10;\n                            var_14h = 0x406212;\n                            iVar7 = fcn.0041ee64(0x10);\n                            puVar6 = var_18h;\n                            if (iVar7 != 0) {\n                                var_10h = 0x3;\n                                var_14h = 0x406229;\n                                iVar7 = fcn.0041ee64(3);\n                                if (iVar7 == 0) {\n                                    iVar5 = iVar5 + 5;\n                                    uVar4 = 0x100000;\ncode_r0x00483878:\n                                    uVar10 = puVar11 & 0xff8fffff;\n                                }\n                                else {\n                                    var_10h = 0x3;\n                                    var_14h = 0x406240;\n                                    iVar7 = fcn.0041ee64(3);\n                                    if (iVar7 == 0) {\n                                        iVar5 = iVar5 + 5;\n                                        uVar4 = 0x200000;\n                                        goto code_r0x00483878;\n                                    }\n                                    var_10h = 0x5;\n                                    var_14h = 0x406257;\n                                    iVar7 = fcn.0041ee64(5);\n                                    if (iVar7 == 0) {\n                                        iVar5 = iVar5 + 7;\n                                        uVar4 = 0x300000;\n                                        goto code_r0x00483878;\n                                    }\n                                    var_10h = 0x4;\n                                    var_14h = 0x40626e;\n                                    iVar7 = fcn.0041ee64(4);\n                                    if (iVar7 == 0) {\n                                        iVar5 = iVar5 + 6;\n                                        uVar4 = 0x400000;\n                                        goto code_r0x00483878;\n                                    }\n                                    var_10h = 0x8;\n                                    var_14h = 0x406285;\n                                    iVar7 = fcn.0041ee64(8);\n                                    if (iVar7 == 0) {\n                                        iVar5 = iVar5 + 10;\n                                        uVar4 = 0x500000;\n                                        goto code_r0x00483878;\n                                    }\n                                    var_10h = 0xc;\n                                    var_14h = 0x40629c;\n                                    iVar7 = fcn.0041ee64(0xc);\n                                    if (iVar7 == 0) {\n                                        uVar4 = 0x800000;\n                                    }\n                                    else {\n                                        var_10h = 0xc;\n                                        var_14h = 0x483891;\n                                        iVar7 = fcn.0041ee64(0xc);\n                                        puVar6 = var_18h;\n                                        if (iVar7 != 0) break;\n                                        uVar4 = 0x1000000;\n                                    }\n                                    iVar5 = iVar5 + 0xe;\n                                    uVar10 = puVar11 & 0xfe7fffff;\n                                }\n                                puVar11 = uVar10 | uVar4;\n                                puVar6 = var_18h;\n                                var_8h = puVar11;\n                                goto code_r0x004062bb;\n                            }\n                            var_ch = iVar5 + 0x12;\n                            var_10h = *(var_18h + var_ch * 2);\n                            var_14h = 0x483801;\n                            iVar5 = fcn.00422952(var_10h);\n                            uVar4 = var_ch;\n                            while ((iVar5 != 0 && (puVar11 = var_8h,  var_10h < 0x19999999))) {\n                                uVar3 = *(puVar6 + uVar4 * 2);\n                                iVar7 = var_10h * 10;\n                                uVar4 = uVar4 + 1;\n                                var_10h = *(puVar6 + uVar4 * 2);\n                                var_14h = 0x48382b;\n                                iVar5 = fcn.00422952(var_10h);\n                                puVar11 = var_8h;\n                                var_10h = iVar7 + (uVar3 - 0x30);\n                            }\n                            var_ch = uVar4;\n                            if (*(puVar6 + uVar4 * 2) != 0x29) break;\n                            if (0x29 < var_1ch) {\n                                var_5ch = var_5ch | 0x4000;\n                                var_1ch = 0x29;\n                            }\n                        }\n                        iVar5 = var_ch + 1;\n                    }\n                }\n            }\ncode_r0x004062bb:\n            iVar1 = *(puVar6 + iVar5 * 2);\n        }\n        var_4h = 0;\n        if ((puVar11 & 0x800) != 0) {\n            var_4h = 1;\n            if (var_14h != NULL) goto code_r0x00483a94;\n            if ((puVar11 & 0x2000) == 0) {\n                var_14h = 0x4838b3;\n                var_10h = arg_10h;\n                var_28h = fcn.00471a42(arg_10h);\n                if (var_28h != NULL) goto code_r0x00483a94;\n            }\n        }\n        if ((puVar11 & 0x1800000) != 0x1800000) {\n            uVar4 = puVar11 & 0x700000;\n            if (uVar4 == 0) {\ncode_r0x00405e1c:\n                var_48h = 2;\n            }\n            else {\n                if (uVar4 == 0x100000) {\n                    var_10h = 0xd;\n                }\n                else if (uVar4 == 0x200000) {\n                    var_10h = 0xa;\n                }\n                else {\n                    if (uVar4 != 0x300000) {\n                        if (uVar4 != 0x400000) {\n                            if (uVar4 != 0x500000) goto code_r0x00483a87;\n                            goto code_r0x00405e1c;\n                        }\n                        var_48h = 1;\n                        goto code_r0x00405e1f;\n                    }\n                    var_10h = 0xd0a;\n                }\n                var_48h = 0;\n                if (var_10h < 0x100) {\n                    var_44h = 1;\n                    var_40h = var_40h & 0xffff0000 | var_10h;\n                }\n                else {\n                    var_40h = CONCAT22(var_10h, var_10h >> 8) & 0xffffff;\n                    var_44h = 2;\n                }\n            }\ncode_r0x00405e1f:\n            var_a0h = &fcn.00405d32::var_10b0h;\n            var_6ch = 0;\n            var_68h = 0;\n            var_74h = 0;\n            var_78h = 0;\n            var_84h = 0;\n            var_80h = 0;\n            var_88h = 0;\n            var_7ch = 0x800;\n            var_10h = 0x405e68;\n            var_9ch = var_a0h;\n            var_8ch = var_a0h;\n            iVar5 = fcn.0040784a();\n            var_94h = puVar6 + iVar5 * 2;\n            var_10b0h._0_2_ = *0x10 + -0x10b4;\n            var_10h = &fcn.00405d32::var_30h;\n            var_14h = &fcn.00405d32::var_b0h;\n            var_18h = NULL;\n            var_1ch = &fcn.00405d32::var_14h;\n            var_20h = &fcn.00405d32::var_8h;\n            var_24h = &fcn.00405d32::var_ch;\n            var_28h = &fcn.00405d32::var_34h;\n            var_2ch = NULL;\n            var_30h = 0;\n            var_34h = 0;\n            var_40h = &fcn.00405d32::var_20h;\n            var_58h = 0;\n            var_64h = 0;\n            var_70h = 0;\n            var_90h = 0;\n            var_44h = 0x405ed3;\n            var_60h = puVar11;\n            fcn.00406348(var_40h, &fcn.00405d32::var_28h, 0, 0, 0, 0, var_28h, var_24h, var_20h, var_1ch, 0, var_14h, \n                         var_10h);\n            if ((var_28h == NULL) && (var_30h < 0x10001)) {\n                iVar5 = (var_80h * var_84h + var_30h) * 2 + 0x38;\n                var_14h = 0x405f09;\n                var_10h = iVar5;\n                puVar6 = (**0x4bbddc)();\n                if (puVar6 != NULL) {\n                    puVar6[1] = iVar5;\n                    *puVar6 = 0x50435245;\n                    puVar6[2] = var_60h;\n                    puVar6[3] = var_5ch;\n                    puVar6[4] = var_24h;\n                    puVar6[5] = var_1ch;\n                    puVar6[6] = 0;\n                    *(puVar6 + 0x22) = 0x1c;\n                    *(puVar6 + 9) = var_80h;\n                    *(puVar6 + 0x26) = var_84h;\n                    puVar6[10] = 0;\n                    puVar6[0xb] = 0;\n                    puVar6[0xc] = 0;\n                    puVar6[0xd] = 0;\n                    var_74h = var_78h;\n                    var_64h = 0;\n                    var_78h = 0;\n                    var_70h = 0;\n                    var_84h = 0;\n                    var_88h = puVar6 + *(puVar6 + 0x22) * 2;\n                    var_8ch = var_a0h;\n                    puVar11 = var_88h + *(puVar6 + 0x26) * *(puVar6 + 9) * 2;\n                    var_58h = 0;\n                    var_54h = 0;\n                    var_50h = 0;\n                    var_4ch = 0;\n                    var_90h = 0;\n                    *puVar11 = 0x7d;\n                    var_14h = &fcn.00405d32::var_b0h;\n                    var_18h = NULL;\n                    var_1ch = &fcn.00405d32::var_14h;\n                    var_20h = &fcn.00405d32::var_8h;\n                    var_28h = &fcn.00405d32::var_34h;\n                    var_2ch = NULL;\n                    var_30h = 0;\n                    var_34h = 0;\n                    var_40h = &fcn.00405d32::var_20h;\n                    var_44h = 0x405ffa;\n                    var_9ch = puVar11;\n                    var_24h = puVar11;\n                    var_10h = puVar11;\n                    fcn.00406348(var_40h, &fcn.00405d32::var_28h, 0, 0, 0, 0, var_28h, puVar11, var_20h, var_1ch, 0, \n                                 var_14h, puVar11);\n                    *(puVar6 + 0x1e) = var_78h;\n                    *(puVar6 + 8) = var_6ch;\n                    *(puVar6 + 7) = var_70h;\n                    puVar6[3] = var_5ch | 2;\n                    if (var_54h == 0) {\n                        var_38h = var_14h;\n                        var_2ch = var_8h;\n                    }\n                    else {\n                        var_2ch = NULL;\n                        var_38h = 0xffffffff;\n                    }\n                    iVar5 = 0;\n                    var_8h = var_28h;\n                    if ((var_28h == NULL) && (*var_20h != 0)) {\n                        var_10h = 0x16;\n                        var_8h = 0x16;\n                    }\n                    *var_10h = 0;\n                    if (var_30h < var_10h + (2 - puVar11) >> 1) {\n                        var_8h = 0x17;\n                    }\n                    puVar9 = var_8h;\n                    if ((var_a0h < var_8ch) && (var_14h = 0xffffffff,  var_8h == NULL)) {\n                        while (var_a0h < var_8ch) {\n                            var_8ch = var_8ch + -2;\n                            var_1ch = *var_8ch;\n                            var_10h = *(puVar11 + var_1ch * 2);\n                            if (var_10h != var_14h) {\n                                var_14h = 0x4839a1;\n                                iVar5 = fcn.0047035d(var_10h);\n                                var_14h = *(puVar11 + var_1ch * 2);\n                            }\n                            if (iVar5 == 0) {\n                                var_10h = 0x35;\n                                var_8h = 0x35;\n                                puVar9 = var_10h;\n                                break;\n                            }\n                            *(puVar11 + var_1ch * 2) = iVar5 - puVar11 >> 1;\n                        }\n                    }\n                    if (0x800 < var_7ch) {\n                        var_14h = 0x4839e5;\n                        var_10h = var_a0h;\n                        (**0x4bb80c)();\n                    }\n                    if ((puVar9 == NULL) && (*(puVar6 + 0x1e) <= *(puVar6 + 8) && *(puVar6 + 8) != *(puVar6 + 0x1e))) {\n                        var_8h = 0xf;\n                    }\n                    puVar11 = var_8h;\n                    if (var_4ch != 0) {\n                        var_10h = 0xffffffff;\n                        var_14h = 0x483a02;\n                        iVar5 = fcn.0047035d(0xffffffff);\n                        while (puVar11 = var_8h,  iVar5 != 0) {\n                            if (*(iVar5 + 2) == 0) {\n                                uVar4 = *(iVar5 + -2);\n                                uVar2 = *(iVar5 + -4 + uVar4 * 2);\n                                *(iVar5 + -4 + uVar4 * 2) = 0;\n                                var_10h = &fcn.00405d32::var_b0h;\n                                var_14h = 0x1;\n                                var_18h = 0x483a3d;\n                                iVar5 = fcn.00470c98(1, var_10h);\n                                *(var_14h + -4 + uVar4 * 2) = uVar2;\n                                if (iVar5 < 0) {\n                                    if ((iVar5 == -2) || (iVar5 == -4)) goto code_r0x00483a7f;\n                                    puVar11 = 0x19;\n                                    break;\n                                }\n                                if (var_70h < iVar5) {\n                                    var_70h = iVar5;\n                                }\n                                *(var_14h + 2) = iVar5;\n                            }\n                            var_10h = 0xffffffff;\n                            var_14h = 0x483a66;\n                            iVar5 = fcn.0047035d(0xffffffff);\n                        }\n                    }\n                    if (puVar11 == NULL) {\n                        uVar4 = puVar6[2];\n                        if ((uVar4 & 0x10) == 0) {\n                            var_14h = &fcn.00405d32::var_b0h;\n                            var_10h = NULL;\n                            var_18h = 0x4060cd;\n                            iVar5 = fcn.0040776b(var_14h, 0);\n                            if (iVar5 == 0) {\n                                if (var_ch < 0) {\n                                    var_10h = NULL;\n                                    var_14h = 0x4060e9;\n                                    uVar3 = fcn.00407a0f(0);\n                                    if (var_ch < 0) {\n                                        var_14h = &fcn.00405d32::var_b0h;\n                                        var_10h = NULL;\n                                        var_18h = 0x406104;\n                                        iVar5 = fcn.00407932(var_14h, 0);\n                                        if (iVar5 != 0) {\n                                            puVar6[3] = puVar6[3] | 0x100;\n                                        }\n                                        goto code_r0x00406113;\n                                    }\n                                }\n                                else {\n                                    uVar3 = var_34h;\n                                }\n                                *(puVar6 + 6) = uVar3;\n                                if ((var_ch & 1) != 0) {\n                                    if (var_4h == 0) {\n                                        if (uVar3 < 0x100) goto code_r0x00483b18;\n                                    }\n                                    else {\n                                        if (uVar3 < 0x80) {\ncode_r0x00483b18:\n                                            bVar12 = *(uVar3 + var_ach) == uVar3;\n                                        }\n                                        else {\n                                            bVar12 = *(*((*((uVar3 >> 7) + 0x4ac470) * 0x80 + uVar3 % 0x80) * 2 +\n                                                        0x49e5d0) * 8 + 0x4ab0d4) == 0;\n                                        }\n                                        if (!bVar12) {\n                                            puVar6[3] = puVar6[3] | 0x20;\n                                        }\n                                    }\n                                }\n                                puVar6[3] = puVar6[3] | 0x10;\n                            }\n                            else {\n                                puVar6[2] = uVar4 | 0x10;\n                            }\n                        }\ncode_r0x00406113:\n                        if (var_38h < 0) {\n                            return puVar6;\n                        }\n                        if (((*(puVar6 + 2) & 0x10) != 0) && ((var_38h & 2) == 0)) {\n                            return puVar6;\n                        }\n                        uVar3 = var_2ch;\n                        *(puVar6 + 0x1a) = uVar3;\n                        if ((var_38h & 1) != 0) {\n                            if (var_4h == 0) {\n                                if (0xff < uVar3) goto code_r0x00406179;\n                            }\n                            else if (0x7f < uVar3) {\n                                if (*(*((*(((var_2ch & 0xffff) >> 7) + 0x4ac470) * 0x80 + (var_2ch & 0xffff) % 0x80) * 2\n                                       + 0x49e5d0) * 8 + 0x4ab0d4) != 0) {\n                                    puVar6[3] = puVar6[3] | 0x80;\n                                }\n                                goto code_r0x00406179;\n                            }\n                            if (*((var_2ch & 0xffff) + var_ach) != uVar3) {\n                                puVar6[3] = puVar6[3] | 0x80;\n                            }\n                        }\ncode_r0x00406179:\n                        puVar6[3] = puVar6[3] | 0x40;\n                        return puVar6;\n                    }\ncode_r0x00483a7f:\n                    var_14h = 0x483a86;\n                    var_10h = puVar6;\n                    (**0x4bb80c)();\n                }\n            }\n        }\n    }\ncode_r0x00483a87:\n    *arg_10h = var_20h - var_18h >> 1;\ncode_r0x00483a94:\n    var_10h = 0x483a9b;\n    uVar8 = fcn.00470c78();\n    *arg_ch = uVar8;\n    return NULL;\n}\n",
        "token_count": 6493
    },
    "00406348": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00406348(int16_t **arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, \n            int32_t *arg_20h, uint32_t *arg_24h, int32_t *arg_28h, uint32_t *arg_2ch, uint arg_30h, int32_t arg_34h, \n            int32_t *arg_38h)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t **in_EDX;\n    uint32_t uVar6;\n    int16_t *piVar7;\n    int32_t iStack108;\n    uint32_t uStack104;\n    int16_t *piStack100;\n    int16_t *piStack96;\n    int32_t iStack92;\n    int16_t *piStack88;\n    uint32_t uStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    int32_t aiStack60 [2];\n    int16_t *piStack52;\n    uint32_t uStack48;\n    int16_t *piStack44;\n    int16_t **ppiStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    int16_t *piStack28;\n    uint uStack24;\n    uint16_t uStack20;\n    ushort uStack18;\n    uint uStack16;\n    int16_t *piStack12;\n    \n    piStack88 = *arg_8h;\n    piStack100 = *in_EDX;\n    uStack16 = arg_30h;\n    piStack52 = NULL;\n    uStack48 = 0;\n    iStack92 = 0;\n    iStack76 = 0;\n    iStack108 = arg_18h + 4;\n    uStack104 = 0xfffffffe;\n    uStack72 = 0xfffffffe;\n    if (*piStack100 == 0x7f) {\n        uStack20 = piStack100[2];\n        uStack48 = uStack20;\n        uStack24 = *(arg_34h + 0x20);\n        uStack18 = 0;\n        *(arg_34h + 0x20) = &uStack24;\n    }\n    piStack28 = piStack100 + 1;\n    *piStack28 = 0;\n    iStack36 = arg_18h * 2 + 4;\n    piStack96 = piStack100 + arg_18h + 2;\n    uStack68 = *(arg_34h + 0x38);\n    piStack44 = piStack100;\n    ppiStack40 = in_EDX;\n    uStack32 = uStack68;\n    piStack12 = piStack100;\n    do {\n        if (arg_14h != 0) {\n            *(arg_34h + 0x38) = uStack32;\n        }\n        if (arg_10h != 0) {\n            *piStack96 = 0x76;\n            piStack52 = piStack96 + 1;\n            *piStack52 = 0;\n            piStack96 = piStack96 + 2;\n            iStack108 = iStack108 + 2;\n        }\n        iVar4 = fcn.00406670(&piStack88, arg_ch, aiStack60, &uStack64, &iStack80, &uStack84, &uStack16, arg_1ch, arg_34h\n                             , -(arg_38h != NULL) & &iStack108);\n        piVar1 = piStack96;\n        if (iVar4 == 0) goto code_r0x00483479;\n        if (uStack68 <= *(arg_34h + 0x38) && *(arg_34h + 0x38) != uStack68) {\n            uStack68 = *(arg_34h + 0x38);\n        }\n        if (arg_38h == NULL) {\n            if (*piStack100 == 0x71) {\n                if (uStack72 < 0) {\ncode_r0x004065cc:\n                    if ((-1 < uStack64) && (uStack84 < 0)) {\n                        iStack80 = aiStack60[0];\n                        uStack84 = uStack64;\n                    }\n                }\n                else {\n                    if ((iStack76 != aiStack60[0]) || (uStack72 != uStack64)) {\n                        if (uStack104 < 0) {\n                            iStack92 = iStack76;\n                            uStack104 = uStack72;\n                        }\n                        uStack72 = 0xffffffff;\n                    }\n                    if (uStack72 < 0) goto code_r0x004065cc;\n                }\n                if ((((uStack84 ^ uStack104) & 0xfffffffd) == 0) && (iStack92 == iStack80)) {\n                    uStack104 = uStack104 | uStack84;\n                    iStack92 = iStack80;\n                }\n                else {\n                    uStack104 = 0xffffffff;\n                }\n            }\n            else {\n                iStack76 = aiStack60[0];\n                uStack72 = uStack64;\n                iStack92 = iStack80;\n                uStack104 = uStack84;\n            }\n            if (arg_10h != 0) {\n                *piStack96 = 0;\n                iVar4 = fcn.00470c98(0, arg_34h);\n                if (iVar4 == -3) {\n                    *(arg_34h + 100) = 1;\n                }\n                else {\n                    if (iVar4 < 0) {\n                        if (iVar4 == -2) {\n                            iVar4 = 0x24;\n                        }\n                        else {\n                            iVar4 = ((iVar4 != -4) - 1 & 0x2d) + 0x19;\n                        }\n                        *arg_ch = iVar4;\ncode_r0x00483479:\n                        *arg_8h = piStack88;\n                        return 0;\n                    }\n                    if (*(arg_34h + 0x40) < iVar4) {\n                        *(arg_34h + 0x40) = iVar4;\n                    }\n                    *piStack52 = iVar4;\n                }\n            }\n        }\n        piVar2 = piStack88;\n        if (*piStack88 != 0x7c) {\n            if (arg_38h == NULL) {\n                uVar6 = piVar1 - piStack100 >> 1;\n                piVar7 = piStack100;\n                do {\n                    uVar5 = piVar7[1];\n                    piVar7[1] = uVar6;\n                    piVar7 = piVar7 + -uVar5;\n                    uVar6 = uVar5;\n                } while (uVar5 != 0);\n            }\n            *piVar1 = 0x72;\n            piVar1[1] = piVar1 - piStack44 >> 1;\n            piVar7 = piVar1 + 2;\n            if (0 < uStack48) {\n                if (*(*(arg_34h + 0x20) + 6) != 0) {\n                    fcn.00426c10(piStack44 + 2, piStack44, piVar7 - piStack44 & 0xfffffffe);\n                    *piStack44 = 0x7b;\n                    iVar3 = piVar1 + (8 - piStack44) >> 1;\n                    *piStack28 = iVar3;\n                    piVar1[4] = 0x72;\n                    piVar1[5] = iVar3;\n                    piVar7 = piVar1 + 6;\n                    iStack108 = iStack108 + 4;\n                }\n                *(arg_34h + 0x20) = **(arg_34h + 0x20);\n            }\n            *(arg_34h + 0x38) = uStack68;\n            *ppiStack40 = piVar7;\n            *arg_8h = piVar2;\n            *arg_20h = iStack76;\n            *arg_24h = uStack72;\n            *arg_28h = iStack92;\n            *arg_2ch = uStack104;\n            if (arg_38h != NULL) {\n                if (0x7fffffeb - *arg_38h < iStack108) {\n                    *arg_ch = 0x14;\n                    return 0;\n                }\n                *arg_38h = iStack108 + *arg_38h;\n            }\n            return 1;\n        }\n        if (arg_38h == NULL) {\n            *piVar1 = 0x71;\n            piVar1[1] = piVar1 - piStack100 >> 1;\n            piStack96 = piVar1 + 2;\n            piStack100 = piVar1;\n            piStack12 = piVar1;\n        }\n        else {\n            piStack96 = *ppiStack40 + iStack36;\n            iStack108 = iStack108 + 2;\n        }\n        piStack88 = piStack88 + 1;\n    } while( true );\n}\n",
        "token_count": 2060
    },
    "00406670": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406983)\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00406670(uint *arg_8h, int32_t *arg_ch, uint *arg_10h, uint32_t *arg_14h, uint *arg_18h, uint32_t *arg_1ch, \n            uint arg_20h, int32_t arg_24h, int32_t arg_28h, int32_t *arg_2ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    double dVar3;\n    uint *puVar4;\n    uint32_t *puVar5;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint *puVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint *in_ECX;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint uVar14;\n    uint8_t *puVar15;\n    uint32_t *puVar16;\n    uint *in_EDX;\n    ushort *puVar17;\n    ushort *puVar18;\n    int16_t *piVar19;\n    uint *puVar20;\n    uint *puVar21;\n    int16_t iVar22;\n    uint *puVar23;\n    uint *puVar24;\n    int16_t iVar25;\n    uint32_t uVar26;\n    uint *puVar27;\n    uint16_t *puVar28;\n    int32_t *piVar29;\n    uint *puVar30;\n    bool bVar31;\n    float10 fVar32;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 extraout_ST0_01;\n    float10 fVar33;\n    ulong uVar34;\n    char32_t *arg_10h_00;\n    uint var_140h;\n    uint var_134h;\n    uint var_129h;\n    uint *var_114h;\n    uint *var_110h;\n    uint32_t var_10ch;\n    uint32_t var_108h;\n    uint32_t var_104h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint *var_e8h;\n    uint var_e4h;\n    uint *var_e0h;\n    uint32_t var_dch;\n    uint32_t var_d8h;\n    uint32_t var_d4h;\n    uint *var_d0h;\n    uint *var_cch;\n    uint *var_c8h;\n    uint var_c4h;\n    int32_t var_a4h;\n    int32_t var_a0h;\n    uint *var_9ch;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    uint32_t var_90h;\n    uint *var_8ch;\n    uint32_t var_88h;\n    int32_t var_84h;\n    uint *var_80h;\n    uint *var_7ch;\n    uint *var_78h;\n    uint32_t var_74h;\n    uint *var_70h;\n    uint32_t var_6ch;\n    uint32_t var_68h;\n    uint *var_64h;\n    uint *var_60h;\n    uint *var_5ch;\n    uint *var_58h;\n    uint32_t var_54h;\n    uint *var_50h;\n    uint uStack80;\n    uint *var_48h;\n    double dStack80;\n    uint32_t *var_44h;\n    int16_t *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_10h = *in_ECX;\n    var_8h = *in_EDX;\n    var_74h = 0;\n    var_30h = 0;\n    var_a0h = 0;\n    var_84h = 0;\n    var_d0h = var_8h;\n    var_cch = var_8h;\n    var_2ch = 0;\n    var_a4h = 0;\n    var_4h = *arg_8h;\n    var_80h = NULL;\n    var_18h = NULL;\n    var_7ch = NULL;\n    var_40h = NULL;\n    bVar31 = (var_10h & 0x800) == 0;\n    if (bVar31) {\n        var_28h = 0;\n    }\n    else {\n        var_28h = 1;\n    }\n    var_28h = !bVar31;\n    var_9ch = (var_10h & 0x200) != 0;\n    var_e0h = var_9ch ^ 1;\n    var_78h = NULL;\n    var_70h = NULL;\n    var_5ch = NULL;\n    var_64h = NULL;\n    var_68h = 0xfffffffe;\n    var_6ch = 0xfffffffe;\n    var_54h = 0xfffffffe;\n    var_34h = 0xfffffffe;\n    var_88h = var_10h & 1;\n    puVar21 = var_8h;\n    puVar24 = var_10h;\n    var_114h = in_ECX;\n    var_110h = in_EDX;\ncode_r0x0040674d:\n    puVar30 = var_18h;\n    uVar26 = *var_4h;\n    fVar32 = *0x4b6560;\n    if ((uVar26 == 0) && (var_80h != NULL)) {\n        var_4h = var_80h;\n        uVar26 = *var_80h;\n        var_80h = NULL;\n    }\n    puVar8 = *(arg_28h + 0x10) + *(arg_28h + 0x34) * 2 + -200;\n    if (arg_2ch == NULL) {\n        if (puVar8 <= *(arg_28h + 0x24) && *(arg_28h + 0x24) != puVar8) goto code_r0x004831db;\n    }\n    else {\n        if (puVar8 < puVar21) {\ncode_r0x004831db:\n            *arg_ch = 0x34;\n            goto code_r0x004831e6;\n        }\n        puVar24 = puVar21;\n        if (puVar21 < var_d0h) {\n            var_8h = var_d0h;\n            puVar24 = var_d0h;\n        }\n        iVar12 = puVar24 - var_d0h >> 1;\n        if (0x7fffffeb - *arg_2ch < iVar12) {\n            *arg_ch = 0x14;\n            *arg_8h = var_4h;\n            return 0;\n        }\n        *arg_2ch = *arg_2ch + iVar12;\n        puVar21 = var_cch;\n        if (var_18h == NULL) {\ncode_r0x004067f6:\n            var_8h = puVar21;\n        }\n        else {\n            puVar21 = puVar24;\n            if (var_cch < var_18h) {\n                fcn.00426c10(var_cch, var_18h, puVar24 - var_18h & 0xfffffffe);\n                fVar32 = *0x4b6560;\n                var_18h = var_cch;\n                puVar21 = var_8h + (puVar30 - var_cch >> 1) * -2;\n                goto code_r0x004067f6;\n            }\n        }\n        var_d0h = puVar21;\n        puVar24 = var_10h;\n    }\n    puVar30 = var_4h;\n    if ((var_2ch != 0) && (uVar26 != 0)) {\n        if ((uVar26 == 0x5c) && (*(var_4h + 2) == 0x45)) {\n            var_2ch = 0;\n            puVar30 = var_4h + 2;\n            goto code_r0x00406a38;\n        }\n        if (var_7ch != NULL) {\n            if (arg_2ch == NULL) {\n                *(var_7ch + 6) = (var_4h - *(arg_28h + 0x18) >> 1) - *(var_7ch + 1);\n            }\n            var_7ch = NULL;\n        }\n        if ((puVar24 & 0x4000) != 0) {\n            *puVar21 = 0xff0070;\n            *(puVar21 + 1) = var_4h - *(arg_28h + 0x18) >> 1;\n            *(puVar21 + 6) = 0;\n            var_7ch = puVar21;\n            puVar21 = puVar21 + 2;\n            var_8h = puVar21;\n        }\n        goto code_r0x0040690d;\n    }\n    if ((((uVar26 == 0x2a) || (uVar26 == 0x3f)) || (uVar26 == 0x2b)) ||\n       ((uVar26 == 0x7b && (iVar12 = fcn.00471591(),  puVar21 = var_8h,  fVar32 = extraout_ST0,  iVar12 != 0)))) {\n        puVar8 = 0x1;\n        var_20h = 0x1;\n    }\n    else {\n        iVar12 = var_a0h;\n        puVar8 = NULL;\n        var_20h = NULL;\n        if ((var_7ch != NULL) && (var_a0h = var_a0h + -1,  iVar12 < 1)) {\n            if (arg_2ch == NULL) {\n                *(var_7ch + 6) = (puVar30 - *(arg_28h + 0x18) >> 1) - *(var_7ch + 1);\n                puVar30 = var_4h;\n            }\n            var_7ch = NULL;\n        }\n    }\n    puVar23 = puVar24 & 8;\n    var_1ch = puVar23;\n    if (puVar23 != NULL) {\n        if ((*puVar30 < 0x100) && (puVar24 = var_10h,  (*(uVar26 + *(arg_28h + 0xc)) & 1) != 0)) goto code_r0x00406a38;\n        if (uVar26 == 0x23) {\n            var_4h = puVar30 + 2;\n            iVar25 = *(puVar30 + 2);\n            puVar24 = var_4h;\n            uVar26 = var_28h;\n            while (var_4h = puVar24,  iVar25 != 0) {\n                if (*(arg_28h + 0x68) == 0) {\n                    uVar26 = var_28h;\n                    if (((puVar24 <= *(arg_28h + 0x1c) + *(arg_28h + 0x6c) * -2) && (iVar25 == *(arg_28h + 0x70))) &&\n                       ((*(arg_28h + 0x6c) == 1 || (*(puVar24 + 2) == *(arg_28h + 0x72))))) goto code_r0x004807f3;\n                }\n                else if ((puVar24 < *(arg_28h + 0x1c)) &&\n                        (iVar12 = fcn.004080a0(*(arg_28h + 0x1c), arg_28h + 0x6c, uVar26),  uVar26 = var_28h, \n                        fVar32 = extraout_ST0_00,  iVar12 != 0)) {\ncode_r0x004807f3:\n                    var_4h = puVar24 + *(arg_28h + 0x6c) * 2 + -2;\n                    puVar8 = var_20h;\n                    puVar21 = var_8h;\n                    puVar24 = var_10h;\n                    puVar30 = var_4h;\n                    if (*var_4h != 0) goto code_r0x00406a38;\n                    break;\n                }\n                var_4h = puVar24 + 2;\n                if ((uVar26 != 0) && (uVar26 = var_28h,  (*(puVar24 + 2) & 0xfc00) == 0xdc00)) {\n                    var_4h = puVar24 + 1;\n                }\n                puVar8 = var_20h;\n                puVar21 = var_8h;\n                puVar24 = var_4h;\n                iVar25 = *var_4h;\n            }\n            uVar26 = 0;\n            puVar30 = var_4h;\n        }\n    }\n    if (((var_10h & 0x4000) != 0) && (puVar8 == NULL)) {\n        *puVar21 = 0xff0070;\n        puVar24 = puVar21 + 1;\n        var_7ch = puVar21;\n        iVar12 = *(arg_28h + 0x18);\n        *(puVar21 + 6) = 0;\n        puVar21 = puVar21 + 2;\n        *puVar24 = puVar30 - iVar12 >> 1;\n        var_8h = puVar21;\n        puVar30 = var_4h;\n    }\n    if (((0x5e < uVar26) && (uVar26 < 0x7b)) || ((0x2e < uVar26 && (uVar26 < 0x3f)))) goto code_r0x0040690d;\n    if (uVar26 == 0) {\ncode_r0x00406891:\n        *arg_10h = var_64h;\n        *arg_14h = var_34h;\n        *arg_18h = var_5ch;\n        *arg_1ch = var_54h;\n        *var_110h = puVar21;\n        *arg_8h = puVar30;\n        if (arg_2ch != NULL) {\n            iVar12 = puVar21 - var_d0h >> 1;\n            if (0x7fffffeb - *arg_2ch < iVar12) {\ncode_r0x004831b1:\n                *arg_ch = 0x14;\n                *arg_8h = puVar30;\n                return 0;\n            }\n            *arg_2ch = *arg_2ch + iVar12;\n        }\n        return 1;\n    }\n    puVar24 = var_10h;\n    // switch table (89 cases) at 0x40766c\n    switch(uVar26) {\n    case 0x24:\n        var_18h = NULL;\n        *puVar21 = ((var_10h & 2) != 0) + 0x1b;\n        var_8h = puVar21 + 2;\n        puVar21 = puVar21 + 2;\n        puVar30 = var_4h;\n        goto code_r0x00406a38;\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x2c:\n    case 0x2d:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5f:\n    case 0x60:\n    case 0x61:\n    case 0x62:\n    case 99:\n    case 100:\n    case 0x65:\n    case 0x66:\n    case 0x67:\n    case 0x68:\n    case 0x69:\n    case 0x6a:\n    case 0x6b:\n    case 0x6c:\n    case 0x6d:\n    case 0x6e:\n    case 0x6f:\n    case 0x70:\n    case 0x71:\n    case 0x72:\n    case 0x73:\n    case 0x74:\n    case 0x75:\n    case 0x76:\n    case 0x77:\n    case 0x78:\n    case 0x79:\n    case 0x7a:\n        goto code_r0x0040690d;\n    case 0x29:\n    case 0x7c:\n        goto code_r0x00406891;\n    case 0x2a:\n        var_74h = 0;\n        var_30h = 0xffffffff;\n        break;\n    case 0x2b:\n        var_74h = 1;\n        var_30h = 0xffffffff;\n        break;\n    case 0x2e:\n        if (var_34h == 0xfffffffe) {\n            var_34h = 0xffffffff;\n        }\n        var_6ch = var_34h;\n        var_78h = var_5ch;\n        var_70h = var_64h;\n        var_68h = var_54h;\n        var_18h = puVar21;\n        if ((var_10h & 4) == 0) {\n            uVar6 = 0xc;\n        }\n        else {\n            uVar6 = 0xd;\n        }\n        *puVar21 = uVar6;\n        puVar21 = puVar21 + 2;\n        var_8h = puVar21;\n        var_4h = var_4h + 2;\n        goto code_r0x0040674d;\n    case 0x3f:\n        var_74h = 0;\n        var_30h = 1;\n        break;\n    case 0x5b:\n        iVar25 = *(puVar30 + 2);\n        var_18h = puVar21;\n        if ((((iVar25 == 0x3a) || (iVar25 == 0x2e)) || (iVar25 == 0x3d)) && (iVar12 = fcn.0047077a(),  iVar12 != 0)) {\n            *arg_ch = ((*(puVar30 + 2) != 0x3a) - 1 & 0xffffffee) + 0x1f;\n            *arg_8h = puVar30;\n            return 0;\n        }\n        var_20h = NULL;\n        while( true ) {\n            puVar21 = var_20h;\n            while( true ) {\n                puVar24 = puVar30;\n                puVar30 = puVar24 + 2;\n                uVar26 = *puVar30;\n                var_4h = puVar30;\n                if (uVar26 != 0x5c) break;\n                puVar30 = puVar24 + 1;\n                if (*(puVar24 + 1) != 0x45) {\n                    iVar12 = fcn.0041ee64(3);\n                    if (iVar12 != 0) goto code_r0x00406c0d;\n                    puVar21 = var_20h;\n                    puVar30 = puVar24 + 2;\n                }\n            }\n            if ((puVar21 != NULL) || (uVar26 != 0x5e)) break;\n            var_20h = 0x1;\n        }\n        if ((uVar26 == 0x5d) && ((*(arg_28h + 0x50) & 0x2000000) != 0)) {\n            *var_8h = (-(puVar21 != NULL) & 0xff76) + 0x97;\n            puVar21 = var_8h + 2;\n            var_8h = puVar21;\n            if (var_34h == 0xfffffffe) {\n                var_34h = 0xffffffff;\n            }\n            var_70h = var_64h;\n            var_6ch = var_34h;\n            puVar24 = var_10h;\n            goto code_r0x00406a38;\n        }\ncode_r0x00406c0d:\n        var_38h = NULL;\n        var_1ch = NULL;\n        var_ch = 0;\n        fcn.00421970(&var_c4h, 0, 0x20);\n        puVar21 = var_8h + 6;\n        var_44h = NULL;\n        var_24h = puVar21;\n        var_60h = puVar21;\n        var_14h = puVar21;\n        puVar30 = puVar21;\n        if (uVar26 == 0) {\ncode_r0x00481005:\n            *arg_ch = 6;\n            *arg_8h = var_4h;\n            return 0;\n        }\ncode_r0x00406c50:\n        puVar24 = var_10h;\n        if (((var_28h != 0) && ((uVar26 & 0xfc00) == 0xd800)) && (uVar26 = *var_4h,  (uVar26 & 0xfc00) == 0xd800)) {\n            puVar28 = var_4h + 2;\n            var_4h = var_4h + 2;\n            uVar26 = ((uVar26 & 0x3ff) << 10 | *puVar28 & 0x3ff) + 0x10000;\n        }\n        puVar8 = var_4h;\n        if ((arg_2ch != NULL) && (puVar21 < puVar30)) {\n            *arg_2ch = *arg_2ch + (puVar30 - puVar21 >> 1);\n            var_44h = 0x1;\n            var_24h = puVar21;\n            var_60h = puVar21;\n            puVar30 = puVar21;\n        }\n        if (var_2ch != 0) {\n            if ((uVar26 == 0x5c) && (*(var_4h + 2) == 0x45)) {\n                var_2ch = 0;\n                var_4h = var_4h + 2;\n                goto code_r0x00406d07;\n            }\n            goto code_r0x00406c97;\n        }\n        if (uVar26 == 0x5b) {\n            iVar25 = *(var_4h + 2);\n            if ((((iVar25 != 0x3a) && (iVar25 != 0x2e)) && (iVar25 != 0x3d)) || (iVar12 = fcn.0047077a(),  iVar12 == 0))\n            goto code_r0x00406c97;\n            iVar12 = *(arg_28h + 8);\n            if (iVar25 != 0x3a) {\n                *arg_ch = 0x1f;\n                *arg_8h = puVar8;\n                return 0;\n            }\n            puVar21 = puVar8 + 1;\n            bVar31 = *puVar21 == 0x5e;\n            if (bVar31) {\n                puVar21 = puVar8 + 6;\n                var_38h = 0x1;\n            }\n            var_68h = bVar31;\n            var_4h = puVar21;\n            uVar26 = fcn.0047072f();\n            if (uVar26 < 0) {\n                *arg_ch = 0x1e;\n                *arg_8h = puVar21;\n                return 0;\n            }\n            if ((var_10h & 1) != 0) {\n                uVar26 = uVar26 & (uVar26 < 3) - 1;\n            }\n            if (((var_10h & 0x20000000) != 0) && (iVar11 = *(((-bVar31 & 0xe) + uVar26) * 4 + 0x4bff88),  iVar11 != 0))\n            {\n                var_80h = var_8ch + 2;\n                var_4h = iVar11 + -2;\n                puVar21 = var_14h;\n                puVar30 = var_24h;\n                goto code_r0x00406d07;\n            }\n            fcn.0041faa0(&var_134h, *(uVar26 * 0xc + 0x4b5c30) + iVar12, 0x20);\n            iVar11 = *(uVar26 * 0xc + 0x4b5c34);\n            iVar10 = *(uVar26 * 0xc + 0x4b5c38);\n            if (-1 < iVar11) {\n                uVar26 = 0;\n                iVar11 = iVar11 + iVar12;\n                if (iVar10 < 0) {\n                    do {\n                        *(&var_134h + uVar26) = *(&var_134h + uVar26) & ~*(iVar11 + uVar26);\n                        uVar26 = uVar26 + 1;\n                    } while (uVar26 < 0x20);\n                }\n                else {\n                    do {\n                        *(&var_134h + uVar26) = *(&var_134h + uVar26) | *(iVar11 + uVar26);\n                        uVar26 = uVar26 + 1;\n                    } while (uVar26 < 0x20);\n                }\n            }\n            if (iVar10 < 0) {\n                iVar10 = -iVar10;\n            }\n            if (iVar10 == 1) {\n                var_134h._1_1_ = var_134h._1_1_ & 0xc3;\n            }\n            else if (iVar10 == 2) {\n                var_129h._0_1_ = var_129h & 0x7f;\n            }\n            uVar26 = 0;\n            if (var_68h == 0) {\n                do {\n                    *(&var_c4h + uVar26) = *(&var_c4h + uVar26) | *(&var_134h + uVar26);\n                    uVar26 = uVar26 + 1;\n                } while (uVar26 < 0x20);\n            }\n            else {\n                do {\n                    *(&var_c4h + uVar26) = *(&var_c4h + uVar26) | ~*(&var_134h + uVar26);\n                    uVar26 = uVar26 + 1;\n                } while (uVar26 < 0x20);\n            }\n            puVar24 = var_8ch + 2;\n            puVar23 = 0x1;\n            var_ch = 2;\n            goto code_r0x00406cfe;\n        }\n        if (uVar26 != 0x5c) {\ncode_r0x00406c97:\n            puVar21 = puVar8;\n            if (*(puVar8 + 2) == 0x5c) {\n                do {\n                    puVar8 = puVar21;\n                    if (*(puVar21 + 1) != 0x45) break;\n                    puVar8 = puVar21 + 1;\n                    var_2ch = 0;\n                    piVar19 = puVar21 + 6;\n                    puVar21 = puVar8;\n                    var_4h = puVar8;\n                } while (*piVar19 == 0x5c);\n            }\n            if ((uVar26 == 0xd) || (uVar26 == 10)) {\n                *(arg_28h + 0x54) = *(arg_28h + 0x54) | 0x800;\n            }\n            puVar21 = var_4h;\n            if ((var_2ch == 0) && (*(puVar8 + 2) == 0x2d)) {\n                var_4h = puVar8 + 1;\n                iVar25 = *var_4h;\n                while (iVar25 == 0x5c) {\n                    if (*(var_4h + 2) != 0x45) {\n                        if (*var_4h == 0x5c) goto code_r0x00480f0c;\n                        break;\n                    }\n                    var_4h = var_4h + 1;\n                    iVar25 = *var_4h;\n                }\n                goto code_r0x00407387;\n            }\n            goto code_r0x00406cc5;\n        }\n        iVar12 = fcn.00407888(arg_ch, *(arg_28h + 0x38), var_10h, 1);\n        uVar13 = var_ch;\n        puVar23 = var_1ch;\n        if (*arg_ch != 0) goto code_r0x004831e6;\n        uVar26 = var_d4h;\n        puVar8 = var_4h;\n        var_ch = uVar13;\n        if (iVar12 == 0) goto code_r0x00406c97;\n        if (iVar12 == 5) {\n            uVar26 = 8;\n            goto code_r0x00406c97;\n        }\n        if (iVar12 == 0xc) {\n            *arg_ch = 0x47;\n            goto code_r0x004831e6;\n        }\n        puVar21 = var_14h;\n        puVar30 = var_24h;\n        if (iVar12 == 0x1a) {\n            if ((*(var_4h + 2) == 0x5c) && (*(var_4h + 1) == 0x45)) {\n                var_4h = var_4h + 1;\n            }\n            else {\n                var_2ch = 1;\n            }\n            goto code_r0x00406d07;\n        }\n        if (iVar12 == 0x19) goto code_r0x00406d07;\n        var_ch = var_ch + 2;\n        puVar2 = *(arg_28h + 8);\n        var_1ch = var_1ch + 1;\n    // switch table (29 cases) at 0x4831f3\n        switch(iVar12) {\n        case 6:\n            var_38h = 0x1;\n            uVar26 = 0;\n            do {\n                *(&var_c4h + uVar26) = *(&var_c4h + uVar26) | ~puVar2[uVar26 + 0x40];\n                uVar26 = uVar26 + 1;\n            } while (uVar26 < 0x20);\n            break;\n        case 7:\n            uVar26 = 0;\n            do {\n                *(&var_c4h + uVar26) = *(&var_c4h + uVar26) | puVar2[uVar26 + 0x40];\n                uVar26 = uVar26 + 1;\n            } while (uVar26 < 0x20);\n            break;\n        case 8:\n            uVar26 = 0;\n            var_38h = 0x1;\n            do {\n                puVar15 = &var_c4h + uVar26;\n                uVar26 = uVar26 + 1;\n                *puVar15 = *puVar15 | ~puVar15[puVar2 - &var_c4h];\n            } while (uVar26 < 0x20);\n            var_c4h._1_1_ = var_c4h._1_1_ | 8;\n            break;\n        case 9:\n            var_c4h._0_1_ = var_c4h | *puVar2;\n            var_c4h._1_1_ = var_c4h._1_1_ | puVar2[1] & 0xf7;\n            uVar26 = 2;\n            do {\n                *(&var_c4h + uVar26) = *(&var_c4h + uVar26) | puVar2[uVar26];\n                uVar26 = uVar26 + 1;\n            } while (uVar26 < 0x20);\n            break;\n        case 10:\n            var_38h = 0x1;\n            uVar26 = 0;\n            do {\n                *(&var_c4h + uVar26) = *(&var_c4h + uVar26) | ~puVar2[uVar26 + 0xa0];\n                uVar26 = uVar26 + 1;\n            } while (uVar26 < 0x20);\n            break;\n        case 0xb:\n            uVar26 = 0;\n            do {\n                *(&var_c4h + uVar26) = *(&var_c4h + uVar26) | puVar2[uVar26 + 0xa0];\n                uVar26 = uVar26 + 1;\n            } while (uVar26 < 0x20);\n            break;\n        default:\n            if ((puVar24 & 0x40) != 0) {\n                *arg_ch = 7;\n                *arg_8h = var_4h;\n                return 0;\n            }\n            var_1ch = puVar23;\n            uVar26 = *var_4h;\n            var_ch = uVar13;\n            goto code_r0x00406c97;\n        case 0xf:\n        case 0x10:\n            var_e4h = 0;\n            var_f4h = 0;\n            iVar11 = fcn.004714aa(&var_e4h, &var_f4h, arg_ch);\n            if (iVar11 != 0) {\n                var_60h = var_24h + 6;\n                *var_24h = ((iVar12 == 0x10) == var_108h) + 3;\n                *(var_24h + 2) = var_e4h;\n                *(var_24h + 1) = var_f4h;\n                puVar23 = var_1ch + -1;\n                goto code_r0x00406cf8;\n            }\n            goto code_r0x004831e6;\n        case 0x12:\n            fcn.0047050a(puVar24, arg_28h, 0x4b6178);\n            var_24h = var_60h;\n            puVar21 = var_14h;\n            puVar30 = var_24h;\n            break;\n        case 0x13:\n            arg_10h_00 = 0x4b6178;\n            goto code_r0x00480d98;\n        case 0x14:\n            fcn.0047050a(puVar24, arg_28h, str._n_v_f_r);\n            var_24h = var_60h;\n            puVar21 = var_14h;\n            puVar30 = var_24h;\n            break;\n        case 0x15:\n            arg_10h_00 = str._n_v_f_r;\ncode_r0x00480d98:\n            fcn.004704aa(puVar24, arg_28h, arg_10h_00, 0xffffffff);\n            var_24h = var_60h;\n            puVar21 = var_14h;\n            puVar30 = var_24h;\n            break;\n        case 0x1d:\n        case 0x1e:\n        case 0x1f:\n        case 0x20:\n        case 0x21:\n        case 0x22:\n            puVar24 = *(iVar12 * 4 + 0x4bfefc) + -2;\n            var_80h = var_4h;\n            goto code_r0x00406cfe;\n        }\n        goto code_r0x00406d07;\n    case 0x5c:\n        var_8ch = puVar30;\n        uVar13 = fcn.00407888(arg_ch, *(arg_28h + 0x38), var_10h, 0);\n        var_ch = uVar13;\n        if (*arg_ch != 0) goto code_r0x004831e6;\n        uVar26 = var_d4h;\n        if (uVar13 == 0) {\ncode_r0x0040734a:\n            if ((uVar26 < 0x10000) || (var_28h == 0)) {\n                var_104h._0_2_ = uVar26;\n                var_ch = 1;\n                puVar21 = var_8h;\n            }\n            else {\n                var_ch = fcn.00471a0c();\n                uVar26 = var_104h;\n                puVar21 = var_8h;\n            }\n            goto code_r0x0040693d;\n        }\n        puVar24 = var_10h;\n        puVar30 = var_4h;\n        puVar21 = var_8h;\n        if (uVar13 == 0x1a) {\n            if ((*(var_4h + 2) == 0x5c) && (*(var_4h + 1) == 0x45)) {\n                puVar30 = var_4h + 1;\n            }\n            else {\n                var_2ch = 1;\n            }\n            goto code_r0x00406a38;\n        }\n        if (uVar13 == 0x19) goto code_r0x00406a38;\n        if ((var_34h == 0xfffffffe) && (uVar13 - 6 < 0x11)) {\n            var_34h = 0xffffffff;\n        }\n        var_70h = var_64h;\n        var_78h = var_5ch;\n        var_6ch = var_34h;\n        var_68h = var_54h;\n        if (uVar13 == 0x1b) {\n            puVar8 = var_4h + 2;\n            var_40h = *(arg_28h + 0x24);\n            var_50h = var_4h + 1;\n            var_24h = NULL;\n            var_44h = NULL;\n            puVar9 = ((*puVar8 != 0x3c) - 1 & 0x17) + 0x27;\n            var_14h = puVar9;\n            puVar30 = puVar8;\n            if ((*(var_4h + 1) != 0x2b) && (*(var_4h + 1) != 0x2d)) {\n                bVar31 = true;\n                uVar7 = *var_50h;\n                puVar20 = var_50h;\n                puVar4 = puVar9;\n                while (puVar27 = puVar9,  uVar7 != 0) {\n                    puVar27 = puVar4;\n                    if (uVar7 == puVar4) goto code_r0x00481e3d;\n                    dStack80 = CONCAT44(0xff, uStack80);\n                    if (0xff < uVar7) {\n                        bVar31 = false;\n                        break;\n                    }\n                    uVar1 = *(uVar7 + *(arg_28h + 0xc));\n                    bVar31 = bVar31 & (uVar1 & 4) != 0;\n                    puVar27 = puVar9;\n                    if ((uVar1 & 0x10) == 0) break;\n                    puVar28 = puVar20 + 2;\n                    puVar20 = puVar20 + 2;\n                    puVar4 = var_14h;\n                    uVar7 = *puVar28;\n                }\n                if (*puVar20 == puVar27) {\ncode_r0x00481e3d:\n                    puVar9 = puVar27;\n                    if (!bVar31) goto code_r0x00482a1c;\n                    goto code_r0x00481e48;\n                }\n                *arg_ch = 0x39;\n                goto code_r0x00406a38;\n            }\n            piVar19 = var_4h + 6;\n            uVar7 = *(var_4h + 6);\n            while ((0x2f < uVar7 && (uVar7 < 0x3a))) {\n                puVar28 = piVar19 + 1;\n                piVar19 = piVar19 + 1;\n                uVar7 = *puVar28;\n            }\n            if (*piVar19 != puVar9) {\n                *arg_ch = 0x39;\n                goto code_r0x00406a38;\n            }\ncode_r0x00481e48:\n            iVar25 = puVar9;\n            var_4h = var_50h;\n            goto code_r0x00482be2;\n        }\n        if (uVar13 == 0x1c) {\n            iVar25 = *(var_4h + 2);\n            if (((iVar25 == 0x3c) || (iVar25 == 0x27)) || (iVar25 == 0x7b)) {\n                puVar8 = var_4h + 2;\n                var_20h = NULL;\n                if (*puVar8 == 0x3c) {\n                    puVar27 = 0x3e;\n                    var_14h = 0x3e;\n                }\n                else {\n                    puVar27 = ((*puVar8 != 0x27) - 1 & 0xffffffaa) + 0x7d;\n                    var_14h = puVar27;\n                }\n                goto code_r0x00482a23;\n            }\n            *arg_ch = 0x45;\n            goto code_r0x00406a38;\n        }\n        if (uVar13 < 0) {\n            uVar26 = -uVar13;\n            goto code_r0x00482b5d;\n        }\n        if ((uVar13 != 0xf) && (uVar13 != 0x10)) {\n            if (((uVar13 == 5) || ((uVar13 == 4 || (uVar13 == 1)))) && (*(arg_28h + 0x40) == 0)) {\n                *(arg_28h + 0x40) = 1;\n            }\n            if ((0x1c < uVar13) && (uVar13 < 0x23)) {\n                var_80h = var_4h + 2;\n                puVar30 = *(uVar13 * 4 + 0x4bfefc) + -2;\n                goto code_r0x00406a38;\n            }\n            if (uVar13 - 6 < 0x11) {\n                var_18h = var_8h;\n            }\n            else {\n                var_18h = NULL;\n            }\n            if ((var_28h == 0) && (uVar13 == 0xe)) {\n                uVar13 = 0xd;\n            }\n            *var_8h = uVar13;\n            puVar21 = var_8h + 2;\n            var_8h = puVar21;\n            var_4h = var_4h + 2;\n            goto code_r0x0040674d;\n        }\n        var_ech = 0;\n        var_f0h = 0;\n        iVar12 = fcn.004714aa(&var_ech, &var_f0h, arg_ch);\n        if (iVar12 == 0) goto code_r0x004831e6;\n        var_18h = var_8h;\n        *var_8h = ((var_ch == 0x10) != var_10ch) + 0xf;\n        *(var_8h + 2) = var_ech;\n        *(var_8h + 1) = var_f0h;\n        puVar21 = var_8h + 6;\n        var_8h = puVar21;\n        puVar24 = var_10h;\n        puVar30 = var_4h;\n        goto code_r0x00406a38;\n    case 0x5d:\n        if ((*(arg_28h + 0x50) & 0x2000000) != 0) {\n            *arg_ch = 0x40;\n            *arg_8h = puVar30;\n            return 0;\n        }\n        goto code_r0x0040690d;\n    case 0x5e:\n        var_18h = NULL;\n        if ((var_10h & 2) == 0) {\n            *puVar21 = 0x19;\n            var_8h = puVar21 + 2;\n            puVar21 = puVar21 + 2;\n            puVar30 = var_4h;\n        }\n        else {\n            if (var_34h == 0xfffffffe) {\n                var_34h = 0xffffffff;\n            }\n            *puVar21 = 0x1a;\n            var_8h = puVar21 + 2;\n            puVar21 = puVar21 + 2;\n            puVar30 = var_4h;\n        }\n        goto code_r0x00406a38;\n    case 0x7b:\n        if (puVar8 == NULL) goto code_r0x0040690d;\n        puVar30 = fcn.00471603(&var_30h, arg_ch);\n        puVar21 = var_8h;\n        var_4h = puVar30;\n        fVar32 = extraout_ST0_01;\n        if (*arg_ch != 0) goto code_r0x004831e6;\n        goto code_r0x00406f2d;\n    default:\n        var_4h = puVar30 + 2;\n        var_40h = *(arg_28h + 0x24);\n        var_14h = var_10h;\n        var_24h = NULL;\n        var_ch = 0x7f;\n        var_44h = NULL;\n        if (*var_4h == 0x2a) {\n            var_50h = puVar30 + 1;\n            uVar7 = *var_50h;\n            if (uVar7 == 0x3a) {\ncode_r0x004820c9:\n                uVar7 = *var_50h;\n                var_58h = NULL;\n                var_18h = NULL;\n                uVar26 = 0;\n                var_20h = 0x4b4d74;\n                var_4h = var_50h;\n                if (uVar7 < 0x100) {\n                    do {\n                        if ((*(uVar7 + *(arg_28h + 0xc)) & 2) == 0) break;\n                        var_4h = var_4h + 2;\n                        uVar7 = *var_4h;\n                    } while (uVar7 < 0x100);\n                }\n                uVar13 = var_4h - var_50h >> 1;\n                if (*var_4h == 0x3a) {\n                    var_58h = var_4h + 2;\n                    iVar25 = *var_58h;\n                    var_4h = var_58h;\n                    while ((iVar25 != 0 && (iVar25 != 0x29))) {\n                        var_4h = var_4h + 2;\n                        iVar25 = *var_4h;\n                    }\n                    uVar26 = var_4h - var_58h >> 1;\n                    if (0xffff < uVar26) {\n                        *arg_ch = 0x4b;\n                        *arg_8h = var_4h;\n                        return 0;\n                    }\n                }\n                puVar21 = var_4h;\n                if (*var_4h != 0x29) {\ncode_r0x004821b9:\n                    *arg_ch = 0x3c;\n                    *arg_8h = puVar21;\n                    return 0;\n                }\n                var_38h = NULL;\n                var_44h = 0x4b4e68;\n                do {\n                    var_48h = *var_44h;\n                    dStack80 = dStack80 & 0xffffffff | ZEXT48(var_48h) << 0x20;\n                    if (uVar13 == var_48h) {\n                        iVar12 = fcn.0041ee64(uVar13);\n                        if (iVar12 == 0) goto code_r0x004821ce;\n                    }\n                    var_20h = var_20h + var_48h + 1U;\n                    var_44h = var_44h + 3;\n                    var_38h = var_38h + 1;\n                    if (0x4b4ed3 < var_44h) goto code_r0x004821b9;\n                } while( true );\n            }\n            dStack80 = CONCAT44(0xff, uStack80);\n            if ((uVar7 < 0x100) && ((*(uVar7 + *(arg_28h + 0xc)) & 2) != 0)) goto code_r0x004820c9;\n        }\n        if (*var_4h != 0x3f) {\n            if ((var_10h & 0x1000) != 0) {\n                uVar26 = 0x7d;\n                var_ch = 0x7d;\n                goto code_r0x004070fc;\n            }\ncode_r0x004070e4:\n            *(arg_28h + 0x38) = *(arg_28h + 0x38) + 1;\n            uVar6 = *(arg_28h + 0x38);\n            uVar26 = var_ch;\ncode_r0x004070ee:\n            var_24h = 0x1;\n            *(puVar21 + 1) = uVar6;\n            goto code_r0x004070fc;\n        }\n        puVar8 = puVar30 + 1;\n        puVar27 = *puVar8;\n        var_4h = puVar8;\n        if ((0x52 < puVar27) && (puVar27 < 0x7c)) goto code_r0x00406ac7;\n    // switch table (92 cases) at 0x4832ef\n        switch(puVar27) {\n        case 0x21:\n            var_4h = puVar30 + 6;\n            if (*var_4h != 0x29) {\n                *(arg_28h + 0x4c) = *(arg_28h + 0x4c) + 1;\n                uVar26 = 0x78;\n                var_ch = 0x78;\n                break;\n            }\n            *puVar21 = 0x97;\n            puVar21 = puVar21 + 2;\n            var_8h = puVar21;\n            var_18h = NULL;\n            puVar30 = var_4h;\n            goto code_r0x00406a38;\n        default:\n            goto code_r0x00406ac7;\n        case 0x23:\n            puVar30 = puVar30 + 6;\n            iVar25 = *puVar30;\n            while( true ) {\n                if (iVar25 == 0) goto code_r0x00482313;\n                if (iVar25 == 0x29) break;\n                puVar30 = puVar30 + 2;\n                iVar25 = *puVar30;\n            }\n            if (*puVar30 == 0) {\ncode_r0x00482313:\n                *arg_ch = 0x12;\n                *arg_8h = puVar30;\n                return 0;\n            }\n            goto code_r0x00406a38;\n        case 0x26:\n            puVar27 = 0x29;\n            var_14h = 0x29;\ncode_r0x00482a1c:\n            var_24h = NULL;\n            var_20h = 0x1;\n            goto code_r0x00482a23;\n        case 0x27:\ncode_r0x004828dc:\n            if (puVar27 == 0x3c) {\ncode_r0x00482820:\n                iVar25 = 0x3e;\n            }\n            else {\n                iVar25 = 0x27;\n            }\n            var_58h = puVar8 + 2;\n            uVar7 = *var_58h;\n            var_4h = var_58h;\n            if (uVar7 < 0x100) {\n                do {\n                    if ((*(uVar7 + *(arg_28h + 0xc)) & 0x10) == 0) break;\n                    var_4h = var_4h + 2;\n                    uVar7 = *var_4h;\n                } while (uVar7 < 0x100);\n            }\n            iVar12 = var_4h - var_58h >> 1;\n            if (arg_2ch == NULL) {\n                puVar21 = *(arg_28h + 0x28);\n                dStack80 = dStack80 & 0xffffffff;\n                var_50h = NULL;\n                if (*(arg_28h + 0x2c) < 1) {\ncode_r0x0048299c:\n                    var_50h = *(arg_28h + 0x28);\n                    iVar11 = 0;\n                    if (0 < *(arg_28h + 0x2c)) {\n                        do {\n                            if (var_50h == puVar21) {\n                                iVar11 = iVar11 + -1;\n                            }\n                            else if (*var_50h == *(arg_28h + 0x38) + 1U) {\n                                *arg_ch = 0x41;\n                                *arg_8h = var_4h;\n                                return 0;\n                            }\n                            iVar11 = iVar11 + 1;\n                            var_50h = var_50h + *(arg_28h + 0x30) * 2;\n                        } while (iVar11 < *(arg_28h + 0x2c));\n                    }\n                }\n                else {\n                    iVar11 = 0;\n                    do {\n                        iVar10 = fcn.00420183(var_58h, puVar21 + 2, iVar12 * 2);\n                        if (iVar10 == 0) {\n                            if (*(puVar21 + iVar12 * 2 + 2) != 0) {\ncode_r0x00482971:\n                                fcn.00426c10(puVar21 + *(arg_28h + 0x30) * 2, puVar21, \n                                             (*(arg_28h + 0x2c) - iVar11) * *(arg_28h + 0x30) * 2);\n                                break;\n                            }\n                            if ((*puVar21 != *(arg_28h + 0x38) + 1U) && ((var_10h & 0x80000) == 0)) {\n                                *arg_ch = 0x2b;\n                                *arg_8h = var_4h;\n                                return 0;\n                            }\n                            dStack80 = CONCAT44(1, uStack80);\n                        }\n                        else if (iVar10 < 0) goto code_r0x00482971;\n                        iVar11 = iVar11 + 1;\n                        puVar21 = puVar21 + *(arg_28h + 0x30) * 2;\n                    } while (iVar11 < *(arg_28h + 0x2c));\n                    if (var_48h == NULL) goto code_r0x0048299c;\n                }\n                *puVar21 = *(arg_28h + 0x38) + 1;\n                fcn.0041faa0(puVar21 + 2, var_58h, iVar12 * 2);\n                *(puVar21 + iVar12 * 2 + 2) = 0;\n                puVar21 = var_8h;\n            }\n            else {\n                if (*var_4h != iVar25) goto code_r0x00483115;\n                if (9999 < *(arg_28h + 0x2c)) {\n                    *arg_ch = 0x31;\n                    *arg_8h = var_4h;\n                    return 0;\n                }\n                if ((*(arg_28h + 0x30) < iVar12 + 2) && (*(arg_28h + 0x30) = iVar12 + 2,  0x20 < iVar12))\n                goto code_r0x0048289c;\n            }\n            *(arg_28h + 0x2c) = *(arg_28h + 0x2c) + 1;\n            var_4h = var_4h + 2;\n            goto code_r0x004070e4;\n        case 0x28:\n            uVar26 = 0x81;\n            var_ch = 0x81;\n            var_8ch = puVar8;\n            if (*(puVar30 + 6) == 0x3f) {\n                if (*(puVar30 + 2) == 0x43) {\n                    iVar12 = 3;\n                    uVar7 = *(puVar30 + 10);\n                    while ((0x2f < uVar7 && (uVar7 < 0x3a))) {\n                        iVar11 = iVar12 * 2;\n                        iVar12 = iVar12 + 1;\n                        uVar7 = *(puVar30 + iVar11 + 6);\n                    }\n                    if (*(puVar8 + iVar12 * 2) == 0x29) {\n                        var_8ch = puVar8 + iVar12 * 2 + 2;\n                    }\n                }\n                if ((*(var_8ch + 2) == 0x3f) &&\n                   (((iVar25 = *(var_8ch + 1),  iVar25 == 0x3d || (iVar25 == 0x21)) || (iVar25 == 0x3c)))) break;\n            }\n            *(puVar21 + 1) = 0x87;\n            var_58h = 0xffffffff;\n            puVar24 = *(puVar30 + 6);\n            var_24h = 0x2;\n            if (puVar24 == 0x52) {\n                dStack80 = dStack80 & 0xffffffff;\n                puVar23 = var_1ch;\n                if (*(puVar30 + 2) != 0x26) goto code_r0x0048240c;\n                *(puVar21 + 1) = 0x89;\n                var_38h = 0xffffffff;\n                puVar8 = puVar30 + 2;\n            }\n            else {\ncode_r0x0048240c:\n                if (puVar24 == 0x3c) {\n                    puVar8 = puVar30 + 6;\n                    var_38h = 0x3e;\n                }\n                else if (puVar24 == 0x27) {\n                    puVar8 = puVar30 + 6;\n                    var_38h = puVar24;\n                }\n                else {\n                    var_38h = NULL;\n                    if ((puVar24 == 0x2d) || (puVar24 == 0x2b)) {\n                        puVar8 = puVar30 + 6;\n                        var_58h = *puVar8;\n                    }\n                }\n            }\n            var_20h = puVar8 + 2;\n            if ((0xff < *var_20h) || (var_18h = *(arg_28h + 0xc),  (*(*var_20h + var_18h) & 0x10) == 0)) {\n                *arg_ch = 0x1c;\n                *arg_8h = puVar8 + 2;\n                return 0;\n            }\n            uVar7 = *var_20h;\n            var_50h = NULL;\n            var_4h = var_20h;\n            while ((uVar7 < 0x100 && (puVar23 = var_1ch,  (*(var_18h + uVar7) & 0x10) != 0))) {\n                if (-1 < var_50h) {\n                    if ((uVar7 < 0x30) || (0x39 < uVar7)) {\n                        var_50h = 0xffffffff;\n                    }\n                    else {\n                        var_50h = uVar7 + (var_50h * 5 + -0x18) * 2;\n                    }\n                }\n                var_4h = var_4h + 2;\n                uVar7 = *var_4h;\n            }\n            uVar26 = 0x81;\n            uVar13 = var_4h - var_20h >> 1;\n            dStack80 = dStack80 & 0xffffffff | uVar13 << 0x20;\n            if (0 < var_38h) {\n                iVar25 = *var_4h;\n                var_4h = var_4h + 2;\n                if (iVar25 != var_38h) goto code_r0x00483091;\n            }\n            iVar25 = *var_4h;\n            var_4h = var_4h + 2;\n            if (iVar25 != 0x29) {\ncode_r0x00483091:\n                *arg_ch = 0x1a;\n                *arg_8h = var_4h + -2;\n                return 0;\n            }\n            if (arg_2ch == NULL) {\n                if (var_58h < 1) {\n                    puVar30 = NULL;\n                    puVar17 = *(arg_28h + 0x28);\n                    puVar24 = var_58h;\n                    puVar18 = var_18h;\n                    if (0 < *(arg_28h + 0x2c)) {\n                        puVar30 = NULL;\n                        do {\n                            iVar12 = fcn.0047191e(uVar13);\n                            puVar21 = var_8h;\n                            puVar23 = var_1ch;\n                            puVar24 = puVar30;\n                            puVar18 = puVar17;\n                            if (iVar12 == 0) break;\n                            puVar30 = puVar30 + 1;\n                            puVar17 = puVar17 + *(arg_28h + 0x30);\n                            puVar24 = puVar30;\n                            puVar18 = puVar17;\n                        } while (puVar30 < *(arg_28h + 0x2c));\n                    }\n                    var_18h = puVar18;\n                    var_58h = puVar24;\n                    uVar26 = var_ch;\n                    if (puVar30 < *(arg_28h + 0x2c)) {\n                        uVar6 = *puVar17;\n                        *(puVar21 + 1) = *(puVar21 + 1) + 1;\n                        *(puVar21 + 6) = uVar6;\n                    }\n                    else {\n                        iVar12 = fcn.00470f54(var_48h, puVar23 != NULL, var_28h);\n                        puVar21 = var_8h;\n                        if (iVar12 < 1) {\n                            if (var_38h != NULL) goto code_r0x00483079;\n                            if (*var_20h != 0x52) {\n                                if ((var_48h == 0x6) && (iVar12 = fcn.0041ee64(6),  iVar12 == 0)) {\n                                    uVar6 = 0x8b;\n                                    puVar21 = var_8h;\n                                    goto code_r0x004070ee;\n                                }\n                                if ((var_50h < 1) || (*(arg_28h + 0x3c) < var_50h)) {\n                                    *arg_ch = (-(var_50h != NULL) & 0xffffffec) + 0x23;\n                                    *arg_8h = var_4h;\n                                    return 0;\n                                }\n                                *(var_8h + 6) = var_50h;\n                                puVar21 = var_8h;\n                                break;\n                            }\n                            iVar11 = 0;\n                            iVar12 = 1;\n                            if (var_48h < 2) {\ncode_r0x0048263c:\n                                iVar11 = 0xffff;\n                            }\n                            else {\n                                do {\n                                    uVar13 = *(var_20h + iVar12 * 2);\n                                    if ((uVar13 < 0x30) || (0x39 < uVar13)) goto code_r0x00483079;\n                                    iVar12 = iVar12 + 1;\n                                    iVar11 = uVar13 + iVar11 * 10 + -0x30;\n                                } while (iVar12 < var_48h);\n                                if (iVar11 == 0) goto code_r0x0048263c;\n                            }\n                            *(var_8h + 1) = 0x89;\n                            *(var_8h + 6) = iVar11;\n                        }\n                        else {\n                            *(var_8h + 1) = *(var_8h + 1) + 1;\n                            *(var_8h + 6) = iVar12;\n                        }\n                    }\n                }\n                else {\n                    if (var_50h < 1) goto code_r0x00483046;\n                    if (var_58h == 0x2d) {\n                        iVar12 = (*(arg_28h + 0x38) - var_50h) + 1;\n                    }\n                    else {\n                        iVar12 = var_50h + *(arg_28h + 0x38);\n                    }\n                    if ((iVar12 < 1) || (*(arg_28h + 0x3c) < iVar12)) goto code_r0x00482c9b;\n                    *(puVar21 + 6) = iVar12;\n                }\n            }\n            break;\n        case 0x2b:\n        case 0x2d:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n            goto code_r0x00482bda;\n        case 0x3a:\n            goto code_r0x0048233a;\n        case 0x3c:\n            uVar26 = *(puVar30 + 6);\n            if (uVar26 == 0x21) {\n                uVar26 = 0x7a;\n                *(arg_28h + 0x4c) = *(arg_28h + 0x4c) + 1;\n                var_ch = 0x7a;\n                var_4h = puVar30 + 2;\n            }\n            else {\n                if (uVar26 != 0x3d) {\n                    if ((0xff < *(puVar30 + 6)) || ((*(uVar26 + *(arg_28h + 0xc)) & 0x10) == 0)) {\n                        *arg_ch = 0x18;\n                        *arg_8h = puVar30 + 6;\n                        return 0;\n                    }\n                    goto code_r0x004828dc;\n                }\n                uVar26 = 0x79;\n                *(arg_28h + 0x4c) = *(arg_28h + 0x4c) + 1;\n                var_ch = 0x79;\n                var_4h = puVar30 + 2;\n            }\n            break;\n        case 0x3d:\n            *(arg_28h + 0x4c) = *(arg_28h + 0x4c) + 1;\n            uVar26 = 0x77;\n            var_ch = 0x77;\n            var_4h = puVar30 + 6;\n            break;\n        case 0x3e:\n            uVar26 = 0x7b;\n            var_ch = 0x7b;\n            var_4h = puVar30 + 6;\n            break;\n        case 0x43:\n            *puVar21 = 0x70;\n            puVar30 = puVar30 + 6;\n            uVar7 = *puVar30;\n            iVar12 = 0;\n            var_7ch = puVar21;\n            var_a0h = 1;\n            while ((0x2f < uVar7 && (uVar7 < 0x3a))) {\n                puVar30 = puVar30 + 2;\n                iVar12 = uVar7 + (iVar12 * 5 + -0x18) * 2;\n                uVar7 = *puVar30;\n            }\n            if (*puVar30 != 0x29) {\n                *arg_ch = 0x27;\n                *arg_8h = puVar30;\n                return 0;\n            }\n            if (0xff < iVar12) {\n                *arg_ch = 0x26;\n                *arg_8h = puVar30;\n                return 0;\n            }\n            *(puVar21 + 2) = iVar12;\n            *(puVar21 + 1) = (puVar30 - *(arg_28h + 0x18) >> 1) + 1;\n            *(puVar21 + 6) = 0;\n            puVar21 = puVar21 + 2;\n            var_8h = puVar21;\n            var_18h = NULL;\n            goto code_r0x00406a38;\n        case 0x50:\n            puVar8 = puVar30 + 6;\n            iVar25 = *puVar8;\n            if (iVar25 == 0x3d) {\n                puVar27 = 0x29;\n                var_20h = NULL;\n                var_14h = 0x29;\n            }\n            else {\n                if (iVar25 != 0x3e) {\n                    if (iVar25 != 0x3c) {\n                        *arg_ch = 0x29;\n                        *arg_8h = puVar8;\n                        return 0;\n                    }\n                    goto code_r0x00482820;\n                }\n                puVar27 = 0x29;\n                var_20h = 0x1;\n                var_14h = 0x29;\n            }\ncode_r0x00482a23:\n            iVar25 = puVar27;\n            var_38h = puVar8 + 2;\n            uVar7 = *var_38h;\n            var_4h = var_38h;\n            if (uVar7 < 0x100) {\n                do {\n                    if ((*(uVar7 + *(arg_28h + 0xc)) & 0x10) == 0) break;\n                    var_4h = var_4h + 2;\n                    uVar7 = *var_4h;\n                } while (uVar7 < 0x100);\n                iVar25 = var_14h;\n            }\n            puVar16 = var_4h - var_38h >> 1;\n            var_44h = puVar16;\n            if (arg_2ch == NULL) {\n                iVar12 = 0;\n                puVar28 = *(arg_28h + 0x28);\n                var_48h = *(arg_28h + 0x2c);\n                dStack80 = dStack80 & 0xffffffff | ZEXT48(var_48h) << 0x20;\n                if (0 < var_48h) {\n                    do {\n                        iVar11 = fcn.0047191e(puVar16);\n                        puVar21 = var_8h;\n                        puVar23 = var_1ch;\n                        if ((iVar11 == 0) && (puVar28[puVar16 + 1] == 0)) break;\n                        iVar12 = iVar12 + 1;\n                        puVar28 = puVar28 + *(arg_28h + 0x30);\n                    } while (iVar12 < var_48h);\n                }\n                if (iVar12 < var_48h) {\n                    var_ch = *puVar28;\n                }\n                else {\n                    var_ch = fcn.00470f54(var_44h, puVar23 != NULL, var_28h);\n                    puVar21 = var_8h;\n                    if (var_ch < 1) goto code_r0x00483079;\n                }\n            }\n            else {\n                if (puVar16 == NULL) {\n                    *arg_ch = 0x3e;\n                    *arg_8h = var_4h;\n                    return 0;\n                }\n                if (*var_4h != iVar25) {\ncode_r0x00483115:\n                    *arg_ch = 0x2a;\n                    *arg_8h = var_4h;\n                    return 0;\n                }\n                if (0x20 < puVar16) {\ncode_r0x0048289c:\n                    *arg_ch = 0x30;\n                    *arg_8h = var_4h;\n                    return 0;\n                }\n                uVar14 = *(arg_28h + 0x1c);\n                *(arg_28h + 0x1c) = var_4h;\n                var_ch = fcn.00470f54(puVar16, puVar23 != NULL, var_28h);\n                *(arg_28h + 0x1c) = uVar14;\n                puVar21 = var_8h;\n                if (var_ch < 0) {\n                    var_ch = 0;\n                }\n            }\n            uVar26 = var_ch;\n            if (var_20h != NULL) {\ncode_r0x00482ccb:\n                iVar12 = *(arg_28h + 0x14);\n                var_18h = puVar21;\n                if (arg_2ch == NULL) {\n                    *puVar21 = 0;\n                    if (var_ch != 0) {\n                        iVar12 = fcn.0047035d(var_ch);\n                        puVar21 = var_8h;\n                    }\n                    if (iVar12 == 0) {\n                        iVar12 = fcn.00470f54(var_ch, puVar23 != NULL, var_28h);\n                        if (iVar12 < 0) {\ncode_r0x00483079:\n                            *arg_ch = 0xf;\n                            *arg_8h = var_4h;\n                            return 0;\n                        }\n                        iVar12 = *(arg_28h + 0x14) + var_ch * 2;\n                        if ((*(arg_28h + 0x10) + *(arg_28h + 0x34) * 2) - 200U <= *(arg_28h + 0x24)) {\n                            iVar11 = fcn.00470bfc();\n                            *arg_ch = iVar11;\n                            if (iVar11 != 0) goto code_r0x004831e6;\n                        }\n                        **(arg_28h + 0x24) = var_8h + (2 - *(arg_28h + 0x14)) >> 1;\n                        *(arg_28h + 0x24) = *(arg_28h + 0x24) + 2;\n                        puVar21 = var_8h;\n                    }\n                    else if (((*(iVar12 + 2) == 0) && (arg_24h < 1)) &&\n                            (iVar11 = fcn.004707f5(arg_20h, var_28h, arg_28h),  puVar21 = var_8h,  iVar11 != 0)) {\n                        *arg_ch = 0x28;\n                        *arg_8h = var_4h;\n                        return 0;\n                    }\n                }\n                *puVar21 = 0x6f;\n                *(puVar21 + 2) = iVar12 - *(arg_28h + 0x14) >> 1;\n                var_8h = puVar21 + 1;\n                var_a4h = 0;\n                if (var_34h != 0xfffffffe) goto code_r0x00406ba1;\n                var_34h = 0xffffffff;\n                puVar21 = puVar21 + 1;\n                puVar24 = var_10h;\n                puVar30 = var_4h;\n                goto code_r0x00406a38;\n            }\ncode_r0x00482b5d:\n            if (var_34h == 0xfffffffe) {\n                var_34h = 0xffffffff;\n            }\n            var_18h = puVar21;\n            var_8h = puVar21 + 1;\n            *puVar21 = ((var_10h & 1) != 0) + 0x6d;\n            *(puVar21 + 2) = uVar26;\n            uVar13 = 1;\n            if (uVar26 < 0x20) {\n                uVar13 = 1 << (uVar26 & 0x1f);\n            }\n            *(arg_28h + 0x48) = *(arg_28h + 0x48) | uVar13;\n            if (*(arg_28h + 0x44) < uVar26) {\n                *(arg_28h + 0x44) = uVar26;\n            }\n            piVar29 = *(arg_28h + 0x20);\n            if (piVar29 != NULL) {\n                do {\n                    puVar24 = var_10h;\n                    puVar30 = var_4h;\n                    puVar21 = var_8h;\n                    if (*(piVar29 + 1) == uVar26) {\n                        *(piVar29 + 6) = 1;\n                        break;\n                    }\n                    piVar29 = *piVar29;\n                } while (piVar29 != NULL);\n                goto code_r0x00406a38;\n            }\n            goto code_r0x00406ba1;\n        case 0x52:\n            puVar8 = puVar30 + 6;\n            goto code_r0x00482bda;\n        case 0x7c:\n            var_44h = 0x1;\n            goto code_r0x0048233a;\n        }\n        goto code_r0x004070fc;\n    }\ncode_r0x00406f2d:\n    puVar24 = var_18h;\n    uVar26 = var_74h;\n    if (var_18h == NULL) {\n        *arg_ch = 9;\n        *arg_8h = puVar30;\n        return 0;\n    }\n    if (var_74h == 0) {\n        var_64h = var_70h;\n        var_34h = var_6ch;\n        var_5ch = var_78h;\n        var_54h = var_68h;\n    }\n    if (var_74h == var_30h) {\n        var_58h = NULL;\n    }\n    else {\n        var_58h = 0x2;\n    }\n    var_1ch = var_18h;\n    var_3ch = var_18h;\n    var_24h = NULL;\n    if (*(puVar30 + 2) == 0x2b) {\n        puVar23 = NULL;\n        puVar8 = 0x1;\n        puVar30 = puVar30 + 2;\n        var_24h = 0x1;\n        var_4h = puVar30;\n    }\n    else {\n        puVar8 = NULL;\n        puVar23 = var_9ch;\n        if (*(puVar30 + 2) == 0x3f) {\n            puVar30 = puVar30 + 2;\n            puVar23 = var_e0h;\n            var_4h = puVar30;\n        }\n    }\n    var_14h = puVar23;\n    if (*var_18h == 0x6f) {\n        fcn.00426c10(var_18h + 1, var_18h, 4);\n        *puVar24 = 0x4007b;\n        puVar21 = var_8h + 2;\n        puVar24[2] = 0x40072;\n        var_8h = puVar21;\n        var_84h = 6;\n        if (((arg_2ch == NULL) && (uVar13 = *(arg_28h + 0x24),  *(arg_28h + 0x10) + 2U <= uVar13)) &&\n           (*(uVar13 - 2) == puVar24 + (2 - *(arg_28h + 0x14)) >> 1)) {\n            *(uVar13 - 2) = *(uVar13 - 2) + 2;\n        }\n        fVar32 = *0x4b6560;\n        var_1ch = var_3ch;\n        puVar8 = var_24h;\n        puVar30 = var_4h;\n    }\n    puVar24 = var_18h;\n    uVar7 = *var_18h;\n    puVar27 = uVar7;\n    dStack80 = CONCAT24(uVar7, uStack80);\n    var_3ch = var_1ch;\n    if (((puVar27 == 0x1d) || (puVar27 == 0x1e)) || ((puVar27 == 0x1f || (puVar27 == 0x20)))) {\n        if (puVar27 == 0x1e) {\n            var_20h = 0xd;\n        }\n        else if (puVar27 == 0x1f) {\n            var_20h = 0x1a;\n        }\n        else if (puVar27 == 0x20) {\n            var_20h = 0x27;\n        }\n        else {\n            var_20h = NULL;\n        }\n        if (var_28h != 0) {\n            dStack80 = CONCAT44(0xdc00, uStack80);\n            var_44h = puVar21 + -2;\n            if ((*(puVar21 + -2) & 0xfc00) == 0xdc00) {\n                if ((*(puVar21 + -2) & 0xfc00) == 0xdc00) {\n                    var_44h = puVar21 + -1;\n                }\n                uVar13 = puVar21 - var_44h >> 1;\n                fcn.0041faa0(&var_140h, var_44h, uVar13 * 2);\n                puVar24 = uVar13 | 0x10000000;\n                var_38h = puVar24;\n                puVar21 = var_8h;\n                puVar30 = var_4h;\n                puVar8 = var_24h;\n                goto joined_r0x00481916;\n            }\n        }\n        puVar24 = *(puVar21 + -2);\n        var_38h = puVar24;\n        puVar8 = var_24h;\n        if ((puVar27 < 0x1f) && (puVar24 = var_38h,  1 < uVar26)) {\n            var_5ch = puVar24;\n            var_54h = *(arg_28h + 0x58) | var_88h;\n        }\njoined_r0x00481916:\n        puVar23 = var_14h;\n        puVar27 = puVar21;\n        var_38h = puVar24;\n        if (((puVar8 == NULL) && (var_30h < 0)) &&\n           (iVar12 = fcn.00407ad2(puVar30 + 2, var_10h, arg_28h),  puVar23 = var_14h,  puVar27 = var_8h, \n           puVar30 = var_4h,  iVar12 != 0)) {\n            var_24h = 0x1;\n            puVar23 = NULL;\n        }\n        if ((*var_18h == 0x10) || (*var_18h == 0xf)) {\n            var_1ch = *(var_18h + 2);\n            var_ch = *(var_18h + 1);\n        }\n        else {\n            var_ch = 0xffffffff;\n            var_1ch = 0xffffffff;\n        }\n        dStack80 = dStack80 & 0xffffffff | ZEXT48(puVar27) << 0x20;\n        var_8h = var_18h;\n        puVar21 = var_18h;\n        if (var_30h != 0) {\n            var_14h = puVar23 + var_20h;\n            iVar25 = puVar23 + var_20h;\n            iVar22 = var_ch;\n            if (uVar26 == 0) {\n                if (var_30h == 0xffffffff) {\n                    iVar25 = iVar25 + 0x21;\ncode_r0x00407070:\n                    *var_18h = iVar25;\n                    var_8h = var_18h + 2;\n                }\n                else if (var_30h == 1) {\n                    var_8h = var_18h + 2;\n                    *var_18h = iVar25 + 0x25;\n                }\n                else {\n                    *var_18h = iVar25 + 0x27;\n                    *(var_18h + 2) = var_30h;\n                    var_8h = var_18h + 1;\n                }\n            }\n            else if (uVar26 == 1) {\n                if (var_30h == 0xffffffff) {\n                    iVar25 = iVar25 + 0x23;\n                    goto code_r0x00407070;\n                }\n                var_8h = puVar27;\n                puVar21 = puVar27;\n                if (var_30h == 1) goto code_r0x004070b5;\n                *puVar27 = iVar25 + 0x27;\n                *(puVar27 + 2) = var_30h + -1;\n                var_8h = puVar27 + 1;\n            }\n            else {\n                var_8h = var_18h + 1;\n                *var_18h = var_20h + 0x29;\n                *(var_18h + 2) = uVar26;\n                if (var_30h < 0) {\n                    if ((var_28h == 0) || ((puVar24 & 0x10000000) == 0)) {\n                        *var_8h = puVar24;\n                        piVar19 = var_18h + 6;\n                        if (-1 < var_1ch) {\n                            *piVar19 = var_1ch;\n                            *(var_18h + 2) = iVar22;\n                            *(var_18h + 10) = iVar25 + 0x21;\n                            var_8h = var_18h + 3;\n                            goto code_r0x00407082;\n                        }\n                    }\n                    else {\n                        fcn.0041faa0(var_8h, &var_140h, (puVar24 & 7) * 2);\n                        piVar19 = var_8h + (puVar24 & 7) * 2;\n                        puVar24 = var_38h;\n                    }\n                    iVar22 = var_ch;\n                    *piVar19 = var_14h + 0x21;\n                    var_8h = piVar19 + 1;\n                }\n                else if (var_30h != uVar26) {\n                    if ((var_28h == 0) || ((puVar24 & 0x10000000) == 0)) {\n                        *var_8h = puVar24;\n                        piVar19 = var_18h + 6;\n                    }\n                    else {\n                        fcn.0041faa0(var_8h, &var_140h, (puVar24 & 7) * 2);\n                        piVar19 = var_8h + (puVar24 & 7) * 2;\n                        puVar24 = var_38h;\n                    }\n                    iVar22 = var_ch;\n                    if (-1 < var_1ch) {\n                        *piVar19 = var_1ch;\n                        piVar19[1] = iVar22;\n                        piVar19 = piVar19 + 2;\n                    }\n                    var_30h = var_30h - uVar26;\n                    if (var_30h == 1) {\n                        *piVar19 = var_14h + 0x25;\n                        var_8h = piVar19 + 1;\n                    }\n                    else {\n                        *piVar19 = var_14h + 0x27;\n                        piVar19[1] = var_30h;\n                        var_8h = piVar19 + 2;\n                    }\n                }\n            }\ncode_r0x00407082:\n            puVar8 = var_1ch;\n            if ((var_28h == 0) || ((puVar24 & 0x10000000) == 0)) {\n                *var_8h = puVar24;\n                puVar21 = var_8h + 2;\n            }\n            else {\n                fcn.0041faa0(var_8h, &var_140h, (puVar24 & 7) * 2);\n                puVar21 = var_8h + (puVar24 & 7) * 2;\n            }\n            var_8h = puVar21;\n            puVar30 = var_4h;\n            if (-1 < puVar8) {\n                *puVar21 = puVar8;\n                *(puVar21 + 2) = iVar22;\n                puVar21 = puVar21 + 1;\n                var_8h = puVar21;\n            }\n            goto code_r0x004070ab;\n        }\n    }\n    else {\n        if (puVar27 < 0x17) {\n            var_20h = 0x34;\n            var_38h = puVar27;\n            puVar24 = puVar27;\n            goto joined_r0x00481916;\n        }\n        iVar25 = puVar23;\n        if ((((puVar27 == 0x6a) || (puVar27 == 0x6b)) || (puVar27 == 0x6c)) || ((puVar27 == 0x6d || (puVar27 == 0x6e))))\n        {\n            if (var_30h == 0) {\n                var_8h = var_18h;\n                puVar21 = var_18h;\n                goto code_r0x004070b5;\n            }\n            if (uVar26 == 0) {\n                if (var_30h == 0xffffffff) {\n                    *puVar21 = iVar25 + 0x62;\n                    puVar21 = puVar21 + 2;\n                    var_8h = puVar21;\n                    puVar30 = var_4h;\n                }\n                else {\n                    if (var_30h != 1) goto code_r0x0048183f;\n                    *puVar21 = iVar25 + 0x66;\n                    puVar21 = puVar21 + 2;\n                    var_8h = puVar21;\n                    puVar30 = var_4h;\n                }\n            }\n            else if ((uVar26 == 1) && (var_30h == 0xffffffff)) {\n                *puVar21 = iVar25 + 100;\n                puVar21 = puVar21 + 2;\n                var_8h = puVar21;\n                puVar30 = var_4h;\n            }\n            else {\ncode_r0x0048183f:\n                *puVar21 = iVar25 + 0x68;\n                var_30h = -(var_30h != 0xffffffff) & var_30h;\n                *(puVar21 + 2) = uVar26;\n                *(puVar21 + 1) = var_30h;\n                puVar21 = puVar21 + 6;\n                var_8h = puVar21;\n                puVar30 = var_4h;\n            }\n            goto code_r0x004070ab;\n        }\n        if ((puVar27 < 0x77) || (0x81 < uVar7)) {\n            if (uVar7 != 0x97) {\n                *arg_ch = 0xb;\n                *arg_8h = puVar30;\n                return 0;\n            }\n            goto code_r0x004070b5;\n        }\n        var_44h = 0x81;\n        var_ch = puVar21 - var_18h >> 1;\n        var_20h = NULL;\n        var_50h = NULL;\n        if ((uVar7 == 0x81) && (uVar26 = var_74h,  *(var_18h + 1) == 0x8b)) goto code_r0x004070b5;\n        if (uVar7 < 0x7b) {\n            if (0 < uVar26) goto code_r0x004070b5;\n            if ((var_30h < 0) || (1 < var_30h)) {\n                var_30h = 1;\n            }\n        }\n        if (uVar26 == 0) {\n            *puVar21 = 0;\n            if (var_30h < 2) {\n                fcn.0041ed7b(var_28h, arg_28h, var_40h);\n                puVar24 = var_18h + 2;\n                fcn.00426c10(puVar24, var_18h, var_ch * 2);\n                puVar21 = var_8h + 2;\n                var_8h = puVar21;\n                if (var_30h == 0) {\n                    *var_18h = 0x9b;\n                    puVar30 = var_4h;\n                    goto code_r0x004070b5;\n                }\n                var_50h = var_18h;\n                *var_18h = iVar25 + 0x8c;\n            }\n            else {\n                fcn.0041ed7b(var_28h, arg_28h, var_40h);\n                fcn.00426c10(puVar24 + 6, puVar24, var_ch * 2);\n                *puVar24 = iVar25 + 0x8c;\n                *(puVar24 + 2) = 0x7d;\n                puVar21 = var_8h + 6;\n                var_20h = puVar24 + 1;\n                *(puVar24 + 1) = 0;\n                var_8h = puVar21;\n                puVar24 = puVar24 + 6;\n            }\n            var_1ch = var_3ch;\n            var_30h = var_30h - 1;\n            puVar30 = var_4h;\n            var_18h = puVar24;\n            var_8h = puVar21;\ncode_r0x004074e9:\n        }\n        else {\n            if (1 < uVar26) {\n                if (arg_2ch == NULL) {\n                    if ((var_a4h != 0) && (var_54h < 0)) {\n                        var_5ch = var_64h;\n                        var_54h = var_34h;\n                    }\n                    var_44h = 0x1;\n                    if (1 < uVar26) {\n                        var_48h = var_ch * 2;\n                        dStack80 = dStack80 & 0xffffffff | ZEXT48(var_48h) << 0x20;\n                        do {\n                            piVar19 = *(arg_28h + 0x24);\n                            fcn.0041faa0(puVar21, var_18h, var_48h);\n                            iVar12 = *(arg_28h + 0x10);\n                            uVar13 = iVar12 + ((*(arg_28h + 0x34) - (piVar19 - var_40h >> 1)) + -100) * 2;\n                            if (uVar13 <= *(arg_28h + 0x24) && *(arg_28h + 0x24) != uVar13) {\n                                do {\n                                    var_40h = var_40h - iVar12 >> 1;\n                                    iVar11 = piVar19 - iVar12;\n                                    iVar12 = fcn.00470bfc();\n                                    *arg_ch = iVar12;\n                                    if (iVar12 != 0) goto code_r0x004831e6;\n                                    iVar12 = *(arg_28h + 0x10);\n                                    var_40h = iVar12 + var_40h * 2;\n                                    piVar19 = iVar12 + (iVar11 >> 1) * 2;\n                                    uVar13 = iVar12 + ((*(arg_28h + 0x34) - (piVar19 - var_40h >> 1)) + -100) * 2;\n                                } while (uVar13 <= *(arg_28h + 0x24) && *(arg_28h + 0x24) != uVar13);\n                            }\n                            for (; var_40h < piVar19; var_40h = var_40h + 1) {\n                                **(arg_28h + 0x24) = *var_40h + var_ch;\n                                *(arg_28h + 0x24) = *(arg_28h + 0x24) + 2;\n                                uVar26 = var_74h;\n                                puVar23 = var_14h;\n                            }\n                            var_40h = piVar19;\n                            puVar21 = var_8h + var_ch * 2;\n                            var_44h = var_44h + 1;\n                            var_8h = puVar21;\n                        } while (var_44h < uVar26);\n                        var_1ch = var_3ch;\n                        puVar30 = var_4h;\n                    }\n                }\n                else {\n                    iVar12 = (uVar26 - 1) * var_84h;\n                    dStack80 = var_84h;\n                    fVar33 = (uVar26 - 1) * var_84h;\n                    if ((((fVar33 < fVar32) << 8 | (fVar33 == fVar32) << 0xe) == 0) || (0x7fffffeb - *arg_2ch < iVar12))\n                    goto code_r0x00482fed;\n                    *arg_2ch = iVar12 + *arg_2ch;\n                    uVar26 = var_74h;\n                    puVar30 = var_4h;\n                }\n            }\n            if (0 < var_30h) {\n                var_30h = var_30h - uVar26;\n                goto code_r0x004074e9;\n            }\n        }\n        var_3ch = var_1ch;\n        if (var_30h < 0) {\n            var_20h = puVar21 + -1;\n            puVar16 = var_20h + *(puVar21 + -2) * -2;\n            iVar25 = *puVar16;\n            if (((iVar25 == 0x7b) || (iVar25 == 0x7c)) && (var_24h != NULL)) {\n                *puVar16 = 0x7d;\n            }\n            else if ((iVar25 == 0x7b) || (iVar25 == 0x7c)) {\n                *var_20h = puVar23 + 0x73;\n                puVar30 = var_4h;\n                goto code_r0x004070ab;\n            }\n            puVar5 = puVar16;\n            if (arg_2ch == NULL) {\n                do {\n                    var_44h = puVar5;\n                    iVar12 = fcn.00470830(var_28h, arg_28h);\n                    puVar21 = var_8h;\n                    if (iVar12 != 0) {\n                        *puVar16 = *puVar16 + 5;\n                        break;\n                    }\n                    piVar19 = var_44h + *(var_44h + 2) * 2;\n                    var_44h = var_44h + *(var_44h + 2) * 2;\n                    puVar5 = var_44h;\n                } while (*piVar19 == 0x71);\n            }\n            if (var_24h == NULL) {\n                *var_20h = puVar23 + 0x73;\n                puVar30 = var_4h;\n            }\n            else {\n                iVar25 = *puVar16;\n                if ((iVar25 == 0x81) || (iVar25 == 0x86)) {\n                    *puVar21 = 0;\n                    iVar12 = puVar21 - puVar16 >> 1;\n                    fcn.0041ed7b(var_28h, arg_28h, var_40h);\n                    fcn.00426c10(puVar16 + 1, puVar16, iVar12 * 2);\n                    *puVar16 = 0x7e;\n                    iVar25 = iVar12 + 2;\n                    *(var_8h + 1) = 0x75;\n                    *(var_8h + 6) = iVar25;\n                    puVar21 = var_8h + 2;\n                    var_8h = puVar21;\n                    *(puVar16 + 2) = iVar25;\n                }\n                else {\n                    *puVar16 = iVar25 + 1;\n                    *var_20h = 0x75;\n                }\n                if (var_50h != NULL) {\n                    *var_50h = 0x8e;\n                }\n                puVar30 = var_4h;\n                if (1 < uVar26) goto code_r0x004070ab;\n            }\n            goto code_r0x004070b5;\n        }\n        if ((arg_2ch == NULL) || (var_30h < 1)) {\n            iVar12 = var_30h - 1;\n            if (-1 < iVar12) {\n                var_48h = puVar23 + 0x23;\n                var_44h = var_ch * 2;\n                dStack80 = dStack80 & 0xffffffff | ZEXT48(var_48h) << 0x20;\n                do {\n                    var_8h = puVar21 + 2;\n                    piVar19 = *(arg_28h + 0x24);\n                    *puVar21 = var_48h;\n                    if (iVar12 != 0) {\n                        *var_8h = 0x7d;\n                        puVar24 = puVar21 + 1;\n                        if (var_20h == NULL) {\n                            uVar6 = 0;\n                        }\n                        else {\n                            uVar6 = puVar24 - var_20h >> 1;\n                        }\n                        *puVar24 = uVar6;\n                        var_8h = puVar21 + 6;\n                        var_20h = puVar24;\n                    }\n                    fcn.0041faa0(var_8h, var_18h, var_44h);\n                    iVar11 = *(arg_28h + 0x10);\n                    uVar26 = iVar11 + ((*(arg_28h + 0x34) - (piVar19 - var_40h >> 1)) + -100) * 2;\n                    if (uVar26 <= *(arg_28h + 0x24) && *(arg_28h + 0x24) != uVar26) {\n                        do {\n                            var_40h = var_40h - iVar11 >> 1;\n                            iVar10 = piVar19 - iVar11;\n                            iVar11 = fcn.00470bfc();\n                            *arg_ch = iVar11;\n                            if (iVar11 != 0) goto code_r0x004831e6;\n                            iVar11 = *(arg_28h + 0x10);\n                            var_40h = iVar11 + var_40h * 2;\n                            piVar19 = iVar11 + (iVar10 >> 1) * 2;\n                            uVar26 = iVar11 + ((*(arg_28h + 0x34) - (piVar19 - var_40h >> 1)) + -100) * 2;\n                        } while (uVar26 <= *(arg_28h + 0x24) && *(arg_28h + 0x24) != uVar26);\n                    }\n                    if (var_40h < piVar19) {\n                        do {\n                            **(arg_28h + 0x24) = var_ch + 1 + (iVar12 != 0) * 2 + *var_40h;\n                            *(arg_28h + 0x24) = *(arg_28h + 0x24) + 2;\n                            var_40h = var_40h + 1;\n                        } while (var_40h < piVar19);\n                    }\n                    iVar12 = iVar12 + -1;\n                    puVar21 = var_8h + var_ch * 2;\n                    var_40h = piVar19;\n                    var_8h = puVar21;\n                } while (-1 < iVar12);\n                var_1ch = var_3ch;\n                puVar30 = var_4h;\n            }\n        }\n        else {\n            dStack80 = var_30h;\n            iVar12 = (var_84h + 5) * var_30h + -4;\n            dVar3 = (var_84h + 5) * var_30h;\n            if ((((dVar3 < *0x4b6560) << 8 | (dVar3 == *0x4b6560) << 0xe) == 0) || (0x7fffffeb - *arg_2ch < iVar12)) {\ncode_r0x00482fed:\n                *arg_ch = 0x14;\n                *arg_8h = var_4h;\n                return 0;\n            }\n            *arg_2ch = iVar12 + *arg_2ch;\n            puVar30 = var_4h;\n        }\n        puVar8 = puVar21;\n        puVar24 = var_20h;\n        var_3ch = var_1ch;\n        if (var_20h != NULL) {\n            do {\n                iVar12 = (puVar8 - puVar24 >> 1) + 1;\n                uVar26 = *(puVar8 + iVar12 * -2 + 2);\n                if (uVar26 == 0) {\n                    puVar24 = NULL;\n                }\n                else {\n                    puVar24 = puVar24 + uVar26 * -2;\n                }\n                *puVar8 = 0x72;\n                *(puVar8 + 2) = iVar12;\n                puVar21 = puVar8 + 1;\n                *(puVar8 + iVar12 * -2 + 2) = iVar12;\n                puVar8 = puVar21;\n            } while (puVar24 != NULL);\n            var_8h = puVar21;\n            puVar30 = var_4h;\n        }\ncode_r0x004070ab:\n        if (var_24h != NULL) {\n            uVar26 = *var_3ch;\n            if (uVar26 == 0x5d) {\n                if ((*(var_3ch + 1) == 0x10) || (*(var_3ch + 1) == 0xf)) {\n                    iVar12 = 2;\n                }\n                else {\n                    iVar12 = 0;\n                }\n                var_3ch = var_3ch + iVar12 * 2 + 6;\n            }\n            else if ((uVar26 == 0x29) || (uVar26 == 0x43)) {\n                var_3ch = var_3ch + *(uVar26 + 0x49e530) * 2;\n                if ((var_28h != 0) && ((*(var_3ch + -2) & 0xfc00) == 0xd800)) {\n                    var_3ch = var_3ch + 2;\n                }\n            }\n            iVar12 = puVar21 - var_3ch >> 1;\n            if (0 < iVar12) {\n                if (*var_3ch - 0x21 < 0x3b) {\n    // switch table (59 cases) at 0x483247\n                    puVar30 = var_4h;\n                    switch(*(*(*var_3ch + 0x48327a) * 4 + 0x483247)) {\n                    case 0x481bc6:\n                        *var_3ch = 0x2a;\n                        break;\n                    case 0x481bd6:\n                        *var_3ch = 0x2b;\n                        break;\n                    case 0x481be6:\n                        *var_3ch = 0x2c;\n                        break;\n                    case 0x481bf6:\n                        *var_3ch = 0x2d;\n                        break;\n                    case 0x481c06:\n                        *var_3ch = 0x37;\n                        break;\n                    case 0x481c16:\n                        *var_3ch = 0x38;\n                        break;\n                    case 0x481c26:\n                        *var_3ch = 0x39;\n                        break;\n                    case 0x481c36:\n                        *var_3ch = 0x3a;\n                        break;\n                    case 0x481c46:\n                        *var_3ch = 0x44;\n                        break;\n                    case 0x481c56:\n                        *var_3ch = 0x45;\n                        break;\n                    case 0x481c66:\n                        *var_3ch = 0x46;\n                        break;\n                    case 0x481c76:\n                        *var_3ch = 0x47;\n                        break;\n                    case 0x481c86:\n                        *var_3ch = 0x51;\n                        break;\n                    case 0x481c96:\n                        *var_3ch = 0x52;\n                        break;\n                    case 0x481ca6:\n                        *var_3ch = 0x53;\n                        break;\n                    case 0x481cb6:\n                        *var_3ch = 0x54;\n                        break;\n                    case 0x481cc6:\n                        *var_3ch = 0x5e;\n                        break;\n                    case 0x481cd6:\n                        *var_3ch = 0x5f;\n                        break;\n                    case 0x481ce6:\n                        *var_3ch = 0x60;\n                        break;\n                    case 0x481cf6:\n                        *var_3ch = 0x61;\n                        break;\n                    case 0x481d06:\n                        goto code_r0x00481d06;\n                    }\n                }\n                else {\ncode_r0x00481d06:\n                    *puVar21 = 0;\n                    fcn.0041ed7b(var_28h, arg_28h, var_40h);\n                    fcn.00426c10(var_3ch + 1, var_3ch, iVar12 * 2);\n                    *var_3ch = 0x7b;\n                    iVar25 = iVar12 + 2;\n                    *(var_8h + 1) = 0x72;\n                    *(var_8h + 6) = iVar25;\n                    var_8h = var_8h + 2;\n                    *(var_3ch + 2) = iVar25;\n                    puVar21 = var_8h;\n                    puVar30 = var_4h;\n                }\n            }\n        }\n    }\ncode_r0x004070b5:\n    *(arg_28h + 0x58) = *(arg_28h + 0x58) | var_58h;\n    var_18h = NULL;\n    var_4h = puVar30 + 2;\n    puVar24 = var_10h;\n    goto code_r0x0040674d;\ncode_r0x004821ce:\n    uVar13 = *(var_38h * 0xc + 0x4b4e6c);\n    if (uVar13 == 0x98) {\n        if (uVar26 != 0) {\ncode_r0x0048301c:\n            *arg_ch = 0x3b;\n            *arg_8h = puVar21;\n            return 0;\n        }\n        puVar21 = *(arg_28h + 0x20);\n        *(arg_28h + 0x5c) = 1;\n        puVar24 = var_8h;\n        for (; puVar21 != NULL; puVar21 = *puVar21) {\n            *puVar24 = 0x9a;\n            *(puVar24 + 2) = *(puVar21 + 1);\n            puVar24 = puVar24 + 1;\n        }\n        var_8h = puVar24 + 2;\n        uVar7 = (0 < *(arg_28h + 0x4c)) + 0x98;\n        *puVar24 = uVar7;\n        uVar13 = uVar7;\n        if (var_34h == 0xfffffffe) {\n            var_34h = 0xffffffff;\n        }\n    }\n    else {\n        if (uVar26 == 0) {\n            if (uVar13 < 0) {\n                *arg_ch = 0x42;\n                *arg_8h = puVar21;\n                return 0;\n            }\n            uVar13 = uVar13 & 0xffff;\n            uVar6 = uVar13;\n        }\n        else {\n            if (*(var_38h * 0xc + 0x4b4e70) < 0) goto code_r0x0048301c;\n            uVar7 = *(var_38h * 0xc + 0x4b4e70);\n            uVar13 = uVar7;\n            *var_8h = uVar7;\n            *(var_8h + 2) = uVar26;\n            var_8h = var_8h + 1;\n            fcn.0041faa0(var_8h, var_58h, uVar26 * 2);\n            var_8h = var_8h + uVar26 * 2;\n            uVar6 = 0;\n        }\n        *var_8h = uVar6;\n        var_8h = var_8h + 2;\n    }\n    puVar24 = var_10h;\n    puVar30 = var_4h;\n    puVar21 = var_8h;\n    // switch table (6 cases) at 0x4832d7\n    switch(uVar13) {\n    case 0x90:\n    case 0x91:\n    case 0x92:\n    case 0x93:\n        *(arg_28h + 0x60) = 1;\n        break;\n    case 0x94:\n    case 0x95:\n        *(arg_28h + 0x54) = *(arg_28h + 0x54) | 0x1000;\n        break;\n    default:\ncode_r0x00406ba1:\n        var_4h = var_4h + 2;\n        puVar21 = var_8h;\n        puVar24 = var_10h;\n        goto code_r0x0040674d;\n    }\n    goto code_r0x00406a38;\ncode_r0x0048233a:\n    uVar26 = 0x7d;\n    var_ch = 0x7d;\n    var_4h = puVar30 + 6;\ncode_r0x004070fc:\n    *puVar21 = uVar26;\n    uVar13 = *(arg_28h + 0x38);\n    dStack80 = dStack80 & 0xffffffff | *(arg_28h + 0x58) << 0x20;\n    var_84h = 0;\n    if (uVar26 == 0x81) {\n        iVar12 = 1;\ncode_r0x0040714a:\n        uVar14 = 0;\n    }\n    else {\n        iVar12 = 0;\n        if ((uVar26 != 0x79) && (uVar26 != 0x7a)) goto code_r0x0040714a;\n        uVar14 = 1;\n    }\n    var_3ch = puVar21;\n    var_18h = puVar21;\n    iVar12 = fcn.00406348(&var_4h, arg_ch, uVar14, var_44h, var_24h, arg_24h + iVar12, &var_e8h, &var_98h, &var_c8h, \n                          &var_94h, arg_20h, arg_28h, -(arg_2ch != NULL) & &var_84h);\n    if (iVar12 == 0) {\ncode_r0x004831e6:\n        *arg_8h = var_4h;\n        return 0;\n    }\n    uVar26 = var_ch;\n    if (var_ch == 0x7b) {\n        if (*(arg_28h + 0x38) < uVar13 || *(arg_28h + 0x38) == uVar13) {\n            *var_8h = 0x7c;\n        }\n    }\n    else {\n        if ((var_ch < 0x7b) && (0x76 < var_ch)) {\n            *(arg_28h + 0x4c) = *(arg_28h + 0x4c) + -1;\n        }\n        if ((var_ch == 0x81) && (arg_2ch == NULL)) {\n            iVar12 = 0;\n            puVar21 = var_8h;\n            do {\n                iVar12 = iVar12 + 1;\n                piVar19 = puVar21 + *(puVar21 + 2) * 2;\n                puVar21 = puVar21 + *(puVar21 + 2) * 2;\n            } while (*piVar19 != 0x72);\n            if (*(var_8h + 1) == 0x8b) {\n                uVar26 = 0x8b;\n                if (1 < iVar12) {\n                    *arg_ch = 0x36;\n                    *arg_8h = var_4h;\n                    return 0;\n                }\n            }\n            else {\n                if (2 < iVar12) {\n                    *arg_ch = 0x1b;\n                    *arg_8h = var_4h;\n                    return 0;\n                }\n                if (iVar12 == 1) {\n                    var_94h = 0xffffffff;\n                    var_98h = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (*var_4h != 0x29) {\n        *arg_ch = 0xe;\n        *arg_8h = var_4h;\n        return 0;\n    }\n    puVar24 = var_10h;\n    puVar30 = var_4h;\n    if (arg_2ch != NULL) {\n        if (var_84h + -4 <= 0x7fffffeb - *arg_2ch) goto code_r0x004071fa;\n        goto code_r0x004831b1;\n    }\n    var_8h = var_3ch;\n    puVar21 = var_3ch;\n    if (uVar26 != 0x8b) {\n        var_78h = var_5ch;\n        var_68h = var_54h;\n        var_70h = var_64h;\n        var_6ch = var_34h;\n        var_a4h = 0;\n        if (uVar26 < 0x7b) {\n            if ((uVar26 == 0x77) && (-1 < var_94h)) {\n                var_5ch = var_c8h;\n                var_54h = var_94h;\n            }\n            goto code_r0x00406a38;\n        }\n        if (var_34h == 0xfffffffe) {\n            if (var_98h < 0) {\n                var_34h = 0xffffffff;\n                var_6ch = 0xffffffff;\n            }\n            else {\n                var_64h = var_e8h;\n                var_34h = var_98h;\n                var_a4h = 1;\n                var_6ch = 0xffffffff;\n            }\ncode_r0x004072cd:\n            if (var_94h < 0) goto code_r0x00406a38;\n        }\n        else {\n            if (var_98h < 0) goto code_r0x004072cd;\n            if (var_94h < 0) {\n                var_c8h = var_e8h;\n                var_94h = var_98h | var_48h;\n                goto code_r0x004072cd;\n            }\n        }\n        var_5ch = var_c8h;\n        var_54h = var_94h;\n        var_4h = var_4h + 2;\n        goto code_r0x0040674d;\n    }\ncode_r0x00406a38:\n    var_4h = puVar30 + 2;\n    goto code_r0x0040674d;\ncode_r0x00482bda:\n    iVar25 = 0x29;\n    var_14h = 0x29;\n    var_4h = puVar8;\ncode_r0x00482be2:\n    var_24h = NULL;\n    var_44h = NULL;\n    puVar27 = *var_4h;\n    var_50h = puVar27;\n    if (puVar27 == 0x2b) {\n        puVar24 = var_4h + 2;\n        if ((*puVar24 < 0x30) || (0x39 < *puVar24)) {\n            *arg_ch = 0x3f;\n            *arg_8h = puVar24;\n            return 0;\n        }\n    }\n    else {\n        puVar24 = var_4h;\n        if (puVar27 == 0x2d) {\n            puVar24 = var_4h + 2;\n            dStack80 = dStack80 & 0xffffffff | ZEXT48(puVar24) << 0x20;\n            if ((*puVar24 < 0x30) || (0x39 < *puVar24)) {\ncode_r0x00406ac7:\n                var_24h = NULL;\n                var_44h = NULL;\n                var_dch = 0;\n                var_d8h = 0;\n                puVar16 = &var_d8h;\n                puVar24 = var_4h;\n                if (puVar27 != 0x29) {\n                    do {\n                        var_4h = puVar24;\n                        if (puVar27 == 0x3a) break;\n                        var_4h = puVar24 + 2;\n    // switch table (76 cases) at 0x483387\n                        switch(puVar27) {\n                        case 0x2d:\n                            puVar16 = &var_dch;\n                            break;\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x3f:\n                        case 0x40:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x56:\n                        case 0x57:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5b:\n                        case 0x5c:\n                        case 0x5d:\n                        case 0x5e:\n                        case 0x5f:\n                        case 0x60:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                            *arg_ch = 0xc;\n                            *arg_8h = puVar24;\n                            return 0;\n                        case 0x4a:\n                            *puVar16 = *puVar16 | 0x80000;\n                            *(arg_28h + 0x54) = *(arg_28h + 0x54) | 0x400;\n                            break;\n                        case 0x55:\n                            *puVar16 = *puVar16 | 0x200;\n                            break;\n                        case 0x58:\n                            *puVar16 = *puVar16 | 0x40;\n                            break;\n                        case 0x6d:\n                            *puVar16 = *puVar16 | 2;\n                            break;\n                        case 0x73:\n                            *puVar16 = *puVar16 | 4;\n                            break;\n                        case 0x78:\n                            *puVar16 = *puVar16 | 8;\n                            break;\n                        default:\n                            *puVar16 = *puVar16 | 1;\n                        }\n                        puVar27 = *var_4h;\n                        puVar24 = var_4h;\n                    } while (puVar27 != 0x29);\n                }\n                puVar24 = (var_d8h | var_10h) & ~var_dch;\n                if (*var_4h != 0x29) {\n                    uVar26 = 0x7d;\n                    var_ch = 0x7d;\n                    var_4h = var_4h + 2;\n                    goto code_r0x004070fc;\n                }\n                if ((puVar21 == *(arg_28h + 0x14) + 4) && ((arg_2ch == NULL || (*arg_2ch == 4)))) {\n                    *(arg_28h + 0x50) = puVar24;\n                }\n                else {\n                    var_9ch = (puVar24 & 0x200) != 0;\n                    var_e0h = var_9ch ^ 1;\n                    if ((puVar24 & 1) == 0) {\n                        var_88h = 0;\n                    }\n                    else {\n                        var_88h = 1;\n                    }\n                }\n                var_10h = puVar24;\n                *var_114h = puVar24;\n                var_18h = NULL;\n                var_4h = var_4h + 2;\n                goto code_r0x0040674d;\n            }\n        }\n    }\n    var_4h = puVar24;\n    uVar26 = 0;\n    var_ch = 0;\n    uVar13 = *var_4h;\n    if (0x2f < *var_4h) {\n        do {\n            if (0x39 < uVar13) break;\n            var_4h = var_4h + 2;\n            uVar26 = uVar13 + (uVar26 * 5 + -0x18) * 2;\n            uVar13 = *var_4h;\n        } while (0x2f < *var_4h);\n        iVar25 = var_14h;\n        var_ch = uVar26;\n    }\n    if (*var_4h != iVar25) {\n        *arg_ch = 0x1d;\n        *arg_8h = var_4h;\n        return 0;\n    }\n    if (puVar27 == 0x2d) {\n        if (var_ch == 0) {\ncode_r0x00483046:\n            *arg_ch = 0x3a;\n            *arg_8h = var_4h;\n            return 0;\n        }\n        var_ch = (*(arg_28h + 0x38) - var_ch) + 1;\n        if (var_ch < 1) {\ncode_r0x00482c9b:\n            *arg_ch = 0xf;\n            *arg_8h = var_4h;\n            return 0;\n        }\n    }\n    else if (puVar27 == 0x2b) {\n        if (var_ch == 0) goto code_r0x00483046;\n        var_ch = var_ch + *(arg_28h + 0x38);\n    }\n    goto code_r0x00482ccb;\ncode_r0x004071fa:\n    *arg_2ch = var_84h + -4 + *arg_2ch;\n    *(var_8h + 2) = 0x720002;\n    *(var_8h + 6) = 2;\n    puVar21 = var_8h + 2;\n    var_8h = puVar21;\n    var_4h = var_4h + 2;\n    goto code_r0x0040674d;\n    while( true ) {\n        if ((*(var_4h + 1) != 0x5c) || (*(var_4h + 6) != 0x45)) {\n            var_2ch = 1;\n            var_4h = var_4h + 1;\n            break;\n        }\n        var_4h = var_4h + 2;\n        if (*var_4h != 0x5c) break;\ncode_r0x00480f0c:\n        if (*(var_4h + 2) != 0x51) break;\n    }\ncode_r0x00407387:\n    uVar13 = *var_4h;\n    puVar21 = puVar8;\n    if ((*var_4h == 0) || ((var_2ch == 0 && (uVar13 == 0x5d)))) {\ncode_r0x00406cc5:\n        var_4h = puVar21;\n        if (var_ch < 2) {\n            var_ch = var_ch + 1;\n        }\n        uVar13 = uVar26;\n        if ((var_ch == 1) && (*(puVar8 + 2) == 0x5d)) {\n            var_4h = puVar8 + 2;\n            var_78h = var_5ch;\n            var_68h = var_54h;\n            if (var_20h == NULL) goto code_r0x0040734a;\n            if (var_34h == 0xfffffffe) {\n                var_34h = 0xffffffff;\n            }\n            var_6ch = var_34h;\n            var_70h = var_64h;\n            puVar24 = var_10h;\n            puVar30 = var_4h;\n            if (var_28h != 0) {\n                bVar31 = (var_10h & 1) == 0;\n                if (bVar31) goto code_r0x004810b6;\n                uVar13 = uVar26 & 0x8000007f;\n                if (uVar13 < 0) {\n                    uVar13 = (uVar13 - 1 | 0xffffff80) + 1;\n                }\n                uVar1 = *(*((*((uVar26 + (uVar26 >> 0x1f & 0x7fU) >> 7) + 0x4ac470) * 0x80 + uVar13) * 2 + 0x49e5d0) * 8\n                         + 0x4ab0d3);\n                if (uVar1 != 0) {\n                    puVar21 = var_8h + 6;\n                    *var_8h = 0x9000f;\n                    *(var_8h + 1) = uVar1;\n                    var_8h = puVar21;\n                    goto code_r0x00406a38;\n                }\n            }\n            bVar31 = (var_10h & 1) == 0;\ncode_r0x004810b6:\n            *var_8h = !bVar31 + 0x1f;\n            if ((var_28h == 0) || (uVar26 < 0x10000)) {\n                *(var_8h + 2) = uVar26;\n                puVar21 = var_8h + 1;\n                var_8h = puVar21;\n            }\n            else {\n                uVar34 = fcn.00471a0c();\n                puVar21 = (uVar34 >> 0x20) + uVar34 * 2;\n                var_8h = puVar21;\n                puVar24 = var_10h;\n                puVar30 = var_4h;\n            }\n            goto code_r0x00406a38;\n        }\n    }\n    else {\n        var_90h = uVar13;\n        if ((var_28h != 0) && ((uVar13 & 0xfc00) == 0xd800)) {\n            puVar28 = var_4h + 2;\n            var_4h = var_4h + 2;\n            var_90h = ((uVar13 & 0x3ff) << 10 | *puVar28 & 0x3ff) + 0x10000;\n        }\n        if ((var_90h == 0x5c) && (var_2ch == 0)) {\n            iVar12 = fcn.00407888(arg_ch, *(arg_28h + 0x38), var_10h, 1);\n            if (*arg_ch != 0) goto code_r0x004831e6;\n            if (iVar12 != 0) {\n                if (iVar12 != 5) goto code_r0x00406cc5;\n                var_90h = 8;\n            }\n        }\n        if (var_90h < uVar26) {\n            *arg_ch = 8;\n            *arg_8h = var_4h;\n            return 0;\n        }\n        puVar8 = var_4h;\n        puVar21 = var_4h;\n        if (var_90h == uVar26) goto code_r0x00406cc5;\n        var_ch = 2;\n        uVar13 = var_90h;\n        if ((var_90h == 0xd) || (var_90h == 10)) {\n            *(arg_28h + 0x54) = *(arg_28h + 0x54) | 0x800;\n        }\n    }\n    iVar12 = fcn.004076f5(var_10h, arg_28h, uVar26, uVar13);\n    puVar23 = var_1ch + iVar12;\ncode_r0x00406cf8:\n    var_24h = var_60h;\n    puVar24 = var_4h;\ncode_r0x00406cfe:\n    var_1ch = puVar23;\n    puVar21 = var_14h;\n    puVar30 = var_24h;\n    var_4h = puVar24;\ncode_r0x00406d07:\n    puVar24 = var_10h;\n    var_4h = var_4h + 2;\n    uVar26 = *var_4h;\n    if (uVar26 == 0) {\n        if (var_80h == NULL) goto code_r0x00481005;\n        var_4h = var_80h + 2;\n        uVar26 = *var_4h;\n        var_80h = NULL;\n        if (uVar26 == 0) goto code_r0x00481005;\n    }\n    if ((uVar26 != 0x5d) || (var_2ch != 0)) goto code_r0x00406c50;\n    puVar16 = var_44h;\n    if (puVar21 < puVar30) {\n        puVar16 = 0x1;\n    }\n    if (var_34h == 0xfffffffe) {\n        var_34h = 0xffffffff;\n    }\n    var_6ch = var_34h;\n    var_78h = var_5ch;\n    var_70h = var_64h;\n    var_68h = var_54h;\n    if ((puVar16 == NULL) || ((var_38h != NULL && ((var_10h & 0x20000000) == 0)))) {\n        if (var_20h == var_38h) {\n            uVar6 = 0x6a;\n        }\n        else {\n            uVar6 = 0x6b;\n        }\n        puVar17 = var_8h + 2;\n        *var_8h = uVar6;\n        var_8h = puVar17;\n        if (arg_2ch == NULL) {\n            if (var_20h != NULL) {\n                uVar26 = 0;\n                do {\n                    *(&var_c4h + uVar26) = ~*(&var_c4h + uVar26);\n                    uVar26 = uVar26 + 1;\n                } while (uVar26 < 0x20);\n            }\n            fcn.0041faa0(puVar17, &var_c4h, 0x20);\n        }\n        puVar21 = var_8h + 0x20;\n        var_8h = puVar21;\n        var_4h = var_4h + 2;\n        goto code_r0x0040674d;\n    }\n    *puVar30 = 0;\n    *var_8h = 0x6c;\n    puVar21 = puVar30 + 2;\n    var_60h = puVar21;\n    *(var_8h + 1) = var_20h != NULL;\n    if (var_1ch < 1) {\n        var_8h = puVar21;\n    }\n    else {\n        *(var_8h + 1) = var_20h != NULL | 2;\n        puVar18 = var_8h + 6;\n        puVar17 = var_8h + 0x26;\n        var_8h = puVar18;\n        fcn.00426c10(puVar17, puVar18, puVar21 - puVar18 & 0xfffffffe);\n        fcn.0041faa0(var_8h, &var_c4h, 0x20);\n        puVar21 = puVar30 + 0x22;\n        var_8h = puVar21;\n    }\n    *(var_18h + 2) = puVar21 - var_18h >> 1;\n    puVar30 = var_4h;\n    var_8h = puVar21;\n    goto code_r0x00406a38;\ncode_r0x0040690d:\n    var_ch = 1;\n    var_104h._0_2_ = uVar26;\n    if (((var_28h != 0) && ((uVar26 & 0xfc00) == 0xd800)) && ((*(puVar30 + 2) & 0xfc00) == 0xdc00)) {\n        var_4h = puVar30 + 2;\n        stack0xfffffefa = stack0xfffffefa & 0xffff0000 | *(puVar30 + 2);\n        var_ch = 2;\n    }\ncode_r0x0040693d:\n    var_18h = puVar21;\n    puVar24 = var_10h;\n    puVar30 = var_4h;\n    if (var_28h == 0) {\ncode_r0x004069a8:\n        if ((var_10h & 1) == 0) {\ncode_r0x00406bb2:\n            uVar6 = 0x1d;\n        }\n        else {\n            uVar6 = 0x1e;\n        }\n        *puVar21 = uVar6;\n        var_8h = puVar21 + 2;\n        if (var_ch != 0) {\n            puVar21 = &var_104h;\n            puVar8 = var_8h;\n            for (uVar13 = var_ch >> 1; uVar13 != 0; uVar13 = uVar13 - 1) {\n                *puVar8 = *puVar21;\n                puVar21 = puVar21 + 1;\n                puVar8 = puVar8 + 1;\n            }\n            for (uVar13 = (var_ch & 1) != 0; uVar13 != 0; uVar13 = uVar13 - 1) {\n                *puVar8 = *puVar21;\n                puVar21 = puVar21 + 2;\n                puVar8 = puVar8 + 2;\n            }\n            var_8h = var_8h + var_ch * 2;\n        }\n        if ((uVar26 == 0xd) || (uVar26 == 10)) {\n            *(arg_28h + 0x54) = *(arg_28h + 0x54) | 0x800;\n        }\n        puVar21 = var_8h;\n        if (var_34h == 0xfffffffe) {\n            var_78h = var_5ch;\n            var_68h = var_54h;\n            var_6ch = 0xffffffff;\n            if ((var_ch == 1) || (var_88h == 0)) {\n                var_64h = uVar26 & 0xffff;\n                var_34h = var_88h;\n                if (var_ch == 1) goto code_r0x00406ba1;\n                var_5ch = *(var_8h + -2);\n                var_54h = *(arg_28h + 0x58);\n            }\n            else {\n                var_54h = 0xffffffff;\n                var_34h = 0xffffffff;\n            }\n        }\n        else {\n            var_6ch = var_34h;\n            var_78h = var_5ch;\n            var_70h = var_64h;\n            var_68h = var_54h;\n            if ((var_ch != 1) && (var_88h != 0)) goto code_r0x00406ba1;\n            var_5ch = *(var_8h + -2);\n            var_54h = *(arg_28h + 0x58) | var_88h;\n        }\n        goto code_r0x00406a38;\n    }\n    if ((var_10h & 1) == 0) goto code_r0x00406bb2;\n    uVar13 = uVar26 & 0xffff;\n    if ((uVar26 & 0xfc00) == 0xd800) {\n        uVar13 = ((uVar26 & 0x3ff) << 10 | stack0xfffffefa & 0x3ff) + 0x10000;\n    }\n    uVar1 = *(*((*((uVar13 >> 7) + 0x4ac470) * 0x80 + (uVar13 & 0x8000007f)) * 2 + 0x49e5d0) * 8 + 0x4ab0d3);\n    puVar21 = var_8h;\n    if (uVar1 == 0) goto code_r0x004069a8;\n    *var_8h = 0x90010;\n    *(var_8h + 1) = uVar1;\n    var_8h = var_8h + 6;\n    if (var_34h == 0xfffffffe) {\n        var_6ch = 0xffffffff;\n        var_34h = 0xffffffff;\n        puVar21 = var_8h;\n        goto code_r0x00406a38;\n    }\n    goto code_r0x00406ba1;\n}\n",
        "token_count": 32617
    },
    "00407888": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00407888(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint16_t **in_ECX;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    uint16_t uVar5;\n    uint32_t *in_EDX;\n    uint32_t uVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint16_t *puVar11;\n    uint32_t uStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar4 = *in_ECX;\n    uVar9 = puVar4[1];\n    uVar3 = arg_10h >> 0xb & 1;\n    uStack52 = 0;\n    puVar11 = puVar4 + 2;\n    if ((uVar3 != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n        uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n        puVar11 = puVar4 + 3;\n    }\n    puVar7 = puVar11 + -1;\n    uVar10 = uVar9;\n    puVar4 = puVar7;\n    if (uVar9 == 0) {\n        *arg_8h = 1;\n        goto code_r0x00407909;\n    }\n    if (0x4a < uVar9 - 0x30) goto code_r0x00407909;\n    uVar6 = uVar9 - 0x30;\n    uVar2 = *(uVar6 * 2 + 0x49e488);\n    uVar10 = uVar2;\n    if (0 < uVar2) goto code_r0x00407909;\n    if (uVar2 == 0) {\n        if (uVar9 < 100) {\n            if (uVar9 == 99) {\n                uVar10 = *puVar11;\n                puVar4 = puVar11;\n                if (uVar10 == 0) {\n                    *arg_8h = 2;\n                }\n                else if (uVar10 < 0x80) {\n                    if (uVar10 - 0x61 < 0x1a) {\n                        uVar10 = uVar10 - 0x20;\n                    }\n                    uVar10 = uVar10 ^ 0x40;\n                }\n                else {\n                    *arg_8h = 0x44;\n                }\n                goto code_r0x00407909;\n            }\n            if (uVar9 == 0x30) {\ncode_r0x0048019e:\n                uVar10 = uVar9 - 0x30;\n                do {\n                    uVar2 = uVar2 + 1;\n                    puVar11 = puVar7 + 1;\n                    puVar4 = puVar7;\n                    if ((*puVar11 < 0x30) || (0x37 < *puVar11)) break;\n                    uVar10 = (*puVar11 - 0x30) + uVar10 * 8;\n                    puVar4 = puVar11;\n                    puVar7 = puVar11;\n                } while (uVar2 < 2);\n                goto code_r0x00407909;\n            }\n            if (uVar9 < 0x31) {\ncode_r0x004802b2:\n                uVar10 = uVar9;\n                if ((arg_10h & 0x40) != 0) {\n                    *arg_8h = 3;\n                }\n                goto code_r0x00407909;\n            }\n            if (uVar9 < 0x3a) {\n                if (arg_14h == 0) {\n                    uVar5 = *puVar11;\n                    puVar8 = puVar11;\n                    while ((0x2f < uVar5 && (uVar5 < 0x3a))) {\n                        if (0xccccccb < uVar6) {\n                            uVar5 = puVar4[1];\n                            puVar11 = puVar4 + 1;\n                            if (0x2f < uVar5) goto code_r0x0048017c;\n                            goto code_r0x00480190;\n                        }\n                        uVar6 = uVar6 * 10 + (*puVar8 - 0x30);\n                        uVar5 = puVar8[1];\n                        puVar4 = puVar8;\n                        puVar8 = puVar8 + 1;\n                    }\n                    uVar10 = uVar6;\n                    if ((uVar6 < 10) || (uVar6 <= arg_ch)) goto code_r0x004078fe;\n                }\n                uVar9 = *puVar7;\n                if (0x37 < uVar9) {\n                    uVar10 = uStack52;\n                    puVar4 = puVar11 + -2;\n                    goto code_r0x00407909;\n                }\n                goto code_r0x0048019e;\n            }\n            if (uVar9 == 0x4c) goto code_r0x0048068d;\n            if (uVar9 != 0x55) goto code_r0x004802b2;\n            uVar3 = arg_10h & 0x2000000;\n            goto code_r0x00480687;\n        }\n        if (uVar9 == 0x67) {\n            uVar10 = uVar9;\n            if (arg_14h != 0) goto code_r0x00407909;\n            uVar5 = *puVar11;\n            if ((uVar5 != 0x3c) && (uVar5 != 0x27)) {\n                if (uVar5 == 0x7b) {\n                    puVar7 = puVar11 + 1;\n                    uVar5 = *puVar7;\n                    if (uVar5 != 0) {\n                        do {\n                            if ((uVar5 == 0x7d) || ((uVar5 != 0x2d && ((uVar5 < 0x30 || (0x39 < uVar5)))))) break;\n                            puVar7 = puVar7 + 1;\n                            uVar5 = *puVar7;\n                        } while (uVar5 != 0);\n                        if ((*puVar7 != 0) && (*puVar7 != 0x7d)) {\n                            uStack52 = 0x1c;\n                            goto code_r0x00407909;\n                        }\n                    }\n                    bVar1 = true;\n                    puVar7 = puVar11;\n                }\n                else {\n                    bVar1 = false;\n                }\n                uVar10 = 0;\n                puVar11 = puVar7 + 1;\n                if (*puVar11 == 0x2d) {\n                    puVar7 = puVar7 + 1;\n                }\n                uStack52 = 0;\n                uVar5 = puVar7[1];\n                puVar4 = puVar7 + 1;\n                while ((puVar8 = puVar4,  0x2f < uVar5 && (uVar5 < 0x3a))) {\n                    if (0xccccccb < uVar10) {\n                        uVar5 = puVar7[1];\n                        puVar11 = puVar7 + 1;\n                        puVar4 = puVar7;\n                        if (0x2f < uVar5) goto code_r0x00480614;\n                        goto code_r0x00480190;\n                    }\n                    uVar10 = uVar10 * 10 + (*puVar8 - 0x30);\n                    puVar4 = puVar8 + 1;\n                    puVar7 = puVar8;\n                    uVar5 = puVar8[1];\n                }\n                if ((bVar1) && (puVar7 = puVar7 + 1,  *puVar7 != 0x7d)) {\n                    *arg_8h = 0x39;\n                    uVar10 = uVar9;\n                    puVar4 = puVar7;\n                    goto code_r0x00407909;\n                }\n                puVar4 = puVar7;\n                if (uVar10 == 0) {\n                    *arg_8h = 0x3a;\n                    uVar10 = uVar9;\n                    goto code_r0x00407909;\n                }\n                if (*puVar11 == 0x2d) {\n                    if (arg_ch < uVar10) {\n                        *arg_8h = 0xf;\n                        uVar10 = uVar9;\n                        goto code_r0x00407909;\n                    }\n                    uVar10 = (arg_ch - uVar10) + 1;\n                }\n                goto code_r0x004078fe;\n            }\n            uStack52 = 0x1b;\n            goto code_r0x00407900;\n        }\n        if (uVar9 != 0x6c) {\n            if (uVar9 != 0x75) {\n                if (uVar9 == 0x78) {\n                    if ((arg_10h & 0x2000000) != 0) {\n                        uVar10 = uVar9;\n                        if ((((*puVar11 < 0x100) && ((*(*puVar11 + 0x4b5b18) & 8) != 0)) && (puVar11[1] < 0x100)) &&\n                           ((*(puVar11[1] + 0x4b5b18) & 8) != 0)) {\n                            uVar10 = 0;\n                            var_ch = 2;\n                            do {\n                                puVar4 = puVar4 + 1;\n                                uVar3 = *puVar4;\n                                if (0x60 < uVar3) {\n                                    uVar3 = uVar3 - 0x20;\n                                }\n                                uVar10 = (uVar10 * 0x10 - ((-(uVar3 < 0x41) & 0xfffffff9) + 0x37)) + uVar3;\n                                var_ch = var_ch + -1;\n                            } while (var_ch != 0);\n                        }\n                        goto code_r0x00407909;\n                    }\n                    if (*puVar11 == 0x7b) {\n                        puVar4 = puVar11 + 1;\n                        uVar5 = *puVar4;\n                        uVar10 = 0;\n                        while ((uVar5 < 0x100 && (var_ch = uVar5,  (*(var_ch + 0x4b5b18) & 8) != 0))) {\n                            puVar4 = puVar4 + 1;\n                            if ((uVar10 != 0) || (var_ch != 0x30)) {\n                                if (0x60 < var_ch) {\n                                    var_ch = var_ch - 0x20;\n                                }\n                                uVar10 = (uVar10 * 0x10 - ((-(var_ch < 0x41) & 0xfffffff9) + 0x37)) + var_ch;\n                                if ((-(uVar3 != 0) & 0x100000) + 0xffff < uVar10) goto code_r0x0048039c;\n                            }\n                            uVar5 = *puVar4;\n                        }\n                        goto code_r0x0048035f;\n                    }\n                    goto code_r0x004803af;\n                }\n                goto code_r0x004802b2;\n            }\n            if ((arg_10h & 0x2000000) != 0) {\n                uVar10 = uVar9;\n                if ((((*puVar11 < 0x100) && ((*(*puVar11 + 0x4b5b18) & 8) != 0)) && (puVar11[1] < 0x100)) &&\n                   ((((*(puVar11[1] + 0x4b5b18) & 8) != 0 && (puVar11[2] < 0x100)) &&\n                    (((*(puVar11[2] + 0x4b5b18) & 8) != 0 &&\n                     ((puVar11[3] < 0x100 && ((*(puVar11[3] + 0x4b5b18) & 8) != 0)))))))) {\n                    uVar10 = 0;\n                    var_10h = 4;\n                    do {\n                        puVar7 = puVar7 + 1;\n                        uVar9 = *puVar7;\n                        if (0x60 < uVar9) {\n                            uVar9 = uVar9 - 0x20;\n                        }\n                        uVar10 = (uVar10 * 0x10 - ((-(uVar9 < 0x41) & 0xfffffff9) + 0x37)) + uVar9;\n                        var_10h = var_10h + -1;\n                    } while (var_10h != 0);\n                    puVar4 = puVar7;\n                    if ((-(uVar3 != 0) & 0x100000) + 0xffff < uVar10) {\n                        *arg_8h = 0x4c;\n                    }\n                    else if ((uVar3 != 0) && (uVar10 - 0xd800 < 0x800)) {\n                        *arg_8h = 0x49;\n                    }\n                }\n                goto code_r0x00407909;\n            }\n        }\n    }\n    else {\ncode_r0x004078fe:\n        uStack52 = -uVar10;\n        puVar7 = puVar4;\ncode_r0x00407900:\n        uVar10 = uVar9;\n        puVar4 = puVar7;\n        if ((uStack52 != 0xc) || (puVar7[1] != 0x7b)) goto code_r0x00407909;\n        uVar3 = fcn.00471591();\ncode_r0x00480687:\n        uVar10 = uVar9;\n        puVar4 = puVar7;\n        if (uVar3 != 0) goto code_r0x00407909;\n    }\ncode_r0x0048068d:\n    *arg_8h = 0x25;\n    uVar10 = uVar9;\n    puVar4 = puVar7;\n    goto code_r0x00407909;\n    while( true ) {\n        uVar5 = puVar7[1];\n        puVar11 = puVar7 + 1;\n        puVar4 = puVar7;\n        if (uVar5 < 0x30) break;\ncode_r0x0048017c:\n        puVar7 = puVar11;\n        if (0x39 < uVar5) break;\n    }\n    goto code_r0x00480190;\ncode_r0x0048039c:\n    while ((*puVar4 < 0x100 && ((*(*puVar4 + 0x4b5b18) & 8) != 0))) {\n        puVar4 = puVar4 + 1;\n    }\n    *arg_8h = 0x22;\ncode_r0x0048035f:\n    uStack52 = 0;\n    if (*puVar4 == 0x7d) {\n        if ((uVar3 != 0) && (uVar10 - 0xd800 < 0x800)) {\n            *arg_8h = 0x49;\n        }\n        goto code_r0x00407909;\n    }\ncode_r0x004803af:\n    uStack52 = 0;\n    uVar10 = uStack52;\n    puVar4 = puVar7;\n    do {\n        uVar2 = uVar2 + 1;\n        if ((0xff < puVar4[1]) || ((*(puVar4[1] + 0x4b5b18) & 8) == 0)) break;\n        puVar4 = puVar4 + 1;\n        uVar3 = *puVar4;\n        if (0x60 < uVar3) {\n            uVar3 = uVar3 - 0x20;\n        }\n        uVar10 = (uVar10 * 0x10 - ((-(uVar3 < 0x41) & 0xfffffff9) + 0x37)) + uVar3;\n    } while (uVar2 < 2);\n    goto code_r0x00407909;\n    while( true ) {\n        uVar5 = puVar8[1];\n        puVar11 = puVar8 + 1;\n        puVar7 = puVar8;\n        puVar4 = puVar8;\n        if (uVar5 < 0x30) break;\ncode_r0x00480614:\n        puVar8 = puVar11;\n        puVar4 = puVar7;\n        if (0x39 < uVar5) break;\n    }\ncode_r0x00480190:\n    uStack52 = 0;\n    *arg_8h = 0x3d;\n    uVar10 = uVar9;\ncode_r0x00407909:\n    if (((arg_10h & 0x20000000) != 0) && (uStack52 - 6 < 6)) {\n        uStack52 = uStack52 + 0x17;\n    }\n    *in_ECX = puVar4;\n    *in_EDX = uVar10;\n    return uStack52;\n}\n",
        "token_count": 3947
    },
    "00407932": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407932(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int16_t *in_ECX;\n    uint32_t in_EDX;\n    uint16_t *puVar4;\n    bool bVar5;\n    int16_t *var_4h;\n    \n    var_4h = in_ECX;\n    do {\n        piVar2 = fcn.0040785a();\n        iVar1 = *piVar2;\n        if (iVar1 == 0x81) {\n            puVar4 = piVar2 + 2;\n            if (*puVar4 == 0x70) {\n                puVar4 = piVar2 + 6;\n            }\n            if ((0x86 < *puVar4) && (*puVar4 < 0x8c)) {\n                return 0;\n            }\n            iVar3 = fcn.00407932(arg_8h, arg_ch);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            do {\n                puVar4 = puVar4 + puVar4[1];\n            } while (*puVar4 == 0x71);\n            piVar2 = fcn.0040785a();\n            iVar1 = *piVar2;\n        }\n        iVar3 = arg_ch;\n        if (((((iVar1 == 0x7d) || (iVar1 == 0x7e)) || (iVar1 == 0x82)) ||\n            (((iVar1 == 0x83 || (iVar1 == 0x7f)) || ((iVar1 == 0x80 || ((iVar1 == 0x84 || (iVar1 == 0x85)))))))) ||\n           (iVar1 == 0x77)) {\ncode_r0x00483709:\n            iVar3 = fcn.00407932(arg_8h, iVar3);\n            if (iVar3 == 0) {\n                return 0;\n            }\n        }\n        else {\n            if ((iVar1 == 0x7b) || (iVar1 == 0x7c)) {\n                iVar3 = arg_ch + 1;\n                goto code_r0x00483709;\n            }\n            if (((iVar1 == 0x55) || (iVar1 == 0x56)) || (iVar1 == 0x5e)) {\n                if (piVar2[1] != 0xc) {\n                    return 0;\n                }\n                if ((*(arg_8h + 0x48) & in_EDX) != 0) {\n                    return 0;\n                }\n                if (0 < arg_ch) {\n                    return 0;\n                }\n                bVar5 = *(arg_8h + 0x60) == 0;\ncode_r0x004079d9:\n                if (!bVar5) {\n                    return 0;\n                }\n            }\n            else if (iVar1 != 0x19) {\n                bVar5 = iVar1 == 0x1a;\n                goto code_r0x004079d9;\n            }\n        }\n        var_4h = var_4h + var_4h[1];\n        if (*var_4h != 0x71) {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 732
    },
    "00407a0f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t __cdecl fcn.00407a0f(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int16_t *in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *in_EDX = -1;\n    iVar3 = -1;\n    uVar5 = 0;\n    do {\n        puVar1 = fcn.0040785a();\n        uVar2 = *puVar1;\n        if (uVar2 < 0x32) {\n            if (0x2f < uVar2) goto code_r0x00407abc;\n            if (uVar2 != 0x1d) {\n                if (uVar2 == 0x1e) goto code_r0x00407abc;\n                if (uVar2 < 0x23) {\n                    return 0;\n                }\n                if (0x24 < uVar2) {\n                    if (uVar2 == 0x29) {\n                        puVar1 = puVar1 + 1;\n                    }\n                    else if (uVar2 != 0x2b) {\n                        return 0;\n                    }\n                }\n            }\n            if (arg_8h == 0) {\n                return 0;\n            }\n            if (-1 < iVar3) goto code_r0x00483554;\n            iVar4 = 0;\ncode_r0x00483505:\n            uVar2 = puVar1[1];\n        }\n        else if (uVar2 == 0x36) {\n            puVar1 = puVar1 + 1;\ncode_r0x00407abc:\n            if (arg_8h == 0) {\n                return 0;\n            }\n            if (iVar3 < 0) {\n                iVar4 = 1;\n                goto code_r0x00483505;\n            }\ncode_r0x00483554:\n            bVar6 = uVar5 == puVar1[1];\ncode_r0x0048355a:\n            iVar4 = iVar3;\n            uVar2 = uVar5;\n            if (!bVar6) {\n                return 0;\n            }\n        }\n        else {\n            if (uVar2 == 0x38) goto code_r0x00407abc;\n            if (uVar2 != 0x77) {\n                if (uVar2 < 0x7b) {\n                    return 0;\n                }\n                if ((0x81 < uVar2) && (1 < uVar2 - 0x84)) {\n                    return 0;\n                }\n            }\n            uVar2 = fcn.00407a0f(*puVar1 == 0x77);\n            if (var_8h < 0) {\n                return 0;\n            }\n            iVar4 = var_8h;\n            if (-1 < iVar3) {\n                if (uVar5 != uVar2) {\n                    return 0;\n                }\n                bVar6 = iVar3 == var_8h;\n                goto code_r0x0048355a;\n            }\n        }\n        in_ECX = in_ECX + in_ECX[1];\n        iVar3 = iVar4;\n        uVar5 = uVar2;\n        if (*in_ECX != 0x71) {\n            *in_EDX = iVar4;\n            return uVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 800
    },
    "00407ad2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00407ad2(uint16_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    uint16_t *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint16_t *var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint16_t *var_4h;\n    \n    var_ch = 0xffffffff;\n    var_10h = *in_ECX;\n    var_18h = in_ECX + 1;\n    var_1ch = arg_ch & 8;\n    var_4h = arg_8h;\n    var_8h = in_EDX;\n    if (var_1ch != 0) {\ncode_r0x0047f71d:\n        iVar3 = arg_10h;\n        uVar1 = *var_4h;\n        if (uVar1 < 0x100) {\n            arg_8h = var_4h;\n            do {\n                var_4h = arg_8h;\n                if ((*(uVar1 + *(arg_10h + 0xc)) & 1) == 0) break;\n                arg_8h = arg_8h + 1;\n                uVar1 = *arg_8h;\n                var_4h = arg_8h;\n            } while (uVar1 < 0x100);\n        }\n        if (*var_4h == 0x23) {\n            var_4h = var_4h + 1;\n            uVar1 = *var_4h;\n            while (uVar1 != 0) {\n                if (*(iVar3 + 0x68) == 0) {\n                    if (((var_4h <= *(iVar3 + 0x1c) + *(iVar3 + 0x6c) * -2) && (uVar1 == *(iVar3 + 0x70))) &&\n                       ((*(iVar3 + 0x6c) == 1 || (var_4h[1] == *(iVar3 + 0x72))))) goto code_r0x0047f78b;\n                }\n                else if ((var_4h < *(iVar3 + 0x1c)) &&\n                        (iVar2 = fcn.004080a0(*(iVar3 + 0x1c), iVar3 + 0x6c, var_8h),  iVar2 != 0)) {\ncode_r0x0047f78b:\n                    var_4h = var_4h + *(iVar3 + 0x6c);\n                    break;\n                }\n                puVar5 = var_4h + 1;\n                if ((var_8h != 0) && ((*puVar5 & 0xfc00) == 0xdc00)) {\n                    puVar5 = var_4h + 2;\n                }\n                var_4h = puVar5;\n                uVar1 = *var_4h;\n            }\n            goto code_r0x0047f71d;\n        }\n    }\n    puVar5 = var_4h;\n    uVar7 = *var_4h;\n    if (uVar7 == 0x5c) {\n        var_4h = NULL;\n        var_20h = fcn.00407888(&var_4h, *(arg_10h + 0x38), arg_ch, 0);\n        if (var_4h != NULL) {\n            return 0;\n        }\n        puVar5 = puVar5 + 1;\n    }\n    else {\n        if ((*var_4h < 0x100) && ((*(uVar7 + *(arg_10h + 0xc)) & 0x80) != 0)) {\n            return 0;\n        }\n        puVar5 = var_4h + 1;\n        var_20h = 0;\n        var_14h = uVar7;\n        if ((var_8h != 0) && ((uVar7 & 0xfc00) == 0xd800)) {\n            var_14h = ((uVar7 & 0x3ff) << 10 | *puVar5 & 0x3ff) + 0x10000;\n            puVar5 = var_4h + 2;\n        }\n    }\n    uVar7 = var_14h;\n    iVar3 = arg_10h;\n    var_4h = puVar5;\n    if (var_1ch != 0) {\ncode_r0x0047f8a0:\n        uVar1 = *var_4h;\n        if (uVar1 < 0x100) {\n            do {\n                if ((*(uVar1 + *(iVar3 + 0xc)) & 1) == 0) break;\n                var_4h = var_4h + 1;\n                uVar1 = *var_4h;\n            } while (uVar1 < 0x100);\n        }\n        if (*var_4h == 0x23) {\n            puVar5 = var_4h + 1;\n            while( true ) {\n                var_4h = puVar5;\n                uVar1 = *var_4h;\n                var_1ch = uVar1;\n                if (uVar1 == 0) break;\n                if (*(arg_10h + 0x68) == 0) {\n                    if (((var_4h <= *(arg_10h + 0x1c) + *(arg_10h + 0x6c) * -2) && (uVar1 == *(arg_10h + 0x70))) &&\n                       ((*(arg_10h + 0x6c) == 1 || (var_4h[1] == *(arg_10h + 0x72))))) goto code_r0x0047f97f;\n                }\n                else if ((var_4h < *(arg_10h + 0x1c)) &&\n                        (iVar3 = fcn.004080a0(*(arg_10h + 0x1c), arg_10h + 0x6c, var_8h),  iVar3 != 0)) {\ncode_r0x0047f97f:\n                    iVar3 = arg_10h;\n                    var_4h = var_4h + *(arg_10h + 0x6c);\n                    break;\n                }\n                puVar5 = var_4h + 1;\n                iVar3 = arg_10h;\n                if ((var_8h != 0) && ((*puVar5 & 0xfc00) == 0xdc00)) {\n                    puVar5 = var_4h + 2;\n                }\n            }\n            goto code_r0x0047f8a0;\n        }\n    }\n    uVar6 = var_20h;\n    if (*var_4h == 0x2a) {\n        return 0;\n    }\n    if (*var_4h == 0x3f) {\n        return 0;\n    }\n    iVar3 = fcn.0041ee64(3);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    uVar1 = var_10h;\n    if (((((uVar1 == 0x1d) || (uVar1 == 0x1e)) || (uVar1 == 0x1f)) || (uVar1 == 0x20)) &&\n       ((var_ch = *var_18h,  var_8h != 0 && ((var_ch & 0xfc00) == 0xd800)))) {\n        var_ch = ((var_ch & 0x3ff) << 10 | var_18h[1] & 0x3ff) + 0x10000;\n    }\n    if (uVar6 == 0) {\n        if ((((var_8h != 0) && (var_ch != 0xffffffff)) && ((arg_ch & 1) != 0)) &&\n           (uVar6 = *(*((*(uVar7 / 0x80 + 0x4ac470) * 0x80 + uVar7 % 0x80) * 2 + 0x49e5d0) * 8 + 0x4ab0d3),  uVar6 != 0)\n           ) {\n            bVar8 = 0x1e < uVar1;\ncode_r0x0047fa94:\n            uVar7 = bVar8;\ncode_r0x0047faa7:\n            uVar7 = fcn.00470597(uVar6, uVar7);\n            return uVar7;\n        }\n        uVar4 = var_10h & 0xffff;\n        if (uVar4 < 0x11) {\n            if (uVar4 == 0x10) {\n                uVar7 = 0;\n            }\n            else {\n                if (uVar4 == 6) {\n                    if (0xff < uVar7) {\n                        return 0;\n                    }\n                    bVar8 = (*(uVar7 + *(arg_10h + 0xc)) & 4) == 0;\ncode_r0x0047fb8c:\n                    if (bVar8) {\n                        return 0;\n                    }\n                    return 1;\n                }\n                if (uVar4 == 7) {\n                    if (0xff < uVar7) {\n                        return 1;\n                    }\n                    bVar8 = (*(uVar7 + *(arg_10h + 0xc)) & 4) == 0;\ncode_r0x0047fb5d:\n                    if (bVar8) {\n                        return 1;\n                    }\n                    return 0;\n                }\n                if (uVar4 == 8) {\n                    if (0xff < uVar7) {\n                        return 0;\n                    }\n                    bVar8 = (*(uVar7 + *(arg_10h + 0xc)) & 1) == 0;\n                    goto code_r0x0047fb8c;\n                }\n                if (uVar4 == 9) {\n                    if (0xff < uVar7) {\n                        return 1;\n                    }\n                    bVar8 = (*(uVar7 + *(arg_10h + 0xc)) & 1) == 0;\n                    goto code_r0x0047fb5d;\n                }\n                if (uVar4 == 10) {\n                    if (0xff < uVar7) {\n                        return 0;\n                    }\n                    bVar8 = (*(uVar7 + *(arg_10h + 0xc)) & 0x10) == 0;\n                    goto code_r0x0047fb8c;\n                }\n                if (uVar4 == 0xb) {\n                    if (0xff < uVar7) {\n                        return 1;\n                    }\n                    bVar8 = (*(uVar7 + *(arg_10h + 0xc)) & 0x10) == 0;\n                    goto code_r0x0047fb5d;\n                }\n                if (uVar4 != 0xf) {\n                    return 0;\n                }\n                uVar7 = 1;\n            }\n            uVar6 = var_18h[1];\n            goto code_r0x0047faa7;\n        }\n        if (0x1d < uVar4) {\n            uVar6 = var_ch;\n            if (uVar4 != 0x1e) {\n                if (uVar4 == 0x1f) {\n                    bVar8 = var_ch == uVar7;\n                    goto code_r0x0047fceb;\n                }\n                if (uVar4 != 0x20) {\n                    return 0;\n                }\n                if (var_ch == uVar7) {\n                    return 1;\n                }\n                if (var_8h != uVar4 - 0x20) {\n                    if (uVar7 < 0x80) {\n                        uVar7 = *(*(arg_10h + 4) + uVar7);\n                    }\n                    else {\n                        uVar7 = *(*((*(uVar7 / 0x80 + 0x4ac470) * 0x80 + uVar7 % 0x80) * 2 + 0x49e5d0) * 8 + 0x4ab0d4) +\n                                uVar7;\n                    }\n                    bVar8 = var_ch == uVar7;\n                    goto code_r0x0047fceb;\n                }\n                if (uVar7 < 0x100) {\n                    uVar7 = *(*(arg_10h + 4) + uVar7);\n                }\ncode_r0x0047fcd9:\n                bVar8 = uVar6 == uVar7;\n                goto code_r0x0047fceb;\n            }\n            if (var_ch == uVar7) {\n                return 0;\n            }\n            if (var_8h != 0) {\n                if (uVar7 < 0x80) {\n                    uVar7 = *(*(arg_10h + 4) + uVar7);\n                }\n                else {\n                    uVar7 = *(*((*(uVar7 / 0x80 + 0x4ac470) * 0x80 + uVar7 % 0x80) * 2 + 0x49e5d0) * 8 + 0x4ab0d4) +\n                            uVar7;\n                }\n                bVar8 = var_ch == uVar7;\n                goto code_r0x0047fc5e;\n            }\n            if (uVar7 < 0x100) {\n                uVar7 = *(*(arg_10h + 4) + uVar7);\n            }\ncode_r0x0047fd57:\n            bVar8 = uVar6 == uVar7;\n            goto code_r0x0047fc5e;\n        }\n        if (uVar4 == 0x1d) {\n            bVar8 = var_ch == uVar7;\n            goto code_r0x0047fc5e;\n        }\n        if (uVar4 != 0x11) {\n            if (uVar4 < 0x12) {\n                return 0;\n            }\n            if (uVar4 < 0x14) {\n                if (uVar7 < 0x180f) {\n                    if ((((uVar7 == 0x180e) || (uVar7 == 9)) || (uVar7 == 0x20)) ||\n                       ((uVar7 == 0xa0 || (uVar7 == 0x1680)))) {\ncode_r0x0047fc3f:\n                        bVar8 = uVar1 == 0x12;\n                        goto code_r0x0047fceb;\n                    }\n                }\n                else if ((0x1fff < uVar7) &&\n                        (((uVar7 < 0x200b || (uVar7 == 0x202f)) || ((uVar7 == 0x205f || (uVar7 == 0x3000))))))\n                goto code_r0x0047fc3f;\n                bVar8 = uVar1 == 0x12;\n                goto code_r0x0047fc5e;\n            }\n            if (0x15 < uVar4) {\n                return 0;\n            }\n        }\n        if ((9 < uVar7) && (((uVar7 < 0xe || (uVar7 == 0x85)) || (uVar7 - 0x2028 < 2)))) {\n            bVar8 = uVar1 == 0x14;\ncode_r0x0047fceb:\n            return bVar8;\n        }\n        bVar8 = uVar1 == 0x14;\ncode_r0x0047fc5e:\n        return !bVar8;\n    }\n    uVar7 = var_10h & 0xffff;\n    if (uVar7 < 0x12) {\n        if (uVar7 == 0x11) {\ncode_r0x0047fdad:\n            bVar8 = uVar6 == 0x14;\ncode_r0x0047fdb0:\n            if (bVar8) {\n                return 1;\n            }\n            if (uVar6 == 7) {\n                return 1;\n            }\n            bVar8 = uVar6 == 0xb;\n            goto code_r0x0047fdf8;\n        }\n        if (uVar7 == 6) {\n            bVar8 = uVar6 == 7;\n            goto code_r0x0047fceb;\n        }\n        if (uVar7 == 7) {\n            if (uVar6 == 6) {\n                return 1;\n            }\n            if (uVar6 == 9) {\n                return 1;\n            }\n            bVar8 = uVar6 == 10;\n        }\n        else {\n            if (uVar7 != 8) {\n                if (uVar7 == 9) {\n                    bVar8 = uVar6 == 8;\n                    goto code_r0x0047fdb0;\n                }\n                if (uVar7 == 10) {\n                    if (uVar6 == 0xb) {\n                        return 1;\n                    }\n                    bVar8 = uVar6 == 7;\n                    goto code_r0x0047fdf8;\n                }\n                if (uVar7 != 0xb) {\n                    return 0;\n                }\n                if (uVar6 == 10) {\n                    return 1;\n                }\n            }\n            bVar8 = uVar6 == 9;\n        }\n        if (bVar8) {\n            return 1;\n        }\n        bVar8 = uVar6 == 0x13;\ncode_r0x0047fde7:\n        if (bVar8) {\n            return 1;\n        }\n    }\n    else {\n        if (uVar7 == 0x12) goto code_r0x0047ff86;\n        if (uVar7 == 0x13) {\n            if (uVar6 == 8) {\n                return 1;\n            }\n            if (uVar6 == 0x12) {\n                return 1;\n            }\n            if (uVar6 == 7) {\n                return 1;\n            }\n            bVar8 = uVar6 == 0xb;\n            goto code_r0x0047fde7;\n        }\n        if (uVar7 != 0x14) {\n            uVar4 = 0x15;\n            if (uVar7 == 0x15) goto code_r0x0047fdad;\n            if (1 < uVar7 - 0x1d) {\n                return 0;\n            }\n            if (uVar6 < 0xc) {\n                if (uVar6 == 0xb) {\n                    if (0xff < var_ch) {\n                        return 1;\n                    }\n                    bVar8 = (*(var_ch + *(arg_10h + 0xc)) & 0x10) == 0;\n                    goto code_r0x0047fb5d;\n                }\n                if (uVar6 == 6) {\n                    if (0xff < var_ch) {\n                        return 0;\n                    }\n                    bVar8 = (*(var_ch + *(arg_10h + 0xc)) & 4) == 0;\n                }\n                else {\n                    if (uVar6 == 7) {\n                        if (0xff < var_ch) {\n                            return 1;\n                        }\n                        bVar8 = (*(var_ch + *(arg_10h + 0xc)) & 4) == 0;\n                        goto code_r0x0047fb5d;\n                    }\n                    if (uVar6 == 8) {\n                        if (0xff < var_ch) {\n                            return 0;\n                        }\n                        bVar8 = (*(var_ch + *(arg_10h + 0xc)) & 1) == 0;\n                    }\n                    else {\n                        if (uVar6 == 9) {\n                            if (0xff < var_ch) {\n                                return 1;\n                            }\n                            bVar8 = (*(var_ch + *(arg_10h + 0xc)) & 1) == 0;\n                            goto code_r0x0047fb5d;\n                        }\n                        if (uVar6 != 10) {\n                            return 0;\n                        }\n                        if (0xff < var_ch) {\n                            return 0;\n                        }\n                        bVar8 = (*(var_ch + *(arg_10h + 0xc)) & 0x10) == 0;\n                    }\n                }\n                goto code_r0x0047fb8c;\n            }\n            if (uVar6 < 0x16) {\n                if (0x13 < uVar6) {\n                    uVar7 = 0x15;\n                    if ((var_ch < 10) || (((0xd < var_ch && (uVar7 = uVar4,  var_ch != 0x85)) && (1 < var_ch - 0x2028)))\n                       ) goto code_r0x0047fcd9;\n                    goto code_r0x0047fd57;\n                }\n                if (uVar6 < 0xf) {\n                    return 0;\n                }\n                puVar5 = var_4h;\n                if (0x10 < uVar6) {\n                    if (1 < uVar6 - 0x12) {\n                        return 0;\n                    }\n                    if (var_ch < 0x180f) {\n                        if (((var_ch == 0x180e) || (var_ch == 9)) ||\n                           ((var_ch == 0x20 || ((var_ch == 0xa0 || (var_ch == 0x1680)))))) {\ncode_r0x0047fc59:\n                            bVar8 = uVar6 == 0x13;\n                            goto code_r0x0047fc5e;\n                        }\n                    }\n                    else if ((0x1fff < var_ch) &&\n                            (((var_ch < 0x200b || (var_ch == 0x202f)) || ((var_ch == 0x205f || (var_ch == 0x3000))))))\n                    goto code_r0x0047fc59;\ncode_r0x0047ff86:\n                    bVar8 = uVar6 == 0x13;\n                    goto code_r0x0047fceb;\n                }\n            }\n            else {\n                if (5 < uVar6 - 0x1d) {\n                    return 0;\n                }\n                iVar3 = *((uVar6 - 0x1d) * 4 + 0x4bff70);\n                var_20h = 0;\n                uVar6 = fcn.00407888(&var_20h, 0, arg_ch, 0);\n                if (var_20h != 0) {\n                    return 0;\n                }\n                puVar5 = iVar3 + 2;\n            }\n            var_20h = 0;\n            arg_ch = 0;\n            iVar3 = fcn.004714aa(&var_20h, &arg_ch, &var_1ch);\n            if ((((iVar3 == 0) || (*puVar5 == 0x2a)) || (*puVar5 == 0x3f)) || (iVar3 = fcn.0041ee64(3),  iVar3 == 0)) {\n                return 0;\n            }\n            bVar8 = (uVar6 == 0xf) != true;\n            uVar6 = arg_ch;\n            goto code_r0x0047fa94;\n        }\n    }\n    if (uVar6 == 0x15) {\n        return 1;\n    }\n    bVar8 = uVar6 == 0x11;\ncode_r0x0047fdf8:\n    if (bVar8) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 5358
    },
    "00407be1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407be1(int32_t param_1)\n\n{\n    if (*(param_1 + 9) == '\\0') {\n        return *(param_1 + 4);\n    }\n    return *(*(param_1 + 4) + 0x38);\n}\n",
        "token_count": 66
    },
    "00407dd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407dd0(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) == 0) {\n        *(param_1 + 8) = 0;\n        return;\n    }\n    do {\n        puVar1 = *(*(param_1 + 4) + uVar2 * 4);\n        if (puVar1 != NULL) {\n            *puVar1[3] = *puVar1[3] + -1;\n            if (*puVar1[3] == 0) {\n                fcn.0042017e(*puVar1);\n                fcn.0042017e(puVar1[3]);\n            }\n            fcn.0042017e(puVar1);\n        }\n        uVar2 = uVar2 + 1;\n        *(*(param_1 + 4) + -4 + uVar2 * 4) = 0;\n    } while (uVar2 < *(param_1 + 8));\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 260
    },
    "00407e53": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e53(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint *in_ECX;\n    \n    if (arg_8h == 0) {\n        fcn.0040a2fb(0, 0xffffffff);\n    }\n    else {\n        uVar2 = fcn.004218fb(arg_8h);\n        in_ECX[1] = uVar2;\n        cVar1 = fcn.00408176();\n        if (cVar1 == '\\0') {\n            fcn.00407eda(uVar2);\n        }\n        else {\n            *in_ECX[3] = *in_ECX[3] + -1;\n            fcn.0040a6f8();\n            uVar3 = fcn.0040c91c(in_ECX[1] + 1);\n            in_ECX[2] = uVar3;\n            uVar2 = fcn.0041fa89(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n            *in_ECX = uVar2;\n        }\n        fcn.0041faa0(*in_ECX, arg_8h, in_ECX[1] * 2 + 2);\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00407eda": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407eda(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    cVar1 = fcn.00407f2f(arg_8h);\n    if (cVar1 == '\\0') {\n        iVar2 = fcn.0040c91c(arg_8h + 1);\n        in_ECX[2] = iVar2;\n        if (*in_ECX != 0) {\n            fcn.0042017e(*in_ECX);\n        }\n        iVar2 = fcn.0042010a(-(in_ECX[2] * 2 >> 0x20 != 0) | in_ECX[2] * 2);\n        *in_ECX = iVar2;\n        *(iVar2 + arg_8h * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "004080a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004080a0(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = *in_ECX;\n    if ((arg_10h != 0) && ((uVar1 & 0xfc00) == 0xd800)) {\n        uVar1 = ((uVar1 & 0x3ff) << 10 | in_ECX[1] & 0x3ff) + 0x10000;\n    }\n    uVar2 = 2;\n    if (in_EDX == 2) {\n        if (uVar1 == 10) {\ncode_r0x0048ce29:\n            *arg_ch = 1;\n            return 1;\n        }\n        if (uVar1 == 0xd) {\n            if ((arg_8h + -2 <= in_ECX) || (in_ECX[1] != 10)) {\n                uVar2 = 1;\n            }\n            *arg_ch = uVar2;\n            return 1;\n        }\n    }\n    else if (9 < uVar1) {\n        if (0xc < uVar1) {\n            if (uVar1 == 0xd) {\n                if ((arg_8h + -2 <= in_ECX) || (in_ECX[1] != 10)) {\n                    uVar2 = 1;\n                }\n                *arg_ch = uVar2;\n                return 1;\n            }\n            if ((uVar1 != 0x85) && (1 < uVar1 - 0x2028)) {\n                return 0;\n            }\n        }\n        goto code_r0x0048ce29;\n    }\n    return 0;\n}\n",
        "token_count": 411
    },
    "004081c6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004081c6(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    int32_t iVar5;\n    bool bVar6;\n    uint32_t uVar7;\n    int32_t iStack100;\n    int32_t iStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    int32_t iStack68;\n    uchar auStack56 [12];\n    int32_t iStack44;\n    uint uStack36;\n    uint uStack32;\n    \n    iVar4 = **(arg_8h + 4);\n    fcn.004084a6();\n    iStack96 = **(iVar4 + 8);\n    iVar4 = **(arg_8h + 4);\n    fcn.004084a6();\n    iVar2 = *(*(iVar4 + 8) + 4);\n    iVar4 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    uStack84 = **(iVar4 + 8);\n    iVar4 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    uVar7 = *(*(iVar4 + 8) + 4);\n    uStack92 = uVar7;\n    fcn.00407b6e(iVar2);\n    iVar4 = 0;\n    uStack72 = 0;\n    unaff_EBX = unaff_EBX & 0xffffff;\n    bVar6 = false;\n    if ((2 < *(arg_8h + 8)) && (uStack72 = fcn.0040cdb4(),  bVar6 = false,  (uStack72 & 2) != 0)) {\n        uStack72 = uStack72 & 1;\n        unaff_EBX = CONCAT13(1, unaff_EBX);\n        bVar6 = true;\n    }\n    if (uVar7 == 0) {\n        uStack76 = !bVar6;\n        fcn.00403320(arg_ch, 1);\n        if (unaff_EBX >> 0x18 == '\\0') {\n            uStack36 = 0;\n            uStack32 = 1;\n            iStack44 = iVar2;\n            fcn.00412320(arg_ch, &stack0xffffffd4, 1);\n            fcn.00412570();\n        }\n        if (0 < iVar2) {\n            do {\n                fcn.004080ea(unaff_ESI, iVar4, 1);\n                fcn.00408182(&stack0xffffffb0);\n                fcn.00412320(arg_ch, &stack0xffffffbc, 1);\n                fcn.00412570();\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar2);\n        }\n        goto code_r0x0040843f;\n    }\n    if (uStack72 == 0) {\n        uVar7 = 0;\n        uStack92 = 0;\n        iStack68 = 0;\n        if (0 < iVar2) {\n            do {\n                iVar4 = fcn.00408489(iStack96);\n                if (iVar4 != 0) {\n                    uVar7 = uVar7 + 1;\n                }\n                iStack68 = iStack68 + 1;\n            } while (iStack68 < iVar2);\n            goto code_r0x00408325;\n        }\n    }\n    else if (uStack72 == 1) {\n        uStack92 = 0;\n        while (iVar5 = iVar2,  0 < iVar5) {\n            iStack68 = fcn.00408489(iVar5);\n            iVar2 = iVar4;\n            if ((iStack68 != 0) && (iVar5 = iVar5 - ((iStack68 - iStack100 >> 1) + iStack96),  -1 < iVar5)) {\n                iVar2 = fcn.00422315(iStack68, uStack88, iStack96);\n                if (iVar2 == 0) {\n                    uStack92 = uStack92 + 1;\n                    iStack100 = iStack68 + iStack96 * 2;\n                    iVar2 = iVar5;\n                }\n                else {\n                    iStack100 = iStack68 + 2;\n                    iVar2 = iVar5 + iStack96 + -1;\n                }\n            }\n        }\n        iVar4 = **(arg_8h + 4);\n        fcn.004084a6();\n        iStack100 = **(iVar4 + 8);\n        iVar4 = **(arg_8h + 4);\n        fcn.004084a6();\n        iVar2 = *(*(iVar4 + 8) + 4);\n        uVar7 = uStack92;\ncode_r0x00408325:\n        uStack92 = uVar7;\n        if (0 < uStack92) {\n            iStack68 = uStack92 + 1;\n            bVar6 = unaff_EBX >> 0x18 == '\\0';\n            if (bVar6) {\n                uVar7 = 1;\n                fcn.00403320(arg_ch, 1);\n                iStack44 = iStack68;\n                uStack36 = 0;\n                uStack32 = 1;\n                fcn.00412320(arg_ch, &stack0xffffffd4, 1);\n                fcn.00412570();\n            }\n            else {\n                uVar7 = 1;\n                fcn.00403320(arg_ch, 1);\n            }\n            uStack92 = bVar6;\n            uStack80 = 0;\n            uStack76 = 0;\n            iVar4 = 0x408364;\n            fcn.0040c4cd();\n            if (0 < iStack68) {\n                do {\n                    if (iStack96 == 0) {\n                        uStack88 = *(uVar7 + iStack100 * 2);\n                        iVar5 = fcn.00408489(iVar4);\n                        if ((iVar5 == 0) && (iStack100 != iVar2)) {\n                            fcn.0040bd2f(uStack88);\n                        }\n                        else {\n                            fcn.00408182(&stack0xffffffac);\n                            fcn.00412320(arg_ch, &stack0xffffffc8, 1);\n                            iVar4 = iVar4 + 1;\n                            fcn.00412570();\n                            fcn.0040c4cd();\n                        }\n                        unaff_EBX = unaff_EBX + 1;\n                    }\n                    else {\n                        uVar1 = uVar7;\n                        if (iStack96 == 1) {\n                            while (uStack88 = uVar1,  iVar5 = fcn.00408489(iVar2),  iVar5 != 0) {\n                                iVar2 = iVar2 - ((iVar5 - uVar7 >> 1) + iVar4);\n                                if (iVar2 < 0) {\n                                    iVar5 = iVar5 + (iVar4 + iVar2) * 2;\n                                    goto code_r0x004083d8;\n                                }\n                                iVar3 = fcn.0042247b(iVar5, unaff_EDI, iVar4);\n                                if (iVar3 == 0) goto code_r0x004083d8;\n                                uVar7 = iVar5 + 2;\n                                iVar2 = iVar2 + iVar4 + -1;\n                                uVar1 = uStack88;\n                            }\n                            iVar5 = uVar7 + iVar2 * 2;\ncode_r0x004083d8:\n                            fcn.004080ea(uStack88, 0, iVar5 - uStack88 >> 1);\n                            fcn.00408182(&stack0xffffffa0);\n                            fcn.00412320(arg_ch, &stack0xffffffac, 1);\n                            fcn.00412570();\n                            iVar4 = iVar4 + 1;\n                        }\n                    }\n                } while (unaff_EBX < uStack92);\n            }\n            goto code_r0x0040843f;\n        }\n    }\n    else {\n        uStack92 = 0xffffffff;\n    }\n    if (unaff_EBX >> 0x18 == '\\0') {\n        fcn.00403320(arg_ch, 1);\n        iStack44 = 1;\n        uStack36 = 0;\n        uStack32 = 1;\n        fcn.00412320(arg_ch, &stack0xffffffd4, 1);\n        fcn.00412570();\n        iVar4 = **(arg_8h + 4);\n        fcn.004084a6();\n        fcn.004080ea(iStack100, 0, *(*(iVar4 + 8) + 4));\n        fcn.00408182(&stack0xffffffb8);\n    }\n    else {\n        fcn.00403320(arg_ch, 1);\n        iVar4 = **(arg_8h + 4);\n        fcn.004084a6();\n        fcn.004080ea(iStack100, 0, *(*(iVar4 + 8) + 4));\n        fcn.00408182(&stack0xffffffb8);\n    }\n    fcn.00412320(arg_ch, &stack0xffffffd4, 1);\n    fcn.00412570();\n    fcn.0044d7e4(1 - unaff_ESI, 0);\ncode_r0x0040843f:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 2149
    },
    "004084a6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004084a6(ulong *param_1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    ushort *arg_8h;\n    uint uVar3;\n    char16_t *arg_ch;\n    uint var_94h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uVar3 = 0;\n    if (*(param_1 + 1) == 0) {\n        iVar2 = *(param_1 + 0xc);\n        if (iVar2 == 1) {\n            fcn.00422177(*param_1, &var_94h, 10);\n        }\n        else if (iVar2 == 2) {\n            fcn.00422147(*param_1, *(param_1 + 4), &var_94h, 10);\n        }\n        else if (iVar2 == 3) {\n            fcn.0042234b(&var_94h, L\"%.15g\", *param_1);\n        }\n        else if (iVar2 == 7) {\n            fcn.0042234b(&var_94h, 0x4b3904, *param_1);\n        }\n        else if (iVar2 == 9) {\n            if (*param_1 == '\\0') {\n                arg_ch = L\"False\";\n            }\n            else {\n                arg_ch = L\"True\";\n            }\n            fcn.00421943(&var_94h, arg_ch);\n        }\n        else if (iVar2 == 10) {\n            iVar2 = *param_1;\n            var_ch = *(iVar2 + 0xc);\n            var_10h = *(iVar2 + 8);\n            var_8h = *(iVar2 + 0x10);\n            var_4h = *(iVar2 + 0x14);\n            *var_4h = *var_4h + 1;\n            fcn.00421943(&var_94h, var_10h);\n            fcn.00405cd3();\n        }\n        else {\n            if (iVar2 == 0xb) {\n                iVar1 = (**param_1 * 4 + 6) * 2;\n                arg_8h = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n                if (**param_1 == 0) {\n                    *arg_8h = 0;\n                }\n                else {\n                    fcn.004485c0(**param_1);\n                }\n                iVar2 = fcn.0042010a(0x10);\n                if (iVar2 != 0) {\n                    uVar3 = fcn.0040caee(arg_8h);\n                }\n                *(param_1 + 1) = uVar3;\n                fcn.0042017e(arg_8h);\n                return;\n            }\n            var_94h._0_2_ = 0;\n        }\n        iVar2 = fcn.0042010a(0x10);\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040caee(&var_94h);\n        }\n        *(param_1 + 1) = uVar3;\n    }\n    return;\n}\n",
        "token_count": 736
    },
    "00408530": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00408530(uint arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    double dVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t *in_ECX;\n    uint16_t in_FPUControlWord;\n    uint var_64h;\n    uint var_54h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    if ((in_ECX[9] == 0) || (in_ECX[1] == 0)) {\n        var_18h = 0;\n    }\n    else {\n        var_5h._0_1_ = '\\0';\n        var_18h = 0;\n        var_14h = in_ECX;\n        fcn.0040a2fb(0, 0xffffffff);\n        if (arg_ch == 0) {\n            var_5h._0_1_ = '\\x01';\n        }\n        fcn.0040d3d2();\n        fcn.0040d3d2();\n        var_ch = 0;\n        while (((((uVar7 = var_ch,  var_10h = var_ch,  var_5h != '\\0' || (arg_ch != 0)) && (in_ECX[9] != 0)) &&\n                ((*(in_ECX + 4) != '\\0' && (var_ch != 0xffffffff)))) && (var_ch <= in_ECX[10]))) {\n            iVar4 = fcn.00408ca0(*in_ECX, in_ECX[10], var_ch, in_ECX[0x10] | in_ECX[0xe], in_ECX[0xb], in_ECX[0xc]);\n            in_ECX[0xd] = iVar4;\n            if (iVar4 < 1) {\n                if ((iVar4 != -1) || (in_ECX[0xe] == 0)) break;\n                var_10h = var_10h + 1;\n                in_ECX[0xe] = 0;\n                iVar4 = fcn.0041de96(&var_10h, 1);\n            }\n            else {\n                puVar1 = in_ECX[0xb];\n                var_10h = puVar1[1];\n                in_ECX[0xe] = 0;\n                uVar2 = *puVar1;\n                _var_24h = _var_24h & 0xffffffff | uVar2 << 0x20;\n                if (uVar2 == puVar1[1]) {\n                    if (uVar2 == in_ECX[10]) {\n                        var_10h = in_ECX[10] + 1;\n                    }\n                    else {\n                        in_ECX[0xe] = 0x10000010;\n                    }\n                }\n            }\n            if (iVar4 == 0) break;\n            iVar4 = *in_ECX[0xb] - var_ch;\n            if ((iVar4 == 0) || (uVar7 = in_ECX[1],  uVar7 <= var_ch)) {\n                fcn.0040a2fb(0, 0xffffffff);\n                iVar4 = var_30h;\n            }\n            else {\n                if ((iVar4 == -1) || (uVar7 < var_ch + iVar4)) {\n                    iVar4 = uVar7 - var_ch;\n                }\n                if (*var_28h < 2) {\n                    if (var_2ch < iVar4 + 1U) {\n                        var_2ch = fcn.0040c91c(iVar4 + 1U);\n                        if (var_34h != 0) {\n                            fcn.0042017e(var_34h);\n                        }\n                        var_34h = fcn.0042010a(-(var_2ch * 2 >> 0x20 != 0) | var_2ch * 2);\n                        *(var_34h + iVar4 * 2) = 0;\n                    }\n                }\n                else {\n                    *var_28h = *var_28h + -1;\n                    fcn.0040a6f8();\n                    var_2ch = fcn.0040c91c(iVar4 + 1);\n                    var_34h = fcn.0042010a(-(var_2ch * 2 >> 0x20 != 0) | var_2ch * 2);\n                }\n                var_30h = iVar4;\n                fcn.0041faa0(var_34h, *var_14h + var_ch * 2, iVar4 * 2);\n                *(iVar4 * 2 + var_34h) = 0;\n                in_ECX = var_14h;\n            }\n            if (arg_10h == &var_34h) {\n                uVar6 = fcn.0043c0a2(&var_54h, arg_10h);\n                fcn.0040c935(uVar6);\n                fcn.00405cd3();\n            }\n            else if (iVar4 != 0) {\n                iVar5 = *arg_10h[3];\n                if (iVar5 < 2) {\n                    var_24h = arg_10h[1] + 1 + iVar4;\n                    if (arg_10h[2] < var_24h) {\n                        if (var_24h < 0x41c2) {\n                            var_24h = var_24h * 2;\n                        }\n                        else {\n                            iVar4 = var_30h;\n                            if (var_24h < 0x2000000) {\n                                dVar3 = var_24h;\n                                if (var_24h < 0) {\n                                    dVar3 = dVar3 + *0x4b6568;\n                                }\n                                var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                                _var_24h = ROUND(dVar3 * *0x4b2750);\n                            }\n                            else if (var_24h < 0x8000000) {\n                                dVar3 = var_24h;\n                                if (var_24h < 0) {\n                                    dVar3 = dVar3 + *0x4b6568;\n                                }\n                                var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                                _var_24h = ROUND(dVar3 * *0x4b2748);\n                            }\n                            else {\n                                dVar3 = var_24h;\n                                if (var_24h < 0) {\n                                    dVar3 = dVar3 + *0x4b6568;\n                                }\n                                var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                                _var_24h = ROUND(dVar3 * *0x4b2740);\n                            }\n                        }\n                        arg_10h[2] = var_24h;\n                        uVar7 = fcn.0040c91c(var_24h);\n                        arg_10h[2] = uVar7;\n                        var_20h = fcn.0041fa89(-(uVar7 * 2 >> 0x20 != 0) | uVar7 * 2);\n                        _var_24h = _var_24h & 0xffffffff | var_20h << 0x20;\n                        if (*arg_10h != 0) {\n                            fcn.0041faa0(var_20h, *arg_10h, arg_10h[1] * 2 + 2);\n                            fcn.00421a00(*arg_10h);\n                        }\n                        *arg_10h = var_20h;\n                    }\n                }\n                else {\n                    *arg_10h[3] = iVar5 + -1;\n                    fcn.0040a6f8();\n                    uVar7 = fcn.0040c91c(arg_10h[1] + 1 + iVar4);\n                    arg_10h[2] = uVar7;\n                    uVar7 = fcn.0042010a(-(uVar7 * 2 >> 0x20 != 0) | uVar7 * 2);\n                    fcn.0041faa0(uVar7, *arg_10h, arg_10h[1] * 2 + 2);\n                    *arg_10h = uVar7;\n                    in_ECX = var_14h;\n                }\n                fcn.0041faa0(*arg_10h + arg_10h[1] * 2, var_34h, iVar4 * 2);\n                arg_10h[1] = arg_10h[1] + iVar4;\n                *(*arg_10h + arg_10h[1] * 2) = 0;\n            }\n            iVar5 = fcn.0040a0c0(arg_8h, &var_44h);\n            iVar4 = var_40h;\n            var_18h = var_18h + iVar5;\n            if (arg_10h == &var_44h) {\n                uVar6 = fcn.0043c0a2(&var_64h, arg_10h);\n                fcn.0040c935(uVar6);\n                fcn.00405cd3();\n            }\n            else if (var_40h != 0) {\n                iVar5 = *arg_10h[3];\n                if (iVar5 < 2) {\n                    var_24h = arg_10h[1] + 1 + var_40h;\n                    if (arg_10h[2] < var_24h) {\n                        if (var_24h < 0x41c2) {\n                            var_24h = var_24h * 2;\n                        }\n                        else if (var_24h < 0x2000000) {\n                            dVar3 = var_24h;\n                            if (var_24h < 0) {\n                                dVar3 = dVar3 + *0x4b6568;\n                            }\n                            var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                            _var_24h = ROUND(dVar3 * *0x4b2750);\n                        }\n                        else if (var_24h < 0x8000000) {\n                            dVar3 = var_24h;\n                            if (var_24h < 0) {\n                                dVar3 = dVar3 + *0x4b6568;\n                            }\n                            var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                            _var_24h = ROUND(dVar3 * *0x4b2748);\n                        }\n                        else {\n                            dVar3 = var_24h;\n                            if (var_24h < 0) {\n                                dVar3 = dVar3 + *0x4b6568;\n                            }\n                            var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                            _var_24h = ROUND(dVar3 * *0x4b2740);\n                        }\n                        arg_10h[2] = var_24h;\n                        uVar7 = fcn.0040c91c(var_24h);\n                        arg_10h[2] = uVar7;\n                        var_20h = fcn.0041fa89(-(uVar7 * 2 >> 0x20 != 0) | uVar7 * 2);\n                        _var_24h = _var_24h & 0xffffffff | var_20h << 0x20;\n                        if (*arg_10h != 0) {\n                            fcn.0041faa0(var_20h, *arg_10h, arg_10h[1] * 2 + 2);\n                            fcn.00421a00(*arg_10h);\n                        }\n                        *arg_10h = var_20h;\n                    }\n                }\n                else {\n                    *arg_10h[3] = iVar5 + -1;\n                    fcn.0040a6f8();\n                    uVar7 = fcn.0040c91c(arg_10h[1] + 1 + iVar4);\n                    arg_10h[2] = uVar7;\n                    uVar7 = fcn.0042010a(-(uVar7 * 2 >> 0x20 != 0) | uVar7 * 2);\n                    fcn.0041faa0(uVar7, *arg_10h, arg_10h[1] * 2 + 2);\n                    *arg_10h = uVar7;\n                    in_ECX = var_14h;\n                }\n                fcn.0041faa0(*arg_10h + arg_10h[1] * 2, var_44h, iVar4 * 2);\n                arg_10h[1] = arg_10h[1] + iVar4;\n                *(*arg_10h + arg_10h[1] * 2) = 0;\n            }\n            arg_ch = arg_ch + -1;\n            var_ch = var_10h;\n        }\n        fcn.00407f40(in_ECX, uVar7, in_ECX[10] - uVar7);\n        fcn.00407b4b(&var_34h);\n        fcn.00405cd3();\n        fcn.00405cd3();\n    }\n    return var_18h;\n}\n",
        "token_count": 3119
    },
    "00408800": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408800(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    uint extraout_ECX;\n    uint uVar4;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t arg_10h;\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t unaff_EDI;\n    int32_t arg_ch_00;\n    uint32_t arg_8h_00;\n    uchar *arg_8h_01;\n    uchar *arg_ch_01;\n    int32_t iVar8;\n    int32_t iStack188;\n    int32_t *piStack184;\n    int32_t *piStack180;\n    int32_t *piStack176;\n    int32_t *piStack172;\n    int32_t *piStack168;\n    int32_t *piStack164;\n    int32_t *piStack160;\n    int32_t *piStack156;\n    int32_t iStack152;\n    int32_t iStack148;\n    int32_t iStack144;\n    uint uStack136;\n    uint uStack128;\n    int32_t *piStack124;\n    int32_t iStack120;\n    uchar auStack116 [4];\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    char cStack80;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t *piStack52;\n    uint uStack48;\n    int32_t *piStack44;\n    uint32_t uStack40;\n    uint32_t uStack32;\n    \n    fcn.00407d70();\n    iVar5 = **(arg_8h + 4);\n    fcn.004084a6();\n    uVar4 = *(iVar5 + 8);\n    iVar5 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    iStack144 = *(iVar5 + 8);\n    iVar5 = 0;\n    fcn.0040d3d2();\n    if ((2 < *(arg_8h + 8)) && ((iVar5 = fcn.0040cdb4(),  iVar5 < 0 || (4 < iVar5)))) {\n        iVar5 = 0;\n    }\n    if (*(arg_8h + 8) < 4) {\n        iStack188 = 1;\n    }\n    else {\n        iStack188 = fcn.0040cdb4();\n    }\n    if (iStack188 < 1) {\n        iStack188 = 1;\n    }\n    iStack188 = iStack188 + -1;\n    arg_10h = iStack144;\n    piVar1 = fcn.00405be9(iStack144);\n    if (piVar1 != NULL) {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.0044d7e4(2, 0);\n        fcn.00407ba9(piVar1 + 1, 0);\n        goto code_r0x00408c0f;\n    }\n    iVar8 = 0x4088b6;\n    fcn.00407e36(uVar4);\n    if (iVar5 == 0) {\n        iVar5 = fcn.0041de96(&stack0xffffff3c, 0);\n        if (iVar5 == 0) {\n            fcn.00412570();\n            arg_ch[3] = 1;\n            *arg_ch = 0;\n        }\n        else {\n            fcn.00412570();\n            arg_ch[3] = 1;\n            *arg_ch = 1;\n        }\n        goto code_r0x00408c0f;\n    }\n    if (iVar5 == 1) {\n        uVar7 = fcn.0041de96(&stack0xffffff3c, 0);\n        if (uVar7 == 0) {\n            fcn.00412570();\n            arg_ch[3] = 1;\n            *arg_ch = 0;\ncode_r0x0047d43c:\n            fcn.0044d7e4(1, 0);\n            goto code_r0x00408c0f;\n        }\n        fcn.00403320(arg_ch, 1);\n        for (arg_8h_00 = 1 < uVar7; arg_8h_00 < uVar7; arg_8h_00 = arg_8h_00 + 1) {\n            fcn.00442d53(arg_8h_00, &stack0xffffff5c);\n            fcn.00408182(&stack0xffffff54);\n            fcn.00412320(arg_ch, &stack0xffffff70, 1);\n            fcn.00412570();\n        }\n    }\n    else {\n        if (iVar5 != 2) {\n            if (iVar5 == 3) {\n                piStack184 = 0x49dbf4;\n                iStack148 = 0;\n                piStack172 = NULL;\n                arg_ch_00 = iStack56;\n                iVar5 = arg_10h;\n                piStack180 = piVar1;\n                piStack176 = piVar1;\n                piVar1 = piStack156;\n                while ((((iStack60 != 0 && (cStack80 != '\\0')) && (arg_10h != -1)) && (arg_10h <= arg_ch_00))) {\n                    piVar2 = fcn.00408ca0(iStack96, arg_ch_00, arg_10h, uStack40 | uStack32, piStack52, uStack48);\n                    piStack44 = piVar2;\n                    if (piVar2 < 1) {\n                        if ((uStack40 == 0) || (piVar2 != 0xffffffff)) break;\n                        iVar5 = iVar5 + 1;\n                        uStack40 = 0;\n                        arg_10h = iVar8;\n                        piStack160 = fcn.0041de96(&stack0xffffff34, 1);\n                        piVar2 = piStack52;\n                        arg_ch_00 = iStack64;\n                        iVar8 = arg_10h;\n                    }\n                    else {\n                        arg_10h = piStack52[1];\n                        uStack40 = 0;\n                        piStack160 = piVar2;\n                        arg_ch_00 = iStack56;\n                        iVar5 = arg_10h;\n                        if (*piStack52 == piStack52[1]) {\n                            if (*piStack52 == iStack56) {\n                                arg_10h = iStack56 + 1;\n                                iVar5 = arg_10h;\n                            }\n                            else {\n                                uStack40 = 0x10000010;\n                            }\n                        }\n                    }\n                    if (piStack160 == NULL) break;\n                    piVar6 = 1 < piStack160;\n                    if (piVar6 < piStack160) {\n                        iStack148 = piVar6 * 8;\n                        arg_10h = iVar5;\n                        do {\n                            if (piVar6 < piVar2) {\n                                iStack104 = iStack96;\n                                if (-1 < piVar6) {\n                                    piStack124 = iStack148 + piStack52;\n                                    iStack100 = piStack124[1] - *piStack124;\n                                    iStack152 = iStack100 * 2;\n                                    if (*0x4bbddc == fcn.0040a0b1) {\n                                        iVar5 = fcn.004245ec(iStack152 + 2);\n                                    }\n                                    else {\n                                        iVar5 = (**0x4bbddc)();\n                                    }\n                                    if (iVar5 != 0) {\n                                        fcn.0041faa0(iVar5, iStack104 + *piStack124 * 2, iStack100 * 2);\n                                        *(iStack152 + iVar5) = 0;\n                                        unaff_EDI = iVar5;\n                                    }\n                                }\n                                if (unaff_EDI == 0) {\n                                    fcn.0040a2fb(0, 0xffffffff);\n                                    piVar1 = piStack172;\n                                    piVar2 = piStack180;\n                                }\n                                else {\n                                    piVar2 = fcn.004218fb(unaff_EDI);\n                                    piStack172 = piVar2;\n                                    if (*piVar1 < 2) {\n                                        fcn.00407eda(piVar2);\n                                        piVar1 = piStack168;\n                                        piVar2 = piStack176;\n                                    }\n                                    else {\n                                        *piVar1 = *piVar1 + -1;\n                                        piVar1 = fcn.0042010a(4);\n                                        if (piVar1 == NULL) {\n                                            piVar1 = NULL;\n                                        }\n                                        else {\n                                            *piVar1 = 1;\n                                        }\n                                        if (piVar2 == 0xffffffff) {\n                                            piStack168 = 0x8;\n                                        }\n                                        else {\n                                            piStack168 = piVar2 + 2 & 0xfffffff8;\n                                        }\n                                        piStack164 = piVar1;\n                                        piStack176 = fcn.0041fa89(-(ZEXT48(piStack168) * 2 >> 0x20 != 0) |\n                                                                  ZEXT48(piStack168) * 2);\n                                    }\n                                    fcn.0041faa0(piStack176, unaff_EDI, piVar2 * 2 + 2);\n                                }\n                                if (*0x4bb80c == 0x40a0ac) {\n                                    fcn.004228ca(uVar4);\n                                }\n                                else {\n                                    (**0x4bb80c)();\n                                }\n                            }\n                            else {\n                                fcn.0040a2fb(0, 0xffffffff);\n                                piVar1 = piStack172;\n                                piVar2 = piStack180;\n                            }\n                            iVar5 = iStack188;\n                            if (piStack184 == piStack156) {\n                                piStack156 = piStack156 * 2;\n                                if (piStack156 < 0x8) {\n                                    piStack156 = 0x8;\n                                }\n                                piStack180 = piStack156;\n                                iStack152 = fcn.0042010a(-(ZEXT48(piStack156) * 4 >> 0x20 != 0) | ZEXT48(piStack156) * 4\n                                                        );\n                                iVar5 = iStack152;\n                                if ((iStack188 != 0) && (piStack184 != NULL)) {\n                                    fcn.0041faa0(iStack152, iStack188, piStack184 * 4);\n                                    fcn.0042017e(iStack188);\n                                    iVar5 = iStack152;\n                                }\n                            }\n                            iStack188 = iVar5;\n                            ppiVar3 = fcn.0042010a(0x10);\n                            if (ppiVar3 == NULL) {\n                                ppiVar3 = NULL;\n                            }\n                            else {\n                                *ppiVar3 = piStack176;\n                                ppiVar3[1] = piVar2;\n                                ppiVar3[2] = piStack168;\n                                ppiVar3[3] = piVar1;\n                                *piVar1 = *piVar1 + 1;\n                            }\n                            piStack184 = piStack184 + 1;\n                            *(iStack188 + -4 + piStack184 * 4) = ppiVar3;\n                            piVar6 = piVar6 + 1;\n                            iStack148 = iStack148 + 8;\n                            piVar2 = piStack44;\n                            arg_ch_00 = iStack56;\n                            iVar5 = arg_10h;\n                        } while (piVar6 < piStack160);\n                    }\n                }\n                if (piStack184 == NULL) {\n                    fcn.0044d7e4(1, 0);\n                }\n                else {\n                    fcn.00412490(0x408c06);\n                }\n            }\n            else {\n                if (iVar5 != 4) goto code_r0x00408c0f;\n                uStack112 = 0x49dbf4;\n                uStack108 = 0;\n                iStack104 = 0;\n                iStack100 = 0;\n                piStack184 = 0x49dc40;\n                piStack180 = NULL;\n                piStack176 = NULL;\n                piStack172 = NULL;\n                uStack136 = 0;\n                uStack128 = 0;\n                piStack124 = 0x1;\n                uVar4 = extraout_ECX;\n                while( true ) {\n                    arg_ch_01 = &stack0xffffff8c;\n                    arg_8h_01 = &stack0xffffff38;\n                    iVar5 = fcn.00442d9a(arg_8h_01, arg_ch_01);\n                    if (iVar5 == 0) break;\n                    uVar4 = extraout_ECX_00;\n                    if (iStack120 != 0) {\n                        fcn.00412490(&stack0xffffff80);\n                        fcn.0041baef(&stack0xffffff64);\n                        uVar4 = extraout_ECX_01;\n                    }\n                }\n                if (unaff_EBX == 0) {\n                    arg_8h_01 = 0x1;\n                    fcn.0044d7e4(1, 0);\n                }\n                else {\n                    fcn.00403320(arg_ch, 1);\n                    uVar7 = 0;\n                    if (unaff_EBX != 0) {\n                        do {\n                            fcn.00412320(arg_ch, *(unaff_ESI + uVar7 * 4), 1);\n                            uVar7 = uVar7 + 1;\n                        } while (uVar7 < unaff_EBX);\n                    }\n                }\n                fcn.00412570(arg_8h_01, arg_ch_01, uVar4);\n                fcn.004404c9();\n            }\n            fcn.00407da8();\n            goto code_r0x00408c0f;\n        }\n        iVar5 = fcn.0041de96(&stack0xffffff3c, 0);\n        if (iVar5 == 0) goto code_r0x0047d43c;\n        fcn.00403320(arg_ch, 1);\n        iVar8 = 0;\n        if (0 < iVar5) {\n            do {\n                fcn.00442d53(iVar8, &stack0xffffff50);\n                fcn.00408182(&stack0xffffff48);\n                fcn.00412320(arg_ch, &stack0xffffff64, 1);\n                fcn.00412570();\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar5);\n        }\n    }\n    fcn.00407ba9(arg_10h + 1, 0);\ncode_r0x00408c0f:\n    fcn.00405cd3();\n    fcn.00405cbb();\n    return 0;\n}\n",
        "token_count": 3344
    },
    "00408ca0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048c7cb)\n// WARNING: Removing unreachable block (ram,0x0048c82f)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00408ca0(uint16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t *arg_18h, int32_t arg_1ch)\n\n{\n    bool bVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *in_ECX;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uint16_t *puVar10;\n    int32_t iVar11;\n    uint16_t uVar12;\n    int32_t *piVar13;\n    uint16_t *puVar14;\n    uint16_t *puVar15;\n    uint var_110h;\n    uint16_t *var_10ch;\n    uint16_t *var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint32_t var_fch;\n    uint var_f8h;\n    int32_t var_f4h;\n    int32_t var_f0h;\n    int32_t *var_ech;\n    int32_t var_e8h;\n    int32_t var_e4h;\n    int32_t var_e0h;\n    int32_t var_dch;\n    uint32_t var_d8h;\n    uint32_t var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    int32_t var_c8h;\n    uint var_c4h;\n    int32_t var_bch;\n    int32_t var_b8h;\n    int32_t var_b4h;\n    uint32_t var_b0h;\n    uint32_t var_ach;\n    uint32_t var_a8h;\n    uint32_t var_a4h;\n    uint32_t var_a0h;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint32_t var_88h;\n    int32_t var_84h;\n    uint16_t *var_80h;\n    uint16_t *var_7ch;\n    uint16_t *var_78h;\n    int32_t var_74h;\n    uint16_t *var_70h;\n    int32_t var_6ch;\n    int32_t var_68h;\n    uint32_t var_64h;\n    int32_t var_60h;\n    uint var_5ch;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uint16_t *var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    puVar4 = arg_8h + arg_10h;\n    var_108h = puVar4 + -1;\n    var_20h = 0;\n    var_24h = 0;\n    bVar1 = false;\n    var_34h = 0;\n    var_10h = 0;\n    var_fch = 0;\n    var_18h = 0;\n    var_28h = NULL;\n    var_4h = puVar4;\n    if ((((in_ECX == NULL) && (arg_8h == NULL)) && (arg_ch == -999)) && (arg_10h == -999)) {\n        iVar6 = fcn.00409460(0, 0, 0, 0, 0);\n        return iVar6;\n    }\n    if ((arg_14h & 0xe20f5a6f) != 0) {\n        return -3;\n    }\n    if (((in_ECX == NULL) || (arg_8h == NULL)) || ((arg_18h == NULL && (0 < arg_1ch)))) {\n        return -2;\n    }\n    if (arg_1ch < 0) {\n        return -0xf;\n    }\n    if (arg_ch < 0) {\n        return -0x20;\n    }\n    if ((arg_10h < 0) || (arg_ch < arg_10h)) {\n        return -0x18;\n    }\n    if (*in_ECX != 0x50435245) {\n        return (-(*in_ECX != 0x45524350) & 0x19) - 0x1d;\n    }\n    if ((*(in_ECX + 3) & 2) == 0) {\n        return -0x1c;\n    }\n    uVar8 = in_ECX[2];\n    var_a8h = (uVar8 & 0x800) != 0;\n    if ((arg_14h & 0x8000000) == 0) {\n        if ((arg_14h & 0x8000) == 0) {\n            var_6ch = 0;\n        }\n        else {\n            var_6ch = 1;\n        }\n    }\n    else {\n        var_6ch = 2;\n    }\n    var_ch = var_a8h;\n    if ((var_a8h != 0) && ((arg_14h & 0x2000) == 0)) {\n        iVar6 = fcn.00471a42(&var_1ch);\n        if (iVar6 != 0) {\n            if (1 < arg_1ch) {\n                *arg_18h = var_1ch;\n                arg_18h[1] = iVar6;\n            }\n            if ((iVar6 < 2) && (1 < var_6ch)) {\n                return -0x19;\n            }\n            return -10;\n        }\n        if (((0 < arg_10h) && (arg_10h < arg_ch)) && ((*puVar4 & 0xfc00) == 0xdc00)) {\n            return -0xb;\n        }\n        uVar8 = in_ECX[2];\n    }\n    var_d4h = *(in_ECX + 9);\n    var_c8h = in_ECX + *(in_ECX + 0x22) * 2;\n    var_d8h = *(in_ECX + 0x26);\n    var_14h = in_ECX[0xc];\n    var_f4h = 10000000;\n    var_f0h = 10000000;\n    var_4ch = 0;\n    if (((in_ECX[3] & 0x2000U) != 0) && (in_ECX[4] < 10000000)) {\n        var_f4h = in_ECX[4];\n    }\n    if (((in_ECX[3] & 0x4000U) != 0) && (in_ECX[5] < 10000000)) {\n        var_f0h = in_ECX[5];\n    }\n    if (var_14h == 0) {\n        var_14h = 0x4ae7b0;\n    }\n    var_38h = ((uVar8 | arg_14h) & 0x10) != 0;\n    var_1ch = (in_ECX[3] & 0x100U) != 0;\n    var_30h = (uVar8 & 0x40000) != 0;\n    var_84h = in_ECX + (var_d4h * *(in_ECX + 0x26) + *(in_ECX + 0x22)) * 2;\n    var_80h = arg_8h;\n    var_7ch = arg_8h + arg_ch;\n    var_9ch = (uVar8 & 0x20) != 0;\n    var_a0h = (uVar8 & 0x20000000) != 0;\n    var_a4h = (uVar8 & 0x2000000) != 0;\n    var_cch = 0;\n    var_b0h = arg_14h < '\\0';\n    var_ach = (arg_14h & 0x100) != 0;\n    var_98h = (arg_14h & 0x400) != 0;\n    var_94h = (arg_14h & 0x10000000) != 0;\n    var_90h = 0;\n    var_44h = 0;\n    var_48h = 0;\n    var_50h = 0;\n    var_88h = (in_ECX[3] & 0x1000U) != 0;\n    var_bch = var_14h;\n    var_b8h = var_14h + 0x100;\n    var_b4h = var_14h + 0x340;\n    uVar5 = arg_14h & 0x1800000;\n    if (uVar5 == 0) {\n        if ((uVar8 & 0x1800000) == 0) {\ncode_r0x00408f95:\n            var_8ch = 1;\n        }\n        else if ((uVar8 & 0x800000) == 0) {\n            var_8ch = 0;\n        }\n        else {\n            var_8ch = 1;\n        }\n    }\n    else {\n        if (uVar5 == 0x800000) goto code_r0x00408f95;\n        if (uVar5 != 0x1000000) {\n            return -0x17;\n        }\n        var_8ch = 0;\n    }\n    if ((arg_14h & 0x700000) != 0) {\n        uVar8 = arg_14h;\n    }\n    uVar8 = uVar8 & 0x700000;\n    if (uVar8 != 0) {\n        if (uVar8 < 0x300001) {\n            if (uVar8 == 0x300000) {\n                uVar8 = 0xd0a;\n            }\n            else if (uVar8 == 0x100000) {\n                uVar8 = 0xd;\n            }\n            else {\n                if (uVar8 != 0x200000) {\n                    return -0x17;\n                }\n                uVar8 = 10;\n            }\n            var_e0h = 0;\n            var_c4h._0_2_ = uVar8;\n            if (uVar8 < 0x100) {\n                var_dch = 1;\n            }\n            else {\n                var_c4h._2_2_ = var_c4h & 0xff;\n                var_dch = 2;\n                var_c4h._0_2_ = uVar8 >> 8;\n            }\n            goto code_r0x00408fc1;\n        }\n        if (uVar8 == 0x400000) {\n            var_e0h = 1;\n            goto code_r0x00408fc1;\n        }\n        if (uVar8 != 0x500000) {\n            return -0x17;\n        }\n    }\n    var_e0h = 2;\ncode_r0x00408fc1:\n    if ((var_6ch == 0) || ((in_ECX[3] & 0x200U) == 0)) {\n        var_e8h = (arg_1ch / 3) * 3;\n        var_14h = ((arg_1ch / 3) * 6) / 3;\n        uVar12 = *(in_ECX + 8);\n        var_ech = arg_18h;\n        var_60h = arg_10h;\n        var_8h = var_7ch;\n        if ((uVar12 != 0) && (var_e8h / 3 <= uVar12)) {\n            iVar6 = uVar12 + 1;\n            var_e8h = iVar6 * 3;\n            var_ech = (**0x4bbddc)(iVar6 * 0xc);\n            if (var_ech == NULL) {\n                return -6;\n            }\n            var_20h = 1;\n        }\n        var_e4h = (var_e8h * 2) / 3;\n        var_64h = 0;\n        if (var_ech != NULL) {\n            piVar13 = var_ech + (var_e8h - *(in_ECX + 0x1e));\n            if (var_ech + (var_e8h - *(in_ECX + 0x1e)) < var_ech + 2) {\n                piVar13 = var_ech + 2;\n            }\n            for (piVar9 = var_ech + var_e8h + -1; piVar13 <= piVar9; piVar9 = piVar9 + -1) {\n                *piVar9 = -1;\n            }\n            var_ech[1] = -1;\n            *var_ech = -1;\n        }\n        if ((var_38h == 0) && ((in_ECX[3] & 0x10U) != 0)) {\n            uVar12 = *(in_ECX + 6);\n            var_34h = uVar12;\n            var_24h = 1;\n            var_10h = var_34h;\n            if ((in_ECX[3] & 0x20U) != 0) {\n                if (uVar12 < 0x100) {\n                    var_10h = *(var_34h + var_b8h);\n                }\n                if ((var_ch != 0) && (0x7f < var_34h)) {\n                    var_10h = *(*((*((uVar12 >> 7) + 0x4ac470) * 0x80 + (var_34h & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                               0x4ab0d4) + uVar12;\n                }\n            }\n        }\n        if ((in_ECX[3] & 0x40U) != 0) {\n            uVar12 = *(in_ECX + 0x1a);\n            var_fch = uVar12;\n            bVar1 = true;\n            var_18h = var_fch;\n            if (in_ECX[3] < '\\0') {\n                if (uVar12 < 0x100) {\n                    var_18h = *(var_fch + var_b8h);\n                }\n                if ((var_ch != 0) && (0x7f < var_fch)) {\n                    var_18h = *(*((*((uVar12 >> 7) + 0x4ac470) * 0x80 + (var_fch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                               0x4ab0d4) + uVar12;\n                }\n            }\n        }\ncode_r0x00409090:\n        puVar2 = var_8h;\n        puVar14 = var_8h;\n        if (var_30h != 0) {\n            puVar14 = var_4h;\n            if (var_ch == 0) {\n                iVar6 = var_e0h;\n                iVar11 = var_dch;\n                if (var_4h < var_7ch) {\n                    do {\n                        if (iVar6 == 0) {\n                            if (((puVar14 <= var_7ch + -iVar11) && (*puVar14 == var_c4h)) &&\n                               ((iVar11 == 1 || (puVar14[1] == var_c4h._2_2_)))) break;\n                        }\n                        else {\n                            iVar7 = fcn.004080a0(var_7ch, &var_dch, 0);\n                            iVar6 = var_e0h;\n                            iVar11 = var_dch;\n                            if (iVar7 != 0) break;\n                        }\n                        puVar14 = puVar14 + 1;\n                    } while (puVar14 < var_7ch);\n                }\n            }\n            else {\n                iVar6 = var_e0h;\n                iVar11 = var_dch;\n                if (var_4h < var_7ch) {\n                    do {\n                        if (iVar6 == 0) {\n                            if (((puVar14 <= var_7ch + -iVar11) && (*puVar14 == var_c4h)) &&\n                               ((iVar11 == 1 || (puVar14[1] == var_c4h._2_2_)))) break;\n                        }\n                        else {\n                            iVar7 = fcn.004080a0(var_7ch, &var_dch, var_ch);\n                            iVar6 = var_e0h;\n                            iVar11 = var_dch;\n                            if (iVar7 != 0) break;\n                        }\n                        puVar10 = puVar14 + 1;\n                        if ((puVar10 < var_8h) && ((*puVar10 & 0xfc00) == 0xdc00)) {\n                            puVar10 = puVar14 + 2;\n                        }\n                        puVar14 = puVar10;\n                    } while (puVar10 < var_7ch);\n                }\n            }\n        }\n        var_8h = puVar14;\n        uVar8 = (in_ECX[2] | arg_14h) & 0x4000000;\n        if (uVar8 == 0) {\n            if (var_24h == 0) {\n                if ((var_1ch != 0) && (var_80h + arg_10h < var_4h)) {\n                    puVar14 = var_4h;\n                    iVar6 = var_e0h;\n                    if (var_ch == 0) {\n                        puVar10 = var_8h;\n                        puVar15 = var_80h;\n                        if (var_4h < var_8h) {\n                            do {\n                                puVar14 = var_4h;\n                                if (iVar6 == 0) {\n                                    iVar6 = var_e0h;\n                                    puVar15 = var_80h;\n                                    if (((var_80h + var_dch <= var_4h) &&\n                                        (puVar10 = var_8h,  var_4h[-var_dch] == var_c4h)) &&\n                                       ((var_dch == 1 || ((var_4h + -var_dch)[1] == var_c4h._2_2_)))) break;\n                                }\n                                else if ((puVar15 < var_4h) &&\n                                        (iVar11 = fcn.00471953(puVar15, &var_dch, 0),  iVar6 = var_e0h, \n                                        puVar10 = var_8h,  puVar15 = var_80h,  iVar11 != 0)) break;\n                                var_4h = puVar14 + 1;\n                                puVar14 = var_4h;\n                            } while (var_4h < puVar10);\n                        }\n                    }\n                    else {\n                        puVar10 = var_8h;\n                        puVar15 = var_80h;\n                        if (var_4h < var_8h) {\n                            do {\n                                puVar3 = var_4h;\n                                puVar14 = puVar3;\n                                if (var_e0h == 0) {\n                                    puVar15 = var_80h;\n                                    if (((var_80h + var_dch <= var_4h) &&\n                                        (puVar10 = var_8h,  var_4h[-var_dch] == var_c4h)) &&\n                                       ((iVar6 = var_e0h,  var_dch == 1 || ((var_4h + -var_dch)[1] == var_c4h._2_2_))))\n                                    break;\n                                }\n                                else if ((puVar15 < var_4h) &&\n                                        (iVar11 = fcn.00471953(puVar15, &var_dch, var_ch),  iVar6 = var_e0h, \n                                        puVar10 = var_8h,  puVar15 = var_80h,  iVar11 != 0)) break;\n                                var_4h = puVar3 + 1;\n                                iVar6 = var_e0h;\n                                puVar14 = var_4h;\n                                if (puVar10 <= var_4h) break;\n                                var_2ch = 0xdc00;\n                                if ((*var_4h & 0xfc00) == 0xdc00) {\n                                    var_4h = puVar3 + 2;\n                                }\n                                puVar14 = var_4h;\n                            } while (var_4h < puVar10);\n                        }\n                    }\n                    if ((puVar14[-1] == 0xd) &&\n                       ((((iVar6 == 1 || (iVar6 == 2)) && (puVar14 < var_8h)) && (*puVar14 == 10)))) {\n                        var_4h = puVar14 + 1;\n                    }\n                }\n            }\n            else {\n                uVar12 = var_34h;\n                if (uVar12 == var_10h) {\n                    for (; (var_4h < var_8h && (*var_4h != uVar12)); var_4h = var_4h + 1) {\n                    }\n                }\n                else {\n                    for (; ((var_4h < var_8h && (*var_4h != uVar12)) && (*var_4h != var_10h)); var_4h = var_4h + 1) {\n                    }\n                }\n            }\n        }\n        var_8h = puVar2;\n        if (((uVar8 == 0) && (bVar1)) &&\n           ((var_6ch == 0 &&\n            (((puVar2 - var_4h & 0xfffffffeU) < 2000 && (puVar14 = var_4h + (var_24h != 0),  var_108h < puVar14)))))) {\n            if (var_fch == var_18h) {\n                if (puVar14 < puVar2) {\n                    while (uVar12 = *puVar14,  puVar14 = puVar14 + 1,  uVar12 != var_fch) {\n                        if (puVar2 <= puVar14) goto code_r0x004092d3;\n                    }\ncode_r0x00409374:\n                    var_108h = puVar14 + -1;\n                    if (var_108h < puVar2) goto code_r0x004090d5;\n                }\n            }\n            else if (puVar14 < puVar2) {\n                while( true ) {\n                    uVar12 = *puVar14;\n                    puVar14 = puVar14 + 1;\n                    if ((uVar12 == var_fch) || (uVar12 == (var_18h & 0xffff))) break;\n                    if (puVar2 <= puVar14) goto code_r0x004092d3;\n                }\n                goto code_r0x00409374;\n            }\ncode_r0x004092d3:\n            iVar6 = 0;\n            goto code_r0x004092d5;\n        }\ncode_r0x004090d5:\n        var_78h = var_4h;\n        var_70h = var_4h;\n        var_f8h = 0;\n        var_5ch = 0;\n        var_68h = 0;\n        var_d0h = 0;\n        iVar6 = fcn.00409460(var_4h, 2, &var_f8h, 0, 0);\n        iVar11 = var_14h;\n        if ((var_90h != 0) && (var_28h == NULL)) {\n            var_28h = var_70h;\n            var_10ch = var_4h;\n        }\n        if (iVar6 < 1) {\n            if (iVar6 == 0) {\ncode_r0x004091a7:\n                var_cch = 0;\n                puVar14 = var_4h + 1;\n                if (((var_ch != 0) && (puVar14 < puVar2)) && ((*puVar14 & 0xfc00) == 0xdc00)) {\n                    puVar14 = var_4h + 2;\n                }\n            }\n            else {\n    // switch table (5 cases) at 0x48cdcb\n                switch(iVar6) {\n                default:\n                    goto code_r0x00409131;\n                case -0x3e4:\n                    iVar6 = 0;\n                    goto code_r0x004092d5;\n                case -0x3e3:\n                case -0x3e0:\n                    goto code_r0x004091a7;\n                case -0x3e2:\n                    puVar14 = var_78h;\n                    if (var_78h <= var_4h) goto code_r0x004091a7;\n                    break;\n                case -0x3e1:\n                    var_cch = var_d0h;\n                    puVar14 = var_4h;\n                }\n            }\n            iVar6 = 0;\n            if (var_30h != 0) {\n                if (var_e0h == 0) {\n                    if (((var_4h <= var_7ch + -var_dch) && (*var_4h == var_c4h)) &&\n                       ((var_dch == 1 || (var_4h[1] == var_c4h._2_2_)))) goto code_r0x004092d5;\n                }\n                else if ((var_4h < var_7ch) && (iVar11 = fcn.004080a0(var_7ch, &var_dch, var_ch),  iVar11 != 0))\n                goto code_r0x004092d5;\n            }\n            var_4h = puVar14;\n            if ((puVar2 < puVar14) || (var_38h != 0)) goto code_r0x004092d5;\n            if ((((puVar4 < puVar14) && (puVar14[-1] == 0xd)) && (puVar14 < puVar2)) &&\n               (((*puVar14 == 10 && ((in_ECX[3] & 0x800U) == 0)) &&\n                ((var_e0h == 2 || ((var_e0h == 1 || (var_dch == 2)))))))) {\n                var_4h = puVar14 + 1;\n                var_48h = 0;\n            }\n            else {\n                var_48h = 0;\n            }\n            goto code_r0x00409090;\n        }\ncode_r0x00409131:\n        if ((iVar6 == 1) || (iVar6 == -999)) {\n            if (var_20h != 0) {\n                if (3 < var_14h) {\n                    fcn.0041faa0(arg_18h + 2, var_ech + 2, var_14h * 4 + -8);\n                }\n                if (iVar11 < var_68h) {\n                    var_64h = var_64h | 0x10000;\n                }\n                (**0x4bb80c)(var_ech);\n            }\n            if (((var_64h & 0x10000) == 0) || (var_68h < iVar11)) {\n                iVar6 = var_68h / 2;\n            }\n            else {\n                iVar6 = 0;\n            }\n            if ((var_68h / 2 <= *(in_ECX + 0x1e)) && (arg_18h != NULL)) {\n                iVar11 = *(in_ECX + 0x1e) * 2 + 2;\n                if (arg_1ch < iVar11) {\n                    iVar11 = arg_1ch;\n                }\n                piVar13 = arg_18h + var_68h;\n                if (piVar13 < arg_18h + iVar11) {\n                    iVar11 = (arg_18h + iVar11 + (-1 - piVar13) >> 2) + 1;\n                    for (; iVar11 != 0; iVar11 = iVar11 + -1) {\n                        *piVar13 = -1;\n                        piVar13 = piVar13 + 1;\n                    }\n                }\n            }\n            if (arg_1ch < 2) {\n                return 0;\n            }\n            *arg_18h = var_78h - var_80h >> 1;\n            arg_18h[1] = var_74h - var_80h >> 1;\n            return iVar6;\n        }\ncode_r0x004092d5:\n        if (var_20h != 0) {\n            (**0x4bb80c)(var_ech);\n        }\n        if ((iVar6 == 0) || (iVar6 == -0xc)) {\n            if (var_28h == NULL) {\n                return -1;\n            }\n            if (1 < arg_1ch) {\n                *arg_18h = var_28h - arg_8h >> 1;\n                arg_18h[1] = puVar2 - arg_8h >> 1;\n                if (2 < arg_1ch) {\n                    arg_18h[2] = var_10ch - arg_8h >> 1;\n                }\n            }\n            iVar6 = -0xc;\n        }\n    }\n    else {\n        iVar6 = -0xd;\n    }\n    return iVar6;\n}\n",
        "token_count": 6671
    },
    "00409460": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00484e8d)\n// WARNING: Removing unreachable block (ram,0x00409a47)\n// WARNING: Removing unreachable block (ram,0x0040970b)\n// WARNING: Removing unreachable block (ram,0x0048644f)\n// WARNING: Removing unreachable block (ram,0x00485f40)\n// WARNING: Removing unreachable block (ram,0x00486d5e)\n// WARNING: Removing unreachable block (ram,0x00486ee4)\n// WARNING: Removing unreachable block (ram,0x00487065)\n// WARNING: Removing unreachable block (ram,0x00487217)\n// WARNING: Removing unreachable block (ram,0x00487574)\n// WARNING: Removing unreachable block (ram,0x004872fd)\n// WARNING: Removing unreachable block (ram,0x00487136)\n// WARNING: Removing unreachable block (ram,0x00486f9f)\n// WARNING: Removing unreachable block (ram,0x00486e26)\n// WARNING: Removing unreachable block (ram,0x00486634)\n// WARNING: Removing unreachable block (ram,0x00486162)\n// WARNING: Removing unreachable block (ram,0x00485d69)\n// WARNING: Removing unreachable block (ram,0x00484d28)\n// WARNING: Removing unreachable block (ram,0x0040976c)\n// WARNING: Removing unreachable block (ram,0x004875f8)\n// WARNING: Removing unreachable block (ram,0x00484f15)\n// WARNING: Removing unreachable block (ram,0x0048b71e)\n// WARNING: Removing unreachable block (ram,0x0048adca)\n// WARNING: Removing unreachable block (ram,0x0048af9e)\n// WARNING: Removing unreachable block (ram,0x0048b163)\n// WARNING: Removing unreachable block (ram,0x0048b365)\n// WARNING: Removing unreachable block (ram,0x0048b471)\n// WARNING: Removing unreachable block (ram,0x0048b25e)\n// WARNING: Removing unreachable block (ram,0x0048b07c)\n// WARNING: Removing unreachable block (ram,0x0048aeb9)\n// WARNING: Removing unreachable block (ram,0x00488f4e)\n// WARNING: Removing unreachable block (ram,0x00488cbb)\n// WARNING: Removing unreachable block (ram,0x00488bd5)\n// WARNING: Removing unreachable block (ram,0x00488af4)\n// WARNING: Removing unreachable block (ram,0x0048b7a2)\n// WARNING: Removing unreachable block (ram,0x00488685)\n// WARNING: Removing unreachable block (ram,0x004888a2)\n// WARNING: Removing unreachable block (ram,0x00488a23)\n// WARNING: Removing unreachable block (ram,0x00488962)\n// WARNING: Removing unreachable block (ram,0x004887db)\n// WARNING: Removing unreachable block (ram,0x00488fd2)\n// WARNING: Removing unreachable block (ram,0x0048a0fb)\n// WARNING: Type propagation algorithm not settling\n\nuint * __cdecl fcn.00409460(uint *arg_8h, uint32_t arg_ch, uint32_t *arg_10h, uint *arg_14h, uint32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    uint16_t *puVar2;\n    int16_t *piVar3;\n    uint32_t *puVar4;\n    char cVar5;\n    uint8_t uVar6;\n    int16_t iVar7;\n    uint16_t uVar8;\n    int16_t iVar9;\n    uint32_t **ppuVar10;\n    uint *puVar11;\n    uint32_t uVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint *in_ECX;\n    uint32_t uVar15;\n    int32_t iVar16;\n    uint *in_EDX;\n    int32_t iVar17;\n    uint *puVar18;\n    uint16_t *puVar19;\n    int16_t *piVar20;\n    bool bVar21;\n    bool bVar22;\n    uint var_14ch;\n    uint var_d4h;\n    uint32_t var_d0h;\n    uint32_t var_cch;\n    uint32_t var_c8h;\n    int32_t var_c4h;\n    int32_t var_c0h;\n    int32_t var_bch;\n    int32_t var_b8h;\n    uint32_t var_b4h;\n    uint32_t var_b0h;\n    uint32_t var_ach;\n    uint32_t var_a8h;\n    uint32_t var_a4h;\n    uint var_a0h;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint *var_60h;\n    uint *var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint *var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    \n    if (in_EDX == NULL) {\n        if (arg_18h == 0) {\n            puVar11 = fcn.00409460(NULL, 0, NULL, NULL, 1);\n            return puVar11;\n        }\n        puVar11 = &arg_18h - in_ECX;\n        if (puVar11 < 1) {\n            return puVar11;\n        }\n        return -puVar11;\n    }\n    var_40h = NULL;\n    uVar12 = *arg_10h;\n    var_20h = arg_10h[0x14];\n    var_3ch = NULL;\n    var_38h = in_EDX;\n    var_8h = in_ECX;\n    if (arg_10h[1] <= uVar12) {\ncode_r0x0048c297:\n        *arg_10h = *arg_10h + 1;\n        return 0xfffffff8;\n    }\ncode_r0x004094a0:\n    *arg_10h = uVar12 + 1;\n    if (arg_10h[2] <= arg_18h) {\n        return 0xffffffeb;\n    }\n    puVar11 = var_8h;\n    if (arg_10h[0x27] == 2) {\n        var_5ch = var_8h;\n        var_60h = arg_14h;\n        arg_14h = &var_60h;\n        arg_10h[0x27] = 0;\n    }\ncode_r0x004094c0:\n    var_8h = puVar11;\n    puVar11 = var_8h;\n    uVar12 = var_20h;\n    uVar15 = *in_EDX;\n    iVar17 = 0;\n    var_24h = 0;\n    var_2ch = NULL;\n    // switch table (156 cases) at 0x409eb8\n    switch(uVar15) {\n    case 0:\n    case 0x98:\n    case 0x99:\n        if (((var_8h == arg_8h) && (uVar15 != 0x99)) && (arg_10h[0x2a] == 0)) {\n            if (arg_10h[0x18] != 0) {\n                return 0;\n            }\n            if ((arg_10h[0x19] != 0) && (arg_8h == arg_10h[0x1e] + arg_10h[0x26] * 2)) {\n                return 0;\n            }\n        }\n        arg_10h[0x21] = var_8h;\n        arg_10h[0x24] = arg_ch;\n        arg_10h[0x20] = arg_8h;\n        if (uVar15 != 0) {\n            return 0xfffffc19;\n        }\n        return 1;\n    case 1:\n        goto code_r0x00484a0f;\n    case 2:\n        if (var_8h != arg_10h[0x1e] + arg_10h[0x26] * 2) {\n            return 0;\n        }\n        in_EDX = in_EDX + 2;\n        var_38h = in_EDX;\n        goto code_r0x004094c0;\n    case 3:\n        in_EDX = in_EDX + 2;\n        arg_8h = var_8h;\n        var_38h = in_EDX;\n        goto code_r0x004094c0;\n    case 4:\n    case 5:\n        if (var_20h == 0) {\n            if (var_8h == arg_10h[0x1e]) {\ncode_r0x00484edf:\n                iVar17 = 0;\n            }\n            else {\n                if (var_8h < arg_10h[0x22] || var_8h == arg_10h[0x22]) {\n                    arg_10h[0x22] = var_8h - 2;\n                }\n                uVar12 = *(var_8h + -2);\n                if (arg_10h[0x16] == 0) {\n                    if ((0xff < *(var_8h + -2)) || ((*(uVar12 + arg_10h[0x11]) & 0x10) == 0)) goto code_r0x00484edf;\n                    iVar17 = 1;\n                }\n                else if (uVar12 == 0x5f) {\n                    iVar17 = 1;\n                }\n                else {\n                    iVar17 = *(*(*((*((uVar12 >> 7) + 0x4ac470) * 0x80 + (uVar12 & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                                0x4ab0d1) * 4 + 0x4b5ce8);\n                    if ((iVar17 != 1) && (iVar17 != 3)) goto code_r0x00484edf;\n                    iVar17 = 1;\n                }\n            }\n            if (var_8h < arg_10h[0x1f]) {\n                if (arg_10h[0x16] == 0) {\n                    if ((0xff < *var_8h) || ((*(*var_8h + arg_10h[0x11]) & 0x10) == 0)) goto code_r0x00484e07;\n                }\n                else {\n                    uVar12 = *var_8h;\n                    if (uVar12 != 0x5f) {\n                        uVar6 = *((uVar12 >> 7) + 0x4ac470);\n                        goto code_r0x00484f1a;\n                    }\n                }\n                goto code_r0x00484f69;\n            }\ncode_r0x00484de2:\n            if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n               (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                return 0xfffffff4;\n            }\ncode_r0x00484e07:\n            iVar16 = 0;\n        }\n        else {\n            if (var_8h == arg_10h[0x1e]) {\ncode_r0x00484d78:\n                iVar17 = 0;\n            }\n            else {\n                puVar14 = var_8h + -2;\n                if ((*puVar14 & 0xfc00) == 0xdc00) {\n                    puVar14 = var_8h + -1;\n                }\n                if (puVar14 < arg_10h[0x22]) {\n                    arg_10h[0x22] = puVar14;\n                }\n                uVar12 = *puVar14;\n                if ((uVar12 & 0xfc00) == 0xd800) {\n                    uVar12 = ((uVar12 & 0x3ff) << 10 | *(puVar14 + 2) & 0x3ff) + 0x10000;\n                }\n                if (arg_10h[0x16] == 0) {\n                    if ((0xff < uVar12) || ((*(uVar12 + arg_10h[0x11]) & 0x10) == 0)) goto code_r0x00484d78;\n                    iVar17 = 1;\n                }\n                else if (uVar12 == 0x5f) {\n                    iVar17 = 1;\n                }\n                else {\n                    iVar17 = *(*(*((*((uVar12 >> 7) + 0x4ac470) * 0x80 + (uVar12 & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                                0x4ab0d1) * 4 + 0x4b5ce8);\n                    if ((iVar17 != 1) && (iVar17 != 3)) goto code_r0x00484d78;\n                    iVar17 = 1;\n                }\n            }\n            if (arg_10h[0x1f] <= var_8h) goto code_r0x00484de2;\n            uVar12 = *var_8h;\n            if ((uVar12 & 0xfc00) == 0xd800) {\n                uVar12 = ((uVar12 & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n            }\n            if (arg_10h[0x16] == 0) {\n                if ((uVar12 < 0x100) && ((*(uVar12 + arg_10h[0x11]) & 0x10) != 0)) goto code_r0x00484f69;\n                goto code_r0x00484e07;\n            }\n            if (uVar12 == 0x5f) {\ncode_r0x00484f69:\n                iVar16 = 1;\n            }\n            else {\n                uVar6 = *((uVar12 >> 7) + 0x4ac470);\ncode_r0x00484f1a:\n                iVar16 = *(*(*((uVar6 * 0x80 + (uVar12 & 0x8000007f)) * 2 + 0x49e5d0) * 8 + 0x4ab0d1) * 4 + 0x4b5ce8);\n                if (iVar16 == 1) goto code_r0x00484f69;\n                if (iVar16 != 3) goto code_r0x00484e07;\n                iVar16 = 1;\n            }\n        }\n        iVar9 = *in_EDX;\n        in_EDX = in_EDX + 2;\n        var_38h = in_EDX;\n        if (iVar9 == 5) {\n            if (iVar16 == iVar17) {\n                return 0;\n            }\n        }\n        else if (iVar16 != iVar17) {\n            return 0;\n        }\n        goto code_r0x004094c0;\n    case 6:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d36;\n        uVar12 = *var_8h;\n        puVar11 = var_8h + 2;\n        if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n            uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n            puVar11 = var_8h + 1;\n        }\n        var_8h = puVar11;\n        puVar11 = var_8h;\n        if (uVar12 < 0x100) {\n            uVar6 = *(uVar12 + arg_10h[0x11]) & 4;\njoined_r0x00485274:\n            puVar11 = var_8h;\n            if (uVar6 != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 7:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d36;\n        uVar12 = *var_8h;\n        puVar11 = var_8h + 2;\n        if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n            uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n            puVar11 = var_8h + 1;\n        }\n        var_8h = puVar11;\n        if (0xff < uVar12) {\n            return 0;\n        }\n        uVar6 = *(uVar12 + arg_10h[0x11]) & 4;\njoined_r0x004852da:\n        puVar11 = var_8h;\n        if (uVar6 == 0) {\n            return 0;\n        }\n        break;\n    case 8:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d36;\n        uVar12 = *var_8h;\n        puVar11 = var_8h + 2;\n        if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n            uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n            puVar11 = var_8h + 1;\n        }\n        var_8h = puVar11;\n        puVar11 = var_8h;\n        if (uVar12 < 0x100) {\n            uVar6 = *(uVar12 + arg_10h[0x11]) & 1;\n            goto joined_r0x00485274;\n        }\n        break;\n    case 9:\n        if (var_8h < arg_10h[0x1f]) {\n            uVar12 = *var_8h;\n            puVar11 = var_8h + 2;\n            if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n                uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                puVar11 = var_8h + 1;\n            }\n            var_8h = puVar11;\n            if (0xff < uVar12) {\n                return 0;\n            }\n            uVar6 = *(uVar12 + arg_10h[0x11]) & 1;\n            goto joined_r0x004852da;\n        }\n        goto code_r0x00409d36;\n    case 10:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d36;\n        uVar12 = *var_8h;\n        puVar11 = var_8h + 2;\n        if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n            uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n            puVar11 = var_8h + 1;\n        }\n        var_8h = puVar11;\n        puVar11 = var_8h;\n        if (uVar12 < 0x100) {\n            uVar6 = *(uVar12 + arg_10h[0x11]) & 0x10;\n            goto joined_r0x00485274;\n        }\n        break;\n    case 0xb:\n        if (var_8h < arg_10h[0x1f]) {\n            uVar12 = *var_8h;\n            puVar11 = var_8h + 2;\n            if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n                uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                puVar11 = var_8h + 1;\n            }\n            var_8h = puVar11;\n            if (0xff < uVar12) {\n                return 0;\n            }\n            uVar6 = *(uVar12 + arg_10h[0x11]) & 0x10;\n            goto joined_r0x004852da;\n        }\n        goto code_r0x00409d36;\n    case 0xc:\n        puVar11 = arg_10h[0x1f];\n        if (arg_10h[6] == 0) {\n            if ((var_8h <= puVar11 + arg_10h[7] * -2) && (*var_8h == *(arg_10h + 0xd))) {\n                if (arg_10h[7] == 1) {\n                    return 0;\n                }\n                if (*(var_8h + 2) == *(arg_10h + 0x36)) {\n                    return 0;\n                }\n            }\n        }\n        else if ((var_8h < puVar11) && (iVar17 = fcn.004080a0(puVar11, arg_10h + 7, var_20h),  iVar17 != 0)) {\n            return 0;\n        }\n        if (((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= var_8h + 2U)) && (arg_10h[6] == 0)) &&\n            ((arg_10h[7] == 2 && (*var_8h == *(arg_10h + 0xd))))) && (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n            return 0xfffffff4;\n        }\n        goto code_r0x00485027;\n    case 0xd:\ncode_r0x00485027:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d24;\n        puVar11 = var_8h + 2;\n        if (((uVar12 != 0) && (puVar11 < arg_10h[0x1f])) && ((*puVar11 & 0xfc00) == 0xdc00)) {\n            puVar11 = var_8h + 1;\n        }\n        break;\n    case 0xe:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d36;\n        puVar11 = var_8h + 2;\n        break;\n    case 0xf:\n    case 0x10:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d36;\n        var_30h = *var_8h;\n        puVar11 = var_8h + 2;\n        if ((var_20h != 0) && ((var_30h & 0xfc00) == 0xd800)) {\n            var_30h = ((var_30h & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n            puVar11 = var_8h + 1;\n        }\n        var_8h = puVar11;\n        uVar12 = *((*((var_30h >> 7) + 0x4ac470) * 0x80 + (var_30h & 0x8000007f)) * 2 + 0x49e5d0);\n    // switch table (11 cases) at 0x48c2a3\n        switch(*(in_EDX + 2)) {\n        case 0:\n            if (uVar15 == 0xf) {\n                return 0;\n            }\n            goto code_r0x00409a9b;\n        case 1:\n            cVar5 = *(uVar12 * 8 + 0x4ab0d1);\n            if (((cVar5 == '\\t') || (cVar5 == '\\x05')) || (cVar5 == '\\b')) break;\n            bVar21 = false;\n            goto code_r0x0048568f;\n        case 2:\n            if ((*(in_EDX + 1) != *(*(uVar12 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8)) == (uVar15 == 0x10)) {\n                return 0;\n            }\n            goto code_r0x00409a9b;\n        case 3:\n            uVar6 = *(uVar12 * 8 + 0x4ab0d1);\n            goto code_r0x004856e3;\n        case 4:\n            uVar6 = *(uVar12 * 8 + 0x4ab0d0);\ncode_r0x004856e3:\n            if ((*(in_EDX + 1) != uVar6) == (uVar15 == 0x10)) {\n                return 0;\n            }\n            goto code_r0x00409a9b;\n        case 5:\n            iVar17 = *(*(uVar12 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8);\n            if ((iVar17 != 1) && (iVar17 != 3)) {\n                bVar21 = false;\n                goto code_r0x0048568f;\n            }\n            break;\n        case 6:\n            if ((*(*(uVar12 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8) != 6) && (var_30h != 0x9)) {\n                bVar21 = var_30h == 0xa;\ncode_r0x00485750:\n                if ((!bVar21) && (var_30h != 0xc)) {\n                    bVar21 = var_30h == 0xd;\n                    goto code_r0x00485767;\n                }\n            }\n            break;\n        case 7:\n            if (((*(*(uVar12 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8) != 6) && (var_30h != 0x9)) && (var_30h != 0xa)) {\n                bVar21 = var_30h == 0xb;\n                goto code_r0x00485750;\n            }\n            break;\n        case 8:\n            iVar17 = *(*(uVar12 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8);\n            if ((iVar17 != 1) && (iVar17 != 3)) {\n                bVar21 = var_30h == 0x5f;\ncode_r0x00485767:\n                if (!bVar21) goto code_r0x0048568d;\n            }\n            break;\n        case 9:\n            puVar11 = *(in_EDX + 1) * 4 + 0x4ae670;\n            puVar14 = *(*(in_EDX + 1) * 4 + 0x4ae670);\n            while ((puVar14 <= var_30h && (puVar11 = puVar11 + 1,  var_30h != puVar14))) {\n                puVar14 = *puVar11;\n            }\n            if (uVar15 != 0x10) {\n                return 0;\n            }\n            goto code_r0x00409a9b;\n        case 10:\n            if (((var_30h != 0x24) && (var_30h != 0x40)) &&\n               ((var_30h != 0x60 && (((var_30h < 0xa0 || (0xd7ff < var_30h)) && (var_30h < 0xe000)))))) {\ncode_r0x0048568d:\n                bVar21 = false;\n                goto code_r0x0048568f;\n            }\n            break;\n        default:\n            goto code_r0x0048a31b;\n        }\n        bVar21 = true;\ncode_r0x0048568f:\n        if (bVar21 == (uVar15 == 0xf)) {\n            return 0;\n        }\ncode_r0x00409a9b:\n        in_EDX = in_EDX + 6;\n        var_38h = in_EDX;\n        puVar11 = var_8h;\n        goto code_r0x004094c0;\n    case 0x11:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d24;\n        uVar12 = *var_8h;\n        puVar11 = var_8h + 2;\n        if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n            uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n            puVar11 = var_8h + 1;\n        }\n        var_8h = puVar11;\n        if ((0xd < uVar12) && (uVar12 < 0x85)) {\n            return 0;\n        }\n        puVar11 = var_8h;\n        if (uVar12 < 0xe) {\n            if (uVar12 == 0xd) {\n                if (var_8h < arg_10h[0x1f]) {\n                    if (*var_8h == 10) {\n                        in_EDX = in_EDX + 2;\n                        var_38h = in_EDX;\n                        puVar11 = var_8h + 2;\n                        goto code_r0x004094c0;\n                    }\n                }\n                else if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                        (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                    return 0xfffffff4;\n                }\n            }\n            else if (uVar12 != 10) {\n                if (uVar12 < 0xb) {\n                    return 0;\n                }\n                if (0xc < uVar12) {\n                    return 0;\n                }\n                goto code_r0x0048536d;\n            }\n        }\n        else {\n            if ((uVar12 != 0x85) && (1 < uVar12 - 0x2028)) {\n                return 0;\n            }\ncode_r0x0048536d:\n            if (arg_10h[0x1b] != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0x12:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d36;\n        uVar12 = *var_8h;\n        puVar11 = var_8h + 2;\n        if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n            uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n            puVar11 = var_8h + 1;\n        }\n        var_8h = puVar11;\n        puVar11 = var_8h;\n        if (uVar12 < 0x180f) {\n            if (uVar12 == 0x180e) {\n                return 0;\n            }\n            if (uVar12 < 0xa1) {\n                if (uVar12 == 0xa0) {\n                    return 0;\n                }\n                if (uVar12 == 9) {\n                    return 0;\n                }\n                if (uVar12 == 0x20) {\n                    return 0;\n                }\n            }\n            else if (uVar12 == 0x1680) {\n                return 0;\n            }\n        }\n        else if (uVar12 < 0x2060) {\n            if (uVar12 == 0x205f) {\n                return 0;\n            }\n            if (0x1fff < uVar12) {\n                if (uVar12 < 0x200b) {\n                    return 0;\n                }\n                if (uVar12 == 0x202f) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar12 == 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x13:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d36;\n        uVar12 = *var_8h;\n        puVar11 = var_8h + 2;\n        if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n            uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n            puVar11 = var_8h + 1;\n        }\n        var_8h = puVar11;\n        puVar11 = var_8h;\n        if (uVar12 < 0x180f) {\n            if (uVar12 != 0x180e) {\n                if (uVar12 < 0xa1) {\n                    if (((uVar12 != 0xa0) && (uVar12 != 9)) && (uVar12 != 0x20)) {\n                        return 0;\n                    }\n                }\n                else if (uVar12 != 0x1680) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar12 < 0x2060) {\n            if (uVar12 != 0x205f) {\n                if (uVar12 < 0x2000) {\n                    return 0;\n                }\n                if ((0x200a < uVar12) && (uVar12 != 0x202f)) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar12 != 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x14:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d36;\n        uVar12 = *var_8h;\n        puVar11 = var_8h + 2;\n        if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n            uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n            puVar11 = var_8h + 1;\n        }\n        var_8h = puVar11;\n        puVar11 = var_8h;\n        if (uVar12 < 0x86) {\n            if (uVar12 == 0x85) {\n                return 0;\n            }\n            if ((9 < uVar12) && (uVar12 < 0xe)) {\n                return 0;\n            }\n        }\n        else if ((0x2027 < uVar12) && (uVar12 < 0x202a)) {\n            return 0;\n        }\n        break;\n    case 0x15:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d36;\n        uVar12 = *var_8h;\n        puVar11 = var_8h + 2;\n        if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n            uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n            puVar11 = var_8h + 1;\n        }\n        var_8h = puVar11;\n        puVar11 = var_8h;\n        if (uVar12 < 0x86) {\n            if ((uVar12 != 0x85) && (3 < uVar12 - 10)) {\n                return 0;\n            }\n        }\n        else if (1 < uVar12 - 0x2028) {\n            return 0;\n        }\n        break;\n    case 0x16:\n        var_28h = arg_10h[0x1f];\n        if (var_28h <= var_8h) goto code_r0x00409d36;\n        uVar12 = *var_8h;\n        puVar11 = var_8h + 2;\n        if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n            uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n            puVar11 = var_8h + 1;\n        }\n        var_8h = puVar11;\n        uVar6 = *(*((*((uVar12 >> 7) + 0x4ac470) * 0x80 + (uVar12 & 0x8000007f)) * 2 + 0x49e5d0) * 8 + 0x4ab0d2);\n        for (; var_30h = uVar6,  var_8h < var_28h; var_8h = var_8h + iVar17 * 2) {\n            uVar12 = *var_8h;\n            iVar17 = 1;\n            if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n                uVar12 = ((uVar12 & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                iVar17 = 2;\n            }\n            uVar6 = *(*((*((uVar12 >> 7) + 0x4ac470) * 0x80 + (uVar12 & 0x8000007f)) * 2 + 0x49e5d0) * 8 + 0x4ab0d2);\n            in_EDX = var_38h;\n            if ((*(var_30h * 4 + 0x49e454) & 1 << (uVar6 & 0x1f)) == 0) break;\n        }\n        puVar11 = var_8h;\n        if ((arg_10h[0x23] == 0) || (var_8h < var_28h)) break;\n        goto code_r0x00484bcb;\n    case 0x17:\n        goto code_r0x00484c14;\n    case 0x18:\ncode_r0x00484c00:\n        if (var_8h < arg_10h[0x1f]) {\n            return 0;\n        }\n        bVar21 = arg_10h[0x23] == 0;\n        goto code_r0x00484bc5;\n    case 0x19:\n        if ((arg_10h[0x12] != 0) && (var_8h == arg_10h[0x1e])) {\n            return 0;\n        }\ncode_r0x00484a0f:\n        if (var_8h != arg_10h[0x1e]) {\n            return 0;\n        }\n        in_EDX = in_EDX + 2;\n        var_38h = in_EDX;\n        goto code_r0x004094c0;\n    case 0x1a:\n        if ((arg_10h[0x12] != 0) && (var_8h == arg_10h[0x1e])) {\n            return 0;\n        }\n        puVar14 = arg_10h[0x1e];\n        if (var_8h != puVar14) {\n            if (var_8h == arg_10h[0x1f]) {\n                return 0;\n            }\n            if (arg_10h[6] == 0) {\n                uVar12 = arg_10h[7];\n                if (var_8h < puVar14 + uVar12 * 2) {\n                    return 0;\n                }\n                piVar20 = var_8h + uVar12 * -2;\n                if (*piVar20 != *(arg_10h + 0xd)) {\n                    return 0;\n                }\n                if ((uVar12 != 1) && (piVar20[1] != *(arg_10h + 0x36))) {\n                    return 0;\n                }\n            }\n            else {\n                if (var_8h <= puVar14) {\n                    return 0;\n                }\n                iVar17 = fcn.00471953(puVar14, arg_10h + 7, var_20h);\n                puVar11 = var_8h;\n                if (iVar17 == 0) {\n                    return 0;\n                }\n            }\n        }\n        break;\n    case 0x1b:\n        if (arg_10h[0x13] != 0) {\n            return 0;\n        }\n        if (arg_10h[0x17] != 0) goto code_r0x00484c00;\ncode_r0x00484c14:\n        puVar11 = arg_10h[0x1f];\n        if (var_8h < puVar11) {\n            puVar4 = arg_10h + 7;\n            if (arg_10h[6] == 0) {\n                if (((puVar11 + *puVar4 * -2 < var_8h) || (*var_8h != *(arg_10h + 0xd))) ||\n                   ((*puVar4 != 1 && (*(var_8h + 2) != *(arg_10h + 0x36))))) goto code_r0x00484b1b;\n            }\n            else {\n                iVar17 = fcn.004080a0(puVar11, puVar4, var_20h);\n                if (iVar17 == 0) goto code_r0x00484b1b;\n            }\n            if (var_8h != arg_10h[0x1f] + *puVar4 * -2) {\ncode_r0x00484b1b:\n                if (arg_10h[0x23] == 0) {\n                    return 0;\n                }\n                if (var_8h + 2U < arg_10h[0x1f]) {\n                    return 0;\n                }\n                if (arg_10h[6] != 0) {\n                    return 0;\n                }\n                if (arg_10h[7] != 2) {\n                    return 0;\n                }\n                if (*var_8h != *(arg_10h + 0xd)) {\n                    return 0;\n                }\n                arg_10h[0x1a] = 1;\n                if (arg_10h[0x23] < 2) {\n                    return 0;\n                }\n                return 0xfffffff4;\n            }\n        }\n        bVar21 = arg_10h[0x23] == 0;\ncode_r0x00484bc5:\n        puVar11 = var_8h;\n        if (!bVar21) {\ncode_r0x00484bcb:\n            puVar11 = var_8h;\n            if (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22]) {\n                arg_10h[0x1a] = 1;\n                if (1 < arg_10h[0x23]) {\n                    return 0xfffffff4;\n                }\n                in_EDX = in_EDX + 2;\n                var_38h = in_EDX;\n                goto code_r0x004094c0;\n            }\n        }\n        break;\n    case 0x1c:\n        puVar14 = arg_10h[0x1f];\n        if (puVar14 <= var_8h) {\n            if (arg_10h[0x13] != 0) {\n                return 0;\n            }\n            bVar21 = arg_10h[0x23] == 0;\n            goto code_r0x00484bc5;\n        }\n        if (arg_10h[6] == 0) {\n            if (((puVar14 + arg_10h[7] * -2 < var_8h) || (*var_8h != *(arg_10h + 0xd))) ||\n               ((arg_10h[7] != 1 && (*(var_8h + 2) != *(arg_10h + 0x36))))) goto code_r0x00484b1b;\n        }\n        else {\n            iVar17 = fcn.004080a0(puVar14, arg_10h + 7, var_20h);\n            puVar11 = var_8h;\n            if (iVar17 == 0) goto code_r0x00484b1b;\n        }\n        break;\n    case 0x1d:\n        if (var_20h == 0) {\n            if ((arg_10h[0x1f] - var_8h & 0xfffffffe) < 2) {\n                if (arg_10h[0x23] == 0) {\n                    return 0;\n                }\n                bVar21 = var_8h < arg_10h[0x22];\n                bVar22 = var_8h == arg_10h[0x22];\n                goto code_r0x0048a2f7;\n            }\n            if (*(in_EDX + 2) != *var_8h) {\n                return 0;\n            }\n            in_EDX = in_EDX + 1;\n            var_38h = in_EDX;\n            puVar11 = var_8h + 2;\n        }\n        else {\n            puVar19 = in_EDX + 2;\n            in_EDX = in_EDX + 2;\n            iVar17 = 1;\n            if ((*puVar19 & 0xfc00) == 0xd800) {\n                iVar17 = 2;\n            }\n            if (arg_10h[0x1f] - var_8h >> 1 < iVar17) {\n                if (arg_10h[0x23] == 0) {\n                    return 0;\n                }\n                if (var_8h < arg_10h[0x1f]) {\n                    return 0;\n                }\n                bVar21 = var_8h < arg_10h[0x22];\n                bVar22 = var_8h == arg_10h[0x22];\n                goto code_r0x0048a2f7;\n            }\n            var_38h = in_EDX;\n            if (iVar17 != 0) {\n                do {\n                    iVar9 = *in_EDX;\n                    iVar7 = *var_8h;\n                    var_8h = var_8h + 2;\n                    in_EDX = in_EDX + 2;\n                    iVar17 = iVar17 + -1;\n                    if (iVar9 != iVar7) {\n                        return 0;\n                    }\n                    var_38h = in_EDX;\n                    puVar11 = var_8h;\n                } while (0 < iVar17);\n            }\n        }\n        goto code_r0x004094c0;\n    case 0x1e:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d36;\n        if (var_20h == 0) {\n            uVar12 = *(in_EDX + 2);\n            if (*(in_EDX + 2) < 0x100) {\n                uVar12 = *(arg_10h[0xf] + uVar12);\n            }\n            uVar15 = *var_8h;\n            if (*var_8h < 0x100) {\n                uVar15 = *(arg_10h[0xf] + uVar15);\n            }\n            if (uVar12 != uVar15) {\n                return 0;\n            }\n            in_EDX = in_EDX + 1;\n            var_38h = in_EDX;\n            puVar11 = var_8h + 2;\n        }\n        else {\n            puVar14 = *(in_EDX + 2);\n            iVar17 = 1;\n            if ((puVar14 & 0xfc00) == 0xd800) {\n                puVar14 = ((puVar14 & 0x3ff) << 10 | *(in_EDX + 1) & 0x3ff) + 0x10000;\n                iVar17 = 2;\n            }\n            puVar13 = *var_8h;\n            if (puVar14 < 0x80) {\n                if (puVar13 < 0x100) {\n                    puVar13 = *(arg_10h[0xf] + puVar13);\n                }\n                if (*(arg_10h[0xf] + puVar14) != puVar13) {\n                    return 0;\n                }\n                in_EDX = in_EDX + 1;\n                var_38h = in_EDX;\n                puVar11 = var_8h + 2;\n            }\n            else {\n                puVar11 = var_8h + 2;\n                if ((puVar13 & 0xfc00) == 0xd800) {\n                    puVar13 = ((puVar13 & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                    puVar11 = var_8h + 1;\n                }\n                var_8h = puVar11;\n                in_EDX = in_EDX + iVar17 * 2 + 2;\n                var_38h = in_EDX;\n                var_30h = puVar13;\n                puVar11 = var_8h;\n                if ((puVar14 != puVar13) &&\n                   (puVar13 !=\n                    *(*((*((puVar14 >> 7) + 0x4ac470) * 0x80 + (puVar14 & 0x8000007f)) * 2 + 0x49e5d0) * 8 + 0x4ab0d4) +\n                    puVar14)) {\n                    return 0;\n                }\n            }\n        }\n        goto code_r0x004094c0;\n    case 0x1f:\n    case 0x20:\n        if (arg_10h[0x1f] <= var_8h) {\ncode_r0x00409d36:\n            uVar12 = arg_10h[0x23];\n            goto code_r0x00409d2b;\n        }\n        if (var_20h == 0) {\n            uVar8 = *var_8h;\n            uVar12 = *(in_EDX + 2);\n            var_8h = var_8h + 2;\n            if (uVar12 == uVar8) {\n                return 0;\n            }\n            if (uVar15 == 0x20) {\n                if (uVar12 < 0x100) {\n                    uVar12 = *(arg_10h[0x10] + uVar12);\n                }\n                if (uVar12 == uVar8) {\n                    return 0;\n                }\n            }\n            goto code_r0x004864c5;\n        }\n        var_ch = *(in_EDX + 2);\n        puVar11 = in_EDX + 1;\n        if ((var_ch & 0xfc00) == 0xd800) {\n            var_ch = ((var_ch & 0x3ff) << 10 | *(in_EDX + 1) & 0x3ff) + 0x10000;\n            puVar11 = in_EDX + 6;\n        }\n        in_EDX = puVar11;\n        var_30h = *var_8h;\n        puVar11 = var_8h + 2;\n        if ((var_30h & 0xfc00) == 0xd800) {\n            var_30h = ((var_30h & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n            puVar11 = var_8h + 1;\n        }\n        var_8h = puVar11;\n        puVar14 = var_ch;\n        if (uVar15 != 0x1f) {\n            if (var_ch < 0x80) {\n                if (var_ch < 0x100) {\n                    puVar14 = *(arg_10h[0x10] + var_ch);\n                }\n            }\n            else {\n                puVar14 = *(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                           0x4ab0d4) + var_ch;\n            }\n            if (var_ch == var_30h) {\n                return 0;\n            }\n        }\n        var_38h = in_EDX;\n        puVar11 = var_8h;\n        if (puVar14 == var_30h) {\n            return 0;\n        }\n        goto code_r0x004094c0;\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n        uVar12 = uVar15 - ((-(uVar15 < 0x2e) & 0xfffffff3) + 0x2e);\n        var_1ch = *(uVar12 + 0x49e520);\n        var_34h = *(uVar12 + 0x49e528);\n        var_2ch = uVar12 & 1;\n        puVar11 = in_EDX + 2;\n        if (var_34h == NULL) goto code_r0x00485ea4;\n        goto code_r0x00485eab;\n    case 0x27:\n    case 0x28:\n    case 0x34:\n    case 0x35:\n        goto code_r0x00485df5;\n    case 0x29:\n    case 0x36:\n        var_34h = *(in_EDX + 2);\n        puVar11 = in_EDX + 1;\n        var_1ch = var_34h;\n        goto code_r0x00485eab;\n    case 0x2a:\n    case 0x37:\n        iVar17 = 1;\n        var_24h = 1;\n        var_1ch = NULL;\n        goto code_r0x00485ea4;\n    case 0x2b:\n    case 0x38:\n        iVar17 = 1;\n        var_24h = 1;\n        var_1ch = 0x1;\ncode_r0x00485ea4:\n        puVar11 = in_EDX + 2;\n        var_34h = 0x7fffffff;\n        goto code_r0x00485eab;\n    case 0x2c:\n    case 0x39:\n        iVar17 = 1;\n        var_24h = 1;\n        var_1ch = NULL;\n        var_34h = 0x1;\n        puVar11 = in_EDX + 2;\n        goto code_r0x00485eab;\n    case 0x2d:\n    case 0x3a:\n        iVar17 = 1;\n        var_24h = 1;\ncode_r0x00485df5:\n        var_34h = *(in_EDX + 2);\n        var_1ch = NULL;\n        if ((uVar15 == 0x28) || (uVar15 == 0x35)) {\n            var_2ch = 0x1;\n            puVar11 = in_EDX + 1;\n        }\n        else {\n            var_2ch = NULL;\n            puVar11 = in_EDX + 1;\n        }\ncode_r0x00485eab:\n        if (var_20h != 0) {\n            var_18h = *puVar11;\n            var_10h = 0x1;\n            if ((var_18h & 0xfc00) == 0xd800) {\n                var_18h = (*(puVar11 + 2) & 0x3ff | (var_18h & 0x3ff) << 10) + 0x10000;\n                uVar12 = 2;\n                var_10h = 0x2;\n            }\n            else {\n                uVar12 = 1;\n            }\n            var_14h = uVar12 * 2;\n            in_EDX = puVar11 + var_14h;\n            iVar17 = var_24h;\n            var_28h = puVar11;\n            if (uVar12 < 2) goto code_r0x0048612f;\n            var_38h = in_EDX;\n            if ((uVar15 < 0x2e) ||\n               (*(*((*((var_18h >> 7) + 0x4ac470) * 0x80 + (var_18h & 0x8000007f)) * 2 + 0x49e5d0) * 8 + 0x4ab0d4) == 0)\n               ) {\n                var_18h = NULL;\n            }\n            else {\n                var_18h = fcn.00471a0c();\n            }\n            puVar14 = var_1ch;\n            var_ch = 0x1;\n            if (0 < var_1ch) {\n                do {\n                    if (((arg_10h[0x1f] - var_14h < var_8h) ||\n                        (iVar17 = fcn.00420183(var_8h, var_28h, var_10h * 2),  puVar11 = var_14h,  iVar17 != 0)) &&\n                       ((var_18h < 1 ||\n                        ((var_30h = var_18h * 2,  arg_10h[0x1f] + var_18h * -2 < var_8h ||\n                         (iVar17 = fcn.00420183(var_8h, &var_6ch, var_18h * 2),  puVar11 = var_30h,  iVar17 != 0)))))) {\n                        if (arg_10h[0x23] == 0) {\n                            return 0;\n                        }\n                        if (var_8h < arg_10h[0x1f]) {\n                            return 0;\n                        }\n                        bVar21 = var_8h < arg_10h[0x22];\n                        bVar22 = var_8h == arg_10h[0x22];\n                        goto code_r0x0048a2f7;\n                    }\n                    var_8h = var_8h + puVar11;\n                    var_ch = var_ch + 1;\n                } while (var_ch <= puVar14);\n            }\n            puVar11 = var_8h;\n            if (puVar14 != var_34h) {\n                if (var_2ch != NULL) {\n                    puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    if (puVar14 != NULL) {\n                        return puVar14;\n                    }\n                    puVar14 = var_10h * 2;\n                    var_ch = puVar14;\n                    while( true ) {\n                        if (var_34h <= var_1ch) {\n                            return 0;\n                        }\n                        if (((arg_10h[0x1f] - puVar14 < puVar11) ||\n                            (iVar17 = fcn.00420183(puVar11, var_28h, var_10h * 2),  puVar14 = var_ch,  iVar17 != 0)) &&\n                           ((var_18h < 1 ||\n                            ((var_30h = var_18h * 2,  arg_10h[0x1f] + var_18h * -2 < puVar11 ||\n                             (iVar17 = fcn.00420183(puVar11, &var_6ch, var_18h * 2),  puVar14 = var_30h,  iVar17 != 0)))\n                            ))) break;\n                        puVar11 = puVar11 + puVar14;\n                        var_1ch = var_1ch + 1;\n                        puVar13 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        puVar14 = var_10h * 2;\n                        if (puVar13 != NULL) {\n                            return puVar13;\n                        }\n                    }\ncode_r0x0048a32d:\n                    if (arg_10h[0x23] == 0) {\n                        return 0;\n                    }\n                    if (puVar11 < arg_10h[0x1f]) {\n                        return 0;\n                    }\n                    bVar21 = puVar11 < arg_10h[0x22];\n                    bVar22 = puVar11 == arg_10h[0x22];\n                    goto code_r0x0048a2f7;\n                }\n                var_30h = var_8h;\n                if (puVar14 < var_34h) {\n                    do {\n                        if (((arg_10h[0x1f] - var_14h < var_8h) ||\n                            (iVar17 = fcn.00420183(var_8h, var_28h, var_10h * 2),  puVar11 = var_14h,  iVar17 != 0)) &&\n                           ((var_18h < 1 ||\n                            ((var_ch = var_18h * 2,  arg_10h[0x1f] + var_18h * -2 < var_8h ||\n                             (iVar17 = fcn.00420183(var_8h, &var_6ch, var_18h * 2),  puVar11 = var_ch,  iVar17 != 0)))))\n                           ) {\n                            if ((arg_10h[0x23] != 0) &&\n                               (((arg_10h[0x1f] <= var_8h && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                                (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                                return 0xfffffff4;\n                            }\n                            break;\n                        }\n                        var_8h = var_8h + puVar11;\n                        puVar14 = puVar14 + 1;\n                    } while (puVar14 < var_34h);\n                }\n                puVar11 = var_8h;\n                if (var_24h == 0) {\n                    puVar14 = var_38h;\n                    if (var_8h != var_30h) {\n                        do {\n                            puVar11 = var_8h;\n                            puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            if (puVar14 != NULL) {\n                                return puVar14;\n                            }\n                            var_8h = puVar11 + -2;\n                            if ((*(puVar11 + -2) & 0xfc00) == 0xdc00) {\n                                var_8h = puVar11 + -1;\n                            }\n                            puVar14 = var_38h;\n                        } while (var_8h != var_30h);\n                    }\n                    goto code_r0x0040952e;\n                }\n            }\n            goto code_r0x004094c0;\n        }\n        var_18h = *puVar11;\n        in_EDX = puVar11 + 2;\ncode_r0x0048612f:\n        var_38h = in_EDX;\n        if (0x2d < uVar15) {\n            if ((var_20h == 0) || (var_18h < 0x80)) {\n                var_14h = var_18h;\n                if (var_18h < 0x100) {\n                    var_14h = *(arg_10h[0x10] + var_18h);\n                }\n            }\n            else {\n                var_14h = *(*((*((var_18h >> 7) + 0x4ac470) * 0x80 + (var_18h & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                           0x4ab0d4) + var_18h;\n                iVar17 = var_24h;\n            }\n            var_10h = 0x1;\n            if (0 < var_1ch) {\n                do {\n                    puVar13 = var_8h;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                    if ((var_18h != *var_8h) && (var_14h != *var_8h)) {\n                        return 0;\n                    }\n                    var_10h = var_10h + 1;\n                    var_8h = var_8h + 2;\n                    iVar17 = var_24h;\n                } while (var_10h <= var_1ch);\n            }\n            puVar13 = var_8h;\n            puVar11 = var_8h;\n            if (var_1ch != var_34h) {\n                if (var_2ch != NULL) {\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    while( true ) {\n                        if (puVar11 != NULL) {\n                            return puVar11;\n                        }\n                        if (var_34h <= var_1ch) {\n                            return 0;\n                        }\n                        if (arg_10h[0x1f] <= puVar13) break;\n                        if ((var_18h != *puVar13) && (var_14h != *puVar13)) {\n                            return 0;\n                        }\n                        var_1ch = var_1ch + 1;\n                        puVar13 = puVar13 + 2;\n                        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    }\n                    goto code_r0x0048a760;\n                }\n                var_10h = var_8h;\n                for (puVar14 = var_1ch; puVar14 < var_34h; puVar14 = puVar14 + 1) {\n                    if (arg_10h[0x1f] <= puVar11) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= puVar11 && puVar11 != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    if ((var_18h != *puVar11) && (iVar17 = var_24h,  var_14h != *puVar11)) break;\n                    puVar11 = puVar11 + 2;\n                    iVar17 = var_24h;\n                }\n                if (iVar17 == 0) {\n                    bVar21 = puVar11 != var_8h;\n                    puVar14 = in_EDX;\n                    var_8h = puVar11;\n                    if (bVar21) {\n                        do {\n                            puVar11 = var_8h;\n                            puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            var_8h = puVar11 + -2;\n                            if (puVar14 != NULL) {\n                                return puVar14;\n                            }\n                            puVar14 = var_38h;\n                        } while (var_8h != var_10h);\n                    }\n                    goto code_r0x0040952e;\n                }\n            }\n            goto code_r0x004094c0;\n        }\n        var_ch = 0x1;\n        if (0 < var_1ch) {\n            do {\n                if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d24;\n                uVar8 = *var_8h;\n                var_8h = var_8h + 2;\n                if (var_18h != uVar8) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n            } while (var_ch <= var_1ch);\n        }\n        puVar13 = var_8h;\n        puVar11 = var_8h;\n        if (var_1ch == var_34h) goto code_r0x004094c0;\n        if (var_2ch == NULL) {\n            var_10h = var_8h;\n            for (puVar14 = var_1ch; puVar14 < var_34h; puVar14 = puVar14 + 1) {\n                if (arg_10h[0x1f] <= puVar11) {\n                    if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= puVar11 && puVar11 != arg_10h[0x22])) &&\n                       (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                        return 0xfffffff4;\n                    }\n                    break;\n                }\n                if (var_18h != *puVar11) break;\n                puVar11 = puVar11 + 2;\n            }\n            if (iVar17 == 0) {\n                bVar21 = puVar11 != var_8h;\n                puVar14 = in_EDX;\n                var_8h = puVar11;\n                if (bVar21) {\n                    do {\n                        puVar11 = var_8h;\n                        puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        var_8h = puVar11 + -2;\n                        if (puVar14 != NULL) {\n                            return puVar14;\n                        }\n                        puVar14 = var_38h;\n                    } while (var_8h != var_10h);\n                }\n                goto code_r0x0040952e;\n            }\n            goto code_r0x004094c0;\n        }\n        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        while( true ) {\n            if (puVar11 != NULL) {\n                return puVar11;\n            }\n            if (var_34h <= var_1ch) {\n                return 0;\n            }\n            if (arg_10h[0x1f] <= puVar13) break;\n            uVar8 = *puVar13;\n            puVar13 = puVar13 + 2;\n            if (var_18h != uVar8) {\n                return 0;\n            }\n            var_1ch = var_1ch + 1;\n            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        }\n        goto code_r0x0048a760;\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n        uVar12 = uVar15 - ((-(uVar15 < 0x48) & 0xfffffff3) + 0x48);\n        var_1ch = *(uVar12 + 0x49e520);\n        var_14h = *(uVar12 + 0x49e528);\n        var_2ch = uVar12 & 1;\n        puVar11 = in_EDX + 2;\n        if (var_14h == NULL) goto code_r0x004865b1;\n        goto code_r0x004865b8;\n    case 0x41:\n    case 0x42:\n    case 0x4e:\n    case 0x4f:\n        var_14h = *(in_EDX + 2);\n        var_1ch = NULL;\n        if ((uVar15 == 0x42) || (uVar15 == 0x4f)) {\n            var_2ch = 0x1;\n            puVar11 = in_EDX + 1;\n        }\n        else {\n            var_2ch = NULL;\n            puVar11 = in_EDX + 1;\n        }\n        goto code_r0x004865b8;\n    case 0x43:\n    case 0x50:\n        var_1ch = *(in_EDX + 2);\n        puVar11 = in_EDX + 1;\n        var_14h = var_1ch;\n        goto code_r0x004865b8;\n    case 0x44:\n    case 0x51:\n        var_24h = 1;\n        var_1ch = NULL;\n        goto code_r0x004865b1;\n    case 0x45:\n    case 0x52:\n        var_24h = 1;\n        var_1ch = 0x1;\ncode_r0x004865b1:\n        puVar11 = in_EDX + 2;\n        var_14h = 0x7fffffff;\n        goto code_r0x004865b8;\n    case 0x46:\n    case 0x53:\n        var_24h = 1;\n        var_1ch = NULL;\n        var_14h = 0x1;\n        puVar11 = in_EDX + 2;\n        goto code_r0x004865b8;\n    case 0x47:\n    case 0x54:\n        var_14h = *(in_EDX + 2);\n        var_24h = 1;\n        var_1ch = NULL;\n        puVar11 = in_EDX + 1;\ncode_r0x004865b8:\n        var_34h = *puVar11;\n        var_38h = puVar11 + 2;\n        if ((var_20h != 0) && ((var_34h & 0xfc00) == 0xd800)) {\n            var_34h = (*var_38h & 0x3ff | (var_34h & 0x3ff) << 10) + 0x10000;\n            var_38h = puVar11 + 1;\n        }\n        in_EDX = var_38h;\n        puVar14 = var_38h;\n        if (0x47 < uVar15) {\n            if ((var_20h == 0) || (var_34h < 0x80)) {\n                var_10h = var_34h;\n                if (var_34h < 0x100) {\n                    var_10h = *(arg_10h[0x10] + var_34h);\n                }\n            }\n            else {\n                var_10h = *(*((*((var_34h >> 7) + 0x4ac470) * 0x80 + (var_34h & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                           0x4ab0d4) + var_34h;\n            }\n            var_ch = 0x1;\n            if (var_20h == 0) {\n                if (0 < var_1ch) {\n                    do {\n                        puVar13 = var_8h;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                        if (var_34h == *var_8h) {\n                            return 0;\n                        }\n                        if (var_10h == *var_8h) {\n                            return 0;\n                        }\n                        var_ch = var_ch + 1;\n                        var_8h = var_8h + 2;\n                    } while (var_ch <= var_1ch);\n                }\n            }\n            else if (0 < var_1ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d24;\n                    puVar13 = *var_8h;\n                    var_18h = puVar13;\n                    puVar11 = var_8h + 2;\n                    if ((puVar13 & 0xfc00) == 0xd800) {\n                        var_18h = (puVar13 & 0x3ff) << 10;\n                        puVar13 = (*(var_8h + 2) & 0x3ff | var_18h) + 0x10000;\n                        puVar11 = var_8h + 1;\n                    }\n                    var_8h = puVar11;\n                    if (var_34h == puVar13) {\n                        return 0;\n                    }\n                    if (var_10h == puVar13) {\n                        return 0;\n                    }\n                    var_ch = var_ch + 1;\n                } while (var_ch <= var_1ch);\n            }\n            puVar13 = var_8h;\n            puVar11 = var_8h;\n            if (var_1ch != var_14h) {\n                if (var_2ch != NULL) {\n                    if (var_20h == 0) {\n                        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        while( true ) {\n                            if (puVar11 != NULL) {\n                                return puVar11;\n                            }\n                            if (var_14h <= var_1ch) {\n                                return 0;\n                            }\n                            if (arg_10h[0x1f] <= puVar13) break;\n                            if (var_34h == *puVar13) {\n                                return 0;\n                            }\n                            if (var_10h == *puVar13) {\n                                return 0;\n                            }\n                            var_1ch = var_1ch + 1;\n                            puVar13 = puVar13 + 2;\n                            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        }\n                    }\n                    else {\n                        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        while( true ) {\n                            if (puVar11 != NULL) {\n                                return puVar11;\n                            }\n                            if (var_14h <= var_1ch) {\n                                return 0;\n                            }\n                            if (arg_10h[0x1f] <= puVar13) break;\n                            puVar11 = *puVar13;\n                            puVar14 = puVar13 + 2;\n                            if ((puVar11 & 0xfc00) == 0xd800) {\n                                puVar11 = ((puVar11 & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                                puVar14 = puVar13 + 1;\n                            }\n                            if (var_34h == puVar11) {\n                                return 0;\n                            }\n                            if (var_10h == puVar11) {\n                                return 0;\n                            }\n                            var_1ch = var_1ch + 1;\n                            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            puVar13 = puVar14;\n                        }\n                    }\n                    goto code_r0x0048a760;\n                }\n                var_18h = var_8h;\n                if (var_20h == 0) {\n                    puVar11 = var_1ch;\n                    if (var_1ch < var_14h) {\n                        while (var_8h < arg_10h[0x1f]) {\n                            if ((var_34h == *var_8h) || (var_10h == *var_8h)) goto code_r0x004868ca;\n                            var_8h = var_8h + 2;\n                            puVar11 = puVar11 + 1;\n                            if (var_14h <= puVar11) goto code_r0x004868ca;\n                        }\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                    }\ncode_r0x004868ca:\n                    puVar11 = var_8h;\n                    if (var_24h == 0) {\n                        if (var_8h != puVar13) {\n                            do {\n                                puVar11 = var_8h;\n                                puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                                if (puVar14 != NULL) {\n                                    return puVar14;\n                                }\n                                var_8h = puVar11 + -2;\n                                puVar14 = var_38h;\n                            } while (var_8h != var_18h);\n                        }\n                        goto code_r0x0040952e;\n                    }\n                }\n                else {\n                    puVar11 = var_1ch;\n                    if (var_1ch < var_14h) {\n                        while (var_ch = 0x1,  var_8h < arg_10h[0x1f]) {\n                            puVar18 = *var_8h;\n                            var_2ch = puVar18;\n                            if ((puVar18 & 0xfc00) == 0xd800) {\n                                var_2ch = (puVar18 & 0x3ff) << 10;\n                                var_ch = 0x2;\n                                puVar18 = (*(var_8h + 2) & 0x3ff | var_2ch) + 0x10000;\n                            }\n                            if ((var_34h == puVar18) || (var_10h == puVar18)) goto code_r0x004867dd;\n                            puVar11 = puVar11 + 1;\n                            var_8h = var_8h + var_ch * 2;\n                            if (var_14h <= puVar11) goto code_r0x004867dd;\n                        }\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                    }\ncode_r0x004867dd:\n                    puVar11 = var_8h;\n                    if (var_24h == 0) {\n                        if (var_8h != puVar13) {\n                            do {\n                                puVar11 = var_8h;\n                                puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                                if (puVar14 != NULL) {\n                                    return puVar14;\n                                }\n                                var_8h = puVar11 + -2;\n                                if ((*(puVar11 + -2) & 0xfc00) == 0xdc00) {\n                                    var_8h = puVar11 + -1;\n                                }\n                                puVar14 = var_38h;\n                            } while (var_8h != var_18h);\n                        }\n                        goto code_r0x0040952e;\n                    }\n                }\n            }\n            goto code_r0x004094c0;\n        }\n        var_ch = 0x1;\n        if (var_20h == 0) {\n            if (0 < var_1ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d24;\n                    uVar8 = *var_8h;\n                    var_8h = var_8h + 2;\n                    if (var_34h == uVar8) {\n                        return 0;\n                    }\n                    var_ch = var_ch + 1;\n                } while (var_ch <= var_1ch);\n            }\n        }\n        else if (0 < var_1ch) {\n            do {\n                if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d24;\n                puVar13 = *var_8h;\n                var_10h = puVar13;\n                puVar11 = var_8h + 2;\n                if ((puVar13 & 0xfc00) == 0xd800) {\n                    var_10h = (puVar13 & 0x3ff) << 10;\n                    puVar13 = (*(var_8h + 2) & 0x3ff | var_10h) + 0x10000;\n                    puVar11 = var_8h + 1;\n                }\n                var_8h = puVar11;\n                if (var_34h == puVar13) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n            } while (var_ch <= var_1ch);\n        }\n        puVar13 = var_8h;\n        puVar11 = var_8h;\n        if (var_1ch == var_14h) goto code_r0x004094c0;\n        if (var_2ch == NULL) {\n            var_18h = var_8h;\n            puVar13 = var_1ch;\n            if (var_20h == 0) {\n                for (; puVar13 < var_14h; puVar13 = puVar13 + 1) {\n                    if (arg_10h[0x1f] <= puVar11) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= puVar11 && puVar11 != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    if (var_34h == *puVar11) break;\n                    puVar11 = puVar11 + 2;\n                }\n                if (var_24h == 0) {\n                    bVar21 = puVar11 != var_8h;\n                    var_8h = puVar11;\n                    if (bVar21) {\n                        do {\n                            puVar11 = var_8h;\n                            puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            if (puVar14 != NULL) {\n                                return puVar14;\n                            }\n                            var_8h = puVar11 + -2;\n                            puVar14 = var_38h;\n                        } while (var_8h != var_18h);\n                    }\n                    goto code_r0x0040952e;\n                }\n            }\n            else {\n                for (; puVar13 < var_14h; puVar13 = puVar13 + 1) {\n                    var_ch = 0x1;\n                    if (arg_10h[0x1f] <= puVar11) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= puVar11 && puVar11 != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    puVar18 = *puVar11;\n                    var_10h = puVar18;\n                    if ((puVar18 & 0xfc00) == 0xd800) {\n                        var_10h = (puVar18 & 0x3ff) << 10;\n                        var_ch = 0x2;\n                        puVar18 = (*(puVar11 + 2) & 0x3ff | var_10h) + 0x10000;\n                    }\n                    if (var_34h == puVar18) break;\n                    puVar11 = puVar11 + var_ch * 2;\n                }\n                if (var_24h == 0) {\n                    bVar21 = puVar11 != var_8h;\n                    var_8h = puVar11;\n                    if (bVar21) {\n                        do {\n                            puVar11 = var_8h;\n                            puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            if (puVar14 != NULL) {\n                                return puVar14;\n                            }\n                            var_8h = puVar11 + -2;\n                            if ((*(puVar11 + -2) & 0xfc00) == 0xdc00) {\n                                var_8h = puVar11 + -1;\n                            }\n                            puVar14 = var_38h;\n                        } while (var_8h != var_18h);\n                    }\n                    goto code_r0x0040952e;\n                }\n            }\n            goto code_r0x004094c0;\n        }\n        if (var_20h == 0) {\n            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            while( true ) {\n                if (puVar11 != NULL) {\n                    return puVar11;\n                }\n                if (var_14h <= var_1ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= puVar13) break;\n                uVar8 = *puVar13;\n                puVar13 = puVar13 + 2;\n                if (var_34h == uVar8) {\n                    return 0;\n                }\n                var_1ch = var_1ch + 1;\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            }\n        }\n        else {\n            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            while( true ) {\n                if (puVar11 != NULL) {\n                    return puVar11;\n                }\n                if (var_14h <= var_1ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= puVar13) break;\n                puVar11 = *puVar13;\n                puVar14 = puVar13 + 2;\n                if ((puVar11 & 0xfc00) == 0xd800) {\n                    puVar11 = ((puVar11 & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                    puVar14 = puVar13 + 1;\n                }\n                if (var_34h == puVar11) {\n                    return 0;\n                }\n                var_1ch = var_1ch + 1;\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar13 = puVar14;\n            }\n        }\n        goto code_r0x0048a760;\n    case 0x55:\n    case 0x56:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n        puVar11 = in_EDX + 2;\n        var_2ch = (uVar15 - 0x55 & 1) != 0;\n        var_14h = *(uVar15 + 0x49e4cb);\n        var_1ch = *(uVar15 + 0x49e4d3);\n        if (var_1ch == NULL) goto code_r0x00409bf0;\n        goto code_r0x00409bf7;\n    case 0x5b:\n    case 0x5c:\n        var_1ch = *(in_EDX + 2);\n        var_2ch = uVar15 == 0x5c;\n        var_14h = NULL;\n        puVar11 = in_EDX + 1;\n        goto code_r0x00409bf7;\n    case 0x5d:\n        var_1ch = *(in_EDX + 2);\n        var_2ch = 0x1;\n        puVar11 = in_EDX + 1;\n        var_14h = var_1ch;\n        goto code_r0x00409bf7;\n    case 0x5e:\n        var_24h = 1;\n        var_14h = NULL;\n        goto code_r0x00409bf0;\n    case 0x5f:\n        var_24h = 1;\n        var_14h = 0x1;\ncode_r0x00409bf0:\n        puVar11 = in_EDX + 2;\n        var_1ch = 0x7fffffff;\n        goto code_r0x00409bf7;\n    case 0x60:\n        var_24h = 1;\n        var_14h = NULL;\n        var_1ch = 0x1;\n        puVar11 = in_EDX + 2;\n        goto code_r0x00409bf7;\n    case 0x61:\n        var_1ch = *(in_EDX + 2);\n        var_24h = 1;\n        var_14h = NULL;\n        puVar11 = in_EDX + 1;\ncode_r0x00409bf7:\n        var_34h = *puVar11;\n        in_EDX = puVar11 + 2;\n        if (var_34h == 0x10) {\n            var_3ch = NULL;\ncode_r0x00486c4b:\n            var_40h = *(puVar11 + 1);\n            var_30h = *in_EDX;\n            in_EDX = puVar11 + 6;\n        }\n        else {\n            if (var_34h == 0xf) {\n                var_3ch = 0x1;\n                goto code_r0x00486c4b;\n            }\n            var_30h = 0xffffffff;\n        }\n        var_38h = in_EDX;\n        if (0 < var_14h) {\n    // switch table (11 cases) at 0x48c2ef\n            switch(var_30h) {\n            case NULL:\n                if (var_3ch != NULL) {\n                    return 0;\n                }\n                var_ch = 0x1;\n                if (0 < var_14h) {\n                    do {\n                        puVar13 = var_8h;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                        var_10h = *var_8h;\n                        puVar11 = var_8h + 2;\n                        if ((var_20h != 0) && (var_10h = var_10h & 0xfc00,  var_10h == 0xd800)) {\n                            puVar11 = var_8h + 1;\n                        }\n                        var_8h = puVar11;\n                        var_ch = var_ch + 1;\n                    } while (var_ch <= var_14h);\n                }\n                break;\n            case 0x1:\n                var_28h = 0x1;\n                if (0 < var_14h) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d24;\n                        var_ch = *var_8h;\n                        puVar11 = var_8h + 2;\n                        if ((var_20h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                            var_ch = ((var_ch & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                            puVar11 = var_8h + 1;\n                        }\n                        var_8h = puVar11;\n                        cVar5 = *(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                                 0x4ab0d1);\n                        if (((cVar5 == '\\t') || (cVar5 == '\\x05')) || (cVar5 == '\\b')) {\n                            puVar11 = 0x1;\n                        }\n                        else {\n                            puVar11 = NULL;\n                        }\n                        if (puVar11 == var_3ch) {\n                            return 0;\n                        }\n                        var_28h = var_28h + 1;\n                    } while (var_28h <= var_14h);\n                }\n                break;\n            case 0x2:\n                var_ch = 0x1;\n                if (0 < var_14h) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d24;\n                        uVar15 = *var_8h;\n                        puVar11 = var_8h + 2;\n                        if ((var_20h != 0) && ((uVar15 & 0xfc00) == 0xd800)) {\n                            uVar15 = ((uVar15 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                            puVar11 = var_8h + 1;\n                        }\n                        var_8h = puVar11;\n                        if ((*(*(*((*((uVar15 >> 7) + 0x4ac470) * 0x80 + (uVar15 & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                                0x4ab0d1) * 4 + 0x4b5ce8) == var_40h) == var_3ch) {\n                            return 0;\n                        }\n                        var_ch = var_ch + 1;\n                    } while (var_ch <= var_14h);\n                }\n                break;\n            case 0x3:\n                var_ch = 0x1;\n                if (0 < var_14h) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d24;\n                        uVar15 = *var_8h;\n                        puVar11 = var_8h + 2;\n                        if ((var_20h != 0) && ((uVar15 & 0xfc00) == 0xd800)) {\n                            uVar15 = ((uVar15 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                            puVar11 = var_8h + 1;\n                        }\n                        var_8h = puVar11;\n                        if ((*(*((*((uVar15 >> 7) + 0x4ac470) * 0x80 + (uVar15 & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                              0x4ab0d1) == var_40h) == var_3ch) {\n                            return 0;\n                        }\n                        var_ch = var_ch + 1;\n                    } while (var_ch <= var_14h);\n                }\n                break;\n            case 0x4:\n                var_ch = 0x1;\n                if (0 < var_14h) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d24;\n                        uVar15 = *var_8h;\n                        puVar11 = var_8h + 2;\n                        if ((var_20h != 0) && ((uVar15 & 0xfc00) == 0xd800)) {\n                            uVar15 = ((uVar15 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                            puVar11 = var_8h + 1;\n                        }\n                        var_8h = puVar11;\n                        if ((*(*((*((uVar15 >> 7) + 0x4ac470) * 0x80 + (uVar15 & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                              0x4ab0d0) == var_40h) == var_3ch) {\n                            return 0;\n                        }\n                        var_ch = var_ch + 1;\n                    } while (var_ch <= var_14h);\n                }\n                break;\n            case 0x5:\n                var_28h = 0x1;\n                if (0 < var_14h) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d24;\n                        var_ch = *var_8h;\n                        puVar11 = var_8h + 2;\n                        if ((var_20h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                            var_ch = ((var_ch & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                            puVar11 = var_8h + 1;\n                        }\n                        var_8h = puVar11;\n                        iVar17 = *(*(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8\n                                    + 0x4ab0d1) * 4 + 0x4b5ce8);\n                        if ((iVar17 == 1) || (iVar17 == 3)) {\n                            puVar11 = 0x1;\n                        }\n                        else {\n                            puVar11 = NULL;\n                        }\n                        if (puVar11 == var_3ch) {\n                            return 0;\n                        }\n                        var_28h = var_28h + 1;\n                    } while (var_28h <= var_14h);\n                }\n                break;\n            case 0x6:\n                var_28h = 0x1;\n                if (0 < var_14h) {\n                    do {\n                        puVar13 = var_8h;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                        var_ch = *var_8h;\n                        puVar11 = var_8h + 2;\n                        if ((var_20h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                            var_ch = ((var_ch & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                            puVar11 = var_8h + 1;\n                        }\n                        var_8h = puVar11;\n                        if (((*(*(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                                 0x4ab0d1) * 4 + 0x4b5ce8) == 6) || (var_ch == 0x9)) ||\n                           ((var_ch == 0xa || ((var_ch == 0xc || (var_ch == 0xd)))))) {\n                            puVar11 = 0x1;\n                        }\n                        else {\n                            puVar11 = NULL;\n                        }\n                        if (puVar11 == var_3ch) {\n                            return 0;\n                        }\n                        var_28h = var_28h + 1;\n                    } while (var_28h <= var_14h);\n                }\n                break;\n            case 0x7:\n                var_28h = 0x1;\n                if (0 < var_14h) {\n                    do {\n                        puVar13 = var_8h;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                        var_ch = *var_8h;\n                        puVar11 = var_8h + 2;\n                        if ((var_20h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                            var_ch = ((var_ch & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                            puVar11 = var_8h + 1;\n                        }\n                        var_8h = puVar11;\n                        if (((*(*(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                                 0x4ab0d1) * 4 + 0x4b5ce8) == 6) || (var_ch == 0x9)) ||\n                           ((var_ch == 0xa || (((var_ch == 0xb || (var_ch == 0xc)) || (var_ch == 0xd)))))) {\n                            puVar11 = 0x1;\n                        }\n                        else {\n                            puVar11 = NULL;\n                        }\n                        if (puVar11 == var_3ch) {\n                            return 0;\n                        }\n                        var_28h = var_28h + 1;\n                    } while (var_28h <= var_14h);\n                }\n                break;\n            case 0x8:\n                var_28h = 0x1;\n                if (0 < var_14h) {\n                    do {\n                        puVar13 = var_8h;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                        var_ch = *var_8h;\n                        puVar11 = var_8h + 2;\n                        if ((var_20h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                            var_ch = ((var_ch & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                            puVar11 = var_8h + 1;\n                        }\n                        var_8h = puVar11;\n                        iVar17 = *(*(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8\n                                    + 0x4ab0d1) * 4 + 0x4b5ce8);\n                        if (((iVar17 == 1) || (iVar17 == 3)) || (var_ch == 0x5f)) {\n                            puVar11 = 0x1;\n                        }\n                        else {\n                            puVar11 = NULL;\n                        }\n                        if (puVar11 == var_3ch) {\n                            return 0;\n                        }\n                        var_28h = var_28h + 1;\n                    } while (var_28h <= var_14h);\n                }\n                break;\n            case 0x9:\n                var_28h = 0x1;\n                if (0 < var_14h) {\n                    do {\n                        puVar13 = var_8h;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                        var_18h = *var_8h;\n                        puVar11 = var_8h + 2;\n                        if ((var_20h != 0) && ((var_18h & 0xfc00) == 0xd800)) {\n                            var_18h = (*puVar11 & 0x3ff | (var_18h & 0x3ff) << 10) + 0x10000;\n                            puVar11 = var_8h + 1;\n                        }\n                        var_8h = puVar11;\n                        var_10h = var_40h * 4 + 0x4ae670;\n                        var_ch = *var_10h;\n                        while ((var_ch <= var_18h && (var_10h = var_10h + 1,  var_18h != var_ch))) {\n                            var_ch = *var_10h;\n                        }\n                        if (var_3ch != NULL) {\n                            return 0;\n                        }\n                        var_28h = var_28h + 1;\n                    } while (var_28h <= var_14h);\n                }\n                break;\n            case 0xa:\n                var_28h = 0x1;\n                if (0 < var_14h) {\n                    do {\n                        puVar13 = var_8h;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                        var_18h = *var_8h;\n                        puVar11 = var_8h + 2;\n                        if ((var_20h != 0) && ((var_18h & 0xfc00) == 0xd800)) {\n                            var_18h = (*puVar11 & 0x3ff | (var_18h & 0x3ff) << 10) + 0x10000;\n                            puVar11 = var_8h + 1;\n                        }\n                        var_8h = puVar11;\n                        if (((var_18h == 0x24) || (var_18h == 0x40)) ||\n                           ((var_18h == 0x60 ||\n                            (((0x9f < var_18h && (var_18h < 0xd800)) || (var_ch = NULL,  0xdfff < var_18h)))))) {\n                            var_ch = 0x1;\n                        }\n                        if (var_ch == var_3ch) {\n                            return 0;\n                        }\n                        var_28h = var_28h + 1;\n                    } while (var_28h <= var_14h);\n                }\n                break;\n            default:\n                if (var_34h == 0x16) {\n                    var_10h = 0x1;\n                    if (0 < var_14h) {\n                        do {\n                            var_28h = arg_10h[0x1f];\n                            puVar13 = var_8h;\n                            if (var_28h <= var_8h) goto code_r0x0048a760;\n                            var_ch = *var_8h;\n                            puVar11 = var_8h + 2;\n                            if ((var_20h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                                var_ch = ((var_ch & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                                puVar11 = var_8h + 1;\n                            }\n                            var_8h = puVar11;\n                            puVar14 = *(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) *\n                                        8 + 0x4ab0d2);\n                            puVar11 = arg_10h[0x1f];\n                            var_ch = puVar14;\n                            if (var_8h < arg_10h[0x1f]) {\n                                do {\n                                    uVar15 = *var_8h;\n                                    var_ch = 0x1;\n                                    if ((var_20h != 0) && ((uVar15 & 0xfc00) == 0xd800)) {\n                                        uVar15 = ((uVar15 & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                                        var_ch = 0x2;\n                                    }\n                                    uVar6 = *(*((*((uVar15 >> 7) + 0x4ac470) * 0x80 + (uVar15 & 0x8000007f)) * 2 +\n                                               0x49e5d0) * 8 + 0x4ab0d2);\n                                    puVar11 = var_28h;\n                                } while (((*(puVar14 * 4 + 0x49e454) & 1 << (uVar6 & 0x1f)) != 0) &&\n                                        (var_8h = var_8h + var_ch * 2,  puVar14 = uVar6,  var_8h < var_28h));\n                            }\n                            if ((arg_10h[0x23] != 0) &&\n                               (((puVar11 <= var_8h && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                                (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                                return 0xfffffff4;\n                            }\n                            var_10h = var_10h + 1;\n                        } while (var_10h <= var_14h);\n                    }\n                }\n                else {\n                    puVar13 = var_8h;\n                    if (var_20h == 0) {\n    // switch table (16 cases) at 0x48c35b\n                        switch(var_34h) {\n                        case 0x6:\n                            var_28h = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    var_ch = 0xff;\n                                    if ((*var_8h < 0x100) && ((*(*var_8h + arg_10h[0x11]) & 4) != 0)) {\n                                        return 0;\n                                    }\n                                    var_28h = var_28h + 1;\n                                    var_8h = var_8h + 2;\n                                } while (var_28h <= var_14h);\n                            }\n                            break;\n                        case 0x7:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    if (0xff < *var_8h) {\n                                        return 0;\n                                    }\n                                    if ((*(*var_8h + arg_10h[0x11]) & 4) == 0) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                    var_8h = var_8h + 2;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0x8:\n                            var_28h = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    var_ch = 0xff;\n                                    if ((*var_8h < 0x100) && ((*(*var_8h + arg_10h[0x11]) & 1) != 0)) {\n                                        return 0;\n                                    }\n                                    var_28h = var_28h + 1;\n                                    var_8h = var_8h + 2;\n                                } while (var_28h <= var_14h);\n                            }\n                            break;\n                        case 0x9:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    if (0xff < *var_8h) {\n                                        return 0;\n                                    }\n                                    if ((*(*var_8h + arg_10h[0x11]) & 1) == 0) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                    var_8h = var_8h + 2;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0xa:\n                            var_28h = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    var_ch = 0xff;\n                                    if ((*var_8h < 0x100) && ((*(*var_8h + arg_10h[0x11]) & 0x10) != 0)) {\n                                        return 0;\n                                    }\n                                    var_28h = var_28h + 1;\n                                    var_8h = var_8h + 2;\n                                } while (var_28h <= var_14h);\n                            }\n                            break;\n                        case 0xb:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    if (0xff < *var_8h) {\n                                        return 0;\n                                    }\n                                    if ((*(*var_8h + arg_10h[0x11]) & 0x10) == 0) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                    var_8h = var_8h + 2;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0xc:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar14 = var_8h;\n                                    puVar11 = arg_10h[0x1f];\n                                    puVar13 = var_8h;\n                                    if (puVar11 <= var_8h) goto code_r0x0048a760;\n                                    if (arg_10h[6] == 0) {\n                                        if ((var_8h <= puVar11 + arg_10h[7] * -2) && (*var_8h == *(arg_10h + 0xd))) {\n                                            if (arg_10h[7] == 1) {\n                                                return 0;\n                                            }\n                                            if (*(var_8h + 2) == *(arg_10h + 0x36)) {\n                                                return 0;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        iVar17 = fcn.004080a0(puVar11, arg_10h + 7, 0);\n                                        if (iVar17 != 0) {\n                                            return 0;\n                                        }\n                                    }\n                                    if (((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= puVar14 + 2U)) && (arg_10h[6] == 0)\n                                         ) && ((arg_10h[7] == 2 && (*puVar14 == *(arg_10h + 0xd))))) &&\n                                       (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                                        return 0xfffffff4;\n                                    }\n                                    var_ch = var_ch + 1;\n                                    var_8h = puVar14 + 2;\n                                    uVar12 = var_20h;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0xd:\n                            var_ch = var_14h * 2;\n                            if (arg_10h[0x1f] + var_14h * -2 < var_8h) goto code_r0x0048a760;\n                            var_8h = var_8h + var_ch;\n                            break;\n                        case 0xe:\n                            var_ch = var_14h * 2;\n                            if (arg_10h[0x1f] + var_14h * -2 < var_8h) goto code_r0x0048a760;\n                            var_8h = var_8h + var_ch;\n                            break;\n                        default:\n                            goto code_r0x0048a31b;\n                        case 0x11:\n                            var_28h = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    var_10h = *var_8h;\n                                    puVar11 = var_8h + 2;\n                                    if (var_10h < 0xe) {\n                                        if (var_10h == 0xd) {\n                                            if ((puVar11 < arg_10h[0x1f]) && (*puVar11 == 10)) {\n                                                puVar11 = var_8h + 1;\n                                            }\n                                        }\n                                        else if (var_10h != 0xa) {\n                                            if (1 < var_10h - 0xbU) {\n                                                return 0;\n                                            }\n                                            goto code_r0x0048806b;\n                                        }\n                                    }\n                                    else {\n                                        if ((var_10h != 0x85) && (0x1 < var_10h + -0x80a)) {\n                                            return 0;\n                                        }\ncode_r0x0048806b:\n                                        if (arg_10h[0x1b] != 0) {\n                                            return 0;\n                                        }\n                                    }\n                                    var_8h = puVar11;\n                                    var_28h = var_28h + 1;\n                                } while (var_28h <= var_14h);\n                            }\n                            break;\n                        case 0x12:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    var_18h = *var_8h;\n                                    var_8h = var_8h + 2;\n                                    if (var_18h < 0x180f) {\n                                        if (var_18h == 0x180e) {\n                                            return 0;\n                                        }\n                                        if (var_18h < 0xa1) {\n                                            if (var_18h == 0xa0) {\n                                                return 0;\n                                            }\n                                            if (var_18h == 0x9) {\n                                                return 0;\n                                            }\n                                            if (var_18h == 0x20) {\n                                                return 0;\n                                            }\n                                        }\n                                        else if (var_18h == 0x1680) {\n                                            return 0;\n                                        }\n                                    }\n                                    else if (var_18h < 0x2060) {\n                                        if (var_18h == 0x205f) {\n                                            return 0;\n                                        }\n                                        if (0x1fff < var_18h) {\n                                            if (var_18h < 0x200b) {\n                                                return 0;\n                                            }\n                                            if (var_18h == 0x202f) {\n                                                return 0;\n                                            }\n                                        }\n                                    }\n                                    else if (var_18h == 0x3000) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0x13:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    var_18h = *var_8h;\n                                    var_8h = var_8h + 2;\n                                    if (var_18h < 0x180f) {\n                                        if (var_18h != 0x180e) {\n                                            if (var_18h < 0xa1) {\n                                                if (((var_18h != 0xa0) && (var_18h != 0x9)) && (var_18h != 0x20)) {\n                                                    return 0;\n                                                }\n                                            }\n                                            else if (var_18h != 0x1680) {\n                                                return 0;\n                                            }\n                                        }\n                                    }\n                                    else if (var_18h < 0x2060) {\n                                        if (var_18h != 0x205f) {\n                                            if (var_18h < 0x2000) {\n                                                return 0;\n                                            }\n                                            if ((0x200a < var_18h) && (var_18h != 0x202f)) {\n                                                return 0;\n                                            }\n                                        }\n                                    }\n                                    else if (var_18h != 0x3000) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0x14:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    var_10h = *var_8h;\n                                    var_8h = var_8h + 2;\n                                    if (var_10h < 0x86) {\n                                        if (var_10h == 0x85) {\n                                            return 0;\n                                        }\n                                        if ((0x9 < var_10h) && (var_10h < 0xe)) {\n                                            return 0;\n                                        }\n                                    }\n                                    else if ((0x2027 < var_10h) && (var_10h < 0x202a)) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0x15:\n                            var_10h = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    var_28h = *var_8h;\n                                    var_8h = var_8h + 2;\n                                    if (var_28h < 0x86) {\n                                        if ((var_28h != 0x85) && (3 < var_28h - 10U)) {\n                                            return 0;\n                                        }\n                                    }\n                                    else if (0x1 < var_28h + -0x80a) {\n                                        return 0;\n                                    }\n                                    var_10h = var_10h + 1;\n                                } while (var_10h <= var_14h);\n                            }\n                        }\n                    }\n                    else {\n    // switch table (16 cases) at 0x48c31b\n                        switch(var_34h) {\n                        case 0x6:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    if (arg_10h[0x1f] <= puVar13) goto code_r0x0048a760;\n                                    var_10h = *puVar13;\n                                    var_8h = puVar13 + 2;\n                                    if ((var_10h & 0xfc00) == 0xd800) {\n                                        var_10h = (*var_8h & 0x3ff | (var_10h & 0x3ff) << 10) + 0x10000;\n                                        var_8h = puVar13 + 1;\n                                    }\n                                    if ((var_10h < 0x80) && ((*(var_10h + arg_10h[0x11]) & 4) != 0)) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                    puVar13 = var_8h;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0x7:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    if (0x7f < *var_8h) {\n                                        return 0;\n                                    }\n                                    if ((*(*var_8h + arg_10h[0x11]) & 4) == 0) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                    var_8h = var_8h + 2;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0x8:\n                            var_28h = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    if ((*var_8h < 0x80) && ((*(*var_8h + arg_10h[0x11]) & 1) != 0)) {\n                                        return 0;\n                                    }\n                                    puVar11 = var_8h + 2;\n                                    if ((puVar11 < arg_10h[0x1f]) && (var_ch = 0xdc00,  (*puVar11 & 0xfc00) == 0xdc00))\n                                    {\n                                        puVar11 = var_8h + 1;\n                                    }\n                                    var_8h = puVar11;\n                                    var_28h = var_28h + 1;\n                                } while (var_28h <= var_14h);\n                            }\n                            break;\n                        case 0x9:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    if (0x7f < *var_8h) {\n                                        return 0;\n                                    }\n                                    if ((*(*var_8h + arg_10h[0x11]) & 1) == 0) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                    var_8h = var_8h + 2;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0xa:\n                            var_28h = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    if ((*var_8h < 0x80) && ((*(*var_8h + arg_10h[0x11]) & 0x10) != 0)) {\n                                        return 0;\n                                    }\n                                    puVar11 = var_8h + 2;\n                                    if ((puVar11 < arg_10h[0x1f]) && (var_ch = 0xdc00,  (*puVar11 & 0xfc00) == 0xdc00))\n                                    {\n                                        puVar11 = var_8h + 1;\n                                    }\n                                    var_8h = puVar11;\n                                    var_28h = var_28h + 1;\n                                } while (var_28h <= var_14h);\n                            }\n                            break;\n                        case 0xb:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    if (0x7f < *var_8h) {\n                                        return 0;\n                                    }\n                                    if ((*(*var_8h + arg_10h[0x11]) & 0x10) == 0) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                    var_8h = var_8h + 2;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0xc:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                var_10h = var_8h + 2;\n                                do {\n                                    puVar14 = var_8h;\n                                    puVar11 = arg_10h[0x1f];\n                                    puVar13 = var_8h;\n                                    if (puVar11 <= var_8h) goto code_r0x0048a760;\n                                    if (arg_10h[6] == 0) {\n                                        if ((var_8h <= puVar11 + arg_10h[7] * -2) && (*var_8h == *(arg_10h + 0xd))) {\n                                            if (arg_10h[7] == 1) {\n                                                return 0;\n                                            }\n                                            if (*var_10h == *(arg_10h + 0x36)) {\n                                                return 0;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        iVar17 = fcn.004080a0(puVar11, arg_10h + 7, uVar12);\n                                        uVar12 = var_20h;\n                                        if (iVar17 != 0) {\n                                            return 0;\n                                        }\n                                    }\n                                    if ((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= var_10h)) && (arg_10h[6] == 0)) &&\n                                       (((arg_10h[7] == 2 && (*puVar14 == *(arg_10h + 0xd))) &&\n                                        (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                                        return 0xfffffff4;\n                                    }\n                                    var_8h = puVar14 + 2;\n                                    puVar11 = var_10h + 2;\n                                    if ((var_8h < arg_10h[0x1f]) && (var_28h = 0xdc00,  (*var_8h & 0xfc00) == 0xdc00)) {\n                                        var_8h = puVar14 + 1;\n                                        puVar11 = var_10h + 1;\n                                    }\n                                    var_10h = puVar11;\n                                    var_ch = var_ch + 1;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0xd:\n                            var_28h = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    puVar11 = var_8h + 2;\n                                    if ((puVar11 < arg_10h[0x1f]) && (var_ch = 0xdc00,  (*puVar11 & 0xfc00) == 0xdc00))\n                                    {\n                                        puVar11 = var_8h + 1;\n                                    }\n                                    var_8h = puVar11;\n                                    var_28h = var_28h + 1;\n                                } while (var_28h <= var_14h);\n                            }\n                            break;\n                        case 0xe:\n                            var_ch = var_14h * 2;\n                            if (arg_10h[0x1f] + var_14h * -2 < var_8h) {\n                                return 0;\n                            }\n                            var_8h = var_8h + var_ch;\n                            break;\n                        default:\n                            goto code_r0x0048a31b;\n                        case 0x11:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    puVar13 = var_8h;\n                                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048a760;\n                                    puVar11 = *var_8h;\n                                    puVar14 = var_8h + 2;\n                                    var_10h = puVar11;\n                                    if ((puVar11 & 0xfc00) == 0xd800) {\n                                        var_10h = (puVar11 & 0x3ff) << 10;\n                                        puVar11 = (*puVar14 & 0x3ff | var_10h) + 0x10000;\n                                        puVar14 = var_8h + 1;\n                                    }\n                                    var_8h = puVar14;\n                                    if (puVar11 < 0xe) {\n                                        if (puVar11 == 0xd) {\n                                            if ((puVar14 < arg_10h[0x1f]) && (*puVar14 == 10)) {\n                                                var_8h = puVar14 + 2;\n                                            }\n                                        }\n                                        else if (puVar11 != 0xa) {\n                                            if (1 < puVar11 - 0xbU) {\n                                                return 0;\n                                            }\n                                            goto code_r0x004878ee;\n                                        }\n                                    }\n                                    else {\n                                        if ((puVar11 != 0x85) && (0x1 < puVar11 + -0x80a)) {\n                                            return 0;\n                                        }\ncode_r0x004878ee:\n                                        if (arg_10h[0x1b] != 0) {\n                                            return 0;\n                                        }\n                                    }\n                                    var_ch = var_ch + 1;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0x12:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    if (arg_10h[0x1f] <= puVar13) goto code_r0x0048a760;\n                                    puVar11 = *puVar13;\n                                    var_8h = puVar13 + 2;\n                                    var_10h = puVar11;\n                                    if ((puVar11 & 0xfc00) == 0xd800) {\n                                        var_10h = (puVar11 & 0x3ff) << 10;\n                                        puVar11 = (*var_8h & 0x3ff | var_10h) + 0x10000;\n                                        var_8h = puVar13 + 1;\n                                    }\n                                    if (puVar11 < 0x180f) {\n                                        if (puVar11 == 0x180e) {\n                                            return 0;\n                                        }\n                                        if (puVar11 < 0xa1) {\n                                            if (puVar11 == 0xa0) {\n                                                return 0;\n                                            }\n                                            if (puVar11 == 0x9) {\n                                                return 0;\n                                            }\n                                            if (puVar11 == 0x20) {\n                                                return 0;\n                                            }\n                                        }\n                                        else if (puVar11 == 0x1680) {\n                                            return 0;\n                                        }\n                                    }\n                                    else if (puVar11 < 0x2060) {\n                                        if (puVar11 == 0x205f) {\n                                            return 0;\n                                        }\n                                        if (0x1fff < puVar11) {\n                                            if (puVar11 < 0x200b) {\n                                                return 0;\n                                            }\n                                            if (puVar11 == 0x202f) {\n                                                return 0;\n                                            }\n                                        }\n                                    }\n                                    else if (puVar11 == 0x3000) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                    puVar13 = var_8h;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0x13:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    if (arg_10h[0x1f] <= puVar13) goto code_r0x0048a760;\n                                    puVar11 = *puVar13;\n                                    var_8h = puVar13 + 2;\n                                    var_10h = puVar11;\n                                    if ((puVar11 & 0xfc00) == 0xd800) {\n                                        var_10h = (puVar11 & 0x3ff) << 10;\n                                        puVar11 = (*var_8h & 0x3ff | var_10h) + 0x10000;\n                                        var_8h = puVar13 + 1;\n                                    }\n                                    if (puVar11 < 0x180f) {\n                                        if (puVar11 != 0x180e) {\n                                            if (puVar11 < 0xa1) {\n                                                if (((puVar11 != 0xa0) && (puVar11 != 0x9)) && (puVar11 != 0x20)) {\n                                                    return 0;\n                                                }\n                                            }\n                                            else if (puVar11 != 0x1680) {\n                                                return 0;\n                                            }\n                                        }\n                                    }\n                                    else if (puVar11 < 0x2060) {\n                                        if (puVar11 != 0x205f) {\n                                            if (puVar11 < 0x2000) {\n                                                return 0;\n                                            }\n                                            if ((0x200a < puVar11) && (puVar11 != 0x202f)) {\n                                                return 0;\n                                            }\n                                        }\n                                    }\n                                    else if (puVar11 != 0x3000) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                    puVar13 = var_8h;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0x14:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    if (arg_10h[0x1f] <= puVar13) goto code_r0x0048a760;\n                                    puVar11 = *puVar13;\n                                    var_8h = puVar13 + 2;\n                                    var_10h = puVar11;\n                                    if ((puVar11 & 0xfc00) == 0xd800) {\n                                        var_10h = (puVar11 & 0x3ff) << 10;\n                                        puVar11 = (*var_8h & 0x3ff | var_10h) + 0x10000;\n                                        var_8h = puVar13 + 1;\n                                    }\n                                    if (puVar11 < 0x86) {\n                                        if (puVar11 == 0x85) {\n                                            return 0;\n                                        }\n                                        if ((0x9 < puVar11) && (puVar11 < 0xe)) {\n                                            return 0;\n                                        }\n                                    }\n                                    else if ((0x2027 < puVar11) && (puVar11 < 0x202a)) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                    puVar13 = var_8h;\n                                } while (var_ch <= var_14h);\n                            }\n                            break;\n                        case 0x15:\n                            var_ch = 0x1;\n                            if (0 < var_14h) {\n                                do {\n                                    if (arg_10h[0x1f] <= puVar13) goto code_r0x0048a760;\n                                    puVar11 = *puVar13;\n                                    var_8h = puVar13 + 2;\n                                    var_10h = puVar11;\n                                    if ((puVar11 & 0xfc00) == 0xd800) {\n                                        var_10h = (puVar11 & 0x3ff) << 10;\n                                        puVar11 = (*var_8h & 0x3ff | var_10h) + 0x10000;\n                                        var_8h = puVar13 + 1;\n                                    }\n                                    if (puVar11 < 0x86) {\n                                        if ((puVar11 != 0x85) && (3 < puVar11 - 10U)) {\n                                            return 0;\n                                        }\n                                    }\n                                    else if (0x1 < puVar11 + -0x80a) {\n                                        return 0;\n                                    }\n                                    var_ch = var_ch + 1;\n                                    puVar13 = var_8h;\n                                } while (var_ch <= var_14h);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 0xbad1abe1:\n                goto code_r0x0048a31b;\n            }\n        }\n        puVar13 = var_8h;\n        puVar11 = var_8h;\n        if (var_14h == var_1ch) goto code_r0x004094c0;\n        if (var_2ch == NULL) {\n            puVar14 = var_38h;\n            var_2ch = puVar13;\n            if (-1 < var_30h) {\n                if (0xa < var_30h) {\n                    return 0xfffffff2;\n                }\n    // switch table (11 cases) at 0x48c39b\n                switch(*(var_30h * 4 + 0x48c39b)) {\n                case 0x48856b:\n                    for (; var_14h < var_1ch; var_14h = var_14h + 1) {\n                        var_ch = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x004885d6;\n                        if ((uVar12 != 0) && (var_30h = 0xd800,  (*var_8h & 0xfc00) == 0xd800)) {\n                            var_ch = 0x2;\n                        }\n                        if (var_3ch != NULL) break;\n                        var_8h = var_8h + var_ch * 2;\n                    }\n                    break;\n                case 0x48860d:\n                    for (; var_14h < var_1ch; var_14h = var_14h + 1) {\n                        var_30h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00488739;\n                        var_ch = *var_8h;\n                        if ((uVar12 != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                            var_ch = ((var_ch & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                            var_30h = 0x2;\n                        }\n                        cVar5 = *(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                                 0x4ab0d1);\n                        if (((cVar5 == '\\t') || (cVar5 == '\\x05')) || (cVar5 == '\\b')) {\n                            puVar11 = 0x1;\n                        }\n                        else {\n                            puVar11 = NULL;\n                        }\n                        if (puVar11 == var_3ch) break;\n                        var_8h = var_8h + var_30h * 2;\n                    }\n                    break;\n                case 0x488768:\n                    for (; var_14h < var_1ch; var_14h = var_14h + 1) {\n                        var_ch = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00488739;\n                        var_30h = *var_8h;\n                        if (uVar12 == 0) {\n                            puVar11 = *var_8h;\n                        }\n                        else {\n                            puVar11 = var_30h;\n                            if ((var_30h & 0xfc00) == 0xd800) {\n                                puVar11 = ((var_30h & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                                var_ch = 0x2;\n                            }\n                        }\n                        if ((*(*(*((*((puVar11 >> 7) + 0x4ac470) * 0x80 + (puVar11 & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                                0x4ab0d1) * 4 + 0x4b5ce8) == var_40h) == var_3ch) break;\n                        var_8h = var_8h + var_ch * 2;\n                        uVar12 = var_20h;\n                    }\n                    break;\n                case 0x48882b:\n                    for (; var_14h < var_1ch; var_14h = var_14h + 1) {\n                        var_ch = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00488739;\n                        var_30h = *var_8h;\n                        if (uVar12 == 0) {\n                            puVar11 = *var_8h;\n                        }\n                        else {\n                            puVar11 = var_30h;\n                            if ((var_30h & 0xfc00) == 0xd800) {\n                                puVar11 = ((var_30h & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                                var_ch = 0x2;\n                            }\n                        }\n                        if ((*(*((*((puVar11 >> 7) + 0x4ac470) * 0x80 + (puVar11 & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                              0x4ab0d1) == var_40h) == var_3ch) break;\n                        var_8h = var_8h + var_ch * 2;\n                        uVar12 = var_20h;\n                    }\n                    break;\n                case 0x4888eb:\n                    for (; var_14h < var_1ch; var_14h = var_14h + 1) {\n                        var_ch = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00488739;\n                        var_30h = *var_8h;\n                        if (uVar12 == 0) {\n                            puVar11 = *var_8h;\n                        }\n                        else {\n                            puVar11 = var_30h;\n                            if ((var_30h & 0xfc00) == 0xd800) {\n                                puVar11 = ((var_30h & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                                var_ch = 0x2;\n                            }\n                        }\n                        if ((*(*((*((puVar11 >> 7) + 0x4ac470) * 0x80 + (puVar11 & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                              0x4ab0d0) == var_40h) == var_3ch) break;\n                        var_8h = var_8h + var_ch * 2;\n                        uVar12 = var_20h;\n                    }\n                    break;\n                case 0x4889ab:\n                    for (; var_14h < var_1ch; var_14h = var_14h + 1) {\n                        var_30h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00488739;\n                        var_ch = *var_8h;\n                        if ((uVar12 != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                            var_ch = ((var_ch & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                            var_30h = 0x2;\n                        }\n                        iVar17 = *(*(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8\n                                    + 0x4ab0d1) * 4 + 0x4b5ce8);\n                        if ((iVar17 == 1) || (iVar17 == 3)) {\n                            puVar11 = 0x1;\n                        }\n                        else {\n                            puVar11 = NULL;\n                        }\n                        if (puVar11 == var_3ch) break;\n                        var_8h = var_8h + var_30h * 2;\n                    }\n                    break;\n                case 0x488a7b:\n                    for (; var_14h < var_1ch; var_14h = var_14h + 1) {\n                        var_30h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00488739;\n                        var_ch = *var_8h;\n                        if ((uVar12 != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                            var_ch = ((var_ch & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                            var_30h = 0x2;\n                        }\n                        if (((*(*(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                                 0x4ab0d1) * 4 + 0x4b5ce8) == 6) || (var_ch == 0x9)) ||\n                           ((var_ch == 0xa || ((var_ch == 0xc || (var_ch == 0xd)))))) {\n                            puVar11 = 0x1;\n                        }\n                        else {\n                            puVar11 = NULL;\n                        }\n                        if (puVar11 == var_3ch) break;\n                        var_8h = var_8h + var_30h * 2;\n                        uVar12 = var_20h;\n                    }\n                    break;\n                case 0x488b5c:\n                    for (; var_14h < var_1ch; var_14h = var_14h + 1) {\n                        var_30h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00488739;\n                        var_ch = *var_8h;\n                        if ((uVar12 != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                            var_ch = ((var_ch & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                            var_30h = 0x2;\n                        }\n                        if (((*(*(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                                 0x4ab0d1) * 4 + 0x4b5ce8) == 6) || (var_ch == 0x9)) ||\n                           ((var_ch == 0xa || (((var_ch == 0xb || (var_ch == 0xc)) || (var_ch == 0xd)))))) {\n                            puVar11 = 0x1;\n                        }\n                        else {\n                            puVar11 = NULL;\n                        }\n                        if (puVar11 == var_3ch) break;\n                        var_8h = var_8h + var_30h * 2;\n                        uVar12 = var_20h;\n                    }\n                    break;\n                case 0x488c42:\n                    for (; var_14h < var_1ch; var_14h = var_14h + 1) {\n                        var_30h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00488739;\n                        var_ch = *var_8h;\n                        if ((uVar12 != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                            var_ch = ((var_ch & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                            var_30h = 0x2;\n                        }\n                        iVar17 = *(*(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8\n                                    + 0x4ab0d1) * 4 + 0x4b5ce8);\n                        if (((iVar17 == 1) || (iVar17 == 3)) || (var_ch == 0x5f)) {\n                            puVar11 = 0x1;\n                        }\n                        else {\n                            puVar11 = NULL;\n                        }\n                        if (puVar11 == var_3ch) break;\n                        var_8h = var_8h + var_30h * 2;\n                        uVar12 = var_20h;\n                    }\n                    break;\n                case 0x488d1b:\n                    if (var_14h < var_1ch) {\n                        var_10h = arg_10h[0x1f];\n                        do {\n                            var_30h = 0x1;\n                            if (var_10h <= var_8h) goto code_r0x004885d6;\n                            var_18h = *var_8h;\n                            if ((uVar12 != 0) && ((var_18h & 0xfc00) == 0xd800)) {\n                                var_30h = 0x2;\n                                var_18h = (*(var_8h + 2) & 0x3ff | (var_18h & 0x3ff) << 10) + 0x10000;\n                            }\n                            var_28h = var_40h * 4 + 0x4ae670;\n                            var_ch = *var_28h;\n                            while ((var_ch <= var_18h && (var_28h = var_28h + 1,  var_18h != var_ch))) {\n                                var_ch = *var_28h;\n                            }\n                            if (var_3ch != NULL) break;\n                            var_14h = var_14h + 1;\n                            var_8h = var_8h + var_30h * 2;\n                            uVar12 = var_20h;\n                        } while (var_14h < var_1ch);\n                    }\n                    break;\n                case 0x488df3:\n                    if (var_14h < var_1ch) {\n                        var_28h = arg_10h[0x1f];\n                        do {\n                            var_30h = 0x1;\n                            if (var_28h <= var_8h) goto code_r0x004885d6;\n                            var_18h = *var_8h;\n                            if ((uVar12 != 0) && ((var_18h & 0xfc00) == 0xd800)) {\n                                var_30h = 0x2;\n                                var_18h = (*(var_8h + 2) & 0x3ff | (var_18h & 0x3ff) << 10) + 0x10000;\n                            }\n                            if (((((var_18h == 0x24) || (var_18h == 0x40)) || (var_18h == 0x60)) ||\n                                ((0x9f < var_18h && (var_18h < 0xd800)))) || (var_ch = NULL,  0xdfff < var_18h)) {\n                                var_ch = 0x1;\n                            }\n                            if (var_ch == var_3ch) break;\n                            var_14h = var_14h + 1;\n                            var_8h = var_8h + var_30h * 2;\n                        } while (var_14h < var_1ch);\n                    }\n                }\n                goto code_r0x004886d5;\n            }\n            if (var_34h == 0x16) {\n                for (; var_14h < var_1ch; var_14h = var_14h + 1) {\n                    var_30h = arg_10h[0x1f];\n                    if (var_30h <= var_8h) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    var_ch = *var_8h;\n                    puVar11 = var_8h + 2;\n                    if ((uVar12 != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                        var_ch = ((var_ch & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                        puVar11 = var_8h + 1;\n                    }\n                    var_8h = puVar11;\n                    puVar18 = *(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                               0x4ab0d2);\n                    puVar11 = arg_10h[0x1f];\n                    var_ch = puVar18;\n                    if (var_8h < arg_10h[0x1f]) {\n                        do {\n                            uVar12 = *var_8h;\n                            var_ch = 0x1;\n                            if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n                                uVar12 = ((uVar12 & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                                var_ch = 0x2;\n                            }\n                            uVar6 = *(*((*((uVar12 >> 7) + 0x4ac470) * 0x80 + (uVar12 & 0x8000007f)) * 2 + 0x49e5d0) * 8\n                                     + 0x4ab0d2);\n                            puVar11 = var_30h;\n                            uVar12 = var_20h;\n                            in_EDX = var_38h;\n                        } while (((*(puVar18 * 4 + 0x49e454) & 1 << (uVar6 & 0x1f)) != 0) &&\n                                (var_8h = var_8h + var_ch * 2,  puVar18 = uVar6,  var_8h < var_30h));\n                    }\n                    if ((arg_10h[0x23] != 0) &&\n                       (((puVar11 <= var_8h && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                        (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                        return 0xfffffff4;\n                    }\n                }\n                puVar11 = var_8h;\n                if (var_24h == 0) {\n                    if (var_8h != puVar13) {\n                        do {\n                            puVar11 = var_8h;\n                            puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            if (puVar14 != NULL) {\n                                return puVar14;\n                            }\n                            do {\n                                var_8h = puVar11 + -2;\n                                if (var_20h == 0) {\n                                    uVar12 = *var_8h;\n                                }\n                                else {\n                                    if ((*var_8h & 0xfc00) == 0xdc00) {\n                                        var_8h = puVar11 + -1;\n                                    }\n                                    uVar12 = *var_8h;\n                                    if ((uVar12 & 0xfc00) == 0xd800) {\n                                        uVar12 = ((uVar12 & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                                    }\n                                }\n                                puVar11 = var_8h;\n                            } while (*(*(*((*((uVar12 >> 7) + 0x4ac470) * 0x80 + (uVar12 & 0x8000007f)) * 2 + 0x49e5d0)\n                                         * 8 + 0x4ab0d1) * 4 + 0x4b5ce8) == 2);\n                            puVar14 = var_38h;\n                        } while (var_8h != var_2ch);\n                    }\n                    goto code_r0x0040952e;\n                }\n                goto code_r0x004094c0;\n            }\n            uVar15 = var_34h - 6;\n            if (uVar12 == 0) {\n                if (0xf < uVar15) {\n                    return 0xfffffff2;\n                }\n    // switch table (16 cases) at 0x48c407\n                switch(*(uVar15 * 4 + 0x48c407)) {\n                case 0x489a0c:\n                    if (var_14h < var_1ch) {\n                        while (puVar13 = var_8h,  puVar11 = arg_10h[0x1f],  var_8h < puVar11) {\n                            if (arg_10h[6] == 0) {\n                                if (((var_8h <= puVar11 + arg_10h[7] * -2) && (*var_8h == *(arg_10h + 0xd))) &&\n                                   ((arg_10h[7] == 1 || (*(var_8h + 2) == *(arg_10h + 0x36))))) goto code_r0x00489aba;\n                            }\n                            else {\n                                iVar17 = fcn.004080a0(puVar11, arg_10h + 7, 0);\n                                if (iVar17 != 0) goto code_r0x00489aba;\n                            }\n                            if (((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= puVar13 + 2U)) && (arg_10h[6] == 0)) &&\n                                ((arg_10h[7] == 2 && (*puVar13 == *(arg_10h + 0xd))))) &&\n                               (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                                return 0xfffffff4;\n                            }\n                            var_14h = var_14h + 1;\n                            puVar13 = puVar13 + 2;\n                            var_8h = puVar13;\n                            if (var_1ch <= var_14h) goto code_r0x00489aba;\n                        }\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                    }\n                    break;\n                case 0x489b4c:\n                    var_1ch = var_1ch - var_14h;\n                    puVar13 = arg_10h[0x1f];\n                    if (arg_10h[0x1f] - var_8h >> 1 < var_1ch) {\ncode_r0x00489b68:\n                        var_8h = puVar13;\n                        puVar13 = var_8h;\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                    }\n                    else {\n                        puVar13 = var_8h + var_1ch * 2;\n                        var_8h = puVar13;\n                    }\n                    break;\n                case 0x489bad:\n                    if (var_14h < var_1ch) {\n                        puVar11 = arg_10h[0x1f];\n                        puVar14 = var_14h;\n                        do {\n                            puVar13 = var_8h;\n                            if (puVar11 <= var_8h) goto code_r0x00489b68;\n                            iVar9 = *var_8h;\n                            if (iVar9 == 0xd) {\n                                puVar11 = arg_10h[0x1f];\n                                puVar13 = var_8h + 2;\n                                var_8h = puVar13;\n                                if (puVar11 <= puVar13) break;\n                                if (*puVar13 == 10) goto code_r0x00489c19;\n                            }\n                            else {\n                                if ((iVar9 != 10) &&\n                                   ((arg_10h[0x1b] != 0 ||\n                                    ((((iVar9 != 0xb && (iVar9 != 0xc)) && (iVar9 != 0x85)) &&\n                                     ((iVar9 != 0x2028 && (iVar9 != 0x2029)))))))) break;\n                                puVar11 = arg_10h[0x1f];\ncode_r0x00489c19:\n                                puVar13 = var_8h + 2;\n                            }\n                            puVar14 = puVar14 + 1;\n                            var_8h = puVar13;\n                        } while (puVar14 < var_1ch);\n                    }\n                    break;\n                case 0x489c2a:\n                    for (puVar11 = var_14h; var_8h = puVar13,  puVar11 < var_1ch; puVar11 = puVar11 + 1) {\n                        if (arg_10h[0x1f] <= puVar13) goto code_r0x00489b68;\n                        uVar8 = *puVar13;\n                        if (uVar8 < 0x180f) {\n                            if (uVar8 == 0x180e) break;\n                            if (uVar8 < 0xa1) {\n                                if (((uVar8 == 0xa0) || (uVar8 == 9)) || (uVar8 == 0x20)) break;\n                            }\n                            else if (uVar8 == 0x1680) break;\n                        }\n                        else if (uVar8 < 0x2060) {\n                            if ((uVar8 == 0x205f) || ((0x1fff < uVar8 && ((uVar8 < 0x200b || (uVar8 == 0x202f))))))\n                            break;\n                        }\n                        else if (uVar8 == 0x3000) break;\n                        puVar13 = puVar13 + 2;\n                    }\n                    break;\n                case 0x489cce:\n                    for (puVar11 = var_14h; var_8h = puVar13,  puVar11 < var_1ch; puVar11 = puVar11 + 1) {\n                        if (arg_10h[0x1f] <= puVar13) goto code_r0x00489b68;\n                        uVar8 = *puVar13;\n                        if (uVar8 < 0x180f) {\n                            if (uVar8 != 0x180e) {\n                                if (uVar8 < 0xa1) {\n                                    if (((uVar8 != 0xa0) && (uVar8 != 9)) && (uVar8 != 0x20)) break;\n                                }\n                                else if (uVar8 != 0x1680) break;\n                            }\n                        }\n                        else if (uVar8 < 0x2060) {\n                            if ((uVar8 != 0x205f) && ((uVar8 < 0x2000 || ((0x200a < uVar8 && (uVar8 != 0x202f))))))\n                            break;\n                        }\n                        else if (uVar8 != 0x3000) break;\n                        puVar13 = puVar13 + 2;\n                    }\n                    break;\n                case 0x489d5e:\n                    for (puVar11 = var_14h; var_8h = puVar13,  puVar11 < var_1ch; puVar11 = puVar11 + 1) {\n                        if (arg_10h[0x1f] <= puVar13) goto code_r0x00489b68;\n                        uVar8 = *puVar13;\n                        if (uVar8 < 0x86) {\n                            if ((uVar8 == 0x85) || ((9 < uVar8 && (uVar8 < 0xe)))) break;\n                        }\n                        else if ((0x2027 < uVar8) && (uVar8 < 0x202a)) break;\n                        puVar13 = puVar13 + 2;\n                    }\n                    break;\n                case 0x489db8:\n                    for (puVar11 = var_14h; var_8h = puVar13,  puVar11 < var_1ch; puVar11 = puVar11 + 1) {\n                        if (arg_10h[0x1f] <= puVar13) goto code_r0x00489b68;\n                        uVar12 = *puVar13;\n                        if (uVar12 < 0x86) {\n                            if ((uVar12 != 0x85) && (3 < uVar12 - 10)) break;\n                        }\n                        else if (1 < uVar12 - 0x2028) break;\n                        puVar13 = puVar13 + 2;\n                    }\n                    break;\n                case 0x489e05:\n                    for (; var_8h = puVar13,  var_14h < var_1ch; var_14h = var_14h + 1) {\n                        if (arg_10h[0x1f] <= puVar13) goto code_r0x00489b68;\n                        var_ch = 0xff;\n                        if ((*puVar13 < 0x100) && ((*(*puVar13 + arg_10h[0x11]) & 4) != 0)) break;\n                        puVar13 = puVar13 + 2;\n                    }\n                    break;\n                case 0x489e4e:\n                    for (; var_8h = puVar13,  var_14h < var_1ch; var_14h = var_14h + 1) {\n                        if (arg_10h[0x1f] <= puVar13) goto code_r0x00489b68;\n                        if ((0xff < *puVar13) || ((*(*puVar13 + arg_10h[0x11]) & 4) == 0)) break;\n                        puVar13 = puVar13 + 2;\n                    }\n                    break;\n                case 0x489e9a:\n                    for (; var_8h = puVar13,  var_14h < var_1ch; var_14h = var_14h + 1) {\n                        if (arg_10h[0x1f] <= puVar13) goto code_r0x00489b68;\n                        var_ch = 0xff;\n                        if ((*puVar13 < 0x100) && ((*(*puVar13 + arg_10h[0x11]) & 1) != 0)) break;\n                        puVar13 = puVar13 + 2;\n                    }\n                    break;\n                case 0x489ee3:\n                    for (; var_8h = puVar13,  var_14h < var_1ch; var_14h = var_14h + 1) {\n                        if (arg_10h[0x1f] <= puVar13) goto code_r0x00489b68;\n                        if ((0xff < *puVar13) || ((*(*puVar13 + arg_10h[0x11]) & 1) == 0)) break;\n                        puVar13 = puVar13 + 2;\n                    }\n                    break;\n                case 0x489f2f:\n                    for (; var_8h = puVar13,  var_14h < var_1ch; var_14h = var_14h + 1) {\n                        if (arg_10h[0x1f] <= puVar13) goto code_r0x00489b68;\n                        var_ch = 0xff;\n                        if ((*puVar13 < 0x100) && ((*(*puVar13 + arg_10h[0x11]) & 0x10) != 0)) break;\n                        puVar13 = puVar13 + 2;\n                    }\n                    break;\n                case 0x489f78:\n                    for (; var_8h = puVar13,  var_14h < var_1ch; var_14h = var_14h + 1) {\n                        if (arg_10h[0x1f] <= puVar13) goto code_r0x00489b68;\n                        if ((0xff < *puVar13) || ((*(*puVar13 + arg_10h[0x11]) & 0x10) == 0)) break;\n                        puVar13 = puVar13 + 2;\n                    }\n                    break;\n                case 0x48a31b:\n                    goto code_r0x0048a31b;\n                }\ncode_r0x00489aba:\n                puVar11 = var_8h;\n                if (var_24h == 0) {\n                    puVar14 = var_38h;\n                    if (puVar13 != var_2ch) {\n                        do {\n                            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            if (puVar11 != NULL) {\n                                return puVar11;\n                            }\n                            var_8h = puVar13 + -2;\n                            if (((var_34h == 0x11) && (var_2ch < var_8h)) &&\n                               ((*var_8h == 10 && (*(puVar13 + -1) == 0xd)))) {\n                                var_8h = puVar13 + -1;\n                            }\n                            puVar13 = var_8h;\n                            puVar14 = var_38h;\n                        } while (var_8h != var_2ch);\n                    }\n                    goto code_r0x0040952e;\n                }\n                goto code_r0x004094c0;\n            }\n            if (0xf < uVar15) {\n                return 0xfffffff2;\n            }\n    // switch table (16 cases) at 0x48c3c7\n            switch(*(uVar15 * 4 + 0x48c3c7)) {\n            case 0x4890e8:\n                if (var_1ch < 0x7fffffff) {\n                    if (var_14h < var_1ch) {\n                        var_10h = var_8h + 2;\n                        do {\n                            puVar13 = var_8h;\n                            puVar11 = arg_10h[0x1f];\n                            if (puVar11 <= var_8h) goto code_r0x00489277;\n                            if (arg_10h[6] == 0) {\n                                if (((var_8h <= puVar11 + arg_10h[7] * -2) && (*var_8h == *(arg_10h + 0xd))) &&\n                                   ((puVar11 = var_8h,  arg_10h[7] == 1 || (*var_10h == *(arg_10h + 0x36))))) break;\n                            }\n                            else {\n                                iVar17 = fcn.004080a0(puVar11, arg_10h + 7, uVar12);\n                                uVar12 = var_20h;\n                                puVar11 = var_8h;\n                                if (iVar17 != 0) break;\n                            }\n                            if (((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= var_10h)) &&\n                               ((arg_10h[6] == 0 &&\n                                (((arg_10h[7] == 2 && (*puVar13 == *(arg_10h + 0xd))) &&\n                                 (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))))) {\n                                return 0xfffffff4;\n                            }\n                            var_8h = puVar13 + 2;\n                            puVar11 = var_10h + 2;\n                            if ((var_8h < arg_10h[0x1f]) && (var_ch = 0xdc00,  (*var_8h & 0xfc00) == 0xdc00)) {\n                                var_8h = puVar13 + 1;\n                                puVar11 = var_10h + 1;\n                            }\n                            var_10h = puVar11;\n                            var_14h = var_14h + 1;\n                            puVar13 = var_8h;\n                            puVar11 = var_8h;\n                        } while (var_14h < var_1ch);\n                    }\n                }\n                else if (var_14h < var_1ch) {\n                    var_10h = var_8h + 2;\n                    do {\n                        puVar13 = var_8h;\n                        puVar11 = arg_10h[0x1f];\n                        if (puVar11 <= var_8h) goto code_r0x00489277;\n                        if (arg_10h[6] == 0) {\n                            if (((var_8h <= puVar11 + arg_10h[7] * -2) && (*var_8h == *(arg_10h + 0xd))) &&\n                               ((puVar11 = var_8h,  arg_10h[7] == 1 || (*var_10h == *(arg_10h + 0x36))))) break;\n                        }\n                        else {\n                            iVar17 = fcn.004080a0(puVar11, arg_10h + 7, uVar12);\n                            uVar12 = var_20h;\n                            puVar11 = var_8h;\n                            if (iVar17 != 0) break;\n                        }\n                        if (((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= var_10h)) && (arg_10h[6] == 0)) &&\n                            ((arg_10h[7] == 2 && (*puVar13 == *(arg_10h + 0xd))))) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        var_8h = puVar13 + 2;\n                        puVar11 = var_10h + 2;\n                        if ((var_8h < arg_10h[0x1f]) && (var_ch = 0xdc00,  (*var_8h & 0xfc00) == 0xdc00)) {\n                            var_8h = puVar13 + 1;\n                            puVar11 = var_10h + 1;\n                        }\n                        var_10h = puVar11;\n                        var_14h = var_14h + 1;\n                        puVar13 = var_8h;\n                        puVar11 = var_8h;\n                    } while (var_14h < var_1ch);\n                }\n                break;\n            case 0x4893ae:\n                if (var_1ch < 0x7fffffff) {\n                    if (var_14h < var_1ch) {\n                        puVar14 = arg_10h[0x1f];\n                        puVar18 = var_14h;\n                        do {\n                            puVar11 = var_8h;\n                            if (puVar14 <= var_8h) goto code_r0x0048940d;\n                            puVar11 = var_8h + 2;\n                            if (puVar11 < puVar14) {\n                                var_ch = 0xdc00;\n                                puVar14 = arg_10h[0x1f];\n                                if ((*puVar11 & 0xfc00) == 0xdc00) {\n                                    puVar11 = var_8h + 1;\n                                }\n                            }\n                            var_8h = puVar11;\n                            puVar18 = puVar18 + 1;\n                            puVar13 = var_8h;\n                            puVar11 = var_8h;\n                        } while (puVar18 < var_1ch);\n                    }\n                }\n                else {\n                    puVar11 = arg_10h[0x1f];\ncode_r0x0048940d:\n                    var_8h = puVar11;\n                    puVar13 = var_8h;\n                    puVar11 = var_8h;\n                    if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                       (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                        return 0xfffffff4;\n                    }\n                }\n                break;\n            case 0x489444:\n                var_1ch = var_1ch - var_14h;\n                puVar11 = arg_10h[0x1f];\n                if (arg_10h[0x1f] - var_8h >> 1 < var_1ch) goto code_r0x0048940d;\n                puVar13 = var_8h + var_1ch * 2;\n                puVar11 = puVar13;\n                break;\n            case 0x489469:\n                if (var_14h < var_1ch) {\n                    puVar14 = arg_10h[0x1f];\n                    puVar18 = var_14h;\n                    do {\n                        var_ch = 0x1;\n                        puVar11 = var_8h;\n                        if (puVar14 <= var_8h) goto code_r0x0048940d;\n                        puVar14 = *var_8h;\n                        var_10h = puVar14;\n                        if ((puVar14 & 0xfc00) == 0xd800) {\n                            var_10h = (puVar14 & 0x3ff) << 10;\n                            var_ch = 0x2;\n                            puVar14 = (*(var_8h + 2) & 0x3ff | var_10h) + 0x10000;\n                        }\n                        if (puVar14 == 0xd) {\n                            puVar14 = arg_10h[0x1f];\n                            puVar13 = var_8h + 2;\n                            puVar11 = puVar13;\n                            if (puVar14 <= puVar13) break;\n                            if (*puVar13 == 10) {\n                                puVar13 = var_8h + 1;\n                            }\n                        }\n                        else {\n                            if ((puVar14 != 0xa) &&\n                               ((puVar13 = var_8h,  arg_10h[0x1b] != 0 ||\n                                (((puVar14 != 0xb && (puVar14 != 0xc)) &&\n                                 ((puVar14 != 0x85 && ((puVar14 != 0x2028 && (puVar14 != 0x2029)))))))))) break;\n                            puVar13 = var_8h + var_ch * 2;\n                            puVar14 = arg_10h[0x1f];\n                        }\n                        puVar18 = puVar18 + 1;\n                        puVar11 = puVar13;\n                        var_8h = puVar13;\n                    } while (puVar18 < var_1ch);\n                }\n                break;\n            case 0x48952b:\n                for (puVar14 = var_14h; puVar13 = var_8h,  puVar11 = var_8h,  puVar14 < var_1ch; puVar14 = puVar14 + 1)\n                {\n                    var_30h = 0x1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048940d;\n                    puVar18 = *var_8h;\n                    var_10h = puVar18;\n                    if ((puVar18 & 0xfc00) == 0xd800) {\n                        var_10h = (puVar18 & 0x3ff) << 10;\n                        var_30h = 0x2;\n                        puVar18 = (*(var_8h + 2) & 0x3ff | var_10h) + 0x10000;\n                    }\n                    if (puVar18 < 0x180f) {\n                        if (puVar18 == 0x180e) goto code_r0x0048959d;\n                        if (puVar18 < 0xa1) {\n                            if (((puVar18 == 0xa0) || (puVar18 == 0x9)) || (puVar18 == 0x20)) goto code_r0x0048959d;\n                        }\n                        else if (puVar18 == 0x1680) goto code_r0x0048959d;\ncode_r0x004895fe:\n                        var_ch = NULL;\n                    }\n                    else {\n                        if (0x205f < puVar18) {\n                            if (puVar18 == 0x3000) goto code_r0x0048959d;\n                            goto code_r0x004895fe;\n                        }\n                        if ((puVar18 != 0x205f) && ((puVar18 < 0x2000 || ((0x200a < puVar18 && (puVar18 != 0x202f))))))\n                        goto code_r0x004895fe;\ncode_r0x0048959d:\n                        var_ch = 0x1;\n                    }\n                    if (var_ch == (var_34h == 0x12)) break;\n                    var_8h = var_8h + var_30h * 2;\n                }\n                break;\n            case 0x489607:\n                for (puVar14 = var_14h; puVar13 = var_8h,  puVar11 = var_8h,  puVar14 < var_1ch; puVar14 = puVar14 + 1)\n                {\n                    var_30h = 0x1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048940d;\n                    puVar18 = *var_8h;\n                    var_10h = puVar18;\n                    if ((puVar18 & 0xfc00) == 0xd800) {\n                        var_10h = (puVar18 & 0x3ff) << 10;\n                        var_30h = 0x2;\n                        puVar18 = (*(var_8h + 2) & 0x3ff | var_10h) + 0x10000;\n                    }\n                    if (puVar18 < 0x86) {\n                        if ((puVar18 != 0x85) && ((puVar18 < 0xa || (0xd < puVar18)))) goto code_r0x00489670;\ncode_r0x004896ab:\n                        var_ch = 0x1;\n                    }\n                    else {\n                        if (puVar18 + -0x80a < 0x2) goto code_r0x004896ab;\ncode_r0x00489670:\n                        var_ch = NULL;\n                    }\n                    if (var_ch == (var_34h == 0x14)) break;\n                    var_8h = var_8h + var_30h * 2;\n                }\n                break;\n            case 0x4896b4:\n                for (puVar14 = var_14h; puVar13 = var_8h,  puVar11 = var_8h,  puVar14 < var_1ch; puVar14 = puVar14 + 1)\n                {\n                    var_ch = 0x1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048940d;\n                    var_28h = *var_8h;\n                    if ((var_28h & 0xfc00) == 0xd800) {\n                        puVar18 = (*(var_8h + 2) & 0x3ff | (var_28h & 0x3ff) << 10) + 0x10000;\n                        var_ch = 0x2;\n                        var_28h = puVar18;\n                    }\n                    else {\n                        puVar18 = *var_8h;\n                    }\n                    if ((puVar18 < 0x100) && ((*(var_28h + arg_10h[0x11]) & 4) != 0)) break;\n                    var_8h = var_8h + var_ch * 2;\n                }\n                break;\n            case 0x48973e:\n                for (puVar14 = var_14h; puVar13 = var_8h,  puVar11 = var_8h,  puVar14 < var_1ch; puVar14 = puVar14 + 1)\n                {\n                    var_ch = 0x1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048940d;\n                    var_28h = *var_8h;\n                    if ((var_28h & 0xfc00) == 0xd800) {\n                        puVar18 = (*(var_8h + 2) & 0x3ff | (var_28h & 0x3ff) << 10) + 0x10000;\n                        var_ch = 0x2;\n                        var_28h = puVar18;\n                    }\n                    else {\n                        puVar18 = *var_8h;\n                    }\n                    if ((0xff < puVar18) || ((*(var_28h + arg_10h[0x11]) & 4) == 0)) break;\n                    var_8h = var_8h + var_ch * 2;\n                }\n                break;\n            case 0x4897cc:\n                for (puVar14 = var_14h; puVar13 = var_8h,  puVar11 = var_8h,  puVar14 < var_1ch; puVar14 = puVar14 + 1)\n                {\n                    var_ch = 0x1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048940d;\n                    var_28h = *var_8h;\n                    if ((var_28h & 0xfc00) == 0xd800) {\n                        puVar18 = (*(var_8h + 2) & 0x3ff | (var_28h & 0x3ff) << 10) + 0x10000;\n                        var_ch = 0x2;\n                        var_28h = puVar18;\n                    }\n                    else {\n                        puVar18 = *var_8h;\n                    }\n                    if ((puVar18 < 0x100) && ((*(var_28h + arg_10h[0x11]) & 1) != 0)) break;\n                    var_8h = var_8h + var_ch * 2;\n                }\n                break;\n            case 0x489856:\n                for (puVar14 = var_14h; puVar13 = var_8h,  puVar11 = var_8h,  puVar14 < var_1ch; puVar14 = puVar14 + 1)\n                {\n                    var_ch = 0x1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048940d;\n                    var_28h = *var_8h;\n                    if ((var_28h & 0xfc00) == 0xd800) {\n                        puVar18 = (*(var_8h + 2) & 0x3ff | (var_28h & 0x3ff) << 10) + 0x10000;\n                        var_ch = 0x2;\n                        var_28h = puVar18;\n                    }\n                    else {\n                        puVar18 = *var_8h;\n                    }\n                    if ((0xff < puVar18) || ((*(var_28h + arg_10h[0x11]) & 1) == 0)) break;\n                    var_8h = var_8h + var_ch * 2;\n                }\n                break;\n            case 0x4898e4:\n                for (puVar14 = var_14h; puVar13 = var_8h,  puVar11 = var_8h,  puVar14 < var_1ch; puVar14 = puVar14 + 1)\n                {\n                    var_ch = 0x1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048940d;\n                    var_28h = *var_8h;\n                    if ((var_28h & 0xfc00) == 0xd800) {\n                        puVar18 = (*(var_8h + 2) & 0x3ff | (var_28h & 0x3ff) << 10) + 0x10000;\n                        var_ch = 0x2;\n                        var_28h = puVar18;\n                    }\n                    else {\n                        puVar18 = *var_8h;\n                    }\n                    if ((puVar18 < 0x100) && ((*(var_28h + arg_10h[0x11]) & 0x10) != 0)) break;\n                    var_8h = var_8h + var_ch * 2;\n                }\n                break;\n            case 0x48996e:\n                for (puVar14 = var_14h; puVar13 = var_8h,  puVar11 = var_8h,  puVar14 < var_1ch; puVar14 = puVar14 + 1)\n                {\n                    var_ch = 0x1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0048940d;\n                    var_28h = *var_8h;\n                    if ((var_28h & 0xfc00) == 0xd800) {\n                        puVar18 = (*(var_8h + 2) & 0x3ff | (var_28h & 0x3ff) << 10) + 0x10000;\n                        var_ch = 0x2;\n                        var_28h = puVar18;\n                    }\n                    else {\n                        puVar18 = *var_8h;\n                    }\n                    if ((0xff < puVar18) || ((*(var_28h + arg_10h[0x11]) & 0x10) == 0)) break;\n                    var_8h = var_8h + var_ch * 2;\n                }\n                break;\n            case 0x48a31b:\n                goto code_r0x0048a31b;\n            }\n            goto code_r0x004891bd;\n        }\n        if (-1 < var_30h) {\n            if (0xa < var_30h) {\n                return 0xfffffff2;\n            }\n    // switch table (11 cases) at 0x48c447\n            switch(*(var_30h * 4 + 0x48c447)) {\n            case 0x48acaf:\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    if (var_1ch <= var_14h) {\n                        return 0;\n                    }\n                    if (arg_10h[0x1f] <= puVar13) break;\n                    puVar14 = puVar13 + 2;\n                    if ((var_20h != 0) && ((*puVar13 & 0xfc00) == 0xd800)) {\n                        puVar14 = puVar13 + 1;\n                    }\n                    if (var_3ch != NULL) {\n                        return 0;\n                    }\n                    var_14h = var_14h + 1;\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = puVar14;\n                }\n                break;\n            case 0x48ad36:\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    if (var_1ch <= var_14h) {\n                        return 0;\n                    }\n                    if (arg_10h[0x1f] <= puVar13) break;\n                    var_ch = *puVar13;\n                    puVar14 = puVar13 + 2;\n                    if ((var_20h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                        var_ch = ((var_ch & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                        puVar14 = puVar13 + 1;\n                    }\n                    cVar5 = *(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                             0x4ab0d1);\n                    if (((cVar5 == '\\t') || (cVar5 == '\\x05')) || (cVar5 == '\\b')) {\n                        puVar11 = 0x1;\n                    }\n                    else {\n                        puVar11 = NULL;\n                    }\n                    if (puVar11 == var_3ch) {\n                        return 0;\n                    }\n                    var_14h = var_14h + 1;\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = puVar14;\n                }\n                break;\n            case 0x48ae2e:\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    if (var_1ch <= var_14h) {\n                        return 0;\n                    }\n                    if (arg_10h[0x1f] <= puVar13) break;\n                    uVar12 = *puVar13;\n                    puVar14 = puVar13 + 2;\n                    if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n                        uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                        puVar14 = puVar13 + 1;\n                    }\n                    if ((*(*(*((*((uVar12 >> 7) + 0x4ac470) * 0x80 + (uVar12 & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                            0x4ab0d1) * 4 + 0x4b5ce8) == var_40h) == var_3ch) {\n                        return 0;\n                    }\n                    var_14h = var_14h + 1;\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = puVar14;\n                }\n                break;\n            case 0x48af13:\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    if (var_1ch <= var_14h) {\n                        return 0;\n                    }\n                    if (arg_10h[0x1f] <= puVar13) break;\n                    uVar12 = *puVar13;\n                    puVar14 = puVar13 + 2;\n                    if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n                        uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                        puVar14 = puVar13 + 1;\n                    }\n                    if ((*(*((*((uVar12 >> 7) + 0x4ac470) * 0x80 + (uVar12 & 0x8000007f)) * 2 + 0x49e5d0) * 8 + 0x4ab0d1\n                          ) == var_40h) == var_3ch) {\n                        return 0;\n                    }\n                    var_14h = var_14h + 1;\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = puVar14;\n                }\n                break;\n            case 0x48aff1:\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    if (var_1ch <= var_14h) {\n                        return 0;\n                    }\n                    if (arg_10h[0x1f] <= puVar13) break;\n                    uVar12 = *puVar13;\n                    puVar14 = puVar13 + 2;\n                    if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n                        uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                        puVar14 = puVar13 + 1;\n                    }\n                    if ((*(*((*((uVar12 >> 7) + 0x4ac470) * 0x80 + (uVar12 & 0x8000007f)) * 2 + 0x49e5d0) * 8 + 0x4ab0d0\n                          ) == var_40h) == var_3ch) {\n                        return 0;\n                    }\n                    var_14h = var_14h + 1;\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = puVar14;\n                }\n                break;\n            case 0x48b0cf:\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    if (var_1ch <= var_14h) {\n                        return 0;\n                    }\n                    if (arg_10h[0x1f] <= puVar13) break;\n                    var_ch = *puVar13;\n                    puVar14 = puVar13 + 2;\n                    if ((var_20h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                        var_ch = ((var_ch & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                        puVar14 = puVar13 + 1;\n                    }\n                    iVar17 = *(*(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                                0x4ab0d1) * 4 + 0x4b5ce8);\n                    if ((iVar17 == 1) || (iVar17 == 3)) {\n                        puVar11 = 0x1;\n                    }\n                    else {\n                        puVar11 = NULL;\n                    }\n                    if (puVar11 == var_3ch) {\n                        return 0;\n                    }\n                    var_14h = var_14h + 1;\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = puVar14;\n                }\n                break;\n            case 0x48b1c9:\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    if (var_1ch <= var_14h) {\n                        return 0;\n                    }\n                    if (arg_10h[0x1f] <= puVar13) break;\n                    var_ch = *puVar13;\n                    puVar14 = puVar13 + 2;\n                    if ((var_20h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                        var_ch = ((var_ch & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                        puVar14 = puVar13 + 1;\n                    }\n                    if (((*(*(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                             0x4ab0d1) * 4 + 0x4b5ce8) == 6) || (var_ch == 0x9)) ||\n                       ((var_ch == 0xa || ((var_ch == 0xc || (var_ch == 0xd)))))) {\n                        puVar11 = 0x1;\n                    }\n                    else {\n                        puVar11 = NULL;\n                    }\n                    if (puVar11 == var_3ch) {\n                        return 0;\n                    }\n                    var_14h = var_14h + 1;\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = puVar14;\n                }\n                break;\n            case 0x48b2d0:\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    if (var_1ch <= var_14h) {\n                        return 0;\n                    }\n                    if (arg_10h[0x1f] <= puVar13) break;\n                    var_ch = *puVar13;\n                    puVar14 = puVar13 + 2;\n                    if ((var_20h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                        var_ch = ((var_ch & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                        puVar14 = puVar13 + 1;\n                    }\n                    if (((*(*(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                             0x4ab0d1) * 4 + 0x4b5ce8) == 6) || (var_ch == 0x9)) ||\n                       ((var_ch == 0xa || (((var_ch == 0xb || (var_ch == 0xc)) || (var_ch == 0xd)))))) {\n                        puVar11 = 0x1;\n                    }\n                    else {\n                        puVar11 = NULL;\n                    }\n                    if (puVar11 == var_3ch) {\n                        return 0;\n                    }\n                    var_14h = var_14h + 1;\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = puVar14;\n                }\n                break;\n            case 0x48b3dc:\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    if (var_1ch <= var_14h) {\n                        return 0;\n                    }\n                    if (arg_10h[0x1f] <= puVar13) break;\n                    var_ch = *puVar13;\n                    puVar14 = puVar13 + 2;\n                    if ((var_20h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                        var_ch = ((var_ch & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                        puVar14 = puVar13 + 1;\n                    }\n                    iVar17 = *(*(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                                0x4ab0d1) * 4 + 0x4b5ce8);\n                    if (((iVar17 == 1) || (iVar17 == 3)) || (var_ch == 0x5f)) {\n                        puVar11 = 0x1;\n                    }\n                    else {\n                        puVar11 = NULL;\n                    }\n                    if (puVar11 == var_3ch) {\n                        return 0;\n                    }\n                    var_14h = var_14h + 1;\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = puVar14;\n                }\n                break;\n            case 0x48b4db:\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    if (var_1ch <= var_14h) {\n                        return 0;\n                    }\n                    if (arg_10h[0x1f] <= puVar13) break;\n                    uVar12 = *puVar13;\n                    puVar14 = puVar13 + 2;\n                    if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n                        uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                        puVar14 = puVar13 + 1;\n                    }\n                    puVar4 = var_40h * 4 + 0x4ae670;\n                    var_ch = *(var_40h * 4 + 0x4ae670);\n                    while ((var_ch <= uVar12 && (puVar4 = puVar4 + 1,  uVar12 != var_ch))) {\n                        var_ch = *puVar4;\n                    }\n                    if (var_3ch != NULL) {\n                        return 0;\n                    }\n                    var_14h = var_14h + 1;\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = puVar14;\n                }\n                break;\n            case 0x48b5c0:\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    if (var_1ch <= var_14h) {\n                        return 0;\n                    }\n                    if (arg_10h[0x1f] <= puVar13) break;\n                    uVar12 = *puVar13;\n                    puVar14 = puVar13 + 2;\n                    if ((var_20h != 0) && ((uVar12 & 0xfc00) == 0xd800)) {\n                        uVar12 = ((uVar12 & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                        puVar14 = puVar13 + 1;\n                    }\n                    if (((((uVar12 == 0x24) || (uVar12 == 0x40)) || (uVar12 == 0x60)) ||\n                        ((0x9f < uVar12 && (uVar12 < 0xd800)))) || (0xdfff < uVar12)) {\n                        puVar11 = 0x1;\n                    }\n                    else {\n                        puVar11 = NULL;\n                    }\n                    if (puVar11 == var_3ch) {\n                        return 0;\n                    }\n                    var_14h = var_14h + 1;\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = puVar14;\n                }\n            }\n            goto code_r0x0048a760;\n        }\n        iVar17 = arg_18h + 1;\n        if (var_34h != 0x16) {\n            if (uVar12 != 0) {\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, iVar17);\n                if (puVar11 != NULL) {\n                    return puVar11;\n                }\n                goto code_r0x00409c80;\n            }\n            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, iVar17);\n            goto joined_r0x0048bb98;\n        }\n        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, iVar17);\n        while( true ) {\n            if (puVar11 != NULL) {\n                return puVar11;\n            }\n            if (var_1ch <= var_14h) {\n                return 0;\n            }\n            var_30h = arg_10h[0x1f];\n            if (var_30h <= puVar13) break;\n            var_ch = *puVar13;\n            puVar14 = puVar13 + 2;\n            if ((var_20h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                var_ch = ((var_ch & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                puVar14 = puVar13 + 1;\n            }\n            uVar12 = *(*((*((var_ch >> 7) + 0x4ac470) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0x49e5d0) * 8 + 0x4ab0d2);\n            puVar11 = arg_10h[0x1f];\n            var_ch = uVar12;\n            if (puVar14 < arg_10h[0x1f]) {\n                do {\n                    uVar15 = *puVar14;\n                    var_ch = 0x1;\n                    if ((var_20h != 0) && ((uVar15 & 0xfc00) == 0xd800)) {\n                        uVar15 = ((uVar15 & 0x3ff) << 10 | *(puVar14 + 2) & 0x3ff) + 0x10000;\n                        var_ch = 0x2;\n                    }\n                    uVar6 = *(*((*((uVar15 >> 7) + 0x4ac470) * 0x80 + (uVar15 & 0x8000007f)) * 2 + 0x49e5d0) * 8 +\n                             0x4ab0d2);\n                    puVar11 = var_30h;\n                } while (((*(uVar12 * 4 + 0x49e454) & 1 << (uVar6 & 0x1f)) != 0) &&\n                        (puVar14 = puVar14 + var_ch * 2,  uVar12 = uVar6,  puVar14 < var_30h));\n            }\n            if ((arg_10h[0x23] != 0) &&\n               (((puVar11 <= puVar14 && (arg_10h[0x22] <= puVar14 && puVar14 != arg_10h[0x22])) &&\n                (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                return 0xfffffff4;\n            }\n            var_14h = var_14h + 1;\n            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar13 = puVar14;\n        }\n        goto code_r0x0048a760;\n    default:\n        return 0xfffffffb;\n    case 0x6a:\n    case 0x6b:\n        uVar12 = *(in_EDX + 0x22);\n        var_1ch = in_EDX + 2;\n        var_38h = in_EDX + 0x22;\n    // switch table (8 cases) at 0x40a09c\n        switch(uVar12) {\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n            var_38h = in_EDX + 9;\n            puVar14 = (uVar12 - 0x62 & 1) != 0;\n            var_34h = *(uVar12 + 0x49e4be);\n            var_18h = *(uVar12 + 0x49e4c6);\n            var_2ch = puVar14;\n            if (var_18h == NULL) {\n                var_18h = 0x7fffffff;\n            }\n            break;\n        case 0x68:\n        case 0x69:\n            var_18h = *(in_EDX + 0x26);\n            var_34h = *(in_EDX + 9);\n            puVar14 = *var_38h == 0x69;\n            if (var_18h == NULL) {\n                var_18h = 0x7fffffff;\n            }\n            var_38h = in_EDX + 10;\n            break;\n        default:\n            puVar14 = NULL;\n            var_18h = 0x1;\n            var_34h = 0x1;\n        }\n        if (var_20h == 0) {\n            var_2ch = 0x1;\n            if (0 < var_34h) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d24;\n                    uVar8 = *var_8h;\n                    var_10h = uVar8;\n                    var_8h = var_8h + 2;\n                    if (var_10h < 0x100) {\n                        var_10h = uVar8 >> 3;\n                        if ((*(var_10h + var_1ch) & 1 << (uVar8 & 7)) == 0) {\n                            return 0;\n                        }\n                    }\n                    else if (uVar15 == 0x6a) {\n                        return 0;\n                    }\n                    var_2ch = var_2ch + 1;\n                } while (var_2ch <= var_34h);\n            }\n        }\n        else {\n            var_28h = 0x1;\n            if (0 < var_34h) {\n                puVar11 = arg_10h[0x1f];\n                do {\n                    if (puVar11 <= var_8h) goto code_r0x00409d24;\n                    var_30h = *var_8h;\n                    puVar11 = var_8h + 2;\n                    if ((var_30h & 0xfc00) == 0xd800) {\n                        var_30h = ((var_30h & 0x3ff) << 10 | *(var_8h + 2) & 0x3ff) + 0x10000;\n                        puVar11 = var_8h + 1;\n                    }\n                    var_8h = puVar11;\n                    if (var_30h < 0x100) {\n                        if ((*((var_30h >> 3) + var_1ch) & 1 << (var_30h & 7)) == 0) {\n                            return 0;\n                        }\n                    }\n                    else if (uVar15 == 0x6a) {\n                        return 0;\n                    }\n                    puVar11 = arg_10h[0x1f];\n                    var_28h = var_28h + 1;\n                } while (var_28h <= var_34h);\n            }\n        }\n        puVar11 = var_8h;\n        in_EDX = var_38h;\n        if (var_34h == var_18h) goto code_r0x004094c0;\n        if (puVar14 == NULL) {\n            if (var_20h != 0) goto joined_r0x00409802;\n            puVar14 = var_34h;\n            var_40h = puVar11;\n            if (var_34h < var_18h) goto code_r0x0048a674;\n            goto code_r0x0048a6ec;\n        }\n        if (var_20h != 0) {\n            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar14 = var_8h;\n            while( true ) {\n                if (puVar11 != NULL) {\n                    return puVar11;\n                }\n                if (var_18h <= var_34h) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= puVar14) break;\n                var_10h = *puVar14;\n                var_8h = puVar14 + 2;\n                if ((var_10h & 0xfc00) == 0xd800) {\n                    var_10h = (*var_8h & 0x3ff | (var_10h & 0x3ff) << 10) + 0x10000;\n                    var_8h = puVar14 + 1;\n                }\n                if (var_10h < 0x100) {\n                    uVar12 = var_10h >> 3;\n                    uVar6 = var_10h;\n                    var_10h = uVar12;\n                    if ((*(uVar12 + var_1ch) & 1 << (uVar6 & 7)) == 0) {\n                        return 0;\n                    }\n                }\n                else if (uVar15 == 0x6a) {\n                    return 0;\n                }\n                var_34h = var_34h + 1;\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar14 = var_8h;\n            }\n            if (arg_10h[0x23] == 0) {\n                return 0;\n            }\n            bVar21 = puVar14 < arg_10h[0x22];\n            bVar22 = puVar14 == arg_10h[0x22];\n            goto code_r0x0048a2f7;\n        }\n        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        while( true ) {\n            if (puVar11 != NULL) {\n                return puVar11;\n            }\n            if (var_18h <= var_34h) {\n                return 0;\n            }\n            if (arg_10h[0x1f] <= var_8h) break;\n            uVar8 = *var_8h;\n            var_28h = uVar8;\n            var_8h = var_8h + 2;\n            if (var_28h < 0x100) {\n                var_28h = uVar8 >> 3;\n                if ((*(var_28h + var_1ch) & 1 << (uVar8 & 7)) == 0) {\n                    return 0;\n                }\n            }\n            else if (uVar15 == 0x6a) {\n                return 0;\n            }\n            var_34h = var_34h + 1;\n            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        }\ncode_r0x00409d24:\n        uVar12 = arg_10h[0x23];\ncode_r0x00409d2b:\n        if (uVar12 == 0) {\n            return 0;\n        }\ncode_r0x0048a41d:\n        bVar21 = var_8h < arg_10h[0x22];\n        bVar22 = var_8h == arg_10h[0x22];\n        goto code_r0x0048a2f7;\n    case 0x6c:\n        var_28h = in_EDX + 1;\n        uVar12 = *(in_EDX + *(in_EDX + 2) * 2);\n        var_38h = in_EDX + *(in_EDX + 2) * 2;\n    // switch table (8 cases) at 0x48c2df\n        switch(uVar12) {\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n            var_18h = *(uVar12 + 0x49e4be);\n            var_10h = *(uVar12 + 0x49e4c6);\n            var_38h = var_38h + 2;\n            var_2ch = uVar12 - 0x62 & 1;\n            if (var_10h == NULL) {\n                var_10h = 0x7fffffff;\n            }\n            break;\n        case 0x68:\n        case 0x69:\n            var_10h = *(var_38h + 1);\n            var_18h = *(var_38h + 2);\n            var_2ch = uVar12 == 0x69;\n            if (var_10h == NULL) {\n                var_10h = 0x7fffffff;\n            }\n            var_38h = var_38h + 6;\n            break;\n        default:\n            var_10h = 0x1;\n            var_18h = 0x1;\n        }\n        in_EDX = var_38h;\n        var_30h = 0x1;\n        if (0 < var_18h) {\n            do {\n                if (arg_10h[0x1f] <= var_8h) goto code_r0x00409d24;\n                puVar11 = var_8h + 2;\n                if ((var_20h != 0) && ((*var_8h & 0xfc00) == 0xd800)) {\n                    puVar11 = var_8h + 1;\n                }\n                var_8h = puVar11;\n                iVar17 = fcn.00471abf(var_20h);\n                if (iVar17 == 0) {\n                    return 0;\n                }\n                var_30h = var_30h + 1;\n            } while (var_30h <= var_18h);\n        }\n        puVar13 = var_8h;\n        puVar11 = var_8h;\n        if (var_18h != var_10h) {\n            if (var_2ch != NULL) {\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    if (var_10h <= var_18h) {\n                        return 0;\n                    }\n                    if (arg_10h[0x1f] <= puVar13) break;\n                    var_ch = *puVar13;\n                    puVar14 = puVar13 + 2;\n                    if ((var_20h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n                        puVar14 = puVar13 + 1;\n                    }\n                    iVar17 = fcn.00471abf(var_20h);\n                    if (iVar17 == 0) {\n                        return 0;\n                    }\n                    var_18h = var_18h + 1;\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = puVar14;\n                }\n                goto code_r0x0048a760;\n            }\n            var_40h = var_8h;\n            if (var_18h < var_10h) goto code_r0x0048a783;\n            goto code_r0x0048a81f;\n        }\n        goto code_r0x004094c0;\n    case 0x6d:\n    case 0x6e:\n        uVar12 = *(in_EDX + 2);\n        var_28h = uVar15 == 0x6e;\n        var_34h = uVar12 * 2;\n        puVar14 = in_EDX + 1;\n        if ((var_34h < arg_ch) && (uVar15 = arg_10h[3],  -1 < *(uVar15 + uVar12 * 8))) {\n            iVar17 = *(uVar15 + 4 + uVar12 * 8) - *(uVar15 + uVar12 * 8);\n        }\n        else {\n            iVar17 = (arg_10h[0x15] != 0) - 1;\n        }\n        var_ch = *puVar14;\n        var_2ch = iVar17;\n    // switch table (8 cases) at 0x48c2cf\n        switch(var_ch) {\n        case 0x62:\n        case 0x63:\n        case 0x64:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n            var_18h = *(var_ch + 0x49e4c6);\n            puVar14 = var_ch - 0x62U & 1;\n            var_10h = *(var_ch + 0x49e4be);\n            var_38h = in_EDX + 6;\n            var_ch = puVar14;\n            if (var_18h == NULL) {\n                var_18h = 0x7fffffff;\n            }\n            break;\n        case 0x68:\n        case 0x69:\n            var_18h = *(in_EDX + 2);\n            var_10h = *(in_EDX + 6);\n            if (var_18h == NULL) {\n                var_18h = 0x7fffffff;\n            }\n            var_38h = in_EDX + 10;\n            var_ch = *puVar14 == 0x69;\n            break;\n        default:\n            var_38h = puVar14;\n            iVar16 = fcn.004716b8(iVar17, arg_10h, var_28h);\n            if (iVar16 < 0) {\ncode_r0x0048a3fa:\n                if (iVar16 == -2) {\n                    var_8h = arg_10h[0x1f];\n                }\n                if (arg_10h[0x23] == 0) {\n                    return 0;\n                }\n                if (var_8h < arg_10h[0x1f]) {\n                    return 0;\n                }\n                goto code_r0x0048a41d;\n            }\n            in_EDX = puVar14;\n            puVar11 = var_8h + iVar16 * 2;\n            goto code_r0x004094c0;\n        }\n        in_EDX = var_38h;\n        if ((iVar17 != 0) && ((-1 < iVar17 || (var_10h != NULL)))) {\n            var_30h = 0x1;\n            if (0 < var_10h) {\n                do {\n                    iVar16 = fcn.004716b8(iVar17, arg_10h, var_28h);\n                    if (iVar16 < 0) goto code_r0x0048a3fa;\n                    var_8h = var_8h + iVar16 * 2;\n                    var_30h = var_30h + 1;\n                } while (var_30h <= var_10h);\n            }\n            puVar11 = var_8h;\n            if (var_10h != var_18h) {\n                if (var_ch != NULL) {\n                    puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    while( true ) {\n                        if (puVar14 != NULL) {\n                            return puVar14;\n                        }\n                        if (var_18h <= var_10h) {\n                            return 0;\n                        }\n                        iVar17 = fcn.004716b8(var_2ch, arg_10h, var_28h);\n                        if (iVar17 < 0) break;\n                        var_10h = var_10h + 1;\n                        puVar11 = puVar11 + iVar17 * 2;\n                        puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    }\n                    if (iVar17 == -2) {\n                        puVar11 = arg_10h[0x1f];\n                    }\n                    goto code_r0x0048a32d;\n                }\n                var_ch = var_8h;\n                if (var_10h < var_18h) goto code_r0x0048a357;\n                goto code_r0x0048a3bd;\n            }\n        }\n        goto code_r0x004094c0;\n    case 0x6f:\n        puVar19 = arg_10h[0x1d] + *(in_EDX + 2);\n        if (puVar19 == arg_10h[0x1d]) {\n            var_54h = 0;\n        }\n        else {\n            var_54h = puVar19[2];\n        }\n        for (ppuVar10 = arg_10h[0x2a]; ppuVar10 != NULL; ppuVar10 = *ppuVar10) {\n            if ((var_54h == ppuVar10[1]) && (var_8h == ppuVar10[5])) {\n                return 0xffffffe6;\n            }\n        }\n        var_48h = arg_10h[0x25];\n        var_44h = var_8h;\n        var_58h = arg_10h[0x2a];\n        arg_10h[0x2a] = &var_58h;\n        var_4ch = arg_10h[4];\n        in_EDX = in_EDX + 1;\n        var_38h = in_EDX;\n        if (var_4ch < 0x1f) {\n            var_50h = &var_14ch;\n        }\n        else {\n            var_50h = (**0x4bbddc)(var_4ch * 4);\n            if (var_50h == NULL) {\n                return 0xfffffffa;\n            }\n        }\n        fcn.0041faa0(var_50h, arg_10h[3], var_4ch << 2);\n        var_30h = 0x81 < *puVar19;\n        while( true ) {\n            if (var_30h != NULL) {\n                arg_10h[0x27] = 2;\n            }\n            var_ch = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            fcn.0041faa0(arg_10h[3], var_50h, var_4ch << 2);\n            arg_10h[0x25] = var_48h;\n            arg_10h[0x2a] = var_58h;\n            if ((var_ch == 0x1) || (var_ch == 0xfffffc19)) break;\n            if ((-0x3e5 < var_ch) && (var_ch < -0x3df)) {\n                return 0;\n            }\n            if (var_ch != NULL) {\n                if (var_50h == &var_14ch) {\n                    return var_ch;\n                }\n                (**0x4bb80c)(var_50h);\n                return var_ch;\n            }\n            arg_10h[0x2a] = &var_58h;\n            puVar2 = puVar19 + puVar19[1];\n            puVar19 = puVar19 + puVar19[1];\n            if (*puVar2 != 0x71) {\n                arg_10h[0x2a] = var_58h;\n                if (var_50h == &var_14ch) {\n                    return 0;\n                }\n                (**0x4bb80c)(var_50h);\n                return 0;\n            }\n        }\n        if (var_50h != &var_14ch) {\n            (**0x4bb80c)(var_50h);\n        }\n        arg_8h = arg_10h[0x20];\n        puVar11 = arg_10h[0x21];\n        goto code_r0x004094c0;\n    case 0x70:\n        if (*0x4c34ec != NULL) {\n            var_d4h = 2;\n            var_d0h = *(in_EDX + 2);\n            var_cch = arg_10h[3];\n            var_c8h = arg_10h[0x1e];\n            var_c4h = arg_10h[0x1f] - arg_10h[0x1e] >> 1;\n            var_c0h = arg_8h - arg_10h[0x1e] >> 1;\n            var_bch = var_8h - arg_10h[0x1e] >> 1;\n            var_ach = *(in_EDX + 1);\n            var_a8h = *(in_EDX + 6);\n            var_b8h = arg_ch / 2;\n            var_b4h = *(arg_10h + 0x25);\n            if (var_b4h == 0) {\n                var_b4h = 0xffffffff;\n            }\n            var_b0h = arg_10h[0x2b];\n            var_a4h = arg_10h[0x2d];\n            puVar11 = (**0x4c34ec)(&var_d4h);\n            if (0 < puVar11) {\n                return 0;\n            }\n            if (puVar11 < 0) {\n                return puVar11;\n            }\n        }\n        var_38h = in_EDX + 2;\n        in_EDX = var_38h;\n        puVar11 = var_8h;\n        goto code_r0x004094c0;\n    case 0x71:\n        do {\n            piVar20 = in_EDX + *(in_EDX + 2) * 2;\n            in_EDX = in_EDX + *(in_EDX + 2) * 2;\n            var_38h = in_EDX;\n        } while (*piVar20 == 0x71);\n        goto code_r0x004094c0;\n    case 0x72:\n    case 0x73:\n    case 0x74:\n    case 0x75:\n        puVar14 = in_EDX + *(in_EDX + 2) * -2;\n        uVar8 = *puVar14;\n        if ((uVar8 < 0x82) && (uVar8 != 0x7b)) {\n            var_10h = NULL;\n        }\n        else {\n            var_10h = arg_14h[1];\n            arg_14h = *arg_14h;\n        }\n        if ((uVar8 < 0x7b) && (0x76 < uVar8)) {\ncode_r0x004848f6:\n            arg_10h[0x21] = var_8h;\n            arg_10h[0x24] = arg_ch;\n            arg_10h[0x20] = arg_8h;\n            return 1;\n        }\n        if (uVar8 == 0x7f) {\ncode_r0x00409983:\n            var_ch = *(puVar14 + 1);\n            iVar17 = var_ch * 2;\n            if ((arg_10h[0x2a] != 0) && (*(arg_10h[0x2a] + 4) == var_ch)) {\n                arg_10h[0x21] = var_8h;\n                arg_10h[0x20] = arg_8h;\n                return 0x1;\n            }\n            uVar12 = arg_10h[0x25] & 0xffff0000 | var_ch;\n            arg_10h[0x25] = uVar12;\n            if (iVar17 < arg_10h[5]) {\n                if (arg_ch < iVar17) {\n                    var_30h = arg_10h[3] + arg_ch * 4;\n                    puVar13 = arg_10h[3] + var_ch * 8;\n                    if (var_30h < puVar13) {\n                        iVar16 = (puVar13 + (-1 - var_30h) >> 2) + 1;\n                        puVar13 = var_30h;\n                        for (; in_EDX = var_38h,  iVar16 != 0; iVar16 = iVar16 + -1) {\n                            *puVar13 = 0xffffffff;\n                            puVar13 = puVar13 + 1;\n                        }\n                    }\n                }\n                *(arg_10h[3] + var_ch * 8) = *(arg_10h[3] + (arg_10h[4] - var_ch) * 4);\n                *(arg_10h[3] + 4 + var_ch * 8) = var_8h - arg_10h[0x1e] >> 1;\n                if (arg_ch <= iVar17) {\n                    arg_ch = iVar17 + 2;\n                }\n            }\n            else {\n                arg_10h[0x25] = uVar12 | 0x10000;\n            }\n        }\n        else {\n            if (uVar8 == 0x7c) goto code_r0x004848f6;\n            if (((uVar8 == 0x84) || (uVar8 == 0x80)) || (uVar8 == 0x85)) goto code_r0x00409983;\n        }\n        var_18h = puVar14;\n        if ((*in_EDX != 0x72) && (var_8h != var_10h)) {\n            if (*in_EDX == 0x75) {\n                arg_10h[0x21] = var_8h;\n                arg_10h[0x24] = arg_ch;\n                return 0xfffffc1a;\n            }\n            if (*in_EDX == 0x74) {\n                puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar11 = var_18h;\n                if (puVar14 != NULL) {\n                    return puVar14;\n                }\n                if (*var_18h == 0x7b) {\n                    puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    if (puVar14 != NULL) {\n                        return puVar14;\n                    }\n                    arg_10h[0x2e] = puVar11;\n                    return 0xfffffc1b;\n                }\n                in_EDX = var_18h;\n                puVar14 = var_18h;\n                if (0x81 < *var_18h) {\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    return puVar11;\n                }\n            }\n            else {\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (puVar11 == 0xfffffc1b) {\n                    if (arg_10h[0x2e] != var_18h) {\n                        return 0xfffffc1b;\n                    }\n                }\n                else if (puVar11 != NULL) {\n                    return puVar11;\n                }\n                if (*var_18h == 0x7b) {\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    arg_10h[0x2e] = var_18h;\n                    return 0xfffffc1b;\n                }\n                in_EDX = in_EDX + 1;\n                puVar14 = in_EDX;\n            }\n            goto code_r0x0040952e;\n        }\n        if (*puVar14 == 0x7b) {\n            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            if (puVar11 != NULL) {\n                return puVar11;\n            }\n            arg_10h[0x2e] = puVar14;\n            return 0xfffffc1b;\n        }\n        var_38h = in_EDX + 1;\n        in_EDX = var_38h;\n        goto code_r0x004094c0;\n    case 0x76:\n        if (var_20h == 0) {\n            var_8h = var_8h + *(in_EDX + 2) * -2;\n            if (var_8h < arg_10h[0x1e]) {\n                return 0;\n            }\n        }\n        else {\n            uVar12 = *(in_EDX + 2);\n            if (uVar12 != 0) {\n                do {\n                    puVar11 = var_8h + -2;\n                    uVar12 = uVar12 - 1;\n                    if (puVar11 < arg_10h[0x1e]) {\n                        return 0;\n                    }\n                    if ((*puVar11 & 0xfc00) == 0xdc00) {\n                        puVar11 = var_8h + -1;\n                    }\n                    var_8h = puVar11;\n                } while (0 < uVar12);\n            }\n        }\n        if (var_8h < arg_10h[0x22]) {\n            arg_10h[0x22] = var_8h;\n        }\n        var_38h = in_EDX + 1;\n        in_EDX = var_38h;\n        puVar11 = var_8h;\n        goto code_r0x004094c0;\n    case 0x77:\n    case 0x79:\n        var_ch = arg_10h[0x2c];\n        if (arg_10h[0x27] == 1) {\n            bVar21 = true;\n            arg_10h[0x27] = 0;\n        }\n        else {\n            bVar21 = false;\n        }\n        do {\n            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, NULL, arg_18h + 1);\n            if ((puVar11 == 0x1) || (puVar11 == 0xfffffc19)) {\n                arg_8h = arg_10h[0x20];\n                break;\n            }\n            arg_10h[0x2c] = var_ch;\n            if (puVar11 == 0xfffffc20) {\n                piVar20 = in_EDX + *(in_EDX + 2) * 2;\n                if (piVar20 <= arg_10h[0x20]) {\n                    return 0xfffffc20;\n                }\n                if ((*in_EDX != 0x71) && (*piVar20 != 0x71)) {\n                    return 0xfffffc20;\n                }\n            }\n            else if (puVar11 != NULL) {\n                return puVar11;\n            }\n            piVar20 = in_EDX + *(in_EDX + 2) * 2;\n            in_EDX = in_EDX + *(in_EDX + 2) * 2;\n        } while (*piVar20 == 0x71);\n        if (*in_EDX == 0x72) {\n            return 0;\n        }\n        if (bVar21) {\n            return 0x1;\n        }\n        do {\n            piVar20 = in_EDX + *(in_EDX + 2) * 2;\n            in_EDX = in_EDX + *(in_EDX + 2) * 2;\n        } while (*piVar20 == 0x71);\n        arg_ch = arg_10h[0x24];\n        var_38h = in_EDX + 1;\n        in_EDX = var_38h;\n        puVar11 = var_8h;\n        goto code_r0x004094c0;\n    case 0x78:\n    case 0x7a:\n        var_ch = arg_10h[0x2c];\n        if (arg_10h[0x27] == 1) {\n            bVar21 = true;\n            arg_10h[0x27] = 0;\n        }\n        else {\n            bVar21 = false;\n        }\ncode_r0x00484255:\n        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, NULL, arg_18h + 1);\n        arg_10h[0x2c] = var_ch;\n        if (puVar11 < -0x3df) {\n            if (puVar11 != 0xfffffc20) {\n                if (puVar11 == 0xfffffc19) {\n                    return 0;\n                }\n                if (0x3 < puVar11 + 0xf9) {\n                    return puVar11;\n                }\ncode_r0x004842e1:\n                do {\n                    piVar20 = in_EDX + *(in_EDX + 2) * 2;\n                    in_EDX = in_EDX + *(in_EDX + 2) * 2;\n                } while (*piVar20 == 0x71);\ncode_r0x004842ef:\n                if (bVar21) {\n                    return 1;\n                }\n                var_38h = in_EDX + 1;\n                in_EDX = var_38h;\n                puVar11 = var_8h;\n                goto code_r0x004094c0;\n            }\n            piVar20 = in_EDX + *(in_EDX + 2) * 2;\n            if ((piVar20 <= arg_10h[0x20]) || ((*in_EDX != 0x71 && (*piVar20 != 0x71)))) goto code_r0x004842e1;\n        }\n        else if (puVar11 != NULL) {\n            if (puVar11 == 0x1) {\n                return 0;\n            }\n            return puVar11;\n        }\n        piVar20 = in_EDX + *(in_EDX + 2) * 2;\n        in_EDX = in_EDX + *(in_EDX + 2) * 2;\n        if (*piVar20 != 0x71) goto code_r0x004842ef;\n        goto code_r0x00484255;\n    case 0x7b:\n    case 0x7d:\n    case 0x82:\n        goto code_r0x004094f0;\n    case 0x7c:\n        var_28h = var_8h;\n        var_30h = arg_10h[0x2c];\n        var_ch = in_EDX;\n        do {\n            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            if (puVar11 == 0x1) {\n                arg_8h = arg_10h[0x20];\n                break;\n            }\n            if (puVar11 == 0xfffffc20) {\n                piVar20 = in_EDX + *(in_EDX + 2) * 2;\n                if (piVar20 <= arg_10h[0x20]) {\n                    return 0xfffffc20;\n                }\n                if ((*in_EDX != 0x71) && (*piVar20 != 0x71)) {\n                    return 0xfffffc20;\n                }\n            }\n            else if (puVar11 != NULL) {\n                return puVar11;\n            }\n            in_EDX = in_EDX + *(in_EDX + 2) * 2;\n            arg_10h[0x2c] = var_30h;\n        } while (*in_EDX == 0x71);\n        if ((*in_EDX != 0x7c) && (*in_EDX != 0x71)) {\n            return 0;\n        }\n        do {\n            piVar20 = in_EDX + *(in_EDX + 2) * 2;\n            in_EDX = in_EDX + *(in_EDX + 2) * 2;\n        } while (*piVar20 == 0x71);\n        arg_ch = arg_10h[0x24];\n        var_8h = arg_10h[0x21];\n        if (*in_EDX == 0x72) goto code_r0x004864c5;\n        if (var_8h != var_28h) {\n            if (*in_EDX == 0x74) {\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                in_EDX = var_ch;\n                puVar14 = var_ch;\n                if (puVar11 != NULL) {\n                    return puVar11;\n                }\n            }\n            else {\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (puVar11 != NULL) {\n                    return puVar11;\n                }\n                in_EDX = in_EDX + 1;\n                puVar14 = in_EDX;\n            }\n            goto code_r0x0040952e;\n        }\n        var_38h = in_EDX + 1;\n        in_EDX = var_38h;\n        puVar11 = var_8h;\n        goto code_r0x004094c0;\n    case 0x7e:\n    case 0x83:\n        goto code_r0x004847e5;\n    case 0x7f:\n    case 0x84:\n        var_ch = *(in_EDX + 1);\n        if (arg_10h[5] <= var_ch * 2) goto code_r0x004094f0;\n        uVar12 = arg_10h[3];\n        var_10h = *(uVar12 + var_ch * 8);\n        var_40h = *(uVar12 + 4 + var_ch * 8);\n        piVar1 = uVar12 + (arg_10h[4] - var_ch) * 4;\n        var_18h = *piVar1;\n        var_30h = arg_10h[0x25];\n        var_28h = arg_10h[0x2c];\n        *piVar1 = var_8h - arg_10h[0x1e] >> 1;\n        goto code_r0x00409b63;\n    case 0x80:\n    case 0x85:\n        var_10h = NULL;\ncode_r0x0048467d:\n        var_18h = *(in_EDX + 1);\n        if (var_18h * 2 < arg_10h[5]) {\n            var_34h = NULL;\n            var_28h = var_18h * 8;\n            var_ch = in_EDX - arg_10h[0x1d] >> 1;\n            uVar12 = arg_10h[3];\n            var_38h = *(var_28h + uVar12);\n            var_2ch = *(var_28h + uVar12 + 4);\n            var_1ch = *(uVar12 + (arg_10h[4] - var_18h) * 4);\n            do {\n                var_30h = arg_10h[0x25];\n                while( true ) {\n                    *(arg_10h[3] + (arg_10h[4] - var_18h) * 4) = var_8h - arg_10h[0x1e] >> 1;\n                    if (0x81 < uVar15) {\n                        arg_10h[0x27] = 2;\n                    }\n                    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    if (puVar11 == 0xfffffc1a) break;\n                    if (puVar11 == 0xfffffc20) {\n                        piVar20 = in_EDX + *(in_EDX + 2) * 2;\n                        if (piVar20 <= arg_10h[0x20]) {\n                            return 0xfffffc20;\n                        }\n                        if ((*in_EDX != 0x71) && (*piVar20 != 0x71)) {\n                            return 0xfffffc20;\n                        }\n                    }\n                    else if (puVar11 != NULL) {\n                        return puVar11;\n                    }\n                    arg_10h[0x25] = var_30h;\n                    piVar20 = in_EDX + *(in_EDX + 2) * 2;\n                    in_EDX = in_EDX + *(in_EDX + 2) * 2;\n                    if (*piVar20 != 0x71) {\n                        if (var_34h == NULL) {\n                            *(var_28h + arg_10h[3]) = var_38h;\n                            *(var_28h + arg_10h[3] + 4) = var_2ch;\n                            *(arg_10h[3] + (arg_10h[4] - var_18h) * 4) = var_1ch;\n                        }\n                        if (var_10h != NULL) goto code_r0x004864c5;\n                        if (var_34h == NULL) {\n                            return 0;\n                        }\n                        var_38h = in_EDX + 1;\n                        in_EDX = var_38h;\n                        puVar11 = var_8h;\n                        goto code_r0x004094c0;\n                    }\n                }\n                arg_ch = arg_10h[0x24];\n                var_8h = arg_10h[0x21];\n                in_EDX = arg_10h[0x1d] + var_ch * 2;\n                var_34h = 0x1;\n            } while( true );\n        }\ncode_r0x004847e5:\n        var_10h = NULL;\ncode_r0x004847ec:\n        var_30h = NULL;\n        var_ch = in_EDX - arg_10h[0x1d] >> 1;\n        var_28h = arg_10h[0x25];\n        while( true ) {\n            while( true ) {\n                if (0x81 < uVar15) {\n                    arg_10h[0x27] = 2;\n                }\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (puVar11 != 0xfffffc1a) break;\n                arg_ch = arg_10h[0x24];\n                var_8h = arg_10h[0x21];\n                var_30h = 0x1;\n                in_EDX = arg_10h[0x1d] + var_ch * 2;\n            }\n            if (puVar11 == 0xfffffc20) {\n                piVar20 = in_EDX + *(in_EDX + 2) * 2;\n                if (piVar20 <= arg_10h[0x20]) {\n                    return 0xfffffc20;\n                }\n                if ((*in_EDX != 0x71) && (*piVar20 != 0x71)) {\n                    return 0xfffffc20;\n                }\n            }\n            else if (puVar11 != NULL) {\n                return puVar11;\n            }\n            piVar20 = in_EDX + *(in_EDX + 2) * 2;\n            in_EDX = in_EDX + *(in_EDX + 2) * 2;\n            if (*piVar20 != 0x71) break;\n            arg_10h[0x25] = var_28h;\n        }\n        if (var_30h == NULL) {\n            if (var_10h == NULL) {\n                return 0;\n            }\n            var_38h = in_EDX + 1;\n            in_EDX = var_38h;\n            puVar11 = var_8h;\n        }\n        else {\ncode_r0x004864c5:\n            var_38h = in_EDX + 1;\n            in_EDX = var_38h;\n            puVar11 = var_8h;\n        }\n        goto code_r0x004094c0;\n    case 0x81:\n    case 0x86:\n        var_10h = *(in_EDX + 2);\n        if (*(in_EDX + 1) == 0x70) {\n            if (*0x4c34ec != NULL) {\n                var_a0h = 2;\n                var_9ch = *(in_EDX + 6);\n                var_98h = arg_10h[3];\n                var_94h = arg_10h[0x1e];\n                var_90h = arg_10h[0x1f] - arg_10h[0x1e] >> 1;\n                var_8ch = arg_8h - arg_10h[0x1e] >> 1;\n                var_88h = var_8h - arg_10h[0x1e] >> 1;\n                var_78h = *(in_EDX + 2);\n                var_74h = *(in_EDX + 10);\n                var_84h = arg_ch / 2;\n                var_80h = *(arg_10h + 0x25);\n                if (var_80h == 0) {\n                    var_80h = 0xffffffff;\n                }\n                var_7ch = arg_10h[0x2b];\n                var_70h = arg_10h[0x2d];\n                puVar11 = (**0x4c34ec)(&var_a0h);\n                if (0 < puVar11) {\n                    return 0;\n                }\n                if (puVar11 < 0) {\n                    return puVar11;\n                }\n            }\n            in_EDX = in_EDX + 2;\n            var_10h = var_10h + -1;\n        }\n        iVar9 = *(in_EDX + 1);\n        if ((iVar9 != 0x89) && (iVar9 != 0x8a)) {\n            if ((iVar9 == 0x87) || (iVar9 == 0x88)) {\n                iVar17 = *(in_EDX + 6) * 2;\n                if ((arg_ch <= iVar17) || (*(arg_10h[3] + *(in_EDX + 6) * 8) < 0)) {\n                    var_18h = NULL;\n                    if (iVar9 == 0x88) {\n                        var_34h = arg_10h[0xc];\n                        var_ch = iVar17 >> 1;\n                        puVar11 = NULL;\n                        var_10h = NULL;\n                        if (0 < arg_10h[8]) {\n                            do {\n                                var_10h = puVar11;\n                                if (*var_34h == var_ch) break;\n                                puVar11 = puVar11 + 1;\n                                var_34h = var_34h + arg_10h[9] * 2;\n                                var_10h = puVar11;\n                            } while (puVar11 < arg_10h[8]);\n                        }\n                        if (var_10h < arg_10h[8]) {\n                            var_38h = var_34h;\n                            if (arg_10h[0xc] <= var_34h && var_34h != arg_10h[0xc]) {\n                                var_30h = arg_10h[9] * 2;\n                                var_ch = var_34h + 2;\n                                do {\n                                    var_18h = NULL;\n                                    var_38h = var_38h - var_30h;\n                                    iVar17 = fcn.004718ee();\n                                    if (iVar17 != 0) break;\n                                    if ((*var_38h * 2 < arg_ch) && (-1 < *(arg_10h[3] + *var_38h * 8)))\n                                    goto code_r0x004840cb;\n                                    var_18h = NULL;\n                                } while (arg_10h[0xc] <= var_38h && var_38h != arg_10h[0xc]);\n                            }\n                            var_10h = var_10h + 1;\n                            if (var_10h < arg_10h[8]) {\n                                var_30h = arg_10h[9] * 2;\n                                var_ch = var_34h + 2;\n                                do {\n                                    var_34h = var_34h + var_30h;\n                                    iVar17 = fcn.004718ee();\n                                    if (iVar17 != 0) break;\n                                    if ((*var_34h * 2 < arg_ch) && (-1 < *(arg_10h[3] + *var_34h * 8)))\n                                    goto code_r0x004840cb;\n                                    var_10h = var_10h + 1;\n                                    var_18h = NULL;\n                                } while (var_10h < arg_10h[8]);\n                            }\n                        }\n                    }\n                    goto code_r0x004840c5;\n                }\ncode_r0x004840cb:\n                uVar12 = 2;\n                puVar11 = 0x1;\n                goto code_r0x004840d5;\n            }\n            if (iVar9 == 0x8b) {\n                piVar20 = in_EDX + *(in_EDX + 2) * 2;\n                goto code_r0x004840e0;\n            }\n            arg_10h[0x27] = 1;\n            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, NULL, arg_18h + 1);\n            if (puVar11 != 0x1) {\n                if ((puVar11 != NULL) && (puVar11 != 0xfffffc20)) {\n                    return puVar11;\n                }\n                piVar20 = in_EDX + var_10h * 2;\n                goto code_r0x004840e0;\n            }\n            if (arg_ch < arg_10h[0x24]) {\n                arg_ch = arg_10h[0x24];\n            }\n            piVar20 = in_EDX + *(in_EDX + 6) * 2 + 4;\n            iVar9 = *piVar20;\n            while (iVar9 == 0x71) {\n                piVar3 = piVar20 + piVar20[1];\n                piVar20 = piVar20 + piVar20[1];\n                iVar9 = *piVar3;\n            }\ncode_r0x0048a043:\n            if (uVar15 == 0x86) {\n                arg_10h[0x27] = 2;\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                return puVar11;\n            }\n            in_EDX = piVar20 + 2;\n            puVar14 = piVar20 + 2;\n            goto code_r0x0040952e;\n        }\n        if (arg_10h[0x2a] == 0) {\n            piVar20 = in_EDX + *(in_EDX + 2) * 2;\n            goto code_r0x004840e0;\n        }\n        var_ch = *(in_EDX + 6);\n        if ((var_ch == 0xffff) || (var_30h = *(arg_10h[0x2a] + 4),  var_ch == var_30h)) goto code_r0x004840cb;\n        var_18h = NULL;\n        if (iVar9 == 0x8a) {\n            var_34h = arg_10h[0xc];\n            puVar11 = NULL;\n            var_10h = NULL;\n            if (0 < arg_10h[8]) {\n                do {\n                    var_10h = puVar11;\n                    if (*var_34h == var_ch) break;\n                    puVar11 = puVar11 + 1;\n                    var_34h = var_34h + arg_10h[9] * 2;\n                    var_10h = puVar11;\n                } while (puVar11 < arg_10h[8]);\n            }\n            if (var_10h < arg_10h[8]) {\n                var_38h = var_34h;\n                if (arg_10h[0xc] <= var_34h && var_34h != arg_10h[0xc]) {\n                    var_28h = arg_10h[9] * 2;\n                    var_ch = var_34h + 2;\n                    do {\n                        var_18h = NULL;\n                        var_38h = var_38h - var_28h;\n                        iVar17 = fcn.004718ee();\n                        if (iVar17 != 0) break;\n                        if (*var_38h == var_30h) goto code_r0x004840cb;\n                        var_18h = NULL;\n                    } while (arg_10h[0xc] <= var_38h && var_38h != arg_10h[0xc]);\n                }\n                var_10h = var_10h + 1;\n                if (var_10h < arg_10h[8]) {\n                    var_28h = arg_10h[9] * 2;\n                    var_ch = var_34h + 2;\n                    do {\n                        var_34h = var_34h + var_28h;\n                        iVar17 = fcn.004718ee();\n                        if (iVar17 != 0) break;\n                        if (*var_34h == var_30h) goto code_r0x004840cb;\n                        var_10h = var_10h + 1;\n                        var_18h = NULL;\n                    } while (var_10h < arg_10h[8]);\n                }\n            }\n        }\ncode_r0x004840c5:\n        uVar12 = *(in_EDX + 2);\n        puVar11 = var_18h;\ncode_r0x004840d5:\n        piVar20 = in_EDX + uVar12 * 2;\n        if (puVar11 != NULL) goto code_r0x0048a043;\ncode_r0x004840e0:\n        if (*piVar20 == 0x71) goto code_r0x0048a043;\n        var_38h = piVar20 + 2;\n        in_EDX = var_38h;\n        puVar11 = var_8h;\n        goto code_r0x004094c0;\n    case 0x8c:\n        iVar17 = in_EDX + 2;\n        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (puVar11 != NULL) {\n            return puVar11;\n        }\n        do {\n            piVar20 = iVar17 + *(iVar17 + 2) * 2;\n            iVar17 = iVar17 + *(iVar17 + 2) * 2;\n        } while (*piVar20 == 0x71);\n        var_38h = iVar17 + 4;\n        in_EDX = var_38h;\n        puVar11 = var_8h;\n        goto code_r0x004094c0;\n    case 0x8d:\n        in_EDX = in_EDX + 2;\n        puVar11 = in_EDX;\n        do {\n            piVar20 = puVar11 + *(puVar11 + 2) * 2;\n            puVar11 = puVar11 + *(puVar11 + 2) * 2;\n        } while (*piVar20 == 0x71);\n        var_38h = in_EDX;\n        puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        puVar11 = var_8h;\n        if (puVar14 != NULL) {\n            return puVar14;\n        }\n        goto code_r0x004094c0;\n    case 0x8e:\n        uVar15 = *(in_EDX + 2);\n        in_EDX = in_EDX + 2;\n        var_10h = 0x1;\n        if ((uVar15 == 0x80) || (uVar15 == 0x85)) goto code_r0x0048467d;\n        goto code_r0x004847ec;\n    case 0x8f:\n        var_ch = in_EDX + 1;\n        arg_10h[0x2d] = var_ch;\n        arg_10h[0x2c] = 0;\n        puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (((puVar14 == 0x1) || (puVar14 == 0xfffffc19)) && (arg_10h[0x2c] == 0)) {\n            arg_10h[0x2c] = var_ch;\n            return puVar14;\n        }\n        if (puVar14 != 0xfffffc1f) {\n            return puVar14;\n        }\n        puVar13 = fcn.004718ee();\n        goto joined_r0x0048c183;\n    case 0x90:\n        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (puVar11 != NULL) {\n            return puVar11;\n        }\n        return 0xfffffc1d;\n    case 0x91:\n        arg_10h[0x2d] = in_EDX + 1;\n        arg_10h[0x2c] = 0;\n        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (((puVar11 == 0x1) || (puVar11 == 0xfffffc19)) && (arg_10h[0x2c] == 0)) {\n            arg_10h[0x2c] = in_EDX + 1;\n        }\n        if (puVar11 != NULL) {\n            return puVar11;\n        }\n        return 0xfffffc1d;\n    case 0x92:\n        puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        puVar13 = puVar14;\njoined_r0x0048c183:\n        if (puVar13 != NULL) {\n            return puVar14;\n        }\n        arg_10h[0x20] = puVar11;\n        return 0xfffffc1e;\n    case 0x93:\n        arg_10h[10] = arg_10h[10] + 1;\n        if (arg_10h[0xb] <= arg_10h[10] && arg_10h[10] != arg_10h[0xb]) {\n            puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            if (puVar11 != NULL) {\n                return puVar11;\n            }\n            arg_10h[0x20] = in_EDX + 1;\n            return 0xfffffc1f;\n        }\n        var_38h = in_EDX + (*(*in_EDX + 0x49e530) + *(in_EDX + 2)) * 2;\n        in_EDX = var_38h;\n        goto code_r0x004094c0;\n    case 0x94:\n        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        goto code_r0x0048c1c8;\n    case 0x95:\n        arg_10h[0x2d] = in_EDX + 1;\n        arg_10h[0x2c] = 0;\n        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (((puVar11 == 0x1) || (puVar11 == 0xfffffc19)) && (arg_10h[0x2c] == 0)) {\n            arg_10h[0x2c] = in_EDX + 1;\n        }\ncode_r0x0048c1c8:\n        if (puVar11 != NULL) {\n            return puVar11;\n        }\n        arg_10h[0x20] = in_EDX;\n        return 0xfffffc20;\n    case 0x96:\n        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (puVar11 != NULL) {\n            return puVar11;\n        }\n        return 0xfffffc1c;\n    case 0x97:\n        goto code_r0x004096b4;\n    case 0x9a:\n        uVar15 = *(in_EDX + 2);\n        uVar12 = arg_10h[0x25] & 0xffff0000 | uVar15;\n        iVar17 = uVar15 * 2;\n        arg_10h[0x25] = uVar12;\n        if (iVar17 < arg_10h[5]) {\n            *(arg_10h[3] + uVar15 * 8) = *(arg_10h[3] + (arg_10h[4] - uVar15) * 4);\n            *(arg_10h[3] + 4 + uVar15 * 8) = var_8h - arg_10h[0x1e] >> 1;\n            if (arg_ch <= iVar17) {\n                arg_ch = iVar17 + 2;\n            }\n            var_38h = in_EDX + 1;\n            in_EDX = var_38h;\n        }\n        else {\n            var_38h = in_EDX + 1;\n            arg_10h[0x25] = uVar12 | 0x10000;\n            in_EDX = var_38h;\n        }\n        goto code_r0x004094c0;\n    case 0x9b:\n        iVar17 = in_EDX + 2;\n        do {\n            piVar20 = iVar17 + *(iVar17 + 2) * 2;\n            iVar17 = iVar17 + *(iVar17 + 2) * 2;\n        } while (*piVar20 == 0x71);\n        var_38h = iVar17 + 4;\n        in_EDX = var_38h;\n        goto code_r0x004094c0;\n    }\n    var_8h = puVar11;\n    in_EDX = in_EDX + 2;\n    var_38h = in_EDX;\n    puVar11 = var_8h;\n    goto code_r0x004094c0;\ncode_r0x004094f0:\n    if ((uVar15 < 0x82) && (uVar15 != 0x7b)) {\n        if ((arg_10h[0x1c] == 0) && (*(in_EDX + *(in_EDX + 2) * 2) != 0x71)) goto code_r0x0040951e;\n    }\n    else {\n        arg_10h[0x27] = 2;\n    }\n    var_ch = arg_10h[0x2c];\n    var_30h = arg_10h[0x25];\n    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    if (puVar11 == 0xfffffc20) {\n        piVar20 = in_EDX + *(in_EDX + 2) * 2;\n        if (piVar20 <= arg_10h[0x20]) {\n            return 0xfffffc20;\n        }\n        if ((*in_EDX != 0x71) && (*piVar20 != 0x71)) {\n            return 0xfffffc20;\n        }\n    }\n    else if (puVar11 != NULL) {\n        if (puVar11 != 0xfffffc1b) {\n            return puVar11;\n        }\n        iVar9 = *in_EDX;\n        if (iVar9 != 0x7b) {\n            while (iVar9 == 0x71) {\n                piVar20 = in_EDX + *(in_EDX + 2) * 2;\n                in_EDX = in_EDX + *(in_EDX + 2) * 2;\n                iVar9 = *piVar20;\n            }\n            in_EDX = in_EDX + *(in_EDX + 2) * -2;\n        }\n        return -(arg_10h[0x2e] != in_EDX) & 0xfffffc1b;\n    }\n    in_EDX = in_EDX + *(in_EDX + 2) * 2;\n    arg_10h[0x2c] = var_ch;\n    if (*in_EDX != 0x71) {\n        return 0;\n    }\n    arg_10h[0x25] = var_30h;\n    goto code_r0x004094f0;\ncode_r0x0040951e:\n    in_EDX = in_EDX + *(*in_EDX + 0x49e530) * 2;\n    puVar14 = in_EDX;\n    goto code_r0x0040952e;\njoined_r0x00409802:\n    if (var_18h <= var_34h) {\ncode_r0x0040985b:\n        var_40h = var_8h;\n        var_8h = puVar11;\n        puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        while( true ) {\n            if (puVar14 != NULL) {\n                return puVar14;\n            }\n            puVar13 = puVar11 + -2;\n            if (puVar11 == var_40h) break;\n            if ((*puVar13 & 0xfc00) == 0xdc00) {\n                puVar13 = puVar11 + -1;\n            }\n            puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar11 = puVar13;\n        }\n        return 0;\n    }\n    var_ch = 0x1;\n    if (arg_10h[0x1f] <= puVar11) {\n        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= puVar11 && puVar11 != arg_10h[0x22])) &&\n           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n            return 0xfffffff4;\n        }\n        goto code_r0x0040985b;\n    }\n    var_10h = *puVar11;\n    if ((var_10h & 0xfc00) == 0xd800) {\n        var_10h = ((var_10h & 0x3ff) << 10 | *(puVar11 + 2) & 0x3ff) + 0x10000;\n        var_ch = 0x2;\n    }\n    if (var_10h < 0x100) {\n        puVar14 = var_10h >> 3;\n        uVar6 = var_10h;\n        var_10h = puVar14;\n        if ((*(puVar14 + var_1ch) & 1 << (uVar6 & 7)) == 0) goto code_r0x0040985b;\n    }\n    else if (uVar15 == 0x6a) goto code_r0x0040985b;\n    var_34h = var_34h + 1;\n    puVar11 = puVar11 + var_ch * 2;\n    goto joined_r0x00409802;\ncode_r0x00488739:\n    if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n       (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n        return 0xfffffff4;\n    }\n    goto code_r0x004886d5;\ncode_r0x004885d6:\n    if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n       (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n        return 0xfffffff4;\n    }\ncode_r0x004886d5:\n    puVar11 = var_8h;\n    if (var_24h == 0) goto code_r0x004886dd;\n    goto code_r0x004094c0;\ncode_r0x004886dd:\n    if (var_8h != puVar13) {\n        do {\n            puVar11 = var_8h;\n            puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            if (puVar14 != NULL) {\n                return puVar14;\n            }\n            var_8h = puVar11 + -2;\n            if ((var_20h != 0) && ((*var_8h & 0xfc00) == 0xdc00)) {\n                var_8h = puVar11 + -1;\n            }\n            puVar14 = var_38h;\n        } while (var_8h != var_2ch);\n    }\ncode_r0x0040952e:\n    var_38h = puVar14;\n    var_20h = arg_10h[0x14];\n    uVar12 = *arg_10h;\n    if (arg_10h[1] <= uVar12) goto code_r0x0048c297;\n    goto code_r0x004094a0;\ncode_r0x00489277:\n    puVar13 = var_8h;\n    puVar11 = var_8h;\n    if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n       (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n        return 0xfffffff4;\n    }\ncode_r0x004891bd:\n    var_8h = puVar11;\n    puVar11 = var_8h;\n    if (var_24h == 0) {\n        puVar14 = var_38h;\n        if (puVar13 != var_2ch) {\n            do {\n                puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (puVar11 != NULL) {\n                    return puVar11;\n                }\n                var_8h = puVar13 + -2;\n                if ((*(puVar13 + -2) & 0xfc00) == 0xdc00) {\n                    var_8h = puVar13 + -1;\n                }\n                if (((var_34h == 0x11) && (var_2ch < var_8h)) && ((*var_8h == 10 && (*(var_8h + -2) == 0xd)))) {\n                    var_8h = var_8h + -2;\n                }\n                puVar13 = var_8h;\n                puVar14 = var_38h;\n            } while (var_8h != var_2ch);\n        }\n        goto code_r0x0040952e;\n    }\n    goto code_r0x004094c0;\njoined_r0x0048bb98:\n    if (puVar11 != NULL) {\n        return puVar11;\n    }\n    if (var_1ch <= var_14h) {\n        return 0;\n    }\n    puVar11 = arg_10h[0x1f];\n    if (puVar11 <= puVar13) goto code_r0x0048a760;\n    if (var_34h == 0xc) {\n        if (arg_10h[6] == 0) {\n            if ((puVar13 <= puVar11 + arg_10h[7] * -2) && (*puVar13 == *(arg_10h + 0xd))) {\n                if (arg_10h[7] == 1) {\n                    return 0;\n                }\n                if (*(puVar13 + 2) == *(arg_10h + 0x36)) {\n                    return 0;\n                }\n            }\n        }\n        else {\n            iVar17 = fcn.004080a0(puVar11, arg_10h + 7, 0);\n            if (iVar17 != 0) {\n                return 0;\n            }\n        }\n    }\n    uVar12 = *puVar13;\n    puVar14 = puVar13 + 2;\n    if (0xf < var_34h - 6U) {\n        return 0xfffffff2;\n    }\n    // switch table (16 cases) at 0x48c4b3\n    switch(*((var_34h - 6U) * 4 + 0x48c4b3)) {\n    case 0x48a31b:\n        goto code_r0x0048a31b;\n    case 0x48bc2c:\n        if (((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= puVar14)) && (arg_10h[6] == 0)) &&\n            ((arg_10h[7] == 2 && (uVar12 == *(arg_10h + 0xd))))) && (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n            return 0xfffffff4;\n        }\n        break;\n    case 0x48bc7b:\n        if (uVar12 < 0xe) {\n            if (uVar12 == 0xd) {\n                if ((puVar14 < arg_10h[0x1f]) && (*puVar14 == 10)) {\n                    puVar14 = puVar13 + 1;\n                }\n            }\n            else if (uVar12 != 10) {\n                if (1 < uVar12 - 0xb) {\n                    return 0;\n                }\n                goto code_r0x0048bccb;\n            }\n        }\n        else {\n            if ((uVar12 != 0x85) && (1 < uVar12 - 0x2028)) {\n                return 0;\n            }\ncode_r0x0048bccb:\n            if (arg_10h[0x1b] != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0x48bcda:\n        if (uVar12 < 0x180f) {\n            if (uVar12 == 0x180e) {\n                return 0;\n            }\n            if (uVar12 < 0xa1) {\n                if (uVar12 == 0xa0) {\n                    return 0;\n                }\n                if (uVar12 == 9) {\n                    return 0;\n                }\n                if (uVar12 == 0x20) {\n                    return 0;\n                }\n            }\n            else if (uVar12 == 0x1680) {\n                return 0;\n            }\n        }\n        else if (uVar12 < 0x2060) {\n            if (uVar12 == 0x205f) {\n                return 0;\n            }\n            if (0x1fff < uVar12) {\n                if (uVar12 < 0x200b) {\n                    return 0;\n                }\n                if (uVar12 == 0x202f) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar12 == 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x48bd66:\n        if (uVar12 < 0x180f) {\n            if (uVar12 != 0x180e) {\n                if (uVar12 < 0xa1) {\n                    if (((uVar12 != 0xa0) && (uVar12 != 9)) && (uVar12 != 0x20)) {\n                        return 0;\n                    }\n                }\n                else if (uVar12 != 0x1680) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar12 < 0x2060) {\n            if (uVar12 != 0x205f) {\n                if (uVar12 < 0x2000) {\n                    return 0;\n                }\n                if ((0x200a < uVar12) && (uVar12 != 0x202f)) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar12 != 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x48bdf2:\n        if (uVar12 < 0x86) {\n            if (uVar12 == 0x85) {\n                return 0;\n            }\n            if ((9 < uVar12) && (uVar12 < 0xe)) {\n                return 0;\n            }\n        }\n        else if ((0x2027 < uVar12) && (uVar12 < 0x202a)) {\n            return 0;\n        }\n        break;\n    case 0x48be34:\n        if (uVar12 < 0x86) {\n            if ((uVar12 != 0x85) && (3 < uVar12 - 10)) {\n                return 0;\n            }\n        }\n        else if (1 < uVar12 - 0x2028) {\n            return 0;\n        }\n        break;\n    case 0x48be67:\n        if (uVar12 < 0x100) {\n            uVar6 = *(uVar12 + arg_10h[0x11]) & 4;\njoined_r0x0048bede:\n            if (uVar6 != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0x48be82:\n        if (0xff < uVar12) {\n            return 0;\n        }\n        uVar6 = *(uVar12 + arg_10h[0x11]) & 4;\n        goto joined_r0x0048bef9;\n    case 0x48be9d:\n        if (uVar12 < 0x100) {\n            uVar6 = *(uVar12 + arg_10h[0x11]) & 1;\n            goto joined_r0x0048bede;\n        }\n        break;\n    case 0x48beb4:\n        if (0xff < uVar12) {\n            return 0;\n        }\n        uVar6 = *(uVar12 + arg_10h[0x11]) & 1;\n        goto joined_r0x0048bef9;\n    case 0x48becf:\n        if (uVar12 < 0x100) {\n            uVar6 = *(uVar12 + arg_10h[0x11]) & 0x10;\n            goto joined_r0x0048bede;\n        }\n        break;\n    case 0x48bee6:\n        if (0xff < uVar12) {\n            return 0;\n        }\n        uVar6 = *(uVar12 + arg_10h[0x11]) & 0x10;\njoined_r0x0048bef9:\n        if (uVar6 == 0) {\n            return 0;\n        }\n    }\n    var_14h = var_14h + 1;\n    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    puVar13 = puVar14;\n    goto joined_r0x0048bb98;\ncode_r0x00409c80:\n    if (var_1ch <= var_14h) {\n        return 0;\n    }\n    puVar11 = arg_10h[0x1f];\n    if (puVar11 <= puVar13) {\ncode_r0x0048a760:\n        if (arg_10h[0x23] == 0) {\n            return 0;\n        }\n        bVar21 = puVar13 < arg_10h[0x22];\n        bVar22 = puVar13 == arg_10h[0x22];\ncode_r0x0048a2f7:\n        if ((!bVar21 && !bVar22) && (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n            return 0xfffffff4;\n        }\ncode_r0x004096b4:\n        return NULL;\n    }\n    if (var_34h == 0xc) {\n        if (arg_10h[6] == 0) {\n            if ((puVar13 <= puVar11 + arg_10h[7] * -2) && (*puVar13 == *(arg_10h + 0xd))) {\n                if (arg_10h[7] == 1) {\n                    return 0;\n                }\n                if (*(puVar13 + 2) == *(arg_10h + 0x36)) {\n                    return 0;\n                }\n            }\n        }\n        else {\n            iVar17 = fcn.004080a0(puVar11, arg_10h + 7, var_20h);\n            if (iVar17 != 0) {\n                return 0;\n            }\n        }\n    }\n    uVar12 = *puVar13;\n    puVar11 = puVar13 + 2;\n    if ((uVar12 & 0xfc00) == 0xd800) {\n        uVar12 = ((uVar12 & 0x3ff) << 10 | *(puVar13 + 2) & 0x3ff) + 0x10000;\n        puVar11 = puVar13 + 1;\n    }\n    puVar13 = puVar11;\n    if (var_34h == 0xc) {\ncode_r0x00409ceb:\n        if ((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= puVar13)) && (arg_10h[6] == 0)) &&\n           (((arg_10h[7] == 2 && (uVar12 == *(arg_10h + 0xd))) && (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n            return 0xfffffff4;\n        }\n        goto code_r0x00409cf8;\n    }\n    if (0xf < var_34h - 6U) {\n        return 0xfffffff2;\n    }\n    // switch table (16 cases) at 0x48c473\n    switch(*((var_34h - 6U) * 4 + 0x48c473)) {\n    case 0x409ceb:\n        goto code_r0x00409ceb;\n    case 0x48a31b:\ncode_r0x0048a31b:\n        return 0xfffffff2;\n    case 0x48b8ac:\n        if (uVar12 < 0xe) {\n            if (uVar12 == 0xd) {\n                if ((puVar13 < arg_10h[0x1f]) && (*puVar13 == 10)) {\n                    puVar13 = puVar13 + 2;\n                }\n            }\n            else if (uVar12 != 10) {\n                if (1 < uVar12 - 0xb) {\n                    return 0;\n                }\n                goto code_r0x0048b8fc;\n            }\n        }\n        else {\n            if ((uVar12 != 0x85) && (1 < uVar12 - 0x2028)) {\n                return 0;\n            }\ncode_r0x0048b8fc:\n            if (arg_10h[0x1b] != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0x48b90b:\n        if (uVar12 < 0x180f) {\n            if (uVar12 == 0x180e) {\n                return 0;\n            }\n            if (uVar12 < 0xa1) {\n                if (uVar12 == 0xa0) {\n                    return 0;\n                }\n                if (uVar12 == 9) {\n                    return 0;\n                }\n                if (uVar12 == 0x20) {\n                    return 0;\n                }\n            }\n            else if (uVar12 == 0x1680) {\n                return 0;\n            }\n        }\n        else if (uVar12 < 0x2060) {\n            if (uVar12 == 0x205f) {\n                return 0;\n            }\n            if (0x1fff < uVar12) {\n                if (uVar12 < 0x200b) {\n                    return 0;\n                }\n                if (uVar12 == 0x202f) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar12 == 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x48b997:\n        if (uVar12 < 0x180f) {\n            if (uVar12 != 0x180e) {\n                if (uVar12 < 0xa1) {\n                    if (((uVar12 != 0xa0) && (uVar12 != 9)) && (uVar12 != 0x20)) {\n                        return 0;\n                    }\n                }\n                else if (uVar12 != 0x1680) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar12 < 0x2060) {\n            if (uVar12 != 0x205f) {\n                if (uVar12 < 0x2000) {\n                    return 0;\n                }\n                if ((0x200a < uVar12) && (uVar12 != 0x202f)) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar12 != 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x48ba23:\n        if (uVar12 < 0x86) {\n            if (uVar12 == 0x85) {\n                return 0;\n            }\n            if ((9 < uVar12) && (uVar12 < 0xe)) {\n                return 0;\n            }\n        }\n        else if ((0x2027 < uVar12) && (uVar12 < 0x202a)) {\n            return 0;\n        }\n        break;\n    case 0x48ba65:\n        if (uVar12 < 0x86) {\n            if ((uVar12 != 0x85) && (3 < uVar12 - 10)) {\n                return 0;\n            }\n        }\n        else if (1 < uVar12 - 0x2028) {\n            return 0;\n        }\n        break;\n    case 0x48ba98:\n        if (uVar12 < 0x100) {\n            uVar6 = *(uVar12 + arg_10h[0x11]) & 4;\njoined_r0x0048bb23:\n            if (uVar6 != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0x48bab6:\n        if (0xff < uVar12) {\n            return 0;\n        }\n        uVar6 = *(uVar12 + arg_10h[0x11]) & 4;\n        goto joined_r0x0048bb41;\n    case 0x48bad4:\n        if (uVar12 < 0x100) {\n            uVar6 = *(uVar12 + arg_10h[0x11]) & 1;\n            goto joined_r0x0048bb23;\n        }\n        break;\n    case 0x48baf2:\n        if (0xff < uVar12) {\n            return 0;\n        }\n        uVar6 = *(uVar12 + arg_10h[0x11]) & 1;\n        goto joined_r0x0048bb41;\n    case 0x48bb10:\n        if (uVar12 < 0x100) {\n            uVar6 = *(uVar12 + arg_10h[0x11]) & 0x10;\n            goto joined_r0x0048bb23;\n        }\n        break;\n    case 0x48bb2e:\n        if (0xff < uVar12) {\n            return 0;\n        }\n        uVar6 = *(uVar12 + arg_10h[0x11]) & 0x10;\njoined_r0x0048bb41:\n        if (uVar6 == 0) {\n            return 0;\n        }\n    }\ncode_r0x00409cf8:\n    var_14h = var_14h + 1;\n    puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    if (puVar11 != NULL) {\n        return puVar11;\n    }\n    goto code_r0x00409c80;\n    while( true ) {\n        if (puVar11 == 0xfffffc20) {\n            piVar20 = in_EDX + *(in_EDX + 2) * 2;\n            if (piVar20 <= arg_10h[0x20]) {\n                return 0xfffffc20;\n            }\n            if ((*in_EDX != 0x71) && (*piVar20 != 0x71)) {\n                return 0xfffffc20;\n            }\n            puVar11 = NULL;\n        }\n        else if (puVar11 != NULL) {\n            return puVar11;\n        }\n        arg_10h[0x25] = var_30h;\n        in_EDX = in_EDX + *(in_EDX + 2) * 2;\n        arg_10h[0x2c] = var_28h;\n        if (*in_EDX != 0x71) break;\ncode_r0x00409b63:\n        if (0x81 < uVar15) {\n            arg_10h[0x27] = 2;\n        }\n        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (puVar11 == 0xfffffc1b) break;\n    }\n    *(arg_10h[3] + var_ch * 8) = var_10h;\n    *(arg_10h[3] + 4 + var_ch * 8) = var_40h;\n    *(arg_10h[3] + (arg_10h[4] - var_ch) * 4) = var_18h;\n    return puVar11;\n    while( true ) {\n        var_8h = var_8h + iVar16 * 2;\n        var_10h = var_10h + 1;\n        if (var_18h <= var_10h) break;\ncode_r0x0048a357:\n        iVar16 = fcn.004716b8(iVar17, arg_10h, var_28h);\n        if (iVar16 < 0) {\n            if ((((iVar16 == -2) && (arg_10h[0x23] != 0)) &&\n                (arg_10h[0x22] <= arg_10h[0x1f] && arg_10h[0x1f] != arg_10h[0x22])) &&\n               (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                return 0xfffffff4;\n            }\n            break;\n        }\n    }\n    if (var_8h < var_ch) {\n        return 0;\n    }\ncode_r0x0048a3bd:\n    do {\n        puVar11 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (puVar11 != NULL) {\n            return puVar11;\n        }\n        var_8h = var_8h + iVar17 * -2;\n    } while (var_ch <= var_8h);\n    return NULL;\n    while( true ) {\n        var_30h = *puVar11;\n        if ((var_20h != 0) && ((var_30h & 0xfc00) == 0xd800)) {\n            var_ch = 0x2;\n        }\n        iVar17 = fcn.00471abf(var_20h);\n        if (iVar17 == 0) break;\n        var_18h = var_18h + 1;\n        puVar11 = puVar11 + var_ch * 2;\n        if (var_10h <= var_18h) break;\ncode_r0x0048a783:\n        var_ch = 0x1;\n        if (arg_10h[0x1f] <= puVar11) {\n            if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= puVar11 && puVar11 != arg_10h[0x22])) &&\n               (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                return 0xfffffff4;\n            }\n            break;\n        }\n    }\ncode_r0x0048a81f:\n    puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    while( true ) {\n        if (puVar14 != NULL) {\n            return puVar14;\n        }\n        puVar13 = puVar11 + -2;\n        if (puVar11 == var_40h) break;\n        if ((var_20h != 0) && ((*puVar13 & 0xfc00) == 0xdc00)) {\n            puVar13 = puVar11 + -1;\n        }\n        puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        puVar11 = puVar13;\n    }\n    return 0;\n    while( true ) {\n        uVar8 = *var_8h;\n        var_28h = uVar8;\n        if (var_28h < 0x100) {\n            var_28h = uVar8 >> 3;\n            if ((*(var_28h + var_1ch) & 1 << (uVar8 & 7)) == 0) break;\n        }\n        else if (uVar15 == 0x6a) break;\n        var_8h = var_8h + 2;\n        puVar14 = puVar14 + 1;\n        if (var_18h <= puVar14) break;\ncode_r0x0048a674:\n        if (arg_10h[0x1f] <= var_8h) {\n            if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n               (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                return 0xfffffff4;\n            }\n            break;\n        }\n    }\n    puVar11 = var_8h;\n    if (var_8h < puVar11) {\n        return 0;\n    }\ncode_r0x0048a6ec:\n    do {\n        puVar14 = fcn.00409460(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (puVar14 != NULL) {\n            return puVar14;\n        }\n        puVar11 = puVar11 + -2;\n    } while (var_40h <= puVar11);\n    return 0;\n}\n",
        "token_count": 73399
    },
    "004228ca": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004228ca(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4c0934, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0042889e();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.004288b1(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0040a0c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040a0c0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    double dVar1;\n    double dVar2;\n    double dVar3;\n    int32_t *arg_ch_00;\n    char cVar4;\n    int32_t *piVar5;\n    int16_t *piVar6;\n    uint16_t *puVar7;\n    ushort *puVar8;\n    uint arg_8h_00;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    int32_t *var_4ch;\n    ushort *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t *var_30h;\n    ushort *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_ch;\n    ushort *var_8h;\n    int32_t *var_4h;\n    \n    arg_ch_00 = arg_ch;\n    var_38h = 0;\n    var_34h = 8;\n    var_3ch = fcn.0042010a(0x10);\n    *var_3ch = 0;\n    var_14h = fcn.0042010a(4);\n    if (var_14h == NULL) {\n        var_14h = NULL;\n        _var_18h = var_18h;\n    }\n    else {\n        *var_14h = 1;\n    }\n    piVar11 = NULL;\n    iVar10 = *arg_ch[3];\n    var_4h = NULL;\n    var_ch = 0;\n    var_30h = var_14h;\n    if (1 < iVar10) {\n        *arg_ch[3] = iVar10 + -1;\n        fcn.0040a6f8();\n        arg_ch[2] = 8;\n        iVar10 = fcn.0041fa89(0x10);\n        *arg_ch = iVar10;\n    }\n    arg_ch[1] = 0;\n    **arg_ch = 0;\n    piVar5 = arg_8h[1];\n    piVar12 = piVar11;\n    dVar1 = *0x4b2750;\n    dVar2 = *0x4b2748;\n    dVar3 = *0x4b2740;\n    if (0 < piVar5) {\n        do {\n            iVar10 = *arg_8h;\n            piVar12 = piVar5;\n            if (piVar11 < piVar5) {\n                piVar12 = piVar11;\n            }\n            if (*(iVar10 + piVar12 * 2) == 0x5c) {\n                piVar12 = piVar11 + 1;\n                var_4h = piVar12;\n                if (piVar12 != piVar5) {\n                    var_4ch = piVar12;\n                    piVar6 = fcn.0041db6f(piVar12);\n                    if ((*piVar6 == 0x5c) || (var_4ch = piVar12,  piVar6 = fcn.0041db6f(piVar12),  *piVar6 == 0x24))\n                    goto code_r0x00472fbf;\n                    puVar7 = fcn.0041db6f(piVar12);\n                    iVar10 = fcn.00422952(*puVar7);\n                    dVar1 = *0x4b2750;\n                    dVar2 = *0x4b2748;\n                    dVar3 = *0x4b2740;\n                    if (iVar10 != 0) {\n                        var_4ch = arg_8h;\n                        var_4h = piVar11;\n                        iVar10 = fcn.00442e45(arg_8h, &fcn.0040a0c0::var_4h, 0);\n                        goto code_r0x00472f71;\n                    }\n                }\n            }\n            else {\n                piVar12 = piVar5;\n                if (piVar11 < piVar5) {\n                    piVar12 = piVar11;\n                }\n                if (*(iVar10 + piVar12 * 2) == 0x24) {\n                    var_4ch = arg_8h;\n                    iVar10 = fcn.00442e45(arg_8h, &fcn.0040a0c0::var_4h, 1);\n                    piVar12 = var_4h;\n                    if (iVar10 < 0) {\ncode_r0x00472fbf:\n                        var_4h = piVar12 + 1;\n                        fcn.0041db6f(piVar12);\n                        fcn.0040bd2f(0x472fd6);\n                        piVar12 = piVar12 + 1;\n                        dVar1 = *0x4b2750;\n                        dVar2 = *0x4b2748;\n                        dVar3 = *0x4b2740;\n                    }\n                    else {\ncode_r0x00472f71:\n                        fcn.00442d53(iVar10, &fcn.0040a0c0::var_3ch);\n                        fcn.00407b4b(&fcn.0040a0c0::var_3ch);\n                        var_ch = var_ch + 1;\n                        piVar12 = var_4h;\n                        dVar1 = *0x4b2750;\n                        dVar2 = *0x4b2748;\n                        dVar3 = *0x4b2740;\n                    }\n                }\n                else {\n                    piVar12 = piVar11 + 1;\n                    if (piVar11 < piVar5) {\n                        piVar5 = piVar11;\n                    }\n                    var_8h = *(iVar10 + piVar5 * 2);\n                    iVar10 = *arg_ch[3];\n                    var_4h = piVar12;\n                    if (iVar10 < 2) {\n                        var_18h = arg_ch[1] + 2;\n                        if (arg_ch[2] < var_18h) {\n                            if (var_18h < 0x41c2) {\n                                var_18h = var_18h * 2;\n                            }\n                            else if (var_18h < 0x2000000) {\n                                dVar2 = var_18h;\n                                if (var_18h < 0) {\n                                    dVar2 = dVar2 + *0x4b6568;\n                                }\n                                _var_18h = ROUND(dVar1 * dVar2);\n                            }\n                            else if (var_18h < 0x8000000) {\n                                dVar1 = var_18h;\n                                if (var_18h < 0) {\n                                    dVar1 = dVar1 + *0x4b6568;\n                                }\n                                _var_18h = ROUND(dVar2 * dVar1);\n                            }\n                            else {\n                                dVar1 = var_18h;\n                                if (var_18h < 0) {\n                                    dVar1 = dVar1 + *0x4b6568;\n                                }\n                                _var_18h = ROUND(dVar3 * dVar1);\n                            }\n                            arg_ch[2] = var_18h;\n                            uVar9 = fcn.0040c91c(var_18h);\n                            arg_ch[2] = uVar9;\n                            iVar10 = fcn.0041fa89(-(uVar9 * 2 >> 0x20 != 0) | uVar9 * 2);\n                            if (*arg_ch != 0) {\n                                fcn.0041faa0(iVar10, *arg_ch, arg_ch[1] * 2 + 2);\n                                fcn.00421a00(*arg_ch);\n                            }\n                            *arg_ch = iVar10;\n                            dVar1 = *0x4b2750;\n                            dVar2 = *0x4b2748;\n                            dVar3 = *0x4b2740;\n                        }\n                    }\n                    else {\n                        *arg_ch[3] = iVar10 + -1;\n                        fcn.0040a6f8();\n                        uVar9 = fcn.0040c91c(arg_ch[1] + 2);\n                        arg_ch[2] = uVar9;\n                        iVar10 = fcn.0042010a(-(uVar9 * 2 >> 0x20 != 0) | uVar9 * 2);\n                        fcn.0041faa0(iVar10, *arg_ch, arg_ch[1] * 2 + 2);\n                        *arg_ch = iVar10;\n                        dVar1 = *0x4b2750;\n                        dVar2 = *0x4b2748;\n                        dVar3 = *0x4b2740;\n                    }\n                    *(*arg_ch + arg_ch[1] * 2) = var_8h;\n                    arg_ch[1] = arg_ch[1] + 1;\n                    *(*arg_ch + arg_ch[1] * 2) = 0;\n                }\n            }\n            piVar5 = arg_8h[1];\n            piVar11 = piVar12;\n        } while (piVar12 < piVar5);\n        _var_18h = _var_18h & 0xffffffff | ZEXT48(var_30h) << 0x20;\n        var_14h = var_30h;\n    }\n    arg_ch = NULL;\n    var_28h = 0;\n    var_24h = 8;\n    var_2ch = fcn.0042010a(0x10);\n    *var_2ch = 0;\n    var_8h = var_2ch;\n    var_4h = fcn.0042010a(4);\n    if (var_4h == NULL) {\n        var_4h = NULL;\n    }\n    else {\n        *var_4h = 1;\n    }\n    piVar11 = arg_8h[1];\n    if (piVar11 < piVar12) {\n        piVar12 = piVar11;\n    }\n    var_1ch = piVar11 - piVar12;\n    puVar8 = var_8h;\n    if ((var_1ch != 0) && (piVar12 < piVar11)) {\n        var_20h = var_4h;\n        cVar4 = fcn.00408176();\n        arg_ch = var_1ch;\n        if (cVar4 == '\\0') {\n            fcn.00407eda(var_1ch);\n            puVar8 = var_2ch;\n        }\n        else {\n            *var_4h = *var_4h + -1;\n            fcn.0040a6f8();\n            arg_ch = var_1ch;\n            uVar9 = fcn.0040c91c(var_1ch + 1);\n            puVar8 = fcn.0042010a(-(uVar9 * 2 >> 0x20 != 0) | uVar9 * 2);\n        }\n        var_8h = puVar8;\n        fcn.0041faa0(puVar8, *arg_8h + piVar12 * 2, arg_ch * 2);\n        puVar8[arg_ch] = 0;\n        var_4h = var_20h;\n    }\n    var_20h = var_4h;\n    if (arg_ch_00 == &fcn.0040a0c0::var_2ch) {\n        arg_8h_00 = fcn.0043c0a2(&fcn.0040a0c0::var_4ch, arg_ch_00);\n        fcn.0040c935(arg_8h_00);\n        fcn.00405cd3();\n    }\n    else if (arg_ch != NULL) {\n        cVar4 = fcn.00408176();\n        if (cVar4 == '\\0') {\n            fcn.0040bd71(arg_ch_00[1] + arg_ch);\n        }\n        else {\n            *arg_ch_00[3] = *arg_ch_00[3] + -1;\n            fcn.0040a6f8();\n            uVar9 = fcn.0040c91c(arg_ch_00[1] + arg_ch + 1);\n            arg_ch_00[2] = uVar9;\n            iVar10 = fcn.0042010a(-(uVar9 * 2 >> 0x20 != 0) | uVar9 * 2);\n            fcn.0041faa0(iVar10, *arg_ch_00, arg_ch_00[1] * 2 + 2);\n            *arg_ch_00 = iVar10;\n        }\n        fcn.0041faa0(*arg_ch_00 + arg_ch_00[1] * 2, puVar8, arg_ch * 2);\n        arg_ch_00[1] = arg_ch_00[1] + arg_ch;\n        *(*arg_ch_00 + arg_ch_00[1] * 2) = 0;\n    }\n    *var_4h = *var_4h + -1;\n    if (*var_4h == 0) {\n        fcn.0042017e(puVar8);\n        fcn.0042017e(var_4h);\n    }\n    iVar10 = var_ch;\n    if (var_ch == 0) {\n        iVar10 = 1;\n    }\n    *var_14h = *var_14h + -1;\n    if (*var_14h == 0) {\n        fcn.0042017e(var_3ch);\n        fcn.0042017e(var_14h);\n    }\n    return iVar10;\n}\n",
        "token_count": 3119
    },
    "0040a716": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040a716(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int16_t *arg_ch;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    puVar6 = *0x4c22f0;\n    if (*0x4c232c == NULL) {\n        if (*0x4c22f8 == 0) {\n            uVar5 = 0;\n        }\n        else {\n            *0x4c22fc = fcn.0042010a(-(*0x4c22f8 * 4 >> 0x20 != 0) | *0x4c22f8 * 4);\n            uVar5 = 0;\n            iVar3 = 0;\n            if (0 < *0x4c22f8) {\n                do {\n                    *(*0x4c22fc + iVar3 * 4) = *puVar6;\n                    puVar6 = puVar6[3];\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < *0x4c22f8);\n            }\n            iVar3 = 1;\n            var_8h = 1;\n            uVar7 = *0x4c22f8 + 1;\n            var_28h = 0x49dd90;\n            var_24h = 0;\n            var_20h = 0;\n            var_1ch = 0;\n            uVar4 = -(uVar7 * 0x10 >> 0x20 != 0) | uVar7 * 0x10;\n            var_ch = uVar7;\n            puVar1 = fcn.0042010a(-(0xfffffffb < uVar4) | uVar4 + 4);\n            if (puVar1 == NULL) {\n                puVar1 = NULL;\n            }\n            else {\n                *puVar1 = uVar7;\n                puVar1 = puVar1 + 1;\n                fcn.0041ac65(var_ch, 0x41ac85);\n            }\n            var_ch = 0x10;\n            var_4h = 0;\n            *0x4c232c = puVar1;\n            while( true ) {\n                if (((*0x4c22fc == 0) || (*0x4c22f8 < iVar3)) || (iVar3 < 1)) {\n                    arg_ch = NULL;\n                }\n                else {\n                    arg_ch = *(*0x4c22fc + -4 + iVar3 * 4);\n                }\n                if (arg_ch == NULL) break;\n                if (*arg_ch == 0x3b) {\n                    fcn.00443460();\n                    iVar2 = **(var_4h + *0x4c2334);\n                    uVar7 = var_8h;\n                    if (var_8h < *(iVar2 + 8)) {\n                        do {\n                            fcn.0044a3ee(*(*(iVar2 + 4) + uVar7 * 4));\n                            fcn.0040b6d0(&var_18h);\n                            if (var_10h == 0x7f) {\n                                var_8h = uVar7 + 1;\n                                if (uVar7 == *(**(var_4h + *0x4c2334) + 8) - 1U) {\n                                    var_4h = var_4h + 4;\n                                    var_8h = 1;\n                                }\n                                fcn.0044a46f();\n                                break;\n                            }\n                            fcn.0044a46f();\n                            uVar7 = uVar7 + 1;\n                            iVar2 = **(var_4h + *0x4c2334);\n                        } while (uVar7 < *(iVar2 + 8));\n                    }\n                }\n                else {\n                    iVar2 = fcn.0040ace0(iVar3, arg_ch, &var_28h);\n                    if (iVar2 < 0) goto code_r0x0040a84a;\n                }\n                fcn.0040a870(&var_28h);\n                iVar3 = iVar3 + 1;\n                var_ch = var_ch + 0x10;\n            }\n            uVar5 = 1;\ncode_r0x0040a84a:\n            fcn.00405800();\n        }\n    }\n    else {\n        uVar5 = 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 1079
    },
    "0040a9a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t ** __cdecl fcn.0040a9a0(int16_t *lpsz, int16_t *cchLength, uint noname_2, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    int16_t *piVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int32_t iVar8;\n    int16_t **ppiVar9;\n    uint var_4h;\n    \n    if (in_ECX[3] != 0) {\n        fcn.0040b8a7();\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n        iVar1 = in_ECX[2];\n        if (iVar1 == 0) {\n            for (ppiVar9 = *in_ECX; ppiVar9 != NULL; ppiVar9 = ppiVar9[9]) {\n                piVar7 = ppiVar9[1];\n                if (piVar7 == cchLength) {\n                    piVar2 = *ppiVar9;\n                    piVar5 = lpsz;\n                    while( true ) {\n                        if (piVar7 == NULL) goto code_r0x0040a9f2;\n                        if (*piVar2 != *piVar5) break;\n                        piVar2 = piVar2 + 1;\n                        piVar5 = piVar5 + 1;\n                        piVar7 = piVar7 + -1;\n                    }\n                }\n            }\n        }\n        else {\n            iVar6 = 0;\n            iVar8 = in_ECX[3] + -1;\n            if (-1 < iVar8) {\n                do {\n                    iVar3 = (iVar8 + iVar6) / 2;\n                    iVar4 = fcn.0040b933(*(iVar1 + iVar3 * 4));\n                    if (iVar4 < 0) {\n                        iVar8 = iVar3 + -1;\n                    }\n                    else {\n                        if (iVar4 < 1) {\n                            if (iVar8 < iVar6) goto code_r0x0040aa24;\n                            ppiVar9 = *(iVar1 + iVar3 * 4);\n                            goto code_r0x0040a9f2;\n                        }\n                        iVar6 = iVar3 + 1;\n                    }\n                } while (iVar6 <= iVar8);\n                ppiVar9 = NULL;\n                goto code_r0x0040a9f2;\n            }\n        }\n    }\ncode_r0x0040aa24:\n    ppiVar9 = NULL;\ncode_r0x0040a9f2:\n    *arg_14h = *arg_14h + -1;\n    if (*arg_14h == 0) {\n        fcn.0042017e(lpsz);\n        fcn.0042017e(arg_14h);\n    }\n    return ppiVar9;\n}\n",
        "token_count": 653
    },
    "0040ace0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: cchLength\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: lpsz\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040ace0(int32_t arg_8h, int16_t *arg_ch, uint *arg_10h)\n\n{\n    int16_t *piVar1;\n    double dVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    int16_t *piVar8;\n    uint16_t uVar9;\n    uint *puVar10;\n    uint32_t arg_18h;\n    uint uVar11;\n    uint32_t uVar12;\n    int16_t *piVar13;\n    float10 fVar14;\n    float10 extraout_ST0;\n    float10 fVar15;\n    float10 fVar16;\n    float10 extraout_ST1;\n    float10 fVar17;\n    uint *lpsz;\n    int16_t *cchLength;\n    int16_t *var_2ch;\n    int32_t *var_28h;\n    uint *var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    \n    var_1ch = 0xffff;\n    cchLength = NULL;\n    puVar10 = NULL;\n    var_ch = NULL;\n    var_2ch = 0x65;\n    puVar5 = fcn.0042010a(0xca);\n    *puVar5 = 0;\n    lpsz = puVar5;\n    var_8h = puVar5;\n    var_28h = fcn.0042010a(4);\n    if (var_28h == NULL) {\n        var_28h = NULL;\n    }\n    else {\n        *var_28h = 1;\n    }\n    uVar12 = 0;\n    if (arg_10h[2] != 0) {\n        do {\n            var_10h = *(arg_10h[1] + uVar12 * 4);\n            _var_14h = _var_14h & 0xffffffff | ZEXT48(var_10h) << 0x20;\n            if (var_10h != NULL) {\n                if (((*(var_10h + 2) < 0x40) && (0x2f < *(var_10h + 2))) && (var_ch = *var_10h,  var_ch != NULL)) {\n                    *var_ch[3] = *var_ch[3] + -1;\n                    if (*var_ch[3] == 0) {\n                        fcn.0042017e(*var_ch);\n                        fcn.0042017e(var_ch[3]);\n                    }\n                    fcn.0042017e(var_ch);\n                }\n                fcn.0042017e(var_10h);\n            }\n            uVar12 = uVar12 + 1;\n            *(arg_10h[1] + -4 + uVar12 * 4) = 0;\n        } while (uVar12 < arg_10h[2]);\n    }\n    arg_10h[2] = 0;\n    if (*arg_ch != 0) {\n        fVar14 = *0x4b2750;\n        do {\n            for (; (arg_ch[puVar10] == 0x20 || (arg_ch[puVar10] == 9)); puVar10 = puVar10 + 1) {\n            }\n            uVar9 = arg_ch[puVar10];\n            var_ch = puVar10;\n            if (uVar9 == 0) break;\n            var_1ch = var_1ch & 0xffff | puVar10 << 0x10;\n            if (((uVar9 < 0x30) || (0x39 < uVar9)) && (uVar9 != 0x2e)) {\ncode_r0x0040adf5:\n                puVar6 = var_ch;\n                fVar17 = 0;\n                if ((((0x40 < uVar9) && (uVar9 < 0x5b)) || ((0x60 < uVar9 && (uVar9 < 0x7b)))) || (uVar9 == 0x5f)) {\n                    lpsz = &fcn.0040ace0::lpsz;\n                    fcn.0040aa70(arg_ch, &fcn.0040ace0::var_ch, &fcn.0040ace0::var_24h, lpsz);\n                    if (var_24h != 0xffffffff) {\ncode_r0x0040aec8:\n                        fcn.0040b6d0(&fcn.0040ace0::var_24h);\n                        var_8h = lpsz;\n                        puVar5 = lpsz;\n                        puVar10 = var_ch;\n                        goto code_r0x0040af65;\n                    }\n                    fcn.00443110(arg_8h, arg_8h, var_ch);\n                    uVar11 = 0xffffffff;\n                    puVar5 = lpsz;\n                    goto code_r0x0040afc7;\n                }\n                if (uVar9 == 0x24) {\ncode_r0x0040affb:\n                    lpsz = arg_10h;\n                    iVar7 = fcn.0040b875(arg_10h);\n                    if (-1 < iVar7) {\n                        if (uVar9 == 0x24) {\n                            uVar12 = 0x33;\n                        }\n                        else {\n                            uVar12 = 0x32;\n                        }\n                        fVar16 = extraout_ST0;\n                        fVar15 = extraout_ST1;\n                        if ((var_1ch - 0x30U < 0x10) && (var_24h != NULL)) {\n                            fcn.00401926(var_24h);\n                            fVar17 = 0;\n                            fVar14 = *0x4b2750;\n                            fVar15 = *0x4b2748;\n                            fVar16 = *0x4b2740;\n                        }\n                        var_18h = uVar12 - 0x30;\n                        var_1ch = var_1ch & 0xffff0000 | uVar12;\n                        if (var_18h < 0x10) {\ncode_r0x0040b03b:\n                            _var_24h = var_20h << 0x20;\n                        }\n                        else {\n                            if (uVar12 == 0x10) {\n                                var_20h = 0;\n                                goto code_r0x0040b03b;\n                            }\n                            if (uVar12 != 0x20) goto code_r0x0040b03b;\n                            _var_24h = fVar17;\n                        }\n                        puVar10 = puVar6 + 1;\n                        var_ch = puVar10;\n                        if (1 < *var_28h) {\n                            *var_28h = *var_28h + -1;\n                            var_28h = fcn.0042010a(4);\n                            if (var_28h == NULL) {\n                                var_28h = NULL;\n                            }\n                            else {\n                                *var_28h = 1;\n                            }\n                            var_2ch = 0x8;\n                            puVar5 = fcn.0041fa89(0x10);\n                            fVar14 = *0x4b2750;\n                            fVar15 = *0x4b2748;\n                            fVar16 = *0x4b2740;\n                            lpsz = puVar5;\n                            var_8h = puVar5;\n                        }\n                        *puVar5 = 0;\n                        cchLength = NULL;\n                        uVar9 = arg_ch[puVar10];\n                        piVar8 = var_2ch;\n                        while ((((piVar13 = cchLength,  uVar9 < 0x5b && (0x40 < uVar9)) ||\n                                ((0x60 < uVar9 && (uVar9 < 0x7b)))) ||\n                               (((0x2f < uVar9 && (uVar9 < 0x3a)) || (uVar9 == 0x5f))))) {\n                            if (*var_28h < 2) {\n                                piVar1 = cchLength + 1;\n                                puVar5 = lpsz;\n                                puVar6 = var_8h;\n                                if (piVar8 < piVar1) {\n                                    if (piVar1 < 0x41c2) {\n                                        var_14h = piVar1 * 2;\n                                    }\n                                    else {\n                                        puVar10 = var_ch;\n                                        if (piVar1 < 0x2000000) {\n                                            dVar2 = piVar1;\n                                            if (piVar1 < 0) {\n                                                dVar2 = dVar2 + *0x4b6568;\n                                            }\n                                            var_8h = lpsz;\n                                            _var_14h = ROUND(fVar14 * dVar2);\n                                        }\n                                        else if (piVar1 < 0x8000000) {\n                                            dVar2 = piVar1;\n                                            if (piVar1 < 0) {\n                                                dVar2 = dVar2 + *0x4b6568;\n                                            }\n                                            _var_14h = ROUND(fVar15 * dVar2);\n                                            var_8h = lpsz;\n                                        }\n                                        else {\n                                            dVar2 = piVar1;\n                                            if (piVar1 < 0) {\n                                                dVar2 = dVar2 + *0x4b6568;\n                                            }\n                                            _var_14h = ROUND(fVar16 * dVar2);\n                                            var_8h = lpsz;\n                                        }\n                                    }\n                                    var_2ch = fcn.0040c91c(var_14h);\n                                    puVar5 = fcn.0041fa89(-(ZEXT48(var_2ch) * 2 >> 0x20 != 0) | ZEXT48(var_2ch) * 2);\n                                    _var_14h = _var_14h & 0xffffffff | ZEXT48(puVar5) << 0x20;\n                                    piVar8 = var_2ch;\n                                    puVar6 = puVar5;\n                                    if (var_8h != NULL) {\n                                        fcn.0041faa0(puVar5, var_8h, piVar13 * 2 + 2);\n                                        fcn.00421a00(var_8h);\n                                        piVar8 = var_2ch;\n                                        puVar5 = var_10h;\n                                        puVar6 = var_10h;\n                                    }\n                                }\n                            }\n                            else {\n                                *var_28h = *var_28h + -1;\n                                fcn.0040a6f8();\n                                piVar13 = cchLength;\n                                var_2ch = fcn.0040c91c(cchLength + 1);\n                                var_8h = fcn.0042010a(-(ZEXT48(var_2ch) * 2 >> 0x20 != 0) | ZEXT48(var_2ch) * 2);\n                                fcn.0041faa0(var_8h, lpsz, piVar13 * 2 + 2);\n                                lpsz = var_8h;\n                                piVar8 = var_2ch;\n                                puVar5 = lpsz;\n                                puVar6 = var_8h;\n                            }\n                            var_8h = puVar6;\n                            lpsz = puVar5;\n                            fVar14 = *0x4b2750;\n                            *(var_8h + piVar13 * 2) = uVar9;\n                            fVar15 = *0x4b2748;\n                            cchLength = piVar13 + 1;\n                            fVar16 = *0x4b2740;\n                            *(var_8h + cchLength * 2) = 0;\n                            puVar10 = puVar10 + 1;\n                            var_ch = puVar10;\n                            uVar9 = arg_ch[puVar10];\n                        }\n                        if (cchLength != NULL) {\n                            fcn.0040b8a7();\n                            piVar8 = cchLength;\n                            puVar5 = lpsz;\n                            var_8h = lpsz;\n                            (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n                            if ((var_18h < 0x10) && (var_24h != NULL)) {\n                                lpsz = var_24h;\n                                fcn.00401926();\n                            }\n                            puVar6 = fcn.0042010a(0x10);\n                            if (puVar6 == NULL) {\n                                _var_24h = _var_24h & 0xffffffff00000000;\n                            }\n                            else {\n                                puVar6[2] = var_2ch;\n                                *puVar6 = puVar5;\n                                puVar6[1] = piVar8;\n                                puVar6[3] = var_28h;\n                                *var_28h = *var_28h + 1;\n                                _var_24h = _var_24h & 0xffffffff00000000 | ZEXT48(puVar6);\n                            }\n                            goto code_r0x0040af59;\n                        }\n                        puVar6 = puVar10 + -1;\n                    }\n                    fcn.00443110(arg_8h, 0x138b, puVar6);\n                    uVar11 = 0xffffffff;\n                    puVar5 = var_8h;\n                    goto code_r0x0040afc7;\n                }\n    // switch table (69 cases) at 0x40b638\n                switch(uVar9) {\n                case 0x1a:\n                    if (((var_ch != NULL) || (arg_ch[1] != 0)) || (arg_8h < *0x4c22f8)) goto code_r0x004740c9;\n                    puVar10 = 0x1;\n                    var_ch = 0x1;\n                    goto code_r0x0040af7f;\n                case 0x1b:\n                case 0x1c:\n                case 0x1d:\n                case 0x1e:\n                case 0x1f:\n                case 0x20:\n                case 0x21:\n                case 0x23:\n                case 0x24:\n                case 0x25:\n                case 0x2e:\n                case 0x30:\n                case 0x31:\n                case 0x32:\n                case 0x33:\n                case 0x34:\n                case 0x35:\n                case 0x36:\n                case 0x37:\n                case 0x38:\n                case 0x39:\n                case 0x3b:\n                case 0x3d:\n                case 0x41:\n                case 0x42:\n                case 0x43:\n                case 0x44:\n                case 0x45:\n                case 0x46:\n                case 0x47:\n                case 0x48:\n                case 0x49:\n                case 0x4a:\n                case 0x4b:\n                case 0x4c:\n                case 0x4d:\n                case 0x4e:\n                case 0x4f:\n                case 0x50:\n                case 0x51:\n                case 0x52:\n                case 0x53:\n                case 0x54:\n                case 0x55:\n                case 0x56:\n                case 0x57:\n                case 0x58:\n                case 0x59:\n                case 0x5a:\n                case 0x5c:\ncode_r0x004740c9:\n                    lpsz = var_ch;\n                    fcn.00443110(arg_8h, 5000, var_ch);\n                    fcn.0040b7ff(0x7f);\n                    fcn.0040b6d0(0x4740f5);\n                    uVar11 = 0xffffffff;\n                    puVar5 = var_8h;\n                    goto code_r0x0040afc7;\n                case 0x22:\n                case 0x27:\n                    lpsz = &fcn.0040ace0::lpsz;\n                    iVar7 = fcn.0040bcb6(arg_8h, arg_ch, &fcn.0040ace0::var_ch, lpsz);\n                    if (-1 < iVar7) {\n                        fcn.0040b7ff(0x36);\n                        fcn.0041df08(&fcn.0040ace0::lpsz);\n                        goto code_r0x0040aec8;\n                    }\n                    fcn.0040b7ff(0x7f);\n                    fcn.0040b6d0(&fcn.0040ace0::var_24h);\n                    uVar11 = 0xffffffff;\n                    puVar5 = lpsz;\n                    goto code_r0x0040afc7;\n                case 0x26:\n                    lpsz = 0x4d;\n                    fcn.0040b7ff(0x4d);\n                    puVar10 = puVar6 + 1;\n                    var_ch = puVar10;\n                    if (arg_ch[puVar10] == 0x3d) {\n                        puVar10 = puVar6 + 2;\n                        var_ch = puVar10;\n                        fcn.0040b7ff(0x56);\n                    }\n                    goto code_r0x0040af59;\n                case 0x28:\n                    lpsz = 0x47;\n                    fcn.0040b7ff(0x47);\n                    fcn.0040b6d0(&fcn.0040ace0::var_24h);\n                    puVar10 = puVar6 + 1;\n                    var_ch = puVar10;\n                    break;\n                case 0x29:\n                    lpsz = 0x48;\n                    fcn.0040b7ff(0x48);\n                    fcn.0040b6d0(&fcn.0040ace0::var_24h);\n                    puVar10 = puVar6 + 1;\n                    var_ch = puVar10;\n                    break;\n                case 0x2a:\n                    lpsz = 0x4c;\n                    fcn.0040b7ff(0x4c);\n                    puVar10 = puVar6 + 1;\n                    var_ch = puVar10;\n                    if (arg_ch[puVar10] == 0x3d) {\n                        puVar10 = puVar6 + 2;\n                        var_ch = puVar10;\n                        fcn.0040b7ff(0x55);\n                    }\n                    goto code_r0x0040af59;\n                case 0x2b:\n                    lpsz = 0x49;\n                    fcn.0040b7ff(0x49);\n                    puVar10 = puVar6 + 1;\n                    var_ch = puVar10;\n                    if (arg_ch[puVar10] == 0x3d) {\n                        puVar10 = puVar6 + 2;\n                        var_ch = puVar10;\n                        fcn.0040b7ff(0x52);\n                    }\n                    goto code_r0x0040af59;\n                case 0x2c:\n                    lpsz = 0x40;\n                    fcn.0040b7ff(0x40);\n                    fcn.0040b6d0(&fcn.0040ace0::var_24h);\n                    puVar10 = puVar6 + 1;\n                    var_ch = puVar10;\n                    break;\n                case 0x2d:\n                    lpsz = 0x4a;\n                    fcn.0040b7ff(0x4a);\n                    puVar10 = puVar6 + 1;\n                    var_ch = puVar10;\n                    if (arg_ch[puVar10] == 0x3d) {\n                        puVar10 = puVar6 + 2;\n                        var_ch = puVar10;\n                        fcn.0040b7ff(0x53);\n                    }\n                    goto code_r0x0040af59;\n                case 0x2f:\n                    lpsz = 0x4b;\n                    fcn.0040b7ff(0x4b);\n                    puVar10 = puVar6 + 1;\n                    var_ch = puVar10;\n                    if (arg_ch[puVar10] == 0x3d) {\n                        puVar10 = puVar6 + 2;\n                        var_ch = puVar10;\n                        fcn.0040b7ff(0x54);\n                    }\n                    goto code_r0x0040af59;\n                case 0x3a:\n                    lpsz = 0x58;\n                    fcn.0040b7ff(0x58);\n                    fcn.0040b6d0(&fcn.0040ace0::var_24h);\n                    puVar10 = puVar6 + 1;\n                    var_ch = puVar10;\n                    break;\n                case 0x3c:\n                    puVar10 = var_ch + 1;\n                    var_ch = puVar10;\n                    if (arg_ch[puVar10] == 0x3d) {\n                        lpsz = 0x46;\n                        fcn.0040b7ff(0x46);\n                        puVar10 = puVar6 + 2;\n                        var_ch = puVar10;\n                    }\n                    else if (arg_ch[puVar10] == 0x3e) {\n                        lpsz = 0x44;\n                        fcn.0040b7ff(0x44);\n                        puVar10 = puVar6 + 2;\n                        var_ch = puVar10;\n                    }\n                    else {\n                        lpsz = 0x43;\n                        fcn.0040b7ff(0x43);\n                    }\n                    goto code_r0x0040af59;\n                case 0x3e:\n                    puVar10 = var_ch + 1;\n                    var_ch = puVar10;\n                    if (arg_ch[puVar10] == 0x3d) {\n                        lpsz = 0x45;\n                        fcn.0040b7ff(0x45);\n                        puVar10 = puVar6 + 2;\n                        var_ch = puVar10;\n                    }\n                    else {\n                        lpsz = 0x42;\n                        fcn.0040b7ff(0x42);\n                    }\n                    goto code_r0x0040af59;\n                case 0x3f:\n                    lpsz = 0x57;\n                    fcn.0040b7ff(0x57);\n                    fcn.0040b6d0(&fcn.0040ace0::var_24h);\n                    puVar10 = puVar6 + 1;\n                    var_ch = puVar10;\n                    break;\n                case 0x40:\n                    goto code_r0x0040affb;\n                case 0x5b:\n                    lpsz = 0x4e;\n                    fcn.0040b7ff(0x4e);\n                    fcn.0040b6d0(&fcn.0040ace0::var_24h);\n                    puVar10 = puVar6 + 1;\n                    var_ch = puVar10;\n                    break;\n                case 0x5d:\n                    lpsz = 0x4f;\n                    fcn.0040b7ff(0x4f);\n                    fcn.0040b6d0(&fcn.0040ace0::var_24h);\n                    puVar10 = puVar6 + 1;\n                    var_ch = puVar10;\n                    break;\n                case 0x5e:\n                    lpsz = 0x51;\n                    fcn.0040b7ff(0x51);\n                    fcn.0040b6d0(&fcn.0040ace0::var_24h);\n                    puVar10 = puVar6 + 1;\n                    var_ch = puVar10;\n                    break;\n                default:\n                    puVar10 = var_ch + 1;\n                    var_ch = puVar10;\n                    if (arg_ch[puVar10] == 0x3d) {\n                        lpsz = 0x50;\n                        fcn.0040b7ff(0x50);\n                        puVar10 = puVar6 + 2;\n                        var_ch = puVar10;\n                    }\n                    else {\n                        lpsz = 0x41;\n                        fcn.0040b7ff(0x41);\n                    }\ncode_r0x0040af59:\n                    fcn.0040b6d0(&fcn.0040ace0::var_24h);\n                }\n            }\n            else {\n                uVar12 = arg_10h[2];\n                arg_18h = 0x40;\n                _var_14h = _var_14h & 0xffffffff | uVar12 << 0x20;\n                if (uVar12 != 0) {\n                    arg_18h = *(*(arg_10h[1] + -4 + uVar12 * 4) + 8);\n                }\n                cchLength = arg_ch;\n                cVar4 = fcn.0040b99b(arg_ch, &fcn.0040ace0::var_ch, &fcn.0040ace0::var_24h, &fcn.0040ace0::lpsz, arg_18h\n                                    );\n                if (cVar4 == '\\x01') {\n                    if ((arg_18h == 0x4a) && (var_1ch == 5)) {\n                        _var_24h = CONCAT44(-(var_20h + (var_24h != NULL)), -var_24h);\n                        *(*(arg_10h[1] + -4 + var_10h * 4) + 8) = 0x49;\n                    }\n                    fcn.0040b6d0(&fcn.0040ace0::var_24h);\n                    var_8h = lpsz;\n                    puVar5 = lpsz;\n                    puVar10 = var_ch;\n                    goto code_r0x0040af65;\n                }\n                if (uVar9 != 0x2e) {\n                    var_8h = lpsz;\n                    fVar14 = *0x4b2750;\n                    puVar5 = lpsz;\n                    goto code_r0x0040adf5;\n                }\n                puVar10 = var_ch + 1;\n                var_ch = puVar10;\n                fcn.0040c4cd();\n                while( true ) {\n                    uVar9 = arg_ch[puVar10];\n                    if (((0x5a < uVar9) || (uVar9 < 0x41)) &&\n                       (((uVar9 < 0x61 || (0x7a < uVar9)) &&\n                        ((((uVar9 < 0x30 || (0x39 < uVar9)) && (uVar9 != 0x5f)) && (uVar9 < 0x80)))))) break;\n                    lpsz = 0x40b56f;\n                    var_2ch = uVar9;\n                    fcn.0040bd2f(uVar9);\n                    puVar10 = puVar10 + 1;\n                }\n                var_ch = puVar10;\n                if (cchLength == NULL) {\n                    cchLength = puVar10 + -1;\n                    lpsz = 0x138b;\n                    fcn.00443110(arg_8h, 0x138b, cchLength);\n                    uVar11 = 0xffffffff;\n                    puVar5 = lpsz;\n                    goto code_r0x0040afc7;\n                }\n                cchLength = 0x35;\n                lpsz = 0x40b5a7;\n                fcn.0040b7ff(0x35);\n                lpsz = &fcn.0040ace0::lpsz;\n                fcn.0041df08(lpsz);\n                fcn.0040b6d0(&fcn.0040ace0::var_24h);\n                var_8h = lpsz;\n                puVar5 = lpsz;\n            }\ncode_r0x0040af65:\n            fVar14 = *0x4b2750;\ncode_r0x0040af7f:\n        } while (arg_ch[puVar10] != 0);\n        if (((0x2f < var_1ch) && (var_1ch < 0x40)) && (var_24h != NULL)) {\n            fcn.00405cd3();\n            fcn.0042017e(var_24h);\n        }\n    }\n    _var_24h = _var_24h & 0xffffffff00000000;\n    var_1ch = CONCAT22(puVar10, 0x7f);\n    fcn.0040b6d0(&fcn.0040ace0::var_24h);\n    uVar11 = 0;\n    puVar5 = var_8h;\ncode_r0x0040afc7:\n    piVar3 = var_28h;\n    *var_28h = *var_28h + -1;\n    if (*var_28h == 0) {\n        fcn.0042017e(puVar5);\n        fcn.0042017e(piVar3);\n    }\n    if ((var_1ch - 0x30U < 0x10) && (var_24h != NULL)) {\n        fcn.00401926(var_24h);\n    }\n    return uVar11;\n}\n",
        "token_count": 6629
    },
    "0040bd71": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd71(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    uVar1 = arg_8h + 1;\n    if (in_ECX[2] < uVar1) {\n        if (uVar1 < 0x41c2) {\n            iVar2 = uVar1 * 2;\n        }\n        else {\n            iVar2 = fcn.00471e16();\n        }\n        in_ECX[2] = iVar2;\n        if (iVar2 == 0) {\n            uVar1 = 8;\n        }\n        else {\n            uVar1 = iVar2 + 7U & 0xfffffff8;\n        }\n        in_ECX[2] = uVar1;\n        iVar2 = fcn.0041fa89(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n        if (*in_ECX != 0) {\n            fcn.0041faa0(iVar2, *in_ECX, in_ECX[1] * 2 + 2);\n            fcn.00421a00(*in_ECX);\n        }\n        *in_ECX = iVar2;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0040bdf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040bdf0(uint noname_0, uint noname_1, uint arg_10h, uint32_t arg_14h, int32_t arg_bp_18h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int64_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    int16_t **ppiVar6;\n    int16_t *arg_8h;\n    uint32_t uVar7;\n    uint *puVar8;\n    int32_t **arg_8h_00;\n    uint arg_8h_01;\n    uint8_t uVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    int32_t *arg_8h_02;\n    int32_t iVar12;\n    int16_t *piVar13;\n    uint64_t uVar14;\n    ulong uVar15;\n    int32_t in_stack_00000020;\n    uint *in_stack_00000024;\n    uint32_t in_stack_00000028;\n    int32_t *in_stack_0000002c;\n    uint *in_stack_00000030;\n    uint in_stack_0000004c;\n    uint in_stack_0000005c;\n    uint32_t in_stack_00000060;\n    uint in_stack_00000070;\n    uint32_t in_stack_00000074;\n    uint in_stack_00000078;\n    uint in_stack_0000007c;\n    uint in_stack_00000080;\n    uint in_stack_000000a4;\n    int32_t in_stack_000000a8;\n    uint32_t in_stack_000000ac;\n    int16_t **in_stack_000000b4;\n    int16_t **in_stack_000000b8;\n    int32_t in_stack_000000bc;\n    uint uVar16;\n    int32_t **ppiVar17;\n    int32_t *piVar18;\n    int32_t *piVar19;\n    char16_t *pcVar20;\n    uchar *arg_14h_00;\n    \n    fcn.00430650();\n    *0x4c2354 = *0x4c2354 + 1;\n    if (0x2f < *0x4c2354) {\n        uVar7 = fcn.004432b0(arg_10h, arg_bp_18h, L\"#include depth exceeded.  Make sure there are no recursive includes\"\n                             , arg_14h);\n        uVar7 = uVar7 & 0xffffff00;\n        goto code_r0x0040c261;\n    }\n    fcn.00405080();\n    fcn.0040caee(arg_8h_01);\n    cVar4 = fcn.00404bf9(&stack0x00000064, 0x2000);\n    if (cVar4 == '\\0') {\n        iVar10 = 0x101;\n    }\n    else {\n        iVar10 = 0x100;\n    }\n    fcn.00405cd3();\n    if (cVar4 == '\\0') {\n        fcn.004432b0(arg_10h, arg_bp_18h, L\"Error opening the file\", arg_14h);\n        uVar9 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n        (*_sym.imp.KERNEL32.dll_GetFullPathNameW)();\n        uVar7 = in_stack_00000074;\n        in_stack_0000004c = 0x18;\n        arg_bp_18h = 0x40bed3;\n        fcn.00403d65(&stack0x000000ac, &stack0x0000004c);\n        arg_bp_18h = 0;\n        arg_14h = uVar7;\n        uVar14 = CONCAT44(in_stack_00000070, 0x40bee0);\n        fcn.00404ee9(in_stack_00000070, uVar7, 0);\n        arg_10h = uVar14 >> 0x20;\n        if ((in_stack_000000a8 == 0x21335541) && (in_stack_000000ac == 0x36304145)) {\n            fcn.004050ec();\n            uVar15 = CONCAT44(arg_10h, 2);\n            in_stack_00000078 = 0;\n            in_stack_0000007c = 0;\n            in_stack_000000a4 = 0;\n            in_stack_000000a8 = 0;\n            in_stack_000000ac = in_stack_000000ac & 0xffffff00;\n            iVar10 = fcn.00403f9b(arg_8h_01, 2);\n            if (iVar10 == 0) {\n                pcVar20 = L\">>>AUTOIT SCRIPT<<<\";\n                iVar10 = fcn.0044cc82(L\">>>AUTOIT SCRIPT<<<\", &fcn.0040bdf0::arg_bp_18h, &stack0x00000030);\n                if (iVar10 == 0) {\n                    fcn.00403e39();\n                    arg_8h_00 = uVar15;\n                    in_stack_0000002c = *arg_8h_00;\n                    piVar11 = 0x4;\n                    in_stack_00000074 = 0x49dd90;\n                    in_stack_00000078 = 0;\n                    in_stack_0000007c = 0;\n                    in_stack_00000080 = 0;\n                    puVar8 = fcn.0042010a(0x10);\n                    if (puVar8 == NULL) {\n                        puVar8 = NULL;\n                    }\n                    else {\n                        *puVar8 = 0x49dd90;\n                        puVar8[1] = 0;\n                        puVar8[2] = 0;\n                        puVar8[3] = 0;\n                    }\n                    piVar19 = 0x5;\n                    in_stack_00000024 = puVar8;\n                    fcn.0040b7ff(5);\n                    arg_14h = in_stack_00000028;\n                    fcn.0040b6d0(&fcn.0040bdf0::arg_14h);\n                    in_stack_00000028 = 0;\n                    in_stack_00000020 = 1;\n                    if (0 < in_stack_00000024) {\ncode_r0x0047370d:\n                        do {\n                            do {\n                                arg_8h_02 = piVar11 + 1;\n                                in_stack_0000002c = *(piVar11 + arg_8h_00);\n                                piVar18 = in_stack_0000002c;\n                                fcn.0040b7ff(in_stack_0000002c);\n                                cVar4 = fcn.0044a5be();\n                                if (cVar4 == '\\0') {\n                                    cVar4 = fcn.0044a5a8();\n                                    if (cVar4 == '\\0') {\n                                        cVar4 = fcn.0044a592();\n                                        if (cVar4 == '\\0') {\n                                            cVar4 = fcn.0041df5b();\n                                            piVar11 = arg_8h_02;\n                                            if (cVar4 != '\\0') {\n                                                uVar16 = 0x4737a5;\n                                                ppiVar17 = *0x10;\n                                                arg_8h_00 = fcn.004430ac(arg_8h_00, *0x10);\n                                                if (in_stack_00000020 == 0x31) {\n                                                    fcn.0040caee(arg_8h_00);\n                                                    piVar19 = (**(**(pcVar20 + 2) + 4))();\n                                                    fcn.00405cd3();\n                                                    fcn.0040b7ff(1);\n                                                    arg_8h_00 = ppiVar17;\n                                                    piVar11 = piVar18;\n                                                }\n                                                else if (in_stack_00000020 == 0x30) {\n                                                    fcn.0040caee(arg_8h_00);\n                                                    piVar19 = fcn.004434b4(&stack0x00000090);\n                                                    fcn.00405cd3();\n                                                    fcn.0040b7ff(0);\n                                                    arg_8h_00 = ppiVar17;\n                                                    piVar11 = piVar18;\n                                                }\n                                                else {\n                                                    if (in_stack_00000020 == 0x37) {\n                                                        iVar10 = fcn.00442fcd(arg_8h_00);\n                                                        if (iVar10 == 0) {\n                                                            fcn.004432b0(arg_8h_02, arg_14h, \n                                                                         L\"Bad directive syntax error\", 0x49dbf0);\n                                                            fcn.0042017e();\n                                                            fcn.004228ca(uVar16);\n                                                            uVar9 = 0;\n                                                            goto code_r0x0047391e;\n                                                        }\n                                                        piVar11 = piVar19;\n                                                        fcn.0042017e();\n                                                        piVar19 = piVar11;\n                                                        goto code_r0x0047370d;\n                                                    }\n                                                    fcn.0044a525(arg_8h_00);\n                                                    arg_8h_00 = ppiVar17;\n                                                    piVar11 = piVar18;\n                                                }\n                                                fcn.0042017e();\n                                                piVar18 = piVar11;\n                                            }\n                                        }\n                                        else {\n                                            piVar11 = piVar11 + 9;\n                                        }\n                                    }\n                                    else {\n                                        piVar11 = piVar11 + 9;\n                                    }\n                                }\n                                else {\n                                    piVar11 = piVar11 + 5;\n                                }\n                                fcn.0040b6d0(&stack0xfffffff4);\n                            } while (arg_14h != 0x7f);\n                            if ((puVar8[2] < 3) || (*(*(puVar8[1] + -8 + puVar8[2] * 4) + 8) == 0x7f)) {\n                                fcn.0044348f();\n                            }\n                            else {\n                                fcn.00442f5b(piVar18[4], &stack0xffffffe8, 0xffffffff);\n                            }\n                            in_stack_00000020 = in_stack_00000020 + 1;\n                        } while (in_stack_00000020 <= in_stack_00000024);\n                    }\n                    fcn.0040b7ff(5);\n                    fcn.0044a485(&stack0x00000008);\n                    fcn.004628d9(&fcn.0040bdf0::arg_bp_18h);\n                    fcn.004228ca(arg_8h_00);\n                    uVar9 = 1;\ncode_r0x0047391e:\n                    fcn.00405800();\n                    fcn.0044a46f();\n                    goto code_r0x0040c256;\n                }\n                fcn.00403e39();\n            }\n            arg_10h = uVar15 >> 0x20;\n            fcn.004432b0(arg_10h, arg_bp_18h, L\"Error opening the file\", arg_14h);\n            uVar9 = 0;\n        }\n        else {\n            uVar14 = uVar14 & 0xffffffff00000000;\n            fcn.0042297d(&stack0x000002ec, &stack0x000000b4, &stack0x000004fc, &stack0x00002914, &stack0x00002b1c);\n            uVar14 = uVar14 & 0xffffffff00000000;\n            fcn.00421943(&stack0x000000dc, &stack0x000000b4);\n            fcn.00421914(&stack0x000000dc, &stack0x000004fc);\n            uVar14 = uVar14 & 0xffffffff00000000 | ZEXT48(&stack0x000000dc);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n            do {\n                uVar9 = iVar10 >> 8;\n                if (arg_bp_18h._2_1_ != '\\x01') break;\n                fcn.0040c4cd();\n                if ((in_stack_00000074 & 3) == 0) {\n                    if ((in_stack_00000074 & 4) == 0) {\n                        in_stack_00000028 = 0;\n                        in_stack_0000002c = 0x10;\n                        in_stack_00000024 = fcn.0042010a(0x10);\n                        *in_stack_00000024 = 0;\n                        in_stack_00000030 = fcn.0042010a(4);\n                        if (in_stack_00000030 == NULL) {\n                            in_stack_00000030 = NULL;\n                        }\n                        else {\n                            *in_stack_00000030 = 1;\n                        }\n                        cVar4 = fcn.0040c320(&stack0x00000024);\n                        if (cVar4 == '\\0') {\n                            *in_stack_0000002c = *in_stack_0000002c + -1;\n                            if (*in_stack_0000002c == 0) {\n                                fcn.0042017e();\n                                fcn.0042017e();\n                            }\n                            cVar4 = '\\0';\n                        }\n                        else {\n                            fcn.0040c610(&stack0x00000020, &stack0x0000005c);\n                            fcn.00405cd3();\n                            cVar4 = '\\x01';\n                        }\n                    }\n                    else {\n                        cVar4 = fcn.00446636(&stack0x00000060);\n                    }\n                }\n                else {\n                    cVar4 = fcn.00446538(&stack0x00000060);\n                }\n                if (cVar4 == '\\0') break;\n                uVar16 = in_stack_0000005c;\n                if (0xffe < in_stack_00000060) {\n                    iVar10 = in_stack_00000060 - 0xffe;\n                    fcn.0040b8a7();\n                    uVar16 = in_stack_0000005c;\n                    uVar7 = in_stack_00000060 - iVar10;\n                    fcn.0041faa0();\n                    in_stack_00000060 = uVar7;\n                }\n                fcn.00421943(&stack0x0000090c, uVar16);\n                arg_bp_18h = arg_bp_18h + 1;\n                iVar10 = 0;\n                iVar12 = 0;\n                while( true ) {\n                    uVar2 = *(&stack0x0000090c + iVar10 * 2);\n                    iVar5 = fcn.004222cd(uVar2);\n                    if ((iVar5 == 0) || (iVar5 = fcn.004222f0(uVar2),  iVar5 == 0)) break;\n                    iVar10 = iVar10 + 1;\n                }\n                iVar1 = *(&stack0x0000090c + iVar10 * 2);\n                while (iVar1 != 0) {\n                    *(&stack0x0000090c + iVar12 * 2) = *(&stack0x0000090c + iVar10 * 2);\n                    iVar10 = iVar10 + 1;\n                    iVar12 = iVar12 + 1;\n                    iVar1 = *(&stack0x0000090c + iVar10 * 2);\n                }\n                *(&stack0x0000090c + iVar12 * 2) = 0;\n                piVar13 = &stack0x0000090c;\n                cVar4 = fcn.0040c530(piVar13);\n                if (cVar4 == '\\0') {\n                    arg_10h = uVar14 >> 0x20;\n                    fcn.004432b0(arg_10h, arg_14h, L\"Unterminated string\", &stack0x00000908);\n                    uVar9 = 0;\n                    break;\n                }\n                iVar10 = fcn.004218fb(&stack0x00000908);\n                if (iVar10 != 0) {\n                    while (iVar10 = iVar10 + -1,  -1 < iVar10) {\n                        uVar2 = *(&stack0x00000908 + iVar10 * 2);\n                        iVar12 = fcn.004222cd(uVar2);\n                        if ((iVar12 == 0) || (iVar12 = fcn.004222f0(uVar2),  iVar12 == 0)) break;\n                    }\n                    *(&stack0x0000090a + iVar10 * 2) = 0;\n                }\n                iVar10 = fcn.004218fb(&stack0x00000908);\n                if (((2 < iVar10) && (iVar12 = fcn.004222f0(*(&stack0x00000904 + iVar10 * 2) & 0x7f),  iVar12 != 0)) &&\n                   (*(&stack0x00000906 + iVar10 * 2) == 0x5f)) {\n                    *(&stack0x00000906 + iVar10 * 2) = 0;\n                }\n                if (arg_bp_18h == '\\x01') {\n                    fcn.0041f7b2(&stack0x00000908);\ncode_r0x0040c210:\n                    uVar9 = uVar14 >> 0x18;\n                    iVar10 = uVar9 << 8;\ncode_r0x0040c214:\n                    arg_bp_18h._2_1_ = uVar14 >> 0x10;\n                }\n                else {\n                    arg_14h_00 = &stack0x00000040;\n                    iVar12 = fcn.0040c714(&stack0x00000908, &stack0x000002e0, &fcn.0040bdf0::arg_14h, arg_14h_00);\n                    if (iVar12 == 3) {\ncode_r0x0040c182:\n                        if (in_stack_000000b4 == NULL) {\n                            in_stack_000000b4 = fcn.0042010a(0x10);\n                            in_stack_000000b8 = in_stack_000000b4;\n                        }\n                        else if (**in_stack_000000b8 == 0) {\n                            fcn.0042017e();\n                            in_stack_000000bc = in_stack_000000bc + -1;\n                        }\n                        else {\n                            ppiVar6 = fcn.0042010a(0x10);\n                            in_stack_000000b8[3] = ppiVar6;\n                            in_stack_000000b8 = ppiVar6;\n                        }\n                        in_stack_000000b8[3] = NULL;\n                        iVar10 = fcn.004218fb(&stack0x000008f8);\n                        iVar3 = (iVar10 + 1) * 2;\n                        arg_8h = fcn.0042010a(-(iVar3 >> 0x20 != 0) | iVar3);\n                        fcn.00421943(arg_8h, &stack0x000008f8);\n                        *in_stack_000000b8 = arg_8h;\n                        in_stack_000000b8[1] = piVar13;\n                        piVar13 = uVar14;\n                        in_stack_000000b8[2] = piVar13;\n                        in_stack_000000bc = in_stack_000000bc + 1;\n                        goto code_r0x0040c210;\n                    }\n                    if (iVar12 == 0) {\n                        iVar10 = 0;\n                        goto code_r0x0040c214;\n                    }\n                    if (iVar12 == 2) goto code_r0x0040c182;\n                    iVar10 = (arg_14h_00 >> 0x18) << 8;\n                    if (iVar12 != 4) goto code_r0x0040c214;\n                    arg_bp_18h._2_1_ = '\\0';\n                }\n                uVar9 = iVar10 >> 8;\n            } while (uVar9 == 1);\n            fcn.004050ec();\n            in_stack_00000074 = 0;\n            in_stack_00000078 = 0;\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n        }\n    }\ncode_r0x0040c256:\n    uVar7 = fcn.004050c2();\n    uVar7 = uVar7 & 0xffffff00 | uVar9;\ncode_r0x0040c261:\n    *0x4c2354 = *0x4c2354 + -1;\n    return uVar7;\n}\n",
        "token_count": 4553
    },
    "0040c320": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar __cdecl fcn.0040c320(int32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    double dVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    uint32_t uVar6;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t lpNumberOfBytesRead;\n    uint var_1h;\n    \n    piVar3 = arg_8h;\n    iVar5 = *arg_8h[3];\n    if (1 < iVar5) {\n        *arg_8h[3] = iVar5 + -1;\n        fcn.0040a6f8();\n        piVar3[2] = 0x10;\n        iVar5 = fcn.0042010a(0x10);\n        *piVar3 = iVar5;\n    }\n    piVar3[1] = 0;\n    **piVar3 = 0;\n    var_1h._0_1_ = '\\0';\n    do {\n        if (in_ECX[2] == 0) {\n            in_ECX[2] = 0;\n            in_ECX[3] = 0;\n            fcn.00404dc1();\n        }\n        uVar4 = 0;\n        do {\n            if (in_ECX[3] == in_ECX[2]) {\n                iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)(*in_ECX, in_ECX[1], 0x10000, &lpNumberOfBytesRead, 0);\n                if ((iVar5 == 0) || (lpNumberOfBytesRead == 0)) break;\n                in_ECX[2] = lpNumberOfBytesRead;\n                in_ECX[3] = 0;\n            }\n            iVar5 = in_ECX[3];\n            uVar6 = uVar4 + 1;\n            *(&arg_8h + uVar4 + 3) = *(iVar5 + in_ECX[1]);\n            in_ECX[3] = iVar5 + 1;\n            uVar4 = uVar6;\n        } while (uVar6 == 0);\n        puVar1 = in_ECX + 4;\n        uVar6 = *puVar1;\n        *puVar1 = *puVar1 + uVar4;\n        in_ECX[5] = in_ECX[5] + CARRY4(uVar6, uVar4);\n        if (uVar4 == 0) {\n            if (var_1h != '\\0') {\n                return '\\x01';\n            }\n            return var_1h;\n        }\n        var_1h._0_1_ = '\\x01';\n        if (arg_8h._3_1_ == '\\r') {\n            if (in_ECX[2] == 0) {\n                in_ECX[2] = 0;\n                in_ECX[3] = 0;\n                fcn.00404dc1();\n            }\n            uVar4 = 0;\n            break;\n        }\n        if (arg_8h._3_1_ == '\\n') {\n            return '\\x01';\n        }\n        iVar5 = *piVar3[3];\n        if (iVar5 < 2) {\n            uVar4 = piVar3[1] + 2;\n            if (piVar3[2] < uVar4) {\n                if (uVar4 < 0x41c2) {\n                    var_10h = uVar4 * 2;\n                }\n                else if (uVar4 < 0x2000000) {\n                    dVar2 = uVar4;\n                    if (uVar4 < 0) {\n                        dVar2 = dVar2 + *0x4b6568;\n                    }\n                    _var_10h = ROUND(dVar2 * *0x4b2750);\n                }\n                else if (uVar4 < 0x8000000) {\n                    dVar2 = uVar4;\n                    if (uVar4 < 0) {\n                        dVar2 = dVar2 + *0x4b6568;\n                    }\n                    _var_10h = ROUND(dVar2 * *0x4b2748);\n                }\n                else {\n                    dVar2 = uVar4;\n                    if (uVar4 < 0) {\n                        dVar2 = dVar2 + *0x4b6568;\n                    }\n                    _var_10h = ROUND(dVar2 * *0x4b2740);\n                }\n                piVar3[2] = var_10h;\n                if (var_10h == 0) {\n                    uVar4 = 0x10;\n                }\n                else {\n                    uVar4 = var_10h + 0xfU & 0xfffffff0;\n                }\n                piVar3[2] = uVar4;\n                iVar5 = fcn.0042010a(uVar4);\n                if (*piVar3 != 0) {\n                    fcn.0041faa0(iVar5, *piVar3, piVar3[1] + 1);\n                    fcn.0042017e(*piVar3);\n                }\n                goto code_r0x0040c428;\n            }\n        }\n        else {\n            *piVar3[3] = iVar5 + -1;\n            fcn.0040a6f8();\n            iVar5 = fcn.00403d82(piVar3[1] + 2);\n            piVar3[2] = iVar5;\n            iVar5 = fcn.0042010a(iVar5);\n            fcn.0041faa0(iVar5, *piVar3, piVar3[1] + 1);\ncode_r0x0040c428:\n            *piVar3 = iVar5;\n        }\n        *(piVar3[1] + *piVar3) = arg_8h._3_1_;\n        piVar3[1] = piVar3[1] + 1;\n        *(piVar3[1] + *piVar3) = 0;\n    } while( true );\n    do {\n        if (in_ECX[3] == in_ECX[2]) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)(*in_ECX, in_ECX[1], 0x10000, &var_14h, 0);\n            if ((iVar5 == 0) || (var_14h == 0)) break;\n            in_ECX[2] = var_14h;\n            in_ECX[3] = 0;\n        }\n        iVar5 = in_ECX[3];\n        uVar6 = uVar4 + 1;\n        *(&arg_8h + uVar4 + 3) = *(iVar5 + in_ECX[1]);\n        in_ECX[3] = iVar5 + 1;\n        uVar4 = uVar6;\n    } while (uVar6 == 0);\n    puVar1 = in_ECX + 4;\n    uVar6 = *puVar1;\n    *puVar1 = *puVar1 + uVar4;\n    in_ECX[5] = in_ECX[5] + CARRY4(uVar6, uVar4);\n    if ((uVar4 != 0) && (arg_8h._3_1_ != '\\n')) {\n        fcn.00404ee9(0xffffffff, 0xffffffff, 1);\n    }\n    return '\\x01';\n}\n",
        "token_count": 1694
    },
    "0040c530": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c530(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (arg_8h != NULL) {\n        if ((*arg_8h == 0x23) && (iVar2 = fcn.0042247b(arg_8h, 0x49dc90, 8),  iVar2 != 0)) {\n            iVar3 = 3;\n            arg_8h = arg_8h + 1;\n        }\n        uVar1 = *arg_8h;\n        while (uVar1 != 0) {\n            uVar1 = *arg_8h;\n            if (uVar1 < 0x3c) {\n                if (uVar1 == 0x22) {\n                    if (iVar3 == 2) {\n                        iVar3 = 0;\n                    }\n                    else if (iVar3 == 0) {\n                        iVar3 = 2;\n                    }\n                }\n                else if (uVar1 == 0x27) {\n                    if (iVar3 == 1) {\n                        iVar3 = 0;\n                    }\n                    else if (iVar3 == 0) {\n                        iVar3 = 1;\n                    }\n                }\n                else if (uVar1 == 0x3b) {\n                    if (iVar3 == 0) {\n                        *arg_8h = 0;\n                        return 1;\n                    }\n                    if (iVar3 == 3) {\n                        *arg_8h = 0;\n                        return 1;\n                    }\n                }\n            }\n            arg_8h = arg_8h + 1;\n            uVar1 = *arg_8h;\n        }\n        if ((iVar3 == 0) || (iVar3 == 3)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 422
    },
    "0040c94f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c94f(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 1;\n    var_4h = 1;\n    var_8h = in_ECX;\n    if (*(*(*(arg_8h + 4) + 4) + 8) == 0x7f) {\ncode_r0x0040c97b:\n        arg_8h = 0;\n        if (0 < iVar3) {\n            piVar4 = in_ECX + 0x160;\n            do {\n                if (*piVar4 == 0) {\n                    arg_8h_00 = 0x96;\n                    goto code_r0x00477ce7;\n                }\n                cVar1 = *(piVar4 + 9);\n                piVar2 = piVar4[1];\n                piVar5 = piVar2;\n                if (cVar1 != '\\0') {\n                    piVar5 = piVar2[0xc];\n                }\n                if (*piVar5 == 1) {\ncode_r0x0040c9bd:\n                    piVar4 = piVar2;\n                    if (cVar1 != '\\0') {\n                        piVar4 = piVar2[0xc];\n                    }\n                    if (piVar4[1] < *arg_ch) {\n                        piVar5 = piVar2;\n                        if (cVar1 != '\\0') {\n                            piVar5 = piVar2[0xc];\n                        }\n                        piVar4 = var_8h + 0x160;\n                        if (*arg_ch <= piVar5[2]) {\n                            arg_8h = arg_8h + 1;\n                            if (cVar1 != '\\0') {\n                                piVar2 = piVar2[0xc];\n                            }\n                            *arg_ch = piVar2[2];\n                            if (arg_8h == iVar3) {\n                                return;\n                            }\n                            goto code_r0x00477cc9;\n                        }\n                    }\n                    arg_8h_00 = 0x8f;\ncode_r0x00477ce7:\n                    fcn.0044d520(arg_8h_00, 0xffffffff);\n                    return;\n                }\n                piVar5 = piVar2;\n                if (cVar1 != '\\0') {\n                    piVar5 = piVar2[0xc];\n                }\n                if (*piVar5 == 2) goto code_r0x0040c9bd;\n                piVar5 = piVar2;\n                if (cVar1 != '\\0') {\n                    piVar5 = piVar2[0xc];\n                }\n                if (*piVar5 == 3) goto code_r0x0040c9bd;\ncode_r0x00477cc9:\n                fcn.0040d9f2();\n            } while (arg_8h < iVar3);\n        }\n    }\n    else {\n        var_18h = 0;\n        var_10h = 0;\n        var_ch = 1;\n        iVar3 = fcn.0040fa40(arg_8h, &var_4h, &var_18h, 0xffffffff);\n        if (-1 < iVar3) {\n            iVar3 = *(*(arg_8h + 4) + var_4h * 4);\n            if (*(iVar3 + 8) == 0x7f) {\n                iVar3 = fcn.0040cdb4();\n                if (iVar3 < 0) {\n                    iVar3 = 0;\n                }\n                fcn.00412570();\n                goto code_r0x0040c97b;\n            }\n            fcn.0044d520(0x72, *(iVar3 + 10));\n        }\n        fcn.00412570();\n    }\n    return;\n}\n",
        "token_count": 923
    },
    "0040ca8e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ca8e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0xc) == 4) {\n        if (arg_8h != 0) {\n            fcn.00407e53(arg_8h);\n            return;\n        }\n        fcn.0040c4cd();\n        return;\n    }\n    fcn.00412570();\n    *(in_ECX + 0xc) = 4;\n    iVar1 = fcn.0042010a(0x10);\n    if (arg_8h == 0) {\n        if (iVar1 != 0) {\n            uVar2 = fcn.0040d3d2();\n            goto code_r0x0040cac6;\n        }\n    }\n    else if (iVar1 != 0) {\n        uVar2 = fcn.0040caee(arg_8h);\n        goto code_r0x0040cac6;\n    }\n    uVar2 = 0;\ncode_r0x0040cac6:\n    *(in_ECX + 8) = uVar2;\n    return;\n}\n",
        "token_count": 270
    },
    "0040cf2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040cf2c(int32_t arg_8h, int32_t **arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    \n    if (arg_8h < 0) {\n        in_EAX = *(in_ECX + 0x98);\n        if ((in_EAX == 0xffffffff) || (*(in_ECX + 0x94) == -1)) goto code_r0x0040cf93;\n        *arg_10h = *(in_ECX + 0x94);\n    }\n    else {\n        if (((arg_8h < 3) || (*(in_ECX + 0x84) < arg_8h)) ||\n           (in_EAX = **(*(in_ECX + 0x74) + arg_8h * 4),  in_EAX == NULL)) goto code_r0x0040cf93;\n        in_EAX = in_EAX[1];\n        *arg_10h = arg_8h;\n    }\n    *arg_ch = in_EAX;\n    in_EAX = *(*(in_ECX + 0x60) + in_EAX * 4);\n    if (((*in_EAX != 0) && (iVar1 = *arg_10h,  2 < iVar1)) &&\n       ((iVar1 <= *(in_ECX + 0x84) && (in_EAX = *(*(in_ECX + 0x74) + iVar1 * 4),  *in_EAX != 0)))) {\n        return CONCAT31(in_EAX >> 8, 1);\n    }\ncode_r0x0040cf93:\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 395
    },
    "0040d380": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d380(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    if (((arg_14h != 0) && (arg_14h != 1)) && (arg_14h != 2)) {\n        if (arg_14h != 0x10) {\n            return 1;\n        }\n        arg_10h = arg_10h | 0x400;\n    }\n    fcn.0040d772(arg_8h, arg_ch, arg_10h);\n    return 1;\n}\n",
        "token_count": 136
    },
    "0040d420": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint16_t ** __cdecl fcn.0040d420(uint16_t **arg_8h, uint16_t **arg_ch)\n\n{\n    uint16_t **ppuVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    \n    if (arg_ch == NULL) {\n        arg_8h[7] = NULL;\n        arg_8h[6] = NULL;\n        return arg_8h;\n    }\n    fcn.0040d500(arg_8h, &arg_ch);\n    ppuVar1 = arg_ch;\n    puVar5 = arg_8h[1];\n    puVar2 = arg_ch[1];\n    if (puVar5 == NULL) {\n        if (puVar2 != NULL) goto code_r0x0040d4b5;\ncode_r0x0040d4df:\n        if (puVar5 != NULL) goto code_r0x0040d487;\n    }\n    else if (puVar2 == NULL) goto code_r0x0040d4df;\n    puVar4 = *arg_ch;\n    if (puVar5 < puVar2) {\n        iVar3 = fcn.0040b96c(puVar2);\n    }\n    else {\n        puVar2 = *arg_8h;\n        for (; puVar5 != NULL; puVar5 = puVar5 + -1) {\n            if (*puVar2 != *puVar4) {\n                iVar3 = (-(*puVar2 < *puVar4) & 0xfffffffe) + 1;\n                goto code_r0x0040d481;\n            }\n            puVar2 = puVar2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        iVar3 = 0;\n    }\ncode_r0x0040d481:\n    if (iVar3 < 0) {\ncode_r0x0040d4b5:\n        puVar5 = ppuVar1[6];\n        arg_8h[7] = ppuVar1;\n        arg_8h[6] = puVar5;\n        ppuVar1[6] = NULL;\n        return arg_8h;\n    }\n    if (iVar3 < 1) {\n        return ppuVar1;\n    }\ncode_r0x0040d487:\n    arg_8h[7] = ppuVar1[7];\n    arg_8h[6] = ppuVar1;\n    ppuVar1[7] = NULL;\n    return arg_8h;\n}\n",
        "token_count": 574
    },
    "0040d500": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040d500(uint16_t **arg_8h, uint16_t **arg_ch)\n\n{\n    uint16_t **ppuVar1;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    uint32_t in_EAX;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint var_10h;\n    uint16_t *var_ch;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    if (*arg_ch == NULL) {\n        return in_EAX & 0xffffff00;\n    }\n    if ((*0x4c23d0 & 1) == 0) {\n        *0x4c23d0 = *0x4c23d0 | 1;\n        fcn.0040d3d2();\n        fcn.00421b2a(0x471fb5);\n    }\n    *0x4c23f0 = 0;\n    *0x4c23ec = 0;\n    var_ch = 0x4c23d4;\n    var_8h = 0x4c23d4;\n    do {\n        while( true ) {\n            ppuVar1 = *arg_ch;\n            puVar8 = arg_8h[1];\n            puVar6 = ppuVar1[1];\n            if (puVar8 != NULL) break;\n            if (puVar6 == NULL) goto code_r0x00474d73;\ncode_r0x0040d5ec:\n            ppuVar1 = ppuVar1[6];\n            if (ppuVar1 == NULL) goto code_r0x0040d5b2;\n            puVar6 = ppuVar1[1];\n            if (puVar6 < puVar8) {\n                puVar8 = puVar6;\n            }\n            puVar5 = *ppuVar1;\n            puVar7 = *arg_8h;\n            var_4h = puVar8;\n            if (puVar8 != NULL) {\n                do {\n                    if (*puVar7 < *puVar5) goto code_r0x0040d706;\n                    if (*puVar7 != *puVar5) goto code_r0x0040d622;\n                    puVar7 = puVar7 + 1;\n                    puVar5 = puVar5 + 1;\n                    var_4h = var_4h + -1;\n                } while (var_4h != NULL);\n                puVar6 = ppuVar1[1];\n            }\n            if (puVar8 < puVar6) {\ncode_r0x0040d706:\n                *(*arg_ch + 0xc) = ppuVar1[7];\n                ppuVar1[7] = *arg_ch;\n                *arg_ch = ppuVar1;\n                if (ppuVar1[6] == NULL) goto code_r0x0040d5b2;\n            }\ncode_r0x0040d622:\n            *(var_ch + 0xc) = *arg_ch;\n            var_ch = *arg_ch;\n            *arg_ch = *(var_ch + 0xc);\n        }\n        if (puVar6 == NULL) {\ncode_r0x00474d73:\n            if (puVar8 == NULL) goto code_r0x0040d566;\n        }\n        else {\ncode_r0x0040d566:\n            if (puVar8 < puVar6) {\n                puVar5 = *arg_8h;\n                puVar7 = *ppuVar1;\n                for (; puVar6 != NULL; puVar6 = puVar6 + -1) {\n                    if (*puVar5 != *puVar7) {\n                        iVar4 = (-(*puVar5 < *puVar7) & 0xfffffffe) + 1;\n                        goto code_r0x0040d59a;\n                    }\n                    puVar5 = puVar5 + 1;\n                    puVar7 = puVar7 + 1;\n                }\n                iVar4 = 0;\n            }\n            else {\n                puVar6 = *ppuVar1;\n                puVar5 = *arg_8h;\n                for (puVar7 = puVar8; puVar7 != NULL; puVar7 = puVar7 + -1) {\n                    if (*puVar5 != *puVar6) {\n                        iVar4 = (-(*puVar5 < *puVar6) & 0xfffffffe) + 1;\n                        goto code_r0x0040d59a;\n                    }\n                    puVar5 = puVar5 + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                iVar4 = 0;\n            }\ncode_r0x0040d59a:\n            if (iVar4 < 0) goto code_r0x0040d5ec;\n            if (iVar4 < 1) {\n                arg_ch._3_1_ = 1;\n                goto code_r0x0040d5b5;\n            }\n        }\n        ppuVar1 = ppuVar1[7];\n        if (ppuVar1 == NULL) {\ncode_r0x0040d5b2:\n            arg_ch._3_1_ = 0;\ncode_r0x0040d5b5:\n            uVar2 = *(*arg_ch + 0xc);\n            *(var_8h + 0xe) = uVar2;\n            *(var_ch + 0xc) = *(*arg_ch + 0xe);\n            *(*arg_ch + 0xc) = *0x4c23f0;\n            *(*arg_ch + 0xe) = *0x4c23ec;\n            return uVar2 & 0xffffff00 | arg_ch._3_1_;\n        }\n        puVar6 = ppuVar1[1];\n        if (puVar8 < ppuVar1[1]) {\n            puVar6 = puVar8;\n        }\n        puVar5 = *arg_8h;\n        puVar7 = *ppuVar1;\n        for (puVar3 = puVar6; puVar3 != NULL; puVar3 = puVar3 + -1) {\n            if (*puVar7 != *puVar5) {\n                if (*puVar5 <= *puVar7) goto code_r0x0040d6ad;\n                goto code_r0x0040d6d5;\n            }\n            puVar7 = puVar7 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        if (puVar6 < puVar8) {\ncode_r0x0040d6d5:\n            *(*arg_ch + 0xe) = ppuVar1[6];\n            ppuVar1[6] = *arg_ch;\n            *arg_ch = ppuVar1;\n            if (ppuVar1[7] == NULL) goto code_r0x0040d5b2;\n        }\ncode_r0x0040d6ad:\n        *(var_8h + 0xe) = *arg_ch;\n        var_8h = *arg_ch;\n        *arg_ch = *(var_8h + 0xe);\n    } while( true );\n}\n",
        "token_count": 1608
    },
    "0040d805": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d805(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX[3];\n    if (iVar1 < 2) {\n        iVar1 = arg_8h[1];\n        in_ECX[1] = iVar1;\n        if (in_ECX[2] < iVar1 + 1U) {\n            iVar3 = fcn.0040c91c(iVar1 + 1U);\n            in_ECX[2] = iVar3;\n            if (*in_ECX != 0) {\n                fcn.0042017e(*in_ECX);\n            }\n            iVar3 = fcn.0042010a(-(in_ECX[2] * 2 >> 0x20 != 0) | in_ECX[2] * 2);\n            *in_ECX = iVar3;\n            *(iVar3 + iVar1 * 2) = 0;\n        }\n        fcn.0041faa0(*in_ECX, *arg_8h, in_ECX[1] * 2 + 2);\n    }\n    else {\n        *in_ECX[3] = iVar1 + -1;\n        in_ECX[1] = arg_8h[1];\n        in_ECX[2] = arg_8h[2];\n        *in_ECX = *arg_8h;\n        piVar2 = arg_8h[3];\n        in_ECX[3] = piVar2;\n        *piVar2 = *piVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "0040d89e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d89e(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (in_ECX != arg_8h) {\n        if ((in_ECX[3] == 4) && (arg_8h[3] == 4)) {\n            fcn.0040c935(arg_8h[2]);\n        }\n        else {\n            iVar1 = in_ECX[2];\n            if (iVar1 != 0) {\n                fcn.00405cd3();\n                fcn.0042017e(iVar1);\n                in_ECX[2] = 0;\n            }\n            iVar1 = in_ECX[3];\n            if (iVar1 < 0xc) {\n                if (iVar1 == 0xb) {\n                    fcn.0042017e(*(*in_ECX + 4));\n                    fcn.0042017e(*in_ECX);\n                }\n                else if (iVar1 == 5) {\n                    fcn.0041e3cc();\n                }\n                else if (iVar1 == 8) {\n                    if (*in_ECX != 0) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*in_ECX);\n                        fcn.0042017e(*in_ECX);\n                    }\n                }\n                else if ((iVar1 == 10) && (*in_ECX != 0)) {\n                    fcn.0044aa9c(*in_ECX);\n                }\n            }\n            else if (iVar1 == 0xc) {\n                if (*in_ECX != 0) {\n                    fcn.0043a56f(*in_ECX);\n                }\n            }\n            else if (0xc < iVar1) {\n                if (iVar1 < 0xf) {\n                    if (*in_ECX != 0) {\n                        fcn.00401926(*in_ECX);\n                    }\n                }\n                else if ((iVar1 == 0xf) && (*in_ECX != 0)) {\n                    fcn.0043a599(*in_ECX);\n                }\n            }\n            *in_ECX = 0;\n            in_ECX[3] = 1;\n            fcn.004113a0(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "0040d937": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d937(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX[0x3b] == 1) {\n        iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n        arg_8h_00 = 0x81;\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) != 0x7f) {\n            var_10h = 0;\n            var_8h = 0;\n            var_4h = 1;\n            iVar2 = fcn.0040fa40(arg_8h, arg_ch, &var_10h, 0xffffffff);\n            if (iVar2 < 0) {\n                fcn.00412570();\n                return;\n            }\n            iVar2 = *(*in_ECX + 4);\n            fcn.0040d89e(&var_10h);\n            iVar3 = *(in_ECX + iVar2 + 8);\n            if (*(in_ECX + iVar2 + 0xd) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x10) = 1;\n            fcn.00412570();\n        }\n        iVar2 = *(*(arg_8h + 4) + *arg_ch * 4);\n        if (*(iVar2 + 8) == 0x7f) {\n            return;\n        }\n        iVar1 = *(iVar2 + 10);\n        arg_8h_00 = 0x72;\n    }\n    fcn.0044d520(arg_8h_00, iVar1);\n    return;\n}\n",
        "token_count": 465
    },
    "0040d9f2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d9f2(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = param_1[1];\n        iVar2 = *(iVar1 + 0x30);\n        if (iVar1 != 0) {\n            fcn.0044d28e(iVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    if (*(param_1 + 2) == '\\0') {\n        iVar1 = param_1[1];\n        iVar2 = *(iVar1 + 0x30);\n        if (iVar1 != 0) {\n            fcn.00412570();\n            fcn.00412570();\n            fcn.0042017e(iVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    else {\n        *(param_1 + 9) = 1;\n    }\n    *param_1 = *param_1 + -1;\n    return;\n}\n",
        "token_count": 266
    },
    "0040da40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040da40(uint noname_0, int32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t *arg_8h;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    double *pdVar8;\n    int32_t in_ECX;\n    int32_t iVar9;\n    uint extraout_ECX;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    uint arg_8h_03;\n    int32_t iVar10;\n    double *arg_8h_04;\n    float10 fVar11;\n    float10 fVar12;\n    ulong uVar13;\n    int64_t iVar14;\n    int32_t var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    double *var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    double *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX + 0x160;\n    _var_28h = _var_28h & 0xffffffff00000000;\n    var_20h = 0;\n    var_1ch = 1;\n    if (*(in_ECX + 0x169) == '\\0') {\n        iVar10 = *(in_ECX + 0x164);\n    }\n    else {\n        iVar10 = *(*(in_ECX + 0x164) + 0x30);\n    }\n    arg_8h_04 = *(iVar10 + 0xc);\n    var_8h = arg_8h_04;\n    if (*(iVar10 + 0x2c) == 8) {\n        iVar9 = fcn.0045bf80(arg_8h_04, iVar10 + 0x20, &var_28h);\n        if ((-1 < iVar9) && (*(iVar10 + 0x2c) == 8)) {\n            fcn.0040d89e(&var_28h);\n            *arg_ch = *(iVar10 + 4) + 1;\n            goto code_r0x0040db94;\n        }\ncode_r0x00478fa1:\n        fcn.0040d9f2();\n        goto code_r0x0040db94;\n    }\n    if (*(iVar10 + 0x1c) == 5) {\n        iVar9 = fcn.0040218e(1);\n        iVar3 = fcn.0040cdb4();\n        if (iVar9 + -1 <= iVar3) goto code_r0x00478fa1;\n        iVar9 = fcn.0040cdb4();\n        fcn.00412570();\n        *(iVar10 + 0x20) = iVar9 + 1;\n        *(iVar10 + 0x2c) = 1;\n        fcn.0040346e();\n        uVar4 = fcn.0040cdb4();\n        fcn.00403489(uVar4);\n        iVar9 = fcn.004114a0(iVar10 + 0x10, 1, 0);\n        if (iVar9 != 0) {\n            uVar4 = fcn.004114a0(iVar10 + 0x10, 0, 0);\n            fcn.0040d89e(uVar4);\n            *arg_ch = *(iVar10 + 4) + 1;\n            goto code_r0x0040db94;\n        }\ncode_r0x0047958e:\n        *arg_ch = *(iVar10 + 4) + 1;\n        goto code_r0x0040db94;\n    }\n    if (*(iVar10 + 0x1c) == 0xf) {\n        iVar9 = *(*(*(iVar10 + 0x10) + 4) + 8);\n        iVar3 = fcn.0040cdb4();\n        if (iVar9 + -1 <= iVar3) {\n            fcn.00412570();\n            *(arg_8h_04 + 0xc) = 1;\n            *arg_8h_04 = 0;\n            goto code_r0x00478fa1;\n        }\n        iVar9 = fcn.0040cdb4();\n        fcn.00412570();\n        *(iVar10 + 0x2c) = 1;\n        *(iVar10 + 0x20) = iVar9 + 1;\n        uVar4 = fcn.0040cdb4();\n        uVar4 = fcn.00444e71(uVar4);\n        cVar2 = fcn.0041d5f6(0x29);\n        if (cVar2 == '\\0') {\ncode_r0x00478f80:\n            fcn.0040d89e(uVar4);\n        }\n        else {\n            fcn.004084a6();\n            cVar2 = fcn.0041f885();\n            if (cVar2 == '\\0') goto code_r0x00478f80;\n            if (*(iVar10 + 0x1c) == 0xf) {\n                fcn.0044a76d(*(iVar10 + 0x10));\n            }\n            else {\n                fcn.0044a76d(0);\n            }\n        }\n        goto code_r0x0040dc27;\n    }\n    puVar1 = iVar10 + 0x20;\n    if (*(arg_8h_04 + 0xc) == 1) {\n        if (*(iVar10 + 0x2c) == 1) {\n            uVar6 = *arg_8h_04;\n            uVar7 = *puVar1;\n            var_ch = uVar7 + uVar6;\n            _var_18h = _var_18h & 0xffffffff | (uVar7 >> 0x1f) << 0x20;\n            var_8h = uVar7 + uVar6;\n            iVar9 = (uVar7 >> 0x1f) + (uVar6 >> 0x1f) + CARRY4(uVar7, uVar6);\n            if (var_ch >> 0x1f == iVar9) {\n                *arg_8h_04 = var_ch;\n            }\n            else {\n                *(arg_8h_04 + 0xc) = 2;\n                *arg_8h_04 = var_8h;\n                *(arg_8h_04 + 4) = iVar9;\n            }\n        }\n        else {\n            if (*(iVar10 + 0x2c) != 2) goto code_r0x0040dc58;\n            uVar6 = *arg_8h_04;\n            uVar7 = *puVar1;\n            iVar9 = *(iVar10 + 0x24);\n            *arg_8h_04 = uVar6 + *puVar1;\n            *(arg_8h_04 + 4) = (uVar6 >> 0x1f) + iVar9 + CARRY4(uVar6, uVar7);\n            *(arg_8h_04 + 0xc) = 2;\n        }\n    }\n    else {\n    // switch table (10 cases) at 0x40dc9c\n        switch(*(arg_8h_04 + 0xc)) {\n        case 2:\n            if ((*(iVar10 + 0x2c) != 1) && (*(iVar10 + 0x2c) != 2)) goto code_r0x0040dc58;\n            uVar13 = fcn.0040d00b();\n            uVar6 = *arg_8h_04;\n            *arg_8h_04 = *arg_8h_04 + uVar13;\n            *(arg_8h_04 + 4) = *(arg_8h_04 + 4) + CARRY4(uVar6, uVar13) + (uVar13 >> 0x20);\n            break;\n        case 3:\n            fVar12 = fcn.00412620();\n            *arg_8h_04 = fVar12 + *arg_8h_04;\n            break;\n        case 4:\n        case 9:\n        case 10:\ncode_r0x0040dc58:\n            fcn.0041df8a();\n            fVar12 = fcn.00412620();\n            *arg_8h_04 = fVar12 + *arg_8h_04;\n            break;\n        case 7:\n            var_8h = *arg_8h_04;\n            if (*(iVar10 + 0x2c) == 1) {\n                iVar9 = fcn.0040cdb4();\n                *arg_8h_04 = var_8h + iVar9;\n            }\n            else {\n                iVar9 = fcn.0040d00b();\n                *arg_8h_04 = var_8h + iVar9;\n            }\n            break;\n        case 0xb:\n            if (*(iVar10 + 0x2c) != 0xb) goto code_r0x0040dc58;\n            iVar3 = fcn.0044be8a();\n            iVar9 = **var_8h;\n            iVar5 = fcn.0042010a(iVar3 + iVar9);\n            fcn.0041faa0(iVar5, (*var_8h)[1], **var_8h);\n            uVar4 = fcn.0044be8a();\n            uVar4 = fcn.0044be47(extraout_ECX, uVar4);\n            fcn.0041faa0(**var_8h + iVar5, uVar4);\n            fcn.0042017e((*var_8h)[1]);\n            (*var_8h)[1] = iVar5;\n            **var_8h = iVar3 + iVar9;\n            arg_8h_04 = var_8h;\n        }\n    }\n    pdVar8 = iVar10 + 0x20;\n    if (*(arg_8h_04 + 1) != NULL) {\n        fcn.00401926(*(arg_8h_04 + 1));\n        *(arg_8h_04 + 1) = NULL;\n    }\n    if (var_20h != 0) {\n        fcn.00401926(var_20h);\n        var_20h = 0;\n    }\n    if ((4 < var_1ch) && (var_1ch - 5U < 0xb)) {\n    // switch table (11 cases) at 0x479666\n        switch(*((var_1ch - 5U) * 4 + 0x479666)) {\n        case 0x4790f5:\n            if (var_28h != 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_28h);\n                fcn.0042017e(var_28h);\n            }\n            break;\n        case 0x47911a:\n            if (var_28h != 0) {\n                fcn.0044aa9c(var_28h);\n            }\n            break;\n        case 0x479133:\n            fcn.0041e3cc();\n            break;\n        case 0x479143:\n            fcn.0042017e(*(var_28h + 4));\n            fcn.0042017e(var_28h);\n            break;\n        case 0x479164:\n            if (var_28h != 0) {\n                fcn.0043a56f(var_28h);\n            }\n            break;\n        case 0x47917d:\n            if (var_28h != 0) {\n                fcn.0043a599(var_28h);\n            }\n            break;\n        case 0x479196:\n            if (var_28h != 0) {\n                fcn.00401926(var_28h);\n            }\n        }\n    }\n    fVar12 = 0;\n    var_1ch = 3;\n    _var_28h = fVar12;\n    iVar9 = *(iVar10 + 0x2c);\n    iVar3 = *(iVar9 * 0x40 + 0x4bb81c);\n    if (iVar3 == 3) {\n        if (iVar9 == 1) {\ncode_r0x0040db3e:\n            fVar11 = *pdVar8;\n        }\n        else {\n            fVar11 = fVar12;\n    // switch table (9 cases) at 0x4796b6\n            switch(iVar9) {\n            case 2:\n                fVar11 = *pdVar8;\n                break;\n            case 3:\n                fVar11 = *pdVar8;\n                break;\n            case 4:\n                cVar2 = fcn.0040d075();\n                if (cVar2 == '\\0') {\n                    fVar12 = fcn.00422d13(arg_8h_00);\n                }\n                else {\n                    fcn.0041bcea(8);\n                    fVar12 = _var_18h;\n                }\n                _var_18h = fVar12;\n                if (var_1ch == 3) {\n                    fVar12 = _var_28h;\n                    fVar11 = _var_18h;\n                }\n                else if (var_1ch - 1U < 10) {\n    // switch table (10 cases) at 0x4796da\n                    switch(*((var_1ch - 1U) * 4 + 0x4796da)) {\n                    case 0x4792c8:\n                        cVar2 = fcn.0040d075();\n                        if (cVar2 == '\\0') {\n                            fVar12 = fcn.00422d13(arg_8h_01);\n                            fVar11 = _var_18h;\n                        }\n                        else {\n                            fcn.0041bcea(8);\n                            fVar12 = CONCAT44(var_ch, var_10h);\n                            fVar11 = _var_18h;\n                        }\n                        break;\n                    case 0x4792f7:\n                        fVar12 = var_28h;\n                        fVar11 = _var_18h;\n                        break;\n                    case 0x479319:\n                        fVar12 = _var_28h;\n                        fVar11 = _var_18h;\n                        break;\n                    case 0x479327:\n                        fVar12 = *(var_28h + 4);\n                        fVar11 = _var_18h;\n                        break;\n                    case 0x479338:\n                        if (var_28h == '\\0') {\n                            fVar12 = 0;\n                            fVar11 = _var_18h;\n                        }\n                        else {\n                            fVar12 = 1;\n                            fVar11 = _var_18h;\n                        }\n                        break;\n                    case 0x479355:\n                        goto code_r0x00479355;\n                    }\n                }\n                else {\ncode_r0x00479355:\n                    fVar12 = 0;\n                    fVar11 = _var_18h;\n                }\n                break;\n            case 7:\n                goto code_r0x0040db3e;\n            case 9:\n                if (*pdVar8 != '\\0') {\n                    fVar11 = 1;\n                }\n                break;\n            case 10:\n                fVar11 = *(*pdVar8 + 4);\n            }\n        }\n        if (fVar11 < fVar12) {\ncode_r0x0047957c:\n            cVar2 = fcn.0041ee93();\n            if (cVar2 == '\\0') goto code_r0x00478fa1;\n            goto code_r0x0047958e;\n        }\n    }\n    else {\n    // switch table (9 cases) at 0x479692\n        switch(iVar3) {\n        case 1:\n        case 9:\n            iVar9 = fcn.0040cdb4();\n            iVar3 = fcn.0040cdb4();\n            if (iVar9 < iVar3) goto code_r0x0047957c;\n            break;\n        case 2:\n            iVar14 = fcn.0040d00b();\n            iVar9 = iVar14 >> 0x20;\n            _var_18h = _var_18h & 0xffffffff | iVar14 << 0x20;\n            uVar13 = fcn.0040d00b();\n            iVar3 = uVar13 >> 0x20;\n            if ((iVar9 < iVar3) || ((iVar9 <= iVar3 && (var_14h < uVar13)))) goto code_r0x0047957c;\n            break;\n        case 4:\n            fcn.004084a6();\n            iVar9 = var_20h;\n            fcn.004084a6();\n            iVar9 = fcn.0041dfb6(iVar9, 0);\n            if (iVar9 < 0) goto code_r0x0047957c;\n            break;\n        case 7:\n            uVar6 = fcn.0044be63();\n            uVar7 = fcn.0044be63();\n            if (uVar6 < uVar7) goto code_r0x0047957c;\n        }\n    }\n    iVar9 = *(iVar10 + 0x1c);\n    iVar3 = *((*(arg_8h_04 + 0xc) + iVar9 * 4) * 4 + 0x4bb810);\n    if (iVar3 == 1) {\ncode_r0x0040db68:\n        if (iVar9 == 1) {\n            pdVar8 = *(iVar10 + 0x10);\n            var_8h = pdVar8;\n        }\n        else {\n    // switch table (10 cases) at 0x479702\n            switch(iVar9) {\n            case 2:\n            case 7:\n                pdVar8 = *(iVar10 + 0x10);\n                break;\n            case 3:\n                pdVar8 = fcn.00471de0();\n                break;\n            case 4:\n                cVar2 = fcn.0040d075();\n                if (cVar2 == '\\0') {\n                    pdVar8 = fcn.00422241(arg_8h_02);\n                }\n                else {\n                    fcn.0041bcea(0x10);\n                    pdVar8 = var_18h;\n                }\n                break;\n            default:\ncode_r0x004794b6:\n                pdVar8 = NULL;\n                break;\n            case 9:\n                pdVar8 = *(iVar10 + 0x10) != '\\0';\n                var_8h = pdVar8;\n                break;\n            case 10:\n                pdVar8 = *(*(iVar10 + 0x10) + 4);\n                break;\n            case 0xb:\n                if (8 < **(iVar10 + 0x10)) goto code_r0x004794b6;\n                fcn.0044863c(&var_18h);\n                pdVar8 = var_18h;\n            }\n        }\n        if (*(arg_8h_04 + 0xc) == 0x1) {\ncode_r0x0040db85:\n            var_18h = *arg_8h_04;\n        }\n        else {\n    // switch table (10 cases) at 0x47972a\n            switch(*(arg_8h_04 + 0xc)) {\n            case 0x2:\n            case 0x7:\n                goto code_r0x0040db85;\n            case 0x3:\n                var_18h = fcn.00471de0();\n                break;\n            case 0x4:\n                cVar2 = fcn.0040d075();\n                if (cVar2 == '\\0') {\n                    var_18h = fcn.00422241(arg_8h_03);\n                }\n                else {\n                    fcn.0041bcea(0x10);\n                }\n                break;\n            default:\ncode_r0x00479556:\n                var_18h = NULL;\n                break;\n            case 0x9:\n                var_18h = *arg_8h_04 != '\\0';\n                break;\n            case 0xa:\n                var_18h = (*arg_8h_04)[1];\n                break;\n            case 0xb:\n                if (8 < **arg_8h_04) goto code_r0x00479556;\n                fcn.0044863c(&var_18h);\n            }\n        }\n        if (var_18h <= pdVar8) {\n            *arg_ch = *(iVar10 + 4) + 1;\n            goto code_r0x0040db94;\n        }\ncode_r0x0040dbb7:\n        if (*(var_4h + 9) != '\\0') {\n            iVar10 = var_4h[1];\n            iVar9 = *(iVar10 + 0x30);\n            if (iVar10 != 0) {\n                fcn.0044d28e(iVar10);\n            }\n            var_4h[1] = iVar9;\n            *(var_4h + 9) = 0;\n        }\n        if (*(var_4h + 2) == '\\0') {\n            iVar10 = var_4h[1];\n            iVar9 = *(iVar10 + 0x30);\n            if (iVar10 != 0) {\n                fcn.00412570();\n                fcn.00412570();\n                fcn.0042017e(iVar10);\n            }\n            *var_4h = *var_4h + -1;\n            var_4h[1] = iVar9;\n            *(var_4h + 9) = 0;\n        }\n        else {\n            *var_4h = *var_4h + -1;\n            *(var_4h + 9) = 1;\n        }\n    }\n    else {\n    // switch table (8 cases) at 0x40dc7c\n        switch(iVar3) {\n        case 2:\n            iVar14 = fcn.0040d00b();\n            iVar9 = iVar14 >> 0x20;\n            _var_18h = _var_18h & 0xffffffff | iVar14 << 0x20;\n            uVar13 = fcn.0040d00b();\n            iVar3 = uVar13 >> 0x20;\n            if ((iVar9 <= iVar3) && ((iVar9 < iVar3 || (var_14h <= uVar13)))) break;\n            goto code_r0x0040dbb7;\n        case 3:\n            fVar12 = fcn.00412620();\n            _var_18h = fVar12;\n            fVar12 = fcn.00412620();\n            if (((fVar12 < _var_18h) << 8 | (fVar12 == _var_18h) << 0xe) == 0) goto code_r0x0040dbb7;\n            break;\n        case 4:\n            fcn.004084a6();\n            arg_8h = *(arg_8h_04 + 1);\n            fcn.004084a6();\n            iVar9 = fcn.0041dfb6(arg_8h, 0);\n            if (iVar9 < 0) goto code_r0x0040dbb7;\n            break;\n        case 7:\n            uVar6 = fcn.0044be63();\n            uVar7 = fcn.0044be63();\n            if (uVar6 < uVar7) goto code_r0x0040dbb7;\n            break;\n        case 9:\n            goto code_r0x0040db68;\n        }\ncode_r0x0040dc27:\n        *arg_ch = *(iVar10 + 4) + 1;\n    }\ncode_r0x0040db94:\n    if (var_20h != 0) {\n        fcn.00401926(var_20h);\n        var_20h = 0;\n    }\n    if ((4 < var_1ch) && (var_1ch - 5U < 0xb)) {\n    // switch table (11 cases) at 0x479752\n        switch(*((var_1ch - 5U) * 4 + 0x479752)) {\n        case 0x4795c1:\n            if (var_28h != 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_28h);\n                fcn.0042017e(var_28h);\n            }\n            break;\n        case 0x4795e3:\n            if (var_28h != 0) {\n                fcn.0044aa9c(var_28h);\n            }\n            break;\n        case 0x4795f9:\n            fcn.0041e3cc();\n            break;\n        case 0x479606:\n            fcn.0042017e(*(var_28h + 4));\n            fcn.0042017e(var_28h);\n            break;\n        case 0x479624:\n            if (var_28h != 0) {\n                fcn.0043a56f(var_28h);\n            }\n            break;\n        case 0x47963a:\n            if (var_28h != 0) {\n                fcn.0043a599(var_28h);\n            }\n            break;\n        case 0x479650:\n            if (var_28h != 0) {\n                fcn.00401926(var_28h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 5699
    },
    "0040dcd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040dcd0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    ulong *puVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    bool bVar8;\n    int32_t iVar9;\n    ulong *puVar10;\n    uint *puVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    char cVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    piVar4 = arg_ch;\n    var_ch = 1;\n    var_20h = NULL;\n    var_18h = 0;\n    var_14h = 1;\n    iVar9 = fcn.0040fa40(arg_8h, &var_ch, &var_20h, 0xffffffff);\n    if (iVar9 < 0) {\n        fcn.00414430();\n        return;\n    }\n    if (var_14h == 9) {\n        if (var_20h == '\\0') goto code_r0x0040dd29;\n        goto code_r0x0040dd8c;\n    }\n    if (10 < var_14h - 1) goto code_r0x0040dd29;\n    // switch table (11 cases) at 0x40e1c0\n    switch(*((var_14h - 1) * 4 + 0x40e1c0)) {\n    case 0x40dd29:\n        goto code_r0x0040dd29;\n    case 0x40dd88:\n        puVar11 = var_20h;\n        break;\n    case 0x40e17d:\n        puVar11 = var_20h | var_1ch;\n        break;\n    case 0x478b0f:\n        if (CONCAT44(var_1ch, var_20h) != 0.0) goto code_r0x0040dd8c;\n        goto code_r0x0040dd29;\n    case 0x478b26:\n        puVar11 = *(var_18h + 4);\n        break;\n    case 0x478b38:\n        puVar11 = *var_20h;\n    }\n    if (puVar11 == NULL) {\ncode_r0x0040dd29:\n        uVar13 = 0;\n    }\n    else {\ncode_r0x0040dd8c:\n        uVar13 = 1;\n    }\n    var_1h._0_1_ = uVar13;\n    if (var_18h != 0) {\n        fcn.00401926(var_14h);\n        var_18h = 0;\n    }\n    if ((var_14h != 9) && (uVar15 = var_14h - 5,  uVar15 < 0xb)) {\n        switch(*(uVar15 * 4 + 0x478de2)) {\n        case 0x478b67:\n            if (var_20h != NULL) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_20h);\n                fcn.0042017e(var_20h);\n            }\n            break;\n        case 0x478b86:\n            if (var_20h != NULL) {\n                fcn.0044aa9c(uVar15);\n            }\n            break;\n        case 0x478b9b:\n            fcn.0041e3cc();\n            break;\n        case 0x478ba8:\n            fcn.0042017e(var_20h[1]);\n            fcn.0042017e(var_20h);\n            break;\n        case 0x478bc3:\n            if (var_20h != NULL) {\n                fcn.0043a56f(uVar15);\n            }\n            break;\n        case 0x478bd8:\n            if (var_20h != NULL) {\n                fcn.0043a599(uVar15);\n            }\n            break;\n        case 0x478bed:\n            if (var_20h != NULL) {\n                fcn.00401926(uVar15);\n            }\n        }\n    }\n    iVar9 = *(arg_8h + 4);\n    piVar2 = *(iVar9 + var_ch * 4);\n    if ((*(piVar2 + 2) == 0) && (*piVar2 == 5)) {\n        iVar16 = var_ch + 1;\n        if (*(*(iVar9 + 4 + var_ch * 4) + 8) == 0x7f) {\n            uVar15 = uVar13;\n            var_4ch = *arg_ch + -1;\n            bVar8 = false;\n            var_40h = 0;\n            var_38h = 0;\n            var_34h = 1;\n            var_30h = 0;\n            var_28h = 0;\n            var_24h = 1;\n            var_ch = 0;\n            var_50h = 0;\n            if (uVar13 != 0) {\n                var_ch = *arg_ch;\n            }\n            arg_ch = NULL;\ncode_r0x0040dff7:\n            do {\n                do {\n                    iVar9 = *piVar4;\n                    *piVar4 = iVar9 + 1;\n                    if ((((*0x4c22f8 < iVar9) || (iVar9 < 1)) || (iVar16 = iVar9 * 0x10 + *0x4c232c,  iVar16 == 0)) ||\n                       (uVar15 >> 8 != '\\0')) {\n                        *piVar4 = var_ch;\n                        if (*(var_8h + 0x169) == '\\0') {\n                            puVar11 = fcn.0042010a(0x38);\n                            if (puVar11 == NULL) {\n                                puVar11 = NULL;\n                            }\n                            else {\n                                puVar11[1] = var_4ch;\n                                puVar11[2] = var_48h;\n                                puVar11[3] = var_44h;\n                                *puVar11 = 0;\n                                puVar11[6] = 0;\n                                fcn.004113a0(&var_40h);\n                                puVar11[10] = 0;\n                                fcn.004113a0(&var_30h);\n                            }\n                            puVar11[0xc] = *(var_8h + 0x164);\n                            *(var_8h + 0x164) = puVar11;\n                        }\n                        else {\n                            fcn.0045d1da(&var_50h);\n                            *(var_8h + 0x169) = 0;\n                        }\n                        *(var_8h + 0x160) = *(var_8h + 0x160) + 1;\ncode_r0x0040e0cd:\n                        fcn.00412570();\n                        fcn.00412570();\n                        return;\n                    }\n                    ppiVar5 = *(iVar16 + 4);\n                } while (*(*ppiVar5 + 2) != 0);\n                iVar6 = **ppiVar5;\n                cVar14 = uVar15;\n                if (iVar6 == 8) {\n                    if (arg_ch == NULL) {\n                        uVar15 = CONCAT11(1, cVar14);\n                        var_48h = iVar9;\n                        if ((cVar14 == '\\0') && (!bVar8)) {\n                            var_ch = iVar9;\n                        }\n                    }\n                    else {\n                        arg_ch = arg_ch + -1;\n                    }\n                    goto code_r0x0040dff7;\n                }\n                if (iVar6 != 4) {\n                    if (iVar6 == 6) {\n                        if (arg_ch != iVar6 + -6) goto code_r0x0040dff7;\n                        if (!bVar8) {\n                            bVar8 = true;\n                            if (cVar14 == '\\0') {\n                                var_ch = iVar9 + 1;\n                            }\n                            goto code_r0x0040dff7;\n                        }\n                    }\n                    else {\n                        if ((iVar6 + -6 != 1) || (arg_ch != NULL)) goto code_r0x0040dff7;\n                        if (!bVar8) {\n                            if (cVar14 == '\\0') {\n                                *(var_8h + 0xf4) = iVar9;\n                                var_10h = 1;\n                                iVar9 = fcn.00405322(iVar16, &var_10h, &var_1h);\n                                if (iVar9 < 0) goto code_r0x0040e0cd;\n                                piVar2 = *(*(iVar16 + 4) + var_10h * 4);\n                                if ((*(piVar2 + 2) != 0) || (*piVar2 != 5)) {\n                                    *(var_8h + 0xf4) = *piVar4 + -1;\n                                    fcn.0044d520(0xa1, *(*(*(iVar16 + 4) + var_10h * 4) + 10));\n                                    goto code_r0x0040e0cd;\n                                }\n                                if (*(*(*(iVar16 + 4) + 4 + var_10h * 4) + 8) != 0x7f) {\n                                    *(var_8h + 0xf4) = *piVar4 + -1;\n                                    fcn.0044d520(0x72, *(*(*(iVar16 + 4) + var_10h * 4) + 10));\n                                    goto code_r0x0040e0cd;\n                                }\n                                uVar15 = uVar15 & 0xffffff00 | var_1h;\n                                if (var_1h != 0) {\n                                    var_ch = *piVar4;\n                                }\n                            }\n                            goto code_r0x0040dff7;\n                        }\n                    }\n                    fcn.0044d520(0x76, 0xffffffff);\n                    goto code_r0x0040e0cd;\n                }\n                uVar12 = 1;\n                if (1 < *(iVar16 + 8)) {\n                    do {\n                        piVar2 = ppiVar5[1];\n                        if (((*(piVar2 + 2) == 0) && (*piVar2 == 5)) && (*(ppiVar5[2] + 2) == 0x7f)) {\n                            arg_ch = arg_ch + 1;\n                            break;\n                        }\n                        uVar12 = uVar12 + 1;\n                        ppiVar5 = ppiVar5 + 1;\n                    } while (uVar12 < *(iVar16 + 8));\n                }\n            } while( true );\n        }\n        if (uVar13 != 0) {\n            var_20h = 0x49dd90;\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = 0;\n            do {\n                puVar3 = *(iVar9 + iVar16 * 4);\n                iVar16 = iVar16 + 1;\n                iVar9 = var_1ch;\n                if (var_18h == var_14h) {\n                    var_14h = var_14h * 2;\n                    if (var_14h < 8) {\n                        var_14h = 8;\n                    }\n                    iVar9 = fcn.0042010a(-(var_14h * 4 >> 0x20 != 0) | var_14h * 4);\n                    if ((var_1ch != 0) && (var_18h != 0)) {\n                        fcn.0041faa0(iVar9, var_1ch, var_18h << 2);\n                        fcn.0042017e(var_1ch);\n                    }\n                }\n                var_1ch = iVar9;\n                puVar10 = fcn.0042010a(0xc);\n                if (puVar10 == NULL) {\n                    puVar10 = NULL;\n                }\n                else {\n                    *(puVar10 + 1) = *(puVar3 + 1);\n                    iVar1 = *(puVar10 + 1);\n                    *(puVar10 + 10) = *(puVar3 + 10);\n                    if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n                        puVar11 = fcn.0042010a(0x10);\n                        if (puVar11 == NULL) {\n                            *puVar10 = 0;\n                        }\n                        else {\n                            puVar7 = *puVar3;\n                            *puVar11 = *puVar7;\n                            puVar11[1] = puVar7[1];\n                            puVar11[2] = puVar7[2];\n                            piVar4 = puVar7[3];\n                            puVar11[3] = piVar4;\n                            *piVar4 = *piVar4 + 1;\n                            *puVar10 = puVar11;\n                        }\n                    }\n                    else if (iVar1 == 0x10) {\n                        *puVar10 = *puVar3;\n                        *(puVar10 + 4) = *(puVar3 + 4);\n                    }\n                    else if (iVar1 == 0x20) {\n                        *puVar10 = *puVar3;\n                    }\n                    else {\n                        *puVar10 = *puVar3;\n                    }\n                }\n                *(var_1ch + var_18h * 4) = puVar10;\n                iVar9 = *(arg_8h + 4);\n                var_18h = var_18h + 1;\n                puVar3 = *(iVar9 + iVar16 * 4);\n            } while (*(puVar3 + 1) != 0x7f);\n            iVar9 = var_1ch;\n            if (var_18h == var_14h) {\n                var_14h = var_14h * 2;\n                if (var_14h < 8) {\n                    var_14h = 8;\n                }\n                iVar9 = fcn.0042010a(-(var_14h * 4 >> 0x20 != 0) | var_14h * 4);\n                if ((var_1ch != 0) && (var_18h != 0)) {\n                    fcn.0041faa0(iVar9, var_1ch, var_18h << 2);\n                    fcn.0042017e(var_1ch);\n                }\n            }\n            var_1ch = iVar9;\n            puVar10 = fcn.0042010a(0xc);\n            if (puVar10 == NULL) {\n                puVar10 = NULL;\n            }\n            else {\n                *(puVar10 + 1) = *(puVar3 + 1);\n                iVar1 = *(puVar10 + 1);\n                *(puVar10 + 10) = *(puVar3 + 10);\n                if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n                    puVar11 = fcn.0042010a(0x10);\n                    if (puVar11 == NULL) {\n                        *puVar10 = 0;\n                    }\n                    else {\n                        puVar7 = *puVar3;\n                        *puVar11 = *puVar7;\n                        puVar11[1] = puVar7[1];\n                        puVar11[2] = puVar7[2];\n                        piVar4 = puVar7[3];\n                        puVar11[3] = piVar4;\n                        *piVar4 = *piVar4 + 1;\n                        *puVar10 = puVar11;\n                    }\n                }\n                else if (iVar1 == 0x10) {\n                    *puVar10 = *puVar3;\n                    *(puVar10 + 4) = *(puVar3 + 4);\n                }\n                else if (iVar1 == 0x20) {\n                    *puVar10 = *puVar3;\n                }\n                else {\n                    *puVar10 = *puVar3;\n                }\n            }\n            *(var_1ch + var_18h * 4) = puVar10;\n            var_18h = var_18h + 1;\n            fcn.00414320(&var_20h, arg_ch);\n            uVar15 = 0;\n            var_20h = 0x49dd90;\n            if (var_18h != 0) {\n                do {\n                    piVar4 = *(var_1ch + uVar15 * 4);\n                    if (piVar4 != NULL) {\n                        if (((*(piVar4 + 2) < 0x40) && (0x2f < *(piVar4 + 2))) && (puVar11 = *piVar4,  puVar11 != NULL))\n                        {\n                            *puVar11[3] = *puVar11[3] + -1;\n                            if (*puVar11[3] == 0) {\n                                fcn.0042017e(*puVar11);\n                                fcn.0042017e(puVar11[3]);\n                            }\n                            fcn.0042017e(puVar11);\n                        }\n                        fcn.0042017e(piVar4);\n                    }\n                    *(var_1ch + uVar15 * 4) = 0;\n                    uVar15 = uVar15 + 1;\n                } while (uVar15 < var_18h);\n            }\n            var_18h = 0;\n            fcn.0042017e(var_1ch);\n            return;\n        }\n    }\n    else {\n        fcn.0044d520(0xa1, *(piVar2 + 10));\n    }\n    return;\n}\n",
        "token_count": 4093
    },
    "0040e1f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e1f0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t in_ECX;\n    char16_t *pcVar9;\n    int32_t **ppiVar10;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t iVar11;\n    uint32_t unaff_ESI;\n    code *pcVar12;\n    int32_t iVar13;\n    uchar *unaff_EDI;\n    int64_t iVar14;\n    double dVar15;\n    uint *in_stack_ffffff0c;\n    char16_t *in_stack_ffffff10;\n    uint uVar16;\n    uchar *arg_8h_00;\n    int32_t in_stack_ffffff40;\n    uchar auStack180 [4];\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    ushort *puStack164;\n    uint uStack160;\n    uint uStack156;\n    uint *puStack152;\n    uint uStack148;\n    int32_t iStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack116;\n    uchar auStack108 [4];\n    int32_t iStack104;\n    uint uStack100;\n    int32_t *piStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar auStack84 [16];\n    uchar auStack68 [4];\n    uchar auStack64 [4];\n    uchar auStack60 [16];\n    uchar auStack44 [12];\n    uchar auStack32 [28];\n    \n    dVar15 = unaff_ESI;\n    if (0xf3b < *(in_ECX + 0xec)) {\n        *0x4c10b6 = 0;\n        fcn.0044d520(0x9a, 0xffffffff);\n        return 0xffffffff;\n    }\n    iVar3 = *(in_ECX + 0xec) + 1;\n    *(in_ECX + 0xec) = iVar3;\n    if (iVar3 == 1) {\n        fcn.0041ecee();\n    }\n    cVar2 = *(in_ECX + 0x100);\n    *(in_ECX + 0x148) = 0;\n    pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n    do {\n        if ((cVar2 != '\\0') || (*(in_ECX + 0x148) != '\\0')) goto code_r0x0040e4e7;\n        if (((*0x4c10b7 == '\\0') || (*(in_ECX + 0x149) != '\\0')) && ((*0x4c1848 == '\\0' || (*(in_ECX + 0xfc) != 0)))) {\n            iVar3 = (*pcVar12)(&stack0xffffff50, 0, 0, 0);\n            while (iVar3 != 0) {\n                if (puStack164 == 0x12) {\n                    *(in_ECX + 0x100) = 1;\n                    *(in_ECX + 0xfc) = 1;\n                    break;\n                }\n                dVar15 = ZEXT48(&stack0xffffff58);\n                unaff_EDI = 0x40e62a;\n                iVar3 = fcn.0041f381(&stack0xffffff58);\n                if (iVar3 == 0) {\n                    unaff_EDI = &stack0xffffff54;\n                    iVar3 = fcn.0041ed1a(unaff_EDI);\n                    if (iVar3 == 0) {\n                        (*_sym.imp.USER32.dll_TranslateMessage)();\n                        (*_sym.imp.USER32.dll_DispatchMessageW)(&stack0xffffff4c);\n                    }\n                }\n                iVar3 = (*pcVar12)(&stack0xffffff50, 0, 0, 0);\n            }\n            if (*0x4c10c0 == '\\x01') {\n                *0x4c10c5 = '\\0';\n                *0x4c10c0 = '\\0';\n                *(in_ECX + 0xfc) = 1;\n            }\n            if (*(in_ECX + 0xfc) == 1) {\n                uStack172 = 0;\n                fcn.00402f0e(&stack0xffffff54);\ncode_r0x0040e4e7:\n                *(in_ECX + 0x148) = 0;\n                if (*(in_ECX + 0xec) == 1) {\n                    fcn.0040322e();\n                    if (*(in_ECX + 0x100) != '\\x01') {\n                        fcn.0041ec33();\n                        (*_sym.imp.USER32.dll_LockWindowUpdate)();\n                        (*_sym.imp.USER32.dll_DestroyWindow)(*0x4c10e8);\n                        pcVar12 = _sym.imp.USER32.dll_GetMessageW;\n                        iVar3 = (*_sym.imp.USER32.dll_GetMessageW)(&stack0xffffffd4, 0, 0, 0);\n                        while (0 < iVar3) {\n                            (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xffffffc4);\n                            (*_sym.imp.USER32.dll_DispatchMessageW)(&stack0xffffffc0);\n                            iVar3 = (*pcVar12)(&stack0xffffffbc, 0, 0, 0);\n                        }\n                    }\n                }\n                else {\n                    *(in_ECX + 0xec) = *(in_ECX + 0xec) + -1;\n                }\n                return 0;\n            }\n        }\n        if (*0x4c1104 != 0) {\n            iVar3 = **0x4c1108;\n            dVar15 = 2.310364100986566e-317;\n            fcn.0044d869();\n            uVar8 = *(in_ECX + 0x1cc);\n            uVar6 = 0;\n            if (uVar8 != 0) {\n                ppiVar10 = *(in_ECX + 0x1c8);\n                do {\n                    if ((**ppiVar10 != NULL) && (***ppiVar10 == iVar3)) break;\n                    uVar6 = uVar6 + 1;\n                    ppiVar10 = ppiVar10 + 1;\n                } while (uVar6 < uVar8);\n            }\n            pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n            if (uVar6 == uVar8) goto code_r0x0040e2af;\n            uVar8 = **(*(in_ECX + 0x1c8) + uVar6 * 4) + 8;\n            dVar15 = uVar8;\n            iVar3 = fcn.0041cf79(uVar8);\n            unaff_EDI = **(*(in_ECX + 0x1c8) + uVar6 * 4) + 0x18;\n            fcn.0040c935(unaff_EDI);\n            fcn.00401000(*(iVar3 + 0x10) + 1, 1, 0);\n            pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n            goto code_r0x0040e4da;\n        }\ncode_r0x0040e2af:\n        if ((*0x4c10c5 == '\\x01') && (*0x4c10b7 == '\\0')) {\n            dVar15 = 4.940656458412465e-323;\n            unaff_EDI = 0x475b1b;\n            (*_sym.imp.KERNEL32.dll_Sleep)();\n            goto code_r0x0040e4da;\n        }\n        if ((*(in_ECX + 0x480) != 0) && (*0x4c2360 == '\\0')) {\n            piVar4 = *(in_ECX + 0x478);\n            ppiVar10 = in_ECX + 0x478;\n            *0x4c2360 = 1;\n            in_ECX = in_stack_ffffff40;\n            do {\n                while( true ) {\n                    if (piVar4 == NULL) {\n                        do {\n                            piVar4 = *ppiVar10;\n                            while( true ) {\n                                dVar15 = ZEXT48(piVar4);\n                                if (piVar4 == NULL) {\n                                    *0x4c2360 = '\\0';\n                                    pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                                    in_stack_ffffff40 = in_ECX;\n                                    if (in_stack_ffffff10 < 1) goto code_r0x0040e324;\n                                    goto code_r0x0040e4da;\n                                }\n                                if (*(*piVar4 + 0x11) != '\\0') break;\n                                piVar4 = piVar4[1];\n                            }\n                            fcn.0044d8e9(&stack0xffffff04);\n                        } while( true );\n                    }\n                    if (*(*piVar4 + 0x11) == '\\0') break;\ncode_r0x0040e550:\n                    piVar4 = piVar4[1];\n                }\n                uVar8 = *(*piVar4 + 0x14);\n                uVar6 = (*_sym.imp.WINMM.dll_timeGetTime)();\n                uVar7 = uVar6 - uVar8;\n                iVar3 = 0;\n                if (uVar8 < 0x80000000) {\n                    if (uVar6 < 0x80000000) {\ncode_r0x0040e53a:\n                        iVar3 = uVar7 >> 0x1f;\n                    }\n                }\n                else if (0x7fffffff < uVar6) goto code_r0x0040e53a;\n                iVar13 = *piVar4;\n                if ((iVar3 < 0) || ((iVar3 < 1 && (uVar7 < *(iVar13 + 0x18))))) goto code_r0x0040e550;\n                uVar16 = (*_sym.imp.WINMM.dll_timeGetTime)();\n                *(iVar13 + 0x14) = uVar16;\n                iVar3 = fcn.0041cf79(*piVar4);\n                in_stack_ffffff10 = NULL;\n                *(*piVar4 + 0x10) = 1;\n                in_stack_ffffff0c = 0x1;\n                fcn.00401000(*(iVar3 + 0x10) + 1, 1, 0);\n                *(*piVar4 + 0x10) = 0;\n                piVar4 = piVar4[1];\n            } while( true );\n        }\ncode_r0x0040e324:\n        if (((*0x4c181c != '\\0') && (*(in_ECX + 0x484) != '\\x01')) && (*0x4c1848 != '\\x01')) {\n            uStack160 = 0;\n            uStack156 = 8;\n            puStack164 = fcn.0042010a(0x10);\n            dVar15 = 1.976262583364986e-323;\n            *puStack164 = 0;\n            unaff_EDI = 0x40e384;\n            puStack152 = fcn.0042010a(4);\n            if (puStack152 == NULL) {\n                puStack152 = NULL;\n            }\n            else {\n                *puStack152 = 1;\n            }\n            do {\n                if (*0x4c183c == 0) {\n                    if (*0x4c181c == '\\0') {\n                        if ((*0x4c197c == 0) && (*0x4c2364 < 100)) {\n                            *0x4c2364 = *0x4c2364 + 1;\n                            (*_sym.imp.KERNEL32.dll_Sleep)();\n                        }\n                        else {\n                            (*_sym.imp.KERNEL32.dll_Sleep)();\n                        }\n                    }\n                    *piStack96 = *piStack96 + -1;\n                    if (*piStack96 == 0) {\n                        fcn.0042017e();\n                        fcn.0042017e();\n                    }\n                    goto code_r0x0040e3d7;\n                }\n                iVar3 = **0x4c1840;\n                in_stack_ffffff40 = iVar3;\n                fcn.00468b20(iVar3);\n                fcn.00446417();\n                if (iVar3 != 0) {\n                    in_stack_ffffff40 = extraout_ECX;\n                    fcn.00468ba4();\n                }\n                *0x4c2364 = 0;\n            } while ((iStack104 == 0) || (iVar3 = fcn.0041cf79(&stack0xffffff94),  iVar3 == 0));\n            uStack148 = 0;\n            uStack140 = 0;\n            uStack136 = 1;\n            fcn.00412570();\n            uStack136 = 1;\n            uStack148 = uStack116;\n            fcn.0040caee(L\"@GUI_CTRLID\");\n            fcn.0040d380(&fcn.0040e1f0::arg_8h, &stack0xffffff68, 1, 2);\n            fcn.00405cd3();\n            fcn.00412570();\n            uStack156 = 7;\n            uStack168 = uStack116;\n            fcn.0040caee(L\"@GUI_WINHANDLE\");\n            fcn.0040d380(&stack0xffffffe0, &stack0xffffff54, 1, 2);\n            fcn.00405cd3();\n            fcn.00412570();\n            in_stack_ffffff10 = L\"@GUI_CTRLHANDLE\";\n            uStack176 = 7;\n            fcn.0040caee(L\"@GUI_CTRLHANDLE\");\n            in_stack_ffffff0c = 0x2;\n            dVar15 = CONCAT44(1, &stack0xffffff40);\n            unaff_EDI = &stack0xffffffac;\n            fcn.0040d380(unaff_EDI, &stack0xffffff40, 1, 2);\n            fcn.00405cd3();\n            *(in_ECX + 0x484) = 1;\n            fcn.00401000(*(iVar3 + 0x10) + 1, 1, 0);\n            *(in_ECX + 0x484) = 0;\n            fcn.00412570();\n            fcn.0044542e();\n            pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n            goto code_r0x0040e4da;\n        }\ncode_r0x0040e3d7:\n        cVar2 = fcn.0040e7b0();\n        pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n        if (cVar2 == '\\x01') goto code_r0x0040e4da;\n        if ((*0x4c1990 != '\\0') && (*(in_ECX + 0x485) != '\\x01')) {\n            fcn.0040d3d2();\n            do {\n                do {\n                    cVar2 = fcn.004456dc(&stack0xffffff6c);\n                    if (cVar2 == '\\0') {\n                        fcn.00405cd3();\n                        goto code_r0x0040e3f3;\n                    }\n                } while (iStack144 == 0);\n                in_stack_ffffff10 = 0x475d37;\n                iVar3 = fcn.0041cf79(&stack0xffffff6c);\n            } while (iVar3 == 0);\n            uStack100 = 0;\n            uStack92 = 0;\n            uStack88 = 1;\n            fcn.00412570();\n            in_stack_ffffff10 = L\"@TRAY_ID\";\n            uStack88 = 1;\n            uStack100 = uStack156;\n            fcn.0040caee(L\"@TRAY_ID\");\n            in_stack_ffffff0c = 0x2;\n            dVar15 = CONCAT44(1, &stack0xffffff98);\n            unaff_EDI = &stack0xffffffbc;\n            fcn.0040d380(unaff_EDI, &stack0xffffff98, 1, 2);\n            fcn.00405cd3();\n            *(in_ECX + 0x485) = 1;\n            fcn.00401000(*(iVar3 + 0x10) + 1, 1, 0);\n            *(in_ECX + 0x485) = 0;\n            fcn.00412570();\n            fcn.0044542e();\n            pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n            goto code_r0x0040e4da;\n        }\ncode_r0x0040e3f3:\n        iVar3 = *(in_ECX + 0xfc);\n        if (iVar3 == 7) {\n            puStack152 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(in_ECX + 0x470), 10);\n            pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n            if (puStack152 != 0x102) {\n                (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(*(in_ECX + 0x470), &stack0xffffff68);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(in_ECX + 0x470));\n                dVar15 = ZEXT48(puStack152);\ncode_r0x00475e59:\n                fcn.00402f0e(&stack0xffffff04);\ncode_r0x00475e6b:\n                *(in_ECX + 0x148) = 1;\n                *(in_ECX + 0xfc) = 0;\n                pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n            }\n            goto code_r0x0040e4da;\n        }\n        if ((iVar3 == 8) || (iVar3 == 9)) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(10);\n            if (*(in_ECX + 0x468) != 0) {\n                iVar14 = fcn.0041e3a5();\n                if ((-1 < iVar14) && ((0xffffffff < iVar14 || (*(in_ECX + 0x468) <= iVar14)))) {\n                    if (*(in_ECX + 0x474) != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(in_ECX + 0x474));\n                        *(in_ECX + 0x474) = 0;\n                    }\n                    dVar15 = 0.0;\n                    goto code_r0x00475e59;\n                }\n            }\n            iVar3 = 0;\n            unaff_EDI = unaff_EDI & 0xffffff;\n            dVar15 = 0.0;\n            if (*(in_ECX + 0xfc) == 8) {\n                fcn.00446f5b(&stack0xffffff03);\n                pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                if (unaff_EDI >> 0x18 == '\\x01') {\n                    iVar3 = SUB84(dVar15, 0);\ncode_r0x004761cb:\n                    iVar13 = *(in_ECX + 0x474);\n                    arg_8h_00 = 0xcccccccc;\n                    if (iVar13 != 0) {\n                        (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(iVar13, &stack0xffffff38);\n                        if ((arg_8h_00 == 0x103) &&\n                           (iVar13 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(in_ECX + 0x474), 0), \n                           pcVar12 = _sym.imp.USER32.dll_PeekMessageW,  iVar13 != 0)) goto code_r0x0040e4da;\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(in_ECX + 0x474));\n                        *(in_ECX + 0x474) = 0;\n                        iVar13 = extraout_ECX_00;\n                    }\n                    if (*(in_ECX + 0xfc) == 8) {\n                        dVar15 = iVar3;\n                        if (iVar3 < 0) {\n                            dVar15 = dVar15 + *0x4b6568;\n                        }\n                        arg_8h_00 = &stack0xffffff04;\n                        fcn.0045f5bc(arg_8h_00);\n                    }\n                    else {\n                        iVar13 = 0;\n                        fcn.00407ba9(arg_8h_00, 0);\n                    }\n                    *(in_ECX + 0x148) = 1;\n                    *(in_ECX + 0xfc) = 0;\n                    (*_sym.imp.KERNEL32.dll_Sleep)(*(in_ECX + 0x314), arg_8h_00, iVar13);\n                    pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                }\n            }\n            else {\n                pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                if (*(in_ECX + 0xfc) == 9) goto code_r0x004761cb;\n            }\n            goto code_r0x0040e4da;\n        }\n        if ((((iVar3 != 2) && (iVar3 != 3)) && (iVar3 != 4)) && ((iVar3 != 5 && (iVar3 != 6)))) {\n            *(in_ECX + 0xf4) = arg_8h;\n            iVar3 = arg_8h + 1;\n            if ((*0x4c22f8 < arg_8h) || ((arg_8h < 1 || (iVar13 = arg_8h * 0x10 + *0x4c232c,  iVar13 == 0)))) {\n                *(in_ECX + 0xfc) = 1;\n                pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                arg_8h = iVar3;\n                goto code_r0x0040e4da;\n            }\n            iVar11 = 0;\n            pcVar9 = 0x1;\n            uVar16 = 0;\n            iVar1 = **(iVar13 + 4);\n            in_stack_ffffff10 = NULL;\n            iVar5 = *(iVar1 + 8);\n            if (iVar5 == 0) {\n                arg_8h = iVar3;\n                fcn.0040e7e0(iVar13, &fcn.0040e1f0::arg_8h);\n            }\n            else {\n                arg_8h = iVar3;\n    // switch table (127 cases) at 0x40e710\n                switch(iVar5) {\n                case 1:\n                    iVar3 = fcn.004144e0(0, iVar13, &stack0xffffff10, &stack0xffffff14);\n                    break;\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 0xb:\n                case 0xc:\n                case 0xd:\n                case 0xe:\n                case 0xf:\n                case 0x10:\n                case 0x11:\n                case 0x12:\n                case 0x13:\n                case 0x14:\n                case 0x15:\n                case 0x16:\n                case 0x17:\n                case 0x18:\n                case 0x19:\n                case 0x1a:\n                case 0x1b:\n                case 0x1c:\n                case 0x1d:\n                case 0x1e:\n                case 0x1f:\n                case 0x20:\n                case 0x21:\n                case 0x22:\n                case 0x23:\n                case 0x24:\n                case 0x25:\n                case 0x26:\n                case 0x27:\n                case 0x28:\n                case 0x29:\n                case 0x2a:\n                case 0x2b:\n                case 0x2c:\n                case 0x2d:\n                case 0x2e:\n                case 0x2f:\n                case 0x30:\n                case 0x31:\n                case 0x32:\n                case 0x33:\n                case 0x36:\n                case 0x37:\n                case 0x38:\n                case 0x39:\n                case 0x3a:\n                case 0x3b:\n                case 0x3c:\n                case 0x3d:\n                case 0x3e:\n                case 0x3f:\n                case 0x40:\n                case 0x41:\n                case 0x42:\n                case 0x43:\n                case 0x44:\n                case 0x45:\n                case 0x46:\n                case 0x47:\n                case 0x48:\n                case 0x49:\n                case 0x4a:\n                case 0x4b:\n                case 0x4c:\n                case 0x4d:\n                case 0x4e:\n                case 0x4f:\n                case 0x50:\n                case 0x51:\n                case 0x52:\n                case 0x53:\n                case 0x54:\n                case 0x55:\n                case 0x56:\n                case 0x57:\n                case 0x58:\n                case 0x59:\n                case 0x5a:\n                case 0x5b:\n                case 0x5c:\n                case 0x5d:\n                case 0x5e:\n                case 0x5f:\n                case 0x60:\n                case 0x61:\n                case 0x62:\n                case 99:\n                case 100:\n                case 0x65:\n                case 0x66:\n                case 0x67:\n                case 0x68:\n                case 0x69:\n                case 0x6a:\n                case 0x6b:\n                case 0x6c:\n                case 0x6d:\n                case 0x6e:\n                case 0x6f:\n                case 0x70:\n                case 0x71:\n                case 0x72:\n                case 0x73:\n                case 0x74:\n                case 0x75:\n                case 0x76:\n                case 0x77:\n                case 0x78:\n                case 0x79:\n                case 0x7a:\n                case 0x7b:\n                case 0x7c:\n                case 0x7d:\n                case 0x7e:\n                    iVar3 = fcn.0040fa40(iVar13, &stack0xffffff10, &stack0xffffff14, 0xffffffff);\n                    break;\n                case 0x34:\n                    iVar3 = fcn.00413680(0, iVar13, &stack0xffffff10, &stack0xffffff14, &stack0xffffff3f);\n                    break;\n                case 0x35:\n                    fcn.0045ea97();\n                    cVar2 = fcn.0045cff8();\n                    if (cVar2 == '\\0') {\n                        fcn.0044d520(0xa7, *(iVar1 + 10));\n                        fcn.00414430();\n                        pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                        goto code_r0x0040e4da;\n                    }\n                    uVar8 = fcn.0045ea97();\n                    dVar15 = uVar8;\n                    iVar3 = fcn.0045e2fb(iVar13, &stack0xffffff10, &stack0xffffff04);\n                    break;\n                case 0x7f:\n                    goto code_r0x0040e4bb;\n                default:\n                    fcn.0040ea00(iVar13);\n                    goto code_r0x0040e4a7;\n                }\n                if ((-1 < iVar3) && (iVar3 = *(*(iVar13 + 4) + unaff_EDI * 4),  *(iVar3 + 8) != 0x7f)) {\n                    fcn.0044d520(0x72, *(iVar3 + 10));\n                    fcn.00414430();\n                    pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                    goto code_r0x0040e4da;\n                }\n            }\ncode_r0x0040e4a7:\n            pcVar9 = in_stack_ffffff10;\n            if (in_stack_ffffff0c != NULL) {\n                *in_stack_ffffff0c[3] = *in_stack_ffffff0c[3] + -1;\n                if (*in_stack_ffffff0c[3] == 0) {\n                    fcn.0042017e(*in_stack_ffffff0c);\n                    fcn.0042017e(in_stack_ffffff0c[3]);\n                    pcVar9 = in_stack_ffffff10;\n                }\n                fcn.0042017e(in_stack_ffffff0c);\n                in_stack_ffffff0c = NULL;\n            }\n            iVar11 = SUB84(dVar15, 0);\n            in_stack_ffffff10 = pcVar9;\ncode_r0x0040e4bb:\n            pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n            if (4 < pcVar9) {\n                iVar3 = pcVar9 + -5;\n    // switch table (11 cases) at 0x4762df\n                switch(iVar3) {\n                case 0:\n                    fcn.0041e3cc();\n                    pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                    break;\n                case 3:\n                    if (iVar11 != 0) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar11);\n                        fcn.0042017e(uVar16);\n                        pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                    }\n                    break;\n                case 5:\n                    if (iVar11 != 0) {\n                        fcn.0044aa9c(iVar3);\n                        pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                    }\n                    break;\n                case 6:\n                    fcn.0042017e(*(iVar11 + 4));\n                    fcn.0042017e(uVar16);\n                    pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                    break;\n                case 7:\n                    if (iVar11 != 0) {\n                        fcn.0043a56f(iVar3);\n                        pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                    }\n                    break;\n                case 8:\n                case 9:\n                    if (iVar11 != 0) {\n                        fcn.00401926(iVar3);\n                        pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                    }\n                    break;\n                case 10:\n                    if (iVar11 != 0) {\n                        fcn.0043a599(iVar3);\n                        pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n                    }\n                }\n            }\n            goto code_r0x0040e4da;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(10);\n        if (*(in_ECX + 0x310) != 0) {\n            iVar14 = fcn.0041e3a5();\n            if ((-1 < iVar14) && ((0xffffffff < iVar14 || (*(in_ECX + 0x310) <= iVar14)))) {\n                if (*(in_ECX + 0xfc) != 2) {\n                    dVar15 = 0.0;\n                    goto code_r0x00475e59;\n                }\n                goto code_r0x00475e6b;\n            }\n        }\n        pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n    // switch table (4 cases) at 0x47630b\n        switch(*(in_ECX + 0xfc)) {\n        case 3:\n            iVar3 = fcn.00401dce(1);\n            break;\n        case 4:\n            iVar3 = fcn.00401dce(1);\n            goto code_r0x00476063;\n        case 5:\n            iVar3 = fcn.00468a48();\n            break;\n        case 6:\n            iVar3 = fcn.00468a48();\ncode_r0x00476063:\n            if (iVar3 < 0) goto code_r0x00476080;\n            pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n            if (iVar3 < 1) goto code_r0x004760b9;\n        default:\n            goto code_r0x0040e4da;\n        }\n        if (iVar3 < 0) {\ncode_r0x00476080:\n            fcn.0044d7e4(-iVar3, 0);\n            fcn.00402f0e(&stack0xfffffefc);\n        }\n        pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n        if (iVar3 != 0) {\n            if (0 < iVar3) {\ncode_r0x004760b9:\n                if ((*(in_ECX + 0xfc) == 5) || (*(in_ECX + 0xfc) == 3)) {\n                    uVar16 = **(in_ECX + 0x1f8);\n                    uStack148 = 0;\n                    uStack140 = 0;\n                    uStack136 = 1;\n                    fcn.00412570();\n                    uStack136 = 7;\n                    uStack148 = uVar16;\n                    fcn.0045d12a(&stack0xffffff6c, 0);\n                    fcn.00412570();\n                }\n            }\n            *(in_ECX + 0x148) = 1;\n            *(in_ECX + 0xfc) = 0;\n            fcn.00448355();\n            pcVar12 = _sym.imp.USER32.dll_PeekMessageW;\n        }\ncode_r0x0040e4da:\n        cVar2 = *(in_ECX + 0x100);\n    } while( true );\n}\n",
        "token_count": 7624
    },
    "0040e7b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e7b0(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int16_t iVar2;\n    uint32_t in_EAX;\n    uint extraout_ECX;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint8_t uVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    ulong uVar11;\n    uint var_60h;\n    uint *var_5ch;\n    uint32_t var_50h;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if ((*(param_1 + 0x188) == 0) || (*(param_1 + 0x4ac) == '\\x01')) {\n        uVar8 = in_EAX & 0xffffff00;\n    }\n    else {\n        *(param_1 + 0x4ac) = 1;\n        *(param_1 + 0x4ac) = 1;\n        var_10h = 0;\n        var_8h = NULL;\n        fcn.0044d15f(*(param_1 + 0x18c));\n        fcn.00440fe1();\n        fcn.004113a0(*var_5ch);\n        iVar9 = var_5ch[1];\n        fcn.004084a6();\n        var_ch = fcn.0041cf79(*(iVar9 + 8));\n        uVar11 = fcn.00405554(*(var_ch + 0x10));\n        var_4h = uVar11;\n        *(param_1 + 0xf4) = extraout_ECX;\n        iVar9 = 3;\n        if (0 < *((uVar11 >> 0x20) + 0x14)) {\n            puVar7 = var_5ch + 2;\n            do {\n                iVar4 = *(var_4h + 4);\n                ppiVar3 = iVar4 + iVar9 * 4;\n                iVar2 = *(*(iVar4 + iVar9 * 4) + 8);\n                while (var_14h = puVar7,  iVar2 == 0) {\n                    if (((*(ppiVar3[1] + 2) != 0x33) && (**ppiVar3 == *ppiVar3[1])) ||\n                       ((**ppiVar3 != 0x24 && (**ppiVar3 != 0x1e)))) {\n                        fcn.0044d520(0x91, *(*(*(var_4h + 4) + 4 + iVar9 * 4) + 10));\n                        uVar6 = 0;\n                        goto code_r0x00476682;\n                    }\n                    ppiVar1 = ppiVar3 + 1;\n                    ppiVar3 = ppiVar3 + 1;\n                    iVar9 = iVar9 + 1;\n                    iVar2 = *(*ppiVar1 + 2);\n                }\n                iVar10 = iVar9 + 1;\n                if (*(*(iVar4 + 4 + iVar9 * 4) + 8) == 0x41) {\n                    iVar10 = iVar9 + 2;\n                    iVar9 = 0;\n                    piVar5 = iVar4 + iVar10 * 4;\ncode_r0x00476473:\n                    for (; iVar2 = *(*piVar5 + 8),  iVar2 == 0x47; piVar5 = piVar5 + 1) {\n                        iVar9 = iVar9 + 1;\n                        iVar10 = iVar10 + 1;\n                    }\n                    if (iVar2 == 0x48) {\n                        iVar9 = iVar9 + -1;\n                        if (iVar9 < 0) goto code_r0x0047648f;\n                    }\n                    else if ((iVar2 == 0x40) && (iVar9 == 0)) goto code_r0x0047648f;\n                    iVar10 = iVar10 + 1;\n                    piVar5 = piVar5 + 1;\n                    goto code_r0x00476473;\n                }\ncode_r0x0047648f:\n                fcn.0041baef(*puVar7);\n                uVar11 = CONCAT44(var_ch, var_4h);\n                var_10h = var_10h + 1;\n                puVar7 = puVar7 + 1;\n                iVar9 = iVar10 + 1;\n            } while (var_10h < *(var_ch + 0x14));\n            var_8h = NULL;\n            var_14h = puVar7;\n        }\n        var_4h = uVar11;\n        fcn.0040109f(*((uVar11 >> 0x20) + 0x10));\n        iVar9 = 3;\n        var_14h = 0x1;\n        if (0 < *(var_ch + 0x14)) {\ncode_r0x00476510:\n            uVar8 = 0;\n            ppiVar3 = *(var_4h + 4) + iVar9 * 4;\n            iVar2 = *(*ppiVar3 + 2);\n            while (iVar2 == 0) {\n                if (**ppiVar3 == 0x24) {\ncode_r0x00476539:\n                    iVar9 = iVar9 + 1;\n                    ppiVar3 = ppiVar3 + 1;\n                }\n                else if (**ppiVar3 == 0x1e) {\n                    uVar8 = 0x100;\n                    goto code_r0x00476539;\n                }\n                iVar2 = *(*ppiVar3 + 2);\n            }\n            var_1ch = 1;\n            iVar4 = 0;\n            var_20h = *(var_4h + 4) + iVar9 * 4;\n            piVar5 = var_20h + 1;\ncode_r0x0047655f:\n            for (; iVar2 = *(*piVar5 + 8),  iVar2 == 0x47; piVar5 = piVar5 + 1) {\n                iVar4 = iVar4 + 1;\n                var_1ch = var_1ch + 1;\n            }\n            if (iVar2 == 0x48) {\n                iVar4 = iVar4 + -1;\n                if (iVar4 < 0) goto code_r0x0047657b;\n            }\n            else if ((iVar2 == 0x40) && (iVar4 == 0)) goto code_r0x0047657b;\n            var_1ch = var_1ch + 1;\n            piVar5 = piVar5 + 1;\n            goto code_r0x0047655f;\n        }\ncode_r0x00476633:\n        fcn.0040caee(0x4b2fa8);\n        fcn.0040d380(&var_30h, (var_44h != 6) - 1 & var_50h, 0, 1);\n        fcn.00405cd3();\n        fcn.00401000(*(var_ch + 0x10) + 1, 0, 0);\n        fcn.00401188();\n        uVar6 = 1;\ncode_r0x00476682:\n        fcn.00412570();\n        fcn.004404c9();\n        uVar8 = fcn.004404c9();\n        *(param_1 + 0x4ac) = 0;\n        uVar8 = uVar8 & 0xffffff00 | uVar6;\n    }\n    return uVar8;\ncode_r0x0047657b:\n    if (var_10h < var_14h) {\n        var_18h = iVar9 + 2;\n        var_30h = 0;\n        var_28h = 0;\n        var_24h = 1;\n        iVar4 = fcn.0040fa40(var_4h, &var_18h, &var_30h, var_1ch + iVar9);\n        if (iVar4 < 0) {\n            fcn.00412570();\n            uVar6 = 0;\n            goto code_r0x00476682;\n        }\n        fcn.0040d380(**(*(var_4h + 4) + iVar9 * 4), &var_30h, uVar8 | 0x200, 1);\n        fcn.00412570();\n    }\n    else {\n        var_18h = uVar8;\n        fcn.0040d380(**var_20h, *var_8h, uVar8 | 0x200, 1);\n    }\n    var_8h = var_8h + 1;\n    iVar9 = iVar9 + var_1ch + 1;\n    var_14h = var_14h + 1;\n    if (*(var_ch + 0x14) < var_14h) goto code_r0x00476633;\n    goto code_r0x00476510;\n}\n",
        "token_count": 2109
    },
    "0040e7e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e7e0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    ppiVar1 = *(arg_8h + 4);\n    iVar3 = 0;\n    var_4h = 0;\n    if (**ppiVar1 == 4) {\n        fcn.0040dcd0(arg_8h, arg_ch);\n        return;\n    }\n    uVar2 = **ppiVar1 - 4;\n    if (uVar2 < 0x29) {\n    // switch table (41 cases) at 0x40e954\n        switch(*(uVar2 * 4 + 0x40e954)) {\n        case 0x40e822:\n            fcn.0040da40(in_ECX, arg_ch);\n            return;\n        case 0x40e834:\n            fcn.00412b40(arg_8h, &var_4h, 1);\n            return;\n        case 0x40e849:\n            fcn.004126c0(arg_8h, arg_ch);\n            return;\n        case 0x40e85b:\n            fcn.0040d937(arg_8h, &var_4h);\n        case 0x40e865:\n            *(in_ECX + 0x148) = 1;\n            return;\n        case 0x40e875:\n            fcn.0040d9f2();\n            return;\n        case 0x40e889:\n            fcn.0040c94f(arg_8h, arg_ch);\n            return;\n        case 0x40e89b:\n            if (*(in_ECX + 0x169) == '\\0') {\n                iVar3 = *(in_ECX + 0x164);\n            }\n            else {\n                iVar3 = *(*(in_ECX + 0x164) + 0x30);\n            }\n            *arg_ch = *(iVar3 + 8) + 1;\n            fcn.0040d9f2();\n            return;\n        case 0x40e8c8:\n            fcn.004052c2(arg_8h, arg_ch);\n            return;\n        case 0x40e8da:\n            fcn.00405265(arg_ch);\n            return;\n        case 0x40e8eb:\n            fcn.00412b40(arg_8h, &var_4h, 2);\n            return;\n        case 0x40e900:\n            fcn.004053c4(in_ECX, arg_ch);\n            return;\n        case 0x40e912:\ncode_r0x0040e912:\n            iVar3 = fcn.0041cf79(*ppiVar1[iVar3 + 1]);\n            *arg_ch = *(iVar3 + 0x1c) + 1;\n            return;\n        case 0x40e92f:\n            fcn.0041f41d(arg_8h, &var_4h);\n            return;\n        case 0x40e942:\n            fcn.004044ab(arg_8h, arg_ch);\n            return;\n        case 0x4797e8:\n            fcn.0045d67e(arg_8h, arg_ch);\n            break;\n        case 0x4797f6:\n            fcn.0045d76f(in_ECX, arg_ch);\n            break;\n        case 0x479804:\n            iVar3 = fcn.004053b6();\n            *arg_ch = *(iVar3 + 8);\n            break;\n        case 0x47981c:\n            fcn.0045dfce(arg_8h, arg_ch);\n            break;\n        case 0x47982a:\n            fcn.0045d342(arg_8h, &var_4h, arg_ch);\n            break;\n        case 0x47983c:\n            fcn.0045d443(arg_8h, &var_4h, 0);\n            break;\n        case 0x47984d:\n            fcn.00405577(arg_8h, &var_4h, 0);\n            break;\n        case 0x47985e:\n            fcn.00412b40(arg_8h, &var_4h, 0);\n            break;\n        case 0x47986f:\n            fcn.00412b40(arg_8h, &var_4h, 4);\n            break;\n        case 0x479880:\n            fcn.0045d8ff(arg_8h, &var_4h, 0);\n            break;\n        case 0x479891:\n            if (((1 < *(arg_8h + 8)) && (*(ppiVar1[1] + 2) == 0)) && (*ppiVar1[1] == 0x20)) {\n                iVar3 = 1;\n                goto code_r0x0040e912;\n            }\n            fcn.0044d520(0x69, 0xffffffff);\n            break;\n        case 0x4798bd:\n            fcn.0045e26d(arg_8h, &var_4h);\n            break;\n        case 0x4798cc:\n            fcn.0045d058();\n            break;\n        case 0x4798dc:\n            goto code_r0x004798dc;\n        }\n    }\n    else {\ncode_r0x004798dc:\n        fcn.0044d520(0x81, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 1253
    },
    "0040ea00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ea00(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t in_ECX;\n    uint16_t *puVar9;\n    int32_t iVar10;\n    uint16_t **ppuVar11;\n    uint16_t *puVar12;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    uint arg_8h_03;\n    int32_t *piVar13;\n    uint16_t **ppuVar14;\n    bool bVar15;\n    uint uVar16;\n    uint16_t **ppuVar17;\n    uint *puVar18;\n    uint *puVar19;\n    uint var_1b4h;\n    uint16_t *var_b0h;\n    uint16_t **var_ach;\n    uint16_t *var_a8h;\n    int32_t *var_a4h;\n    int32_t *var_a0h;\n    int32_t *var_9ch;\n    uint var_8ch;\n    uint var_88h;\n    int32_t *var_84h;\n    uint16_t **var_80h;\n    int32_t *var_7ch;\n    uint16_t **var_78h;\n    int32_t *var_70h;\n    int32_t *var_6ch;\n    uint16_t **var_68h;\n    int32_t var_64h;\n    uint *var_5ch;\n    int32_t var_58h;\n    int32_t *var_54h;\n    uint16_t **var_50h;\n    uint32_t var_48h;\n    int32_t var_44h;\n    uint16_t *var_40h;\n    int32_t *var_3ch;\n    uint var_38h;\n    int32_t *var_34h;\n    int32_t var_30h;\n    int32_t *var_2ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint16_t **var_1ch;\n    uint16_t **var_15h;\n    char var_dh;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    var_8h = 0;\n    piVar13 = NULL;\n    piVar8 = *(arg_8h + 4);\ncode_r0x0040ea20:\n    do {\n        while( true ) {\n            iVar1 = *(*piVar8 + 8);\n            if (iVar1 != 0x4e) break;\ncode_r0x0040ec0f:\n            piVar13 = piVar13 + 1;\n            piVar8 = piVar8 + 1;\n        }\n        if (iVar1 != 0x4f) {\n            if (iVar1 == 0x47) goto code_r0x0040ec0f;\n            if (iVar1 != 0x48) {\n                iVar2 = *(*piVar8 + 8);\n                if ((((((iVar2 == 0x41) || (iVar2 == 0x52)) || (iVar2 == 0x53)) || ((iVar2 == 0x54 || (iVar2 == 0x55))))\n                    || (iVar2 == 0x56)) && (piVar13 == NULL)) {\n                    ppuVar14 = ***(arg_8h + 4);\n                    var_8h = 1;\n                    ppuVar17 = ppuVar14[1];\n                    var_40h = *ppuVar14;\n                    var_b0h = *ppuVar14;\n                    var_a8h = ppuVar14[2];\n                    var_a0h = ppuVar14[3];\n                    *var_a0h = *var_a0h + 1;\n                    var_a4h = var_a0h;\n                    var_ach = ppuVar17;\n                    var_15h._0_1_ = '\\0';\n                    var_44h = 0;\n                    var_48h = 0;\n                    uVar5 = 0;\n                    var_70h = piVar13;\n                    var_ch = in_ECX;\n                    if (*0x4c22e4 != '\\0') goto code_r0x0040edb5;\n                    if (*0x4c22d8 == 0) goto code_r0x0040ecb8;\n                    var_50h = *0x4c22dc;\n                    if (*0x4c22e1 != '\\0') {\n                        var_50h = (*0x4c22dc)[2];\n                    }\n                    if (*var_50h == NULL) goto code_r0x0040ecb8;\n                    var_dh = '\\0';\n                    if ((*0x4c23d0 & 1) == 0) {\n                        *0x4c23d0 = *0x4c23d0 | 1;\n                        fcn.0040d3d2();\n                        fcn.00421b2a(0x471fb5);\n                    }\n                    stack0xffffffe8 = 0x4c23d4;\n                    var_78h = 0x4c23d4;\n                    *0x4c23ec = piVar13;\n                    *0x4c23f0 = piVar13;\n                    goto code_r0x0040eb32;\n                }\n                if (iVar1 == 0x7f) {\n                    var_2ch = NULL;\n                    var_24h = 0;\n                    var_20h = 1;\n                    fcn.0040fa40(arg_8h, &var_8h, &var_2ch, 0xffffffff);\n                    iVar4 = *(*(arg_8h + 4) + var_8h * 4);\n                    if (*(iVar4 + 8) != 0x7f) {\n                        fcn.0044d520(0x72, *(iVar4 + 10));\n                    }\n                    fcn.00412570();\n                    return;\n                }\n                piVar8 = piVar8 + 1;\n                goto code_r0x0040ea20;\n            }\n        }\n        piVar13 = piVar13 + -1;\n        piVar8 = piVar8 + 1;\n    } while( true );\ncode_r0x0040ed2e:\n    puVar12 = puVar12 + 1;\n    puVar9 = puVar9 + 1;\n    ppuVar14 = ppuVar14 + -1;\n    if (ppuVar14 == NULL) goto code_r0x0040ed37;\n    goto code_r0x0040ed26;\ncode_r0x0040eb32:\n    var_68h = *var_50h;\n    ppuVar14 = var_68h[1];\n    ppuVar11 = var_68h;\n    if (ppuVar17 == NULL) {\n        if (ppuVar14 == NULL) goto code_r0x0040eb46;\ncode_r0x0040ec18:\n        ppuVar14 = ppuVar11[6];\n        if (ppuVar14 == NULL) goto code_r0x0040ec6c;\n        var_1ch = ppuVar17;\n        if (ppuVar14[1] < ppuVar17) {\n            var_1ch = ppuVar14[1];\n        }\n        puVar9 = *ppuVar14;\n        var_80h = var_1ch;\n        puVar12 = var_40h;\n        while (var_80h != NULL) {\n            if (*puVar12 != *puVar9) {\n                if (*puVar12 < *puVar9) goto code_r0x0040ef33;\n                goto code_r0x0040ef4d;\n            }\n            puVar12 = puVar12 + 1;\n            puVar9 = puVar9 + 1;\n            var_80h = var_80h + -1;\n        }\n        if (var_1ch < ppuVar14[1]) {\ncode_r0x0040ef33:\n            var_68h[6] = ppuVar14[7];\n            ppuVar14[7] = *var_50h;\n            *var_50h = ppuVar14;\n            if (ppuVar14[6] == NULL) goto code_r0x0040ec6c;\n        }\ncode_r0x0040ef4d:\n        stack0xffffffe8[6] = *var_50h;\n        unique0x00007a00 = *var_50h;\n        *var_50h = unique0x00007a00[6];\n        goto code_r0x0040eb32;\n    }\n    if (ppuVar14 == NULL) {\ncode_r0x0040eb85:\n        ppuVar14 = ppuVar11[7];\n        if (ppuVar14 == NULL) goto code_r0x0040ec6c;\n        ppuVar11 = ppuVar14[1];\n        if (ppuVar17 < ppuVar14[1]) {\n            ppuVar11 = ppuVar17;\n        }\n        puVar9 = *ppuVar14;\n        puVar12 = var_40h;\n        for (var_1ch = ppuVar11; var_1ch != NULL; var_1ch = var_1ch + -1) {\n            if (*puVar9 != *puVar12) {\n                if (*puVar9 < *puVar12) goto code_r0x0040ebeb;\n                goto code_r0x0040ebc1;\n            }\n            puVar9 = puVar9 + 1;\n            puVar12 = puVar12 + 1;\n        }\n        if (ppuVar11 < ppuVar17) {\ncode_r0x0040ebeb:\n            var_68h[7] = ppuVar14[6];\n            ppuVar14[6] = *var_50h;\n            *var_50h = ppuVar14;\n            if (ppuVar14[7] == NULL) goto code_r0x0040ec6c;\n        }\ncode_r0x0040ebc1:\n        var_78h[7] = *var_50h;\n        var_78h = *var_50h;\n        *var_50h = *(*var_50h + 0x1c);\n        goto code_r0x0040eb32;\n    }\ncode_r0x0040eb46:\n    if (ppuVar17 < ppuVar14) {\n        puVar9 = *var_68h;\n        puVar12 = var_40h;\n        for (; ppuVar14 != NULL; ppuVar14 = ppuVar14 + -1) {\n            if (*puVar12 != *puVar9) {\n                iVar4 = (-(*puVar12 < *puVar9) & 0xfffffffe) + 1;\n                ppuVar11 = var_68h;\n                goto code_r0x0040eb77;\n            }\n            puVar12 = puVar12 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        iVar4 = 0;\n    }\n    else {\n        puVar9 = *var_68h;\n        puVar12 = var_40h;\n        for (ppuVar14 = ppuVar17; ppuVar14 != NULL; ppuVar14 = ppuVar14 + -1) {\n            if (*puVar12 != *puVar9) {\n                iVar4 = (-(*puVar12 < *puVar9) & 0xfffffffe) + 1;\n                goto code_r0x0040eb77;\n            }\n            puVar12 = puVar12 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        iVar4 = 0;\n    }\ncode_r0x0040eb77:\n    if (iVar4 < 0) goto code_r0x0040ec18;\n    if (0 < iVar4) goto code_r0x0040eb85;\n    var_dh = '\\x01';\ncode_r0x0040ec6c:\n    var_78h[7] = *(*var_50h + 0xc);\n    stack0xffffffe8[6] = *(*var_50h + 0xe);\n    *(*var_50h + 0xc) = *0x4c23f0;\n    *(*var_50h + 0xe) = *0x4c23ec;\n    if ((var_dh == '\\0') || (puVar9 = *var_50h,  puVar9 == NULL)) {\ncode_r0x0040ecb8:\n        if (*0x4c22c8 != NULL) {\n            var_dh = '\\0';\n            if ((*0x4c23d0 & 1) == 0) {\n                *0x4c23d0 = *0x4c23d0 | 1;\n                fcn.0040d3d2();\n                fcn.00421b2a(0x471fb5);\n            }\n            *0x4c23f0 = NULL;\n            *0x4c23ec = NULL;\n            var_68h = 0x4c23d4;\n            var_78h = 0x4c23d4;\ncode_r0x0040ed00:\n            while (ppuVar14 = (*0x4c22c8)[1],  ppuVar17 == NULL) {\n                if (ppuVar14 == NULL) goto code_r0x0040ed13;\ncode_r0x0040f23a:\n                ppuVar14 = (*0x4c22c8)[6];\n                unique0x00001d00 = *0x4c22c8 + 6;\n                if (ppuVar14 == NULL) goto code_r0x0040ed59;\n                ppuVar11 = ppuVar14[1];\n                var_80h = ppuVar17;\n                if (ppuVar11 < ppuVar17) {\n                    var_80h = ppuVar11;\n                }\n                puVar9 = *ppuVar14;\n                puVar12 = var_40h;\n                for (var_1ch = var_80h; var_1ch != NULL; var_1ch = var_1ch + -1) {\n                    if (*puVar12 != *puVar9) {\n                        if (*puVar12 < *puVar9) goto code_r0x0040f286;\n                        goto code_r0x0040f2a8;\n                    }\n                    puVar12 = puVar12 + 1;\n                    puVar9 = puVar9 + 1;\n                }\n                if (var_80h < ppuVar14[1]) {\ncode_r0x0040f286:\n                    *unique0x00001d00 = ppuVar14[7];\n                    ppuVar14[7] = *0x4c22c8;\n                    *0x4c22c8 = ppuVar14;\n                    if (ppuVar14[6] == NULL) goto code_r0x0040ed59;\n                }\ncode_r0x0040f2a8:\n                var_68h[6] = *0x4c22c8;\n                var_68h = *0x4c22c8;\n                *0x4c22c8 = (*0x4c22c8)[6];\n            }\n            if (ppuVar14 == NULL) {\ncode_r0x0040f2cb:\n                var_1ch = *0x4c22c8 + 7;\n                ppuVar14 = *var_1ch;\n                if (ppuVar14 == NULL) goto code_r0x0040ed59;\n                unique0x10000fe4 = ppuVar14[1];\n                if (ppuVar17 < ppuVar14[1]) {\n                    unique0x10000fe8 = ppuVar17;\n                }\n                puVar9 = *ppuVar14;\n                puVar12 = var_40h;\n                for (ppuVar14 = *0x4; ppuVar14 != NULL; ppuVar14 = ppuVar14 + -1) {\n                    if (*puVar9 != *puVar12) {\n                        if (*puVar9 < *puVar12) goto code_r0x0040f313;\n                        goto code_r0x0040f335;\n                    }\n                    puVar9 = puVar9 + 1;\n                    puVar12 = puVar12 + 1;\n                }\n                if (*0x4 < ppuVar17) {\ncode_r0x0040f313:\n                    ppuVar14 = *var_1ch;\n                    *var_1ch = ppuVar14[6];\n                    ppuVar14[6] = *0x4c22c8;\n                    *0x4c22c8 = ppuVar14;\n                    if (ppuVar14[7] == NULL) goto code_r0x0040ed59;\n                }\ncode_r0x0040f335:\n                var_78h[7] = *0x4c22c8;\n                var_78h = *0x4c22c8;\n                *0x4c22c8 = (*0x4c22c8)[7];\n                goto code_r0x0040ed00;\n            }\ncode_r0x0040ed13:\n            if (ppuVar17 < ppuVar14) {\n                puVar9 = **0x4c22c8;\n                puVar12 = var_40h;\n                if (ppuVar14 == NULL) goto code_r0x0040ed37;\n                do {\n                    if (*puVar12 != *puVar9) {\n                        bVar15 = *puVar12 < *puVar9;\n                        goto code_r0x0040ed41;\n                    }\n                    puVar9 = puVar9 + 1;\n                    ppuVar14 = ppuVar14 + -1;\n                    puVar12 = puVar12 + 1;\n                } while (ppuVar14 != NULL);\n                iVar4 = 0;\n            }\n            else {\n                puVar9 = **0x4c22c8;\n                puVar12 = var_40h;\n                ppuVar14 = ppuVar17;\n                if (ppuVar17 != NULL) {\ncode_r0x0040ed26:\n                    if (*puVar12 == *puVar9) goto code_r0x0040ed2e;\n                    bVar15 = *puVar12 < *puVar9;\ncode_r0x0040ed41:\n                    iVar4 = (-bVar15 & 0xfffffffe) + 1;\n                    goto code_r0x0040ed47;\n                }\ncode_r0x0040ed37:\n                iVar4 = 0;\n            }\ncode_r0x0040ed47:\n            if (iVar4 < 0) goto code_r0x0040f23a;\n            if (0 < iVar4) goto code_r0x0040f2cb;\n            var_dh = '\\x01';\ncode_r0x0040ed59:\n            var_78h[7] = (*0x4c22c8)[6];\n            var_68h[6] = (*0x4c22c8)[7];\n            (*0x4c22c8)[6] = *0x4c23f0;\n            (*0x4c22c8)[7] = *0x4c23ec;\n            if ((var_dh != '\\0') && (*0x4c22c8 != NULL)) {\n                piVar13 = (*0x4c22c8)[5];\n                uVar5 = (*0x4c22c8)[4] & 0xff00;\n                goto code_r0x0040edb5;\n            }\n        }\n        piVar13 = NULL;\n        uVar5 = var_48h;\n    }\n    else {\n        piVar13 = *(puVar9 + 10);\n        var_48h = *(puVar9 + 8) & 0xff00;\n        uVar5 = *(puVar9 + 8) & 0xff00;\n        if (piVar13 == NULL) goto code_r0x0040ecb8;\n    }\ncode_r0x0040edb5:\n    var_50h = piVar13;\n    if (piVar13 != NULL) {\n        if ((uVar5 & 0x100) == 0) {\n            iVar4 = piVar13[3];\n            if ((((iVar4 != 8) && (iVar4 != 0xc)) && (iVar4 != 0xf)) && (*((*(arg_8h + 4))[1] + 8) == 0x47)) {\n                var_2ch = NULL;\n                var_24h = 0;\n                var_20h = 1;\n                var_8h = 0;\n                fcn.0044a3ee(**(arg_8h + 4));\n                iVar4 = fcn.0045ede9(arg_8h, &var_8h, &var_2ch);\n                if ((-1 < iVar4) &&\n                   ((cVar3 = fcn.0040d2c0(0xd),  cVar3 != '\\0' || (cVar3 = fcn.0040d2c0(0xe),  cVar3 != '\\0')))) {\n                    fcn.0045d154(arg_8h);\n                    cVar3 = fcn.0040d2c0(0xd);\n                    if (cVar3 == '\\0') {\n                        cVar3 = fcn.0040d2c0(0xe);\n                        if (cVar3 != '\\0') {\n                            var_8h = var_8h + -1;\n                            fcn.0040b7ff(0x34);\n                            uVar16 = fcn.0044afce(&var_b0h);\n                            fcn.0041df08(uVar16);\n                            fcn.00405cd3();\n                        }\n                    }\n                    else {\n                        var_30h = 0xffff;\n                        fcn.0040b7ff(1);\n                        var_38h = fcn.0044afbf();\n                        var_8h = var_8h + -1;\n                        fcn.0044a485(&var_38h);\n                        fcn.0044a46f();\n                    }\n                    fcn.0040fa40(&var_8ch, &var_8h, &var_2ch, 0xffffffff);\n                    fcn.00405800();\n                    fcn.0044a46f();\n                    fcn.00412570();\n                    goto code_r0x0040ef1a;\n                }\n                fcn.0044a46f();\n                fcn.00412570();\n            }\n            do {\n                iVar4 = *(arg_8h + 4);\n                iVar1 = *(*(iVar4 + var_8h * 4) + 8);\n                while (iVar1 == 0x4e) {\n                    if (piVar13[3] == 5) {\n                        var_3ch = NULL;\n                        var_34h = NULL;\n                        var_30h = 1;\n                        var_44h = var_8h;\n                        var_1ch = *(*(iVar4 + -4 + var_8h * 4) + 10);\n                        var_70h = piVar13;\n                        iVar1 = *(*(iVar4 + var_8h * 4) + 8);\n                        stack0xffffffe8 = NULL;\n                        ppuVar14 = stack0xffffffe8;\n                        iVar10 = var_8h;\n                        while (unique0x10001290 = ppuVar14,  iVar1 == 0x4e) {\n                            var_48h = *(*(iVar4 + 4 + iVar10 * 4) + 10);\n                            var_8h = iVar10 + 1;\n                            ppuVar14 = 0xffffffff;\n                            puVar19 = &var_3ch;\n                            iVar10 = arg_8h;\n                            iVar6 = fcn.0040fa40(arg_8h, arg_8h, puVar19, 0xffffffff);\n                            iVar4 = var_30h;\n                            piVar8 = var_3ch;\n                            if (iVar6 < 0) goto code_r0x00479db5;\n                            piVar7 = var_3ch;\n                            if (var_30h == 1) goto code_r0x0040efeb;\n                            if (9 < var_30h - 2U) goto code_r0x0040eff3;\n    // switch table (10 cases) at 0x40f62c\n                            switch(*((var_30h - 2U) * 4 + 0x40f62c)) {\n                            case 0x40eff3:\n                                goto code_r0x0040eff3;\n                            case 0x40f4fe:\n                                piVar7 = fcn.00471de0();\n                                piVar8 = var_3ch;\n                                break;\n                            case 0x479b41:\n                                cVar3 = fcn.0040d075();\n                                if (cVar3 == '\\0') {\n                                    piVar7 = fcn.00422241(arg_8h_00);\n                                    piVar8 = var_3ch;\n                                    iVar4 = var_30h;\n                                }\n                                else {\n                                    fcn.0041bcea(0x10);\n                                    piVar7 = var_84h;\n                                    piVar8 = var_3ch;\n                                    iVar4 = var_30h;\n                                }\n                                break;\n                            case 0x479b8a:\n                                piVar7 = var_3ch[1];\n                                break;\n                            case 0x479b95:\n                                if (*var_3ch < 9) {\n                                    fcn.0044863c(&var_7ch);\n                                    piVar7 = var_7ch;\n                                    break;\n                                }\n                                goto code_r0x0040eff3;\n                            }\ncode_r0x0040efeb:\n                            if (piVar7 < 0) {\ncode_r0x00479da4:\n                                iVar10 = 0x7b;\n                                goto code_r0x00479dad;\n                            }\ncode_r0x0040eff3:\n                            if (*(*(*(arg_8h + 4) + var_8h * 4) + 8) != 0x4f) goto code_r0x00479da4;\n                            var_8h = var_8h + 1;\n                            iVar10 = var_8h;\n                            if (iVar4 != 1) {\n    // switch table (10 cases) at 0x40f654\n                                switch(iVar4) {\n                                case 2:\n                                case 7:\n                                    break;\n                                case 3:\n                                    piVar8 = fcn.00471de0();\n                                    iVar10 = var_8h;\n                                    break;\n                                case 4:\n                                    cVar3 = fcn.0040d075();\n                                    if (cVar3 == '\\0') {\n                                        piVar8 = fcn.00422241(arg_8h_01);\n                                        iVar10 = var_8h;\n                                    }\n                                    else {\n                                        fcn.0041bcea(0x10);\n                                        iVar10 = var_8h;\n                                        piVar8 = var_6ch;\n                                    }\n                                    break;\n                                default:\ncode_r0x0040f591:\n                                    piVar8 = NULL;\n                                    break;\n                                case 9:\n                                    piVar8 = piVar8 != '\\0';\n                                    break;\n                                case 10:\n                                    piVar8 = piVar8[1];\n                                    break;\n                                case 0xb:\n                                    iVar10 = var_8h;\n                                    if (8 < *piVar8) goto code_r0x0040f591;\n                                    fcn.0044863c(&var_9ch);\n                                    iVar10 = var_8h;\n                                    piVar8 = var_9ch;\n                                }\n                            }\n                            (&var_1b4h)[stack0xffffffe8] = piVar8;\n                            iVar4 = *(arg_8h + 4);\n                            iVar1 = *(*(iVar4 + iVar10 * 4) + 8);\n                            stack0xffffffe8 = stack0xffffffe8 + 1;\n                            ppuVar14 = stack0xffffffe8;\n                        }\n                        if (piVar13[3] != 5) {\n                            fcn.0040342c();\n                        }\n                        iVar4 = 0;\n                        *(*piVar13 + 0x210) = 0;\n                        if (0 < ppuVar14) {\n                            do {\n                                if (piVar13[3] == 5) {\n                                    iVar10 = *(*piVar13 + 0x210);\n                                    if (iVar10 < 0x40) {\n                                        *(*piVar13 + 0x10c + iVar10 * 4) = (&var_1b4h)[iVar4];\n                                        *(*piVar13 + 0x210) = *(*piVar13 + 0x210) + 1;\n                                    }\n                                }\n                                iVar4 = iVar4 + 1;\n                            } while (iVar4 < ppuVar14);\n                        }\n                        puVar19 = 0x1;\n                        piVar13 = fcn.004114a0(piVar13, 1, 0);\n                        var_50h = piVar13;\n                        if (piVar13 == NULL) {\n                            iVar10 = 0x7a;\n                            ppuVar14 = var_1ch;\ncode_r0x00479dad:\n                            fcn.0044d520(iVar10, puVar19);\ncode_r0x00479db5:\n                            fcn.00414430(iVar10, puVar19, ppuVar14);\n                            goto code_r0x0040ef1a;\n                        }\n                        if (var_34h != NULL) {\n                            fcn.00401926(var_34h);\n                            var_34h = NULL;\n                        }\n                        if ((4 < var_30h) && (var_30h - 5U < 0xb)) {\n    // switch table (11 cases) at 0x47a1f9\n                            switch(*((var_30h - 5U) * 4 + 0x47a1f9)) {\n                            case 0x479c67:\n                                if (var_3ch != NULL) {\n                                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_3ch);\n                                    fcn.0042017e(var_3ch);\n                                }\n                                break;\n                            case 0x479c89:\n                                if (var_3ch != NULL) {\n                                    fcn.0044aa9c(var_3ch);\n                                }\n                                break;\n                            case 0x479c9f:\n                                fcn.0041e3cc();\n                                break;\n                            case 0x479cac:\n                                fcn.0042017e(var_3ch[1]);\n                                fcn.0042017e(var_3ch);\n                                break;\n                            case 0x479cca:\n                                if (var_3ch != NULL) {\n                                    fcn.0043a56f(var_3ch);\n                                }\n                                break;\n                            case 0x479ce0:\n                                if (var_3ch != NULL) {\n                                    fcn.0043a599(var_3ch);\n                                }\n                                break;\n                            case 0x479cf6:\n                                if (var_3ch != NULL) {\n                                    fcn.00401926(var_3ch);\n                                }\n                            }\n                        }\n                        var_30h = 1;\n                        var_3ch = NULL;\n                        var_15h._0_1_ = '\\x01';\n                    }\n                    else {\n                        cVar3 = fcn.0040d2c0(0xf);\n                        if (cVar3 == '\\0') {\n                            fcn.0044d520(0x7c, *(*(*(arg_8h + 4) + var_8h * 4) + 10));\n                            goto code_r0x0040ef1a;\n                        }\n                        var_70h = piVar13;\n                        iVar4 = fcn.0045f4df(arg_8h, &var_8h, &var_50h, 0, 0);\n                        if (iVar4 < 0) goto code_r0x0040ef1a;\n                        var_15h._0_1_ = '\\0';\n                        piVar13 = var_50h;\n                    }\n                    iVar4 = *(arg_8h + 4);\n                    iVar1 = *(*(iVar4 + var_8h * 4) + 8);\n                }\n                iVar1 = *(*(*(arg_8h + 4) + var_8h * 4) + 8);\n                if ((iVar1 == 0x35) && (cVar3 = fcn.0045cff8(),  cVar3 == '\\0')) {\n                    iVar4 = fcn.0045c235(0xa9, 0xa9, L\"Variable must be of type \\'Object\\'.\", 1);\n                    if (iVar4 < 0) {\n                        fcn.0044d520(0xa9, *(*(*(arg_8h + 4) + var_8h * 4) + 10));\n                    }\n                    break;\n                }\n                iVar4 = piVar13[3];\n                if ((((iVar4 != 8) && (iVar4 != 0xc)) && (iVar4 != 0xf)) || ((iVar1 != 0x35 && (iVar1 != 0x47))))\n                goto code_r0x0040ee36;\n                iVar4 = fcn.0045e2fb(arg_8h, &var_8h, &var_50h);\n                piVar13 = var_50h;\n            } while (iVar4 == 1);\n        }\n        else {\n            fcn.0044d520(0xa3, *(**(arg_8h + 4) + 10));\n        }\n        goto code_r0x0040ef1a;\n    }\ncode_r0x0040ee36:\n    iVar10 = var_ch;\n    iVar4 = *(*(arg_8h + 4) + var_8h * 4);\n    iVar1 = *(iVar4 + 8);\n    ppuVar14 = *(iVar4 + 8);\n    var_80h = ppuVar14;\n    if ((((iVar1 != 0x41) && ((iVar1 != 0x52 && (iVar1 != 0x53)))) && (iVar1 != 0x54)) &&\n       ((iVar1 != 0x55 && (iVar1 != 0x56)))) {\n        fcn.0044d520(0x80, *(iVar4 + 10));\n        goto code_r0x0040ef1a;\n    }\n    puVar19 = &var_8h;\n    var_8h = var_8h + 1;\n    var_64h = 0;\n    var_5ch = NULL;\n    var_58h = 1;\n    iVar4 = arg_8h;\n    iVar6 = fcn.0040fa40(arg_8h, puVar19, &var_64h, 0xffffffff);\n    if (-1 < iVar6) {\n        if (var_15h != '\\0') {\n            iVar10 = *(arg_8h + 4);\n            var_2ch = NULL;\n            var_24h = 0;\n            var_20h = 1;\n            var_78h = *(*(iVar10 + -4 + var_44h * 4) + 10);\n            stack0xffffffe8 = NULL;\n            iVar1 = *(*(iVar10 + var_44h * 4) + 8);\n            ppuVar17 = stack0xffffffe8;\n            piVar13 = var_70h;\n            iVar6 = var_44h;\n            while (unique0x1000128c = ppuVar17,  var_70h = piVar13,  iVar1 == 0x4e) {\n                var_1ch = *(*(iVar10 + 4 + iVar6 * 4) + 10);\n                var_48h = iVar6 + 1;\n                ppuVar17 = 0xffffffff;\n                iVar4 = arg_8h;\n                iVar6 = fcn.0040fa40(arg_8h, &var_48h, &var_2ch, 0xffffffff);\n                iVar10 = var_20h;\n                piVar13 = var_2ch;\n                if (iVar6 < 0) goto code_r0x00479f6c;\n                piVar8 = var_2ch;\n                if (var_20h == 1) goto code_r0x0040f15b;\n                if (9 < var_20h - 2U) goto code_r0x0040f163;\n    // switch table (10 cases) at 0x40f67c\n                switch(*((var_20h - 2U) * 4 + 0x40f67c)) {\n                case 0x40f163:\n                    goto code_r0x0040f163;\n                case 0x40f53e:\n                    piVar8 = fcn.00471de0();\n                    piVar13 = var_2ch;\n                    break;\n                case 0x479e60:\n                    cVar3 = fcn.0040d075();\n                    if (cVar3 == '\\0') {\n                        piVar8 = fcn.00422241(arg_8h_02);\n                        piVar13 = var_2ch;\n                        iVar10 = var_20h;\n                    }\n                    else {\n                        fcn.0041bcea(0x10);\n                        piVar8 = var_9ch;\n                        piVar13 = var_2ch;\n                        iVar10 = var_20h;\n                    }\n                    break;\n                case 0x479ea9:\n                    piVar8 = var_2ch[1];\n                    break;\n                case 0x479eb4:\n                    if (*var_2ch < 9) {\n                        fcn.0044863c(&var_6ch);\n                        piVar8 = var_6ch;\n                        break;\n                    }\n                    goto code_r0x0040f163;\n                }\ncode_r0x0040f15b:\n                if (piVar8 < 0) {\ncode_r0x00479f5b:\n                    uVar16 = 0x7b;\n                    goto code_r0x00479f64;\n                }\ncode_r0x0040f163:\n                if (*(*(*(arg_8h + 4) + var_48h * 4) + 8) != 0x4f) goto code_r0x00479f5b;\n                var_44h = var_48h + 1;\n                iVar6 = var_44h;\n                if (iVar10 != 1) {\n    // switch table (10 cases) at 0x40f6a4\n                    switch(iVar10) {\n                    case 2:\n                    case 7:\n                        break;\n                    case 3:\n                        piVar13 = fcn.00471de0();\n                        iVar6 = var_44h;\n                        break;\n                    case 4:\n                        cVar3 = fcn.0040d075();\n                        if (cVar3 == '\\0') {\n                            piVar13 = fcn.00422241(arg_8h_03);\n                            iVar6 = var_44h;\n                        }\n                        else {\n                            fcn.0041bcea(0x10);\n                            iVar6 = var_44h;\n                            piVar13 = var_54h;\n                        }\n                        break;\n                    default:\ncode_r0x0040f5b0:\n                        piVar13 = NULL;\n                        break;\n                    case 9:\n                        piVar13 = piVar13 != '\\0';\n                        break;\n                    case 10:\n                        piVar13 = piVar13[1];\n                        break;\n                    case 0xb:\n                        iVar6 = var_44h;\n                        if (8 < *piVar13) goto code_r0x0040f5b0;\n                        fcn.0044863c(&var_34h);\n                        iVar6 = var_44h;\n                        piVar13 = var_34h;\n                    }\n                }\n                (&var_1b4h)[stack0xffffffe8] = piVar13;\n                iVar10 = *(arg_8h + 4);\n                iVar1 = *(*(iVar10 + iVar6 * 4) + 8);\n                stack0xffffffe8 = stack0xffffffe8 + 1;\n                ppuVar17 = stack0xffffffe8;\n                piVar13 = var_70h;\n            }\n            if (piVar13[3] != 5) {\n                fcn.0040342c();\n            }\n            *(*piVar13 + 0x210) = 0;\n            if (0 < ppuVar17) {\n                iVar10 = 0;\n                do {\n                    if (var_70h[3] == 5) {\n                        iVar6 = *(*var_70h + 0x210);\n                        if (iVar6 < 0x40) {\n                            *(*var_70h + 0x10c + iVar6 * 4) = (&var_1b4h)[iVar10];\n                            *(*var_70h + 0x210) = *(*var_70h + 0x210) + 1;\n                        }\n                    }\n                    iVar10 = iVar10 + 1;\n                    piVar13 = var_70h;\n                    ppuVar14 = var_80h;\n                } while (iVar10 < ppuVar17);\n            }\n            piVar13 = fcn.004114a0(piVar13, 0, 0);\n            if (piVar13 == NULL) {\n                uVar16 = 0x7a;\n                ppuVar17 = var_78h;\ncode_r0x00479f64:\n                fcn.0044d520(uVar16, ppuVar17);\ncode_r0x00479f6c:\n                fcn.00414430();\n                goto code_r0x0040eef5;\n            }\n            if (var_24h != 0) {\n                fcn.00401926(var_24h);\n                var_24h = 0;\n            }\n            iVar10 = var_ch;\n            if ((4 < var_20h) && (var_20h - 5U < 0xb)) {\n    // switch table (11 cases) at 0x47a225\n                switch(*((var_20h - 5U) * 4 + 0x47a225)) {\n                case 0x479faa:\n                    if (var_2ch != NULL) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_2ch);\n                        fcn.0042017e(var_2ch);\n                        iVar10 = var_ch;\n                    }\n                    break;\n                case 0x479fcc:\n                    if (var_2ch != NULL) {\n                        fcn.0044aa9c(var_2ch);\n                        iVar10 = var_ch;\n                    }\n                    break;\n                case 0x479fe2:\n                    fcn.0041e3cc();\n                    iVar10 = var_ch;\n                    break;\n                case 0x479fef:\n                    fcn.0042017e(var_2ch[1]);\n                    fcn.0042017e(var_2ch);\n                    iVar10 = var_ch;\n                    break;\n                case 0x47a00d:\n                    if (var_2ch != NULL) {\n                        fcn.0043a56f(var_2ch);\n                        iVar10 = var_ch;\n                    }\n                    break;\n                case 0x47a023:\n                    if (var_2ch != NULL) {\n                        fcn.0043a599(var_2ch);\n                        iVar10 = var_ch;\n                    }\n                    break;\n                case 0x47a039:\n                    if (var_2ch != NULL) {\n                        fcn.00401926(var_2ch);\n                        iVar10 = var_ch;\n                    }\n                }\n            }\n        }\n        iVar6 = (*(arg_8h + 4))[var_8h];\n        if (*(iVar6 + 8) == 0x7f) {\n            if (piVar13 == NULL) {\n                if ((*(iVar10 + 0x103) == '\\0') && (ppuVar14 == 0x41)) {\n                    fcn.0040d380(&var_b0h, &var_64h, 0, 0);\n                }\n                else {\n                    fcn.0044d520(0x79, *(**(arg_8h + 4) + 10));\n                }\n            }\n            else if (ppuVar14 == 0x41) {\n                if (piVar13 != &var_64h) {\n                    if ((piVar13[3] == 4) && (var_58h == 4)) {\n                        if (piVar13[2] != var_5ch) {\n                            fcn.0040d805(var_5ch);\n                        }\n                    }\n                    else {\n                        puVar18 = piVar13[2];\n                        if (puVar18 != NULL) {\n                            fcn.00401926();\n                            piVar13[2] = 0;\n                            puVar19 = puVar18;\n                        }\n                        if (4 < piVar13[3]) {\n    // switch table (11 cases) at 0x40f600\n                            switch(piVar13[3]) {\n                            case 5:\n                                fcn.0041e3cc();\n                                break;\n                            case 8:\n                                if (*piVar13 != 0) {\n                                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*piVar13);\n                                    fcn.0042017e(*piVar13, puVar19);\n                                }\n                                break;\n                            case 10:\n                                if (*piVar13 != 0) {\n                                    fcn.0044aa9c(iVar4, *piVar13);\n                                }\n                                break;\n                            case 0xb:\n                                fcn.0042017e(*(*piVar13 + 4), puVar19);\n                                fcn.0042017e(*piVar13);\n                                break;\n                            case 0xc:\n                                if (*piVar13 != 0) {\n                                    fcn.0043a56f(iVar4, *piVar13);\n                                }\n                                break;\n                            case 0xd:\n                            case 0xe:\n                                if (*piVar13 != 0) {\n                                    fcn.00401926(iVar4, *piVar13);\n                                }\n                                break;\n                            case 0xf:\n                                if (*piVar13 != 0) {\n                                    fcn.0043a599(iVar4, *piVar13);\n                                }\n                            }\n                        }\n                        piVar13[3] = 1;\n                        *piVar13 = 0;\n                        fcn.004113a0(&var_64h);\n                    }\n                }\n            }\n            else {\n    // switch table (5 cases) at 0x40f5c0\n                switch(ppuVar14) {\n                case 0x52:\n                    fcn.00414265(&var_64h);\n                    break;\n                case 0x53:\n                    fcn.0044a955(&var_64h);\n                    break;\n                case 0x54:\n                    fcn.0044aa57(&var_64h);\n                    break;\n                case 0x55:\n                    fcn.0044a875(&var_64h);\n                    break;\n                case 0x56:\n                    fcn.0044af66(&var_64h);\n                }\n            }\n        }\n        else {\n            fcn.0044d520(0x72, *(iVar6 + 10));\n        }\n    }\ncode_r0x0040eef5:\n    puVar19 = var_5ch;\n    if (var_5ch != NULL) {\n        *var_5ch[3] = *var_5ch[3] + -1;\n        if (*var_5ch[3] == 0) {\n            fcn.0042017e(*var_5ch);\n            fcn.0042017e(puVar19[3]);\n        }\n        fcn.0042017e(puVar19);\n        var_5ch = NULL;\n    }\n    if ((4 < var_58h) && (var_58h - 5U < 0xb)) {\n    // switch table (11 cases) at 0x40f5d4\n        switch(*((var_58h - 5U) * 4 + 0x40f5d4)) {\n        case 0x40f4bf:\n            fcn.0041e3cc();\n            break;\n        case 0x47a147:\n            if (var_64h != 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_64h);\n                fcn.0042017e(var_64h);\n            }\n            break;\n        case 0x47a169:\n            if (var_64h != 0) {\n                fcn.0044aa9c(var_64h);\n            }\n            break;\n        case 0x47a17f:\n            fcn.0042017e(*(var_64h + 4));\n            fcn.0042017e(var_64h);\n            break;\n        case 0x47a19d:\n            if (var_64h != 0) {\n                fcn.0043a56f(var_64h);\n            }\n            break;\n        case 0x47a1b3:\n            if (var_64h != 0) {\n                fcn.0043a599(var_64h);\n            }\n            break;\n        case 0x47a1c9:\n            if (var_64h != 0) {\n                fcn.00401926(var_64h);\n            }\n        }\n    }\n    var_58h = 1;\n    var_64h = 0;\ncode_r0x0040ef1a:\n    piVar13 = var_a0h;\n    *var_a0h = *var_a0h + -1;\n    if (*var_a0h == 0) {\n        fcn.0042017e(var_40h);\n        fcn.0042017e(piVar13);\n    }\n    return;\n}\n",
        "token_count": 11220
    },
    "0040f6d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_150h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040f6d0(int16_t **arg_8h, int32_t **arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_14h_00;\n    char cVar3;\n    uint uVar4;\n    int32_t *arg_8h_00;\n    int16_t **ppiVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int16_t *piVar8;\n    int16_t **ppiVar9;\n    int32_t *piVar10;\n    int32_t **var_150h;\n    uint var_50h;\n    int16_t **var_48h;\n    int16_t **var_40h;\n    int16_t *var_3ch;\n    int16_t **var_38h;\n    int32_t var_34h;\n    int16_t **var_30h;\n    uint var_28h;\n    int32_t *var_1ch;\n    int16_t **var_18h;\n    uint var_14h;\n    int16_t **var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    arg_14h_00 = arg_14h;\n    arg_8h_00 = arg_10h;\n    var_1ch = *arg_ch;\n    var_3ch = arg_8h[1];\n    var_34h = *(var_3ch + var_1ch * 2);\n    iVar1 = *(var_34h + 8);\n    if (iVar1 == 0x4e) {\n        var_4h = in_ECX;\n        if (arg_10h[3] == 5) {\ncode_r0x0040f787:\n            var_18h = NULL;\n            var_10h = NULL;\n            var_ch = 1;\n            arg_10h = NULL;\n            arg_14h = *(*(var_3ch + var_1ch * 2 + -2) + 10);\n            piVar8 = var_3ch;\n            do {\n                *arg_ch = *arg_ch + 1;\n                var_1ch = *(*(piVar8 + *arg_ch * 2) + 10);\n                iVar7 = fcn.0040fa40(0x40f7d5, arg_ch, &fcn.0040f6d0::var_18h, 0xffffffff);\n                ppiVar9 = var_18h;\n                if (iVar7 < 0) goto code_r0x0047c41b;\n                ppiVar5 = var_18h;\n                if (var_ch == 1) goto code_r0x0040f7ee;\n                if (9 < var_ch - 2U) goto code_r0x0040f7f6;\n    // switch table (10 cases) at 0x40f9ec\n                switch(*((var_ch - 2U) * 4 + 0x40f9ec)) {\n                case 0x40f7f6:\n                    goto code_r0x0040f7f6;\n                case 0x40f920:\n                    piVar8 = *var_10h;\n                    if ((((var_ch == 4) && (*piVar8 == 0x30)) && ((piVar8[1] == 0x78 || (piVar8[1] == 0x58)))) &&\n                       (var_10h[1] < 0x13)) {\n                        fcn.0041bcea(0x10);\n                        ppiVar5 = var_40h;\n                        ppiVar9 = var_18h;\n                    }\n                    else {\n                        ppiVar5 = fcn.00422241(piVar8);\n                        ppiVar9 = var_18h;\n                    }\n                    break;\n                case 0x40f9a2:\n                    ppiVar5 = fcn.00471de0();\n                    ppiVar9 = var_18h;\n                    break;\n                case 0x47c2a8:\n                    ppiVar5 = var_18h[1];\n                    break;\n                case 0x47c2b3:\n                    if (*var_18h < 9) {\n                        fcn.0044863c(&fcn.0040f6d0::var_38h);\n                        ppiVar5 = var_38h;\n                        break;\n                    }\n                    goto code_r0x0040f7f6;\n                }\ncode_r0x0040f7ee:\n                piVar10 = var_1ch;\n                if (ppiVar5 < 0) {\ncode_r0x0047c411:\n                    uVar4 = 0x7b;\n                    goto code_r0x0047c413;\n                }\ncode_r0x0040f7f6:\n                piVar10 = *arg_ch;\n                if (*(*(arg_8h[1] + piVar10 * 2) + 8) != 0x4f) {\n                    piVar10 = *(*(arg_8h[1] + piVar10 * 2 + -2) + 10);\n                    goto code_r0x0047c411;\n                }\n                *arg_ch = piVar10 + 1;\n                if (var_ch == 1) goto code_r0x0040f820;\n                if (var_ch - 2U < 10) {\n    // switch table (10 cases) at 0x40fa14\n                    switch(*((var_ch - 2U) * 4 + 0x40fa14)) {\n                    case 0x40f954:\n                        piVar8 = *var_10h;\n                        if (((var_ch == 4) && (*piVar8 == 0x30)) &&\n                           (((piVar8[1] == 0x78 || (piVar8[1] == 0x58)) && (var_10h[1] < 0x13)))) {\n                            fcn.0041bcea(0x10);\n                            ppiVar9 = var_48h;\n                        }\n                        else {\n                            ppiVar9 = fcn.00422241(piVar8);\n                        }\n                        break;\n                    case 0x40f9b2:\n                        ppiVar9 = fcn.00471de0();\n                        break;\n                    case 0x40f9c9:\n                        ppiVar9 = ppiVar9[1];\n                        break;\n                    case 0x40f9d1:\n                        goto code_r0x0040f9d1;\n                    case 0x47c2fa:\n                        ppiVar9 = ppiVar9 != '\\0';\n                        break;\n                    case 0x47c308:\n                        if (8 < *ppiVar9) goto code_r0x0040f9d1;\n                        fcn.0044863c(&fcn.0040f6d0::var_30h);\n                        ppiVar9 = var_30h;\n                    }\n                }\n                else {\ncode_r0x0040f9d1:\n                    ppiVar9 = NULL;\n                }\ncode_r0x0040f820:\n                arg_10h = arg_10h + 1;\n                *(&stack0xfffffea8 + arg_10h * 4) = ppiVar9;\n                piVar8 = arg_8h[1];\n            } while (*(*(piVar8 + *arg_ch * 2) + 8) == 0x4e);\n            if (arg_8h_00[3] != 5) {\n                fcn.0040342c();\n            }\n            iVar7 = 0;\n            *(*arg_8h_00 + 0x210) = 0;\n            if (0 < arg_10h) {\n                do {\n                    if (arg_8h_00[3] == 5) {\n                        iVar2 = *(*arg_8h_00 + 0x210);\n                        if (iVar2 < 0x40) {\n                            *(*arg_8h_00 + 0x10c + iVar2 * 4) = (&fcn.0040f6d0::var_150h)[iVar7];\n                            *(*arg_8h_00 + 0x210) = *(*arg_8h_00 + 0x210) + 1;\n                        }\n                    }\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < arg_10h);\n            }\n            ppiVar9 = NULL;\n            arg_8h_00 = fcn.004114a0(arg_8h_00, 1, 0);\n            arg_10h = arg_8h_00;\n            if (arg_8h_00 == NULL) {\n                uVar4 = 0x7a;\n                piVar10 = arg_14h;\ncode_r0x0047c413:\n                fcn.0044d520(uVar4, piVar10);\ncode_r0x0047c41b:\n                fcn.00414430();\n                return 0xffffffff;\n            }\n            if (var_10h != NULL) {\n                ppiVar9 = var_10h;\n                fcn.00401926(var_10h);\n                var_10h = NULL;\n            }\n            in_ECX = var_4h;\n            if ((4 < var_ch) && (var_ch - 5U < 0xb)) {\n    // switch table (11 cases) at 0x47c806\n                switch(*((var_ch - 5U) * 4 + 0x47c806)) {\n                case 0x47c35b:\n                    if (var_18h != NULL) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_18h);\n                        fcn.0042017e(var_18h);\n                        in_ECX = var_4h;\n                    }\n                    break;\n                case 0x47c37d:\n                    if (var_18h != NULL) {\n                        ppiVar9 = var_18h;\n                        fcn.0044aa9c();\n                        in_ECX = var_4h;\n                    }\n                    break;\n                case 0x47c393:\n                    fcn.0041e3cc();\n                    in_ECX = var_4h;\n                    break;\n                case 0x47c3a0:\n                    fcn.0042017e(var_18h[1]);\n                    fcn.0042017e(var_18h);\n                    in_ECX = var_4h;\n                    break;\n                case 0x47c3be:\n                    if (var_18h != NULL) {\n                        ppiVar9 = var_18h;\n                        fcn.0043a56f();\n                        in_ECX = var_4h;\n                    }\n                    break;\n                case 0x47c3d4:\n                    if (var_18h != NULL) {\n                        ppiVar9 = var_18h;\n                        fcn.0043a599();\n                        in_ECX = var_4h;\n                    }\n                    break;\n                case 0x47c3ea:\n                    if (var_18h != NULL) {\n                        ppiVar9 = var_18h;\n                        fcn.00401926();\n                        in_ECX = var_4h;\n                    }\n                }\n            }\ncode_r0x0040f8d5:\n            if ((arg_8h_00[3] != 0xf) ||\n               (ppiVar9 = arg_8h,  iVar7 = fcn.0045f4df(arg_8h, arg_ch, &fcn.0040f6d0::arg_10h, 1, 1), \n               arg_8h_00 = arg_10h,  -1 < iVar7)) {\n                if (arg_14h_00 != arg_8h_00) {\n                    if ((arg_14h_00[3] != 4) || (arg_8h_00[3] != 4)) {\n                        ppiVar5 = arg_14h_00[2];\n                        if (ppiVar5 != NULL) {\n                            fcn.00401926();\n                            arg_14h_00[2] = 0;\n                            ppiVar9 = ppiVar5;\n                        }\n                        if ((4 < arg_14h_00[3]) && (uVar6 = arg_14h_00[3] - 5,  uVar6 < 0xb)) {\n    // switch table (11 cases) at 0x47c832\n                            switch(*(uVar6 * 4 + 0x47c832)) {\n                            case 0x47c48f:\n                                fcn.0042017e(*(*arg_14h_00 + 4));\n                                fcn.0042017e(*arg_14h_00);\n                                break;\n                            case 0x47c4ab:\n                                goto code_r0x0047c4ab;\n                            case 0x47c4c0:\n                                if (*arg_14h_00 != 0) {\n                                    fcn.00401926(*arg_14h_00, ppiVar9);\n                                }\n                                break;\n                            case 0x47c6f5:\n                                goto code_r0x0047c6f5;\n                            case 0x47c715:\n                                goto code_r0x0047c715;\n                            case 0x47c721:\n                                goto code_r0x0047c721;\n                            case 0x47c736:\n                                goto code_r0x0047c736;\n                            }\n                        }\n                        goto code_r0x0040f741;\n                    }\n                    fcn.0040c935(arg_8h_00[2]);\n                }\n                goto code_r0x0040f756;\n            }\n        }\n        else {\n            ppiVar9 = 0xf;\n            cVar3 = fcn.0040d2c0(0xf);\n            if (cVar3 != '\\0') {\n                if (arg_8h_00[3] == 5) goto code_r0x0040f787;\n                goto code_r0x0040f8d5;\n            }\n            fcn.0044d520(0x7c, *(var_34h + 10));\n        }\n        uVar4 = 0xffffffff;\n    }\n    else {\n        if (iVar1 == 0x35) {\n            cVar3 = fcn.0045cff8();\n            if (cVar3 == '\\0') {\n                iVar7 = fcn.0045c235(0xa9, 0, L\"Variable must be of type \\'Object\\'.\", 1);\n                if (iVar7 < 0) {\n                    fcn.0044d520(0xa9, *(*(arg_8h[1] + *arg_ch * 2) + 10));\n                    return 0xffffffff;\n                }\n                fcn.0045ebe4(arg_8h, arg_ch, 0);\n            }\n            else {\n                fcn.0045f34f(arg_8h, arg_ch, arg_8h_00, arg_14h_00);\n            }\n        }\n        else if (iVar1 == 0x47) {\n            cVar3 = fcn.0040d2c0(0xd);\n            if (((cVar3 == '\\0') && (cVar3 = fcn.0040d2c0(0xe),  cVar3 == '\\0')) &&\n               (cVar3 = fcn.0044be14(),  cVar3 == '\\0')) {\n                fcn.0044d520(0xba, *(var_34h + 10));\n                return 0xffffffff;\n            }\n            cVar3 = fcn.0044be14();\n            if (cVar3 == '\\0') {\n                fcn.0045d154(arg_8h);\n                var_28h._0_2_ = 0xffff;\n                var_28h._2_2_ = 0;\n                *arg_ch = *arg_ch + -1;\n                cVar3 = fcn.0040d2c0(0xd);\n                if (cVar3 == '\\0') {\n                    fcn.0040b7ff(0x34);\n                    uVar4 = fcn.0044afce(&fcn.0040f6d0::var_50h);\n                    var_150h = 0x47c647;\n                    fcn.0041df08(uVar4);\n                    var_150h = 0x47c64f;\n                    fcn.00405cd3();\n                    var_150h = &fcn.0040f6d0::var_30h;\n                    fcn.0044a485(var_150h);\n                    iVar7 = fcn.00413680(0, &fcn.0040f6d0::var_18h, arg_ch, arg_14h_00, &fcn.0040f6d0::arg_8h + 3);\n                    if (iVar7 < 0) goto code_r0x0047c614;\n                    iVar7 = *(in_ECX + 0xfc);\n                }\n                else {\n                    fcn.0040b7ff(1);\n                    var_30h = fcn.0044afbf();\n                    fcn.0044a485(&fcn.0040f6d0::var_30h);\n                    var_150h = arg_ch;\n                    iVar7 = fcn.004144e0(0, &fcn.0040f6d0::var_18h, arg_ch, arg_14h_00);\n                    if (iVar7 < 0) goto code_r0x0047c614;\n                    iVar7 = *(in_ECX + 0xfc);\n                }\n                if (iVar7 == 1) {\ncode_r0x0047c614:\n                    fcn.0044a46f();\n                    fcn.00405800();\n                    return 0xffffffff;\n                }\n                fcn.0044a46f();\n                fcn.00405800();\n            }\n            else {\n                fcn.0045f34f(arg_8h, arg_ch, arg_8h_00, arg_14h_00);\n            }\n        }\n        else {\n            if (arg_14h == arg_10h) goto code_r0x0040f756;\n            if ((arg_14h[3] == 4) && (arg_10h[3] == 4)) {\n                fcn.0040c935(arg_10h[2]);\n                goto code_r0x0040f756;\n            }\n            if (arg_14h[2] != 0) {\n                fcn.00401926(arg_14h[2]);\n                arg_14h_00[2] = 0;\n            }\n            if ((arg_14h_00[3] < 5) || (uVar6 = arg_14h_00[3] - 5,  10 < uVar6)) goto code_r0x0040f741;\n    // switch table (11 cases) at 0x47c85e\n            switch(*(uVar6 * 4 + 0x47c85e)) {\n            case 0x47c4ab:\ncode_r0x0047c4ab:\n                if (*arg_14h_00 != 0) {\n                    fcn.0044aa9c(*arg_14h_00);\n                }\n                break;\n            case 0x47c6d9:\n                fcn.0042017e(*(*arg_14h_00 + 4));\n                fcn.0042017e(*arg_14h_00);\n                break;\n            case 0x47c6f5:\ncode_r0x0047c6f5:\n                if (*arg_14h_00 != 0) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*arg_14h_00);\n                    fcn.0042017e(*arg_14h_00);\n                }\n                break;\n            case 0x47c715:\ncode_r0x0047c715:\n                fcn.0041e3cc();\n                break;\n            case 0x47c721:\ncode_r0x0047c721:\n                if (*arg_14h_00 != 0) {\n                    fcn.0043a56f(*arg_14h_00);\n                }\n                break;\n            case 0x47c736:\ncode_r0x0047c736:\n                if (*arg_14h_00 != 0) {\n                    fcn.0043a599(*arg_14h_00);\n                }\n                break;\n            case 0x47c74b:\n                if (*arg_14h_00 != 0) {\n                    fcn.00401926(*arg_14h_00);\n                }\n            }\ncode_r0x0040f741:\n            arg_14h_00[3] = 1;\n            *arg_14h_00 = 0;\n            fcn.004113a0(arg_8h_00);\n        }\ncode_r0x0040f756:\n        if (((*(in_ECX + 0x101) != '\\0') || (*(in_ECX + 0x102) != '\\0')) && (cVar3 = fcn.0040d2c0(4),  cVar3 != '\\0')) {\n            var_10h = NULL;\n            fcn.004113a0(arg_14h_00);\n            if (*(in_ECX + 0x101) != '\\0') {\n                fcn.0045ee52(&fcn.0040f6d0::var_18h);\n                fcn.004084a6();\n                iVar7 = fcn.004218fb(*var_10h);\n                if (iVar7 == 0) {\n                    fcn.0040d89e(arg_8h_00);\n                }\n            }\n            if (*(in_ECX + 0x102) != '\\0') {\n                fcn.0045ef9d(&fcn.0040f6d0::var_18h);\n                fcn.004084a6();\n                iVar7 = fcn.004218fb(*var_10h);\n                if (iVar7 == 0) {\n                    fcn.0040d89e(arg_8h_00);\n                }\n            }\n            fcn.0040d89e(&fcn.0040f6d0::var_18h);\n            fcn.00412570();\n        }\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 5042
    },
    "0040fa40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040fa40(int32_t **arg_8h, int32_t **arg_ch, int32_t **arg_10h, int32_t *arg_14h)\n\n{\n    int16_t iVar1;\n    uint16_t **ppuVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    uint64_t *puVar10;\n    uint *puVar11;\n    int32_t *in_ECX;\n    int32_t *piVar12;\n    int32_t **ppiVar13;\n    int32_t **unaff_EBX;\n    int32_t **unaff_ESI;\n    int32_t *piVar14;\n    int32_t **ppiVar15;\n    int32_t **unaff_EDI;\n    uint uVar16;\n    bool bVar17;\n    ulong uVar18;\n    uint uVar19;\n    char16_t *in_stack_fffffebc;\n    int32_t **in_stack_fffffec0;\n    int32_t **in_stack_fffffec4;\n    int32_t **ppiVar20;\n    int32_t **in_stack_fffffedc;\n    int32_t **ppiVar21;\n    int32_t *piStack280;\n    uint uStack276;\n    int32_t **ppiStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    int32_t **ppiStack256;\n    int32_t **ppiStack252;\n    int32_t **ppiStack248;\n    int32_t **ppiStack244;\n    int32_t **ppiStack240;\n    ulong uStack236;\n    int32_t **ppiStack228;\n    uint uStack224;\n    int32_t **ppiStack220;\n    int32_t **ppiStack216;\n    uint uStack212;\n    int32_t **ppiStack208;\n    uint32_t uStack204;\n    int32_t **ppiStack200;\n    int32_t **ppiStack196;\n    uint32_t uStack192;\n    uint32_t uStack188;\n    int32_t **ppiStack184;\n    int32_t iStack180;\n    uchar auStack176 [8];\n    uint uStack168;\n    uint uStack160;\n    uint uStack156;\n    int32_t *piStack152;\n    uint uStack148;\n    uint uStack140;\n    int32_t *piStack136;\n    int32_t *piStack132;\n    int32_t *piStack128;\n    int32_t *piStack124;\n    int32_t *piStack120;\n    int32_t *apiStack112 [2];\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack88;\n    uint uStack84;\n    uchar auStack80 [16];\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    \n    if ((*0x4c23fc & 1) == 0) {\n        *0x4c23fc = *0x4c23fc | 1;\n        *0x4c2400 = 0;\n        *0x4c2408 = 0;\n        *0x4c240c = 1;\n        fcn.00421b2a(0x471fbf);\n    }\n    uStack212 = CONCAT22(uStack212._2_2_, 1);\n    ppiStack272 = arg_10h;\n    uStack268 = NULL;\n    ppiVar21 = NULL;\n    uStack264 = NULL;\n    uStack260 = CONCAT22(uStack260._2_2_, 1);\n    ppiVar20 = 0x40fa8e;\n    ppiStack252 = fcn.0042010a(8);\n    if (ppiStack252 == NULL) {\n        ppiStack252 = NULL;\n    }\n    else {\n        *ppiStack252 = 0x14;\n    }\n    piVar12 = *arg_ch;\n    ppiStack252[1] = NULL;\n    ppiStack220 = 0x1;\n    uStack204 = *(arg_8h[1][piVar12] + 10);\n    piStack280 = 0x17;\n    ppiVar13 = ppiStack252;\n    ppiStack216 = ppiStack252;\ncode_r0x0040fb4e:\n    do {\n        ppiVar6 = uStack268;\n        piVar12 = *arg_ch;\n        if (piVar12 == arg_14h) {\ncode_r0x0040fba3:\n            piVar14 = 0x14;\n            piStack280 = piVar14;\n            goto code_r0x0040fbb0;\n        }\n        piVar14 = arg_8h[1];\n        iVar1 = *(piVar14[piVar12] + 2);\n        if (iVar1 == 0x7f) goto code_r0x0040fba3;\n        uVar4 = iVar1;\n        if (uVar4 != 0x33) {\n            if (uVar4 == 0x4f) goto code_r0x0040fba3;\n            if (uVar4 != 5) {\n                if (0x58 < uVar4) goto code_r0x0040fba3;\n    // switch table (89 cases) at 0x41123c\n                switch(*(*(uVar4 + 0x4112a8) * 4 + 0x41123c)) {\n                case 0x40fb8f:\n                    iVar8 = *piVar14[piVar12];\n                    if (((3 < iVar8) && (iVar8 < 0x27)) || (0x29 < iVar8 - 1U)) goto code_r0x0040fba3;\n    // switch table (42 cases) at 0x411320\n                    switch(*(*(iVar8 + 0x41133f) * 4 + 0x411320)) {\n                    case 0x40fba3:\n                        goto code_r0x0040fba3;\n                    case 0x410c2f:\n                        piVar14 = 0x7;\n                        *arg_ch = piVar12 + 1;\n                        piStack280 = piVar14;\n                        break;\n                    case 0x410e8d:\n                        piStack280 = 0x16;\n                        fcn.0041e016(0x4c2400);\n                        puVar9 = fcn.0041e078();\n                        ppiVar20 = 0x410eb5;\n                        fcn.00412570();\n                        *(puVar9 + 0xc) = 9;\n                        *puVar9 = 0;\n                        *arg_ch = *arg_ch + 1;\n                        arg_10h = uStack276;\n                        in_stack_fffffedc = uStack268;\n                        goto code_r0x0040fb4e;\n                    case 0x410f0a:\n                        piStack280 = 0x16;\n                        fcn.0041e016(0x4c2400);\n                        uStack140 = CONCAT31(uStack140._1_3_, 1);\n                        ppiVar20 = uStack140;\n                        fcn.0041e078();\n                        in_stack_fffffec4 = 0x410f3f;\n                        fcn.0041e387(ppiVar20);\n                        *arg_ch = *arg_ch + 1;\n                        arg_10h = 0x16;\n                        unaff_EBX = ppiStack272;\n                        goto code_r0x0040fb4e;\n                    case 0x410f67:\n                        piVar14 = 0x8;\n                        *arg_ch = piVar12 + 1;\n                        piStack280 = piVar14;\n                        break;\n                    case 0x47aee3:\n                        piVar14 = 0xa;\n                        *arg_ch = piVar12 + 1;\n                        piStack280 = piVar14;\n                        break;\n                    case 0x47aef5:\n                        in_stack_fffffebc = L\"Default\";\n                        fcn.0040caee(L\"Default\");\n                        uVar19 = 0xffffffff;\n                        uVar16 = 0x29;\n                        goto code_r0x0047af2d;\n                    case 0x47af12:\n                        in_stack_fffffebc = 0x49dbf0;\n                        fcn.0040caee(0x49dbf0);\n                        uVar19 = 0;\n                        uVar16 = 0x2a;\ncode_r0x0047af2d:\n                        piStack280 = 0x16;\n                        fcn.004499d0(uVar16, uVar19, in_stack_fffffebc, in_stack_fffffec0, in_stack_fffffec4, ppiVar20);\n                        fcn.0041e016(0x4c2400);\n                        puVar9 = &stack0xffffffb0;\n                        fcn.0041e078();\n                        fcn.0044a689(puVar9);\n                        *arg_ch = *arg_ch + 1;\n                        fcn.00405cd3();\n                        arg_10h = uStack276;\n                        in_stack_fffffedc = uStack268;\n                        goto code_r0x0040fb4e;\n                    }\n                    break;\n                case 0x40fba3:\n                    goto code_r0x0040fba3;\n                case 0x410439:\n                    piVar14 = 0xd;\n                    *arg_ch = piVar12 + 1;\n                    piStack280 = piVar14;\n                    break;\n                case 0x410501:\n                    if ((piVar12 == NULL) ||\n                       ((*(piVar14[piVar12 + -1] + 8) != 0x48 && (*(piVar14[piVar12 + -1] + 8) != 0x4f)))) {\n                        piVar14 = 0x12;\n                        *arg_ch = piVar12 + 1;\n                        piStack280 = piVar14;\n                        break;\n                    }\n                    if (uStack268 == NULL) goto code_r0x0047b68d;\n                    puVar9 = &stack0xffffff90;\n                    apiStack112[0] = NULL;\n                    uStack104 = 0;\n                    uStack100 = 1;\n                    ppiVar20 = fcn.0041e078();\n                    in_stack_fffffec0 = arg_8h;\n                    in_stack_fffffec4 = arg_ch;\n                    iVar8 = fcn.0040f6d0(arg_8h, arg_ch, ppiVar20, puVar9);\n                    if (iVar8 < 0) {\n                        fcn.00412570();\n                        uVar16 = 0xffffffff;\n                        ppiVar20 = unaff_EBX;\n                        unaff_EBX = unaff_EDI;\n                        goto joined_r0x0040fbeb;\n                    }\n                    in_stack_fffffebc = &stack0xffffff80;\n                    fcn.0041e078();\n                    fcn.0040d89e(in_stack_fffffebc);\n                    fcn.00412570();\n                    goto code_r0x0040fb4e;\n                case 0x410533:\n                    piVar14 = 0x13;\n                    *arg_ch = piVar12 + 1;\n                    piStack280 = piVar14;\n                    break;\n                case 0x41057c:\n                    piVar14 = 0x1;\n                    *arg_ch = piVar12 + 1;\n                    piStack280 = piVar14;\n                    break;\n                case 0x41058e:\n                    piStack280 = 0x16;\n                    if (uStack268 == NULL) {\n                        ppiVar20 = 0x410dfa;\n                        fcn.0040d89e(0x4c2400);\n                    }\n                    else if (uStack260._1_1_ == '\\0') {\n                        ppiVar20 = 0x4105b3;\n                        ppiVar6 = fcn.0042010a(0x18);\n                        if (ppiVar6 == NULL) {\n                            ppiVar6 = NULL;\n                        }\n                        else {\n                            ppiVar6[2] = NULL;\n                            ppiVar20 = 0x4105d3;\n                            fcn.004113a0(0x4c2400);\n                        }\n                        ppiVar6[4] = ppiVar21;\n                        ppiVar21 = ppiVar6;\n                        uStack264 = ppiVar6;\n                    }\n                    else {\n                        ppiVar20 = 0x410e83;\n                        fcn.0040d89e(0x4c2400);\n                        uStack264 = uStack264 & 0xffff00ff;\n                    }\n                    piVar12 = arg_8h[1];\n                    piVar14 = *arg_ch;\n                    uStack276 = uStack276 + 1;\n                    if (*(piVar12[piVar14 + 1] + 8) == 0x47) {\n                        uStack264 = arg_10h;\n                        if ((uStack276 != 0x1) && (uStack264 = unaff_EBX,  uStack268._1_1_ != '\\0')) {\n                            uStack264 = unaff_EBX[4];\n                        }\n                        ppiStack200 = 0x49dc40;\n                        ppiStack196 = NULL;\n                        uStack192 = 0;\n                        uStack188 = 0;\n                        ppiStack216 = *piVar12[piVar14];\n                        ppiStack248 = *(piVar12[piVar14] + 10);\n                        if ((*0x4c23f4 & 1) == 0) {\n                            *0x4c23f4 = *0x4c23f4 | 1;\n                            puVar11 = fcn.0040caee(L\"CALL\");\n                            in_stack_fffffebc = 0x4110fe;\n                            *0x4c23f8 = (**(**0x4c22ec + 4))(*puVar11);\n                            fcn.00405cd3();\n                        }\n                        if (ppiStack216 != *0x4c23f8) {\n                            *arg_ch = *arg_ch + 1;\n                            piVar12 = arg_8h[1];\n                            if (*(piVar12[*arg_ch] + 8) == 0x47) {\n                                ppiStack240 = *arg_ch + 1;\n                                *arg_ch = ppiStack240;\n                                uVar4 = 0;\n                                while( true ) {\n                                    while( true ) {\n                                        while( true ) {\n                                            piVar14 = *arg_ch;\n                                            iVar1 = *(piVar12[piVar14] + 8);\n                                            if (iVar1 != 0x47) break;\n                                            uVar4 = uVar4 + 1;\n                                            *arg_ch = piVar14 + 1;\n                                        }\n                                        ppiStack184 = ppiStack240;\n                                        if (iVar1 == 0x48) break;\n                                        if (iVar1 == 0x7f) goto code_r0x0047b5de;\n                                        *arg_ch = piVar14 + 1;\n                                    }\n                                    if (uVar4 == 0) break;\n                                    uVar4 = uVar4 - 1;\n                                    *arg_ch = piVar14 + 1;\n                                }\n                                ppiStack256 = *arg_ch;\n                                *arg_ch = ppiStack256 + 1;\n                                uStack204 = uVar4;\n                                if (ppiStack240 < ppiStack256) {\n                                    do {\n                                        uStack160 = 0;\n                                        piStack152 = NULL;\n                                        uStack148 = 0x1;\n                                        ppiVar20 = ppiStack196;\n                                        if (uStack192 == uStack188) {\n                                            uStack188 = uStack188 * 2;\n                                            if (uStack188 < 8) {\n                                                uStack188 = 8;\n                                            }\n                                            ppiVar20 = fcn.0042010a(-(uStack188 * 4 >> 0x20 != 0) | uStack188 * 4);\n                                            if ((ppiStack196 != NULL) && (uStack192 != 0)) {\n                                                fcn.0041faa0(ppiVar20, ppiStack196, uStack192 << 2);\n                                                fcn.0042017e(ppiStack196);\n                                            }\n                                        }\n                                        ppiStack196 = ppiVar20;\n                                        iVar8 = fcn.0042010a(0x10);\n                                        if (iVar8 == 0) {\n                                            iVar8 = 0;\n                                        }\n                                        else {\n                                            *(iVar8 + 8) = 0;\n                                            fcn.004113a0(&stack0xffffff60);\n                                        }\n                                        *(iStack180 + auStack176._0_4_ * 4) = iVar8;\n                                        auStack176._0_4_ = auStack176._0_4_ + 1;\n                                        unaff_EDI = *(iStack180 + -4 + auStack176._0_4_ * 4);\n                                        ppiVar20 = arg_8h;\n                                        unaff_ESI = ppiStack240;\n                                        iVar8 = fcn.0040fa40(arg_8h, &stack0xffffff58, unaff_EDI, ppiStack240);\n                                        if (iVar8 < 0) {\n                                            fcn.00414430();\n                                            fcn.004404c9();\n                                            uVar16 = 0xffffffff;\n                                            ppiVar20 = unaff_EBX;\n                                            goto joined_r0x0040fbeb;\n                                        }\n                                        uVar4 = uStack204 + 1;\n                                        uStack204 = uVar4;\n                                        if (ppiStack184 == ppiStack256) {\n                                            uStack148 = 0x1;\n                                            uStack160 = 0;\n                                            break;\n                                        }\n                                        if ((*(arg_8h[1][ppiStack184] + 8) != 0x40) || (ppiStack184 + 1 == ppiStack256))\n                                        {\n                                            fcn.0044d520(0x6f, *(arg_8h[1][ppiStack184] + 10));\n                                            fcn.00412570();\n                                            fcn.004404c9();\n                                            uVar16 = 0xffffffff;\n                                            ppiVar20 = unaff_EBX;\n                                            unaff_EBX = unaff_EDI;\n                                            goto joined_r0x0040fbeb;\n                                        }\n                                        ppiStack184 = ppiStack184 + 1;\n                                        fcn.00412570();\n                                    } while (ppiStack184 < ppiStack256);\n                                }\n                                in_stack_fffffec4 = ppiStack216;\n                                iVar8 = fcn.00414700(ppiStack216);\n                                if (uVar4 < *(iVar8 + 0x18)) {\ncode_r0x00411211:\n                                    uVar16 = 0x70;\n                                    in_stack_fffffebc = ppiStack256;\n                                    goto code_r0x0047b5ef;\n                                }\n                                in_stack_fffffebc = 0x41081d;\n                                in_stack_fffffec0 = ppiStack220;\n                                iVar8 = fcn.00414700(ppiStack220);\n                                ppiVar6 = ppiStack272;\n                                if (*(iVar8 + 0x1c) < uVar4) goto code_r0x00411211;\n                                ppiVar15 = ppiStack272[2];\n                                if (ppiVar15 != NULL) {\n                                    fcn.00401926();\n                                    ppiVar6[2] = NULL;\n                                    in_stack_fffffebc = ppiVar15;\n                                }\n                                if (4 < ppiVar6[3]) {\n    // switch table (11 cases) at 0x47b8b2\n                                    switch(ppiVar6[3]) {\n                                    case 0x5:\n                                        fcn.0041e3cc();\n                                        break;\n                                    case 0x8:\n                                        if (*ppiVar6 != NULL) {\n                                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar6);\n                                            fcn.0042017e(*ppiVar6);\n                                        }\n                                        break;\n                                    case 0xa:\n                                        if (*ppiVar6 != NULL) {\n                                            fcn.0044aa9c(*ppiVar6);\n                                        }\n                                        break;\n                                    case 0xb:\n                                        fcn.0042017e((*ppiVar6)[1]);\n                                        fcn.0042017e(*ppiVar6);\n                                        break;\n                                    case 0xc:\n                                        if (*ppiVar6 != NULL) {\n                                            fcn.0043a56f(*ppiVar6);\n                                        }\n                                        break;\n                                    case 0xd:\n                                    case 0xe:\n                                        if (*ppiVar6 != NULL) {\n                                            fcn.00401926(*ppiVar6);\n                                        }\n                                        break;\n                                    case 0xf:\n                                        if (*ppiVar6 != NULL) {\n                                            fcn.0043a599(*ppiVar6);\n                                        }\n                                    }\n                                }\n                                ppiVar6[3] = 0x1;\n                                *ppiVar6 = 0x1;\n                                iVar8 = (*unaff_EDI)[1];\n                                iVar7 = *(iVar8 + 8 + unaff_EDI);\n                                if (*(unaff_EDI + iVar8 + 0xd) != '\\0') {\n                                    iVar7 = *(iVar7 + 0x38);\n                                }\n                                *(iVar7 + 0x14) = 0;\n                                iVar7 = *(unaff_EDI + iVar8 + 8);\n                                if (*(unaff_EDI + iVar8 + 0xd) != '\\0') {\n                                    iVar7 = *(iVar7 + 0x38);\n                                }\n                                *(iVar7 + 0x18) = 0;\n                                ppiStack252 = (*unaff_EDI)[1] + unaff_EDI;\n                                if (*(ppiStack252 + 0xd) == '\\0') {\n                                    piVar12 = ppiStack252[2];\n                                }\n                                else {\n                                    piVar12 = ppiStack252[2][0xe];\n                                }\n                                if (piVar12[10] != 0) {\n                                    fcn.00401926(piVar12[10]);\n                                    piVar12[10] = 0;\n                                }\n                                if (4 < piVar12[0xb]) {\n    // switch table (11 cases) at 0x47b8de\n                                    switch(piVar12[0xb]) {\n                                    case 5:\n                                        fcn.0041e3cc();\n                                        break;\n                                    case 8:\n                                        if (piVar12[8] != 0) {\n                                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(piVar12[8]);\n                                            fcn.0042017e(piVar12[8]);\n                                        }\n                                        break;\n                                    case 10:\n                                        if (piVar12[8] != 0) {\n                                            fcn.0044aa9c(piVar12[8]);\n                                        }\n                                        break;\n                                    case 0xb:\n                                        fcn.0042017e(*(piVar12[8] + 4));\n                                        fcn.0042017e(piVar12[8]);\n                                        break;\n                                    case 0xc:\n                                        if (piVar12[8] != 0) {\n                                            fcn.0043a56f(piVar12[8]);\n                                        }\n                                        break;\n                                    case 0xd:\n                                    case 0xe:\n                                        if (piVar12[8] != 0) {\n                                            fcn.00401926(piVar12[8]);\n                                        }\n                                        break;\n                                    case 0xf:\n                                        if (piVar12[8] != 0) {\n                                            fcn.0043a599(piVar12[8]);\n                                        }\n                                    }\n                                }\n                                piVar12[0xb] = 1;\n                                piVar12[8] = 0;\n                                piVar12 = ppiStack252[2];\n                                if (*(ppiStack252 + 0xd) != '\\0') {\n                                    piVar12 = piVar12[0xe];\n                                }\n                                *(piVar12 + 0xc) = 0;\n                                iVar8 = fcn.00414700(ppiStack228);\n                                iVar8 = (**(iVar8 + 0xc))(&stack0xffffff28, 0x16);\n                                if (-1 < iVar8) {\n                                    uVar4 = 0;\n                                    uStack212 = 0x49dc40;\n                                    if (uStack204 != 0) {\n                                        do {\n                                            ppiStack252 = ppiStack208[uVar4];\n                                            if (ppiStack252 != NULL) {\n                                                fcn.00414430();\n                                                fcn.0042017e(ppiStack252);\n                                            }\n                                            ppiStack208[uVar4] = NULL;\n                                            uVar4 = uVar4 + 1;\n                                        } while (uVar4 < uStack204);\n                                    }\n                                    uStack204 = 0;\n                                    fcn.0042017e(ppiStack208);\n                                    goto code_r0x00410966;\n                                }\n                            }\n                            else {\ncode_r0x0047b5de:\n                                uVar16 = 0x6f;\ncode_r0x0047b5ef:\n                                fcn.0044d520(uVar16, in_stack_fffffebc);\n                            }\n                            fcn.004404c9();\n                            uVar16 = 0xffffffff;\n                            ppiVar20 = unaff_EBX;\n                            goto joined_r0x0040fbeb;\n                        }\n                        in_stack_fffffebc = arg_8h;\n                        in_stack_fffffec0 = arg_ch;\n                        in_stack_fffffec4 = uStack264;\n                        iVar8 = fcn.0045e713(arg_8h, arg_ch, uStack264);\n                        fcn.004404c9();\n                        if (-1 < iVar8) {\ncode_r0x00410966:\n                            piVar12 = unaff_EDI[0x3f];\n                            goto joined_r0x00411174;\n                        }\n                        goto code_r0x0047a9fe;\n                    }\n                    in_stack_fffffec4 = *piVar12[piVar14];\n                    fcn.0041e078();\n                    in_stack_fffffec0 = 0x47a9d3;\n                    fcn.0044b020(in_stack_fffffec4);\n                    *arg_ch = *arg_ch + 1;\n                    goto code_r0x0040fb4e;\n                case 0x41097f:\n                    if ((piStack280 == 0x16) || (piStack280 == 0x13)) {\n                        piStack280 = 0xb;\n                        piVar14 = 0xb;\n                        *arg_ch = piVar12 + 1;\n                    }\n                    else {\n                        piStack280 = 0x11;\n                        piVar14 = 0x11;\n                        *arg_ch = piVar12 + 1;\n                    }\n                    break;\n                case 0x4109a5:\n                    piVar14 = NULL;\n                    *arg_ch = piVar12 + 1;\n                    piStack280 = piVar14;\n                    break;\n                case 0x410a44:\n                    piStack280 = 0x16;\n                    if (uStack268 == NULL) {\n                        if (arg_10h != 0x4c2400) {\n                            if ((arg_10h[3] == 0x4) && (*0x4c240c == 4)) {\n                                fcn.0040c935(*0x4c2408);\n                            }\n                            else {\n                                fcn.00412570();\n                                fcn.004113a0(0x4c2400);\n                            }\n                        }\ncode_r0x00410a7d:\n                        uStack268 = ppiVar6;\n                        ppiVar6 = ppiVar21;\n                    }\n                    else {\n                        if (uStack260._1_1_ != '\\0') {\n                            if (ppiVar21 != 0x4c2400) {\n                                if ((*0x4c240c == 4) && (ppiVar21[3] == 0x4)) {\n                                    fcn.0040c935(*0x4c2408);\n                                }\n                                else {\n                                    fcn.00412570();\n                                    fcn.004113a0(0x4c2400);\n                                }\n                            }\n                            uStack260 = uStack260 & 0xffff00ff;\n                            goto code_r0x00410a7d;\n                        }\n                        ppiVar6 = fcn.0042010a(0x18);\n                        if (ppiVar6 == NULL) {\n                            ppiVar6 = NULL;\n                        }\n                        else {\n                            ppiVar6[2] = NULL;\n                            fcn.004113a0(0x4c2400);\n                        }\n                        uStack264 = ppiVar6;\n                        if (ppiVar21 == NULL) {\n                            ppiVar6[4] = NULL;\n                        }\n                        else {\n                            ppiVar6[4] = ppiVar21;\n                        }\n                    }\n                    uStack268 = uStack268 + 1;\n                    ppiVar21 = arg_10h;\n                    if ((uStack268 != 0x1) && (ppiVar21 = ppiVar6,  uStack260._1_1_ != '\\0')) {\n                        ppiVar21 = ppiVar6[4];\n                    }\n                    uStack236 = CONCAT44(*arg_8h[1][*arg_ch], uStack236);\n                    if (ppiVar21[3] == 0x4) {\n                        ppiVar20 = 0x47a873;\n                        fcn.0040c935(*arg_8h[1][*arg_ch]);\n                    }\n                    else {\n                        if (ppiVar21[2] != NULL) {\n                            fcn.00401926(ppiVar21[2]);\n                            ppiVar21[2] = NULL;\n                        }\n                        if (4 < ppiVar21[3]) {\n    // switch table (11 cases) at 0x47b886\n                            switch(ppiVar21[3]) {\n                            case 0x5:\n                                fcn.0041e3cc();\n                                break;\n                            case 0x8:\n                                if (*ppiVar21 != NULL) {\n                                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar21);\n                                    fcn.0042017e(*ppiVar21);\n                                }\n                                break;\n                            case 0xa:\n                                if (*ppiVar21 != NULL) {\n                                    fcn.0044aa9c(*ppiVar21);\n                                }\n                                break;\n                            case 0xb:\n                                fcn.0042017e((*ppiVar21)[1]);\n                                fcn.0042017e(*ppiVar21);\n                                break;\n                            case 0xc:\n                                if (*ppiVar21 != NULL) {\n                                    fcn.0043a56f(*ppiVar21);\n                                }\n                                break;\n                            case 0xd:\n                            case 0xe:\n                                if (*ppiVar21 != NULL) {\n                                    fcn.00401926(*ppiVar21);\n                                }\n                                break;\n                            case 0xf:\n                                if (*ppiVar21 != NULL) {\n                                    fcn.0043a599(*ppiVar21);\n                                }\n                            }\n                        }\n                        ppiVar20 = 0x10;\n                        *ppiVar21 = NULL;\n                        ppiVar21[3] = 0x4;\n                        in_stack_fffffec4 = 0x410ada;\n                        piVar12 = fcn.0042010a(0x10);\n                        if (piVar12 == NULL) {\n                            piVar12 = NULL;\n                        }\n                        else {\n                            *piVar12 = *uStack236;\n                            piVar12[1] = uStack236[1];\n                            piVar12[2] = uStack236[2];\n                            piVar14 = uStack236[3];\n                            piVar12[3] = piVar14;\n                            *piVar14 = *piVar14 + 1;\n                        }\n                        ppiVar21[2] = piVar12;\n                    }\n                    *arg_ch = *arg_ch + 1;\n                    ppiVar21 = ppiVar6;\n                    if (*(ppiVar6 + 0x101) != '\\0') {\n                        ppiVar20 = fcn.0041e078();\n                        in_stack_fffffec4 = 0x47a948;\n                        ppiVar6 = in_stack_fffffedc;\n                        fcn.0045ee52(ppiVar20);\n                        in_stack_fffffedc = ppiVar6;\n                    }\n                    if (*(ppiVar6 + 0x102) != '\\0') {\n                        in_stack_fffffebc = fcn.0041e078();\n                        ppiVar20 = 0x47a964;\n                        fcn.0045ef9d(in_stack_fffffebc);\n                    }\n                    goto code_r0x0040fb4e;\n                case 0x410b34:\n                    if ((piStack280 == 0x16) || (piStack280 == 0x13)) {\n                        piStack280 = 0xc;\n                    }\n                    else {\n                        piStack280 = 0x10;\n                    }\n                    *arg_ch = piVar12 + 1;\n                    piVar14 = piStack280;\n                    break;\n                case 0x410bb2:\n                    piVar14 = 0xe;\n                    *arg_ch = piVar12 + 1;\n                    piStack280 = piVar14;\n                    break;\n                case 0x410be3:\n                    piVar14 = 0x9;\n                    *arg_ch = piVar12 + 1;\n                    piStack280 = piVar14;\n                    break;\n                case 0x410d6e:\n                    piVar14 = 0x5;\n                    *arg_ch = piVar12 + 1;\n                    piStack280 = piVar14;\n                    break;\n                case 0x410e08:\n                    piVar14 = 0x2;\n                    *arg_ch = piVar12 + 1;\n                    piStack280 = piVar14;\n                    break;\n                case 0x410e63:\n                    piVar14 = 0x4;\n                    *arg_ch = piVar12 + 1;\n                    piStack280 = piVar14;\n                    break;\n                case 0x410f55:\n                    piVar14 = 0x3;\n                    *arg_ch = piVar12 + 1;\n                    piStack280 = piVar14;\n                    break;\n                case 0x410ff7:\n                    piStack280 = 0x16;\n                    fcn.0041e016(0x4c2400);\n                    *arg_ch = *arg_ch + 1;\n                    uVar18 = fcn.0041e078();\n                    ppiVar20 = uVar18;\n                    in_stack_fffffec4 = *(uVar18 >> 0x20);\n                    in_stack_fffffec0 = 0x411035;\n                    iVar8 = fcn.0041e08f(in_stack_fffffec4, ppiVar20);\n                    arg_10h = uStack276;\n                    in_stack_fffffedc = uStack268;\n                    if (iVar8 < 0) {\ncode_r0x0047b64c:\n                        fcn.0044d520(in_stack_fffffec4, ppiVar20);\n                        goto code_r0x0047a9fe;\n                    }\n                    goto code_r0x0040fb4e;\n                case 0x411079:\n                    piStack280 = 0x16;\n                    fcn.0041e016(0x4c2400);\n                    uStack236 = *arg_8h[1][*arg_ch];\n                    puVar10 = fcn.0041e078();\n                    ppiVar20 = 0x4110b5;\n                    fcn.00412570();\n                    *puVar10 = uStack236;\n                    *(puVar10 + 0xc) = 3;\n                    *arg_ch = *arg_ch + 1;\n                    arg_10h = uStack276;\n                    in_stack_fffffedc = uStack268;\n                    goto code_r0x0040fb4e;\n                case 0x411118:\n                    piStack280 = 0x16;\n                    fcn.0041e016(0x4c2400);\n                    if (*(arg_8h[1][*arg_ch + 1] + 8) == 0x47) {\n                        ppiVar20 = &stack0xffffff53;\n                        in_stack_fffffec4 = fcn.0041e078();\n                        in_stack_fffffebc = arg_8h;\n                        in_stack_fffffec0 = arg_ch;\n                        ppiVar6 = ppiVar21;\n                        iVar8 = fcn.00413680(0, arg_8h, arg_ch, in_stack_fffffec4, ppiVar20);\n                        if (iVar8 < 0) goto code_r0x0047a9fe;\n                        piVar12 = ppiVar21[0x3f];\n                        ppiVar21 = ppiVar6;\n                        arg_10h = uStack276;\n                        in_stack_fffffedc = uStack268;\njoined_r0x00411174:\n                        piStack280 = 0x16;\n                        if (piVar12 == 0x1) goto code_r0x0047a9fe;\n                    }\n                    else {\n                        ppiVar20 = *arg_8h[1][*arg_ch];\n                        piStack132 = *ppiVar20;\n                        piStack128 = ppiVar20[1];\n                        piStack124 = ppiVar20[2];\n                        piStack120 = ppiVar20[3];\n                        *piStack120 = *piStack120 + 1;\n                        ppiVar20 = &stack0xffffff7c;\n                        iVar8 = fcn.0041cf79(ppiVar20);\n                        if (iVar8 == 0) {\n                            fcn.0044d520(0x85, *(arg_8h[1][*arg_ch] + 10));\n                            fcn.00405cd3();\n                            goto code_r0x0047a9fe;\n                        }\n                        in_stack_fffffec4 = &stack0xffffff78;\n                        fcn.0041e078();\n                        fcn.0044ba5d(in_stack_fffffec4);\n                        *arg_ch = *arg_ch + 1;\n                        in_stack_fffffec0 = 0x47ac58;\n                        fcn.00405cd3();\n                        arg_10h = uStack276;\n                        in_stack_fffffedc = uStack268;\n                    }\n                    goto code_r0x0040fb4e;\n                case 0x47a969:\n                    piStack280 = 0x16;\n                    fcn.0041e016(0x4c2400);\n                    uVar16 = *arg_8h[1][*arg_ch];\n                    uVar19 = arg_8h[1][*arg_ch][1];\n                    puVar11 = fcn.0041e078();\n                    ppiVar20 = 0x47a9a4;\n                    fcn.00412570();\n                    puVar11[1] = uVar19;\n                    puVar11[3] = 2;\n                    *puVar11 = uVar16;\n                    *arg_ch = *arg_ch + 1;\n                    ppiVar13 = ppiStack256;\n                    arg_10h = uStack276;\n                    in_stack_fffffedc = uStack268;\n                    goto code_r0x0040fb4e;\n                case 0x47ac6a:\n                    piStack280 = 0x16;\n                    if (uStack268 == NULL) goto code_r0x0047b68d;\n                    puVar9 = &stack0xffffffa0;\n                    uStack96 = 0;\n                    uStack88 = 0;\n                    uStack84 = 1;\n                    ppiVar20 = fcn.0041e078();\n                    in_stack_fffffec0 = arg_8h;\n                    in_stack_fffffec4 = arg_ch;\n                    iVar8 = fcn.0040f6d0(arg_8h, arg_ch, ppiVar20, puVar9);\n                    if (iVar8 < 0) {\n                        fcn.00412570();\n                        uVar16 = 0xffffffff;\n                        ppiVar20 = unaff_EBX;\n                        unaff_EBX = unaff_EDI;\n                        goto joined_r0x0040fbeb;\n                    }\n                    in_stack_fffffebc = &stack0xffffff90;\n                    fcn.0041e078();\n                    fcn.0040d89e(in_stack_fffffebc);\n                    fcn.00412570();\n                    goto code_r0x0040fb4e;\n                case 0x47ad70:\n                    piVar14 = 0x6;\n                    *arg_ch = piVar12 + 1;\n                    piStack280 = piVar14;\n                    break;\n                case 0x47ad82:\n                    piVar14 = 0xf;\n                    *arg_ch = piVar12 + 1;\n                    piStack280 = piVar14;\n                    break;\n                case 0x47ad94:\n                    while( true ) {\n                        piVar12 = fcn.00402835();\n                        if ((*piVar12 == 0x14) || (*piVar12 == 0x12)) break;\n                        in_stack_fffffec4 = 0x47adb8;\n                        iVar8 = fcn.00411620(&stack0xffffff24, &stack0xffffff24);\n                        ppiVar13 = ppiStack208;\n                        if (iVar8 < 0) goto code_r0x0047b6c7;\n                    }\n                    if (uStack268 == NULL) {\n                        ppiVar13 = *(arg_8h[1][*arg_ch] + 10);\ncode_r0x0047b6c7:\n                        fcn.0044d520(0x6e, ppiVar13);\n                        uStack264 = ppiStack228;\n                        ppiVar13 = ppiStack228;\n                        goto code_r0x0047a9fe;\n                    }\n                    fcn.0041e078();\n                    cVar3 = fcn.0044a7a2();\n                    if (cVar3 == '\\0') {\n                        fcn.0041bd8f();\n                        *arg_ch = *arg_ch + 1;\n                        piStack280 = 0x12;\n                        ppiStack252 = ppiStack216;\n                        ppiVar13 = ppiStack216;\n                        arg_10h = uStack276;\n                        in_stack_fffffedc = uStack268;\n                    }\n                    else {\n                        fcn.0041bd8f();\n                        *arg_ch = *arg_ch + 1;\n                        piVar12 = *arg_ch;\n                        piVar14 = arg_8h[1];\n                        iVar8 = 1;\n                        do {\n                            iVar1 = *(piVar14[piVar12] + 8);\n                            if (iVar1 == 0x57) {\n                                iVar8 = iVar8 + 1;\n                            }\n                            else if (iVar1 == 0x58) {\n                                iVar8 = iVar8 + -1;\n                            }\n                            else if ((iVar1 == 0x7f) || ((iVar1 == 0x40 && (iVar8 == 0)))) break;\n                            piVar12 = piVar12 + 1;\n                            *arg_ch = piVar12;\n                        } while (iVar8 != 0);\n                        ppiStack252 = ppiStack216;\n                        piStack280 = 0x12;\n                        ppiVar13 = ppiStack216;\n                        arg_10h = uStack276;\n                        in_stack_fffffedc = uStack268;\n                    }\n                    goto code_r0x0040fb4e;\n                case 0x47ae61:\n                    if (uStack268 == NULL) {\ncode_r0x0047b68d:\n                        fcn.0044d520(0x6e, *(arg_8h[1][*arg_ch] + 10));\n                        uVar16 = 0xffffffff;\n                        ppiVar20 = unaff_EBX;\n                        goto joined_r0x0040fbeb;\n                    }\n                    piVar12 = piVar12 + 1;\n                    piStack280 = 0x16;\n                    *arg_ch = piVar12;\n                    iVar8 = 1;\n                    do {\n                        iVar1 = *(piVar14[piVar12] + 8);\n                        if (iVar1 == 0x47) {\n                            iVar8 = iVar8 + 1;\n                        }\n                        else if (iVar1 == 0x48) {\n                            iVar8 = iVar8 + -1;\n                        }\n                        else if ((iVar1 == 0x7f) || ((iVar1 == 0x40 && (iVar8 == 1)))) break;\n                        piVar12 = piVar12 + 1;\n                        *arg_ch = piVar12;\n                    } while (iVar8 != 0);\n                    ppiVar13 = ppiStack252;\n                    if ((*(piVar14[*arg_ch + -1] + 8) == 0x48) && (iVar8 == 0)) {\n                        *arg_ch = *arg_ch + -1;\n                    }\n                    goto code_r0x0040fb4e;\n                case 0x47af75:\n                    uStack168 = 0;\n                    uStack160 = 0;\n                    uStack156 = 1;\n                    uStack276 = CONCAT13(1, uStack276);\n                    if ((piVar12 != NULL) &&\n                       ((*(piVar14[piVar12 + -1] + 8) == 0x48 || (*(piVar14[piVar12 + -1] + 8) == 0x4f)))) {\n                        uVar16 = fcn.0041e078();\n                        fcn.0040d89e(uVar16);\n                    }\n                    cVar3 = fcn.0045cff8();\n                    if (cVar3 == '\\0') {\n                        if (uStack276._3_1_ == '\\0') {\n                            fcn.0044d520(0xa9, *(arg_8h[1][*arg_ch] + 10));\n                            fcn.00412570();\n                            uVar16 = 0xffffffff;\n                            ppiVar20 = unaff_EBX;\n                            goto joined_r0x0040fbeb;\n                        }\n                        ppiVar21 = fcn.0045ea97();\n                        fcn.0040d89e(ppiVar21);\n                        cVar3 = fcn.0045cff8();\n                        if (cVar3 == '\\0') {\n                            fcn.0044d520(0xa7, 0xa7);\n                            fcn.00412570();\n                            uVar16 = 0xffffffff;\n                            ppiVar20 = unaff_EBX;\n                            unaff_EBX = unaff_ESI;\n                            goto joined_r0x0040fbeb;\n                        }\n                    }\n                    unaff_EBX = &stack0xffffff68;\n                    uStack64 = 0;\n                    uStack56 = 0;\n                    uStack52 = 1;\n                    unaff_EDI = arg_8h;\n                    unaff_ESI = arg_ch;\n                    iVar8 = fcn.0045f34f(arg_8h, arg_ch, unaff_EBX, &stack0xffffffc0);\n                    if (iVar8 < 0) {\n                        fcn.0044d520(0x6e, *(arg_8h[1][*arg_ch] + 10));\n                        fcn.00412570();\n                        fcn.00412570();\n                        uVar16 = 0xffffffff;\n                        ppiVar20 = unaff_EBX;\n                        goto joined_r0x0040fbeb;\n                    }\n                    piStack280 = 0x16;\n                    if (uStack276._3_1_ == '\\0') {\n                        fcn.0041bd8f();\n                    }\n                    fcn.0041e016(&stack0xffffffb0);\n                    fcn.00412570();\n                    ppiVar20 = 0x47b0d6;\n                    fcn.00412570();\n                    arg_10h = uStack276;\n                    in_stack_fffffedc = uStack268;\n                    goto code_r0x0040fb4e;\n                }\ncode_r0x0040fbb0:\n                do {\n                    ppiVar6 = ppiVar13;\n                    if (uStack212._1_1_ != '\\0') {\n                        ppiVar6 = ppiVar13[1];\n                    }\n                    ppiVar15 = ppiVar20;\n    // switch table (7 cases) at 0x411304\n                    switch(*(*ppiVar6 * 0x15 + 0x4bbc20 + piVar14)) {\n                    case 0:\n                        goto code_r0x0040fed0;\n                    case 1:\n                        in_stack_fffffec4 = 0x4101f8;\n                        iVar8 = fcn.00411620(&stack0xffffff24, &stack0xffffff24);\n                        ppiVar13 = ppiStack208;\n                        if (iVar8 < 0) goto code_r0x0047b6c7;\n                        uStack260 = uStack224;\n                        ppiVar13 = uStack224;\n                        break;\n                    case 2:\n                        goto code_r0x004104b5;\n                    case 3:\n                        goto code_r0x0040fefd;\n                    case 4:\n                        fcn.0044d520(0x6b, uStack204);\n                        uVar16 = 0xffffffff;\n                        ppiVar20 = ppiStack272;\n                        unaff_EBX = ppiStack272;\n                        goto joined_r0x0040fbeb;\n                    case 5:\n                        fcn.0044d520(0x6c, uStack204);\n                        uVar16 = 0xffffffff;\n                        ppiVar20 = ppiStack272;\n                        unaff_EBX = ppiStack272;\n                        goto joined_r0x0040fbeb;\n                    case 6:\n                        fcn.0044d520(0x6d, uStack204);\n                        uVar16 = 0xffffffff;\n                        ppiVar20 = ppiStack272;\n                        unaff_EBX = ppiStack272;\n                        goto joined_r0x0040fbeb;\n                    default:\n                        if (uStack268 != 0x1) {\n                            in_stack_fffffec4 = 0x6e;\n                            goto code_r0x0047b64c;\n                        }\n                        uVar16 = 0;\n                        ppiVar20 = ppiStack272;\n                        unaff_EBX = ppiStack272;\n                        goto joined_r0x0040fbeb;\n                    }\n                } while( true );\n            }\n            piStack280 = 0x16;\n            if (uStack268 == NULL) {\n                if (arg_10h != 0x4c2400) {\n                    if ((arg_10h[3] == 0x4) && (*0x4c240c == 4)) {\n                        ppiVar20 = 0x47b0e9;\n                        fcn.0040c935(*0x4c2408);\n                    }\n                    else {\n                        piVar12 = arg_10h[2];\n                        if (piVar12 != NULL) {\n                            *piVar12[3] = *piVar12[3] + -1;\n                            if (*piVar12[3] == 0) {\n                                fcn.0042017e(*piVar12);\n                                fcn.0042017e(piVar12[3]);\n                            }\n                            fcn.0042017e(piVar12);\n                            arg_10h[2] = NULL;\n                        }\n                        if (4 < arg_10h[3]) {\n    // switch table (11 cases) at 0x47b90a\n                            switch(arg_10h[3]) {\n                            case 0x5:\n                                fcn.0041e3cc();\n                                break;\n                            case 0x8:\n                                if (*arg_10h != NULL) {\n                                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*arg_10h);\n                                    fcn.0042017e(*arg_10h);\n                                }\n                                break;\n                            case 0xa:\n                                if (*arg_10h != NULL) {\n                                    fcn.0044aa9c(*arg_10h);\n                                }\n                                break;\n                            case 0xb:\n                                fcn.0042017e((*arg_10h)[1]);\n                                fcn.0042017e(*arg_10h);\n                                break;\n                            case 0xc:\n                                if (*arg_10h != NULL) {\n                                    fcn.0043a56f(*arg_10h);\n                                }\n                                break;\n                            case 0xd:\n                            case 0xe:\n                                if (*arg_10h != NULL) {\n                                    fcn.00401926(*arg_10h);\n                                }\n                                break;\n                            case 0xf:\n                                if (*arg_10h != NULL) {\n                                    fcn.0043a599(*arg_10h);\n                                }\n                            }\n                        }\n                        unaff_EDI = 0x4c2400;\n                        arg_10h[3] = 0x1;\n                        *arg_10h = NULL;\n                        ppiVar20 = 0x40ffb1;\n                        fcn.004113a0(0x4c2400);\n                        ppiVar6 = ppiStack272;\n                    }\n                }\ncode_r0x0040ffb5:\n                uStack268 = ppiVar6;\n            }\n            else {\n                if (uStack260._1_1_ != '\\0') {\n                    if (ppiVar21 != 0x4c2400) {\n                        if ((ppiVar21[3] == 0x4) && (*0x4c240c == 4)) {\n                            ppiVar20 = 0x47b1d2;\n                            fcn.0040c935(*0x4c2408);\n                        }\n                        else {\n                            fcn.00412570();\n                            ppiVar20 = 0x410b8c;\n                            fcn.004113a0(0x4c2400);\n                        }\n                    }\n                    uStack260 = uStack260 & 0xffff00ff;\n                    goto code_r0x0040ffb5;\n                }\n                ppiVar20 = 0x410469;\n                ppiVar6 = fcn.0042010a(0x18);\n                if (ppiVar6 == NULL) {\n                    ppiVar6 = NULL;\n                }\n                else {\n                    ppiVar6[2] = NULL;\n                    ppiVar20 = 0x410489;\n                    fcn.004113a0(0x4c2400);\n                }\n                ppiVar6[4] = ppiVar21;\n                ppiVar21 = ppiVar6;\n                uStack264 = ppiVar6;\n            }\n            uStack268 = uStack268 + 1;\n            ppiVar6 = arg_10h;\n            if ((uStack268 != 0x1) && (ppiVar6 = ppiVar21,  uStack260._1_1_ != '\\0')) {\n                ppiVar6 = ppiVar21[4];\n            }\n            uStack236 = CONCAT44(*arg_8h[1][*arg_ch], uStack236);\n            if (ppiVar6[2] != NULL) {\n                ppiVar20 = 0x47b1dd;\n                fcn.00401926(ppiVar6[2]);\n                ppiVar6[2] = NULL;\n            }\n            if (4 < ppiVar6[3]) {\n    // switch table (11 cases) at 0x47b936\n                switch(ppiVar6[3]) {\n                case 0x5:\n                    fcn.0041e3cc();\n                    break;\n                case 0x8:\n                    if (*ppiVar6 != NULL) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar6);\n                        ppiVar20 = 0x47b214;\n                        fcn.0042017e(*ppiVar6);\n                    }\n                    break;\n                case 0xa:\n                    if (*ppiVar6 != NULL) {\n                        ppiVar20 = 0x47b22c;\n                        fcn.0044aa9c(*ppiVar6);\n                    }\n                    break;\n                case 0xb:\n                    fcn.0042017e((*ppiVar6)[1]);\n                    ppiVar20 = 0x47b251;\n                    fcn.0042017e(*ppiVar6);\n                    break;\n                case 0xc:\n                    if (*ppiVar6 != NULL) {\n                        ppiVar20 = 0x47b269;\n                        fcn.0043a56f(*ppiVar6);\n                    }\n                    break;\n                case 0xd:\n                case 0xe:\n                    if (*ppiVar6 != NULL) {\n                        ppiVar20 = 0x47b293;\n                        fcn.00401926(*ppiVar6);\n                    }\n                    break;\n                case 0xf:\n                    if (*ppiVar6 != NULL) {\n                        ppiVar20 = 0x47b27e;\n                        fcn.0043a599(*ppiVar6);\n                    }\n                }\n            }\n            ppiVar6[3] = 0x1;\n            *ppiVar6 = uStack236._4_4_;\n            *arg_ch = *arg_ch + 1;\n            goto code_r0x0040fb4e;\n        }\n        piStack280 = 0x16;\n        if (uStack268 == NULL) {\n            if (arg_10h != 0x4c2400) {\n                if ((arg_10h[3] == 0x4) && (*0x4c240c == 4)) {\n                    fcn.0040c935(*0x4c2408);\n                }\n                else {\n                    piVar12 = arg_10h[2];\n                    if (piVar12 != NULL) {\n                        *piVar12[3] = *piVar12[3] + -1;\n                        if (*piVar12[3] == 0) {\n                            fcn.0042017e(*piVar12);\n                            fcn.0042017e(piVar12[3]);\n                        }\n                        fcn.0042017e(piVar12);\n                        arg_10h[2] = NULL;\n                    }\n                    if (4 < arg_10h[3]) {\n    // switch table (11 cases) at 0x47b962\n                        switch(arg_10h[3]) {\n                        case 0x5:\n                            fcn.0041e3cc();\n                            break;\n                        case 0x8:\n                            if (*arg_10h != NULL) {\n                                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*arg_10h);\n                                fcn.0042017e(*arg_10h);\n                            }\n                            break;\n                        case 0xa:\n                            if (*arg_10h != NULL) {\n                                fcn.0044aa9c(*arg_10h);\n                            }\n                            break;\n                        case 0xb:\n                            fcn.0042017e((*arg_10h)[1]);\n                            fcn.0042017e(*arg_10h);\n                            break;\n                        case 0xc:\n                            if (*arg_10h != NULL) {\n                                fcn.0043a56f(*arg_10h);\n                            }\n                            break;\n                        case 0xd:\n                        case 0xe:\n                            if (*arg_10h != NULL) {\n                                fcn.00401926(*arg_10h);\n                            }\n                            break;\n                        case 0xf:\n                            if (*arg_10h != NULL) {\n                                fcn.0043a599(*arg_10h);\n                            }\n                        }\n                    }\n                    unaff_EDI = 0x4c2400;\n                    arg_10h[3] = 0x1;\n                    *arg_10h = NULL;\n                    fcn.004113a0(0x4c2400);\n                    ppiVar6 = ppiStack272;\n                }\n            }\n        }\n        else if (uStack260._1_1_ == '\\0') {\n            ppiVar20 = fcn.0042010a(0x18);\n            if (ppiVar20 == NULL) {\n                ppiVar20 = NULL;\n            }\n            else {\n                ppiVar20[2] = NULL;\n                fcn.004113a0(0x4c2400);\n            }\n            ppiVar20[4] = ppiVar21;\n            ppiVar6 = uStack268;\n            ppiVar21 = ppiVar20;\n            uStack264 = ppiVar20;\n        }\n        else {\n            if (ppiVar21 != 0x4c2400) {\n                if ((ppiVar21[3] == 0x4) && (*0x4c240c == 4)) {\n                    fcn.0040c935(*0x4c2408);\n                }\n                else {\n                    ppiVar20 = ppiVar21;\n                    if (ppiVar21[2] != NULL) {\n                        fcn.00401926(ppiVar21[2]);\n                        ppiVar21 = in_stack_fffffedc;\n                        ppiVar21[2] = NULL;\n                        in_stack_fffffedc = ppiVar21;\n                    }\n                    if (4 < ppiVar21[3]) {\n    // switch table (11 cases) at 0x47b98e\n                        switch(ppiVar21[3]) {\n                        case 0x5:\n                            fcn.0041e3cc();\n                            break;\n                        case 0x8:\n                            if (*ppiVar20 != NULL) {\n                                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar20);\n                                fcn.0042017e(*in_ECX);\n                            }\n                            break;\n                        case 0xa:\n                            ppiVar21 = *ppiVar20;\n                            if (ppiVar21 != NULL) {\n                                fcn.0044aa9c();\n                                unaff_ESI = ppiVar21;\n                            }\n                            break;\n                        case 0xb:\n                            fcn.0042017e((*ppiVar20)[1]);\n                            fcn.0042017e(*ppiVar20);\n                            break;\n                        case 0xc:\n                            ppiVar21 = *ppiVar20;\n                            if (ppiVar21 != NULL) {\n                                fcn.0043a56f();\n                                unaff_ESI = ppiVar21;\n                            }\n                            break;\n                        case 0xd:\n                        case 0xe:\n                            ppiVar21 = *ppiVar20;\n                            if (ppiVar21 != NULL) {\n                                fcn.00401926();\n                                unaff_ESI = ppiVar21;\n                            }\n                            break;\n                        case 0xf:\n                            ppiVar21 = *ppiVar20;\n                            if (ppiVar21 != NULL) {\n                                fcn.0043a599();\n                                unaff_ESI = ppiVar21;\n                            }\n                        }\n                    }\n                    unaff_EDI = 0x4c2400;\n                    in_ECX[3] = 1;\n                    *in_ECX = 0;\n                    fcn.004113a0(0x4c2400);\n                    ppiVar21 = ppiVar20;\n                }\n            }\n            uStack260 = uStack260 & 0xffff00ff;\n        }\n        uStack268 = ppiVar6 + 1;\n        ppiStack196 = arg_10h;\n        if ((uStack268 != 0x1) && (ppiStack196 = ppiVar21,  uStack260._1_1_ != '\\0')) {\n            ppiStack196 = ppiVar21[4];\n        }\n        ppiStack256 = *arg_8h[1][*arg_ch];\n        if (*0x4c22e4 != '\\0') {\ncode_r0x0047b754:\n            fcn.0044d520(0x79, *(arg_8h[1][*arg_ch] + 10));\n            uVar16 = 0xffffffff;\n            ppiVar20 = unaff_EBX;\n            goto joined_r0x0040fbeb;\n        }\n        if (*0x4c22d8 == 0) {\ncode_r0x0041000f:\n            if (*0x4c22c8 != NULL) {\n                uStack276 = uStack276 & 0xffffff;\n                if ((*0x4c23d0 & 1) == 0) {\n                    *0x4c23d0 = *0x4c23d0 | 1;\n                    fcn.0040d3d2();\n                    fcn.00421b2a(0x471fb5);\n                }\n                *0x4c23f0 = NULL;\n                *0x4c23ec = NULL;\n                ppiStack244 = 0x4c23d4;\n                ppiStack200 = 0x4c23d4;\ncode_r0x00410055:\n                while( true ) {\n                    uStack236._0_4_ = ppiStack256[1];\n                    ppiVar20 = (*0x4c22c8)[1];\n                    uStack236 = uStack236 & 0xffffffff00000000 | ZEXT48(uStack236);\n                    if (uStack236 != NULL) break;\n                    if (ppiVar20 == NULL) {\ncode_r0x0047b4c4:\n                        if (uStack236 == NULL) goto code_r0x0041006f;\n                        goto code_r0x0041014c;\n                    }\ncode_r0x0041026e:\n                    ppiVar20 = (*0x4c22c8)[6];\n                    uStack236 = uStack236 & 0xffffffff00000000 | ZEXT48(*0x4c22c8 + 6);\n                    if (ppiVar20 == NULL) goto code_r0x004100c1;\n                    if (ppiVar20[1] < uStack236) {\n                        uStack236._0_4_ = ppiVar20[1];\n                    }\n                    ppiStack248 = *ppiVar20;\n                    ppiStack240 = *ppiStack256;\n                    uStack236 = CONCAT44(uStack236, *0x4c22c8 + 6);\n                    ppiVar13 = uStack236;\n                    while (ppiVar13 != NULL) {\n                        if (*ppiStack240 != *ppiStack248) {\n                            if (*ppiStack240 < *ppiStack248) goto code_r0x004102d0;\n                            goto code_r0x004102f3;\n                        }\n                        ppiStack248 = ppiStack248 + 2;\n                        ppiStack240 = ppiStack240 + 2;\n                        uStack236._4_4_ = uStack236 >> 0x20;\n                        ppiVar13 = uStack236._4_4_ + -1;\n                        uStack236 = uStack236 & 0xffffffff | ZEXT48(ppiVar13) << 0x20;\n                    }\n                    if (uStack236 < ppiVar20[1]) {\ncode_r0x004102d0:\n                        *uStack236 = ppiVar20[7];\n                        ppiVar20[7] = *0x4c22c8;\n                        ppiVar13 = ppiStack252;\n                        *0x4c22c8 = ppiVar20;\n                        if (ppiVar20[6] == NULL) goto code_r0x004100c1;\n                    }\ncode_r0x004102f3:\n                    ppiStack244[6] = *0x4c22c8;\n                    ppiStack244 = *0x4c22c8;\n                    *0x4c22c8 = (*0x4c22c8)[6];\n                    ppiVar13 = ppiStack252;\n                }\n                if (ppiVar20 == NULL) goto code_r0x0047b4c4;\ncode_r0x0041006f:\n                if (uStack236 < ppiVar20) {\n                    ppiStack248 = **0x4c22c8;\n                    ppiStack240 = *ppiStack256;\n                    for (; ppiVar20 != NULL; ppiVar20 = ppiVar20 + -1) {\n                        if (*ppiStack240 != *ppiStack248) {\n                            iVar8 = (-(*ppiStack240 < *ppiStack248) & 0xfffffffe) + 1;\n                            ppiVar13 = ppiStack252;\n                            goto code_r0x004100ae;\n                        }\n                        ppiStack248 = ppiStack248 + 2;\n                        ppiStack240 = ppiStack240 + 2;\n                    }\n                    iVar8 = 0;\n                    ppiVar13 = ppiStack252;\n                }\n                else {\n                    piVar12 = **0x4c22c8;\n                    uStack236 = CONCAT44(uStack236, uStack236);\n                    piVar14 = *ppiStack256;\n                    while (uStack236 != NULL) {\n                        if (*piVar14 != *piVar12) {\n                            iVar8 = (-(*piVar14 < *piVar12) & 0xfffffffe) + 1;\n                            goto code_r0x004100aa;\n                        }\n                        piVar14 = piVar14 + 2;\n                        piVar12 = piVar12 + 2;\n                        uStack236._4_4_ = uStack236 >> 0x20;\n                        uStack236._0_4_ = uStack236._4_4_ + -1;\n                        uStack236 = uStack236 & 0xffffffff | ZEXT48(uStack236) << 0x20;\n                    }\n                    iVar8 = 0;\ncode_r0x004100aa:\n                }\ncode_r0x004100ae:\n                if (iVar8 < 0) goto code_r0x0041026e;\n                if (0 < iVar8) {\ncode_r0x0041014c:\n                    ppiStack248 = *0x4c22c8 + 7;\n                    ppuVar2 = *ppiStack248;\n                    if (ppuVar2 == NULL) goto code_r0x004100c1;\n                    ppiStack240 = ppuVar2[1];\n                    if (uStack236 < ppuVar2[1]) {\n                        ppiStack240 = uStack236;\n                    }\n                    puVar5 = *ppuVar2;\n                    uStack236 = uStack236 & 0xffffffff | ZEXT48(ppiStack240) << 0x20;\n                    piVar12 = *ppiStack256;\n                    ppiVar20 = ppiStack240;\n                    while (ppiVar20 != NULL) {\n                        if (*puVar5 != *piVar12) {\n                            if (*puVar5 < *piVar12) goto code_r0x004101a4;\n                            goto code_r0x004101c7;\n                        }\n                        puVar5 = puVar5 + 1;\n                        piVar12 = piVar12 + 2;\n                        uStack236._4_4_ = uStack236 >> 0x20;\n                        ppiVar20 = uStack236._4_4_ + -1;\n                        uStack236 = uStack236 & 0xffffffff | ZEXT48(ppiVar20) << 0x20;\n                    }\n                    if (ppiStack240 < uStack236) {\ncode_r0x004101a4:\n                        ppiVar20 = *ppiStack248;\n                        *ppiStack248 = ppiVar20[6];\n                        ppiVar20[6] = *0x4c22c8;\n                        *0x4c22c8 = ppiVar20;\n                        if (ppiVar20[7] == NULL) goto code_r0x004100c1;\n                    }\ncode_r0x004101c7:\n                    ppiStack200[7] = *0x4c22c8;\n                    ppiStack200 = *0x4c22c8;\n                    *0x4c22c8 = (*0x4c22c8)[7];\n                    goto code_r0x00410055;\n                }\n                uStack276 = CONCAT13(1, uStack276);\ncode_r0x004100c1:\n                ppiStack200[7] = (*0x4c22c8)[6];\n                ppiStack244[6] = (*0x4c22c8)[7];\n                (*0x4c22c8)[6] = *0x4c23f0;\n                (*0x4c22c8)[7] = *0x4c23ec;\n                if (((uStack276._3_1_ != '\\0') && (*0x4c22c8 != NULL)) && (ppiVar20 = (*0x4c22c8)[5],  ppiVar20 != NULL)\n                   ) goto code_r0x0040fb29;\n            }\n            goto code_r0x0047b754;\n        }\n        ppiVar20 = *0x4c22dc;\n        if (*0x4c22e1 != '\\0') {\n            ppiVar20 = (*0x4c22dc)[2];\n        }\n        if (*ppiVar20 == NULL) goto code_r0x0041000f;\n        uStack276 = uStack276 & 0xffffff;\n        if ((*0x4c23d0 & 1) == 0) {\n            *0x4c23d0 = *0x4c23d0 | 1;\n            fcn.0040d3d2();\n            fcn.00421b2a(0x471fb5);\n        }\n        *0x4c23f0 = NULL;\n        *0x4c23ec = NULL;\n        ppiStack240 = 0x4c23d4;\n        ppiStack200 = 0x4c23d4;\ncode_r0x0040fd04:\n        while( true ) {\n            ppiStack248 = *ppiVar20;\n            ppiStack208 = ppiStack256[1];\n            ppiVar6 = ppiStack248[1];\n            if (ppiStack208 != NULL) break;\n            if (ppiVar6 == NULL) {\ncode_r0x0047b480:\n                if (ppiStack208 == NULL) goto code_r0x0040fd24;\n                goto code_r0x0040fd7a;\n            }\ncode_r0x0040fdf3:\n            ppuVar2 = ppiStack248[6];\n            if (ppuVar2 == NULL) goto code_r0x0040fadd;\n            if (ppuVar2[1] < ppiStack208) {\n                ppiStack208 = ppuVar2[1];\n            }\n            puVar5 = *ppuVar2;\n            piVar12 = *ppiStack256;\n            uStack236 = uStack236 & 0xffffffff00000000 | ZEXT48(piVar12);\n            for (ppiStack244 = ppiStack208; ppiStack244 != NULL; ppiStack244 = ppiStack244 + -1) {\n                if (*piVar12 != *puVar5) {\n                    if (*uStack236 < *puVar5) goto code_r0x0040fe48;\n                    goto code_r0x0040fe63;\n                }\n                piVar12 = uStack236 + 2;\n                puVar5 = puVar5 + 1;\n                uStack236 = uStack236 & 0xffffffff00000000 | ZEXT48(piVar12);\n            }\n            if (ppiStack208 < ppuVar2[1]) {\ncode_r0x0040fe48:\n                ppiStack248[6] = ppuVar2[7];\n                ppuVar2[7] = *ppiVar20;\n                *ppiVar20 = ppuVar2;\n                ppiVar13 = ppiStack252;\n                if (ppuVar2[6] == NULL) goto code_r0x0040fadd;\n            }\ncode_r0x0040fe63:\n            ppiStack240[6] = *ppiVar20;\n            ppiStack240 = *ppiVar20;\n            *ppiVar20 = ppiStack240[6];\n            ppiVar13 = ppiStack252;\n        }\n        if (ppiVar6 == NULL) goto code_r0x0047b480;\ncode_r0x0040fd24:\n        if (ppiStack208 < ppiVar6) {\n            piVar12 = *ppiStack248;\n            ppiStack244 = *ppiStack256;\n            if (ppiVar6 == NULL) goto code_r0x0040fd54;\n            do {\n                if (*ppiStack244 != *piVar12) {\n                    bVar17 = *ppiStack244 < *piVar12;\n                    goto code_r0x0040fd5e;\n                }\n                ppiStack244 = ppiStack244 + 2;\n                piVar12 = piVar12 + 2;\n                ppiVar6 = ppiVar6 + -1;\n            } while (ppiVar6 != NULL);\n            iVar8 = 0;\n        }\n        else {\n            piVar12 = *ppiStack248;\n            piVar14 = *ppiStack256;\n            ppiStack244 = ppiStack208;\n            if (ppiStack208 != NULL) {\ncode_r0x0040fd40:\n                if (*piVar14 == *piVar12) break;\n                bVar17 = *piVar14 < *piVar12;\ncode_r0x0040fd5e:\n                iVar8 = (-bVar17 & 0xfffffffe) + 1;\n                goto code_r0x0040fd64;\n            }\ncode_r0x0040fd54:\n            iVar8 = 0;\n        }\ncode_r0x0040fd64:\n        if (iVar8 < 0) goto code_r0x0040fdf3;\n        if (0 < iVar8) {\ncode_r0x0040fd7a:\n            ppuVar2 = ppiStack248[7];\n            if (ppuVar2 == NULL) goto code_r0x0040fadd;\n            ppiVar13 = ppuVar2[1];\n            if (ppiStack208 < ppuVar2[1]) {\n                ppiVar13 = ppiStack208;\n            }\n            ppiStack244 = *ppiStack256;\n            puVar5 = *ppuVar2;\n            uStack236 = CONCAT44(ppiVar13, puVar5);\n            ppiVar6 = ppiVar13;\n            while (ppiVar6 != NULL) {\n                if (*puVar5 != *ppiStack244) {\n                    if (*uStack236 < *ppiStack244) goto code_r0x0040fe8c;\n                    goto code_r0x0040fea7;\n                }\n                ppiStack244 = ppiStack244 + 2;\n                puVar5 = uStack236 + 2;\n                uStack236._4_4_ = uStack236 >> 0x20;\n                ppiVar6 = uStack236._4_4_ + -1;\n                uStack236 = CONCAT44(ppiVar6, puVar5);\n            }\n            if (ppiVar13 < ppiStack208) {\ncode_r0x0040fe8c:\n                ppiStack248[7] = ppuVar2[6];\n                ppuVar2[6] = *ppiVar20;\n                *ppiVar20 = ppuVar2;\n                ppiVar13 = ppiStack252;\n                if (ppuVar2[7] == NULL) goto code_r0x0040fadd;\n            }\ncode_r0x0040fea7:\n            ppiStack200[7] = *ppiVar20;\n            ppiStack200 = *ppiVar20;\n            *ppiVar20 = ppiStack200[7];\n            ppiVar13 = ppiStack252;\n            goto code_r0x0040fd04;\n        }\n        uStack276 = CONCAT13(1, uStack276);\ncode_r0x0040fadd:\n        ppiStack200[7] = (*ppiVar20)[6];\n        ppiStack240[6] = (*ppiVar20)[7];\n        (*ppiVar20)[6] = *0x4c23f0;\n        (*ppiVar20)[7] = *0x4c23ec;\n        if (((uStack276._3_1_ == '\\0') || (*ppiVar20 == NULL)) || (ppiVar20 = (*ppiVar20)[5],  ppiVar20 == NULL))\n        goto code_r0x0041000f;\ncode_r0x0040fb29:\n        *arg_ch = *arg_ch + 1;\n        in_stack_fffffebc = 0x40fb40;\n        in_stack_fffffec0 = arg_8h;\n        in_stack_fffffec4 = arg_ch;\n        iVar8 = fcn.0040f6d0(arg_8h, arg_ch, ppiVar20, ppiStack196);\n        if (iVar8 < 0) {\ncode_r0x0047a9fe:\n            uVar16 = 0xffffffff;\n            ppiVar20 = unaff_EBX;\njoined_r0x0040fbeb:\n            while (unaff_EBX != NULL) {\n                ppiStack240 = ppiVar20[2];\n                unaff_EBX = ppiVar20[4];\n                if (ppiStack240 != NULL) {\n                    *ppiStack240[3] = *ppiStack240[3] + -1;\n                    if (*ppiStack240[3] == 0) {\n                        fcn.0042017e(*ppiStack240);\n                        fcn.0042017e(ppiStack240[3]);\n                    }\n                    fcn.0042017e(ppiStack240);\n                    ppiVar20[2] = NULL;\n                }\n                if (4 < ppiVar20[3]) {\n    // switch table (11 cases) at 0x41136c\n                    switch(ppiVar20[3]) {\n                    case 0x5:\n                        fcn.0041e3cc();\n                        break;\n                    case 0x8:\n                        if (*ppiVar20 != NULL) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar20);\n                            fcn.0042017e(*ppiVar20);\n                        }\n                        break;\n                    case 0xa:\n                        if (*ppiVar20 != NULL) {\n                            fcn.0044aa9c(*ppiVar20);\n                        }\n                        break;\n                    case 0xb:\n                        fcn.0042017e((*ppiVar20)[1]);\n                        fcn.0042017e(*ppiVar20);\n                        break;\n                    case 0xc:\n                        if (*ppiVar20 != NULL) {\n                            fcn.0043a56f(*ppiVar20);\n                        }\n                        break;\n                    case 0xd:\n                    case 0xe:\n                        if (*ppiVar20 != NULL) {\n                            fcn.00401926(*ppiVar20);\n                        }\n                        break;\n                    case 0xf:\n                        if (*ppiVar20 != NULL) {\n                            fcn.0043a599(*ppiVar20);\n                        }\n                    }\n                }\n                ppiVar20[3] = 0x1;\n                *ppiVar20 = NULL;\n                fcn.0042017e(ppiVar20);\n                ppiVar13 = uStack260;\n                ppiVar20 = unaff_EBX;\n            }\n            while (ppiVar13 != NULL) {\n                ppiVar20 = ppiVar13[1];\n                fcn.0042017e(ppiVar13);\n                ppiVar13 = ppiVar20;\n            }\n            return uVar16;\n        }\n    } while( true );\n    piVar14 = piVar14 + 2;\n    piVar12 = piVar12 + 2;\n    ppiStack244 = ppiStack244 + -1;\n    if (ppiStack244 == NULL) goto code_r0x0040fd54;\n    goto code_r0x0040fd40;\ncode_r0x004104b5:\n    ppiVar20 = ppiVar13;\n    if (uStack212._1_1_ != '\\0') {\n        ppiVar20 = ppiVar13[1];\n    }\n    if (*ppiVar20 == 0x12) goto code_r0x00410545;\n    ppiVar20 = ppiVar13;\n    if (uStack212._1_1_ != '\\0') {\n        ppiVar20 = ppiVar13[1];\n    }\n    if (*ppiVar20 == 0x14) {\n        in_stack_fffffec4 = 0x6d;\n        ppiVar20 = ppiStack208;\n        goto code_r0x0047b64c;\n    }\n    ppiVar15 = &stack0xfffffeec;\n    in_stack_fffffec0 = 0x4104eb;\n    iVar8 = fcn.00411620(&stack0xffffff20, ppiVar15);\n    ppiVar13 = ppiStack208;\n    if (iVar8 < 0) goto code_r0x0047b6c7;\n    uStack264 = ppiStack228;\n    ppiVar13 = ppiStack228;\n    uStack212._1_1_ = uStack224._1_1_;\n    goto code_r0x004104b5;\ncode_r0x00410545:\n    ppiVar20 = ppiVar13;\n    if (uStack212._1_1_ != '\\0') {\n        ppiVar20 = ppiVar13[1];\n        in_stack_fffffec4 = 0x410552;\n        fcn.0042017e();\n        piVar14 = in_ECX;\n        ppiVar15 = ppiVar13;\n        ppiStack256 = ppiVar20;\n        ppiStack220 = ppiVar20;\n    }\n    if (ppiStack216 == '\\0') {\n        ppiVar13 = ppiVar20[1];\n        in_stack_fffffec4 = 0x47b4da;\n        fcn.0042017e();\n        ppiStack216 = ppiStack216 & 0xffff00ff;\n        piVar14 = in_ECX;\n        ppiStack256 = ppiVar13;\n        ppiStack220 = ppiVar13;\n    }\n    else {\n        ppiStack216._0_2_ = CONCAT11(1, ppiStack216);\n        ppiStack216 = ppiStack216 & 0xffff0000 | ppiStack216;\n        ppiVar13 = ppiVar20;\n        ppiVar20 = ppiVar15;\n    }\n    uStack224 = uStack224 + -1;\ncode_r0x0040fefd:\n    ppiVar6 = ppiStack272;\n    arg_10h = uStack276;\n    in_stack_fffffedc = uStack268;\n    if (((piVar14 != 0x7) && (piVar14 != 0x8)) || (ppiStack272 == NULL)) goto code_r0x0040fb4e;\n    ppiVar20 = uStack276;\n    if ((ppiStack272 != 0x1) && (ppiVar20 = uStack268,  uStack264._1_1_ != '\\0')) {\n        ppiVar20 = uStack268[4];\n    }\n    uStack60 = 0;\n    fcn.004113a0(ppiVar20);\n    in_stack_fffffec4 = 0x410cdc;\n    cVar3 = fcn.00405372();\n    if (cVar3 == '\\0') {\ncode_r0x00410ce8:\n        if (ppiVar21 != 0x7) goto code_r0x00410d46;\n    }\n    else if (ppiVar21 != 0x8) {\n        if (cVar3 != '\\0') goto code_r0x00410d46;\n        goto code_r0x00410ce8;\n    }\n    in_stack_fffffec0 = arg_8h;\n    in_stack_fffffec4 = arg_ch;\n    iVar8 = fcn.0041ba31(arg_8h, arg_ch);\n    if (iVar8 < 0) {\n        ppiVar21 = 0x6e;\n        fcn.0044d520(0x6e, ppiStack220);\n        uVar16 = 0xffffffff;\n        fcn.00412570();\n        ppiVar20 = unaff_EBX;\n        unaff_EBX = ppiVar21;\n        goto joined_r0x0040fbeb;\n    }\n    if (unaff_EBX == 0x8) {\n        uStack148 = CONCAT31(uStack148._1_3_, 1);\n        in_stack_fffffebc = uStack148;\n        fcn.0041e078();\n        fcn.0041e387(in_stack_fffffebc);\n    }\n    else {\n        ppiVar15 = arg_10h;\n        if ((ppiVar6 != 0x1) && (ppiVar15 = unaff_EDI,  uStack276._1_1_ != '\\0')) {\n            ppiVar15 = unaff_EDI[4];\n        }\n        in_stack_fffffebc = 0x410d1d;\n        fcn.00412570();\n        ppiVar15[3] = 0x9;\n        *ppiVar15 = 0;\n    }\n    ppiVar6 = ppiVar13;\n    if (uStack236._5_1_ != '\\0') {\n        ppiVar6 = ppiVar13[1];\n        fcn.0042017e(ppiVar13);\n        uStack236 = uStack236 & 0xffffffff00000000 | ZEXT48(ppiVar6);\n        ppiStack272 = ppiVar6;\n    }\n    if (uStack236._4_1_ == '\\0') {\n        ppiVar13 = ppiVar6[1];\n        fcn.0042017e(ppiVar6);\n        uStack236 = uStack236 & 0xffff00ff00000000 | ZEXT48(ppiVar13);\n        ppiStack272 = ppiVar13;\n    }\n    else {\n        uStack236._0_6_ = CONCAT15(1, uStack236);\n        uStack236 = uStack236 & 0xffff000000000000 | uStack236;\n        ppiVar13 = ppiVar6;\n    }\n    ppiStack240 = ppiStack240 + -1;\ncode_r0x00410d46:\n    fcn.00412570();\n    goto code_r0x0040fb4e;\ncode_r0x0040fed0:\n    if (uStack212._1_1_ == '\\0') {\n        ppiVar20 = 0x40fedf;\n        ppiStack252 = fcn.0042010a(8);\n        if (ppiStack252 == NULL) {\n            ppiStack252 = NULL;\n        }\n        else {\n            *ppiStack252 = piVar14;\n        }\n        ppiStack252[1] = ppiVar13;\n        ppiVar13 = ppiStack252;\n        ppiStack216 = ppiStack252;\n    }\n    else {\n        *ppiVar13 = piVar14;\n        uStack212 = uStack212 & 0xffff00ff;\n    }\n    ppiStack220 = ppiStack220 + 1;\n    goto code_r0x0040fefd;\n}\n",
        "token_count": 20230
    },
    "004113a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004113a0(ulong *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ulong *in_ECX;\n    uint *puVar5;\n    uint *puVar6;\n    \n    iVar3 = *(arg_8h + 0xc);\n    *(in_ECX + 0xc) = iVar3;\n    if (iVar3 == 1) {\ncode_r0x004113b6:\n        uVar4 = *arg_8h;\n        goto code_r0x004113b8;\n    }\n    if (0xe < iVar3 - 1U) {\n        return;\n    }\n    // switch table (15 cases) at 0x41145c\n    switch(*((iVar3 - 1U) * 4 + 0x41145c)) {\n    case 0x4113b6:\n        goto code_r0x004113b6;\n    case 0x4113ce:\n        *in_ECX = *arg_8h;\n        return;\n    case 0x4113d9:\n        puVar2 = fcn.0042010a(0x10);\n        if (puVar2 == NULL) {\n            *(in_ECX + 1) = 0;\n            return;\n        }\n        puVar5 = *(arg_8h + 1);\n        *puVar2 = *puVar5;\n        puVar2[1] = puVar5[1];\n        puVar2[2] = puVar5[2];\n        piVar1 = puVar5[3];\n        puVar2[3] = piVar1;\n        *piVar1 = *piVar1 + 1;\n        *(in_ECX + 1) = puVar2;\n        return;\n    case 0x41140e:\n        *in_ECX = *arg_8h;\n        return;\n    case 0x411419:\n        puVar2 = fcn.0042010a(0x214);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            puVar5 = *arg_8h;\n            puVar6 = puVar2;\n            for (iVar3 = 0x85; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n        }\n        *in_ECX = puVar2;\n        piVar1 = puVar2[1];\n        if (piVar1 != NULL) {\n            *piVar1 = *piVar1 + 1;\n            return;\n        }\n        break;\n    case 0x47534c:\n        *in_ECX = *arg_8h;\n        *(in_ECX + 4) = *(arg_8h + 4);\n        break;\n    case 0x47535b:\n        if (*arg_8h != 0) {\n            uVar4 = fcn.0042010a(0x10);\n            *in_ECX = uVar4;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar4);\n            iVar3 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*in_ECX, *arg_8h);\n            if (iVar3 < 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*in_ECX);\n                fcn.0042017e(*in_ECX);\n                *in_ECX = 0;\n            }\n        }\n        break;\n    case 0x4753a6:\n        iVar3 = fcn.0042010a(0x18);\n        if (iVar3 == 0) {\ncode_r0x004753c2:\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004499a0(*arg_8h);\n        }\n        goto code_r0x004113b8;\n    case 0x4753c9:\n        puVar2 = fcn.0042010a(8);\n        *in_ECX = puVar2;\n        *puVar2 = **arg_8h;\n        if (**in_ECX == 0) {\n            uVar4 = fcn.0042010a(1);\n            *(*in_ECX + 4) = uVar4;\n            **(*in_ECX + 4) = 0;\n        }\n        else {\n            uVar4 = fcn.0042010a(**in_ECX);\n            *(*in_ECX + 4) = uVar4;\n            fcn.0041faa0((*in_ECX)[1], *(*arg_8h + 4), **in_ECX);\n        }\n        break;\n    case 0x475423:\n        iVar3 = fcn.0042010a(0x14);\n        if (iVar3 == 0) goto code_r0x004753c2;\n        uVar4 = fcn.00448a89(*arg_8h);\n        goto code_r0x004113b8;\n    case 0x47543f:\n        iVar3 = fcn.0042010a(0x14);\n        if (iVar3 == 0) goto code_r0x004753c2;\n        uVar4 = fcn.00444d76(*arg_8h);\ncode_r0x004113b8:\n        *in_ECX = uVar4;\n        break;\n    case 0x47545f:\n        iVar3 = fcn.0042010a(0x14);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            fcn.0040d3d2();\n        }\n        *in_ECX = iVar3;\n        fcn.0040c935(*arg_8h);\n        *(*in_ECX + 0x10) = *(*arg_8h + 0x10);\n    }\n    return;\n}\n",
        "token_count": 1340
    },
    "004114a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004114a0(int32_t **arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_4h;\n    \n    if (arg_8h[3] != 0x5) {\n        return 0;\n    }\n    if (((arg_ch == '\\0') && (piVar6 = (*arg_8h)[1],  piVar6 != NULL)) && (1 < *piVar6)) {\n        *piVar6 = *piVar6 + -1;\n        iVar8 = **arg_8h;\n        iVar2 = (*arg_8h)[2] * 4;\n        iVar7 = fcn.0042010a(-(iVar2 >> 0x20 != 0) | iVar2);\n        **arg_8h = iVar7;\n        puVar5 = fcn.0042010a(4);\n        if (puVar5 == NULL) {\n            puVar5 = NULL;\n        }\n        else {\n            *puVar5 = 1;\n        }\n        iVar7 = 0;\n        (*arg_8h)[1] = puVar5;\n        piVar6 = *arg_8h;\n        if (0 < piVar6[2]) {\n            do {\n                if (*(iVar8 + iVar7 * 4) == 0) {\n                    *(*piVar6 + iVar7 * 4) = 0;\n                }\n                else {\n                    iVar9 = fcn.0042010a(0x10);\n                    if (iVar9 == 0) {\n                        *(**arg_8h + iVar7 * 4) = 0;\n                    }\n                    else {\n                        uVar4 = *(iVar8 + iVar7 * 4);\n                        *(iVar9 + 8) = 0;\n                        fcn.004113a0(uVar4);\n                        *(**arg_8h + iVar7 * 4) = iVar9;\n                    }\n                }\n                piVar6 = *arg_8h;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < piVar6[2]);\n        }\n    }\n    iVar8 = arg_10h;\n    if ((arg_10h != 0) && (fcn.0040346e(),  0 < iVar8)) {\n        puVar5 = &arg_10h;\n        do {\n            puVar1 = puVar5 + 1;\n            puVar5 = puVar5 + 1;\n            fcn.00403489(*puVar1);\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    if (arg_8h[3] == 0x5) {\n        piVar6 = *arg_8h;\n        iVar8 = piVar6[0x83];\n        if (iVar8 == piVar6[0x84]) {\n            iVar7 = 0;\n            if (0 < iVar8) {\n                piVar3 = piVar6 + 0x43;\n                do {\n                    if (*piVar3 < 0) {\n                        return 0;\n                    }\n                    if (piVar3[-0x40] <= *piVar3) {\n                        return 0;\n                    }\n                    iVar7 = iVar7 + 1;\n                    piVar3 = piVar3 + 1;\n                } while (iVar7 < iVar8);\n            }\n            iVar7 = piVar6[2];\n            iVar9 = 0;\n            if (0 < iVar8) {\n                piVar3 = piVar6 + 0x43;\n                do {\n                    if (piVar3[-0x40] == 5000) {\n                        iVar7 = iVar7 / 5000;\n                    }\n                    else {\n                        iVar7 = iVar7 / piVar3[-0x40];\n                    }\n                    iVar9 = iVar9 + *piVar3 * iVar7;\n                    piVar3 = piVar3 + 1;\n                    iVar8 = iVar8 + -1;\n                } while (iVar8 != 0);\n                if (iVar9 < 0) {\n                    return 0;\n                }\n            }\n            if (*(*piVar6 + iVar9 * 4) != 0) {\n                return *(**arg_8h + iVar9 * 4);\n            }\n            iVar8 = fcn.0042010a(0x10);\n            if (iVar8 == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = fcn.0041d6b4(0x49dbf0);\n            }\n            *(**arg_8h + iVar9 * 4) = uVar4;\n            return *(**arg_8h + iVar9 * 4);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1105
    },
    "00411620": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00411620(int32_t *arg_8h, double **arg_ch)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    char cVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    double *pdVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint uVar13;\n    uint32_t uVar14;\n    uint extraout_ECX;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    uint arg_8h_03;\n    uint arg_8h_04;\n    uint arg_8h_05;\n    double *pdVar15;\n    int32_t iVar16;\n    bool bVar17;\n    float10 fVar18;\n    float10 fVar19;\n    ulong uVar20;\n    ulong uVar21;\n    uint *puVar22;\n    uint var_30h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = arg_8h[1];\n    piVar5 = piVar1;\n    if (*(arg_8h + 9) != '\\0') {\n        piVar5 = piVar1[1];\n    }\n    iVar16 = *piVar5;\n    if (*(arg_8h + 9) != '\\0') {\n        iVar6 = piVar1[1];\n        fcn.0042017e(piVar1);\n        arg_8h[1] = iVar6;\n        *(arg_8h + 9) = 0;\n    }\n    if (*(arg_8h + 2) == '\\0') {\n        iVar6 = *(arg_8h[1] + 4);\n        fcn.0042017e(arg_8h[1]);\n        arg_8h[1] = iVar6;\n        *(arg_8h + 9) = 0;\n    }\n    else {\n        *(arg_8h + 9) = 1;\n    }\n    *arg_8h = *arg_8h + -1;\n    if (((iVar16 == 0x11) || (iVar16 == 10)) || (iVar16 == 0x10)) {\n        if (arg_ch[1] < 1) {\n            return 0xffffffff;\n        }\n        if (iVar16 != 10) {\n            if (iVar16 != 0x10) {\n                return 0;\n            }\n            puVar22 = &var_20h;\n            var_20h = 0xffffffff;\n            var_18h = 0;\n            var_14h = 1;\n            fcn.0041e078();\n            fcn.0044a875(puVar22);\n            fcn.00412570();\n            return 0;\n        }\n        fcn.0041e078();\n        uVar4 = fcn.0044a7a2();\n        arg_ch = arg_ch & 0xffffff00 | uVar4;\n        fcn.0041e078();\n        fcn.0041e387(arg_ch);\n        return 0;\n    }\n    pdVar8 = arg_ch[1];\n    if (pdVar8 < 2) {\n        return 0xffffffff;\n    }\n    // switch table (16 cases) at 0x412188\n    switch(iVar16) {\n    case 0:\n        if (pdVar8 == 0x1) {\n            pdVar15 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar15 = arg_ch[2];\n        }\n        else {\n            pdVar15 = *(arg_ch[2] + 2);\n        }\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar8 = *(arg_ch[2] + 2);\n        }\n        else {\n            pdVar8 = *(*(arg_ch[2] + 2) + 0x10);\n        }\n        iVar16 = *(pdVar8 + 0xc);\n        iVar6 = *((iVar16 * 0x10 + *(pdVar15 + 0xc)) * 4 + 0x4bb810);\n        if (iVar6 != 3) {\n    // switch table (9 cases) at 0x4122bc\n            switch(iVar6) {\n            case 1:\n            case 9:\n                iVar16 = fcn.0040cdb4();\n                iVar6 = fcn.0040cdb4();\n                if (iVar16 < iVar6) goto code_r0x00411a92;\n                break;\n            case 2:\n                uVar20 = fcn.0040d00b();\n                iVar16 = uVar20 >> 0x20;\n                uVar21 = fcn.0040d00b();\n                iVar6 = uVar21 >> 0x20;\n                if (iVar16 < iVar6) goto code_r0x00411a92;\n                if (iVar16 <= iVar6) {\n                    bVar17 = uVar20 < uVar21;\n                    goto code_r0x0047cf34;\n                }\n                break;\n            case 4:\n                fcn.004084a6();\n                iVar16 = *(pdVar15 + 1);\n                fcn.004084a6();\n                iVar16 = fcn.0041dfb6(iVar16, 0);\n                if (iVar16 < 0) goto code_r0x00411a92;\n                break;\n            case 7:\n                uVar11 = fcn.0044be63();\n                uVar12 = fcn.0044be63();\n                bVar17 = uVar11 < uVar12;\ncode_r0x0047cf34:\n                if (bVar17) goto code_r0x00411a92;\n            }\ncode_r0x00411878:\n            if (arg_ch[1] == 0x2) {\n                pdVar8 = *arg_ch;\n            }\n            else if (*(arg_ch + 0xd) == '\\0') {\n                pdVar8 = *(arg_ch[2] + 2);\n            }\n            else {\n                pdVar8 = *(*(arg_ch[2] + 2) + 0x10);\n            }\n            if (*(pdVar8 + 1) != 0) {\n                fcn.00401926();\n                *(pdVar8 + 1) = 0;\n            }\n            if (4 < *(pdVar8 + 0xc)) {\n    // switch table (11 cases) at 0x47d25e\n                switch(*(pdVar8 + 0xc)) {\n                case 5:\n                    goto code_r0x0047cea0;\n                case 8:\n                    goto code_r0x0047ce64;\n                case 10:\n                    goto code_r0x0047d09b;\n                case 0xb:\n                    fcn.0042017e(*(*pdVar8 + 4));\n                    fcn.0042017e(*pdVar8);\n                    break;\n                case 0xc:\n                    goto code_r0x0047ceac;\n                case 0xd:\n                case 0xe:\n                    if (*pdVar8 != 0) {\n                        fcn.00401926();\n                    }\n                    break;\n                case 0xf:\n                    goto code_r0x0047cec1;\n                }\n            }\n            goto code_r0x004117aa;\n        }\n        fVar18 = 1;\n        if (iVar16 == 3) {\n            _var_8h = *pdVar8;\n            fVar18 = _var_8h;\n        }\n        else {\n    // switch table (10 cases) at 0x47d236\n            switch(iVar16) {\n            case 1:\n            case 7:\n                fVar18 = *pdVar8;\n                _var_8h = *pdVar8;\n                break;\n            case 2:\n                fVar18 = *pdVar8;\n                _var_8h = *pdVar8;\n                break;\n            default:\ncode_r0x0047cfe0:\n                _var_8h = 0;\n                fVar18 = 0;\n                break;\n            case 4:\n                cVar3 = fcn.0040d075();\n                if (cVar3 == '\\0') {\n                    fVar18 = fcn.00422d13(arg_8h_04);\n                    _var_8h = fVar18;\n                }\n                else {\n                    fcn.0041bcea(8);\n                    fVar18 = CONCAT44(var_14h, var_18h);\n                    _var_8h = CONCAT44(var_14h, var_18h);\n                }\n                break;\n            case 9:\n                if (*pdVar8 == '\\0') goto code_r0x0047cfe0;\n                _var_8h = fVar18;\n                break;\n            case 10:\n                fVar18 = *(*pdVar8 + 4);\n                _var_8h = *(*pdVar8 + 4);\n            }\n        }\n        fVar19 = 1;\n        if (*(pdVar15 + 0xc) == 3) {\n            fVar19 = *pdVar15;\n        }\n        else {\n    // switch table (10 cases) at 0x412234\n            switch(*(pdVar15 + 0xc)) {\n            case 1:\n            case 7:\n                fVar19 = *pdVar15;\n                break;\n            case 2:\n                fVar19 = *pdVar15;\n                break;\n            default:\ncode_r0x0041216d:\n                fVar19 = 0;\n                break;\n            case 4:\n                cVar3 = fcn.0040d075();\n                if (cVar3 == '\\0') {\n                    fVar19 = fcn.00422d13(arg_8h_05);\n                    fVar18 = _var_8h;\n                }\n                else {\n                    fcn.0041bcea(8);\n                    fVar19 = CONCAT44(var_14h, var_18h);\n                    fVar18 = _var_8h;\n                }\n                break;\n            case 9:\n                if (*pdVar15 == '\\0') goto code_r0x0041216d;\n                break;\n            case 10:\n                fVar19 = *(*pdVar15 + 4);\n            }\n        }\n        if (((fVar19 < fVar18) << 8 | (fVar19 == fVar18) << 0xe) != 0) goto code_r0x00411878;\ncode_r0x00411a92:\n        if (arg_ch[1] == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) == '\\0') goto code_r0x0047ce19;\n            pdVar8 = *(*(pdVar8 + 2) + 0x10);\n        }\ncode_r0x00411a9e:\n        fcn.00412570();\n        *pdVar8 = 1;\n        goto code_r0x004117b3;\n    case 1:\n        if (pdVar8 == 0x1) {\n            pdVar15 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar15 = arg_ch[2];\n        }\n        else {\n            pdVar15 = *(arg_ch[2] + 2);\n        }\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n        iVar16 = *(pdVar15 + 0xc);\n        iVar6 = *((iVar16 * 0x10 + *(pdVar8 + 0xc)) * 4 + 0x4bb810);\n        if (iVar6 == 3) {\n            fVar18 = 1;\n            if (iVar16 == 3) {\n                _var_8h = *pdVar15;\n                fVar18 = _var_8h;\n            }\n            else {\n    // switch table (10 cases) at 0x4121c8\n                switch(iVar16) {\n                case 1:\n                case 7:\n                    fVar18 = *pdVar15;\n                    _var_8h = *pdVar15;\n                    break;\n                case 2:\n                    fVar18 = *pdVar15;\n                    _var_8h = *pdVar15;\n                    break;\n                default:\ncode_r0x00412151:\n                    _var_8h = 0;\n                    fVar18 = 0;\n                    break;\n                case 4:\n                    cVar3 = fcn.0040d075();\n                    if (cVar3 == '\\0') {\n                        fVar18 = fcn.00422d13(arg_8h_02);\n                        _var_8h = fVar18;\n                    }\n                    else {\n                        fcn.0041bcea(8);\n                        fVar18 = _var_8h;\n                        _var_8h = _var_8h;\n                    }\n                    break;\n                case 9:\n                    if (*pdVar15 == '\\0') goto code_r0x00412151;\n                    _var_8h = fVar18;\n                    break;\n                case 10:\n                    fVar18 = *(*pdVar15 + 4);\n                    _var_8h = *(*pdVar15 + 4);\n                }\n            }\n            fVar19 = 1;\n            if (*(pdVar8 + 0xc) == 3) {\n                fVar19 = *pdVar8;\n            }\n            else {\n    // switch table (10 cases) at 0x47d1e2\n                switch(*(pdVar8 + 0xc)) {\n                case 1:\n                case 7:\n                    fVar19 = *pdVar8;\n                    break;\n                case 2:\n                    fVar19 = *pdVar8;\n                    break;\n                default:\ncode_r0x0047ce06:\n                    fVar19 = 0;\n                    break;\n                case 4:\n                    cVar3 = fcn.0040d075();\n                    if (cVar3 == '\\0') {\n                        fVar19 = fcn.00422d13(arg_8h_03);\n                        fVar18 = _var_8h;\n                    }\n                    else {\n                        fcn.0041bcea(8);\n                        fVar19 = CONCAT44(var_14h, var_18h);\n                        fVar18 = _var_8h;\n                    }\n                    break;\n                case 9:\n                    if (*pdVar8 == '\\0') goto code_r0x0047ce06;\n                    break;\n                case 10:\n                    fVar19 = *(*pdVar8 + 4);\n                }\n            }\n            if (((fVar19 < fVar18) << 8 | (fVar19 == fVar18) << 0xe) == 0) {\ncode_r0x00411c18:\n                if (arg_ch[1] != 0x2) {\n                    pdVar8 = arg_ch[2];\n                    if (*(arg_ch + 0xd) != '\\0') {\n                        pdVar8 = *(pdVar8 + 2);\n                    }\ncode_r0x0047ce19:\n                    pdVar8 = *(pdVar8 + 2);\n                    goto code_r0x00411a9e;\n                }\n                pdVar8 = *arg_ch;\n                fcn.00412570();\n                *pdVar8 = 1;\n                goto code_r0x004117b3;\n            }\n        }\n        else {\n    // switch table (9 cases) at 0x41225c\n            switch(iVar6) {\n            case 1:\n            case 9:\n                iVar16 = fcn.0040cdb4();\n                iVar6 = fcn.0040cdb4();\n                if (iVar6 < iVar16) goto code_r0x00411c18;\n                break;\n            case 2:\n                uVar20 = fcn.0040d00b();\n                iVar16 = uVar20 >> 0x20;\n                uVar21 = fcn.0040d00b();\n                iVar6 = uVar21 >> 0x20;\n                if (iVar6 < iVar16) goto code_r0x00411c18;\n                if (iVar6 <= iVar16) {\n                    bVar17 = uVar21 < uVar20;\n                    goto code_r0x0047ccf2;\n                }\n                break;\n            case 4:\n                fcn.004084a6();\n                iVar16 = *(pdVar8 + 1);\n                fcn.004084a6();\n                iVar16 = fcn.0041dfb6(iVar16, 0);\n                if (iVar16 < 0) goto code_r0x00411c18;\n                break;\n            case 7:\n                uVar11 = fcn.0044be63();\n                uVar12 = fcn.0044be63();\n                bVar17 = uVar12 < uVar11;\ncode_r0x0047ccf2:\n                if (bVar17) goto code_r0x00411c18;\n            }\n        }\n        if (arg_ch[1] == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n        if (*(pdVar8 + 1) != 0) {\n            fcn.00401926();\n            *(pdVar8 + 1) = 0;\n        }\n        if (4 < *(pdVar8 + 0xc)) {\n    // switch table (11 cases) at 0x47d20a\n            switch(*(pdVar8 + 0xc)) {\n            case 5:\ncode_r0x0047cea0:\n                fcn.0041e3cc();\n                break;\n            case 8:\ncode_r0x0047ce64:\n                if (*pdVar8 != 0) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*pdVar8);\n                    fcn.0042017e(*pdVar8);\n                }\n                break;\n            case 10:\ncode_r0x0047d09b:\n                if (*pdVar8 != 0) {\n                    fcn.0044aa9c();\n                }\n                break;\n            case 0xb:\n                fcn.0042017e(*(*pdVar8 + 4));\n                fcn.0042017e(*pdVar8);\n                break;\n            case 0xc:\ncode_r0x0047ceac:\n                if (*pdVar8 != 0) {\n                    fcn.0043a56f();\n                }\n                break;\n            case 0xd:\n            case 0xe:\n                if (*pdVar8 != 0) {\n                    fcn.00401926();\n                }\n                break;\n            case 0xf:\ncode_r0x0047cec1:\n                if (*pdVar8 != 0) {\n                    fcn.0043a599();\n                }\n            }\n        }\ncode_r0x004117aa:\n        *pdVar8 = 0;\n        *pdVar8 = 0;\ncode_r0x004117b3:\n        *(pdVar8 + 0xc) = 9;\n        if (arg_ch[1] != 0x1) {\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = arg_ch[2];\n                pdVar15 = *(pdVar8 + 2);\n                if (pdVar8 == NULL) {\ncode_r0x00411b9c:\n                    arg_ch[2] = pdVar15;\n                    *(arg_ch + 0xd) = 0;\n                }\n                else {\n                    fcn.0041bdcc(pdVar8);\n                    arg_ch[2] = pdVar15;\ncode_r0x00411941:\n                    *(arg_ch + 0xd) = 0;\n                }\n            }\ncode_r0x004117ca:\n            if (*(arg_ch + 3) == '\\0') {\ncode_r0x0047ca9f:\n                pdVar8 = arg_ch[2];\n                pdVar15 = *(pdVar8 + 2);\n                if (pdVar8 != NULL) {\n                    fcn.0041bdcc(pdVar8);\n                }\n                arg_ch[2] = pdVar15;\n                *(arg_ch + 0xd) = 0;\n            }\n            else {\n                *(arg_ch + 0xd) = 1;\n            }\n        }\ncode_r0x004117d8:\n        arg_ch[1] = arg_ch[1] + -1;\ncode_r0x004117db:\n        return 0;\n    case 2:\n        fcn.0041df71();\n        cVar3 = fcn.004141fc();\n        if (cVar3 == '\\0') {\n            puVar7 = fcn.0041df71();\n            fcn.00412570();\n            *(puVar7 + 0xc) = 9;\n            *puVar7 = 1;\n            fcn.0041bd8f();\n            return 0;\n        }\n        goto code_r0x00411f01;\n    case 3:\n        fcn.0041e078();\n        fcn.0041df71();\n        cVar3 = fcn.0041ee93();\n        break;\n    case 4:\n        fcn.0041e078();\n        fcn.0041df71();\n        cVar3 = fcn.0040cbf7();\n        if (cVar3 != '\\0') {\n            puVar7 = fcn.0041df71();\n            fcn.00412570();\n            *(puVar7 + 0xc) = 9;\n            *puVar7 = 0;\n            fcn.0041bd8f();\n            return 0;\n        }\n        goto code_r0x00411fcf;\n    case 5:\n        cVar3 = fcn.0040cbf7();\n        if (cVar3 == '\\0') {\n            if (arg_ch[1] == 0x2) {\n                pdVar8 = *arg_ch;\n            }\n            else {\n                pdVar8 = arg_ch[2];\n                if (*(arg_ch + 0xd) != '\\0') {\n                    pdVar8 = *(pdVar8 + 2);\n                }\n                pdVar8 = *(pdVar8 + 2);\n            }\n            fcn.00412570();\n            *pdVar8 = 0;\n        }\n        else {\n            pdVar8 = fcn.0041df71();\n            fcn.00412570();\n            *pdVar8 = 1;\n        }\n        *(pdVar8 + 0xc) = 9;\n        fcn.0041bd8f();\n        return 0;\n    case 6:\n        uVar13 = fcn.0041e078();\n        fcn.0041df71();\n        cVar3 = fcn.0044b944(uVar13);\n        arg_ch = CONCAT31(arg_ch._1_3_, 1);\n        if (cVar3 != '\\0') goto code_r0x00411f05;\n        goto code_r0x00411f01;\n    case 7:\n        fcn.0041e078();\n        fcn.0041df71();\n        cVar3 = fcn.0040522f();\n        break;\n    case 8:\n        fcn.0041e078();\n        fcn.0041df71();\n        cVar3 = fcn.0040524a();\n        break;\n    case 9:\n        if (pdVar8 == 0x1) {\n            pdVar15 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar15 = arg_ch[2];\n        }\n        else {\n            pdVar15 = *(arg_ch[2] + 2);\n        }\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n    // switch table (11 cases) at 0x412308\n        switch(*(pdVar8 + 0xc)) {\n        case 1:\n        case 2:\n        case 3:\n        case 7:\n        case 9:\n        case 10:\ncode_r0x004120c8:\n            fcn.0041f833();\n        default:\n            fcn.004084a6();\n            if (*(pdVar8 + 1) == *(pdVar15 + 1)) {\n                uVar13 = fcn.0043c0a2(&var_20h, *(pdVar8 + 1));\n                fcn.0040c935(uVar13);\n                fcn.00405cd3();\n            }\n            else {\n                fcn.0040bbd9(*(pdVar15 + 1), 0, 0xffffffff);\n            }\n            break;\n        case 4:\n        case 5:\n        case 6:\n        case 8:\n            break;\n        case 0xb:\n            if (*(pdVar15 + 0xc) != 0xb) goto code_r0x004120c8;\n            fcn.00414265(pdVar15);\n        }\n        if (arg_ch[1] != 0x1) {\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = arg_ch[2];\n                pdVar15 = *(pdVar8 + 2);\n                if (pdVar8 != NULL) {\n                    fcn.0041bdcc(pdVar8);\n                }\n                goto code_r0x00411b9c;\n            }\n            goto code_r0x004117ca;\n        }\n        goto code_r0x004117d8;\n    default:\n        goto code_r0x004117db;\n    case 0xb:\n        if (pdVar8 == 0x1) {\n            pdVar15 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar15 = arg_ch[2];\n        }\n        else {\n            pdVar15 = *(arg_ch[2] + 2);\n        }\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n        if (*(pdVar8 + 0xc) == 3) {\n            if (*(pdVar15 + 0xc) == 3) {\n                fVar18 = *pdVar15;\n            }\n            else {\n    // switch table (10 cases) at 0x4122e0\n                switch(*(pdVar15 + 0xc)) {\n                case 1:\n                case 7:\n                    fVar18 = *pdVar15;\n                    break;\n                case 2:\n                    fVar18 = *pdVar15;\n                    break;\n                default:\ncode_r0x004120f3:\n                    fVar18 = 0;\n                    break;\n                case 4:\n                    cVar3 = fcn.0040d075();\n                    if (cVar3 == '\\0') {\n                        fVar18 = fcn.00422d13(arg_8h_00);\n                    }\n                    else {\n                        fcn.0041bcea(8);\n                        fVar18 = _var_8h;\n                    }\n                    break;\n                case 9:\n                    if (*pdVar15 == '\\0') goto code_r0x004120f3;\n                    fVar18 = 1;\n                    break;\n                case 10:\n                    fVar18 = *(*pdVar15 + 4);\n                }\n            }\n            fVar18 = fVar18 + *pdVar8;\ncode_r0x004118e6:\n            *pdVar8 = fVar18;\n        }\n        else {\n    // switch table (10 cases) at 0x41229c\n            switch(*(pdVar8 + 0xc)) {\n            case 2:\n                if ((*(pdVar15 + 0xc) != 1) && (*(pdVar15 + 0xc) != 2)) goto code_r0x00411ecd;\n                uVar20 = fcn.0040d00b();\n                uVar11 = *pdVar8;\n                *pdVar8 = *pdVar8 + uVar20;\n                *(pdVar8 + 4) = *(pdVar8 + 4) + (uVar20 >> 0x20) + CARRY4(uVar11, uVar20);\n                break;\n            case 3:\n            case 5:\n            case 6:\n            case 8:\n                break;\n            case 4:\n            case 9:\n            case 10:\ncode_r0x00411ecd:\n                fcn.0041df8a();\n                fVar18 = fcn.00412620();\n                fVar18 = fVar18 + *pdVar8;\n                goto code_r0x004118e6;\n            case 7:\n                iVar16 = *pdVar8;\n                if (*(pdVar15 + 0xc) == 1) {\n                    iVar6 = fcn.0040cdb4();\n                    *pdVar8 = iVar16 + iVar6;\n                }\n                else {\n                    iVar6 = fcn.0040d00b();\n                    *pdVar8 = iVar16 + iVar6;\n                }\n                break;\n            case 0xb:\n                if (*(pdVar15 + 0xc) != 0xb) goto code_r0x00411ecd;\n                iVar6 = fcn.0044be8a();\n                iVar16 = **pdVar8;\n                iVar10 = fcn.0042010a(iVar6 + iVar16);\n                fcn.0041faa0(iVar10, (*pdVar8)[1], **pdVar8);\n                uVar13 = fcn.0044be8a();\n                uVar13 = fcn.0044be47(extraout_ECX, uVar13);\n                fcn.0041faa0(**pdVar8 + iVar10, uVar13);\n                fcn.0042017e(*(*pdVar8 + 4));\n                *(*pdVar8 + 4) = iVar10;\n                **pdVar8 = iVar6 + iVar16;\n                break;\n            default:\n                if (*(pdVar15 + 0xc) == 1) {\n                    uVar11 = *pdVar15;\n                    uVar12 = *pdVar8;\n                    iVar16 = (uVar11 >> 0x1f) + (uVar12 >> 0x1f) + CARRY4(uVar11, uVar12);\n                    if (uVar11 + uVar12 >> 0x1f == iVar16) {\n                        *pdVar8 = uVar11 + uVar12;\n                    }\n                    else {\n                        *(pdVar8 + 0xc) = 2;\n                        *pdVar8 = uVar11 + uVar12;\n                        *(pdVar8 + 4) = iVar16;\n                    }\n                }\n                else {\n                    if (*(pdVar15 + 0xc) != 2) {\n                        fVar18 = fcn.00412620();\n                        _var_8h = fVar18;\n                        fcn.00412570();\n                        *pdVar8 = _var_8h;\n                        *(pdVar8 + 0xc) = 3;\n                        fVar18 = fcn.00412620();\n                        fVar18 = fVar18 + *pdVar8;\n                        goto code_r0x004118e6;\n                    }\n                    uVar11 = *pdVar8;\n                    uVar12 = *pdVar15;\n                    iVar16 = *(pdVar15 + 4);\n                    *pdVar8 = uVar11 + *pdVar15;\n                    *(pdVar8 + 4) = (uVar11 >> 0x1f) + iVar16 + CARRY4(uVar11, uVar12);\n                    *(pdVar8 + 0xc) = 2;\n                }\n            }\n        }\n        if (*(pdVar8 + 1) != 0) {\n            fcn.00401926(*(pdVar8 + 1));\n            *(pdVar8 + 1) = 0;\n        }\n        if (arg_ch[1] != 0x1) {\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = arg_ch[2];\n                pdVar15 = *(pdVar8 + 2);\n                if (pdVar8 != NULL) {\n                    if (*(pdVar8 + 1) != 0) {\n                        fcn.00401926();\n                        *(pdVar8 + 1) = 0;\n                    }\n                    if ((4 < *(pdVar8 + 0xc)) && (uVar11 = *(pdVar8 + 0xc) - 5,  uVar11 < 0xb)) {\n    // switch table (11 cases) at 0x47d1a2\n                        switch(*(uVar11 * 4 + 0x47d1a2)) {\n                        case 0x47ca03:\n                            if (*pdVar8 != 0) {\n                                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*pdVar8);\n                                fcn.0042017e(*pdVar8);\n                            }\n                            break;\n                        case 0x47ca23:\n                            if (*pdVar8 != 0) {\n                                fcn.0044aa9c();\n                            }\n                            break;\n                        case 0x47ca38:\n                            fcn.0041e3cc();\n                            break;\n                        case 0x47ca44:\n                            fcn.0042017e(*(*pdVar8 + 4));\n                            fcn.0042017e(*pdVar8);\n                            break;\n                        case 0x47ca60:\n                            if (*pdVar8 != 0) {\n                                fcn.0043a56f();\n                            }\n                            break;\n                        case 0x47ca75:\n                            if (*pdVar8 != 0) {\n                                fcn.0043a599();\n                            }\n                            break;\n                        case 0x47ca8a:\n                            if (*pdVar8 != 0) {\n                                fcn.00401926();\n                            }\n                        }\n                    }\n                    *(pdVar8 + 0xc) = 1;\n                    *pdVar8 = 0;\n                    fcn.0042017e(pdVar8);\n                }\n                arg_ch[2] = pdVar15;\n                goto code_r0x00411941;\n            }\n            goto code_r0x004117ca;\n        }\n        goto code_r0x004117d8;\n    case 0xc:\n        if (pdVar8 == 0x1) {\n            pdVar15 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar15 = arg_ch[2];\n        }\n        else {\n            pdVar15 = *(arg_ch[2] + 2);\n        }\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar8 = *(arg_ch[2] + 2);\n        }\n        else {\n            pdVar8 = *(*(arg_ch[2] + 2) + 0x10);\n        }\n        if (*(pdVar8 + 0xc) == 3) {\ncode_r0x00411980:\n            fVar18 = fcn.00412620();\n            *pdVar8 = *pdVar8 - fVar18;\n        }\n        else {\n    // switch table (10 cases) at 0x412280\n            switch(*(pdVar8 + 0xc)) {\n            case 2:\n                if ((*(pdVar15 + 0xc) != 1) && (*(pdVar15 + 0xc) != 2)) goto code_r0x00411ea0;\n                uVar20 = fcn.0040d00b();\n                uVar11 = *pdVar8;\n                *pdVar8 = *pdVar8 - uVar20;\n                *(pdVar8 + 4) = (*(pdVar8 + 4) - (uVar20 >> 0x20)) - (uVar11 < uVar20);\n                break;\n            case 3:\n            case 5:\n            case 6:\n            case 8:\n                break;\n            case 4:\n            case 9:\n            case 10:\n            case 0xb:\ncode_r0x00411ea0:\n                fcn.0041df8a();\n                goto code_r0x00411980;\n            case 7:\n                iVar16 = *pdVar8;\n                if (*(pdVar15 + 0xc) == 1) {\n                    iVar6 = fcn.0040cdb4();\n                    *pdVar8 = iVar16 - iVar6;\n                }\n                else {\n                    iVar6 = fcn.0040d00b();\n                    *pdVar8 = iVar16 - iVar6;\n                }\n                break;\n            default:\n                if (*(pdVar15 + 0xc) == 1) {\n                    uVar11 = *pdVar8;\n                    uVar12 = *pdVar15;\n                    uVar14 = uVar11 - uVar12;\n                    uVar9 = uVar11 - uVar12;\n                    _var_8h = _var_8h & 0xffffffff | uVar9 << 0x20;\n                    iVar16 = ((uVar11 >> 0x1f) - (uVar12 >> 0x1f)) - (uVar11 < uVar12);\n                    if ((uVar14 == uVar9) && (uVar14 >> 0x1f == iVar16)) {\n                        *pdVar8 = uVar14;\n                    }\n                    else {\n                        *(pdVar8 + 0xc) = 2;\n                        *pdVar8 = uVar9;\n                        *(pdVar8 + 4) = iVar16;\n                    }\n                }\n                else {\n                    if (*(pdVar15 + 0xc) != 2) {\n                        fVar18 = fcn.00412620();\n                        _var_8h = fVar18;\n                        fcn.00412570();\n                        *pdVar8 = _var_8h;\n                        *(pdVar8 + 0xc) = 3;\n                        goto code_r0x00411980;\n                    }\n                    uVar11 = *pdVar8;\n                    uVar12 = *pdVar15;\n                    iVar16 = *(pdVar15 + 4);\n                    *pdVar8 = uVar11 - *pdVar15;\n                    *(pdVar8 + 4) = ((uVar11 >> 0x1f) - iVar16) - (uVar11 < uVar12);\n                    *(pdVar8 + 0xc) = 2;\n                }\n            }\n        }\n        if (*(pdVar8 + 1) != 0) {\n            fcn.00401926(*(pdVar8 + 1));\n            *(pdVar8 + 1) = 0;\n        }\n        if (arg_ch[1] == 0x1) goto code_r0x004117d8;\n        cVar3 = *(arg_ch + 0xd);\n        goto joined_r0x004116f9;\n    case 0xd:\n        if (pdVar8 == 0x1) {\n            pdVar15 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar15 = arg_ch[2];\n        }\n        else {\n            pdVar15 = *(arg_ch[2] + 2);\n        }\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n    // switch table (11 cases) at 0x4121f0\n        switch(*(pdVar8 + 0xc)) {\n        case 1:\n            if (*(pdVar15 + 0xc) == 1) {\n                iVar2 = *pdVar15 * *pdVar8;\n                iVar6 = iVar2 >> 0x20;\n                iVar16 = iVar2;\n                iVar10 = *pdVar15 * *pdVar8;\n                if ((iVar10 - iVar16 == 0) && (iVar10 >> 0x1f == iVar6)) {\n                    *pdVar8 = iVar10;\n                }\n                else {\n                    *(pdVar8 + 0xc) = 2;\n                    *pdVar8 = iVar16;\n                    *(pdVar8 + 4) = iVar6;\n                }\n            }\n            else {\n                if (*(pdVar15 + 0xc) != 2) goto code_r0x00411de2;\n                uVar20 = fcn.00434ba0(*pdVar8, *pdVar8 >> 0x1f, *pdVar15, *(pdVar15 + 4));\n                *pdVar8 = uVar20;\n                *(pdVar8 + 4) = uVar20 >> 0x20;\n                *(pdVar8 + 0xc) = 2;\n            }\n            break;\n        case 2:\n            if ((*(pdVar15 + 0xc) != 1) && (*(pdVar15 + 0xc) != 2)) goto code_r0x00411de2;\n            uVar20 = fcn.0040d00b();\n            uVar20 = fcn.00434ba0(uVar20, *pdVar8, *(pdVar8 + 4));\n            *pdVar8 = uVar20;\n            *(pdVar8 + 4) = uVar20 >> 0x20;\n            break;\n        case 3:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 10:\n            break;\n        case 4:\n        case 9:\n        case 0xb:\ncode_r0x00411de2:\n            fcn.0041df8a();\n            fVar18 = fcn.00412620();\n            fVar18 = fVar18 * *pdVar8;\n            goto code_r0x004116de;\n        default:\n            if (*(pdVar15 + 0xc) == 3) {\n                fVar18 = *pdVar15;\n            }\n            else {\n    // switch table (10 cases) at 0x41220c\n                switch(*(pdVar15 + 0xc)) {\n                case 1:\n                case 7:\n                    fVar18 = *pdVar15;\n                    break;\n                case 2:\n                    fVar18 = *pdVar15;\n                    break;\n                default:\ncode_r0x00412119:\n                    fVar18 = 0;\n                    break;\n                case 4:\n                    cVar3 = fcn.0040d075();\n                    if (cVar3 == '\\0') {\n                        fVar18 = fcn.00422d13(arg_8h_01);\n                    }\n                    else {\n                        fcn.0041bcea(8);\n                        fVar18 = _var_8h;\n                    }\n                    break;\n                case 9:\n                    if (*pdVar15 == '\\0') goto code_r0x00412119;\n                    fVar18 = 1;\n                    break;\n                case 10:\n                    fVar18 = *(*pdVar15 + 4);\n                }\n            }\n            fVar18 = fVar18 * *pdVar8;\ncode_r0x004116de:\n            *pdVar8 = fVar18;\n        }\n        iVar16 = *(pdVar8 + 1);\njoined_r0x00411a24:\n        if (iVar16 != 0) {\n            fcn.00401926();\n            *(pdVar8 + 1) = 0;\n        }\n        if (arg_ch[1] != 0x1) {\n            cVar3 = *(arg_ch + 0xd);\njoined_r0x004116f9:\n            if (cVar3 != '\\0') {\n                pdVar8 = arg_ch[2];\n                pdVar15 = *(pdVar8 + 2);\n                if (pdVar8 != NULL) {\n                    fcn.00412570();\n                    fcn.0042017e(pdVar8);\n                }\n                arg_ch[2] = pdVar15;\n                *(arg_ch + 0xd) = 0;\n            }\n            if (*(arg_ch + 3) != '\\0') {\n                arg_ch[1] = arg_ch[1] + -1;\n                *(arg_ch + 0xd) = 1;\n                return 0;\n            }\n            goto code_r0x0047ca9f;\n        }\n        goto code_r0x004117d8;\n    case 0xe:\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n        iVar16 = *(pdVar8 + 0xc);\n        if (iVar16 != 3) {\n    // switch table (10 cases) at 0x47d1ce\n            switch(iVar16) {\n            default:\n                if (iVar16 != 3) {\n                    fVar18 = fcn.00412620();\n                    _var_8h = fVar18;\n                    fcn.00412570();\n                    *pdVar8 = _var_8h;\n                    *(pdVar8 + 0xc) = 3;\n                }\n                break;\n            case 3:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 10:\n                goto code_r0x00411a1f;\n            }\n        }\n        fVar18 = fcn.00412620();\n        *pdVar8 = *pdVar8 / fVar18;\ncode_r0x00411a1f:\n        iVar16 = *(pdVar8 + 1);\n        goto joined_r0x00411a24;\n    case 0xf:\n        _var_8h = _var_8h & 0xffffffff00000000;\n        uVar13 = fcn.0041e078();\n        fcn.004113a0(uVar13);\n        fcn.0041bd8f();\n        var_18h = 0;\n        uVar13 = fcn.0041e078();\n        fcn.004113a0(uVar13);\n        puVar22 = &var_10h;\n        fcn.004113a0(puVar22);\n        uVar13 = fcn.0044ba9b(&var_30h, puVar22);\n        fcn.0041e078();\n        fcn.0040d89e(uVar13);\n        fcn.00412570();\n        fcn.00412570();\n        fcn.00412570();\n        goto code_r0x004117db;\n    }\n    if (cVar3 == '\\0') {\ncode_r0x00411f01:\n        arg_ch = arg_ch & 0xffffff00;\n    }\n    else {\ncode_r0x00411fcf:\n        arg_ch = CONCAT31(arg_ch._1_3_, 1);\n    }\ncode_r0x00411f05:\n    fcn.0041df71();\n    fcn.0041e387(arg_ch);\n    fcn.0041bd8f();\n    return 0;\n}\n",
        "token_count": 10761
    },
    "00412490": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412490(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint in_ECX;\n    uint32_t uVar5;\n    uint var_1ch;\n    uint *var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    \n    uVar1 = *(arg_8h + 8);\n    var_ch = uVar1;\n    if (uVar1 == 0) {\n        fcn.00412570();\n    }\n    else {\n        var_8h = in_ECX;\n        fcn.00403320(in_ECX, 1);\n        uVar5 = 0;\n        if (uVar1 != 0) {\n            do {\n                puVar2 = *(*(arg_8h + 4) + uVar5 * 4);\n                puVar4 = fcn.0042010a(0x10);\n                if (puVar4 == NULL) {\n                    puVar4 = NULL;\n                }\n                else {\n                    *puVar4 = *puVar2;\n                    puVar4[1] = puVar2[1];\n                    puVar4[2] = puVar2[2];\n                    piVar3 = puVar2[3];\n                    puVar4[3] = piVar3;\n                    *piVar3 = *piVar3 + 1;\n                }\n                var_10h = 4;\n                var_14h = puVar4;\n                fcn.00412320(var_8h, &var_1ch, 1);\n                if (puVar4 != NULL) {\n                    *puVar4[3] = *puVar4[3] + -1;\n                    if (*puVar4[3] == 0) {\n                        fcn.0042017e(*puVar4);\n                        fcn.0042017e(puVar4[3]);\n                    }\n                    fcn.0042017e(puVar4);\n                    var_14h = NULL;\n                }\n                uVar5 = uVar5 + 1;\n                var_10h = 1;\n                var_1ch = 0;\n            } while (uVar5 < var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 519
    },
    "00412620": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __fastcall fcn.00412620(double *param_1)\n\n{\n    int32_t iVar1;\n    int16_t *arg_8h;\n    float10 fVar2;\n    uint var_8h;\n    \n    iVar1 = *(param_1 + 0xc);\n    if (iVar1 == 3) {\n        return *param_1;\n    }\n    if (iVar1 == 1) {\n        return *param_1;\n    }\n    // switch table (9 cases) at 0x412690\n    switch(iVar1) {\n    case 2:\n        return *param_1;\n    case 4:\n        break;\n    case 7:\n        return *param_1;\n    case 9:\n        if (*param_1 != '\\0') {\n            return 1;\n        }\n    default:\n        return 0;\n    case 10:\n        return *(*param_1 + 4);\n    }\n    arg_8h = **(param_1 + 1);\n    if ((((iVar1 == 4) && (*arg_8h == 0x30)) && ((arg_8h[1] == 0x78 || (arg_8h[1] == 0x58)))) &&\n       ((*(param_1 + 1))[1] < 0x13)) {\n        fcn.0041bcea(8);\n        return _var_8h;\n    }\n    fVar2 = fcn.00422d13(arg_8h);\n    return fVar2;\n}\n",
        "token_count": 343
    },
    "004126c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004126c0(uint *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint uVar8;\n    int32_t *piVar9;\n    int32_t in_ECX;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t *var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    piVar3 = arg_ch;\n    iVar11 = arg_8h;\n    var_74h = *arg_ch + -1;\n    _var_28h = _var_28h & 0xffffffff00000000;\n    var_20h = 0;\n    var_1ch = 1;\n    var_38h = 0;\n    var_30h = 0;\n    var_2ch = 1;\n    piVar9 = *(*(arg_8h + 4) + 4);\n    var_68h = 0;\n    var_60h = 0;\n    var_5ch = 1;\n    var_58h = 0;\n    var_50h = 0;\n    var_4ch = 1;\n    var_ch = 0;\n    var_78h = 3;\n    if (*(piVar9 + 2) != 0x33) {\n        fcn.0044d520(0x94, *(piVar9 + 10));\n        goto code_r0x00412a5b;\n    }\n    puVar7 = *piVar9;\n    arg_ch = 0x2;\n    var_48h = *puVar7;\n    var_44h = puVar7[1];\n    var_40h = puVar7[2];\n    var_3ch = puVar7[3];\n    *var_3ch = *var_3ch + 1;\n    arg_8h = NULL;\n    uVar10 = 0;\n    var_14h = var_48h;\n    var_10h = var_3ch;\n    var_4h = in_ECX;\n    if (*0x4c22e4 == '\\0') {\n        if (*0x4c22d8 == 0) {\n            arg_8h = fcn.0040d349(&var_48h, &var_ch);\n            uVar10 = var_ch;\n        }\n        else {\n            piVar9 = *0x4c22dc;\n            if (*0x4c22e1 != '\\0') {\n                piVar9 = (*0x4c22dc)[2];\n            }\n            cVar4 = fcn.0040d500(&var_48h, piVar9);\n            if ((cVar4 == '\\0') || (iVar5 = *piVar9,  iVar5 == 0)) {\n                arg_8h = NULL;\n            }\n            else {\n                arg_8h = *(iVar5 + 0x14);\n                var_ch = *(iVar5 + 0x10) & 0xff00;\n                uVar10 = var_ch;\n            }\n        }\n    }\n    var_8h = arg_8h;\n    if (arg_8h == NULL) {\n        fcn.00412570();\n        var_1ch = 1;\n        _var_28h = _var_28h & 0xffffffff00000000;\n        fcn.0040d380(&var_48h, &var_28h, 0, 1);\n        fcn.0040d2d2(&var_48h, &var_8h, &var_ch, 1);\ncode_r0x004127de:\n        iVar1 = *(*(*(iVar11 + 4) + 8) + 8);\n        puVar7 = var_8h;\n        arg_8h = var_8h;\n        while (iVar1 == 0x4e) {\n            cVar4 = fcn.0040d2c0(5);\n            if (cVar4 == '\\0') {\n                cVar4 = fcn.0040d2c0(0xf);\n                if (cVar4 != '\\0') {\n                    iVar5 = fcn.0045f4df(iVar11, &arg_ch, &var_8h, 0, 0);\n                    if (-1 < iVar5) goto code_r0x004786b3;\n                    goto code_r0x00412a50;\n                }\n            }\n            else {\n                iVar5 = fcn.0045f211(iVar11, &arg_ch, &var_8h, iVar11);\n                if (iVar5 < 0) goto code_r0x00412a50;\ncode_r0x004786b3:\n                arg_8h = var_8h;\n                puVar7 = var_8h;\n            }\n            iVar1 = *(*(*(iVar11 + 4) + arg_ch * 4) + 8);\n        }\n        piVar9 = *(*(iVar11 + 4) + arg_ch * 4);\n        var_6ch = puVar7;\n        if (*(piVar9 + 2) == 0) {\n            if (*piVar9 == 0x11) {\n                arg_ch = arg_ch + 1;\n                iVar6 = fcn.0040fa40(iVar11, &arg_ch, iVar11, 0xffffffff);\n                iVar5 = var_1ch;\n                if (-1 < iVar6) {\n                    if (var_1ch == 8) {\n                        fcn.0040d89e(&var_28h);\n                    }\n                    else {\n                        cVar4 = fcn.0040d2c0(5);\n                        if (cVar4 == '\\0') {\n                            cVar4 = fcn.0040d2c0(0xf);\n                            if (cVar4 == '\\0') {\n                                iVar5 = fcn.0045c235(0xa9, 0, L\"Variable is not of type \\'Object\\'.\", 1);\n                                if (iVar5 < 0) {\n                                    fcn.0044d520(0xa9, *(*(*(iVar11 + 4) + arg_ch * 4) + 10));\n                                    goto code_r0x00412a50;\n                                }\n                                fcn.00412570();\n                                var_2ch = 1;\n                                var_38h = 1;\n                            }\n                            else {\n                                if (*(*(((iVar5 != 0xf) - 1 & var_28h) + 4) + 8) < 1) goto code_r0x00478832;\n                                uVar8 = fcn.00444e71(0);\n                                cVar4 = fcn.0041d5f6(0x29);\n                                if (cVar4 != '\\0') {\n                                    fcn.004084a6();\n                                    cVar4 = fcn.0041f885();\n                                    if (cVar4 != '\\0') {\n                                        fcn.0044a76d((var_1ch != 0xf) - 1 & var_28h);\n                                        fcn.0040d89e(&var_28h);\n                                        goto code_r0x00412900;\n                                    }\n                                }\n                                fcn.0040d89e(uVar8);\n                                fcn.0040d89e(&var_28h);\n                            }\n                        }\n                        else {\n                            fcn.0040346e();\n                            fcn.00403489(0);\n                            iVar5 = fcn.0040218e(0);\n                            if (((iVar5 < 1) || (iVar5 = fcn.0040218e(1),  iVar5 < 1)) ||\n                               (iVar5 = fcn.004114a0(&var_28h, 1, 0),  iVar5 == 0)) {\ncode_r0x00478832:\n                                fcn.0040ca8e(0x49dbf0);\n                                fcn.00412570();\n                                var_5ch = 1;\n                                var_68h = 1;\n                                fcn.00412570();\n                                var_4ch = 1;\n                                var_58h = 0xffffffff;\n                            }\n                            else {\n                                uVar8 = fcn.004114a0(&var_28h, 0, 0);\n                                fcn.0040d89e(uVar8);\n                                fcn.0040d89e(&var_28h);\n                            }\n                        }\n                    }\ncode_r0x00412900:\n                    iVar11 = *(*(iVar11 + 4) + arg_ch * 4);\n                    if (*(iVar11 + 8) == 0x7f) {\n                        iVar11 = 0;\n                        bVar2 = false;\n                        while( true ) {\n                            iVar5 = *piVar3;\n                            *piVar3 = iVar5 + 1;\n                            if ((((*0x4c22f8 < iVar5) || (iVar5 < 1)) || (iVar6 = iVar5 * 0x10 + *0x4c232c,  iVar6 == 0)\n                                ) || (bVar2)) break;\n                            piVar9 = **(iVar6 + 4);\n                            if (*(piVar9 + 2) == 0) {\n                                iVar6 = *piVar9;\n                                if (iVar6 == 0xd) {\n                                    iVar11 = iVar11 + 1;\n                                }\n                                else if (iVar6 == 0xe) {\n                                    if (iVar11 == 0) {\n                                        bVar2 = true;\n                                        var_70h = iVar5;\n                                    }\n                                    else {\n                                        iVar11 = iVar11 + -1;\n                                    }\n                                }\n                            }\n                        }\n                        iVar11 = fcn.0040cdb4();\n                        if (iVar11 == 1) goto code_r0x00478994;\n                        if (arg_8h[3] == 8) {\n                            if (var_5ch == 5) goto code_r0x00478aa1;\n                            if (var_5ch == 0xf) goto code_r0x00412984;\n                            fcn.00412570();\n                            var_2ch = 1;\n                            var_38h = 0;\n                            fcn.00412570();\n                            var_1ch = 1;\n                            _var_28h = _var_28h & 0xffffffff00000000;\n                            fcn.0045bf80(arg_8h, &var_38h, &var_28h);\n                            cVar4 = fcn.0044be14();\n                            if (cVar4 == '\\0') {\n                                fcn.0040ca8e(0x49dbf0);\n                                fcn.00412570();\n                                var_2ch = 1;\n                                var_38h = 0;\n                                fcn.00412570();\n                                var_1ch = 1;\n                                _var_28h = _var_28h & 0xffffffff00000000;\n                                *piVar3 = var_70h + 1;\n                                goto code_r0x00412a50;\n                            }\n                            fcn.0040d89e(&var_28h);\n                            fcn.0040d89e(&var_38h);\n                            fcn.00404b02(&var_78h);\n                            iVar11 = var_74h + 1;\n                        }\n                        else {\ncode_r0x00412984:\n                            if ((var_5ch != 5) && (var_5ch != 0xf)) {\n                                fcn.00412570();\n                                _var_28h = 0;\n                                var_1ch = 3;\n                                cVar4 = fcn.004141fc();\n                                if (cVar4 == '\\0') {\n                                    cVar4 = fcn.004141fc();\n                                    iVar11 = var_74h;\n                                    if (cVar4 == '\\0') {\n                                        if (*(var_4h + 0x169) == '\\0') {\n                                            puVar7 = fcn.0042010a(0x38);\n                                            if (puVar7 == NULL) {\n                                                puVar7 = NULL;\n                                            }\n                                            else {\n                                                *puVar7 = var_78h;\n                                                puVar7[2] = var_70h;\n                                                puVar7[3] = var_6ch;\n                                                puVar7[1] = iVar11;\n                                                puVar7[6] = 0;\n                                                fcn.004113a0(&var_68h);\n                                                puVar7[10] = 0;\n                                                fcn.004113a0(&var_58h);\n                                            }\n                                            puVar7[0xc] = *(var_4h + 0x164);\n                                            *(var_4h + 0x164) = puVar7;\n                                        }\n                                        else {\n                                            fcn.0045d1da(&var_78h);\n                                            *(var_4h + 0x169) = 0;\n                                        }\n                                        *(var_4h + 0x160) = *(var_4h + 0x160) + 1;\n                                        iVar11 = iVar11 + 1;\n                                        goto code_r0x00412a4e;\n                                    }\n                                }\n                                else {\n                                    cVar4 = fcn.0041ee93();\n                                    if (cVar4 != '\\0') goto code_r0x00478ab7;\n                                }\ncode_r0x00478994:\n                                *piVar3 = var_70h + 1;\n                                goto code_r0x00412a50;\n                            }\ncode_r0x00478aa1:\n                            fcn.00412570();\n                            var_4ch = 1;\n                            var_58h = 0;\ncode_r0x00478ab7:\n                            fcn.00404b02(&var_78h);\n                            iVar11 = var_74h + 1;\n                        }\ncode_r0x00412a4e:\n                        *piVar3 = iVar11;\n                    }\n                    else {\n                        fcn.0044d520(0x72, *(iVar11 + 10));\n                    }\n                }\n            }\n            else {\ncode_r0x00478ad2:\n                fcn.0044d520(0x94, *(piVar9 + 10));\n            }\n        }\n        else {\n            arg_ch = arg_ch + 1;\n            iVar5 = fcn.0040fa40(iVar11, &arg_ch, iVar11, 0xffffffff);\n            if (-1 < iVar5) {\n                if (puVar7 != &var_28h) {\n                    if ((puVar7[3] == 4) && (var_1ch == 4)) {\n                        fcn.0040c935(var_20h);\n                    }\n                    else {\n                        fcn.00412570();\n                        fcn.004113a0(&var_28h);\n                    }\n                }\n                piVar9 = *(*(iVar11 + 4) + arg_ch * 4);\n                if ((*(piVar9 + 2) != 0) || (*piVar9 != 0xf)) goto code_r0x00478ad2;\n                arg_ch = arg_ch + 1;\n                iVar5 = fcn.0040fa40(iVar11, &arg_ch, iVar11, 0xffffffff);\n                if (-1 < iVar5) {\n                    fcn.00412570();\n                    fcn.004113a0(&var_28h);\n                    piVar9 = *(*(iVar11 + 4) + arg_ch * 4);\n                    if ((*(piVar9 + 2) == 0) && (*piVar9 == 0x10)) {\n                        arg_ch = arg_ch + 1;\n                        iVar5 = fcn.0040fa40(iVar11, &arg_ch, &var_28h, 0xffffffff);\n                        if (iVar5 < 0) goto code_r0x00412a50;\n                        fcn.0040d89e(&var_28h);\n                    }\n                    else {\n                        fcn.00412570();\n                        var_4ch = 1;\n                        var_58h = 1;\n                    }\n                    if (((puVar7[3] != 1) && (cVar4 = fcn.0040d2c0(2),  cVar4 == '\\0')) &&\n                       (cVar4 = fcn.0040d2c0(3),  cVar4 == '\\0')) {\n                        cVar4 = fcn.0041bde1();\n                        if (cVar4 == '\\0') {\n                            fcn.0040cf97();\n                        }\n                        else {\n                            fcn.0041df8a();\n                        }\n                    }\n                    if (((var_5ch != 1) && (var_5ch != 3)) && (var_5ch != 2)) {\n                        cVar4 = fcn.0041bde1();\n                        if (cVar4 == '\\0') {\n                            fcn.0040cf97();\n                        }\n                        else {\n                            fcn.0041df8a();\n                        }\n                    }\n                    if (((var_4ch != 1) && (cVar4 = fcn.0040d2c0(2),  cVar4 == '\\0')) &&\n                       (cVar4 = fcn.0040d2c0(3),  cVar4 == '\\0')) {\n                        cVar4 = fcn.0041bde1();\n                        if (cVar4 == '\\0') {\n                            fcn.0040cf97();\n                        }\n                        else {\n                            fcn.0041df8a();\n                        }\n                    }\n                    goto code_r0x00412900;\n                }\n            }\n        }\n    }\n    else {\n        if ((uVar10 & 0x100) == 0) goto code_r0x004127de;\n        fcn.0044d520(0xa3, *(*(*(iVar11 + 4) + 4) + 10));\n    }\ncode_r0x00412a50:\n    piVar9 = var_10h;\n    *var_10h = *var_10h + -1;\n    if (*var_10h == 0) {\n        fcn.0042017e(var_14h);\n        fcn.0042017e(piVar9);\n    }\ncode_r0x00412a5b:\n    fcn.00412570();\n    fcn.00412570();\n    fcn.00412570();\n    fcn.00412570();\n    return;\n}\n",
        "token_count": 4265
    },
    "00412b40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_164h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00412b40(int32_t **arg_8h, int32_t **arg_ch, uint *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t **arg_8h_00;\n    char cVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    int32_t *piVar6;\n    uint16_t *puVar7;\n    int32_t **extraout_ECX;\n    uint16_t *puVar8;\n    uint16_t **ppuVar9;\n    int32_t *piVar10;\n    int32_t **ppiVar11;\n    uint *puVar12;\n    int32_t *in_stack_fffffe6c;\n    int32_t **ppiVar13;\n    uint *in_stack_fffffe78;\n    uint uVar14;\n    int32_t **ppiVar15;\n    int32_t *var_164h;\n    uint in_stack_fffffea4;\n    int32_t *var_64h;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t *var_50h;\n    int32_t *var_4ch;\n    uint16_t **var_48h;\n    int32_t *var_44h;\n    int32_t **var_3ch;\n    int32_t var_38h;\n    int32_t *var_34h;\n    uint16_t **var_30h;\n    int32_t var_2ch;\n    int32_t *var_28h;\n    uint16_t *var_21h;\n    int32_t *var_1ch;\n    uint16_t *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t **var_9h;\n    \n    arg_8h_00 = arg_8h;\n    var_2ch = 0;\n    var_28h = NULL;\n    var_21h._0_1_ = '\\0';\n    var_44h = NULL;\n    var_3ch = NULL;\n    var_38h = 1;\n    var_64h = NULL;\n    var_5ch = 0;\n    var_58h = 1;\n    var_9h._0_1_ = (arg_10h & 4) != 0;\n    arg_10h = arg_10h & 3;\n    *arg_ch = *arg_ch + 1;\n    piVar10 = arg_8h[1][*arg_ch];\n    if (*(piVar10 + 2) == 0) {\n        iVar4 = *piVar10;\n        if (iVar4 == 0x1e) {\n            fcn.00405577(arg_8h, arg_ch, arg_10h);\n            goto code_r0x004132d5;\n        }\n        if (iVar4 == 0x1f) {\n            if (((arg_10h == NULL) || (iVar4 = *(arg_8h[1] + *arg_ch)[1],  iVar4 == 0x1c)) || (iVar4 == 0x1d)) {\n                fcn.0044d520(0x6e, *(piVar10 + 10));\n            }\n            else {\n                fcn.0045d8ff(arg_8h, arg_ch, arg_10h);\n            }\n            goto code_r0x004132d5;\n        }\n        if (iVar4 == 0x2c) {\n            fcn.0045d443(arg_8h, arg_ch, arg_10h);\n            goto code_r0x004132d5;\n        }\n    }\n    var_1ch = NULL;\n    var_18h = 0x8;\n    puVar3 = fcn.0042010a(0x10);\n    *puVar3 = 0;\n    ppiVar15 = 0x412bfc;\n    unique0x100012bc = puVar3;\n    var_50h = fcn.0042010a(4);\n    if (var_50h == NULL) {\n        var_50h = NULL;\n    }\n    else {\n        *var_50h = 1;\n    }\n    ppiVar5 = arg_8h_00[1][*arg_ch];\n    iVar1 = *(ppiVar5 + 2);\n    var_14h = var_50h;\n    while (iVar1 == 0x33) {\n        ppuVar9 = *ppiVar5;\n        if (&fcn.00412b40::var_21h + 1 != ppuVar9) {\n            if (*var_50h < 2) {\n                piVar10 = ppuVar9[1];\n                var_1ch = piVar10;\n                if (var_18h < piVar10 + 1U) {\n                    var_18h = fcn.0040c91c(piVar10 + 1U);\n                    if (stack0xffffffdc != NULL) {\n                        fcn.0042017e(stack0xffffffdc);\n                    }\n                    *NULL = fcn.0042010a(-(ZEXT48(var_18h) * 2 >> 0x20 != 0) | ZEXT48(var_18h) * 2);\n                    (*NULL)[piVar10] = 0;\n                }\n                in_stack_fffffe78 = *ppuVar9;\n                fcn.0041faa0(stack0xffffffdc, in_stack_fffffe78, piVar10 * 2 + 2);\n            }\n            else {\n                *var_50h = *var_50h + -1;\n                var_18h = ppuVar9[2];\n                var_1ch = ppuVar9[1];\n                unique0x00007a00 = *ppuVar9;\n                var_50h = ppuVar9[3];\n                *var_50h = *var_50h + 1;\n                var_14h = var_50h;\n            }\n        }\n        stack0xfffffff4 = NULL;\n        if (*0x4c22e4 == '\\0') {\n            if (arg_10h == 0x1) {\n                if (*0x4c22d8 == 0) {\n                    in_stack_fffffe78 = &fcn.00412b40::var_21h + 1;\n                    *NULL = fcn.0040d349(in_stack_fffffe78, &fcn.00412b40::var_28h);\n                }\n                else {\n                    ppiVar5 = *0x4c22dc;\n                    if (*0x4c22e1 != '\\0') {\n                        ppiVar5 = (*0x4c22dc)[2];\n                    }\n                    if (*ppiVar5 != NULL) {\n                        arg_8h = arg_8h & 0xffffff;\n                        unique0x100012d0 = ppiVar5;\n                        if ((*0x4c23d0 & 1) == 0) {\n                            *0x4c23d0 = *0x4c23d0 | 1;\n                            fcn.0040d3d2();\n                            in_stack_fffffe78 = 0x477e0e;\n                            fcn.00421b2a(0x471fb5);\n                        }\n                        *0x4c23f0 = 0;\n                        *0x4c23ec = 0;\n                        var_4ch = 0x4c23d4;\n                        var_30h = 0x4c23d4;\ncode_r0x00412ce6:\n                        while( true ) {\n                            ppuVar9 = *ppiVar5;\n                            piVar10 = ppuVar9[1];\n                            var_48h = ppuVar9;\n                            if (var_1ch != NULL) break;\n                            if (piVar10 == NULL) goto code_r0x00412cfa;\ncode_r0x00413235:\n                            ppuVar9 = ppuVar9[6];\n                            if (ppuVar9 == NULL) goto code_r0x00412da2;\n                            var_34h = var_1ch;\n                            if (ppuVar9[1] < var_1ch) {\n                                var_34h = ppuVar9[1];\n                            }\n                            puVar3 = *ppuVar9;\n                            puVar7 = stack0xffffffdc;\n                            for (piVar10 = var_34h; ppiVar5 = stack0xfffffff4,  piVar10 != NULL; piVar10 = piVar10 + -1)\n                            {\n                                if (*puVar7 != *puVar3) {\n                                    if (*puVar7 < *puVar3) goto code_r0x0041326a;\n                                    goto code_r0x00413294;\n                                }\n                                puVar7 = puVar7 + 1;\n                                puVar3 = puVar3 + 1;\n                            }\n                            if (var_34h < ppuVar9[1]) {\ncode_r0x0041326a:\n                                var_48h[6] = ppuVar9[7];\n                                ppuVar9[7] = *stack0xfffffff4;\n                                *stack0xfffffff4 = ppuVar9;\n                                if (ppuVar9[6] == NULL) goto code_r0x00412da2;\n                            }\ncode_r0x00413294:\n                            var_4ch[6] = *stack0xfffffff4;\n                            var_4ch = *stack0xfffffff4;\n                            *stack0xfffffff4 = var_4ch[6];\n                        }\n                        if (piVar10 == NULL) {\ncode_r0x00412d41:\n                            ppuVar9 = ppuVar9[7];\n                            if (ppuVar9 == NULL) goto code_r0x00412da2;\n                            var_34h = ppuVar9[1];\n                            if (var_1ch < ppuVar9[1]) {\n                                var_34h = var_1ch;\n                            }\n                            puVar3 = *ppuVar9;\n                            puVar7 = stack0xffffffdc;\n                            for (piVar10 = var_34h; ppiVar5 = stack0xfffffff4,  piVar10 != NULL; piVar10 = piVar10 + -1)\n                            {\n                                if (*puVar3 != *puVar7) {\n                                    if (*puVar7 <= *puVar3) goto code_r0x00412d87;\n                                    goto code_r0x004132f4;\n                                }\n                                puVar3 = puVar3 + 1;\n                                puVar7 = puVar7 + 1;\n                            }\n                            if (var_34h < var_1ch) {\ncode_r0x004132f4:\n                                var_48h[7] = ppuVar9[6];\n                                ppuVar9[6] = *stack0xfffffff4;\n                                *stack0xfffffff4 = ppuVar9;\n                                if (ppuVar9[7] == NULL) goto code_r0x00412da2;\n                            }\ncode_r0x00412d87:\n                            var_30h[7] = *stack0xfffffff4;\n                            var_30h = *stack0xfffffff4;\n                            *stack0xfffffff4 = var_30h[7];\n                            goto code_r0x00412ce6;\n                        }\ncode_r0x00412cfa:\n                        if (var_1ch < piVar10) {\n                            in_stack_fffffe78 = 0x477e31;\n                            iVar4 = fcn.0040b96c(piVar10);\n                        }\n                        else {\n                            puVar3 = *ppuVar9;\n                            puVar7 = stack0xffffffdc;\n                            for (piVar10 = var_1ch; ppiVar5 = stack0xfffffff4,  piVar10 != NULL; piVar10 = piVar10 + -1)\n                            {\n                                if (*puVar7 != *puVar3) {\n                                    iVar4 = (-(*puVar7 < *puVar3) & 0xfffffffe) + 1;\n                                    goto code_r0x00412d34;\n                                }\n                                puVar7 = puVar7 + 1;\n                                puVar3 = puVar3 + 1;\n                            }\n                            iVar4 = 0;\n                        }\ncode_r0x00412d34:\n                        if (iVar4 < 0) goto code_r0x00413235;\n                        if (0 < iVar4) goto code_r0x00412d41;\n                        arg_8h = 0x1000000;\ncode_r0x00412da2:\n                        var_30h[7] = (*ppiVar5)[6];\n                        var_4ch[6] = (*ppiVar5)[7];\n                        (*ppiVar5)[6] = *0x4c23f0;\n                        (*ppiVar5)[7] = *0x4c23ec;\n                        if ((arg_8h._3_1_ != '\\0') && (piVar10 = *ppiVar5,  piVar10 != NULL)) {\n                            unique0x00007a00 = piVar10[5];\n                            var_28h = piVar10[4] & 0xff00;\n                            goto code_r0x00412df1;\n                        }\n                    }\n                    *0x4 = NULL;\n                }\n            }\n            else {\n                if (arg_10h == NULL) {\n                    if (*0x4c22d8 != 0) {\n                        puVar12 = &fcn.00412b40::var_28h;\n                        in_stack_fffffe78 = &fcn.00412b40::var_21h + 1;\n                        fcn.00448a7c();\n                        *NULL = fcn.0040d349(in_stack_fffffe78, puVar12);\n                        if (*NULL != NULL) goto code_r0x00412df1;\n                    }\n                }\n                else if (arg_10h != 0x2) {\n                    if (arg_10h == 0x10) {\n                        in_stack_fffffe78 = &fcn.00412b40::var_21h + 1;\n                        *NULL = fcn.0040d349(in_stack_fffffe78, &fcn.00412b40::var_28h);\n                    }\n                    goto code_r0x00412df1;\n                }\n                in_stack_fffffe78 = &fcn.00412b40::var_21h + 1;\n                *NULL = fcn.0040d349(in_stack_fffffe78, &fcn.00412b40::var_28h);\n            }\n        }\ncode_r0x00412df1:\n        arg_8h = stack0xfffffff4;\n        if (stack0xfffffff4 == NULL) {\n            if (var_9h != '\\0') {\n                fcn.0044d520(0x79, *(arg_8h_00[1][*arg_ch] + 10));\n                puVar3 = stack0xffffffdc;\n                goto code_r0x004132bc;\n            }\n            fcn.0040ca8e(0x49dbf0);\n            in_stack_fffffe6c = &fcn.00412b40::var_21h + 1;\n            in_stack_fffffe78 = arg_10h;\n            fcn.0040d380(in_stack_fffffe6c, &fcn.00412b40::var_44h, 0, arg_10h);\n            fcn.0040d2d2(&fcn.00412b40::var_21h + 1, &fcn.00412b40::arg_8h, &fcn.00412b40::var_28h, arg_10h);\n            stack0xfffffff4 = arg_8h;\ncode_r0x0041339f:\n            arg_8h = stack0xfffffff4;\n            if (var_21h != '\\0') goto code_r0x00412e19;\n        }\n        else {\n            if ((var_28h & 0x100) != 0) {\n                fcn.0044d520(0xae, *(arg_8h_00[1][*arg_ch] + 10));\n                puVar3 = stack0xffffffdc;\n                goto code_r0x004132bc;\n            }\n            if ((var_28h & 0x400) != 0) {\n                if (var_9h != '\\0') goto code_r0x0041339f;\n                fcn.0044d520(0x9c, *(arg_8h_00[1][*arg_ch] + 10));\n                puVar3 = stack0xffffffdc;\n                goto code_r0x004132bc;\n            }\n            var_21h._0_1_ = '\\x01';\ncode_r0x00412e19:\n            arg_8h = stack0xfffffff4;\n            if ((arg_10h & 1) != 0) {\n                if (arg_10h == 0x1) {\n                    if (*0x4c22d8 == 0) goto code_r0x00477ec2;\n                    ppiVar5 = *0x4c22dc;\n                    if (*0x4c22e1 != '\\0') {\n                        ppiVar5 = (*0x4c22dc)[2];\n                    }\n                    if (*ppiVar5 != NULL) {\n                        arg_8h = stack0xfffffff4 & 0xffffff;\n                        if ((*0x4c23d0 & 1) == 0) {\n                            *0x4c23d0 = *0x4c23d0 | 1;\n                            fcn.0040d3d2();\n                            ppiVar15 = 0x477f04;\n                            fcn.00421b2a(0x471fb5);\n                        }\n                        *0x4c23f0 = 0;\n                        *0x4c23ec = 0;\n                        var_34h = 0x4c23d4;\n                        var_4ch = 0x4c23d4;\ncode_r0x00412e90:\n                        while( true ) {\n                            puVar3 = stack0xffffffdc;\n                            var_30h = *ppiVar5;\n                            piVar10 = var_30h[1];\n                            if (var_1ch != NULL) break;\n                            if (piVar10 == NULL) goto code_r0x00412eab;\ncode_r0x00477f14:\n                            piVar10 = var_30h[6];\n                            puVar3 = stack0xffffffdc;\n                            if (piVar10 == NULL) goto code_r0x00412eec;\n                            cVar2 = fcn.0043fd7d();\n                            if (cVar2 != '\\0') {\n                                var_30h[6] = piVar10[7];\n                                piVar10[7] = *ppiVar5;\n                                *ppiVar5 = piVar10;\n                                puVar3 = stack0xffffffdc;\n                                if (piVar10[6] == 0) goto code_r0x00412eec;\n                            }\n                            var_34h[6] = *ppiVar5;\n                            var_34h = *ppiVar5;\n                            *ppiVar5 = var_34h[6];\n                        }\n                        if (piVar10 == NULL) {\ncode_r0x00477f80:\n                            piVar10 = var_30h[7];\n                            puVar3 = stack0xffffffdc;\n                            if (piVar10 == NULL) goto code_r0x00412eec;\n                            cVar2 = fcn.0043fd7d();\n                            if (cVar2 != '\\0') {\n                                var_30h[7] = piVar10[6];\n                                piVar10[6] = *ppiVar5;\n                                *ppiVar5 = piVar10;\n                                puVar3 = stack0xffffffdc;\n                                if (piVar10[7] == 0) goto code_r0x00412eec;\n                            }\n                            var_4ch[7] = *ppiVar5;\n                            var_4ch = *ppiVar5;\n                            *ppiVar5 = var_4ch[7];\n                            goto code_r0x00412e90;\n                        }\ncode_r0x00412eab:\n                        if (var_1ch < piVar10) {\n                            ppiVar15 = 0x477f78;\n                            iVar4 = fcn.0040b96c(piVar10);\n                        }\n                        else {\n                            puVar7 = *var_30h;\n                            puVar8 = stack0xffffffdc;\n                            for (piVar10 = var_1ch; piVar10 != NULL; piVar10 = piVar10 + -1) {\n                                if (*puVar8 != *puVar7) {\n                                    iVar4 = (-(*puVar8 < *puVar7) & 0xfffffffe) + 1;\n                                    goto code_r0x00412eda;\n                                }\n                                puVar8 = puVar8 + 1;\n                                puVar7 = puVar7 + 1;\n                            }\n                            iVar4 = 0;\n                        }\ncode_r0x00412eda:\n                        if (iVar4 < 0) goto code_r0x00477f14;\n                        if (0 < iVar4) goto code_r0x00477f80;\n                        arg_8h = CONCAT13(1, arg_8h._0_3_);\ncode_r0x00412eec:\n                        var_4ch[7] = (*ppiVar5)[6];\n                        var_34h[6] = (*ppiVar5)[7];\n                        (*ppiVar5)[6] = *0x4c23f0;\n                        (*ppiVar5)[7] = *0x4c23ec;\n                        if ((arg_8h._3_1_ != '\\0') && (piVar10 = *ppiVar5,  piVar10 != NULL)) {\n                            var_28h = piVar10[4] & 0xff00;\n                            iVar4 = piVar10[5];\n                            goto code_r0x00412f30;\n                        }\n                    }\n                }\n                else {\n                    if (arg_10h == NULL) {\n                        if (*0x4c22d8 == 0) {\ncode_r0x00477ec2:\n                            ppiVar15 = &fcn.00412b40::var_21h + 1;\n                            iVar4 = fcn.0040d349(ppiVar15, &fcn.00412b40::var_28h);\n                            puVar3 = stack0xffffffdc;\n                            goto code_r0x00412f30;\n                        }\n                        puVar12 = &fcn.00412b40::var_28h;\n                        iVar4 = &fcn.00412b40::var_21h + 1;\n                        fcn.00448a7c();\n                        iVar4 = fcn.0040d349(iVar4, puVar12);\n                        puVar3 = stack0xffffffdc;\n                        if (iVar4 == 0) goto code_r0x00477ec2;\n                    }\n                    else {\n                        if (arg_10h == 0x2) goto code_r0x00477ec2;\n                        if (arg_10h != 0x10) goto code_r0x00412f44;\n                        ppiVar15 = &fcn.00412b40::var_21h + 1;\n                        iVar4 = fcn.0040d349(ppiVar15, &fcn.00412b40::var_28h);\n                        puVar3 = stack0xffffffdc;\ncode_r0x00412f30:\n                        if (iVar4 == 0) goto code_r0x00412f44;\n                    }\n                    if ((var_28h & 0x200) != 0) {\n                        fcn.0044d520(0xaf, *(arg_8h_00[1][*arg_ch] + 10));\n                        goto code_r0x004132bc;\n                    }\n                }\n            }\n        }\ncode_r0x00412f44:\n        if ((arg_10h & 2) != 0) {\n            ppiVar15 = &fcn.00412b40::var_28h;\n            in_stack_fffffe78 = &fcn.00412b40::var_21h + 1;\n            fcn.0040d2d2(in_stack_fffffe78, &fcn.00412b40::var_54h, ppiVar15, 1);\n            if ((var_54h != 0) && ((var_28h & 0x200) != 0)) {\n                fcn.0044d520(0xaf, *(arg_8h_00[1][*arg_ch] + 10));\n                puVar3 = stack0xffffffdc;\n                goto code_r0x004132bc;\n            }\n        }\n        ppiVar5 = stack0xfffffff4;\n        if (var_9h != '\\0') {\n            ppiVar15 = 0x477fd3;\n            cVar2 = fcn.0040d2c0(5);\n            if (cVar2 == '\\0') {\n                fcn.0044d520(0x71, *(arg_8h_00[1][*arg_ch] + 10));\n                puVar3 = stack0xffffffdc;\n                goto code_r0x004132bc;\n            }\n        }\n        ppiVar13 = arg_ch;\n        piVar10 = arg_8h_00[1];\n        *arg_ch = *arg_ch + 1;\n        ppiVar11 = stack0xfffffff4;\n        if (*(piVar10[*arg_ch] + 8) == 0x4e) {\n            if (var_9h == '\\0') {\n                var_21h._0_1_ = var_9h;\n            }\n            else {\n                fcn.0040d89e(ppiVar5);\n            }\n            var_2ch = 0;\n            ppiVar5 = *(arg_8h_00[1][*ppiVar13] + 10);\n            iVar1 = *(arg_8h_00[1][*ppiVar13] + 8);\n            ppiVar15 = arg_ch;\n            while (iVar1 == 0x4e) {\n                *ppiVar15 = *ppiVar15 + 1;\n                ppiVar5 = *(arg_8h_00[1][*ppiVar15] + 10);\n                if (*(arg_8h_00[1][*ppiVar15] + 8) != 0x4f) {\n                    iVar4 = fcn.0040fa40(arg_8h_00, ppiVar15, &fcn.00412b40::var_44h, arg_8h_00);\n                    if (-1 < iVar4) goto code_r0x004134c1;\ncode_r0x0041364f:\n                    uVar14 = 0x7b;\n                    goto code_r0x0047846b;\n                }\n                ppiVar13 = arg_8h_00;\n                fcn.0045d154(arg_8h_00);\n                in_stack_fffffe6c = *ppiVar15;\n                piVar10 = fcn.0045ec7e(var_2ch, in_stack_fffffe6c, 0, ppiVar13, in_stack_fffffe78);\n                fcn.00412570();\n                var_38h = 1;\n                ppiVar15 = arg_ch;\n                var_44h = piVar10;\ncode_r0x004134c1:\n                if ((*(arg_8h_00[1][*ppiVar15] + 8) != 0x4f) || (0x40 < var_2ch)) goto code_r0x0041364f;\n                *ppiVar15 = *ppiVar15 + 1;\n                iVar4 = fcn.0040cdb4();\n                if (iVar4 < 0) goto code_r0x0041364f;\n                uVar14 = fcn.0040cdb4();\n                piVar10 = *ppiVar15;\n                (&fcn.00412b40::var_164h)[var_2ch] = uVar14;\n                var_2ch = var_2ch + 1;\n                iVar1 = *(arg_8h_00[1][piVar10] + 8);\n            }\n            ppiVar15 = 0x413528;\n            cVar2 = fcn.0040d2c0(0xf);\n            ppiVar11 = stack0xfffffff4;\n            if (cVar2 != '\\0') goto code_r0x00412f76;\n            if (var_2ch < 1) {\n                uVar14 = 0x7e;\n                goto code_r0x0047846b;\n            }\n            fcn.0040346e();\n            iVar4 = 0;\n            ppiVar15 = stack0xfffffff4;\n            if (0 < var_2ch) {\n                do {\n                    cVar2 = fcn.00403489((&fcn.00412b40::var_164h)[iVar4]);\n                    if (cVar2 == '\\0') goto code_r0x00478469;\n                    iVar4 = iVar4 + 1;\n                    ppiVar15 = extraout_ECX;\n                } while (iVar4 < var_2ch);\n            }\n            cVar2 = fcn.00403320(ppiVar15, 0);\n            if (cVar2 != '\\0') {\n                ppiVar11 = stack0xfffffff4;\n                if (var_9h != '\\0') {\n                    ppiVar15 = 0x47802e;\n                    iVar4 = fcn.0040218e(0);\n                    ppiVar11 = stack0xfffffff4;\n                    if (0 < iVar4) {\n                        ppiVar15 = &fcn.00412b40::var_64h;\n                        fcn.0044ab1c(ppiVar15);\n                    }\n                }\n                goto code_r0x00412f76;\n            }\n            fcn.0044d520(0x82, ppiVar5);\n            puVar3 = stack0xffffffdc;\n            goto code_r0x004132bc;\n        }\ncode_r0x00412f76:\n        piVar10 = arg_8h_00[1];\n        if (*(piVar10[*arg_ch] + 8) == 0x41) {\n            piVar6 = *arg_ch + 1;\n            *arg_ch = piVar6;\n            arg_8h = *(piVar10[piVar6] + 10);\n            if (var_9h != '\\0') {\n                fcn.0044d520(0xac, arg_8h);\n                puVar3 = stack0xffffffdc;\n                goto code_r0x004132bc;\n            }\n            if (var_21h != '\\0') {\n                if (var_38h == 4) {\n                    fcn.00407e53(0x49dbf0);\n                }\n                else {\n                    if (var_3ch != NULL) {\n                        fcn.00401926(var_3ch);\n                        var_3ch = NULL;\n                    }\n                    if ((4 < var_38h) && (var_38h - 5U < 0xb)) {\n    // switch table (11 cases) at 0x47851f\n                        switch(*((var_38h - 5U) * 4 + 0x47851f)) {\n                        case 0x478071:\n                            if (var_44h != NULL) {\n                                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n                                fcn.0042017e(var_44h);\n                            }\n                            break;\n                        case 0x478093:\n                            if (var_44h != NULL) {\n                                fcn.0044aa9c(var_44h);\n                            }\n                            break;\n                        case 0x4780a9:\n                            fcn.0041e3cc();\n                            break;\n                        case 0x4780b6:\n                            fcn.0042017e(var_44h[1]);\n                            fcn.0042017e(var_44h);\n                            break;\n                        case 0x4780d4:\n                            if (var_44h != NULL) {\n                                fcn.0043a56f(var_44h);\n                            }\n                            break;\n                        case 0x4780ea:\n                            if (var_44h != NULL) {\n                                fcn.0043a599(var_44h);\n                            }\n                            break;\n                        case 0x478100:\n                            if (var_44h != NULL) {\n                                fcn.00401926(var_44h);\n                            }\n                        }\n                    }\n                    var_44h = NULL;\n                    var_38h = 4;\n                    ppiVar5 = fcn.0042010a(0x10);\n                    if (ppiVar5 == NULL) {\n                        var_3ch = NULL;\n                    }\n                    else {\n                        piVar10 = fcn.004218fb(0x49dbf0);\n                        ppiVar5[1] = piVar10;\n                        if (piVar10 + 1 == 0) {\n                            piVar6 = 0x8;\n                        }\n                        else {\n                            piVar6 = piVar10 + 2 & 0xfffffff8;\n                        }\n                        ppiVar5[2] = piVar6;\n                        piVar6 = fcn.0041fa89(-(ZEXT48(piVar6) * 2 >> 0x20 != 0) | ZEXT48(piVar6) * 2);\n                        *ppiVar5 = piVar6;\n                        in_stack_fffffe6c = 0x41303f;\n                        fcn.0041faa0(piVar6, 0x49dbf0, (piVar10 + 1) * 2);\n                        piVar10 = fcn.0042010a(4);\n                        if (piVar10 == NULL) {\n                            piVar10 = NULL;\n                        }\n                        else {\n                            *piVar10 = 1;\n                        }\n                        ppiVar5[3] = piVar10;\n                        ppiVar11 = stack0xfffffff4;\n                        var_3ch = ppiVar5;\n                    }\n                }\n                if (ppiVar11 != &fcn.00412b40::var_44h) {\n                    if ((ppiVar11[3] == 0x4) && (var_38h == 4)) {\n                        fcn.0040c935(var_3ch);\n                    }\n                    else {\n                        if (ppiVar11[2] != NULL) {\n                            fcn.00401926(ppiVar11[2]);\n                            ppiVar11[2] = NULL;\n                        }\n                        if (4 < ppiVar11[3]) {\n    // switch table (11 cases) at 0x47854b\n                            switch(ppiVar11[3]) {\n                            case 0x5:\n                                fcn.0041e3cc();\n                                break;\n                            case 0x8:\n                                if (*ppiVar11 != NULL) {\n                                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar11);\n                                    fcn.0042017e(*ppiVar11);\n                                }\n                                break;\n                            case 0xa:\n                                ppiVar5 = *ppiVar11;\n                                if (ppiVar5 != NULL) {\n                                    fcn.0044aa9c();\n                                    ppiVar15 = ppiVar5;\n                                }\n                                break;\n                            case 0xb:\n                                fcn.0042017e((*ppiVar11)[1]);\n                                fcn.0042017e(*ppiVar11);\n                                break;\n                            case 0xc:\n                                ppiVar5 = *ppiVar11;\n                                if (ppiVar5 != NULL) {\n                                    fcn.0043a56f();\n                                    ppiVar15 = ppiVar5;\n                                }\n                                break;\n                            case 0xd:\n                            case 0xe:\n                                ppiVar5 = *ppiVar11;\n                                if (ppiVar5 != NULL) {\n                                    fcn.00401926();\n                                    ppiVar15 = ppiVar5;\n                                }\n                                break;\n                            case 0xf:\n                                ppiVar5 = *ppiVar11;\n                                if (ppiVar5 != NULL) {\n                                    fcn.0043a599();\n                                    ppiVar15 = ppiVar5;\n                                }\n                            }\n                        }\n                        ppiVar11[3] = 0x1;\n                        *ppiVar11 = NULL;\n                        fcn.004113a0(&fcn.00412b40::var_44h);\n                    }\n                }\n            }\n            piVar10 = *arg_ch;\n            if (*(arg_8h_00[1][piVar10] + 8) == 0x4e) {\n                in_stack_fffffe78 = 0x413595;\n                cVar2 = fcn.0040d2c0(5);\n                ppiVar15 = arg_ch;\n                if (cVar2 == '\\0') {\n                    *arg_ch = piVar10 + -1;\n                    ppiVar5 = arg_8h_00;\n                    fcn.0045d154(arg_8h_00);\n                    var_164h = fcn.0045ec7e(0, *ppiVar15, &fcn.00412b40::var_2ch, ppiVar5, in_stack_fffffe6c);\n                    ppiVar15 = arg_ch;\n                    iVar4 = 1;\n                    if (1 < var_2ch) {\n                        do {\n                            ppiVar5 = arg_8h_00;\n                            fcn.0045d154(arg_8h_00);\n                            var_164h = *ppiVar15;\n                            uVar14 = fcn.0045ec7e(iVar4, var_164h, 0, ppiVar5, in_stack_fffffea4);\n                            (&fcn.00412b40::var_164h)[iVar4] = uVar14;\n                            iVar4 = iVar4 + 1;\n                            ppiVar11 = stack0xfffffff4;\n                        } while (iVar4 < var_2ch);\n                    }\n                    fcn.0040346e();\n                    iVar4 = 0;\n                    if (0 < var_2ch) {\n                        do {\n                            cVar2 = fcn.00403489((&fcn.00412b40::var_164h)[iVar4]);\n                            ppiVar5 = arg_8h;\n                            if (cVar2 == '\\0') goto code_r0x00478469;\n                            iVar4 = iVar4 + 1;\n                        } while (iVar4 < var_2ch);\n                    }\n                    cVar2 = fcn.00403320(ppiVar11, 0);\n                    if (cVar2 == '\\0') {\n                        fcn.0044d520(0x82, arg_8h);\n                        puVar3 = stack0xffffffdc;\n                        goto code_r0x004132bc;\n                    }\n                    *arg_ch = *arg_ch + 1;\n                }\n                if (*(var_10h + 0x103) != '\\0') {\n                    var_48h = *arg_ch;\n                    ppiVar15 = NULL;\n                    arg_8h = NULL;\n                    if (var_48h < arg_8h_00[2]) {\n                        var_34h = arg_8h_00[1] + var_48h;\n                        do {\n                            iVar4 = *var_34h;\n                            iVar1 = *(iVar4 + 8);\n                            if ((iVar1 == 0x33) && (cVar2 = fcn.00405b2a(),  ppiVar15 = arg_8h,  cVar2 != '\\0')) {\n                                fcn.0044d520(0xb1, *(iVar4 + 10));\n                                puVar3 = stack0xffffffdc;\n                                goto code_r0x004132bc;\n                            }\n                            ppiVar11 = stack0xfffffff4;\n                            if ((iVar1 == 0x4e) || (iVar1 == 0x47)) {\n                                ppiVar15 = ppiVar15 + 1;\n                                arg_8h = ppiVar15;\n                            }\n                            else if ((iVar1 == 0x4f) || (iVar1 == 0x48)) {\n                                ppiVar15 = ppiVar15 + -1;\n                                arg_8h = ppiVar15;\n                            }\n                            else if (((iVar1 == 0x40) && (ppiVar15 == NULL)) || (iVar1 == 0x7f)) break;\n                            var_48h = var_48h + 1;\n                            var_34h = var_34h + 1;\n                        } while (var_48h < arg_8h_00[2]);\n                    }\n                }\n                if (0 < var_2ch) {\n                    puVar12 = &fcn.00412b40::var_164h;\n                    for (iVar4 = var_2ch; ppiVar11 = stack0xfffffff4,  iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar12 = 0;\n                        puVar12 = puVar12 + 1;\n                    }\n                }\n                ppiVar15 = arg_8h_00;\n                cVar2 = fcn.0040203a(arg_8h_00, arg_ch, ppiVar11, &fcn.00412b40::var_164h, 1);\n                puVar3 = stack0xffffffdc;\n                if (cVar2 == '\\0') goto code_r0x004132bc;\n            }\n            else {\n                if (ppiVar11[3] == 0x5) {\n                    uVar14 = 0x7e;\n                    ppiVar5 = ppiVar15;\n                    goto code_r0x0047846b;\n                }\n                ppuVar9 = NULL;\n                var_30h = NULL;\n                if (piVar10 < arg_8h_00[2]) {\n                    do {\n                        iVar1 = *(arg_8h_00[1][piVar10] + 2);\n                        ppiVar11 = stack0xfffffff4;\n                        if (iVar1 == 0x33) {\n                            ppiVar15 = *arg_8h_00[1][piVar10];\n                            piVar6 = ppiVar15[1];\n                            ppuVar9 = var_30h;\n                            if (piVar6 != var_1ch) goto code_r0x004130e4;\n                            var_48h = *ppiVar15;\n                            puVar3 = stack0xffffffdc;\n                            for (; piVar6 != NULL; piVar6 = piVar6 + -1) {\n                                if (*var_48h != *puVar3) goto code_r0x004130e4;\n                                var_48h = var_48h + 2;\n                                puVar3 = puVar3 + 1;\n                            }\n                            *0x4c22e4 = '\\x01';\n                        }\n                        else {\ncode_r0x004130e4:\n                            if (iVar1 == 0x4e) {\ncode_r0x00413116:\n                                var_30h = ppuVar9 + 1;\n                                ppuVar9 = var_30h;\n                            }\n                            else {\n                                if (iVar1 != 0x4f) {\n                                    if (iVar1 == 0x47) goto code_r0x00413116;\n                                    if (iVar1 != 0x48) {\n                                        if (((iVar1 != 0x40) || (ppuVar9 != NULL)) && (iVar1 != 0x7f))\n                                        goto code_r0x00413108;\n                                        break;\n                                    }\n                                }\n                                var_30h = ppuVar9 + -1;\n                                ppuVar9 = var_30h;\n                            }\n                        }\ncode_r0x00413108:\n                        piVar10 = piVar10 + 1;\n                    } while (piVar10 < arg_8h_00[2]);\n                }\n                in_stack_fffffe78 = &fcn.00412b40::var_44h;\n                in_stack_fffffe6c = 0x413177;\n                ppiVar15 = arg_8h_00;\n                iVar4 = fcn.0040fa40(arg_8h_00, arg_ch, in_stack_fffffe78, 0xffffffff);\n                if (iVar4 < 0) {\n                    fcn.0044d520(0x6e, arg_8h);\n                    puVar3 = stack0xffffffdc;\n                    goto code_r0x004132bc;\n                }\n                *0x4c22e4 = '\\0';\n                if (ppiVar11 != &fcn.00412b40::var_44h) {\n                    if ((var_38h == 4) && (ppiVar11[3] == 0x4)) {\n                        ppiVar15 = var_3ch;\n                        fcn.0040c935(var_3ch);\n                    }\n                    else {\n                        piVar10 = ppiVar11[2];\n                        if (piVar10 != NULL) {\n                            *piVar10[3] = *piVar10[3] + -1;\n                            if (*piVar10[3] == 0) {\n                                fcn.0042017e(*piVar10);\n                                fcn.0042017e(piVar10[3]);\n                            }\n                            fcn.0042017e();\n                            ppiVar11[2] = NULL;\n                            in_stack_fffffe6c = piVar10;\n                        }\n                        if (4 < ppiVar11[3]) {\n    // switch table (11 cases) at 0x478577\n                            switch(ppiVar11[3]) {\n                            case 0x5:\n                                in_stack_fffffe6c = 0x478371;\n                                fcn.0041e3cc();\n                                break;\n                            case 0x8:\n                                piVar10 = *ppiVar11;\n                                if (piVar10 != NULL) {\n                                    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                                    fcn.0042017e(*ppiVar11);\n                                    in_stack_fffffe6c = piVar10;\n                                }\n                                break;\n                            case 0xa:\n                                if (*ppiVar11 != NULL) {\n                                    fcn.0044aa9c();\n                                }\n                                break;\n                            case 0xb:\n                                fcn.0042017e((*ppiVar11)[1]);\n                                in_stack_fffffe6c = *ppiVar11;\n                                fcn.0042017e();\n                                break;\n                            case 0xc:\n                                if (*ppiVar11 != NULL) {\n                                    fcn.0043a56f();\n                                }\n                                break;\n                            case 0xd:\n                            case 0xe:\n                                if (*ppiVar11 != NULL) {\n                                    fcn.00401926();\n                                }\n                                break;\n                            case 0xf:\n                                if (*ppiVar11 != NULL) {\n                                    fcn.0043a599();\n                                }\n                            }\n                        }\n                        ppiVar15 = &fcn.00412b40::var_44h;\n                        ppiVar11[3] = 0x1;\n                        *ppiVar11 = NULL;\n                        fcn.004113a0(ppiVar15);\n                    }\n                }\n            }\n        }\n        piVar10 = arg_8h_00[1];\n        piVar6 = *arg_ch;\n        puVar3 = stack0xffffffdc;\n        if (*(piVar10[piVar6] + 8) == 0x7f) goto code_r0x004132bc;\n        if (*(piVar10[piVar6] + 8) != 0x40) {\n            fcn.0044d520(0x7f, *(piVar10[piVar6] + 10));\n            puVar3 = stack0xffffffdc;\n            goto code_r0x004132bc;\n        }\n        *arg_ch = piVar6 + 1;\n        ppiVar5 = piVar10[piVar6 + 1];\n        iVar1 = *(ppiVar5 + 2);\n    }\n    fcn.0044d520(0x7f, *(arg_8h_00[1][*arg_ch] + 10));\n    goto code_r0x004132bc;\ncode_r0x00478469:\n    uVar14 = 0x7d;\ncode_r0x0047846b:\n    fcn.0044d520(uVar14, ppiVar5);\n    puVar3 = stack0xffffffdc;\ncode_r0x004132bc:\n    piVar10 = var_50h;\n    *var_50h = *var_50h + -1;\n    if (*var_50h == 0) {\n        fcn.0042017e(puVar3);\n        fcn.0042017e(piVar10);\n    }\ncode_r0x004132d5:\n    fcn.00412570();\n    fcn.00412570();\n    return;\n}\n",
        "token_count": 10872
    },
    "00413680": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413680(uint arg_8h, int32_t arg_ch, int32_t **arg_10h, uint *arg_14h, uchar *arg_18h)\n\n{\n    int32_t **ppiVar1;\n    int16_t iVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    ushort *puVar7;\n    uint *puVar8;\n    int32_t **ppiVar9;\n    int32_t iVar10;\n    int32_t **in_ECX;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    int32_t iVar13;\n    int32_t *unaff_EBX;\n    uint uVar14;\n    int32_t *piVar15;\n    uint32_t uVar16;\n    int32_t iVar17;\n    uchar *arg_8h_00;\n    int32_t *piVar18;\n    int32_t *piVar19;\n    int32_t *piVar20;\n    int32_t *piVar21;\n    int32_t *piStack188;\n    int32_t *piStack184;\n    int32_t *piStack180;\n    int32_t *piStack176;\n    int32_t *piStack172;\n    int32_t *piStack168;\n    int32_t *piStack164;\n    int32_t *piStack160;\n    int32_t **ppiStack156;\n    int32_t **ppiStack152;\n    int32_t *piStack148;\n    int32_t *piStack144;\n    int32_t **ppiStack140;\n    int32_t *piStack136;\n    int32_t **ppiStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    int32_t iStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uint32_t uStack100;\n    uint uStack96;\n    int32_t *piStack92;\n    uint uStack88;\n    int32_t *piStack84;\n    uint uStack72;\n    uint uStack64;\n    uint uStack60;\n    uchar uStack56;\n    uint uStack52;\n    uchar uStack48;\n    uchar auStack44 [4];\n    uint uStack40;\n    uint uStack32;\n    uint uStack28;\n    uchar uStack24;\n    \n    piStack136 = in_ECX[0x3d];\n    ppiVar9 = *(*(arg_ch + 4) + *arg_10h * 4);\n    piStack164 = 0x3;\n    piStack148 = *(ppiVar9 + 10);\n    piVar12 = *ppiVar9;\n    iVar10 = *piVar12;\n    piVar11 = piVar12[1];\n    iVar5 = piVar12[2];\n    piVar12 = piVar12[3];\n    *piVar12 = *piVar12 + 1;\n    piStack172 = fcn.0040a9a0(iVar10, piVar11, iVar5, piVar12);\n    if (piStack172 == NULL) {\n        fcn.0044d520(0x85, piStack164);\n        return 0xffffffff;\n    }\n    piStack84 = in_ECX[0x53];\n    *arg_10h = *arg_10h + 1;\n    piVar20 = *arg_10h;\n    uStack120 = 0;\n    iStack112 = 0;\n    uStack108 = 1;\n    piStack136 = 0x49dc40;\n    ppiStack132 = NULL;\n    uStack128 = 0;\n    uStack124 = 0;\n    uStack100 = 0x49dc3c;\n    uStack96 = 0;\n    piStack92 = NULL;\n    uStack88 = 0;\n    piStack160 = NULL;\n    if (*(*(*(arg_ch + 4) + piVar20 * 4) + 8) == 0x47) {\n        piStack188 = piVar20;\n        iVar5 = fcn.0041bc04(arg_ch, arg_10h, &stack0xffffff3c, &stack0xffffff44);\n        if (-1 < iVar5) {\n            in_ECX[0x3d] = piStack188[4];\n            iVar5 = piStack188[4];\n            if ((*0x4c22f8 < iVar5) || (iVar5 < 1)) {\n                iVar5 = 0;\n            }\n            else {\n                iVar5 = iVar5 * 0x10 + *0x4c232c;\n            }\n            ppiVar9 = *(iVar5 + 4);\n            if ((*(*ppiVar9 + 2) == 0) && (**ppiVar9 == 0x2b)) {\n                iVar5 = 4;\n                piVar20 = 0x4;\n            }\n            else {\n                iVar5 = 3;\n            }\n            piVar19 = NULL;\n            piStack184 = NULL;\n            piVar6 = piStack188;\n            piVar18 = piVar12;\n            piVar21 = unaff_EBX;\n            if (0 < piStack188[5]) {\n                do {\n                    if (piVar12 <= piVar11) break;\n                    piStack184 = piStack184 + 1;\n                    ppiVar9 = ppiVar9 + iVar5;\n                    bVar3 = false;\n                    piVar19 = piVar19 & 0xffffff;\n                    iVar2 = *(*ppiVar9 + 2);\n                    ppiStack156 = NULL;\n                    iVar13 = iVar5;\n                    while (iVar2 == 0) {\n                        if ((*(ppiVar9[1] + 2) != 0x33) && (in_ECX = ppiStack140,  **ppiVar9 == *ppiVar9[1])) {\ncode_r0x0047a3ee:\n                            fcn.0044d520(0x91, *(*(piVar21[1] + 4 + iVar13 * 4) + 10));\n                            goto code_r0x0041402b;\n                        }\n                        if (**ppiVar9 == 0x24) {\n                            bVar3 = true;\n                            piVar19 = CONCAT13(1, piVar19);\n                        }\n                        else {\n                            if (**ppiVar9 != 0x1e) goto code_r0x0047a3ee;\n                            ppiStack156 = 0x100;\n                        }\n                        ppiVar1 = ppiVar9 + 1;\n                        ppiVar9 = ppiVar9 + 1;\n                        iVar13 = iVar13 + 1;\n                        iVar2 = *(*ppiVar1 + 2);\n                    }\n                    if (*(*(*(arg_ch + 4) + piVar11 * 4) + 8) != 0x33) {\n                        bVar3 = false;\n                        piVar19 = piVar19 & 0xffffff;\n                    }\n                    arg_8h_00 = &stack0xffffff3b;\n                    fcn.0041bc5c(arg_8h_00);\n                    if (bVar3) {\n                        iVar17 = 0;\n                        cVar4 = fcn.0040d2d2(**(*(arg_ch + 4) + piVar19 * 4), &stack0xffffff4c, &stack0xffffff5c, 0);\n                        if (cVar4 == '\\0') {\n                            in_ECX[0x3d] = piStack172;\n                            iVar10 = fcn.0041cf79(**(*(arg_ch + 4) + iVar10 * 4));\n                            iVar5 = *(*(*(arg_ch + 4) + arg_8h_00 * 4) + 10);\n                            if (iVar10 == 0) {\n                                fcn.0044d520(0x79, iVar5);\n                            }\n                            else {\n                                fcn.0044d520(0xbc, iVar5);\n                            }\n                            goto code_r0x0041402b;\n                        }\n                        if (((piStack180 & 0x100) != 0) && ((piStack176 & 0x100) == 0)) {\n                            in_ECX[0x3d] = piStack172;\n                            fcn.0044d520(0xb0, *(*(*(arg_ch + 4) + iVar10 * 4) + 10));\n                            goto code_r0x0041402b;\n                        }\n                        iVar10 = iVar10 + 1;\n                        iVar5 = iVar13 + 1;\n                        cVar4 = fcn.0040d2c0(5);\n                        if ((cVar4 == '\\0') || (*(*(*(arg_ch + 4) + arg_8h_00 * 4) + 8) != 0x4e)) {\n                            cVar4 = fcn.0040d2c0(0xf);\n                            if ((cVar4 != '\\0') && (*(*(*(arg_ch + 4) + iVar17 * 4) + 8) == 0x4e)) {\n                                iVar13 = fcn.0045f4df(arg_ch, &stack0xffffff20, &stack0xffffff34, 0, 0);\n                                goto joined_r0x0047a3bc;\n                            }\n                        }\n                        else {\n                            iVar13 = fcn.0045f211(arg_ch, &stack0xffffff24, &stack0xffffff38, 0);\njoined_r0x0047a3bc:\n                            if (iVar13 < 0) goto code_r0x0041402b;\n                        }\n                        fcn.00412570();\n                        piStack136 = 0x6;\n                        piStack148 = piVar18;\n                        fcn.0041baef(&stack0xffffff6c);\n                    }\n                    else {\n                        in_ECX[0x3d] = ppiStack156;\n                        fcn.00412570();\n                        iStack112 = 1;\n                        uStack124 = 0;\n                        fcn.0041baef(&stack0xffffff84);\n                        iVar5 = fcn.0040fa40(arg_ch, &stack0xffffff34, ppiStack140[piStack136 - 1], piVar20);\n                        if (iVar5 < 0) goto code_r0x0041402b;\n                        in_ECX[0x3d] = piVar20[4];\n                        iVar5 = iVar13 + 1;\n                        if (*(*(*(iVar10 + 4) + iVar5 * 4) + 8) == 0x41) {\n                            iVar5 = iVar13 + 2;\n                            iVar13 = 0;\n                            piVar11 = *(iVar10 + 4) + iVar5 * 4;\n                            while( true ) {\n                                while( true ) {\n                                    for (; iVar2 = *(*piVar11 + 8),  iVar2 == 0x47; piVar11 = piVar11 + 1) {\n                                        iVar13 = iVar13 + 1;\n                                        iVar5 = iVar5 + 1;\n                                    }\n                                    if (iVar2 == 0x48) break;\n                                    if (iVar2 == 0x40) {\n                                        if (iVar13 == 0) goto code_r0x00413e12;\n                                        iVar5 = iVar5 + 1;\n                                        piVar11 = piVar11 + 1;\n                                    }\n                                    else {\n                                        iVar5 = iVar5 + 1;\n                                        piVar11 = piVar11 + 1;\n                                    }\n                                }\n                                iVar13 = iVar13 + -1;\n                                if (iVar13 < 0) break;\n                                iVar5 = iVar5 + 1;\n                                piVar11 = piVar11 + 1;\n                            }\n                        }\n                    }\ncode_r0x00413e12:\n                    piVar11 = piVar20;\n                    piVar12 = piStack188;\n                    if (piVar20 == piStack188) break;\n                    if ((*(*(*(arg_ch + 4) + piVar20 * 4) + 8) != 0x40) ||\n                       (piVar11 = piVar20 + 1,  piVar11 == piStack188)) {\n                        fcn.0044d520(0x6f, *(*(*(arg_ch + 4) + piVar20 * 4) + 10));\n                        goto code_r0x0041402b;\n                    }\n                    ppiVar9 = piVar21[1];\n                    if (*(ppiVar9[iVar5] + 2) == 0x40) {\n                        iVar5 = iVar5 + 1;\n                    }\n                    piStack168 = piStack168 + 1;\n                    piVar20 = piVar11;\n                    ppiStack156 = ppiVar9;\n                } while (piStack168 < piStack172[5]);\n                unaff_EBX = piStack184;\n                piVar6 = piStack172;\n                if ((((piStack184 == 0x1) && (arg_8h != '\\0')) &&\n                    (piVar11 = piVar18,  piVar12 = piVar20,  unaff_EBX = piVar21, \n                    iVar10 = fcn.0045d21a(&stack0xffffff78, &stack0xffffff48),  piVar6 = piStack180,  piVar18 = piVar11\n                    ,  piVar20 = piVar12,  piVar21 = unaff_EBX,  iVar10 == 0)) &&\n                   (fcn.00402982(),  piVar6 = piStack180,  piVar15 = unaff_EBX,  piVar18 = piVar11,  piVar20 = piVar12, \n                   piVar21 = unaff_EBX,  0 < unaff_EBX)) {\n                    do {\n                        fcn.0041bc5c(&stack0xffffff33);\n                        piVar15 = piVar15 + -1;\n                        piVar6 = piStack180;\n                        piVar18 = piVar11;\n                        piVar20 = piVar12;\n                        piVar21 = unaff_EBX;\n                    } while (piVar15 != NULL);\n                }\n            }\n            if (((piVar6[6] <= unaff_EBX) && (unaff_EBX <= piVar6[5])) && (piVar11 == piVar12)) {\n                ppiStack152 = piVar6[4];\n                ppiStack156 = NULL;\n                if (ppiStack152 < 0) {\n                    ppiStack152 = NULL;\n                }\n                fcn.004010e8(&stack0xffffff64);\n                piVar11 = piStack160;\n                fcn.004011ca(piStack160);\n                if (0 < piVar6[5]) {\n                    piStack172 = iStack112 - piStack148;\n                    piStack180 = 0x1;\n                    piStack176 = piStack148;\ncode_r0x00413b50:\n                    in_ECX = ppiStack132;\n                    piVar12 = piStack184;\n                    iVar10 = piVar11[1];\n                    uVar16 = 0;\n                    ppiVar9 = iVar10 + piStack172 * 4;\n                    iVar2 = *(*(iVar10 + piStack172 * 4) + 8);\n                    while (iVar2 == 0) {\n                        if (**ppiVar9 == 0x24) {\ncode_r0x0047a4e2:\n                            piStack172 = piStack172 + 1;\n                            ppiVar9 = ppiVar9 + 1;\n                        }\n                        else if (**ppiVar9 == 0x1e) {\n                            uVar16 = 0x100;\n                            goto code_r0x0047a4e2;\n                        }\n                        iVar2 = *(*ppiVar9 + 2);\n                    }\n                    piStack168 = 0x1;\n                    puVar8 = iVar10 + piStack172 * 4;\n                    iVar10 = 0;\n                    piVar11 = puVar8 + 1;\ncode_r0x00413b81:\n                    for (; iVar2 = *(*piVar11 + 8),  iVar2 == 0x47; piVar11 = piVar11 + 1) {\n                        iVar10 = iVar10 + 1;\n                        piStack168 = piStack168 + 1;\n                    }\n                    if (iVar2 == 0x48) {\n                        iVar10 = iVar10 + -1;\n                        if (iVar10 < 0) goto code_r0x00413bad;\n                    }\n                    else if ((iVar2 == 0x40) && (iVar10 == 0)) goto code_r0x00413bad;\n                    piStack168 = piStack168 + 1;\n                    piVar11 = piVar11 + 1;\n                    goto code_r0x00413b81;\n                }\ncode_r0x00413865:\n                in_ECX[0x53] = piStack176;\n                uStack72 = 0;\n                iVar10 = (*in_ECX)[1];\n                uStack64 = 0;\n                uStack60 = 1;\n                uStack56 = 0;\n                uStack52 = 0;\n                uStack48 = 0;\n                uStack40 = 0;\n                uStack32 = 0;\n                uStack28 = 1;\n                uStack24 = 0;\n                if (*(in_ECX + iVar10 + 0xd) == '\\0') {\n                    iVar5 = fcn.0042010a(0x40);\n                    if (iVar5 == 0) {\n                        iVar5 = 0;\n                    }\n                    else {\n                        *(iVar5 + 8) = 0;\n                        fcn.004113a0(&stack0xffffffb8);\n                        *(iVar5 + 0x10) = 0;\n                        *(iVar5 + 0x14) = 0;\n                        *(iVar5 + 0x18) = 0;\n                        *(iVar5 + 0x28) = 0;\n                        fcn.004113a0(&stack0xffffffd4);\n                        *(iVar5 + 0x30) = 0;\n                    }\n                    *(iVar5 + 0x38) = *(in_ECX + iVar10 + 8);\n                    *(in_ECX + iVar10 + 8) = iVar5;\n                }\n                else {\n                    fcn.0044d231(&stack0xffffffb8);\n                    *(in_ECX + iVar10 + 0xd) = 0;\n                }\n                piVar11 = in_ECX + iVar10 + 4;\n                *piVar11 = *piVar11 + 1;\n                piStack164 = in_ECX[0x58];\n                piVar12 = in_ECX[0x3d];\n                ppiVar9 = in_ECX + 0x58;\n                fcn.0040e1f0(0x41396b);\n                piVar20 = piStack168;\n                piVar11 = *ppiVar9;\n                while (piVar20 < piVar11) {\n                    fcn.0040d9f2();\n                    in_ECX = ppiStack140;\n                    piVar11 = *ppiVar9;\n                }\n                in_ECX[0x3d] = piVar12;\n                iVar10 = (*in_ECX)[1];\n                iVar5 = *(iVar10 + 8 + in_ECX);\n                if (*(in_ECX + iVar10 + 0xd) != '\\0') {\n                    iVar5 = *(iVar5 + 0x38);\n                }\n                if (*(iVar5 + 0x10) == '\\0') {\n                    *arg_18h = 0;\n                    fcn.00412570();\n                    arg_14h[3] = 1;\n                    *arg_14h = 0;\n                }\n                else {\n                    cVar4 = *(in_ECX + iVar10 + 0xd);\n                    *arg_18h = 1;\n                    if (cVar4 == '\\0') {\n                        puVar8 = *(in_ECX + iVar10 + 8);\n                    }\n                    else {\n                        puVar8 = *(*(in_ECX + iVar10 + 8) + 0x38);\n                    }\n                    if (arg_14h != puVar8) {\n                        if ((arg_14h[3] == 4) && (puVar8[3] == 4)) {\n                            fcn.0040c935(puVar8[2]);\n                        }\n                        else {\n                            fcn.00412570();\n                            fcn.004113a0(puVar8);\n                        }\n                    }\n                }\n                iVar10 = (*in_ECX)[1];\n                iVar5 = *(iVar10 + 8 + in_ECX);\n                if (*(in_ECX + iVar10 + 0xd) != '\\0') {\n                    iVar5 = *(iVar5 + 0x38);\n                }\n                if (*(iVar5 + 0x18) != '\\0') {\n                    iVar5 = fcn.00407be1();\n                    uStack64 = *(iVar5 + 0x14);\n                }\n                iVar5 = *(in_ECX + iVar10 + 8);\n                if (*(in_ECX + iVar10 + 0xd) != '\\0') {\n                    iVar5 = *(iVar5 + 0x38);\n                }\n                if (*(iVar5 + 0x30) != '\\0') {\n                    iVar10 = fcn.00407be1();\n                    fcn.0040d89e(iVar10 + 0x20);\n                }\n                iVar10 = (*in_ECX)[1];\n                if (*(in_ECX + iVar10 + 0xd) != '\\0') {\n                    iVar5 = *(in_ECX + iVar10 + 8);\n                    uVar14 = *(iVar5 + 0x38);\n                    if (iVar5 != 0) {\n                        fcn.00402db5();\n                    }\n                    *(in_ECX + iVar10 + 8) = uVar14;\n                    *(in_ECX + iVar10 + 0xd) = 0;\n                }\n                if (*(in_ECX + iVar10 + 0xc) == '\\0') {\n                    iVar5 = *(in_ECX + iVar10 + 8);\n                    ppiStack152 = *(iVar5 + 0x38);\n                    if (iVar5 != 0) {\n                        fcn.00412570();\n                        fcn.00412570();\n                        fcn.0042017e();\n                    }\n                    *(in_ECX + iVar10 + 8) = ppiStack152;\n                    *(in_ECX + iVar10 + 0xd) = 0;\n                }\n                else {\n                    *(in_ECX + iVar10 + 0xd) = 1;\n                }\n                piVar11 = in_ECX + iVar10 + 4;\n                *piVar11 = *piVar11 + -1;\n                iVar10 = (*in_ECX)[1];\n                iVar5 = *(iVar10 + 8 + in_ECX);\n                if (*(in_ECX + iVar10 + 0xd) != '\\0') {\n                    iVar5 = *(iVar5 + 0x38);\n                }\n                *(iVar5 + 0x14) = uStack64;\n                iVar5 = *(in_ECX + iVar10 + 8);\n                if (*(in_ECX + iVar10 + 0xd) != '\\0') {\n                    iVar5 = *(iVar5 + 0x38);\n                }\n                *(iVar5 + 0x18) = 0;\n                iVar10 = (*in_ECX)[1];\n                fcn.0040d89e(&stack0xffffffcc);\n                iVar5 = *(in_ECX + iVar10 + 8);\n                if (*(in_ECX + iVar10 + 0xd) != '\\0') {\n                    iVar5 = *(iVar5 + 0x38);\n                }\n                *(iVar5 + 0x30) = 0;\n                fcn.00401188();\n                in_ECX[0x53] = piStack92;\n                uVar14 = 0;\n                fcn.00412570();\n                fcn.00412570();\n                goto code_r0x00413aea;\n            }\n            in_ECX[0x3d] = piStack160;\n            if (arg_8h == '\\0') {\n                fcn.0044d520(0x70, piStack172);\n            }\n            else {\n                *arg_10h = *arg_10h + -2;\n            }\n        }\n    }\n    else {\n        fcn.0044d520(0x6f, piStack164);\n    }\ncode_r0x0041402b:\n    uVar14 = 0xffffffff;\ncode_r0x00413aea:\n    fcn.00412570();\n    uVar16 = 0;\n    if (uStack100 != 0) {\n        do {\n            puVar8 = iStack104 + uVar16 * 4;\n            fcn.0042017e(*(iStack104 + uVar16 * 4));\n            uVar16 = uVar16 + 1;\n            *puVar8 = 0;\n        } while (uVar16 < uStack100);\n    }\n    fcn.0042017e(iStack104);\n    uVar16 = 0;\n    ppiVar9 = ppiStack140;\n    if (piStack136 == NULL) {\n        fcn.0042017e(ppiStack140);\n        return uVar14;\n    }\n    do {\n        piVar11 = ppiVar9[uVar16];\n        if (piVar11 != NULL) {\n            fcn.00414430();\n            fcn.0042017e(piVar11);\n            ppiVar9 = ppiStack140;\n        }\n        ppiVar9[uVar16] = NULL;\n        uVar16 = uVar16 + 1;\n    } while (uVar16 < piStack136);\n    fcn.0042017e(ppiVar9);\n    return uVar14;\ncode_r0x00413bad:\n    if (piStack176 < ppiStack156) {\n        ppiStack140 = piStack172 + 2;\n        ppiStack132[0x3e] = piStack144;\n        iVar10 = fcn.0040fa40(piStack184, &stack0xffffff74, &stack0xffffff90, piStack168 + piStack172);\n        in_ECX[0x3e] = NULL;\n        if (iVar10 < 0) goto code_r0x0041402b;\n        fcn.0040d380(**(piVar12[1] + piStack188 * 4), &stack0xffffff80, uVar16 | 0x200, 1);\n    }\n    else if (**(piStack148 + ppiStack152) == '\\0') {\n        piStack160 = *ppiStack152;\n        piVar11 = **puVar8;\n        if (*0x4c22d8 == 0) {\n            piVar12 = piVar20;\n            fcn.0040d772(piVar11, piStack160, uVar16 | 0x200);\n            piVar20 = piVar12;\n        }\n        else {\n            piStack180 = *0x4c22dc;\n            if (*0x4c22e1 != '\\0') {\n                piStack180 = (*0x4c22dc)[2];\n            }\n            cVar4 = fcn.0040d500(piVar11, piStack180);\n            if ((cVar4 == '\\0') || (*piStack188 == 0)) {\n                piStack148 = uVar16 | 0x200;\n                piVar6 = fcn.0042010a(0x20);\n                if (piVar6 == NULL) {\n                    piVar6 = NULL;\n                    piVar12 = piVar18;\n                    piVar18 = piVar21;\n                }\n                else {\n                    piVar6[1] = 0;\n                    piVar6[2] = 8;\n                    puVar7 = fcn.0042010a(0x10);\n                    *piVar6 = puVar7;\n                    *puVar7 = 0;\n                    puVar8 = fcn.0042010a(4);\n                    if (puVar8 == NULL) {\n                        puVar8 = NULL;\n                    }\n                    else {\n                        *puVar8 = 1;\n                    }\n                    piVar6[3] = puVar8;\n                    piVar12 = piVar18;\n                    piVar18 = piVar21;\n                }\n                if (piVar6 != piVar11) {\n                    iVar10 = *piVar6[3];\n                    if (iVar10 < 2) {\n                        iVar10 = piVar11[1];\n                        piVar6[1] = iVar10;\n                        if (piVar6[2] < iVar10 + 1U) {\n                            iVar5 = fcn.0040c91c(iVar10 + 1U);\n                            piVar6[2] = iVar5;\n                            if (*piVar6 != 0) {\n                                fcn.0042017e();\n                            }\n                            iVar5 = fcn.0042010a(-(piVar6[2] * 2 >> 0x20 != 0) | piVar6[2] * 2);\n                            *piVar6 = iVar5;\n                            *(iVar5 + iVar10 * 2) = 0;\n                        }\n                        fcn.0041faa0(*piVar6, *piVar11);\n                    }\n                    else {\n                        *piVar6[3] = iVar10 + -1;\n                        piVar6[1] = piVar11[1];\n                        piVar6[2] = piVar11[2];\n                        *piVar6 = *piVar11;\n                        piVar11 = piVar11[3];\n                        piVar6[3] = piVar11;\n                        *piVar11 = *piVar11 + 1;\n                    }\n                }\n                piVar6[4] = ppiStack152;\n                iVar10 = fcn.0042010a(0x10);\n                if (iVar10 == 0) {\n                    iVar10 = 0;\n                }\n                else {\n                    *(iVar10 + 8) = 0;\n                    fcn.004113a0(piStack172);\n                }\n                piVar6[5] = iVar10;\n                piVar6[7] = 0;\n                piVar6[6] = 0;\n                piVar21 = piVar18;\n                iVar10 = fcn.0040d420(piVar6, *piVar18);\n                *piVar18 = iVar10;\n                in_ECX = ppiStack152;\n                piVar18 = piVar12;\n            }\n            else {\n                piVar12 = piVar20;\n                fcn.0040d89e(piStack168);\n                piVar20 = piVar12;\n            }\n        }\n    }\n    else {\n        if ((*ppiStack152)[3] == 6) {\n            iVar10 = **ppiStack152;\n        }\n        else {\n            iVar10 = 0;\n        }\n        piVar12 = piVar19;\n        cVar4 = fcn.004489e0(**puVar8, iVar10, uVar16 | 0x200, 1);\n        piVar19 = piVar12;\n        if (cVar4 == '\\0') {\n            fcn.0044d520(0x79, *(*(piVar12[1] + piStack188 * 4) + 10));\n            goto code_r0x0041402b;\n        }\n    }\n    ppiStack152 = ppiStack152 + 1;\n    piStack172 = piStack172 + piStack168 + 1;\n    ppiStack156 = ppiStack156 + 1;\n    piVar11 = piVar12;\n    if (piStack164[5] < ppiStack156) goto code_r0x00413865;\n    goto code_r0x00413b50;\n}\n",
        "token_count": 6975
    },
    "00414040": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.00414040(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t *arg_14h, int32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    uint32_t arg_14h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *arg_ch_00;\n    uint32_t uVar5;\n    uint *var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    *arg_14h = *arg_14h + 1;\n    uVar5 = *arg_14h;\n    iVar2 = *(arg_10h + 4);\n    if (*(*(iVar2 + uVar5 * 4) + 8) == 0x47) {\n        uVar5 = uVar5 + 1;\n        *arg_14h = uVar5;\n        iVar4 = 0;\ncode_r0x00414074:\n        while( true ) {\n            arg_14h_00 = *arg_14h;\n            iVar1 = *(*(iVar2 + arg_14h_00 * 4) + 8);\n            if (0x46 < iVar1) break;\ncode_r0x00414097:\n            *arg_14h = arg_14h_00 + 1;\n        }\n        if (iVar1 == 0x47) {\n            iVar4 = iVar4 + 1;\n            *arg_14h = arg_14h_00 + 1;\n            goto code_r0x00414074;\n        }\n        if (iVar1 != 0x48) {\n            if (iVar1 == 0x7f) {\n                arg_14h = uVar5;\n                fcn.0044d520(0x6f, *(*(iVar2 + -4 + arg_14h_00 * 4) + 10));\n                return 0xffffffff;\n            }\n            goto code_r0x00414097;\n        }\n        if (iVar4 != 0) {\n            iVar4 = iVar4 + -1;\n            *arg_14h = arg_14h_00 + 1;\n            goto code_r0x00414074;\n        }\n        *arg_14h = arg_14h_00 + 1;\n        *arg_18h = 0;\n        arg_14h = uVar5;\n        arg_ch_00 = arg_18h;\n        while (arg_14h < arg_14h_00) {\n            var_1ch = NULL;\n            var_14h = 0;\n            var_10h = 1;\n            if (*(arg_ch + 8) == *(arg_ch + 0xc)) {\n                uVar5 = *(arg_ch + 0xc) * 2;\n                if (uVar5 < 8) {\n                    uVar5 = 8;\n                }\n                *(arg_ch + 0xc) = uVar5;\n                uVar3 = fcn.0042010a(-(uVar5 * 4 >> 0x20 != 0) | uVar5 * 4);\n                if ((*(arg_ch + 4) != 0) && (*(arg_ch + 8) != 0)) {\n                    fcn.0041faa0(uVar3, *(arg_ch + 4), *(arg_ch + 8) << 2);\n                    fcn.0042017e(*(arg_ch + 4));\n                }\n                *(arg_ch + 4) = uVar3;\n            }\n            iVar2 = fcn.0042010a(0x10);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                var_1ch = &var_1ch;\n                *(iVar2 + 8) = 0;\n                fcn.004113a0(var_1ch);\n            }\n            *(*(arg_ch + 4) + *(arg_ch + 8) * 4) = iVar2;\n            *(arg_ch + 8) = *(arg_ch + 8) + 1;\n            iVar2 = fcn.0040fa40(arg_10h, &arg_14h, *(*(arg_ch + 4) + -4 + *(arg_ch + 8) * 4), arg_14h_00);\n            arg_ch_00 = arg_18h;\n            if (iVar2 < 0) {\ncode_r0x004778ed:\n                fcn.00412570();\n                return 0xffffffff;\n            }\n            *arg_18h = *arg_18h + 1;\n            if (arg_14h == arg_14h_00) {\n                fcn.00412570();\n                break;\n            }\n            if ((*(*(*(arg_10h + 4) + arg_14h * 4) + 8) != 0x40) || (arg_14h + 1U == arg_14h_00)) {\n                fcn.0044d520(0x6f, *(*(*(arg_10h + 4) + arg_14h * 4) + 10));\n                goto code_r0x004778ed;\n            }\n            arg_14h = arg_14h + 1U;\n            fcn.00412570();\n        }\n        if (arg_8h != '\\0') {\n            fcn.0045d21a(arg_ch, arg_ch_00);\n            return 0;\n        }\n        uVar3 = 0;\n    }\n    else {\n        fcn.0044d520(0x6f, *(*(iVar2 + uVar5 * 4 + -4) + 10));\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 1303
    },
    "00414430": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414430(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = param_1[2];\n    if (puVar1 != NULL) {\n        *puVar1[3] = *puVar1[3] + -1;\n        if (*puVar1[3] == 0) {\n            fcn.0042017e(*puVar1);\n            fcn.0042017e(puVar1[3]);\n        }\n        fcn.0042017e(puVar1);\n        param_1[2] = 0;\n    }\n    if (4 < param_1[3]) {\n    // switch table (11 cases) at 0x4144a8\n        switch(param_1[3]) {\n        case 5:\n            fcn.0041e3cc();\n            param_1[3] = 1;\n            *param_1 = 0;\n            return;\n        case 8:\n            if (*param_1 != 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*param_1);\n                fcn.0042017e(*param_1);\n            }\n            break;\n        case 10:\n            if (*param_1 != 0) {\n                fcn.0044aa9c(*param_1);\n            }\n            break;\n        case 0xb:\n            fcn.0042017e(*(*param_1 + 4));\n            fcn.0042017e(*param_1);\n            break;\n        case 0xc:\n            if (*param_1 != 0) {\n                fcn.0043a56f(*param_1);\n            }\n            break;\n        case 0xd:\n        case 0xe:\n            if (*param_1 != 0) {\n                fcn.00401926(*param_1);\n            }\n            break;\n        case 0xf:\n            if (*param_1 != 0) {\n                fcn.0043a599(*param_1);\n            }\n        }\n    }\n    param_1[3] = 1;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 476
    },
    "004144e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004144e0(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint unaff_EBX;\n    uint uVar5;\n    uint32_t uVar6;\n    uint uStack52;\n    int32_t iStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack40 = 0x49dc40;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = 0;\n    piVar1 = *(*(arg_ch + 4) + *arg_10h * 4);\n    iVar3 = *piVar1;\n    uStack44 = *(piVar1 + 10);\n    iStack48 = iVar3;\n    if ((*0x4c23f4 & 1) == 0) {\n        *0x4c23f4 = *0x4c23f4 | 1;\n        fcn.0040caee(L\"CALL\");\n        *0x4c23f8 = (**(**0x4c22ec + 4))();\n        fcn.00405cd3();\n    }\n    if (iVar3 == *0x4c23f8) {\n        uVar5 = fcn.0045e713(arg_ch, arg_10h, arg_14h);\n        goto code_r0x00414643;\n    }\n    iVar2 = fcn.00414040(arg_8h, &uStack40, arg_ch, arg_10h, &uStack52);\n    if (-1 < iVar2) {\n        iVar2 = fcn.00414700(iVar3);\n        if (*(iVar2 + 0x18) <= arg_ch) {\n            iVar2 = arg_ch;\n            iVar3 = fcn.00414700(iVar3);\n            if (arg_ch <= *(iVar3 + 0x1c)) {\n                fcn.00412570();\n                arg_14h[3] = 1;\n                *arg_14h = 1;\n                iVar3 = *(*in_ECX + 4);\n                iVar4 = *(iVar3 + 8 + in_ECX);\n                if (*(in_ECX + iVar3 + 0xd) != '\\0') {\n                    iVar4 = *(iVar4 + 0x38);\n                }\n                *(iVar4 + 0x14) = 0;\n                iVar4 = *(in_ECX + iVar3 + 8);\n                if (*(in_ECX + iVar3 + 0xd) != '\\0') {\n                    iVar4 = *(iVar4 + 0x38);\n                }\n                *(iVar4 + 0x18) = 0;\n                iVar3 = *(*in_ECX + 4);\n                if (*(in_ECX + iVar3 + 0xd) == '\\0') {\n                    iVar4 = *(in_ECX + iVar3 + 8);\n                }\n                else {\n                    iVar4 = *(*(in_ECX + iVar3 + 8) + 0x38);\n                }\n                fcn.00412570();\n                *(iVar4 + 0x2c) = 1;\n                *(iVar4 + 0x20) = 0;\n                iVar4 = *(in_ECX + iVar3 + 8);\n                if (*(in_ECX + iVar3 + 0xd) != '\\0') {\n                    iVar4 = *(iVar4 + 0x38);\n                }\n                *(iVar4 + 0x30) = 0;\n                iVar3 = fcn.00414700(iVar2);\n                iVar3 = (**(iVar3 + 0xc))(&stack0xffffffb8, arg_14h);\n                if (-1 < iVar3) {\n                    uVar5 = 0;\n                    goto code_r0x00414643;\n                }\n                goto code_r0x004146f0;\n            }\n        }\n        if (arg_8h == '\\0') {\n            fcn.0044d520(0x70, unaff_EBX);\n        }\n        else {\n            *arg_10h = *arg_10h + -2;\n        }\n    }\ncode_r0x004146f0:\n    uVar5 = 0xffffffff;\ncode_r0x00414643:\n    uVar6 = 0;\n    uStack52 = 0x49dc40;\n    if (uStack44 != 0) {\n        do {\n            iVar3 = *(iStack48 + uVar6 * 4);\n            if (iVar3 != 0) {\n                fcn.00414430();\n                fcn.0042017e(iVar3);\n            }\n            *(iStack48 + uVar6 * 4) = 0;\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uStack44);\n    }\n    uStack44 = 0;\n    fcn.0042017e(iStack48);\n    return uVar5;\n}\n",
        "token_count": 1145
    },
    "0041a599": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t __cdecl\nfcn.0041a599(int32_t hWnd, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint8_t uVar6;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    if (arg_18h != 0) {\n        *0x4c187c = fcn.0041af7d(arg_18h);\n    }\n    if (*0x4c187c == -1) {\n        uVar6 = 0;\n    }\n    else {\n        if (hWnd != 0) {\n            fcn.00407e53(hWnd);\n        }\n        puVar1 = **(*0x4c1870 + *0x4c187c * 4);\n        uVar2 = *puVar1;\n        uVar6 = 1;\n        if (arg_10h != 0) {\n            arg_18h = (*_sym.imp.USER32.dll_LoadImageW)(0, arg_10h, 1, 0x10, 0x10, 0x10);\n            if (arg_18h == 0) {\n                uVar5 = fcn.00447b84();\n                (*_sym.imp.SHELL32.dll_ExtractIconExW)(arg_10h, uVar5, 0, &arg_18h, 1);\n            }\n            var_4h = (*_sym.imp.USER32.dll_LoadImageW)(0, arg_10h, 1, 0, 0, 0x50);\n            if (var_4h == 0) {\n                uVar5 = fcn.00447b84(&var_4h, 0, 1);\n                (*_sym.imp.SHELL32.dll_ExtractIconExW)(arg_10h, uVar5);\n            }\n            pcVar4 = _sym.imp.USER32.dll_DestroyIcon;\n            pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n            if (arg_18h != 0) {\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x80, 0, arg_18h);\n                if (puVar1[8] != 0) {\n                    (*pcVar4)(puVar1[8]);\n                }\n                puVar1[8] = arg_18h;\n            }\n            if (var_4h != 0) {\n                (*pcVar3)(uVar2, 0x80, 1, var_4h);\n                if (puVar1[9] != 0) {\n                    (*pcVar4)(puVar1[9]);\n                }\n                puVar1[9] = var_4h;\n            }\n            uVar6 = 1;\n            if (arg_18h == 0) {\n                uVar6 = -(var_4h != 0) & 1;\n            }\n        }\n        if (arg_ch != -1) {\n            fcn.0041a63d();\n            if (-1 < puVar1[0x13]) {\n                fcn.0046cf4e(puVar1[0x13]);\n            }\n            puVar1[0x13] = arg_ch;\n            fcn.0041b650(arg_ch, 1);\n        }\n        if (arg_1ch != -1) {\n            puVar1[0x14] = arg_1ch;\n        }\n        if (arg_20h != -1) {\n            puVar1[0x15] = arg_20h;\n        }\n        if (*(puVar1 + 0xe) != '\\0') {\n            (*_sym.imp.USER32.dll_InvalidateRect)(uVar2, 0, 1);\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 909
    },
    "0041a756": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0041a756(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t dwExStyle, \n            uint32_t arg_20h, int32_t hWnd)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lpRect;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = fcn.0042010a(0x1d0);\n    if (iVar1 == 0) {\n        var_4h = NULL;\n    }\n    else {\n        var_4h = fcn.0041a9d6();\n    }\n    iVar1 = *0x4c1874;\n    var_8h = *0x4c1874;\n    if (*0x4c1830 == *0x4c1874) {\n        fcn.0040197e(&var_4h);\n        iVar5 = iVar1;\n    }\n    else {\n        iVar5 = 0;\n        if (0 < *0x4c1874) {\n            do {\n                if (**(*0x4c1870 + iVar5 * 4) == 0) break;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < *0x4c1874);\n        }\n    }\n    arg_8h_00 = var_4h;\n    **(*0x4c1870 + iVar5 * 4) = var_4h;\n    *(**(*0x4c1870 + iVar5 * 4) + 4) = iVar5;\n    if (dwExStyle == 0xffffffff) {\n        dwExStyle = 0x80ca0000;\n    }\n    uVar4 = dwExStyle | 0x4000000;\n    if ((dwExStyle & 0x10000) != 0) {\n        uVar4 = dwExStyle | 0x4080000;\n    }\n    if ((uVar4 & 0x40000) != 0) {\n        uVar4 = uVar4 | 0x80000;\n    }\n    dwExStyle = -(arg_20h != 0xffffffff) & arg_20h;\n    if ((dwExStyle & 0x40) == 0) {\n        arg_20h = arg_10h;\n    }\n    else {\n        if (hWnd == 0) goto code_r0x0047e8c9;\n        dwExStyle = dwExStyle ^ 0x40;\n        var_4h[3] = 0x40;\n        iVar1 = fcn.0041af7d(hWnd);\n        if (-1 < iVar1) {\n            *(**(*0x4c1870 + iVar1 * 4) + 0xc) = 0x80000000;\n        }\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        (*_sym.imp.USER32.dll_GetClientRect)(hWnd, &var_28h);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n        arg_ch = arg_ch + ((var_10h - var_20h) - iVar1);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(8);\n        arg_20h = arg_10h + ((var_ch - var_1ch) - iVar1);\n        if ((uVar4 & 0xc00000) == 0xc00000) {\n            iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n            arg_20h = arg_20h + iVar1;\n        }\n    }\n    if (arg_14h == -1) {\n        arg_14h = 400;\n    }\n    if (arg_18h == -1) {\n        arg_18h = 400;\n    }\n    if (arg_ch == -1) {\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &lpRect, 0);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n        arg_ch = (((lpRect - arg_14h) + var_10h) - iVar1) / 2;\n    }\n    if (arg_20h == -1) {\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &lpRect, 0);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(8);\n        arg_20h = (((var_14h - arg_18h) + var_ch) - iVar1) / 2;\n        if ((uVar4 & 0x400000) != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n            arg_20h = arg_20h + iVar1 / -2;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, 0, arg_14h, arg_18h);\n    (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&lpRect, uVar4, 0, dwExStyle);\n    iVar2 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                      (dwExStyle, L\"AutoIt v3 GUI\", arg_8h, uVar4, arg_ch, arg_20h, var_10h - lpRect, var_ch - var_14h, \n                       hWnd, 0, *0x4c1864, 0);\n    *arg_8h_00 = iVar2;\n    iVar1 = var_8h;\n    if (iVar2 != 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongW)(iVar2, 0xffffffeb, iVar5);\n        arg_8h_00[2] = hWnd;\n        arg_8h_00[0xf] = arg_ch;\n        arg_8h_00[0x10] = arg_20h;\n        (*_sym.imp.USER32.dll_GetClientRect)(*arg_8h_00, &lpRect);\n        arg_8h_00[0x11] = var_10h - lpRect;\n        arg_8h_00[0x12] = var_ch - var_14h;\n        uVar3 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11, 0);\n        (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h_00, 0x30, uVar3);\n        fcn.0041b736(arg_8h_00, 0xffffffff);\n        if (*0x4c1834 == 0) {\n            *0x4c1834 = (*_sym.imp.USER32.dll_SetTimer)(0, 0, 0x28, 0x41acee);\n        }\n        *0x4c1830 = *0x4c1830 + 1;\n        *0x4c187c = iVar5;\n        fcn.0041aaff(0);\n        if ((uVar4 & 0x10000000) != 0) {\n            if ((arg_14h == 0) || (arg_18h == 0)) {\n                fcn.0046d80a(*arg_8h_00);\n                return 0;\n            }\n            fcn.0041f6b5(4, 0);\n        }\n        return *arg_8h_00;\n    }\ncode_r0x0047e8c9:\n    if (iVar5 == iVar1) {\n        fcn.004041e7();\n    }\n    else {\n        **(*0x4c1870 + iVar5 * 4) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 1808
    },
    "0041aaff": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aaff(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h != 0) {\n        uVar1 = fcn.0041af7d(arg_8h);\n        *(in_ECX + 0x6c) = uVar1;\n    }\n    *(**(*(in_ECX + 0x60) + *(in_ECX + 0x6c) * 4) + 0x68) = 0;\n    return;\n}\n",
        "token_count": 127
    },
    "0041acd1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041acd1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    code *pcVar3;\n    \n    if ((arg_8h != -1) && (arg_ch != -1)) {\n        puVar1 = **(*0x4c1870 + arg_8h * 4);\n        arg_8h_00 = **(*0x4c1884 + arg_ch * 4);\n        if (puVar1[0x73] != 0) {\n            fcn.0043f2f2(arg_8h_00);\n        }\n        if (**(*0x4c1884 + arg_ch * 4) == 0) {\n            puVar1[7] = 0xffffffff;\n        }\n        else {\n            uVar2 = *arg_8h_00;\n            puVar1[7] = arg_ch;\n            pcVar3 = _sym.imp.USER32.dll_PostMessageW;\n            (*_sym.imp.USER32.dll_PostMessageW)(*puVar1, 0x28, uVar2, 1);\n            if (*(arg_8h_00 + 0x24) == '\\x02') {\n                (*pcVar3)(uVar2, 0xb1, puVar1[0x6f], puVar1[0x70]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "0041b039": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b039(int32_t arg_8h, uint hdc, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    uint uVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint lpRect;\n    uint nYPos;\n    int32_t var_4h;\n    \n    iVar2 = **(*0x4c1870 + arg_8h * 4);\n    var_4h = iVar2;\n    iVar5 = fcn.0041b155(arg_10h);\n    bVar8 = false;\n    arg_8h_00 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n    iVar4 = var_4h;\n    if (*(iVar2 + 0x4c) != -1) {\n        arg_8h_00 = *(iVar2 + 0x4c);\n    }\n    if (iVar5 == -1) goto code_r0x0047ed7c;\n    puVar3 = **(*0x4c1884 + iVar5 * 4);\n    iVar2 = puVar3[0x12];\n    if ((-1 < iVar2) && (iVar5 = iVar2,  *(puVar3 + 0x24) != '\\x1b')) goto code_r0x0041b0b0;\n    iVar5 = arg_8h_00;\n    // switch table (28 cases) at 0x41b11d\n    switch(*(puVar3 + 0x24)) {\n    case 0:\n    case 2:\n    case 3:\n        uVar7 = (*_sym.imp.USER32.dll_GetWindowLongW)(*puVar3, 0xfffffff0);\n        uVar7 = uVar7 & 0x8000800;\njoined_r0x0047ec8c:\n        if (uVar7 != 0) goto code_r0x0041b106;\n        uVar6 = 0xf;\n        goto code_r0x0047ec94;\n    case 1:\n    case 0x10:\n    case 0x13:\ncode_r0x0041b106:\n        uVar6 = 5;\ncode_r0x0047ec94:\n        iVar5 = (*_sym.imp.USER32.dll_GetSysColor)(uVar6);\n        break;\n    default:\n        bVar8 = iVar2 == -2;\n        break;\n    case 6:\n    case 0x1b:\n        bVar8 = true;\n        break;\n    case 7:\n        if (*(puVar3 + 0x93) != -1) {\n            (*_sym.imp.USER32.dll_GetClientRect)(*(var_4h + 0x188), &lpRect);\n            (*_sym.imp.USER32.dll_SendMessageW)(*(iVar4 + 0x188), 0x1328, 0, &lpRect);\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowDC)(*(iVar4 + 0x188));\n            iVar5 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, lpRect, nYPos);\n            (*_sym.imp.USER32.dll_ReleaseDC)(*(var_4h + 0x188), uVar6);\n            uVar7 = *0x4c10ec;\n            if (iVar5 == -1) goto joined_r0x0047ec8c;\n            break;\n        }\n        goto code_r0x0041b0bd;\n    case 8:\n    case 10:\n    case 0xb:\n    case 0x12:\n    case 0x18:\n        break;\n    }\ncode_r0x0041b0b0:\n    arg_8h_00 = iVar5;\n    if ((*(puVar3 + 0x93) != -1) && (puVar3[0x12] == -1)) {\n        cVar1 = *(puVar3 + 0x24);\n        if (cVar1 == '\\x17') {\ncode_r0x0047ed73:\n            bVar8 = true;\n        }\n        else if ((((cVar1 != '\\a') && (cVar1 != '\\x01')) && (cVar1 != '\\x02')) && ((cVar1 != '\\x03' && (cVar1 != '\\0')))\n                ) {\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowDC)(*puVar3);\n            arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, 0, 0);\n            if ((arg_8h_00 == -1) &&\n               ((arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, *(puVar3 + 0x23) + -1, 0),  arg_8h_00 == -1 &&\n                (arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, 0, *(puVar3 + 0x8e) + -1),  arg_8h_00 == -1)))) {\n                arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, *(puVar3 + 0x23) + -1, *(puVar3 + 0x8e) + -1);\n            }\n            (*_sym.imp.USER32.dll_ReleaseDC)(*puVar3, uVar6);\n            if (arg_8h_00 == -1) goto code_r0x0047ed73;\n        }\n    }\ncode_r0x0041b0bd:\n    if (puVar3[0x13] == -1) {\n        uVar6 = (*_sym.imp.USER32.dll_GetSysColor)(8);\n    }\n    else {\n        uVar6 = puVar3[0x13];\n    }\n    (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar6);\n    if (bVar8) {\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, 1);\n        (*_sym.imp.GDI32.dll_GetStockObject)(5);\n    }\n    else {\ncode_r0x0047ed7c:\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, arg_8h_00);\n        fcn.0041b650(arg_8h_00, 0);\n    }\n    return;\n}\n",
        "token_count": 1444
    },
    "0041b40f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041b40f(int32_t *nBottomRect, int32_t *eSweepAngle)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint hdc;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint nTopRect;\n    int32_t var_14h;\n    int32_t crColor;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    hdc = nBottomRect;\n    iVar9 = -2;\n    var_1h._0_1_ = 0;\n    crColor = 0;\n    var_8h = -2;\n    var_14h = 1;\n    iVar8 = eSweepAngle;\n    do {\n        if (iVar8 == 0) {\n            uVar5 = fcn.0041b517(hdc, iVar9);\n            return uVar5 & 0xffffff00 | var_1h;\n        }\n        var_ch = 0;\n        fcn.0041b58b(hdc, crColor, iVar9, 0, var_14h);\n        if (0 < *(iVar8 + 0xc)) {\n            nBottomRect = iVar8 + 0x14;\n            eSweepAngle = iVar8 + 0x10;\n            do {\n                iVar9 = *eSweepAngle;\n                uVar3 = *(iVar8 + 0x810 + var_ch);\n                iVar7 = *nBottomRect;\n                if (uVar3 < 0x11) {\n                    if (uVar3 == 0x10) {\n                        iVar6 = var_14h + 1 + iVar7;\n                        iVar4 = var_14h + 1;\n                        iVar7 = iVar7 - var_14h;\n                        iVar10 = iVar9 - var_14h;\ncode_r0x0047f1fa:\n                        (*_sym.imp.GDI32.dll_Rectangle)(hdc, iVar10, iVar7, iVar4 + iVar9, iVar6);\n                    }\n                    else if (uVar3 == 8) {\n                        if (crColor != -1) {\n                            fcn.0041b517(hdc, var_8h);\n                        }\n                        if (*eSweepAngle != -1) {\n                            crColor = *eSweepAngle;\n                        }\n                        if (*nBottomRect != -1) {\n                            var_8h = *nBottomRect;\n                        }\n                        fcn.0041b58b(hdc, crColor, var_8h, 0, var_14h);\n                    }\n                    else {\n                        if (uVar3 == 10) {\n                            eSweepAngle = eSweepAngle + 2;\n                            nBottomRect = nBottomRect + 2;\n                            var_ch = var_ch + 1;\n                            iVar6 = var_8h;\n                            fcn.0041b517(hdc, var_8h);\n                            fcn.0041b58b(hdc, crColor, var_8h, 0, var_14h);\n                            iVar4 = *eSweepAngle;\n                            iVar10 = iVar9;\n                            goto code_r0x0047f1fa;\n                        }\n                        if (uVar3 == 0xc) {\n                            eSweepAngle = eSweepAngle + 2;\n                            nBottomRect = nBottomRect + 2;\n                            var_ch = var_ch + 1;\n                            fcn.0041b517(hdc, var_8h);\n                            fcn.0041b58b(hdc, crColor, var_8h, 0, var_14h);\n                            (*_sym.imp.GDI32.dll_Ellipse)(hdc, iVar9, iVar7, *eSweepAngle + iVar9, *nBottomRect + iVar7)\n                            ;\n                        }\n                        else if (uVar3 == 0xe) {\n                            (*_sym.imp.GDI32.dll_MoveToEx)(hdc, iVar9, iVar7, 0);\n                            piVar1 = nBottomRect + 2;\n                            piVar2 = eSweepAngle + 2;\n                            var_ch = var_ch + 2;\n                            eSweepAngle = eSweepAngle + 4;\n                            nBottomRect = nBottomRect + 4;\n                            (*_sym.imp.GDI32.dll_AngleArc)(hdc, iVar9, iVar7, *piVar2, *piVar1, *eSweepAngle);\n                            (*_sym.imp.GDI32.dll_LineTo)(hdc, iVar9, iVar7);\n                            (*_sym.imp.GDI32.dll_CloseFigure)(hdc);\n                        }\n                    }\n                }\n                else if (uVar3 == 0x12) {\n                    (*_sym.imp.GDI32.dll_SetPixel)(hdc, iVar9, iVar7, crColor);\n                }\n                else if (uVar3 == 0x14) {\n                    if (iVar9 != 0) {\n                        var_1h._0_1_ = 1;\n                    }\n                }\n                else if (uVar3 == 0x18) {\n                    var_14h = iVar9;\n                }\n                var_ch = var_ch + 1;\n                eSweepAngle = eSweepAngle + 2;\n                nBottomRect = nBottomRect + 2;\n                iVar9 = var_8h;\n            } while (var_ch < *(iVar8 + 0xc));\n        }\n        iVar8 = *(iVar8 + 4);\n    } while( true );\n}\n",
        "token_count": 1272
    },
    "0041b517": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b517(uint hdc, int32_t arg_ch)\n\n{\n    if (*0x4c18cc != '\\0') {\n        (*_sym.imp.GDI32.dll_EndPath)(hdc);\n        *0x4c18cc = '\\0';\n        if ((arg_ch == -2) || (arg_ch == -1)) {\n            (*_sym.imp.GDI32.dll_StrokePath)(hdc);\n        }\n        else {\n            (*_sym.imp.GDI32.dll_StrokeAndFillPath)(hdc);\n        }\n    }\n    if (*0x4c18c8 != 0) {\n        (*_sym.imp.GDI32.dll_SelectObject)(hdc, *0x4c18c8);\n        *0x4c18c8 = 0;\n        (*_sym.imp.GDI32.dll_DeleteObject)(*0x4c18c4);\n        *0x4c18c4 = 0;\n        *0x4c18d4 = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "0041b58b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b58b(uint hdc, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    uint lplb;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if ((arg_ch != -1) && (((*0x4c18d4 != arg_ch || (*0x4c18d0 != arg_18h)) || (*0x4c18d8 != arg_14h)))) {\n        if (*0x4c18c4 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(*0x4c18c4);\n            *0x4c18c4 = 0;\n        }\n        lplb = 0;\n        var_4h = 0;\n        *0x4c18d0 = arg_18h;\n        *0x4c18d4 = arg_ch;\n        *0x4c18d8 = arg_14h;\n        var_8h = arg_ch;\n        if (arg_18h != 1) {\n            arg_14h = arg_14h | 0x10000;\n        }\n        *0x4c18c4 = (*_sym.imp.GDI32.dll_ExtCreatePen)(arg_14h, arg_18h, &lplb, 0, 0);\n        *0x4c18c8 = (*_sym.imp.GDI32.dll_SelectObject)(hdc, *0x4c18c4);\n        if (*0x4c18cc == '\\0') {\n            (*_sym.imp.GDI32.dll_BeginPath)(hdc);\n            *0x4c18cc = '\\x01';\n        }\n    }\n    if ((arg_10h != -2) && (arg_10h != -1)) {\n        uVar1 = fcn.0041b650(arg_10h, 0);\n        (*_sym.imp.GDI32.dll_SelectObject)(hdc, uVar1);\n    }\n    return;\n}\n",
        "token_count": 468
    },
    "0041b736": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b736(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint uVar5;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    uVar5 = *arg_8h;\n    lpPoint = in_ECX;\n    var_4h = in_ECX;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n    arg_8h[0x5b] = lpPoint;\n    arg_8h[0x5c] = var_4h;\n    (*_sym.imp.USER32.dll_ScreenToClient)(uVar5, &lpPoint);\n    if ((lpPoint != arg_8h[0x5d]) || (var_4h != arg_8h[0x5e])) {\n        arg_8h[0x5d] = lpPoint;\n        arg_8h[0x5e] = var_4h;\n        if (0 < arg_ch) {\n            fcn.00468c6b(0xfffffff5, arg_8h, lpPoint, var_4h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetAsyncKeyState;\n    uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(*(in_ECX + 0x18));\n    uVar2 = (uVar2 & 0xffff) >> 0xf;\n    uVar3 = (*pcVar1)(*(in_ECX + 0x1c));\n    uVar3 = (uVar3 & 0xffff) >> 0xf;\n    if (((uVar2 == arg_8h[0x5f]) || (arg_ch < 1)) || (*(arg_8h + 0x6a) == '\\0')) goto code_r0x0041b7b0;\n    if (uVar2 == 0) {\n        fcn.00468c6b(0xfffffff8, arg_8h, lpPoint, var_4h);\n        if (*(arg_8h + 0x61) != '\\0') {\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_8h, 0xfffffff0);\n            if ((uVar4 & 0x1000000) == 0) {\n                uVar5 = 0xfffffff4;\n            }\n            else {\n                uVar5 = 0xfffffffa;\n            }\n            goto code_r0x0047eeb8;\n        }\n    }\n    else {\n        uVar5 = 0xfffffff9;\ncode_r0x0047eeb8:\n        fcn.00468c6b(uVar5, arg_8h, lpPoint, var_4h);\n    }\n    *(arg_8h + 0x61) = 0;\ncode_r0x0041b7b0:\n    if (arg_ch != 0) {\n        arg_8h[0x5f] = uVar2;\n    }\n    if ((uVar3 != arg_8h[0x60]) && (0 < arg_ch)) {\n        if (uVar3 == 0) {\n            uVar5 = 0xfffffff6;\n        }\n        else {\n            uVar5 = 0xfffffff7;\n        }\n        fcn.00468c6b(uVar5, arg_8h, lpPoint, var_4h);\n    }\n    if (arg_ch != 0) {\n        arg_8h[0x60] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 826
    },
    "0041b7f2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b7f2(uint hDlg, uint32_t arg_ch, uint lParam, int32_t wParam)\n\n{\n    *0x4c1838 = fcn.0041af7d(hDlg);\n    if ((arg_ch == 0) || (*(**(*0x4c1870 + *0x4c1838 * 4) + 0x18) == 0)) {\n        *0x4c1838 = -1;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 6, wParam << 0x10 | arg_ch & 0xffff, lParam);\n    return;\n}\n",
        "token_count": 147
    },
    "0041b86e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b86e(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = arg_8h;\n    iVar2 = **(*0x4c1870 + arg_8h * 4);\n    fcn.004049ca(iVar2, 0);\n    if (*(iVar2 + 0x18) != 0) {\n        (*_sym.imp.USER32.dll_DestroyAcceleratorTable)(*(iVar2 + 0x18));\n        *(iVar2 + 0x18) = 0;\n    }\n    arg_8h = 3;\n    iVar4 = *0x4c1894;\n    if (2 < *0x4c1894) {\n        do {\n            arg_8h_00 = **(*0x4c1884 + arg_8h * 4);\n            if ((arg_8h_00 != NULL) && (arg_8h_00[1] == *(iVar2 + 4))) {\n                cVar1 = *(arg_8h_00 + 0x24);\n                if ((cVar1 == '\\n') || (cVar1 == '\\x10')) {\n                    if (arg_8h_00[0x10] != 0) {\n                        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0x10]);\n                        arg_8h_00[0x10] = 0;\n                    }\n                }\n                else if (cVar1 == '\\x13') {\n                    if (arg_8h_00[0xe] != 0) {\n                        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0xe]);\n                        arg_8h_00[0xe] = 0;\n                    }\n                    if (arg_8h_00[0xf] != 0) {\n                        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0xf]);\n                        arg_8h_00[0xf] = 0;\n                    }\n                }\n                else if (cVar1 == '\\x1b') {\n                    fcn.004049ca(iVar2, arg_8h_00);\n                }\n                else if (cVar1 == '\\x1d') {\n                    fcn.0046cefc(arg_8h_00, iVar2);\n                }\n                if (arg_8h_00[0x19] != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x19]);\n                    arg_8h_00[0x19] = 0;\n                }\n                if (arg_8h_00[0x1a] != 0) {\n                    (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h_00[0x1a]);\n                    arg_8h_00[0x1a] = 0;\n                }\n                if (arg_8h_00[0x11] != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x11]);\n                    arg_8h_00[0x11] = 0;\n                }\n                if (arg_8h_00[0x14] != 0) {\n                    (*_sym.imp.USER32.dll_DestroyWindow)(arg_8h_00[0x14]);\n                    arg_8h_00[0x14] = 0;\n                }\n                if (*arg_8h_00 != 0) {\n                    (*_sym.imp.USER32.dll_DestroyWindow)(*arg_8h_00);\n                    *arg_8h_00 = 0;\n                }\n                fcn.00404a54(arg_8h);\n                iVar4 = *0x4c1894;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h <= iVar4);\n    }\n    if (*(iVar2 + 0x20) != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*(iVar2 + 0x20));\n    }\n    if (*(iVar2 + 0x24) != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*(iVar2 + 0x24));\n    }\n    iVar2 = **(*0x4c1870 + iVar3 * 4);\n    if (iVar2 != 0) {\n        fcn.0041b9f3(iVar2);\n    }\n    **(*0x4c1870 + iVar3 * 4) = 0;\n    *0x4c1830 = *0x4c1830 + -1;\n    if (iVar3 == *0x4c187c) {\n        *0x4c187c = -1;\n    }\n    if ((*0x4c1830 == 1) && (*0x4c187c = 0,  0 < *0x4c1874)) {\n        do {\n            if (**(*0x4c1870 + *0x4c187c * 4) != 0) break;\n            *0x4c187c = *0x4c187c + 1;\n        } while (*0x4c187c < *0x4c1874);\n    }\n    if (*0x4c1830 == 0) {\n        (*_sym.imp.USER32.dll_KillTimer)(0, *0x4c1834);\n        *0x4c1834 = 0;\n    }\n    while ((*0x4c1874 != 0 && (**(*0x4c1870 + -4 + *0x4c1874 * 4) == 0))) {\n        fcn.004041e7();\n    }\n    return;\n}\n",
        "token_count": 1303
    },
    "0041baef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041baef(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar3 = 8;\n        if (7 < uVar1) {\n            uVar3 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar3;\n        uVar4 = fcn.0042010a(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.0041faa0(uVar4, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0042017e(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar4;\n    }\n    iVar2 = fcn.0042010a(0x10);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        *(iVar2 + 8) = 0;\n        fcn.004113a0(arg_8h);\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = iVar2;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 389
    },
    "0041bc5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bc5c(uchar *arg_8h)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar3 = 8;\n        if (7 < uVar1) {\n            uVar3 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar3;\n        uVar4 = fcn.0042010a(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.0041faa0(uVar4, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0042017e(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar4;\n    }\n    puVar2 = fcn.0042010a(1);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = *arg_8h;\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar2;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 379
    },
    "0041bd8f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bd8f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 4) != 1) {\n        if (*(param_1 + 0xd) != '\\0') {\n            iVar1 = *(param_1 + 8);\n            uVar2 = *(iVar1 + 0x10);\n            if (iVar1 != 0) {\n                fcn.0041bdcc(iVar1);\n            }\n            *(param_1 + 8) = uVar2;\n            *(param_1 + 0xd) = 0;\n        }\n        if (*(param_1 + 0xc) == '\\0') {\n            iVar1 = *(param_1 + 8);\n            uVar2 = *(iVar1 + 0x10);\n            if (iVar1 != 0) {\n                fcn.0041bdcc(iVar1);\n            }\n            *(param_1 + 8) = uVar2;\n            *(param_1 + 0xd) = 0;\n        }\n        else {\n            *(param_1 + 0xd) = 1;\n        }\n    }\n    *(param_1 + 4) = *(param_1 + 4) + -1;\n    return;\n}\n",
        "token_count": 288
    },
    "0041c13e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0041c13e(uint32_t arg_8h, int16_t *arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint arg_24h, uint32_t arg_28h, uint arg_2ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint noname_9;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *arg_ch_00;\n    uint *arg_8h_00;\n    uint32_t var_28h;\n    int32_t *hWnd;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t bRepaint;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar7 = *0x4c187c;\n    if (((arg_8h == 0xc) || ((0xd < arg_8h && (((arg_8h < 0x10 || (arg_8h == 0x11)) || (arg_8h == 0x14)))))) &&\n       ((arg_10h != -1 && (cVar2 = fcn.0040cf2c(arg_10h, &var_20h, &var_28h),  cVar2 != '\\0')))) {\n        iVar7 = var_20h;\n    }\n    if (iVar7 != -1) {\n        iVar7 = **(*0x4c1870 + iVar7 * 4);\n        var_1ch = iVar7;\n        var_20h = fcn.0041c38a(iVar7);\n        if (var_20h != -1) {\n            arg_ch_00 = **(*0x4c1884 + var_20h * 4);\n            if (((arg_8h == 0xe) || (arg_8h == 0xf)) || (arg_8h == 0xc)) {\n                *(arg_ch_00 + 0x92) = 0;\n            }\n            else {\n                *(arg_ch_00 + 0x92) = 0x50;\n                *(arg_ch_00 + 0x86) = *0x4c1818;\n            }\n            var_4h = arg_1ch;\n            var_28h = arg_28h & 2;\n            var_14h = arg_10h;\n            var_10h = arg_14h;\n            var_8h = arg_18h;\n            hWnd = arg_ch_00;\n            if (var_28h == 0) {\n                fcn.0041c446(arg_10h, arg_14h, arg_18h, arg_1ch, iVar7);\n                var_8h = *(iVar7 + 0x60);\n                var_4h = *(iVar7 + 100);\n                var_14h = *(iVar7 + 0x58);\n                var_10h = *(iVar7 + 0x5c);\n            }\n            else {\n                *(arg_ch_00 + 0x86) = 0;\n            }\n            iVar6 = var_20h;\n            if (arg_8h < 0x1e) {\n                bRepaint = 1;\n    // switch table (30 cases) at 0x41c312\n                switch(*(arg_8h * 4 + 0x41c312)) {\n                case 0x41c24a:\n                    bRepaint._0_1_ =\n                         fcn.0041c525(iVar7, arg_ch_00, var_20h, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n                    break;\n                case 0x41c2e9:\n                    bRepaint._0_1_ = '\\x01';\n                    break;\n                case 0x47dc7e:\n                    bRepaint._0_1_ =\n                         fcn.004691dc(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47dc9c:\n                    bRepaint._0_1_ =\n                         fcn.004697b2(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47dcba:\n                    bRepaint._0_1_ =\n                         fcn.00469424(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47dcd8:\n                    bRepaint._0_1_ =\n                         fcn.00469674(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47dcf6:\n                    bRepaint._0_1_ =\n                         fcn.004694d3(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47dd14:\n                    bRepaint._0_1_ =\n                         fcn.0046936b(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47dd32:\n                    bRepaint._0_1_ =\n                         fcn.00469ee3(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47dd50:\n                    bRepaint._0_1_ =\n                         fcn.00469fc4(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, arg_18h, arg_1ch, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47dd6e:\n                    arg_8h_00 = &arg_2ch;\n                    fcn.004113a0(arg_8h_00);\n                    bRepaint._0_1_ =\n                         fcn.00469567(iVar7, arg_ch_00, iVar6, arg_ch, var_14h, var_10h, arg_18h, arg_1ch, arg_20h, \n                                      arg_24h, arg_8h_00);\n                    break;\n                case 0x47dda2:\n                    bRepaint._0_1_ =\n                         fcn.0046a0d6(iVar7, arg_ch_00, var_20h, var_10h, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47ddbe:\n                    bRepaint._0_1_ =\n                         fcn.0046a217(iVar7, arg_ch_00, var_20h, var_10h, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47ddda:\n                    uVar4 = fcn.0040cdb4();\n                    bRepaint._0_1_ =\n                         fcn.00468eef(iVar7, arg_ch_00, iVar6, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      noname_9, uVar4);\n                    break;\n                case 0x47de03:\n                    bRepaint._0_1_ = fcn.0046a698(iVar7, arg_ch_00, var_20h, arg_ch, arg_10h);\n                    break;\n                case 0x47de16:\n                    bRepaint._0_1_ =\n                         fcn.0046a2b9(iVar7, arg_ch_00, var_20h, var_10h, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47de32:\n                    bRepaint._0_1_ = fcn.0046a395(iVar7, arg_ch_00, var_20h, arg_ch);\n                    break;\n                case 0x47de42:\n                    bRepaint._0_1_ = fcn.00469c50(iVar7, arg_ch_00, var_20h, arg_10h, arg_ch, arg_14h);\n                    break;\n                case 0x47de58:\n                    bRepaint._0_1_ = fcn.00469293(iVar7, arg_ch_00, var_10h, arg_10h);\n                    break;\n                case 0x47de68:\n                    bRepaint._0_1_ = fcn.00469d97(iVar7, arg_ch_00, var_20h, arg_10h, arg_ch, arg_14h, arg_18h);\n                    break;\n                case 0x47de81:\n                    bRepaint._0_1_ =\n                         fcn.0046a44d(iVar7, arg_ch_00, var_20h, var_10h, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47de9d:\n                    bRepaint._0_1_ = fcn.0046a578(var_10h, arg_ch_00, var_20h, arg_ch, arg_10h);\n                    break;\n                case 0x47deb0:\n                    bRepaint._0_1_ =\n                         fcn.0046970b(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47dece:\n                    bRepaint._0_1_ =\n                         fcn.004690be(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47deec:\n                    bRepaint._0_1_ =\n                         fcn.00469158(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47df0a:\n                    bRepaint._0_1_ =\n                         fcn.0046a189(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47df28:\n                    bRepaint._0_1_ =\n                         fcn.00469882(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47df46:\n                    bRepaint._0_1_ = fcn.00469a23(var_10h, arg_ch_00, var_20h, arg_ch, arg_10h);\n                    break;\n                case 0x47df59:\n                    bRepaint._0_1_ =\n                         fcn.00468fb5(iVar7, arg_ch_00, var_10h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x47e0ff:\n                    goto code_r0x0047e0ff;\n                }\n                if (bRepaint == '\\0') {\n                    fcn.00404a54(iVar6);\n                    if ((arg_8h != 0xb) || (iVar6 = bRepaint,  *arg_ch != 0)) {\n                        iVar6 = 0;\n                    }\n                }\n                else {\n                    *(arg_ch_00 + 0x24) = arg_8h;\n                    *(arg_ch_00 + 0x91) = arg_28h;\n                    *0x4c18a8 = *0x4c187c;\n                    *0x4c18a4 = iVar6;\n                    if (((arg_28h & 1) == 0) &&\n                       ((((*(iVar7 + 0x70) != 0 || (*(iVar7 + 0x7c) != 0x55)) || (*(iVar7 + 0x80) != 400)) ||\n                        ((*(iVar7 + 0x84) != 0 || (*(iVar7 + 0x88) != 2)))))) {\n                        fcn.00468cdb(iVar7, arg_ch_00, iVar7 + 0x6c, *(iVar7 + 0x7c), *(iVar7 + 0x80), *(iVar7 + 0x84), \n                                     *(iVar7 + 0x88), 0);\n                    }\n                    if (((arg_28h & 4) == 0) && ((arg_18h == -1 || (arg_1ch == -1)))) {\n                        uVar4 = (*_sym.imp.USER32.dll_GetDC)(*arg_ch_00);\n                        uVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch_00, 0x31, 0, 0);\n                        pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n                        uVar5 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, uVar5);\n                        fcn.00447a28(&var_18h);\n                        (*pcVar1)(uVar4, uVar5);\n                        arg_ch_00 = hWnd;\n                        (*_sym.imp.USER32.dll_ReleaseDC)(*hWnd, uVar4);\n                        iVar7 = var_1ch;\n                        iVar6 = var_14h;\n                        if (arg_8h != 0x17) {\n                            if (arg_8h == 0x18) {\n                                iVar6 = var_14h + 4;\n                            }\n                            else if (arg_8h == 0x19) {\n                                var_18h = var_18h + 0xc;\n                            }\n                            else if (arg_8h == 0x1a) {\n                                var_18h = var_18h + 8;\n                            }\n                            else {\n                                var_18h = 0;\n                                iVar6 = var_18h;\n                            }\n                        }\n                        if ((arg_1ch == -1) && ((*(var_1ch + 100) == -1 || (*0x4c1814 != 2)))) {\n                            *(var_1ch + 100) = iVar6 + 8;\n                        }\n                        if ((arg_18h == -1) && ((*(var_1ch + 0x60) == -1 || (*0x4c1814 != 2)))) {\n                            *(var_1ch + 0x60) = var_18h + 8;\n                        }\n                        (*_sym.imp.USER32.dll_MoveWindow)\n                                  (*arg_ch_00, *(var_1ch + 0x58), *(var_1ch + 0x5c), *(var_1ch + 0x60), *(var_1ch + 100)\n                                   , bRepaint);\n                        iVar6 = var_20h;\n                    }\n                    if (var_28h == 0) {\n                        fcn.0041c697(iVar7, arg_ch_00, 0);\n                    }\n                    if (*(iVar7 + 0x198) != '\\0') {\n                        if (*(iVar7 + 400) == -1) {\n                            uVar3 = *(iVar7 + 0x18c);\n                        }\n                        else {\n                            uVar3 = *(iVar7 + 400);\n                        }\n                        *(arg_ch_00 + 0x93) = uVar3;\n                    }\n                    if (*(iVar7 + 0x50) != -1) {\n                        fcn.0046b354(iVar6, *(iVar7 + 0x50));\n                    }\n                    if (*(iVar7 + 0x54) != -1) {\n                        fcn.0046b14a(iVar6, *(iVar7 + 0x54));\n                    }\n                    if (*arg_ch_00 != 0) {\n                        (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_ch_00, 0xffffffeb, iVar6);\n                    }\n                }\n            }\n            else {\ncode_r0x0047e0ff:\n                fcn.00404a54(var_20h);\n                bRepaint = -1;\n                iVar6 = bRepaint;\n            }\n            goto code_r0x0041c2d8;\n        }\n    }\n    bRepaint = 0;\n    iVar6 = bRepaint;\ncode_r0x0041c2d8:\n    fcn.00412570();\n    return iVar6;\n}\n",
        "token_count": 4161
    },
    "0041c697": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041c697(uint *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    uint *puVar7;\n    uint *puVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    int32_t iVar11;\n    int32_t lpRect;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t lpPoint;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    puVar8 = arg_ch;\n    puVar7 = arg_8h;\n    if (*(arg_8h + 0x3a) == '\\0') {\n        var_14h = *(arg_ch + 0x86);\n        (*_sym.imp.USER32.dll_GetClientRect)(*arg_8h, &lpRect);\n        var_8h = arg_8h[0x11];\n        iVar3 = arg_8h[0x12];\n        arg_10h = var_2ch;\n        arg_ch = var_28h;\n        if ((var_2ch == 0) && (arg_10h = 1,  var_8h != 0)) {\n            arg_10h = var_8h;\n        }\n        if ((var_28h == 0) && (arg_ch = 0x1,  iVar3 != 0)) {\n            arg_ch = iVar3;\n        }\n        piVar1 = arg_8h + 0x67;\n        arg_8h = iVar3;\n        if (*piVar1 != 0) {\n            iVar11 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xf);\n            arg_8h = iVar3 - iVar11;\n        }\n        (*_sym.imp.USER32.dll_GetWindowRect)(*puVar8, &lpRect);\n        var_ch = var_2ch - lpRect;\n        var_10h = var_28h - var_30h;\n        var_18h = var_30h;\n        lpPoint = lpRect;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*puVar7, &lpPoint);\n        *(puVar8 + 0x22) = (lpPoint * var_8h) / arg_10h;\n        *(puVar8 + 0x8a) = (var_18h * arg_8h) / arg_ch;\n        *(puVar8 + 0x23) = (var_ch * var_8h) / arg_10h;\n        *(puVar8 + 0x8e) = (var_10h * arg_8h) / arg_ch;\n        if (var_14h != 0) {\n            iVar4 = lpPoint;\n            iVar9 = var_ch;\n            iVar5 = var_8h;\n            if (((var_14h & 0x100) != 0) && (*(puVar8 + 0x23) = iVar9,  (var_14h & 6) == 0)) {\n                if ((var_14h & 8) == 0) {\n                    if (arg_10h / 2 < lpPoint) {\n                        *(puVar8 + 0x22) = ((((lpPoint - arg_10h) + var_ch) * var_8h) / arg_10h - iVar9) + iVar5;\n                    }\n                }\n                else {\n                    *(puVar8 + 0x22) = iVar4 - (var_8h - arg_10h) / 2;\n                }\n            }\n            iVar6 = var_18h;\n            iVar10 = var_10h;\n            iVar2 = arg_8h;\n            if ((var_14h & 0x200) != 0) {\n                *(puVar8 + 0x8e) = iVar10;\n                if ((var_14h & 0x60) == 0) {\n                    if (var_14h < '\\0') {\n                        *(puVar8 + 0x8a) = iVar6 - (arg_8h - arg_ch) / 2;\n                    }\n                    else if (arg_ch / 2 < var_18h) {\n                        *(puVar8 + 0x8a) = ((((var_18h - arg_ch) + var_10h) * arg_8h) / arg_ch - iVar10) + iVar2;\n                    }\n                }\n            }\n            if ((var_14h & 2) != 0) {\n                *(puVar8 + 0x22) = iVar4;\n            }\n            if ((var_14h & 4) != 0) {\n                if ((var_14h & 2) == 0) {\n                    *(puVar8 + 0x22) = ((iVar4 - arg_10h) - *(puVar8 + 0x23)) + iVar5 + iVar9;\n                }\n                else {\n                    *(puVar8 + 0x23) = ((iVar4 - *(puVar8 + 0x22)) - arg_10h) + iVar5 + iVar9;\n                }\n            }\n            if ((var_14h & 0x20) != 0) {\n                *(puVar8 + 0x8a) = iVar6;\n            }\n            if ((var_14h & 0x40) != 0) {\n                if ((var_14h & 0x20) == 0) {\n                    *(puVar8 + 0x8a) = ((iVar6 - *(puVar8 + 0x8e)) - arg_ch) + iVar2 + iVar10;\n                }\n                else {\n                    *(puVar8 + 0x8e) = ((iVar6 - *(puVar8 + 0x8a)) - arg_ch) + iVar2 + iVar10;\n                }\n            }\n        }\n    }\n    else {\n        *(arg_ch + 0x22) = *(arg_8h + 0x16);\n        *(arg_ch + 0x8a) = *(arg_8h + 0x17);\n        if ((*(arg_ch + 0x24) != '\\a') || (arg_10h != '\\0')) {\n            *(arg_ch + 0x23) = *(arg_8h + 0x18);\n            *(arg_ch + 0x8e) = *(arg_8h + 0x19);\n        }\n        (*_sym.imp.USER32.dll_GetClientRect)(*arg_ch, &var_24h);\n        if (arg_8h[0x16] == -1) {\n            *(arg_ch + 0x22) = var_24h;\n        }\n        if (arg_8h[0x17] == -1) {\n            *(arg_ch + 0x8a) = var_20h;\n        }\n        (*_sym.imp.USER32.dll_GetWindowRect)(*arg_ch, &var_24h);\n        if (arg_8h[0x18] == -1) {\n            *(arg_ch + 0x23) = lpPoint - var_24h;\n        }\n        if ((arg_8h[0x19] == -1) || (*(arg_ch + 0x24) == '\\0')) {\n            *(arg_ch + 0x8e) = var_18h - var_20h;\n        }\n    }\n    return;\n}\n",
        "token_count": 1721
    },
    "0041c8b7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c8b7(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar3 = 8;\n        if (7 < uVar1) {\n            uVar3 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar3;\n        uVar4 = fcn.0042010a(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.0041faa0(uVar4, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0042017e(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar4;\n    }\n    puVar2 = fcn.0042010a(4);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = *arg_8h;\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar2;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 379
    },
    "0041c955": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041c955(int32_t lpValueName, uint32_t arg_ch, ushort *arg_10h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint in_ECX;\n    uint32_t uVar3;\n    uint phkResult;\n    uint32_t lpcbData;\n    \n    if ((lpValueName != 0) && (arg_10h != NULL)) {\n        *arg_10h = 0;\n        uVar3 = 0;\n        in_EAX = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n        if (in_EAX == 0) {\n            lpcbData = arg_ch * 2;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(in_ECX, lpValueName, 0, 0, arg_10h, &lpcbData);\n            if (iVar1 == 0) {\n                if (lpcbData >> 1 < arg_ch) {\n                    *(arg_10h + (lpcbData & 0xfffffffe)) = 0;\n                }\n                else {\n                    arg_10h[arg_ch - 1] = 0;\n                }\n                uVar3 = 1;\n                lpcbData = lpcbData >> 1;\n            }\n            uVar2 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(in_ECX);\n            return uVar2 & 0xffffff00 | uVar3;\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 351
    },
    "0041c9d6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c9d6(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    uint uVar6;\n    int32_t *piStack100;\n    int32_t *piStack68;\n    int32_t *piStack64;\n    int32_t *piStack56;\n    int32_t *piStack52;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    uchar auStack40 [36];\n    \n    iVar3 = **(arg_8h + 4);\n    cVar2 = fcn.0040d2c0(0xe);\n    if (cVar2 != '\\0') {\n        piStack100 = 0x476ec8;\n        ppiVar5 = fcn.0044afce(&stack0xffffffd8);\n    }\n    else {\n        fcn.004084a6();\n        ppiVar5 = *(iVar3 + 8);\n        piStack56 = *ppiVar5;\n        piStack52 = ppiVar5[1];\n        piStack48 = ppiVar5[2];\n        piStack44 = ppiVar5[3];\n        *piStack44 = *piStack44 + 1;\n        ppiVar5 = &stack0xffffffc8;\n    }\n    piVar1 = *ppiVar5;\n    piVar4 = ppiVar5[1];\n    piStack68 = ppiVar5[2];\n    piStack64 = ppiVar5[3];\n    *piStack64 = *piStack64 + 1;\n    if (cVar2 != '\\0') {\n        piStack100 = 0x476ed8;\n        fcn.00405cd3();\n    }\n    else {\n        piStack100 = 0x41ca60;\n        fcn.00405cd3();\n    }\n    piStack100 = 0x41ca72;\n    fcn.0040b8a7();\n    piStack100 = piVar4;\n    (*_sym.imp.USER32.dll_CharUpperBuffW)();\n    iVar3 = fcn.0041cf79(&stack0xffffffac);\n    if (iVar3 == 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        if ((*(arg_8h + 8) == 2) && (iVar3 = fcn.0040cdb4(),  0 < iVar3)) {\n            piVar4 = fcn.0040cdb4();\n        }\n        else {\n            piVar4 = 0xfa;\n        }\n        fcn.0041cbfe(&stack0xffffffa4);\n        while (cVar2 = fcn.00402e2a(0),  cVar2 != '\\0') {\n            cVar2 = fcn.00405b2a();\n            if (cVar2 != '\\0') {\n                *(*piVar1 + 0x11) = 0;\n                *(*piVar1 + 0x18) = piVar4;\n                iVar3 = *piVar1;\n                if (*(iVar3 + 0x10) == '\\0') {\n                    uVar6 = (*_sym.imp.WINMM.dll_timeGetTime)();\n                    *(iVar3 + 0x14) = uVar6;\n                }\n                fcn.00407ba9(1, 0);\n                goto code_r0x0041cb3b;\n            }\n            fcn.00468b5a(&stack0xffffff9c);\n        }\n        fcn.0040d3d2();\n        piStack48 = piStack48 & 0xffff0000;\n        fcn.0040c935(&stack0xffffffa0);\n        piStack44 = piVar4;\n        piStack48 = (*_sym.imp.WINMM.dll_timeGetTime)();\n        fcn.0041cb59(&stack0xffffffbc);\n        fcn.00405cd3();\n    }\ncode_r0x0041cb3b:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 931
    },
    "0041cc12": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041cc12(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uchar *arg_18h;\n    int32_t **ppiVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    char cVar8;\n    uchar *arg_ch_00;\n    uchar *arg_14h;\n    uchar *arg_1ch;\n    uchar uStack76;\n    uchar uStack75;\n    uchar uStack74;\n    uchar uStack73;\n    uint uStack72;\n    uchar auStack68 [4];\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t *piStack52;\n    uchar auStack32 [28];\n    \n    uStack60 = 0;\n    uVar1 = *(arg_8h + 8);\n    uStack72 = 0;\n    cVar8 = uVar1 == 1;\n    fcn.0040d3d2();\n    if (1 < uVar1) {\n        iVar3 = *(*(arg_8h + 4) + 4);\n        cVar8 = fcn.0041d5f6(0x2a);\n        if (cVar8 == '\\0') {\n            cVar8 = '\\x0e';\n            cVar2 = fcn.0040d2c0(0xe);\n            if (cVar2 != '\\0') {\n                puVar4 = fcn.0044afce(auStack32);\n            }\n            else {\n                fcn.004084a6();\n                puVar4 = *(iVar3 + 8);\n                uStack64 = *puVar4;\n                uStack60 = puVar4[1];\n                uStack56 = puVar4[2];\n                piStack52 = puVar4[3];\n                *piStack52 = *piStack52 + 1;\n                puVar4 = &uStack64;\n            }\n            fcn.0040c935(puVar4);\n            if (cVar2 != '\\0') {\n                fcn.00405cd3();\n            }\n            else {\n                fcn.00405cd3();\n            }\n            iVar3 = fcn.0041cf79(&uStack56);\n            if (iVar3 == 0) {\n                fcn.00412570();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                fcn.0044d7e4(1, 0);\n                goto code_r0x0041ce5d;\n            }\n        }\n    }\n    iVar3 = **(arg_8h + 4);\n    fcn.004084a6();\n    fcn.0040caee(**(iVar3 + 8));\n    arg_1ch = &uStack73;\n    arg_18h = &uStack74;\n    arg_14h = &uStack76;\n    arg_ch_00 = auStack68;\n    puVar4 = &uStack56;\n    cVar2 = fcn.0041da5a(puVar4, arg_ch_00, &uStack75, arg_14h, arg_18h, arg_1ch);\n    fcn.00405cd3();\n    if (cVar2 == '\\0') {\n        if (arg_1ch == 0xffffffff) {\n            fcn.0044d7e4(1, 0);\n        }\ncode_r0x00477451:\n        fcn.00412570();\n        *arg_ch = 0;\n    }\n    else {\n        if ((arg_1ch == 0x13) && (arg_14h != '\\0')) {\n            arg_1ch = 0x3;\n        }\n        if (arg_14h >> 8 != '\\0') {\n            arg_18h = 0x4;\n        }\n        if (arg_14h != '\\0') {\n            arg_18h = arg_18h | 2;\n        }\n        if (arg_14h >> 0x10 != '\\0') {\n            arg_18h = arg_18h | 1;\n        }\n        if (arg_14h >> 0x18 != '\\0') {\n            arg_18h = arg_18h | 8;\n        }\n        uVar1 = *(in_ECX + 0x1cc);\n        uVar7 = 0;\n        if (uVar1 != 0) {\n            ppiVar5 = *(in_ECX + 0x1c8);\n            do {\n                if ((**ppiVar5 != 0) && (*(**ppiVar5 + 4) == (arg_1ch << 0x10 | arg_18h))) {\n                    if (cVar8 == '\\0') {\n                        fcn.0040c935(&uStack64);\n                    }\n                    else {\n                        uVar6 = *0x4c10e8;\n                        (*_sym.imp.USER32.dll_UnregisterHotKey)(*0x4c10e8, ***(*(in_ECX + 0x1c8) + uVar7 * 4));\n                        iVar3 = **(*(in_ECX + 0x1c8) + uVar7 * 4);\n                        if (iVar3 != 0) {\n                            fcn.0041f902(uVar6, iVar3);\n                        }\n                        **(*(in_ECX + 0x1c8) + uVar7 * 4) = 0;\n                    }\n                    goto code_r0x0041ce5d;\n                }\n                uVar7 = uVar7 + 1;\n                ppiVar5 = ppiVar5 + 1;\n            } while (uVar7 < uVar1);\n        }\n        if (cVar8 != '\\0') goto code_r0x00477451;\n        uVar7 = 0;\n        if (uVar1 != 0) {\n            ppiVar5 = *(in_ECX + 0x1c8);\n            do {\n                if (**ppiVar5 == 0) break;\n                uVar7 = uVar7 + 1;\n                ppiVar5 = ppiVar5 + 1;\n            } while (uVar7 < uVar1);\n        }\n        if (uVar7 == uVar1) {\n            iVar3 = fcn.0042010a(0x28);\n            if (iVar3 != 0) {\n                fcn.0041cff8();\n            }\n            fcn.0040197e(&stack0xffffffa4);\n        }\n        else {\n            iVar3 = fcn.0042010a(0x28);\n            if (iVar3 == 0) {\n                uVar6 = 0;\n            }\n            else {\n                uVar6 = fcn.0041cff8();\n            }\n            **(*(in_ECX + 0x1c8) + uVar7 * 4) = uVar6;\n        }\n        ***(*(in_ECX + 0x1c8) + uVar7 * 4) = uVar7;\n        *(**(*(in_ECX + 0x1c8) + uVar7 * 4) + 4) = arg_1ch;\n        fcn.0040c935(auStack68);\n        iVar3 = **(arg_8h + 4);\n        fcn.004084a6();\n        fcn.0040c935(*(iVar3 + 8));\n        iVar3 = (*_sym.imp.USER32.dll_RegisterHotKey)(*0x4c10e8, ***(*(in_ECX + 0x1c8) + uVar7 * 4), arg_ch_00, arg_14h)\n        ;\n        if (iVar3 != 0) goto code_r0x0041ce5d;\n        iVar3 = **(*(in_ECX + 0x1c8) + uVar7 * 4);\n        if (iVar3 != 0) {\n            fcn.0041f902(iVar3);\n        }\n        **(*(in_ECX + 0x1c8) + uVar7 * 4) = 0;\n        uVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.00407ba9(uVar6, puVar4);\n        fcn.00412570();\n        *arg_ch = 0;\n    }\n    arg_ch[3] = 1;\ncode_r0x0041ce5d:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1894
    },
    "0041cfad": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041cfad(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h != 0) {\n        *0x4c187c = fcn.0041af7d(arg_10h);\n    }\n    if ((*0x4c187c == -1) || (0xd < arg_8h + 0xdU)) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.0040c935(arg_ch);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 145
    },
    "0041d00f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d00f(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint32_t *arg_8h_00;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char cVar5;\n    ushort uVar6;\n    int32_t iVar7;\n    uint arg_8h_01;\n    int32_t in_ECX;\n    uint *puVar8;\n    int16_t *unaff_ESI;\n    int32_t iVar9;\n    int32_t *unaff_EDI;\n    int32_t iVar10;\n    bool bVar11;\n    int32_t iVar12;\n    uint32_t uStack452;\n    int16_t *piStack448;\n    uint *puStack444;\n    int32_t iStack440;\n    uint *puStack436;\n    uint uStack432;\n    uint uStack424;\n    uint32_t *puStack420;\n    int32_t iStack416;\n    int32_t iStack412;\n    uint32_t *apuStack408 [2];\n    int32_t iStack400;\n    char16_t *pcStack396;\n    char16_t *pcStack392;\n    int32_t iStack388;\n    uint uStack384;\n    char16_t *pcStack380;\n    int32_t iStack376;\n    uint uStack372;\n    char16_t *pcStack368;\n    uint uStack364;\n    uint uStack360;\n    char16_t *pcStack356;\n    uint uStack352;\n    char16_t *pcStack348;\n    char16_t *pcStack344;\n    uint uStack340;\n    char16_t *pcStack336;\n    char16_t *pcStack332;\n    uint uStack328;\n    char16_t *pcStack324;\n    char16_t *pcStack320;\n    uint uStack316;\n    uint uStack312;\n    char16_t *pcStack308;\n    uint uStack304;\n    char16_t *pcStack300;\n    char16_t *pcStack296;\n    int32_t iStack292;\n    char16_t *pcStack288;\n    char16_t *pcStack284;\n    int32_t iStack280;\n    char16_t *pcStack276;\n    char16_t *pcStack272;\n    int32_t iStack268;\n    char16_t *pcStack264;\n    char16_t *pcStack260;\n    int32_t iStack256;\n    char16_t *pcStack252;\n    char16_t *pcStack248;\n    int32_t iStack244;\n    uint uStack240;\n    char16_t *pcStack236;\n    int32_t iStack232;\n    char16_t *pcStack228;\n    char16_t *pcStack224;\n    int32_t iStack220;\n    uint uStack216;\n    char16_t *pcStack212;\n    int32_t iStack208;\n    uint uStack204;\n    char16_t *pcStack200;\n    int32_t iStack196;\n    char16_t *pcStack192;\n    char16_t *pcStack188;\n    int32_t iStack184;\n    char16_t *pcStack180;\n    char16_t *pcStack176;\n    int32_t iStack172;\n    uint uStack168;\n    char16_t *pcStack164;\n    int32_t iStack160;\n    char16_t *pcStack156;\n    char16_t *pcStack152;\n    uint uStack148;\n    uint uStack144;\n    char16_t *pcStack140;\n    uint uStack136;\n    uint uStack132;\n    char16_t *pcStack128;\n    uint uStack124;\n    char16_t *pcStack120;\n    char16_t *pcStack116;\n    uint uStack112;\n    char16_t *pcStack108;\n    char16_t *pcStack104;\n    uint uStack100;\n    uint uStack96;\n    char16_t *pcStack92;\n    int32_t iStack88;\n    uint uStack84;\n    char16_t *pcStack80;\n    int32_t iStack76;\n    uint uStack72;\n    char16_t *pcStack68;\n    int32_t iStack64;\n    char16_t *pcStack60;\n    char16_t *pcStack56;\n    uint uStack52;\n    char16_t *pcStack48;\n    char16_t *pcStack44;\n    int32_t iStack40;\n    char16_t *pcStack36;\n    \n    puStack436 = *(arg_8h + 8);\n    iVar10 = **(arg_8h + 4);\n    fcn.004084a6();\n    iVar12 = 0x49dbf0;\n    piStack448 = **(iVar10 + 8);\n    fcn.0041d6b4(0x49dbf0);\n    fcn.00412570();\n    *arg_ch = 0;\n    iStack400 = in_ECX + 0x10c;\n    iStack388 = in_ECX + 0x101;\n    iStack376 = in_ECX + 0x102;\n    iStack292 = in_ECX + 0x110;\n    iStack280 = in_ECX + 0x114;\n    iStack268 = in_ECX + 0x118;\n    iStack256 = in_ECX + 0x104;\n    uStack384 = 0x4b18b0;\n    uStack372 = 0x4b18b0;\n    uStack312 = 0x4b18b0;\n    iStack244 = in_ECX + 0x103;\n    pcStack288 = L\"d10m0\";\n    pcStack276 = L\"d10m0\";\n    iStack232 = in_ECX + 0x108;\n    arg_ch[3] = 1;\n    apuStack408[1] = 0x4b185c;\n    pcStack396 = L\"d1r0,2\";\n    pcStack392 = L\"ExpandEnvStrings\";\n    pcStack380 = L\"ExpandVarStrings\";\n    pcStack368 = L\"GUICloseOnESC\";\n    uStack364 = 0x4c1810;\n    uStack360 = 0x4b18f8;\n    pcStack356 = L\"GUICoordMode\";\n    uStack352 = 0x4c1814;\n    pcStack348 = L\"d1r0,2\";\n    pcStack344 = L\"GUIDataSeparatorChar\";\n    uStack340 = 0x4c1824;\n    pcStack336 = L\"d124c\";\n    pcStack332 = L\"GUIEventOptions\";\n    uStack328 = 0x4c1820;\n    pcStack324 = L\"d0r0,3\";\n    pcStack320 = L\"GUIOnEventMode\";\n    uStack316 = 0x4c181c;\n    pcStack308 = L\"GUIResizeMode\";\n    uStack304 = 0x4c1818;\n    pcStack300 = L\"d0r0,1023\";\n    pcStack296 = L\"MouseClickDelay\";\n    pcStack284 = L\"MouseClickDownDelay\";\n    pcStack272 = L\"MouseClickDragDelay\";\n    pcStack264 = L\"d250m0\";\n    pcStack260 = L\"MouseCoordMode\";\n    pcStack252 = L\"d1r0,2\";\n    pcStack248 = L\"MustDeclareVars\";\n    uStack240 = 0x4b18b0;\n    pcStack236 = L\"PixelCoordMode\";\n    pcStack228 = L\"d1r0,2\";\n    iStack220 = in_ECX + 0x91;\n    iStack208 = in_ECX + 0x90;\n    iStack196 = in_ECX + 0x88;\n    iStack184 = in_ECX + 0x8c;\n    iStack172 = in_ECX + 0x11c;\n    iStack160 = in_ECX + 0x498;\n    iStack88 = in_ECX + 0x2fc;\n    iStack76 = in_ECX + 0x2fd;\n    iStack64 = in_ECX + 0x2f8;\n    uStack216 = 0x4b18b0;\n    iStack40 = in_ECX + 0x314;\n    uStack432 = *(arg_8h + 4);\n    pcStack192 = L\"d5m0\";\n    pcStack180 = L\"d5m0\";\n    uStack204 = 0x4b18f8;\n    uStack144 = 0x4b18f8;\n    uStack168 = 0x4b18b0;\n    uStack132 = 0x4b18b0;\n    uStack96 = 0x4b18b0;\n    uStack84 = 0x4b18b0;\n    uStack72 = 0x4b18b0;\n    pcStack224 = L\"SendAttachMode\";\n    pcStack212 = L\"SendCapsLockMode\";\n    pcStack200 = L\"SendKeyDelay\";\n    pcStack188 = L\"SendKeyDownDelay\";\n    pcStack176 = L\"SetExitCode\";\n    pcStack164 = L\"TCPTimeout\";\n    pcStack156 = L\"d100m0\";\n    pcStack152 = L\"TrayAutoPause\";\n    uStack148 = 0x4c18f6;\n    pcStack140 = L\"TrayIconDebug\";\n    uStack136 = 0x4c10c3;\n    pcStack128 = L\"TrayIconHide\";\n    uStack124 = 0;\n    pcStack120 = L\"d0#1\";\n    pcStack116 = L\"TrayMenuMode\";\n    uStack112 = 0;\n    pcStack108 = L\"d0#2\";\n    pcStack104 = L\"TrayOnEventMode\";\n    uStack100 = 0x4c1990;\n    pcStack92 = L\"WinDetectHiddenText\";\n    pcStack80 = L\"WinSearchChildren\";\n    pcStack68 = L\"WinTextMatchMode\";\n    pcStack60 = L\"d1r1,2\";\n    pcStack56 = L\"WinTitleMatchMode\";\n    uStack52 = 0;\n    pcStack48 = L\"d1#3\";\n    pcStack44 = L\"WinWaitDelay\";\n    pcStack36 = L\"d250m0\";\n    cVar5 = fcn.0040d2c0(4);\n    if ((cVar5 != '\\0') && (*piStack448 != 0x2a)) {\n        if (puStack444 == 0x1) {\n            piStack448 = NULL;\n        }\n        else {\n            cVar5 = fcn.0041d5f6(0x29);\n            if (cVar5 == '\\0') {\n                uStack452 = fcn.0040cdb4();\n            }\n            else {\n                uStack452 = 0;\n            }\n        }\n        do {\n            puVar8 = NULL;\n            iVar10 = 0x1e;\n            puStack444 = NULL;\n            iStack440 = 0x1e;\n            do {\n                iVar9 = iVar10 + puVar8 >> 1;\n                iVar7 = fcn.00421bc7(unaff_ESI, (&iStack412)[iVar9 * 3]);\n                iVar4 = iStack416;\n                if (iVar7 < 0) {\n                    iVar10 = iVar9 + -1;\n                }\n                else {\n                    if (iVar7 < 1) break;\n                    puVar8 = iVar9 + 1;\n                }\n            } while (puVar8 <= iVar10);\n            puStack444 = puVar8;\n            iStack440 = iVar10;\n            if (iVar10 < puVar8) break;\n            iVar10 = 0;\n            puStack420 = apuStack408[iVar9 * 3 + 1];\n            if (*puStack420 == 100) {\n                iVar10 = 1;\n                fcn.0041d612(&puStack444);\n                fcn.00412570();\n                uStack424 = 1;\n                puStack436 = puStack444;\n            }\n            else if (*puStack420 == 0x44) {\n                arg_8h_01 = fcn.004218fb(puStack420);\n                fcn.00407b6e(arg_8h_01);\n                iVar7 = 2;\n                uVar2 = *(apuStack408[iVar9 * 3] + 1);\n                while ((uVar2 != 0 && (uVar2 != 0x27))) {\n                    fcn.0040bd2f(uVar2);\n                    unaff_EDI = unaff_EDI + 1;\n                    uVar2 = *((&iStack412)[iVar9 * 3] + unaff_EDI * 2);\n                }\n                unaff_ESI = iVar7 + 1;\n                fcn.00407bef(&iStack40);\n                fcn.00405cd3();\n            }\n            iVar7 = iVar10 + 1;\n            uVar2 = *(apuStack408[iVar9 * 3 + 1] + iVar10 * 2);\n            if (uVar2 < 0x6a) {\n                if (uVar2 == 0x69) {\n                    uVar3 = *apuStack408[iVar9 * 3];\n                    fcn.00412570();\n                    arg_ch[3] = 1;\n                    *arg_ch = uVar3;\n                    if (0x1 < piStack448) {\n                        cVar5 = fcn.0041d5f6(0x29);\n                        iVar10 = iVar7;\n                        if (cVar5 != '\\0') {\n                            iVar7 = fcn.0040cdb4();\n                        }\n                        *unaff_EDI = iVar7;\n                        iVar7 = iVar10;\n                    }\n                }\n                else if (uVar2 == 0x23) {\n                    fcn.0041d612(&puStack444);\n                    uVar3 = *0x4c1908;\n                    if (puStack444 == 0x1) {\n                        bVar11 = *0x4c10c6 == '\\0';\n                        fcn.00412570();\n                        arg_ch[3] = 1;\n                        *arg_ch = bVar11;\n                        if (0x1 < piStack448) {\n                            cVar5 = fcn.0041d5f6(0x29);\n                            if (cVar5 != '\\0') {\n                                iVar7 = fcn.0040cdb4();\n                            }\n                            if (iVar7 == 0) {\n                                fcn.00403598();\n                            }\n                            else {\n                                fcn.00402b94();\n                            }\n                        }\n                    }\n                    else if (puStack444 == 0x2) {\n                        fcn.00412570();\n                        arg_ch[3] = 1;\n                        *arg_ch = uVar3;\n                        if ((0x1 < piStack448) && (cVar5 = fcn.0041d5f6(0x29),  cVar5 == '\\0')) {\n                            cVar5 = fcn.0041d5f6(0x29);\n                            if (cVar5 != '\\0') {\n                                unaff_ESI = fcn.0040cdb4();\n                            }\n                            *0x4c18f4 = 0x101;\n                            *0x4c18f7 = 1;\n                            bVar11 = (unaff_ESI & 1) != 0;\n                            if (bVar11) {\n                                *0x4c18f4 = 0x100;\n                            }\n                            *0x4c1908 = bVar11;\n                            if ((unaff_ESI & 2) != 0) {\n                                *0x4c1908 = bVar11 | 2;\n                                *0x4c18f4 = *0x4c18f4 & 0xff;\n                            }\n                            bVar11 = (unaff_ESI & 4) != 0;\n                            if (bVar11) {\n                                *0x4c1908 = *0x4c1908 | 4;\n                            }\n                            *0x4c18fa = !bVar11;\n                            if ((unaff_ESI & 8) != 0) {\n                                *0x4c1908 = *0x4c1908 | 8;\n                                *0x4c18f7 = 0;\n                            }\n                        }\n                    }\n                    else {\n                        if (puStack444 != 0x3) break;\n                        uVar3 = *(iVar4 + 0x2f4);\n                        fcn.00412570();\n                        arg_ch[3] = 1;\n                        *arg_ch = uVar3;\n                        if (0x1 < piStack448) {\n                            cVar5 = fcn.0041d5f6(0x29);\n                            if (cVar5 != '\\0') {\n                                iVar7 = fcn.0040cdb4();\n                            }\n                            iVar10 = iVar7;\n                            iVar9 = fcn.00422626(iVar7);\n                            if (3 < iVar9 - 1U) break;\n                            *(iVar4 + 0x2f4) = iVar7;\n                            iVar7 = iVar10;\n                        }\n                    }\n                }\n                else if (uVar2 == 0x53) {\n                    fcn.0040ca8e(*apuStack408[iVar9 * 3]);\n                    if (1 < uStack452) {\n                        unaff_EDI = *(*(arg_8h + 4) + 4);\n                        cVar5 = fcn.0041d5f6(0x29);\n                        if (cVar5 == '\\0') {\n                            fcn.004084a6();\n                            puVar8 = *(iVar12 + 8);\n                        }\n                        else {\n                            fcn.004084a6();\n                            puVar8 = puStack436;\n                        }\n                        fcn.00407e53(*puVar8);\n                    }\n                }\n                else if (uVar2 == 0x62) {\n                    uVar1 = *apuStack408[iVar9 * 3];\n                    fcn.00412570();\n                    arg_ch[3] = 1;\n                    *arg_ch = uVar1;\n                    if (0x1 < piStack448) {\n                        cVar5 = fcn.0041d5f6(0x29);\n                        iVar10 = iVar7;\n                        if (cVar5 != '\\0') {\n                            iVar7 = fcn.0040cdb4();\n                        }\n                        *unaff_EDI = iVar7 != 0;\n                        iVar7 = iVar10;\n                    }\n                }\n                else {\n                    if (uVar2 != 99) break;\n                    arg_8h_00 = apuStack408[iVar9 * 3];\n                    fcn.0040ca8e(arg_8h_00);\n                    if (1 < uStack452) {\n                        unaff_EDI = *(*(arg_8h + 4) + 4);\n                        cVar5 = fcn.0041d5f6(0x29);\n                        if (cVar5 == '\\0') {\n                            fcn.004084a6();\n                            uVar6 = ***(iVar12 + 8);\n                        }\n                        else {\n                            uVar6 = fcn.0040cdb4();\n                        }\n                        *arg_8h_00 = uVar6;\n                    }\n                }\n            }\n            else if (uVar2 == 0x6d) {\n                uVar3 = *apuStack408[iVar9 * 3];\n                fcn.00412570();\n                arg_ch[3] = 1;\n                *arg_ch = uVar3;\n                fcn.0041d612(&puStack444);\n                if (0x1 < piStack448) {\n                    cVar5 = fcn.0041d5f6(0x29);\n                    if (cVar5 == '\\0') {\n                        if (piStack448 <= iVar7) {\ncode_r0x004773c7:\n                            *unaff_EDI = iVar7;\n                            goto code_r0x0041d593;\n                        }\n                        cVar5 = fcn.0040d16a();\n                        if (cVar5 == '\\0') break;\n                    }\n                    iVar10 = fcn.0040cdb4();\ncode_r0x004773ec:\n                    *unaff_EDI = iVar10;\n                }\n            }\n            else if (uVar2 == 0x72) {\n                uVar3 = *apuStack408[iVar9 * 3];\n                fcn.00412570();\n                arg_ch[3] = 1;\n                *arg_ch = uVar3;\n                fcn.0041d612(&puStack444);\n                iVar7 = iVar7 + 1;\n                fcn.0041d612(&iStack440);\n                if (0x1 < piStack448) {\n                    cVar5 = fcn.0041d5f6(0x29);\n                    if (cVar5 == '\\0') {\n                        if ((piStack448 <= iVar7) && (iVar7 <= puStack444)) goto code_r0x004773c7;\n                        cVar5 = fcn.0040d16a();\n                        if (cVar5 == '\\0') break;\n                    }\n                    iVar10 = fcn.0040cdb4();\n                    goto code_r0x004773ec;\n                }\n            }\n            else if (uVar2 != 0x76) break;\ncode_r0x0041d593:\n            unaff_ESI = puStack420 + iVar7 * 2;\n            if (*unaff_ESI == 0) goto code_r0x0041d5a9;\n        } while (*unaff_ESI == 0x2a);\n    }\n    fcn.0044d7e4(1, 0);\ncode_r0x0041d5a9:\n    fcn.00412570();\n    return 0;\n}\n",
        "token_count": 4825
    },
    "0041da0a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041da0a(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    \n    fcn.0040c4cd();\n    uVar4 = 0;\n    while( true ) {\n        puVar2 = fcn.0041db6f(*arg_14h);\n        uVar1 = *puVar2;\n        if ((uVar1 == 0) || (uVar4 != 0)) break;\n        if (uVar1 == arg_8h) {\n            uVar4 = 1;\n        }\n        else {\n            fcn.0040bd2f(uVar1);\n        }\n        *arg_14h = *arg_14h + 1;\n    }\n    uVar3 = CONCAT31(uVar1 >> 8, 1);\n    if (arg_8h != 0) {\n        uVar3 = uVar1 & 0xff00 | uVar4;\n    }\n    return uVar3;\n}\n",
        "token_count": 263
    },
    "0041da5a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.0041da5a(uchar *arg_8h, uint32_t *arg_ch, uchar *arg_10h, uchar *arg_14h, uchar *arg_18h, uchar *arg_1ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    ushort *puVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    int32_t iVar10;\n    uint var_20h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint8_t uVar9;\n    \n    uVar9 = 1;\n    uVar8 = 1;\n    var_4h = 0;\n    var_10h = 0;\n    if (*(arg_8h + 4) == 0) {\ncode_r0x004742b9:\n        uVar7 = arg_8h & 0xffffff00;\n    }\n    else {\n        *arg_1ch = 0;\n        *arg_18h = 0;\n        *arg_ch = 0;\n        *arg_14h = 0;\n        *arg_10h = 0;\n        var_ch = 0x2b;\n        var_8h = 0x23;\n        iVar10 = 0;\n        while( true ) {\n            piVar3 = fcn.0041db6f(iVar10);\n            iVar2 = *piVar3;\n            if ((((iVar2 != 0x2b) && (iVar2 != 0x5e)) && (iVar2 != 0x21)) && (iVar2 != var_8h)) break;\n            puVar5 = arg_10h;\n            if (((iVar2 == var_ch) || (puVar5 = arg_14h,  iVar2 == 0x5e)) ||\n               ((puVar5 = arg_18h,  iVar2 == 0x21 || (puVar5 = arg_1ch,  iVar2 == 0x23)))) {\n                *puVar5 = 1;\n            }\n            iVar10 = iVar10 + 1;\n        }\n        arg_1ch = iVar10 + 1;\n        piVar3 = fcn.0041db6f(iVar10);\n        iVar10 = var_10h;\n        if (*piVar3 == 0x7b) {\n            fcn.00407b6e(0x40);\n            cVar1 = fcn.0041da0a(0x7d, arg_8h, &var_20h, &arg_1ch);\n            if (cVar1 == '\\0') {\ncode_r0x0041db6b:\n                uVar8 = 0;\n            }\n            else {\n                do {\n                    iVar4 = fcn.00421bc7(*(iVar10 * 4 + 0x4bb5d0), var_20h);\n                    if (iVar4 == 0) break;\n                    iVar10 = iVar10 + 1;\n                } while (iVar10 < 0x62);\n                uVar8 = uVar9;\n                if (iVar10 == 0x62) {\n                    puVar6 = fcn.0040a4f6(0);\n                    iVar2 = (*_sym.imp.USER32.dll_VkKeyScanW)(*puVar6);\n                    uVar7 = iVar2;\n                    *arg_ch = uVar7;\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = fcn.00405cd3();\n                        goto code_r0x004742b9;\n                    }\n                    if ((uVar7 & 0x200) != 0) {\n                        *arg_14h = 1;\n                    }\n                    if ((uVar7 & 0x400) != 0) {\n                        *arg_18h = 1;\n                    }\n                    if ((uVar7 & 0x100) != 0) {\n                        *arg_10h = 1;\n                    }\n                }\n                else {\n                    if (*(iVar10 + 0x4bb568) != '\\0') goto code_r0x0041db6b;\n                    *arg_ch = str._f_b_b..__reepqrstuvwxyz________t__[iVar10];\n                }\n            }\n            arg_8h = fcn.00405cd3();\n        }\n        else {\n            iVar2 = (*_sym.imp.USER32.dll_VkKeyScanW)(*piVar3);\n            arg_8h = iVar2;\n            *arg_ch = arg_8h;\n            if (arg_8h == 0xffffffff) goto code_r0x004742b9;\n            if ((arg_8h & 0x200) != 0) {\n                *arg_14h = 1;\n            }\n            if ((arg_8h & 0x400) != 0) {\n                *arg_18h = 1;\n            }\n            if ((arg_8h & 0x100) != 0) {\n                *arg_10h = 1;\n                arg_8h = arg_10h;\n            }\n        }\n        *arg_ch = *arg_ch & 0xff;\n        uVar7 = arg_8h & 0xffffff00 | uVar8;\n    }\n    return uVar7;\n}\n",
        "token_count": 1203
    },
    "0041db8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041db8c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint arg_8h_00;\n    int16_t iVar3;\n    int16_t iVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    for (iVar5 = 0; (iVar6 = *(arg_8h + iVar5 * 2),  iVar6 == 0x20 || (iVar6 == 9)); iVar5 = iVar5 + 1) {\n    }\n    iVar6 = *(arg_8h + iVar5 * 2);\n    iVar3 = 0x22;\n    var_8h._0_2_ = 0x22;\n    if (iVar6 != 0x22) {\n        iVar3 = 0x27;\n        var_8h._0_2_ = 0x27;\n        if (iVar6 != 0x27) {\n            if (iVar6 != 0x3c) {\n                return 0;\n            }\n            iVar3 = 0x3e;\n            var_8h._0_2_ = 0x3e;\n            bVar1 = false;\n            goto code_r0x0041dbd5;\n        }\n    }\n    bVar1 = true;\ncode_r0x0041dbd5:\n    iVar5 = iVar5 + 1;\n    iVar6 = *(arg_8h + iVar5 * 2);\n    var_ch = 0;\n    iVar4 = iVar3;\n    if (iVar6 != iVar3) {\n        var_ch = 0;\n        do {\n            iVar4 = var_8h;\n            if (iVar6 == 0) break;\n            *(arg_ch + var_ch * 2) = iVar6;\n            var_ch = var_ch + 1;\n            iVar5 = iVar5 + 1;\n            iVar6 = *(arg_8h + iVar5 * 2);\n        } while (iVar6 != iVar3);\n    }\n    uVar7 = 0;\n    if (*(arg_8h + iVar5 * 2) == iVar4) {\n        do {\n            do {\n                iVar5 = iVar5 + 1;\n                iVar6 = *(arg_8h + iVar5 * 2);\n            } while (iVar6 == 0x20);\n        } while (iVar6 == 9);\n        iVar6 = *(arg_8h + iVar5 * 2);\n        if ((iVar6 == 0) || (iVar6 == 0x3b)) {\n            *(arg_ch + var_ch * 2) = 0;\n            arg_8h_00 = fcn.00403bcf();\n            fcn.00404bce(arg_8h_00);\n            fcn.0041dd27(var_1ch);\n            fcn.0041dcee(var_1ch);\n            if (bVar1) {\n                cVar2 = fcn.0041dd84();\n                if (cVar2 == '\\0') {\n                    iVar5 = *(in_ECX + 0x3c);\n                    while (iVar5 = iVar5 + -1,  -1 < iVar5) {\n                        fcn.00421943(arg_ch, *(*(in_ECX + 0x38) + iVar5 * 4));\n                        fcn.00421914(arg_ch, var_1ch);\n                        cVar2 = fcn.0041dd84();\n                        if (cVar2 != '\\0') break;\n                        fcn.00421943(arg_ch, var_1ch);\n                    }\n                }\n            }\n            else if (*(in_ECX + 0x3c) != 0) {\n                do {\n                    fcn.00421943(arg_ch, *(*(in_ECX + 0x38) + uVar7 * 4));\n                    fcn.00421914(arg_ch, var_1ch);\n                    cVar2 = fcn.0041dd84();\n                    if (cVar2 != '\\0') break;\n                    fcn.00421943(arg_ch, var_1ch);\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < *(in_ECX + 0x3c));\n            }\n            fcn.00404fd2();\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1034
    },
    "0041ddb6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ddb6(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    iVar2 = 0;\n    if ((*(in_ECX + 0x24) != 0) && (*(in_ECX + 0x10) != '\\0')) {\n        fcn.00402982();\n        iVar1 = fcn.0041de96(&arg_8h, 1);\n        if (0 < iVar1) {\n            if (0 < *(in_ECX + 0x34)) {\n                iVar1 = 0;\n                do {\n                    var_ch = *(*(in_ECX + 0x2c) + iVar1);\n                    var_8h = *(*(in_ECX + 0x2c) + 4 + iVar1) - var_ch;\n                    fcn.0041de23(&var_ch);\n                    iVar2 = iVar2 + 1;\n                    iVar1 = iVar1 + 8;\n                } while (iVar2 < *(in_ECX + 0x34));\n            }\n            return *(in_ECX + 0x34);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 286
    },
    "0041de23": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041de23(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar2 = *(in_ECX + 0xc) * 2;\n        if (uVar2 < 8) {\n            uVar2 = 8;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.0042010a(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.0041faa0(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0042017e(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    puVar1 = fcn.0042010a(8);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = *arg_8h;\n        puVar1[1] = arg_8h[1];\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar1;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 376
    },
    "0041de96": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041de96(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    \n    while( true ) {\n        if ((((in_ECX[9] == 0) || (*(in_ECX + 4) == '\\0')) || (*arg_8h == -1)) ||\n           (iVar2 = in_ECX[10],  *arg_8h != iVar2 && iVar2 <= *arg_8h)) {\n            return 0;\n        }\n        iVar2 = fcn.00408ca0(*in_ECX, iVar2, *arg_8h, in_ECX[0x10] | in_ECX[0xe], in_ECX[0xb], in_ECX[0xc]);\n        in_ECX[0xd] = iVar2;\n        if (0 < iVar2) {\n            piVar1 = in_ECX[0xb];\n            iVar2 = piVar1[1];\n            in_ECX[0xe] = 0;\n            if ((arg_ch != '\\0') && (*piVar1 == piVar1[1])) {\n                if (*piVar1 == in_ECX[10]) {\n                    iVar2 = in_ECX[10] + 1;\n                }\n                else {\n                    in_ECX[0xe] = 0x10000010;\n                }\n            }\n            *arg_8h = iVar2;\n            return in_ECX[0xd];\n        }\n        if (iVar2 != -1) break;\n        if (in_ECX[0xe] == 0) {\n            return 0;\n        }\n        in_ECX[0xe] = 0;\n        *arg_8h = *arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 405
    },
    "0041df71": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041df71(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[1] == 2) {\n        iVar1 = *param_1;\n    }\n    else {\n        iVar1 = *(param_1[2] + 0x10);\n        if (*(param_1 + 0xd) != '\\0') {\n            return *(iVar1 + 0x10);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 112
    },
    "0041dfd2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041dfd2(int32_t arg_8h, uint32_t arg_ch, uint16_t *arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    if (arg_18h == 2) {\n        uVar3 = 0;\n        uVar4 = 0;\n        if (arg_ch <= arg_14h) {\n            arg_ch = arg_14h;\n        }\n        if (arg_ch != 0) {\n            arg_8h = arg_8h - arg_10h;\n            do {\n                uVar1 = *(arg_8h + arg_10h);\n                arg_ch = arg_ch - 1;\n                if (uVar1 != *arg_10h) {\n                    uVar3 = fcn.00423b6c(uVar1);\n                    uVar3 = uVar3 & 0xffff;\n                    uVar4 = fcn.00423b6c(*arg_10h);\n                    uVar4 = uVar4 & 0xffff;\n                    if (uVar3 != uVar4) break;\n                }\n                arg_10h = arg_10h + 1;\n            } while (arg_ch != 0);\n        }\n        if (uVar3 - uVar4 < 0) {\n            uVar3 = 0xffffffff;\n        }\n        else {\n            uVar3 = uVar3 != uVar4 && -1 < uVar3 - uVar4;\n        }\n    }\n    else {\n        if (arg_18h == 0) {\n            uVar5 = 0x400;\n        }\n        else {\n            uVar5 = 0x409;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_CompareStringW)(uVar5, 1, arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = iVar2 - 2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 500
    },
    "0041e016": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e016(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 4) == 0) {\n        fcn.0040d89e(arg_8h);\n    }\n    else if (*(in_ECX + 0xd) == '\\0') {\n        iVar1 = fcn.0042010a(0x18);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            *(iVar1 + 8) = 0;\n            fcn.004113a0(arg_8h);\n        }\n        *(iVar1 + 0x10) = *(in_ECX + 8);\n        *(in_ECX + 8) = iVar1;\n    }\n    else {\n        fcn.0040d89e(arg_8h);\n        *(in_ECX + 0xd) = 0;\n    }\n    *(in_ECX + 4) = *(in_ECX + 4) + 1;\n    return;\n}\n",
        "token_count": 240
    },
    "0041e078": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041e078(int32_t *param_1)\n\n{\n    if (param_1[1] == 1) {\n        return *param_1;\n    }\n    if (*(param_1 + 0xd) == '\\0') {\n        return param_1[2];\n    }\n    return *(param_1[2] + 0x10);\n}\n",
        "token_count": 87
    },
    "0041e08f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047be7d)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041e08f(uint *hWnd, double *arg_ch)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    double *pdVar8;\n    int32_t iVar9;\n    uint uVar10;\n    uint arg_ch_00;\n    char16_t *pcVar11;\n    uint32_t arg_10h;\n    uint lpFilename;\n    uint pwszKLID;\n    uint var_13ch;\n    uint var_134h;\n    uint var_12ch;\n    uint lpSystemTime;\n    uint var_116h;\n    uint uStack276;\n    uint uStack272;\n    uint32_t var_108h;\n    uint var_104h;\n    uint var_fch;\n    uint var_ech;\n    uint var_e4h;\n    uint var_d4h;\n    uint var_cch;\n    uint var_bch;\n    uint var_b4h;\n    uint var_a4h;\n    uint var_9ch;\n    uint var_8ch;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_3ch;\n    int32_t hLibModule;\n    uint var_24h;\n    double dStack36;\n    int32_t var_18h;\n    uint32_t pcbBuffer;\n    uint var_10h;\n    \n    lpFilename._0_2_ = 0;\n    fcn.00407b6e(0x104);\n    uVar10 = 0;\n    uVar6 = *hWnd;\n    iVar7 = 0;\n    do {\n        arg_ch_00 = 0x41e0ca;\n        iVar3 = fcn.00422203(*(iVar7 * 4 + 0x4bbde0), uVar6);\n        pdVar8 = arg_ch;\n        if (iVar3 == 0) break;\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x61);\n    // switch table (97 cases) at 0x41e203\n    switch(iVar7) {\n    case 0:\n        iVar7 = fcn.00407be1();\n        var_60h = *(iVar7 + 0x14);\n        goto code_r0x0047ba1e;\n    case 1:\n        iVar7 = fcn.00407be1();\n        fcn.0040d89e(iVar7 + 0x20);\n        goto code_r0x0041e0fd;\n    case 2:\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)(&fcn.0041e08f::lpSystemTime);\n        arg_10h = var_116h;\n        arg_ch_00 = 0x4b428c;\n        goto code_r0x0047ba85;\n    case 3:\n        uVar6 = 0x4b4298;\n        puVar4 = &fcn.0041e08f::var_7ch;\n        fcn.0045eb88();\n        uVar6 = fcn.0045eabc(puVar4, uVar6);\n        fcn.00407bef(uVar6);\n        goto code_r0x0047bb27;\n    case 4:\n        uVar6 = 0x4b42a0;\n        puVar4 = &fcn.0041e08f::var_8ch;\n        fcn.0045eb88();\n        uVar6 = fcn.0045eabc(puVar4, uVar6);\n        fcn.00407bef(uVar6);\n        goto code_r0x0047bb27;\n    case 5:\n        uVar6 = 0x4b42a8;\n        puVar4 = &fcn.0041e08f::var_9ch;\n        fcn.0045eb88();\n        uVar6 = fcn.0045eabc(puVar4, uVar6);\n        fcn.00407bef(uVar6);\n        goto code_r0x0047bb27;\n    case 6:\n        uVar6 = 0x4b364c;\n        puVar4 = &fcn.0041e08f::var_b4h;\n        fcn.0045eb88();\n        uVar6 = fcn.0045eabc(puVar4, uVar6);\n        fcn.00407bef(uVar6);\n        goto code_r0x0047bb27;\n    case 7:\n        uVar6 = 0x4b42b0;\n        puVar4 = &fcn.0041e08f::var_cch;\n        fcn.0045eb88();\n        uVar6 = fcn.0045eabc(puVar4, uVar6);\n        fcn.00407bef(uVar6);\n        goto code_r0x0047bb27;\n    case 8:\n        uVar6 = 0x4b42b8;\n        puVar4 = &fcn.0041e08f::var_e4h;\n        fcn.0045eb88();\n        uVar6 = fcn.0045eabc(puVar4, uVar6);\n        fcn.00407bef(uVar6);\n        goto code_r0x0047bb27;\n    case 9:\n        fcn.0045eb88();\n        fcn.0045eb17();\n        arg_10h = 0x4b364c;\ncode_r0x0047ba85:\n        fcn.0042234b(&fcn.0041e08f::lpFilename, arg_ch_00, arg_10h);\n        goto code_r0x0047babe;\n    case 10:\n        uVar6 = 0x4b42c0;\n        puVar4 = &fcn.0041e08f::var_fch;\n        fcn.0045eb88();\n        uVar6 = fcn.0045eabc(puVar4, uVar6);\n        fcn.00407bef(uVar6);\n        goto code_r0x0047bb27;\n    case 0xb:\n        break;\n    case 0xc:\n        break;\n    case 0xd:\n        break;\n    case 0xe:\n        break;\n    case 0xf:\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        break;\n    case 0x15:\n        break;\n    case 0x16:\n        break;\n    case 0x17:\n        break;\n    case 0x18:\n        break;\n    case 0x19:\n        break;\n    case 0x1a:\n        break;\n    case 0x1b:\n        break;\n    case 0x1c:\n        pcbBuffer = 0x104;\n        (*_sym.imp.KERNEL32.dll_GetComputerNameW)(&fcn.0041e08f::lpFilename, &fcn.0041e08f::pcbBuffer);\n        goto code_r0x0047babe;\n    case 0x1d:\n        iVar7 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(&fcn.0041e08f::lpFilename, 0x104);\n        if (iVar7 == 0) goto code_r0x0041e0fd;\n        goto code_r0x0047babe;\n    case 0x1e:\n        if (*(*0x4c236c + 0x30) == '\\0') {\n            (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&fcn.0041e08f::lpFilename, 0x104);\n        }\n        else {\n            hLibModule = 0;\n            var_24h = 0;\n            pcVar5 = fcn.0045eaa4();\n            (*pcVar5)();\n            if (hLibModule != 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n            }\n        }\n        goto code_r0x0047babe;\n    case 0x1f:\n    case 0x5e:\n        goto code_r0x0041e125;\n    case 0x20:\n        fcn.00412570();\n        *pdVar8 = 6;\n        goto code_r0x0041e131;\n    case 0x21:\n    case 0x27:\n        fcn.00412570();\n        *pdVar8 = 3;\n        goto code_r0x0041e131;\n    case 0x22:\n        fcn.00412570();\n        *pdVar8 = 9;\n        goto code_r0x0041e131;\n    case 0x23:\n        fcn.00412570();\n        *pdVar8 = 5;\n        goto code_r0x0041e131;\n    case 0x24:\n        fcn.00412570();\n        *pdVar8 = 10;\n        goto code_r0x0041e131;\n    case 0x25:\n        fcn.00412570();\n        *pdVar8 = 0x40;\n        goto code_r0x0041e131;\n    case 0x26:\n        fcn.00412570();\n        *pdVar8 = 0x41;\n        goto code_r0x0041e131;\n    case 0x28:\n        fcn.00412570();\n        *pdVar8 = 2;\n        goto code_r0x0041e131;\n    case 0x29:\n        fcn.00412570();\n        *pdVar8 = 7;\n        goto code_r0x0041e131;\n    case 0x2a:\n        fcn.00412570();\n        *pdVar8 = 8;\n        goto code_r0x0041e131;\n    case 0x2b:\n        fcn.00412570();\n        *pdVar8 = 4;\n        goto code_r0x0041e131;\n    case 0x2c:\n    case 0x5d:\n    case 0x5f:\ncode_r0x0047c176:\n        fcn.00412570();\n        goto code_r0x0047bd78;\n    case 0x2d:\n        fcn.00412570();\n        *pdVar8 = 0x42;\n        goto code_r0x0041e131;\n    case 0x2e:\n        fcn.00412570();\n        *pdVar8 = 0x43;\n        goto code_r0x0041e131;\n    case 0x2f:\n        cVar2 = *0x4c10c6;\n        goto code_r0x0047bd96;\n    case 0x30:\n        cVar2 = *0x4c18f9;\ncode_r0x0047bd96:\n        if (cVar2 == '\\x01') {\n            fcn.00412570();\ncode_r0x0047bd78:\n            *(pdVar8 + 0xc) = 1;\n            *pdVar8 = 1;\n        }\n        else {\n            fcn.00412570();\n            *(pdVar8 + 0xc) = 1;\n            *pdVar8 = 0;\n        }\n        goto code_r0x0041e0fd;\n    case 0x31:\n        puVar4 = var_18h + 200;\n        goto code_r0x0041e0f4;\n    case 0x32:\n        puVar4 = var_18h + 0xb8;\n        goto code_r0x0041e0f4;\n    case 0x33:\n        puVar4 = var_18h + 0xd8;\n        goto code_r0x0041e0f4;\n    case 0x34:\n        iVar7 = *(var_18h + 0xf8);\n        if (iVar7 == 0) {\n            iVar7 = *(var_18h + 0xf4);\n        }\n        var_60h = fcn.004433b0(iVar7);\n        goto code_r0x0047ba1e;\n    case 0x35:\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &fcn.0041e08f::lpFilename);\n        goto code_r0x0047babe;\n    case 0x36:\n        pcVar11 = L\"WIN32_NT\";\n        goto code_r0x0041e116;\n    case 0x37:\n        if (*(*0x4c236c + 0x2c) == '\\x01') {\n            pcVar11 = L\"WIN_81\";\n        }\n        else if (*(*0x4c236c + 0x2e) == '\\x01') {\n            pcVar11 = L\"WIN_2012R2\";\n        }\n        else if (*(*0x4c236c + 0x2a) == '\\x01') {\n            pcVar11 = L\"WIN_2012\";\n        }\n        else if (*(*0x4c236c + 0x28) == '\\x01') {\n            pcVar11 = L\"WIN_8\";\n        }\n        else if (*(*0x4c236c + 0x26) == '\\x01') {\n            pcVar11 = L\"WIN_2008R2\";\n        }\n        else if (*(*0x4c236c + 0x24) == '\\x01') {\n            pcVar11 = L\"WIN_7\";\n        }\n        else if (*(*0x4c236c + 0x22) == '\\x01') {\n            pcVar11 = L\"WIN_2008\";\n        }\n        else if (*(*0x4c236c + 0x20) == '\\x01') {\n            pcVar11 = L\"WIN_VISTA\";\n        }\n        else if (*(*0x4c236c + 0x1e) == '\\x01') {\n            pcVar11 = L\"WIN_2003\";\n        }\n        else if (*(*0x4c236c + 0x1c) == '\\x01') {\n            pcVar11 = L\"WIN_XPe\";\n            if (*(*0x4c236c + 0x34) == '\\0') {\n                pcVar11 = L\"WIN_XP\";\n            }\n        }\n        else {\n            pcVar11 = L\"UNKNOWN\";\n        }\n        goto code_r0x0041e116;\n    case 0x38:\n        var_60h = *(*0x4c236c + 8);\n        goto code_r0x0047ba1e;\n    case 0x39:\n        puVar4 = *0x4c236c + 0xc;\n        goto code_r0x0041e0f4;\n    case 0x3a:\n        fcn.0041c955(L\"InstallLanguage\", 0x104, &fcn.0041e08f::lpFilename);\n        goto code_r0x0047babe;\n    case 0x3b:\n    case 0x3c:\n        iVar1 = *(*0x4c236c + 0x32);\n        if (iVar1 == 0) {\n            pcVar11 = 0x4b42c8;\n        }\n        else if (iVar1 == 6) {\n            pcVar11 = L\"IA64\";\n        }\n        else if (iVar1 == 9) {\n            pcVar11 = 0x4b42dc;\n        }\n        else {\n            pcVar11 = L\"UNKNOWN\";\n        }\n        goto code_r0x0041e116;\n    case 0x3d:\n        puVar4 = cpuid(0x80000001);\n        *NULL = *puVar4;\n        uStack276 = puVar4[1];\n        var_108h = puVar4[2];\n        uStack272 = puVar4[3];\n        pcVar11 = 0x4b42dc;\n        if ((var_108h & 0x20000000) == 0) {\n            pcVar11 = 0x4b42c8;\n        }\n        goto code_r0x0041e116;\n    case 0x3e:\n        (*_sym.imp.USER32.dll_GetKeyboardLayoutNameW)(&fcn.0041e08f::pwszKLID);\n        pcVar11 = &fcn.0041e08f::pwszKLID;\n        goto code_r0x0041e116;\n    case 0x3f:\n        fcn.00421943(&fcn.0041e08f::lpFilename, L\"3, 3, 10, 2\");\n        iVar9 = 0;\n        iVar3 = 0;\n        iVar7 = fcn.004218fb(&fcn.0041e08f::lpFilename);\n        if (0 < iVar7) {\n            do {\n                iVar1 = *(&fcn.0041e08f::lpFilename + iVar3 * 2);\n                if (iVar1 != 0x20) {\n                    if (iVar1 == 0x2c) {\n                        *(&fcn.0041e08f::lpFilename + iVar9 * 2) = 0x2e;\n                    }\n                    else {\n                        *(&fcn.0041e08f::lpFilename + iVar9 * 2) = iVar1;\n                    }\n                    iVar9 = iVar9 + 1;\n                }\n                iVar3 = iVar3 + 1;\n                iVar7 = fcn.004218fb(&fcn.0041e08f::lpFilename);\n            } while (iVar3 < iVar7);\n        }\n        *(&fcn.0041e08f::lpFilename + iVar9 * 2) = 0;\n        goto code_r0x0047babe;\n    case 0x40:\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &fcn.0041e08f::lpFilename, 0x104);\n        goto code_r0x0047babe;\n    case 0x41:\n        goto code_r0x0047c05e;\n    case 0x42:\n        goto code_r0x0047c05e;\n    case 0x43:\n        goto code_r0x0047c05e;\n    case 0x44:\ncode_r0x0047c05e:\n        fcn.004478ee();\n        pcVar11 = &fcn.0041e08f::var_5ch;\n        goto code_r0x0041e116;\n    case 0x45:\n        pcVar11 = 0x4b4284;\n        goto code_r0x0041e116;\n    case 0x46:\n        pcVar11 = 0x49dc8c;\n        goto code_r0x0041e116;\n    case 0x47:\n        pcVar11 = 0x4b38ec;\n        goto code_r0x0041e116;\n    case 0x48:\n        uVar6 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&fcn.0041e08f::var_6ch);\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar6);\n        var_60h = var_64h;\n        goto code_r0x0047ba1e;\n    case 0x49:\n        uVar6 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&fcn.0041e08f::var_6ch);\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar6);\n        goto code_r0x0047ba1e;\n    case 0x4a:\n        hWnd = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        uVar6 = (*_sym.imp.USER32.dll_GetDC)(hWnd);\n        uVar10 = 0xc;\n        goto code_r0x0047c0c6;\n    case 0x4b:\n        hWnd = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        uVar6 = (*_sym.imp.USER32.dll_GetDC)(hWnd);\n        uVar10 = 0x74;\ncode_r0x0047c0c6:\n        uVar10 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar6, uVar10);\n        pdVar8 = arg_ch;\n        fcn.00412570();\n        *(pdVar8 + 0xc) = 1;\n        *pdVar8 = uVar10;\n        (*_sym.imp.USER32.dll_ReleaseDC)(hWnd, uVar6);\n        uVar10 = 0;\n        goto code_r0x0041e0fd;\n    case 0x4c:\n        if ((*0x4c1124 == 3) || (*0x4c1124 == 4)) goto code_r0x0047c176;\n        goto code_r0x0041e125;\n    case 0x4d:\n        pcVar11 = L\"COMSPEC\";\n        goto code_r0x0047c119;\n    case 0x4e:\n        pcVar11 = 0x4b4288;\n        goto code_r0x0041e116;\n    case 0x4f:\n        pcbBuffer = 0x104;\n        (*_sym.imp.ADVAPI32.dll_GetUserNameW)(&fcn.0041e08f::lpFilename, &fcn.0041e08f::pcbBuffer);\n        goto code_r0x0047babe;\n    case 0x50:\n        (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &fcn.0041e08f::lpFilename);\n        fcn.004021bc();\n        goto code_r0x0047babe;\n    case 0x51:\n        pcVar11 = L\"USERPROFILE\";\n        goto code_r0x0047c119;\n    case 0x52:\n        pcVar11 = L\"HOMEDRIVE\";\n        goto code_r0x0047c119;\n    case 0x53:\n        pcVar11 = L\"HOMEPATH\";\n        goto code_r0x0047c119;\n    case 0x54:\n        pcVar11 = L\"HOMESHARE\";\n        goto code_r0x0047c119;\n    case 0x55:\n        pcVar11 = L\"LOGONSERVER\";\n        goto code_r0x0047c119;\n    case 0x56:\n        pcVar11 = L\"USERDOMAIN\";\n        goto code_r0x0047c119;\n    case 0x57:\n        pcVar11 = L\"USERDNSDOMAIN\";\ncode_r0x0047c119:\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(pcVar11, &fcn.0041e08f::lpFilename, 0x104);\n        goto code_r0x0047babe;\n    case 0x58:\n    case 0x59:\n        goto code_r0x0041e0fd;\n    case 0x5a:\n        var_60h = *(var_18h + 0x14c);\ncode_r0x0047ba1e:\n        pdVar8 = arg_ch;\n        fcn.00412570();\n        *pdVar8 = var_60h;\ncode_r0x0041e131:\n        uVar10 = 0;\n        *(pdVar8 + 0xc) = 1;\n        goto code_r0x0041e0fd;\n    case 0x5b:\n        puVar4 = var_18h + 0x150;\n        goto code_r0x0041e0f4;\n    case 0x5c:\n        hWnd = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        pdVar8 = arg_ch;\n        dStack36 = hWnd;\n        if (hWnd < 0) {\n            dStack36 = dStack36 + *0x4b6568;\n        }\n        fcn.00412570();\n        *(pdVar8 + 0xc) = 3;\n        *pdVar8 = dStack36;\n        goto code_r0x0041e0fd;\n    case 0x60:\n        fcn.0041c955(L\"SchemeLangID\", 0x104, &fcn.0041e08f::lpFilename);\n        pcbBuffer = lpFilename;\n        fcn.0040ca32(pcbBuffer, 0);\ncode_r0x0047babe:\n        pcVar11 = &fcn.0041e08f::lpFilename;\ncode_r0x0041e116:\n        uVar10 = 0;\n        fcn.0040ca8e(pcVar11);\n        goto code_r0x0041e0fd;\n    default:\n        fcn.0040caee(0x4b4228);\n        var_18h = 0;\n        fcn.00407b4b(hWnd);\n        fcn.0040d2d2(&fcn.0041e08f::var_3ch, &fcn.0041e08f::hWnd, &fcn.0041e08f::var_18h, 0);\n        if (hWnd == NULL) {\n            uVar10 = 0xffffffff;\n        }\n        else {\n            fcn.0040d89e(hWnd);\n        }\ncode_r0x0047bb27:\n        fcn.00405cd3();\n        goto code_r0x0041e0fd;\n    }\n    fcn.004479f8();\n    puVar4 = &fcn.0041e08f::var_10h;\ncode_r0x0041e0f4:\n    fcn.00407bef(puVar4);\ncode_r0x0041e0fd:\n    fcn.00405cd3();\n    return uVar10;\ncode_r0x0041e125:\n    fcn.00412570();\n    *pdVar8 = 0;\n    goto code_r0x0041e131;\n}\n",
        "token_count": 5787
    },
    "0041e3ee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041e3ee(double *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0xc);\n    piVar2 = iVar1 + -1;\n    if (piVar2 == NULL) {\n        bVar3 = *param_1 == 0;\n    }\n    else if (iVar1 == 2) {\n        piVar2 = *param_1 | *(param_1 + 4);\n        bVar3 = piVar2 == NULL;\n    }\n    else {\n        if (iVar1 == 3) {\n            piVar2 = (0.0 < *param_1) << 8 | (*param_1 == 0.0) << 0xe;\n            if (POPCOUNT(piVar2 >> 8 & 0x44) != '\\0') goto code_r0x00475652;\n            goto code_r0x00475642;\n        }\n        if (iVar1 == 4) {\n            piVar2 = *(param_1 + 1);\n            bVar3 = piVar2[1] == 0;\n        }\n        else {\n            if (iVar1 == 7) {\n                return *param_1 != 0;\n            }\n            if (iVar1 == 9) {\n                return *param_1;\n            }\n            piVar2 = iVar1 + -0xb;\n            if (piVar2 != NULL) goto code_r0x00475652;\n            piVar2 = *param_1;\n            bVar3 = *piVar2 == 0;\n        }\n    }\n    if (bVar3) {\ncode_r0x00475652:\n        return piVar2 & 0xffffff00;\n    }\ncode_r0x00475642:\n    return CONCAT31(piVar2 >> 8, 1);\n}\n",
        "token_count": 418
    },
    "0041e47b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.0041e47b(int32_t *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint extraout_ECX;\n    int32_t iVar5;\n    uint *puVar6;\n    uint lpVersionInformation;\n    int32_t var_158h;\n    int32_t var_154h;\n    int32_t var_150h;\n    uint var_148h;\n    uint var_44h;\n    uint lpSystemInfo;\n    uint var_3ch;\n    int32_t var_1ch;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040d3d2();\n    *(param_1 + 0xd) = 0;\n    lpVersionInformation = 0x11c;\n    (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n    *param_1 = var_158h;\n    param_1[1] = var_154h;\n    param_1[2] = var_150h;\n    fcn.00407e53(&var_148h);\n    fcn.0041e5f8(extraout_ECX);\n    fcn.0041e617(0x49dc28);\n    *(param_1 + 0x2f) = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    *(param_1 + 0xb) = 0;\n    *(param_1 + 0x2e) = 0;\n    if (*param_1 != 5) {\n        if (*param_1 == 6) {\n            iVar5 = param_1[1];\n            *(param_1 + 0x1d) = 1;\n            *(param_1 + 0x1f) = 1;\n            if (iVar5 == 0) {\n                *(param_1 + 0x21) = 1;\n                if (var_44h._2_1_ == '\\x01') {\n                    *(param_1 + 8) = 1;\n                }\n                else {\n                    *(param_1 + 0x23) = 1;\n                    *(param_1 + 0x22) = 1;\n                }\n            }\n            else if (iVar5 == 1) {\n                *(param_1 + 0x21) = 1;\n                *(param_1 + 0x23) = 1;\n                *(param_1 + 0x25) = 1;\n                if (var_44h._2_1_ == '\\x01') {\n                    *(param_1 + 9) = 1;\n                }\n                else {\n                    *(param_1 + 0x27) = 1;\n                    *(param_1 + 0x26) = 1;\n                }\n            }\n            else if (iVar5 == 2) {\n                *(param_1 + 0x27) = 1;\n                *(param_1 + 0x25) = 1;\n                *(param_1 + 0x21) = 1;\n                *(param_1 + 0x29) = 1;\n                if (var_44h._2_1_ == '\\x01') {\n                    *(param_1 + 10) = 1;\n                }\n                else {\n                    *(param_1 + 0x2b) = 1;\n                    *(param_1 + 0x2a) = 1;\n                }\n            }\n            else if (iVar5 == 3) {\n                *(param_1 + 0x2b) = 1;\n                *(param_1 + 0x29) = 1;\n                *(param_1 + 0x27) = 1;\n                *(param_1 + 0x25) = 1;\n                *(param_1 + 0x21) = 1;\n                *(param_1 + 0x2d) = 1;\n                if (var_44h._2_1_ == '\\x01') {\n                    *(param_1 + 0xb) = 1;\n                }\n                else {\n                    *(param_1 + 0x2f) = 1;\n                    *(param_1 + 0x2e) = 1;\n                }\n            }\n        }\n        goto code_r0x0041e54d;\n    }\n    if (param_1[1] == 1) {\n        *(param_1 + 0x1d) = 1;\ncode_r0x00472a01:\n        *(param_1 + 7) = 1;\n    }\n    else if (param_1[1] == 2) {\n        *(param_1 + 0x1d) = 1;\n        *(param_1 + 0x1f) = 1;\n        if (var_44h._2_1_ == '\\x01') goto code_r0x00472a01;\n        *(param_1 + 0x1e) = 1;\n    }\n    *(param_1 + 0xd) = var_44h >> 6 & 1;\ncode_r0x0041e54d:\n    var_10h = 0;\n    var_8h = 0;\n    cVar1 = fcn.0041e6d1();\n    if (cVar1 != '\\0') {\n        var_4h = 0;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_4h);\n        pcVar3 = fcn.0041e70e(uVar2);\n        (*pcVar3)();\n        if (var_4h == 1) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    pcVar3 = _sym.imp.KERNEL32.dll_FreeLibrary;\n    lpSystemInfo = 0;\n    puVar6 = &var_3ch;\n    for (iVar5 = 8; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    if (*(param_1 + 0xc) == '\\0') {\n        (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n    }\n    else {\n        var_1ch = 0;\n        var_14h = 0;\n        cVar1 = fcn.0041e694();\n        if (cVar1 == '\\0') {\n            (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n        }\n        else {\n            pcVar4 = fcn.0041e437();\n            (*pcVar4)();\n        }\n        if (var_1ch != 0) {\n            (*pcVar3)(var_1ch);\n        }\n    }\n    *(param_1 + 0x32) = lpSystemInfo;\n    if (var_10h != 0) {\n        (*pcVar3)(var_10h);\n    }\n    return param_1;\n}\n",
        "token_count": 1618
    },
    "0041e6a6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e6a6(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32.dll\");\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"GetNativeSystemInfo\");\n            param_1[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0041e6e3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e6e3(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32.dll\");\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"IsWow64Process\");\n            param_1[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0041e76d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t __fastcall fcn.0041e76d(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint lpMsg;\n    int32_t var_18h;\n    \n    if ((*0x4c10b7 == '\\0') || (*(param_1 + 0x149) != '\\0')) {\n        if ((*0x4c1848 == '\\0') || (*(param_1 + 0xfc) != 0)) {\n            while (iVar2 = (*_sym.imp.USER32.dll_PeekMessageW)(&fcn.0041e76d::lpMsg, 0, 0, 0, 1),  iVar2 != 0) {\n                if (var_18h == 0x12) {\n                    *(param_1 + 0x100) = 1;\n                    *(param_1 + 0xfc) = 1;\n                    break;\n                }\n                iVar2 = fcn.0041f381(0x41e7bd);\n                if ((iVar2 == 0) && (iVar2 = fcn.0041ed1a(&fcn.0041e76d::lpMsg),  iVar2 == 0)) {\n                    (*_sym.imp.USER32.dll_TranslateMessage)(&fcn.0041e76d::lpMsg);\n                    (*_sym.imp.USER32.dll_DispatchMessageW)(&fcn.0041e76d::lpMsg);\n                }\n            }\n            cVar3 = *0x4c10c5;\n            if (*0x4c10c0 == '\\x01') {\n                *0x4c10c5 = '\\0';\n                *0x4c10c0 = '\\0';\n                *(param_1 + 0xfc) = 1;\n                cVar3 = '\\0';\n            }\n            if (*(param_1 + 0xfc) == 1) {\n                uVar1 = 1;\n            }\n            else {\n                uVar1 = -(cVar3 != '\\0') & 0xb;\n            }\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 495
    },
    "0041eea2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041eea2(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char cVar4;\n    int32_t in_ECX;\n    \n    cVar4 = fcn.0041f0f3(&arg_8h, **(arg_8h + 4), 0xffffffff);\n    puVar3 = arg_ch;\n    iVar2 = arg_8h;\n    if (cVar4 == '\\0') {\n        fcn.00412570();\n        *puVar3 = 0;\n        puVar3[3] = 1;\n    }\n    else {\n        piVar1 = **(*(in_ECX + 0x198) + arg_8h * 4);\n        if (*piVar1 == 0) {\n            if (piVar1[1] != 0) {\n                fcn.00404592(piVar1[1]);\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_FindClose)(piVar1[2]);\n            fcn.0042017e(*(**(*(in_ECX + 0x198) + iVar2 * 4) + 0xc));\n        }\n        fcn.0042017e(**(*(in_ECX + 0x198) + iVar2 * 4));\n        **(*(in_ECX + 0x198) + iVar2 * 4) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 337
    },
    "0041f1c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0041f1c4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uVar3;\n    uint var_18h;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar3 = 0x8000;\n    var_1h._0_1_ = *0x4c10c1;\n    uVar2 = fcn.004235c3(param_1);\n    arg_ch = fcn.004233f5(uVar2, uVar3);\n    cVar1 = fcn.0040d2c0(0xb);\n    if (cVar1 == '\\0') {\n        fcn.0040a6d4();\n        fcn.004084a6();\n        fcn.0041f26b(*(param_2 + 8), &var_18h);\n        var_8h = fcn.004237bc(param_1, 0x4aec3c, var_18h);\n        if (var_1h != '\\0') {\n            fcn.004084a6();\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(**(param_2 + 8));\n        }\n        fcn.00405cd3();\n        uVar2 = var_8h;\n    }\n    else {\n        uVar2 = param_1;\n        uVar3 = fcn.0044be8a();\n        arg_ch_00 = 1;\n        arg_8h = fcn.0044be47();\n        uVar2 = fcn.0042373e(arg_8h, arg_ch_00, uVar3, uVar2);\n    }\n    fcn.00423981(param_1);\n    if (arg_ch == -1) {\n        arg_ch = 0x4000;\n    }\n    uVar3 = fcn.004235c3(param_1);\n    fcn.004233f5(uVar3, arg_ch);\n    return uVar2;\n}\n",
        "token_count": 498
    },
    "0041f2d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f2d0(int32_t arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    if (((arg_10h == 0) || (arg_10h == -1)) || (arg_8h == 0)) {\n        fcn.0044646d();\n    }\n    else {\n        cVar1 = fcn.00408176();\n        if (cVar1 == '\\0') {\n            fcn.0041f33f(arg_10h);\n        }\n        else {\n            *in_ECX[3] = *in_ECX[3] + -1;\n            fcn.0040a6f8();\n            iVar2 = fcn.00403d82(arg_10h + 1);\n            in_ECX[2] = iVar2;\n            iVar2 = fcn.0042010a(iVar2);\n            *in_ECX = iVar2;\n        }\n        in_ECX[1] = arg_10h;\n        fcn.0041faa0(*in_ECX, arg_8h, arg_10h);\n        *(arg_10h + *in_ECX) = 0;\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "0041f33f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f33f(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    cVar1 = fcn.00407f2f(arg_8h);\n    if (cVar1 == '\\0') {\n        iVar2 = fcn.00403d82(arg_8h + 1);\n        in_ECX[2] = iVar2;\n        if (*in_ECX != 0) {\n            fcn.0042017e(*in_ECX);\n        }\n        iVar2 = fcn.0042010a(in_ECX[2]);\n        *in_ECX = iVar2;\n        *(iVar2 + arg_8h) = 0;\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0041f381": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f381(uint lpMsg)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = *(in_ECX + 0x28);\n    if (iVar2 != -1) {\n        if (((iVar2 < *(in_ECX + 100)) && (puVar1 = **(*(in_ECX + 0x60) + iVar2 * 4),  puVar1 != NULL)) &&\n           (puVar1[6] != 0)) {\n            iVar2 = (*_sym.imp.USER32.dll_TranslateAcceleratorW)(*puVar1, puVar1[6], lpMsg);\n            if (iVar2 != 0) {\n                return 1;\n            }\n        }\n        else {\n            *(in_ECX + 0x28) = 0xffffffff;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "0041f41d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f41d(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_ch = *arg_ch + 1;\n    if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) == 0x7f) {\n        *0x4c10b0 = 1;\n        *(in_ECX + 0x148) = 1;\n        *(in_ECX + 0xfc) = 1;\n        return;\n    }\n    var_10h = 0;\n    var_8h = 0;\n    var_4h = 1;\n    iVar1 = fcn.0040fa40(arg_8h, arg_ch, &var_10h, 0xffffffff);\n    *0x4c10b0 = 1;\n    *(in_ECX + 0x148) = 1;\n    *(in_ECX + 0xfc) = 1;\n    if (-1 < iVar1) {\n        iVar1 = *(*(arg_8h + 4) + *arg_ch * 4);\n        if (*(iVar1 + 8) == 0x7f) {\n            *0x4c10bc = fcn.0040cdb4();\n            if ((*(in_ECX + 0x11c) == '\\0') || (0xfff < *0x4c10bc + 0x80001000U)) goto code_r0x00478620;\n            iVar1 = -1;\n            arg_8h_00 = 0xb9;\n        }\n        else {\n            iVar1 = *(iVar1 + 10);\n            arg_8h_00 = 0x72;\n        }\n        fcn.0044d520(arg_8h_00, iVar1);\n    }\ncode_r0x00478620:\n    fcn.00412570();\n    return;\n}\n",
        "token_count": 468
    },
    "0041f461": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f461(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    int32_t **ppiVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uchar *in_stack_fffffdc4;\n    uchar auStack552 [4];\n    int32_t iStack548;\n    uchar auStack532 [4];\n    uchar auStack528 [524];\n    \n    uVar7 = 0;\n    if (1 < *(arg_8h + 8)) {\n        in_stack_fffffdc4 = 0x41f48a;\n        uVar7 = fcn.0040cdb4();\n    }\n    if (((uVar7 & 8) != 0) && ((uVar7 & 3) != 0)) {\n        iVar3 = **(arg_8h + 4);\n        fcn.004084a6();\n        fcn.0042297d(**(iVar3 + 8), &stack0xfffffdd8, &stack0xfffffdf0, 0, 0);\n        in_stack_fffffdc4 = &stack0xfffffdd8;\n        fcn.0040caee(in_stack_fffffdc4);\n        fcn.004039e8(&stack0xfffffdec);\n        if ((iStack548 != 0) && ((cVar2 = fcn.00446f4b(),  cVar2 == '\\0' && (cVar2 = fcn.00446d6d(),  cVar2 == '\\0'))))\n        {\n            fcn.00412570();\n            *arg_ch = -1;\n            arg_ch[3] = 1;\n        }\n        iVar3 = fcn.0040cdb4();\n        if (iVar3 == -1) {\n            fcn.00405cd3();\n            return 0;\n        }\n        uVar7 = uVar7 ^ 8;\n        fcn.00405cd3();\n    }\n    iVar3 = fcn.0042010a(0x38);\n    if (iVar3 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = fcn.00405080();\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    cVar2 = fcn.00404bf9(*(iVar1 + 8), uVar7);\n    if (cVar2 == '\\0') {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00407ba9(uVar5, 0);\n        if (iVar3 != 0) {\n            fcn.00404592(extraout_ECX);\n        }\n        fcn.00412570();\n        *arg_ch = -1;\n    }\n    else {\n        uVar8 = 0;\n        uVar7 = *(in_stack_fffffdc4 + 0x19c);\n        if (uVar7 != 0) {\n            ppiVar6 = *(in_stack_fffffdc4 + 0x198);\n            do {\n                if (**ppiVar6 == 0) break;\n                uVar8 = uVar8 + 1;\n                ppiVar6 = ppiVar6 + 1;\n            } while (uVar8 < uVar7);\n        }\n        if (uVar8 == uVar7) {\n            puVar4 = fcn.0042010a(0x14);\n            fcn.0040197e(&stack0xfffffdc4);\n        }\n        else {\n            puVar4 = in_stack_fffffdc4;\n            uVar5 = fcn.0042010a(0x14);\n            **(*(in_stack_fffffdc4 + 0x198) + uVar8 * 4) = uVar5;\n        }\n        ***(*(in_stack_fffffdc4 + 0x198) + uVar8 * 4) = 0;\n        *(**(*(in_stack_fffffdc4 + 0x198) + uVar8 * 4) + 4) = puVar4;\n        fcn.00412570();\n        *arg_ch = uVar8 + 1;\n    }\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 973
    },
    "0041f66e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f66e(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    \n    uVar1 = 0;\n    arg_8h_00 = 5;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044be63();\n    }\n    if (*(arg_8h + 8) != 0) {\n        arg_8h_00 = fcn.0040cdb4();\n    }\n    uVar1 = fcn.0041f6b5(arg_8h_00, uVar1);\n    fcn.00412570();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 183
    },
    "0041f6b5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f6b5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint arg_8h_01;\n    uint uVar1;\n    \n    if (arg_ch != 0) {\n        *0x4c187c = fcn.0041af7d(arg_ch);\n    }\n    if (*0x4c187c == -1) {\n        return 0;\n    }\n    arg_8h_00 = **(*0x4c1870 + *0x4c187c * 4);\n    arg_8h_01 = *arg_8h_00;\n    if (*(arg_8h_00 + 0x3a) != '\\0') {\n        *(arg_8h_00 + 0x3a) = 0;\n        if ((-1 < arg_8h_00[99]) && (*(arg_8h_00 + 0x66) != '\\0')) {\n            fcn.0046e1a7(arg_8h_00, arg_8h_00[0x65]);\n            *(arg_8h_00 + 0x66) = 0;\n        }\n        if (arg_8h_00[0x69] != 0) {\n            (*_sym.imp.USER32.dll_DrawMenuBar)(*arg_8h_00);\n        }\n    }\n    if (8 < arg_8h) {\n        if (arg_8h != 9) {\n            if (arg_8h == 0x40) {\n                uVar1 = 1;\n            }\n            else {\n                if (arg_8h != 0x41) {\n                    if (arg_8h == 0x42) {\n                        *(arg_8h_00 + 0x39) = 1;\n                        (*_sym.imp.USER32.dll_LockWindowUpdate)(arg_8h_01);\n                        return 1;\n                    }\n                    if (arg_8h != 0x43) {\n                        return 1;\n                    }\n                    *(arg_8h_00 + 0x39) = 0;\n                    (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n                    (*_sym.imp.USER32.dll_InvalidateRect)(*arg_8h_00, 0, 1);\n                    return 1;\n                }\n                uVar1 = 0;\n            }\n            (*_sym.imp.USER32.dll_EnableWindow)(arg_8h_01, uVar1);\n            return 1;\n        }\ncode_r0x0047ebb5:\n        if (*(arg_8h_00 + 0xe) != '\\0') {\n            (*_sym.imp.USER32.dll_ShowWindow)(arg_8h_01, arg_8h);\n            fcn.0041f78e(arg_8h_01);\n            return 1;\n        }\n        return 0;\n    }\n    if (arg_8h != 8) {\n        if (arg_8h == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(arg_8h_01, 0);\n            *(arg_8h_00 + 0xe) = 0;\n            return 1;\n        }\n        if (arg_8h != 1) {\n            if (arg_8h == 2) {\n                *(arg_8h_00 + 0xe) = 1;\n            }\n            else {\n                if (arg_8h == 3) {\n                    *(arg_8h_00 + 0xe) = 1;\n                    goto code_r0x0047ebb5;\n                }\n                if (arg_8h < 4) {\n                    return 1;\n                }\n                if (arg_8h < 6) goto code_r0x0041f72f;\n                if (arg_8h != 6) {\n                    return 1;\n                }\n            }\n            if (*(arg_8h_00 + 0xe) != '\\0') {\n                (*_sym.imp.USER32.dll_ShowWindow)(arg_8h_01, 6);\n                return 1;\n            }\n            return 0;\n        }\n    }\ncode_r0x0041f72f:\n    if (*(arg_8h_00 + 0xe) == '\\0') {\n        (*_sym.imp.USER32.dll_ShowWindow)(arg_8h_01, arg_8h);\n        if ((arg_8h != 8) && (arg_8h != 4)) {\n            fcn.0041f78e(arg_8h_01);\n        }\n        *(arg_8h_00 + 0xe) = 1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 1040
    },
    "0041f7b2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f7b2(uint arg_8h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x10) != 0) {\n        iVar2 = fcn.004218fb(**(in_ECX + 0xc));\n        iVar3 = fcn.004218fb(arg_8h);\n        iVar1 = (iVar2 + 1 + iVar3) * 2;\n        arg_8h_00 = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n        fcn.00421943(arg_8h_00, **(in_ECX + 0xc));\n        fcn.00421914(arg_8h_00, arg_8h);\n        fcn.0042017e(**(in_ECX + 0xc));\n        **(in_ECX + 0xc) = arg_8h_00;\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "0041f92c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.0041f92c(code **arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint in_EDX;\n    float10 fVar3;\n    ulong uVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    for (pcVar2 = arg_8h[3]; pcVar2 != NULL; pcVar2 = pcVar2 + -1) {\n    }\n    pcVar2 = NULL;\n    if (arg_8h[1] != 0x1) {\n        pcVar2 = arg_8h[2];\n    }\n    if (arg_8h[9] != 0x1) {\n        if (arg_8h[8] == 0xa) {\n            fVar3 = (**arg_8h)();\n            *(arg_8h + 6) = fVar3;\n            goto code_r0x0041f9e3;\n        }\n        if (arg_8h[8] == 0x9) {\n            fVar3 = (**arg_8h)();\n            arg_8h[6] = fVar3;\n            goto code_r0x0041f9e3;\n        }\n        if (arg_8h[10] != 0x4) {\n            uVar4 = (**arg_8h)();\n            arg_8h[7] = uVar4 >> 0x20;\n            arg_8h[6] = uVar4;\n            goto code_r0x0041f9e3;\n        }\n    }\n    pcVar1 = (**arg_8h)();\n    arg_8h[6] = pcVar1;\ncode_r0x0041f9e3:\n    var_8h = pcVar2 + &stack0xffffffc8 == &stack0xffffffc8;\n    return CONCAT44(in_EDX, var_8h);\n}\n",
        "token_count": 455
    },
    "0041fa12": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.0041fa12(uint arg_8h)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0xbc615a != 0) {\n        puVar3 = 0xbc617e;\n        puVar4 = &arg_8h;\n        iVar2 = *0xbc615a;\n        while( true ) {\n            if (puVar3[4] == 4) {\n                *puVar3 = *puVar4;\n            }\n            else {\n                *puVar3 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar3[1] = *puVar4;\n            }\n            iVar2 = iVar2 + -1;\n            if (iVar2 == 0) break;\n            puVar4 = puVar4 + 1;\n            puVar3 = puVar3 + 6;\n        }\n    }\n    uVar1 = (*0xbc614e)(0xbc614e);\n    return uVar1;\n}\n",
        "token_count": 269
    },
    "0042746c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042746c(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.004228ca(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 81
    },
    "00421ee2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00421fd7: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00421fdc)\n// WARNING: Removing unreachable block (ram,0x0042200b)\n// WARNING: Removing unreachable block (ram,0x00421fe2)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00421ee2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00427750(0x4b6610, 0x1c);\n    fcn.00428984(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar5 = *0x4ba004;\n    if (*0x4c0114 != 1) {\n        *0x4c0108 = 1;\n        *0x4c0104 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (**0x4ba004)(*0x4c34c8);\n            *(unaff_EBP + -0x2c) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar5)(*0x4c34c4);\n                *(unaff_EBP + -0x1c) = piVar2;\n                *(unaff_EBP + -0x20) = piVar3;\n                do {\n                    *(unaff_EBP + -0x24) = piVar3;\n                    piVar7 = piVar3;\n                    do {\n                        do {\n                            piVar7 = piVar7 + -1;\n                            *(unaff_EBP + -0x24) = piVar7;\n                            if (piVar7 < piVar2) goto code_r0x00421fae;\n                            iVar4 = (**0x4ba000)(0);\n                        } while (*piVar7 == iVar4);\n                        if (piVar7 < piVar2) goto code_r0x00421fae;\n                        pcVar5 = (*pcVar5)(*piVar7);\n                        iVar4 = (**0x4ba000)(0);\n                        *piVar7 = iVar4;\n                        (*pcVar5)();\n                        pcVar5 = *0x4ba004;\n                        uVar6 = (**0x4ba004)(*0x4c34c8);\n                        *(unaff_EBP + -0x28) = uVar6;\n                        piVar3 = (*pcVar5)(*0x4c34c4);\n                        piVar1 = *(unaff_EBP + -0x28);\n                    } while ((*(unaff_EBP + -0x1c) == piVar1) && (*(unaff_EBP + -0x20) == piVar3));\n                    *(unaff_EBP + -0x1c) = piVar1;\n                    *(unaff_EBP + -0x2c) = piVar1;\n                    *(unaff_EBP + -0x20) = piVar3;\n                    piVar2 = piVar1;\n                } while( true );\n            }\ncode_r0x00421fae:\n            fcn.00421e92(0x48d8a8, 0x48d8b8);\n        }\n        fcn.00421e92(0x48d8bc, 0x48d8c0);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00428ae8(8);\n    }\n    return;\n}\n",
        "token_count": 918
    },
    "0042563d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042563d(uint param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((param_4 & 0xfffff) != 0) || (param_3 != 0)) {\n            uVar1 = fcn.0042ef0c();\n            goto code_r0x004256bb;\n        }\n        uVar1 = param_4 & 0x80000000;\n        if (uVar1 != 0) goto code_r0x004256ae;\n    }\n    else {\n        uVar1 = param_4;\n        if (in_FPUControlWord != 0x27f) {\n            uVar1 = fcn.0042eef5();\n        }\n        if (((uVar1 & 0x80000000) != 0) && ((((uVar1 & 0x7ff00000) != 0 || ((uVar1 & 0xfffff) != 0)) || (param_3 != 0)))\n           ) {\ncode_r0x004256ae:\n            uVar1 = 1;\ncode_r0x004256bb:\n            if (*0x4c0938 == 0) {\n                uVar3 = fcn.0042ee97(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            goto code_r0x0042ef7e;\n        }\n    }\n    if (*0x4c0938 == 0) {\n        uVar2 = uVar1 & 0xffff0000 | arg_8h & 0xffff;\n        if ((arg_8h & 0xffff) != 0x27f) {\n            if (((arg_8h & 0x20) != 0) &&\n               (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                uVar3 = fcn.0042ee97(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            uVar2 = uVar2 & 0xffff0020;\n        }\n        return CONCAT44(arg_8h, uVar2);\n    }\ncode_r0x0042ef7e:\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 644
    },
    "0042b72c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042b72c(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00427750(0x4b6948, 0x18);\n    iVar3 = -1;\n    *(unaff_EBP + -0x1c) = 0xffffffff;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.00428a0c(0xb);\n    if (iVar1 != 0) {\n        fcn.00428984(0xb);\n        *(unaff_EBP + -4) = 0;\n        for (iVar1 = 0; *(unaff_EBP + -0x28) = iVar1,  iVar1 < 0x40; iVar1 = iVar1 + 1) {\n            puVar2 = *(iVar1 * 4 + 0x4c0940);\n            if (puVar2 == NULL) {\n                puVar2 = fcn.00427616(0x20, 0x40);\n                *(unaff_EBP + -0x20) = puVar2;\n                if (puVar2 != NULL) {\n                    *(iVar1 * 4 + 0x4c0940) = puVar2;\n                    *0x4c241c = *0x4c241c + 0x20;\n                    while (puVar2 < *(iVar1 * 4 + 0x4c0940) + 0x800) {\n                        *(puVar2 + 1) = 0xa00;\n                        *puVar2 = 0xffffffff;\n                        puVar2[2] = 0;\n                        puVar2 = puVar2 + 0x10;\n                        *(unaff_EBP + -0x20) = puVar2;\n                    }\n                    iVar1 = iVar1 << 5;\n                    *(unaff_EBP + -0x1c) = iVar1;\n                    *(*((iVar1 >> 5) * 4 + 0x4c0940) + 4) = 1;\n                    iVar1 = fcn.0042b6a0(iVar1);\n                    if (iVar1 == 0) {\n                        *(unaff_EBP + -0x1c) = 0xffffffff;\n                    }\n                }\n                break;\n            }\n            for (; *(unaff_EBP + -0x20) = puVar2,  puVar2 < *(iVar1 * 4 + 0x4c0940) + 0x800; puVar2 = puVar2 + 0x10) {\n                if ((*(puVar2 + 1) & 1) == 0) {\n                    if (puVar2[2] == 0) {\n                        fcn.00428984(10);\n                        *(unaff_EBP + -4) = 1;\n                        if (puVar2[2] == 0) {\n                            (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(puVar2 + 3, 4000);\n                            puVar2[2] = puVar2[2] + 1;\n                        }\n                        *(unaff_EBP + -4) = 0;\n                        fcn.0042b800();\n                    }\n                    if (*(unaff_EBP + -0x24) == 0) {\n                        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar2 + 3);\n                        if ((*(puVar2 + 1) & 1) == 0) {\n                            if (*(unaff_EBP + -0x24) == 0) {\n                                *(puVar2 + 1) = 1;\n                                *puVar2 = 0xffffffff;\n                                iVar3 = (puVar2 - *(iVar1 * 4 + 0x4c0940) >> 6) + iVar1 * 0x20;\n                                *(unaff_EBP + -0x1c) = iVar3;\n                                break;\n                            }\n                        }\n                        else {\n                            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar2 + 3);\n                        }\n                    }\n                }\n            }\n            if (iVar3 != -1) break;\n        }\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0042b8c8();\n    }\n    fcn.00427795();\n    return;\n}\n",
        "token_count": 1026
    },
    "0042bdf6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x0042c112)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042bdf6(uint *arg_8h, uint *arg_ch, uint *nNumberOfBytesToWrite)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    char cVar12;\n    uint unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t iVar13;\n    uint *puVar14;\n    uint *puVar15;\n    uint CodePage;\n    uint var_1aech;\n    uint var_1ae8h;\n    uint lpMode;\n    uint *lpNumberOfBytesWritten;\n    uint *var_1ad8h;\n    int32_t var_1ad4h;\n    uint var_1ad0h;\n    uint *var_1acch;\n    uint *var_1ac8h;\n    uint *lpWideCharStr;\n    uint *var_1ac0h;\n    uint *var_1abch;\n    uint var_1ab8h;\n    uint var_1410h;\n    uint var_6b8h;\n    uint uStackY52;\n    uint uStackY48;\n    uint uStackY44;\n    uint *puStackY40;\n    int32_t iStackY36;\n    uint arg_10h;\n    uint32_t lpBuffer;\n    uint var_4h;\n    \n    fcn.00430650();\n    puVar14 = NULL;\n    var_1ac0h = arg_8h;\n    var_1abch = arg_ch;\n    lpWideCharStr = NULL;\n    var_1ad4h = 0;\n    if (nNumberOfBytesToWrite == NULL) goto code_r0x0042c613;\n    if (arg_ch == NULL) {\n        puVar14 = fcn.0042886a();\n        *puVar14 = 0;\n        puVar14 = fcn.0042889e();\n        *puVar14 = 0x16;\n        fcn.00427aa0();\n        goto code_r0x0042c613;\n    }\n    iVar9 = arg_8h >> 5;\n    iVar13 = (arg_8h & 0x1f) * 0x40;\n    iVar4 = *(iVar9 * 4 + 0x4c0940);\n    cVar12 = *(iVar13 + 0x24 + iVar4) * '\\x02' >> 1;\n    lpBuffer = unaff_ESI;\n    if (((cVar12 == '\\x02') || (cVar12 == '\\x01')) && ((~nNumberOfBytesToWrite & 1) == 0)) {\n        puVar14 = fcn.0042886a();\n        *puVar14 = 0;\n        puVar14 = fcn.0042889e();\n        *puVar14 = 0x16;\n        fcn.00427aa0();\n        goto code_r0x0042c613;\n    }\n    if ((*(iVar13 + 4 + iVar4) & 0x20) != 0) {\n        iStackY36 = 0x42becf;\n        fcn.004305df(arg_8h, 0, 0, 2);\n    }\n    iVar4 = fcn.004349a2(var_1ac0h);\n    puVar15 = puVar14;\n    if ((iVar4 == 0) || ((*(iVar13 + 4 + *(iVar9 * 4 + 0x4c0940)) & 0x80) == 0)) {\ncode_r0x0042c1fe:\n        iVar4 = *(iVar9 * 4 + 0x4c0940);\n        if ((*(iVar13 + 4 + iVar4) & 0x80) == 0) {\n            iStackY36 = *(iVar13 + iVar4);\n            puStackY40 = 0x42c586;\n            iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n            if (iVar4 == 0) {\ncode_r0x0042c594:\n                puVar8 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                puVar15 = puVar14;\n            }\n            else {\n                puVar8 = NULL;\n                puVar15 = var_1ad8h;\n            }\ncode_r0x0042c5a2:\n            if (puVar15 != NULL) goto code_r0x0042c613;\n            goto code_r0x0042c5a6;\n        }\n        puVar8 = NULL;\n        var_1ac8h = NULL;\n        if (cVar12 == '\\0') {\n            lpWideCharStr = var_1abch;\n            if (nNumberOfBytesToWrite == NULL) goto code_r0x0042c5ce;\n            do {\n                puVar14 = lpWideCharStr - var_1abch;\n                puVar6 = &fcn.0042bdf6::var_1ab8h;\n                var_1ac0h = NULL;\n                do {\n                    if (nNumberOfBytesToWrite <= puVar14) break;\n                    cVar12 = *lpWideCharStr;\n                    lpWideCharStr = lpWideCharStr + 1;\n                    puVar14 = puVar14 + 1;\n                    if (cVar12 == '\\n') {\n                        *puVar6 = '\\r';\n                        puVar6 = puVar6 + 1;\n                        var_1ac0h = var_1ac0h + 1;\n                    }\n                    *puVar6 = cVar12;\n                    puVar6 = puVar6 + 1;\n                    var_1ac0h = var_1ac0h + 1;\n                } while (var_1ac0h < 0x13ff);\n                iStackY36 = *(iVar13 + *(iVar9 * 4 + 0x4c0940));\n                puStackY40 = 0x42c2d1;\n                iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                puVar14 = puVar15;\n                if (iVar4 == 0) goto code_r0x0042c594;\n                puVar15 = puVar15 + var_1ad8h;\n            } while ((puVar6 - &fcn.0042bdf6::var_1ab8h <= var_1ad8h) &&\n                    (lpWideCharStr - var_1abch < nNumberOfBytesToWrite));\n            goto code_r0x0042c5a2;\n        }\n        if (cVar12 == '\\x02') {\n            var_1ac0h = var_1abch;\n            if (nNumberOfBytesToWrite != NULL) {\n                do {\n                    puVar14 = var_1ac0h - var_1abch;\n                    uVar11 = 0;\n                    puVar6 = &fcn.0042bdf6::var_1ab8h;\n                    do {\n                        if (nNumberOfBytesToWrite <= puVar14) break;\n                        uVar2 = *var_1ac0h;\n                        var_1ac0h = var_1ac0h + 2;\n                        puVar14 = puVar14 + 2;\n                        if (uVar2 == 10) {\n                            *puVar6 = 0xd;\n                            puVar6 = puVar6 + 2;\n                            uVar11 = uVar11 + 2;\n                        }\n                        *puVar6 = uVar2;\n                        uVar11 = uVar11 + 2;\n                        puVar6 = puVar6 + 2;\n                    } while (uVar11 < 0x13fe);\n                    iStackY36 = *(iVar13 + *(iVar9 * 4 + 0x4c0940));\n                    puStackY40 = 0x42c3cc;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                    puVar14 = lpWideCharStr;\n                    if (iVar4 == 0) goto code_r0x0042c594;\n                    lpWideCharStr = lpWideCharStr + var_1ad8h;\n                    puVar8 = var_1ac8h;\n                    puVar15 = lpWideCharStr;\n                } while ((puVar6 - &fcn.0042bdf6::var_1ab8h <= var_1ad8h) &&\n                        (var_1ac0h - var_1abch < nNumberOfBytesToWrite));\n                goto code_r0x0042c5a2;\n            }\n        }\n        else {\n            lpNumberOfBytesWritten = var_1abch;\n            if (nNumberOfBytesToWrite != NULL) {\n                do {\n                    puVar15 = lpNumberOfBytesWritten - var_1abch;\n                    uVar11 = 0;\n                    puVar14 = &fcn.0042bdf6::var_6b8h;\n                    do {\n                        if (nNumberOfBytesToWrite <= puVar15) break;\n                        uVar2 = *lpNumberOfBytesWritten;\n                        lpNumberOfBytesWritten = lpNumberOfBytesWritten + 2;\n                        puVar15 = puVar15 + 2;\n                        if (uVar2 == 10) {\n                            *puVar14 = 0xd;\n                            puVar14 = puVar14 + 2;\n                            uVar11 = uVar11 + 2;\n                        }\n                        *puVar14 = uVar2;\n                        uVar11 = uVar11 + 2;\n                        puVar14 = puVar14 + 2;\n                    } while (uVar11 < 0x6a8);\n                    puStackY40 = &fcn.0042bdf6::var_6b8h;\n                    iStackY36 = (puVar14 - puStackY40) / 2;\n                    uStackY44 = 0;\n                    uStackY48 = 0xfde9;\n                    uStackY52 = 0x42c4b8;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    puVar15 = lpWideCharStr;\n                    puVar14 = lpWideCharStr;\n                    if (iVar4 == 0) goto code_r0x0042c594;\n                    var_1ac0h = NULL;\n                    do {\n                        iStackY36 = *(iVar13 + *(iVar9 * 4 + 0x4c0940));\n                        puStackY40 = 0x42c50b;\n                        iVar7 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                        if (iVar7 == 0) {\n                            var_1ac8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                            break;\n                        }\n                        var_1ac0h = var_1ac0h + var_1ad8h;\n                    } while (var_1ac0h < iVar4);\n                    puVar8 = var_1ac8h;\n                } while ((iVar4 <= var_1ac0h) &&\n                        (lpWideCharStr = lpNumberOfBytesWritten - var_1abch,  puVar15 = lpWideCharStr, \n                        lpWideCharStr < nNumberOfBytesToWrite));\n                goto code_r0x0042c5a2;\n            }\n        }\n    }\n    else {\n        iVar4 = fcn.0042869d();\n        var_1ac0h = *(*(iVar4 + 0x6c) + 0xa8) == 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)();\n        if ((iVar4 == 0) || ((var_1ac0h != NULL && (cVar12 == '\\0')))) goto code_r0x0042c1fe;\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetConsoleCP)();\n        var_1acch = var_1abch;\n        puVar8 = var_1ac0h;\n        if (nNumberOfBytesToWrite != NULL) {\n            puVar6 = NULL;\n            var_1ac8h = NULL;\n            puVar10 = var_1abch;\n            do {\n                puVar14 = puVar15;\n                if (cVar12 == '\\0') {\n                    cVar1 = *puVar10;\n                    var_1ac0h = cVar1 == '\\n';\n                    iVar4 = *(iVar9 * 4 + 0x4c0940);\n                    if (*(iVar13 + 0x38 + iVar4) == 0) {\n                        iVar4 = fcn.004222a8(cVar1);\n                        if (iVar4 == 0) {\n                            arg_10h = 1;\n                            puVar8 = var_1acch;\n                            goto code_r0x0042c024;\n                        }\n                        if ((var_1abch - var_1acch) + nNumberOfBytesToWrite < 0x2) {\n                            puVar15 = puVar15 + 1;\n                            *(iVar13 + 0x34 + *(iVar9 * 4 + 0x4c0940)) = *var_1acch;\n                            *(iVar13 + 0x38 + *(iVar9 * 4 + 0x4c0940)) = 1;\n                            puVar8 = var_1ac0h;\n                            break;\n                        }\n                        iVar4 = fcn.00434ea7(&fcn.0042bdf6::lpWideCharStr, var_1acch, 2);\n                        puVar8 = var_1ac0h;\n                        if (iVar4 == -1) break;\n                        var_1acch = var_1acch + 1;\n                        var_1ac8h = var_1ac8h + 1;\n                    }\n                    else {\n                        arg_10h = 2;\n                        lpBuffer._0_2_ = CONCAT11(cVar1, *(iVar13 + 0x34 + iVar4));\n                        lpBuffer = lpBuffer & 0xffff0000 | lpBuffer;\n                        *(iVar13 + 0x38 + iVar4) = 0;\n                        puVar8 = &fcn.0042bdf6::lpBuffer;\ncode_r0x0042c024:\n                        iVar4 = fcn.00434ea7(&fcn.0042bdf6::lpWideCharStr, puVar8, arg_10h);\n                        puVar8 = var_1ac0h;\n                        if (iVar4 == -1) break;\n                    }\n                    var_1acch = var_1acch + 1;\n                    var_1ac8h = var_1ac8h + 1;\n                    iStackY36 = 1;\n                    puStackY40 = &fcn.0042bdf6::lpWideCharStr;\n                    uStackY44 = 0;\n                    uStackY52 = 0x42c06f;\n                    uStackY48 = uVar5;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    puVar8 = var_1ac0h;\n                    if (iVar4 == 0) break;\n                    iStackY36 = *(iVar13 + *(iVar9 * 4 + 0x4c0940));\n                    puStackY40 = 0x42c0a1;\n                    iVar7 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                    if (iVar7 == 0) goto code_r0x0042c594;\n                    puVar15 = var_1ac8h + var_1ad4h;\n                    puVar8 = var_1ac0h;\n                    if (0 < iVar4) break;\n                    puVar6 = var_1ac8h;\n                    puVar10 = var_1acch;\n                    puVar14 = puVar15;\n                    if (var_1ac0h != NULL) {\n                        lpBuffer = CONCAT31(lpBuffer._1_3_, 0xd);\n                        iStackY36 = *(iVar13 + *(iVar9 * 4 + 0x4c0940));\n                        puStackY40 = 0x42c0fd;\n                        iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                        puVar8 = var_1ac0h;\n                        if (iVar4 == 0) goto code_r0x0042c594;\n                        break;\n                    }\n                }\n                else {\n                    if ((cVar12 == '\\x01') || (cVar12 == '\\x02')) {\n                        lpWideCharStr = *puVar10;\n                        var_1ac0h = *puVar10 == 10;\n                        puVar10 = puVar10 + 2;\n                        puVar6 = var_1ac8h + 2;\n                        var_1acch = puVar10;\n                        var_1ac8h = puVar6;\n                    }\n                    if ((cVar12 == '\\x01') || (cVar12 == '\\x02')) {\n                        iVar3 = fcn.00436634(lpWideCharStr);\n                        if (iVar3 != lpWideCharStr) goto code_r0x0042c594;\n                        puVar6 = var_1ac8h;\n                        puVar10 = var_1acch;\n                        puVar14 = puVar15 + 2;\n                        if (var_1ac0h != NULL) {\n                            lpWideCharStr = 0xd;\n                            iVar3 = fcn.00436634(0xd);\n                            if (iVar3 != lpWideCharStr) goto code_r0x0042c594;\n                            var_1ad4h = var_1ad4h + 1;\n                            puVar14 = puVar15 + 3;\n                        }\n                    }\n                }\n                puVar15 = puVar14;\n                puVar8 = var_1ac0h;\n            } while (puVar6 < nNumberOfBytesToWrite);\n            goto code_r0x0042c5a2;\n        }\ncode_r0x0042c5a6:\n        if (puVar8 != NULL) {\n            if (puVar8 == 0x5) {\n                puVar14 = fcn.0042889e();\n                *puVar14 = 9;\n                puVar14 = fcn.0042886a();\n                *puVar14 = 5;\n            }\n            else {\n                fcn.0042887d(puVar8);\n            }\n            goto code_r0x0042c613;\n        }\n    }\ncode_r0x0042c5ce:\n    if (((*(iVar13 + 4 + *(iVar9 * 4 + 0x4c0940)) & 0x40) == 0) || (*var_1abch != '\\x1a')) {\n        puVar14 = fcn.0042889e();\n        *puVar14 = 0x1c;\n        puVar14 = fcn.0042886a();\n        *puVar14 = 0;\n    }\ncode_r0x0042c613:\n    fcn.0042b4bf(unaff_EBP);\n    return;\n}\n",
        "token_count": 4250
    },
    "0042c620": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042c620(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    code *pcVar5;\n    char *pcVar6;\n    uint8_t *puVar7;\n    uint *puVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t extraout_ECX;\n    int32_t iVar11;\n    uint unaff_EBX;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    char *pcVar15;\n    bool bVar16;\n    int64_t iVar17;\n    int32_t *var_280h;\n    int32_t *var_27ch;\n    uint var_278h;\n    int32_t var_270h;\n    uint var_26ch;\n    int32_t *var_264h;\n    uint var_260h;\n    int32_t var_25ch;\n    int32_t *var_258h;\n    uint var_254h;\n    int32_t var_250h;\n    uint32_t var_24ch;\n    int32_t var_248h;\n    int32_t var_244h;\n    char *var_240h;\n    int32_t var_23ch;\n    int32_t *var_238h;\n    int32_t var_234h;\n    int32_t var_230h;\n    uint var_22ch;\n    int32_t *var_228h;\n    char *var_224h;\n    int32_t var_220h;\n    int32_t **var_21ch;\n    int32_t *var_218h;\n    uint8_t var_211h;\n    uint8_t *var_210h;\n    uint var_20ch;\n    uchar var_dh;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4badc0 ^ &stack0xfffffffc;\n    var_230h = arg_8h;\n    piVar12 = NULL;\n    var_210h = arg_ch;\n    var_21ch = arg_14h;\n    var_250h = 0;\n    var_218h = NULL;\n    var_238h = NULL;\n    var_228h = NULL;\n    var_234h = 0;\n    var_248h = 0;\n    var_23ch = 0;\n    fcn.00421b3f(arg_10h);\n    var_254h = fcn.0042889e();\n    if (var_230h != 0) {\n        if ((*(var_230h + 0xc) & 0x40) == 0) {\n            uVar4 = fcn.004235c3(var_230h);\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar11 = 0x4badd0;\n            }\n            else {\n                iVar11 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x4c0940);\n            }\n            if ((*(iVar11 + 0x24) & 0x7f) == 0) {\n                if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                    iVar11 = 0x4badd0;\n                }\n                else {\n                    iVar11 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x4c0940);\n                }\n                if ((*(iVar11 + 0x24) & 0x80) == 0) goto code_r0x0042c70f;\n            }\n        }\n        else {\ncode_r0x0042c70f:\n            if (arg_ch != NULL) {\n                var_211h = *arg_ch;\n                iVar11 = 0;\n                var_220h = 0;\n                var_224h = NULL;\n                var_244h = 0;\n                var_258h = NULL;\n                var_24ch = var_24ch & 0xffffff00 | var_211h;\n                piVar10 = var_264h;\n                puVar3 = var_210h;\n                while ((var_211h != 0 && (var_210h = puVar3 + 1,  -1 < iVar11))) {\n                    if (var_211h - 0x20 < 0x59) {\n                        uVar4 = *(var_211h + 0x48ede8) & 0xf;\n                    }\n                    else {\n                        uVar4 = 0;\n                    }\n                    var_244h = *(var_244h + 0x48ee08 + uVar4 * 8) >> 4;\n                    puVar7 = var_210h;\n    // switch table (8 cases) at 0x42d188\n                    switch(var_244h) {\n                    case 0:\ncode_r0x0042c9bb:\n                        var_23ch = 0;\n                        iVar11 = fcn.00422272(var_211h, &var_278h);\n                        if (iVar11 != 0) {\n                            fcn.0042d1a8(var_24ch, var_230h, &var_220h);\n                            uVar1 = *var_210h;\n                            var_210h = var_210h + 1;\n                            var_24ch = var_24ch & 0xffffff00 | uVar1;\n                            if (uVar1 == 0) goto code_r0x0042d171;\n                        }\n                        fcn.0042d1a8(var_24ch, var_230h, &var_220h);\n                        puVar7 = var_210h;\n                        iVar11 = var_220h;\n                        break;\n                    case 1:\n                        var_228h = 0xffffffff;\n                        piVar12 = NULL;\n                        var_260h = 0;\n                        var_248h = 0;\n                        var_238h = NULL;\n                        var_234h = 0;\n                        var_218h = NULL;\n                        var_23ch = 0;\n                        break;\n                    case 2:\n                        if (var_211h == 0x20) {\n                            piVar12 = piVar12 | 2;\n                            var_218h = piVar12;\n                        }\n                        else if (var_211h == 0x23) {\n                            piVar12 = piVar12 | 0x80;\n                            var_218h = piVar12;\n                        }\n                        else if (var_211h == 0x2b) {\n                            piVar12 = piVar12 | 1;\n                            var_218h = piVar12;\n                        }\n                        else if (var_211h == 0x2d) {\n                            piVar12 = piVar12 | 4;\n                            var_218h = piVar12;\n                        }\n                        else if (var_211h == 0x30) {\n                            piVar12 = piVar12 | 8;\n                            var_218h = piVar12;\n                        }\n                        break;\n                    case 3:\n                        if (var_211h == 0x2a) {\n                            var_238h = *var_21ch;\n                            var_21ch = var_21ch + 1;\n                            if (var_238h < 0) {\n                                piVar12 = piVar12 | 4;\n                                var_238h = -var_238h;\n                                var_218h = piVar12;\n                            }\n                        }\n                        else {\n                            var_238h = var_238h * 10 + -0x30 + var_211h;\n                        }\n                        break;\n                    case 4:\n                        var_228h = NULL;\n                        break;\n                    case 5:\n                        if (var_211h == 0x2a) {\n                            var_228h = *var_21ch;\n                            var_21ch = var_21ch + 1;\n                            if (var_228h < 0) {\n                                var_228h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_228h = var_228h * 10 + -0x30 + var_211h;\n                            iVar11 = var_220h;\n                        }\n                        break;\n                    case 6:\n                        if (var_211h == 0x49) {\n                            uVar1 = *var_210h;\n                            if ((uVar1 == 0x36) && (puVar3[2] == 0x34)) {\n                                piVar12 = piVar12 | 0x8000;\n                                puVar7 = puVar3 + 3;\n                                var_218h = piVar12;\n                            }\n                            else if ((uVar1 == 0x33) && (puVar3[2] == 0x32)) {\n                                piVar12 = piVar12 & 0xffff7fff;\n                                puVar7 = puVar3 + 3;\n                                var_218h = piVar12;\n                            }\n                            else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                                     ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                                var_244h = 0;\n                                goto code_r0x0042c9bb;\n                            }\n                        }\n                        else if (var_211h == 0x68) {\n                            piVar12 = piVar12 | 0x20;\n                            var_218h = piVar12;\n                        }\n                        else if (var_211h == 0x6c) {\n                            if (*var_210h == 0x6c) {\n                                piVar12 = piVar12 | 0x1000;\n                                puVar7 = puVar3 + 2;\n                                var_218h = piVar12;\n                            }\n                            else {\n                                piVar12 = piVar12 | 0x10;\n                                var_218h = piVar12;\n                            }\n                        }\n                        else if (var_211h == 0x77) {\n                            piVar12 = piVar12 | 0x800;\n                            var_218h = piVar12;\n                        }\n                        break;\n                    case 7:\n                        if (var_211h < 'e') {\n                            if (var_211h == 100) {\ncode_r0x0042cc92:\n                                piVar12 = piVar12 | 0x40;\n                                var_218h = piVar12;\ncode_r0x0042cc9b:\n                                var_224h = 0xa;\ncode_r0x0042cca5:\n                                if (((piVar12 & 0x8000) == 0) && ((piVar12 & 0x1000) == 0)) {\n                                    if ((piVar12 & 0x20) == 0) {\n                                        if ((piVar12 & 0x40) == 0) {\n                                            piVar10 = *var_21ch;\n                                            piVar9 = NULL;\n                                            var_21ch = var_21ch + 1;\n                                            goto code_r0x0042ce7c;\n                                        }\n                                        piVar10 = *var_21ch;\n                                    }\n                                    else if ((piVar12 & 0x40) == 0) {\n                                        piVar10 = *var_21ch;\n                                    }\n                                    else {\n                                        piVar10 = *var_21ch;\n                                    }\n                                    piVar9 = piVar10 >> 0x1f;\n                                    var_21ch = var_21ch + 1;\n                                }\n                                else {\n                                    piVar10 = *var_21ch;\n                                    piVar9 = var_21ch[1];\n                                    var_21ch = var_21ch + 2;\n                                }\ncode_r0x0042ce7c:\n                                if ((((piVar12 & 0x40) != 0) && (piVar9 < 1)) && (piVar9 < 0)) {\n                                    bVar16 = piVar10 != NULL;\n                                    piVar10 = -piVar10;\n                                    piVar9 = -(piVar9 + bVar16);\n                                    piVar12 = piVar12 | 0x100;\n                                    var_218h = piVar12;\n                                }\n                                if ((piVar12 & 0x9000) == 0) {\n                                    piVar9 = NULL;\n                                }\n                                iVar17 = CONCAT44(piVar9, piVar10);\n                                if (var_228h < 0) {\n                                    var_228h = 0x1;\n                                }\n                                else {\n                                    piVar12 = piVar12 & 0xfffffff7;\n                                    var_218h = piVar12;\n                                    if (0x200 < var_228h) {\n                                        var_228h = 0x200;\n                                    }\n                                }\n                                if ((piVar10 | piVar9) == 0) {\n                                    var_234h = 0;\n                                }\n                                piVar9 = &var_dh;\n                                while ((piVar13 = var_228h + -1,  0 < var_228h || (iVar17 != 0))) {\n                                    var_228h = piVar13;\n                                    iVar17 = fcn.00429520();\n                                    var_240h = iVar17;\n                                    iVar11 = extraout_ECX + 0x30;\n                                    if (0x39 < iVar11) {\n                                        iVar11 = iVar11 + var_250h;\n                                    }\n                                    *piVar9 = iVar11;\n                                    piVar9 = piVar9 + -1;\n                                    var_264h = piVar12;\n                                }\n                                var_224h = &var_dh + -piVar9;\n                                piVar10 = piVar9 + 1;\n                                piVar12 = var_218h;\n                                var_228h = piVar13;\n                                if (((var_218h & 0x200) != 0) && ((var_224h == NULL || (*piVar10 != '0')))) {\n                                    var_224h = &var_ch + -piVar9;\n                                    *piVar9 = '0';\n                                    piVar10 = piVar9;\n                                }\n                            }\n                            else if (var_211h < 'T') {\n                                if (var_211h == 0x53) {\n                                    if ((piVar12 & 0x830) == 0) {\n                                        piVar12 = piVar12 | 0x800;\n                                        var_218h = piVar12;\n                                    }\n                                    goto code_r0x0042cadc;\n                                }\n                                if (var_211h == 0x41) {\ncode_r0x0042ca61:\n                                    var_211h = var_211h + 0x20;\n                                    var_260h = 1;\ncode_r0x0042ca74:\n                                    piVar13 = piVar12 | 0x40;\n                                    var_240h = 0x200;\n                                    piVar14 = &var_20ch;\n                                    pcVar15 = var_240h;\n                                    var_218h = piVar13;\n                                    if (var_228h < 0) {\n                                        var_228h = 0x6;\n                                    }\n                                    else if (var_228h == NULL) {\n                                        if (var_211h == 0x67) {\n                                            var_228h = 0x1;\n                                        }\n                                    }\n                                    else {\n                                        if (0x200 < var_228h) {\n                                            var_228h = 0x200;\n                                        }\n                                        if (0xa3 < var_228h) {\n                                            pcVar15 = var_228h + 0x15d;\n                                            var_258h = fcn.00427660(pcVar15);\n                                            piVar14 = var_258h;\n                                            if (var_258h == NULL) {\n                                                var_228h = 0xa3;\n                                                piVar14 = &var_20ch;\n                                                pcVar15 = var_240h;\n                                            }\n                                        }\n                                    }\n                                    var_240h = pcVar15;\n                                    var_280h = *var_21ch;\n                                    var_27ch = var_21ch[1];\n                                    var_21ch = var_21ch + 2;\n                                    pcVar5 = (**0x4ba004)(*0x4bada4, &var_280h, piVar14, var_240h, var_211h, var_228h, \n                                                          var_260h, &var_278h);\n                                    (*pcVar5)();\n                                    if (((piVar12 & 0x80) != 0) && (var_228h == NULL)) {\n                                        pcVar5 = (**0x4ba004)(*0x4badb0, piVar14, &var_278h);\n                                        (*pcVar5)();\n                                    }\n                                    if ((var_211h == 0x67) && ((piVar12 & 0x80) == 0)) {\n                                        pcVar5 = (**0x4ba004)(*0x4badac, piVar14, &var_278h);\n                                        (*pcVar5)();\n                                    }\n                                    if (*piVar14 == '-') {\n                                        var_218h = piVar12 | 0x140;\n                                        piVar13 = var_218h;\n                                        piVar14 = piVar14 + 1;\n                                    }\ncode_r0x0042cbfc:\n                                    piVar10 = piVar14;\n                                    piVar12 = piVar13;\n                                    var_224h = fcn.004223f0();\n                                }\n                                else if (var_211h == 0x43) {\n                                    if ((piVar12 & 0x830) == 0) {\n                                        piVar12 = piVar12 | 0x800;\n                                        var_218h = piVar12;\n                                    }\ncode_r0x0042cb55:\n                                    if ((piVar12 & 0x810) == 0) {\n                                        var_20ch._0_1_ = *var_21ch;\n                                        var_224h = 0x1;\n                                        var_21ch = var_21ch + 1;\n                                    }\n                                    else {\n                                        uVar2 = *var_21ch;\n                                        var_21ch = var_21ch + 1;\n                                        iVar11 = fcn.00436797(&var_224h, &var_20ch, 0x200, uVar2);\n                                        if (iVar11 != 0) {\n                                            var_248h = 1;\n                                        }\n                                    }\n                                    piVar10 = &var_20ch;\n                                }\n                                else if ((var_211h == 0x45) || (var_211h == 0x47)) goto code_r0x0042ca61;\n                            }\n                            else {\n                                if (var_211h == 0x58) goto code_r0x0042cdf0;\n                                if (var_211h == 0x5a) {\n                                    piVar9 = *var_21ch;\n                                    var_21ch = var_21ch + 1;\n                                    piVar13 = piVar12;\n                                    piVar14 = *0x4bae10;\n                                    if ((piVar9 == NULL) || (piVar10 = piVar9[1],  piVar10 == NULL))\n                                    goto code_r0x0042cbfc;\n                                    var_224h = *piVar9;\n                                    if ((piVar12 & 0x800) == 0) {\n                                        var_23ch = 0;\n                                    }\n                                    else {\n                                        var_224h = var_224h / 2;\n                                        var_23ch = 1;\n                                    }\n                                }\n                                else {\n                                    if (var_211h == 0x61) goto code_r0x0042ca74;\n                                    if (var_211h == 99) goto code_r0x0042cb55;\n                                }\n                            }\ncode_r0x0042cf79:\n                            if (var_248h == 0) {\n                                if ((piVar12 & 0x40) != 0) {\n                                    if ((piVar12 & 0x100) == 0) {\n                                        if ((piVar12 & 1) == 0) {\n                                            if ((piVar12 & 2) == 0) goto code_r0x0042cfc0;\n                                            var_22ch._0_1_ = 0x20;\n                                        }\n                                        else {\n                                            var_22ch._0_1_ = 0x2b;\n                                        }\n                                    }\n                                    else {\n                                        var_22ch._0_1_ = 0x2d;\n                                    }\n                                    var_234h = 1;\n                                }\ncode_r0x0042cfc0:\n                                pcVar15 = var_238h + (-var_234h - var_224h);\n                                if ((piVar12 & 0xc) == 0) {\n                                    fcn.0042d1ee(0x20, pcVar15, var_230h, &var_220h);\n                                }\n                                fcn.0042d21a(&var_22ch, var_234h, var_230h, &var_220h, var_254h);\n                                if (((piVar12 & 8) != 0) && ((piVar12 & 4) == 0)) {\n                                    fcn.0042d1ee(0x30, pcVar15, var_230h, &var_220h);\n                                }\n                                if ((var_23ch == 0) || (pcVar6 = var_224h,  piVar9 = piVar10,  var_224h < 1)) {\n                                    fcn.0042d21a(piVar10, var_224h, var_230h, &var_220h, var_254h);\n                                }\n                                else {\n                                    do {\n                                        var_240h = pcVar6 + -1;\n                                        var_264h = piVar9 + 2;\n                                        iVar11 = fcn.00436797(&var_25ch, &var_ch, 6, *piVar9);\n                                        if ((iVar11 != 0) || (var_25ch == 0)) {\n                                            var_220h = -1;\n                                            break;\n                                        }\n                                        fcn.0042d21a(&var_ch, var_25ch, var_230h, &var_220h, var_254h);\n                                        pcVar6 = var_240h;\n                                        piVar9 = var_264h;\n                                    } while (var_240h != NULL);\n                                }\n                                if ((-1 < var_220h) && ((piVar12 & 4) != 0)) {\n                                    fcn.0042d1ee(0x20, pcVar15, var_230h, &var_220h);\n                                }\n                            }\n                        }\n                        else {\n                            if ('p' < var_211h) {\n                                if (var_211h == 0x73) {\ncode_r0x0042cadc:\n                                    piVar9 = 0x7fffffff;\n                                    if (var_228h != 0xffffffff) {\n                                        piVar9 = var_228h;\n                                    }\n                                    piVar13 = *var_21ch;\n                                    var_21ch = var_21ch + 1;\n                                    piVar10 = piVar13;\n                                    if ((piVar12 & 0x810) == 0) {\n                                        if (piVar13 == NULL) {\n                                            piVar13 = *0x4bae10;\n                                            piVar10 = *0x4bae10;\n                                        }\n                                        for (; (piVar9 != NULL && (piVar9 = piVar9 + -1,  *piVar13 != '\\0'));\n                                            piVar13 = piVar13 + 1) {\n                                        }\n                                        var_224h = piVar13 - piVar10;\n                                    }\n                                    else {\n                                        if (piVar13 == NULL) {\n                                            piVar10 = *0x4bae14;\n                                        }\n                                        var_23ch = 1;\n                                        for (piVar13 = piVar10;\n                                            (piVar9 != NULL && (piVar9 = piVar9 + -1,  *piVar13 != 0));\n                                            piVar13 = piVar13 + 2) {\n                                        }\n                                        var_224h = piVar13 - piVar10 >> 1;\n                                    }\n                                    goto code_r0x0042cf79;\n                                }\n                                if (var_211h == 0x75) goto code_r0x0042cc9b;\n                                if (var_211h != 0x78) goto code_r0x0042cf79;\n                                var_250h = 0x27;\ncode_r0x0042ce10:\n                                var_224h = 0x10;\n                                if (piVar12 < '\\0') {\n                                    var_22ch._1_1_ = var_250h + 'Q';\n                                    var_22ch._0_1_ = 0x30;\n                                    var_234h = 2;\n                                }\n                                goto code_r0x0042cca5;\n                            }\n                            if (var_211h == 0x70) {\n                                var_228h = 0x8;\ncode_r0x0042cdf0:\n                                var_250h = 7;\n                                goto code_r0x0042ce10;\n                            }\n                            if (var_211h < 'e') goto code_r0x0042cf79;\n                            if (var_211h < 'h') goto code_r0x0042ca74;\n                            if (var_211h == 0x69) goto code_r0x0042cc92;\n                            if (var_211h != 0x6e) {\n                                if (var_211h != 0x6f) goto code_r0x0042cf79;\n                                var_224h = 0x8;\n                                if (piVar12 < '\\0') {\n                                    piVar12 = piVar12 | 0x200;\n                                    var_218h = piVar12;\n                                }\n                                goto code_r0x0042cca5;\n                            }\n                            piVar9 = *var_21ch;\n                            var_21ch = var_21ch + 1;\n                            iVar11 = fcn.00434c1a();\n                            if (iVar11 == 0) goto code_r0x0042d171;\n                            if ((piVar12 & 0x20) == 0) {\n                                *piVar9 = var_220h;\n                            }\n                            else {\n                                *piVar9 = var_220h;\n                            }\n                            var_248h = 1;\n                        }\n                        puVar7 = var_210h;\n                        iVar11 = var_220h;\n                        if (var_258h != NULL) {\n                            fcn.004228ca(var_258h);\n                            var_258h = NULL;\n                            puVar7 = var_210h;\n                            iVar11 = var_220h;\n                        }\n                    }\n                    var_211h = *puVar7;\n                    var_24ch = var_24ch & 0xffffff00 | var_211h;\n                    puVar3 = puVar7;\n                }\n                goto code_r0x0042d14f;\n            }\n        }\n    }\ncode_r0x0042d171:\n    puVar8 = fcn.0042889e();\n    *puVar8 = 0x16;\n    fcn.00427aa0();\ncode_r0x0042d14f:\n    if (var_26ch != '\\0') {\n        *(var_270h + 0x70) = *(var_270h + 0x70) & 0xfffffffd;\n    }\n    fcn.0042b4bf(unaff_EBX);\n    return;\n}\n",
        "token_count": 6156
    },
    "0042df69": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0042df69(double param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    bool bVar11;\n    double dVar12;\n    double dVar13;\n    ulong in_XMM1_Qa;\n    double dVar14;\n    uchar auVar15 [16];\n    uint64_t in_XMM2_Qa;\n    int64_t iVar16;\n    uchar auVar17 [16];\n    int64_t iVar18;\n    uint64_t in_XMM3_Qa;\n    uint64_t uVar19;\n    double dVar20;\n    double dVar21;\n    double dVar22;\n    double dVar23;\n    double dVar24;\n    double dVar25;\n    double dVar26;\n    uchar auStack12 [4];\n    \n    dVar12 = param_1 >> 0x2c;\n    uVar1 = param_1 >> 0x30;\n    uVar3 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n    dVar25 = (*0x4927c0 & param_1 | *0x4927d0) * *(uVar3 * 4 + 0x48ef30);\n    dVar22 = *(uVar3 * 4 + 0x48ef30);\n    dVar13 = *(uVar3 * 8 + 0x48f340);\n    dVar24 = *(uVar3 * 8 + 0x48f348);\n    uVar7 = 0x7fef - uVar1;\n    uVar3 = SUB84(param_1, 0);\n    uVar9 = param_1 >> 0x20;\n    dVar23 = param_1;\n    if (0x7fffffff < (uVar1 - 0x10 | uVar7)) {\n        auVar17 = CONCAT88(in_XMM2_Qa, CONCAT44(param_3, param_2));\n        uVar8 = param_3 & *0x4927e4;\n        uVar19 = in_XMM3_Qa >> 0x20;\n        if (uVar8 < 0x7ff00000) {\n            if ((param_2 | uVar8) == 0) {\n                uVar10 = 0x1a;\n                _auStack12 = *0x4927d0;\n                if ((uVar3 | uVar9 & 0x7fffffff) != 0) {\n                    uVar10 = 0x1d;\n                    if (((uVar9 & 0x7fffffff) < 0x7ff00001) && (((uVar9 & 0x7fffffff) < 0x7ff00000 || (uVar3 == 0)))) {\n                        return *0x4927d0;\n                    }\n                }\n                goto code_r0x0042e770;\n            }\n            if (uVar7 < 0) {\n                auVar17 = auVar17 | CONCAT88(in_XMM3_Qa << 0x34, CONCAT44(*0x4927e4, *0x4927e0) << 0x34);\n                in_XMM3_Qa = 0;\n                auVar15 = pmaxsw(ZEXT1216(CONCAT48((in_XMM1_Qa >> 0x20 & uVar19) >> 0x14, (uVar8 >> 0x14) - 0x3f3)), 0x0\n                                );\n                iVar16 = SUB168(auVar17, 0) << SUB168(auVar15, 0);\n                iVar18 = SUB168(auVar17 >> 0x40, 0) << SUB168(auVar15 >> 0x40, 0);\n                auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                    CONCAT48(-(iVar18 == 0), CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0))));\n                uVar2 = SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7;\n                uVar8 = 0x7fef - uVar7 & 0x7fff;\n                uVar19 = SUB168(auVar17 >> 0x40, 0);\n                if (0x7fef < uVar8) {\n                    auVar17 = CONCAT412(0xffffffff, \n                                        CONCAT48(0xffffffff, \n                                                 CONCAT44(-((*0x4927c0 & param_1) >> 0x20 == 0), \n                                                          -((*0x4927c0 & param_1) == 0))));\n                    if ((SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff) {\n                        if ((param_1 & 0x8000000000000000) != 0) {\n                            if ((uVar2 != 0xff) ||\n                               (iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0x4927e4) >> 0x14) - 0x3f4, \n                               iVar18 = uVar19 << (*0x4927ec >> 0x14), \n                               auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                                   CONCAT48(-(iVar18 == 0), \n                                                            CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0)))), \n                               (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                                (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                                (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                                (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff))\n                            {\n                                if ((param_3 & 0x80000000) != 0) {\n                                    return 0;\n                                }\n                                goto code_r0x0042e6f7;\n                            }\n                            if ((param_3 & 0x80000000) == 0) {\n                                return *0x492838;\n                            }\n                            goto code_r0x0042e589;\n                        }\n                        if ((param_3 & 0x80000000) != 0) {\n                            return 0;\n                        }\n                        goto code_r0x0042e6f7;\n                    }\n                    goto code_r0x0042e5cf;\n                }\n                if (uVar2 == 0xff) {\n                    in_XMM3_Qa = 0;\n                    iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0x4927e4) >> 0x14) - 0x3f4;\n                    iVar18 = uVar19 << ((SUB164(auVar15 >> 0x60, 0) & *0x4927ec) >> 0x14);\n                    auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                        CONCAT48(-(iVar18 == 0), \n                                                 CONCAT44(-(iVar16 >> 0x20 == SUB164(ZEXT816(*0x492840) >> 0x20, 0)), \n                                                          -(iVar16 == SUB84(*0x492840, 0)))));\n                    in_XMM2_Qa = SUB168(auVar17 >> 0x40, 0);\n                    uVar7 = (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) + 0x3ff01 &\n                            0x40000;\n                    if (0xf < uVar8) {\n                        uVar8 = 0xbfe7f;\n                        in_XMM3_Qa = 0;\n                        goto code_r0x0042dfe6;\n                    }\n                    goto code_r0x0042e404;\n                }\n                dVar22 = param_1 >> 0x20;\n                in_XMM2_Qa = uVar19 >> 0x20;\n                uVar8 = uVar3 | uVar9 & 0x7fffffff;\n                uVar7 = 0;\n                dVar23 = dVar12;\n                if (uVar8 != 0) {\n                    uVar10 = 0x1c;\n                    _auStack12 = *0x492860;\n                    goto code_r0x0042e770;\n                }\ncode_r0x0042e48a:\n                if ((uVar8 & 0x7fffffff) == 0) {\n                    if ((param_3 & 0x80000000) == 0) {\n                        if ((uVar8 & uVar7 << 0xd) == 0) {\n                            return 0;\n                        }\ncode_r0x0042e589:\n                        return *0x492840;\n                    }\n                    _auStack12 = (uVar8 & uVar7 << 0xd | 0x7ff00000) << 0x20;\n                    uVar10 = 0x1b;\n                    goto code_r0x0042e770;\n                }\n            }\n            else {\n                uVar7 = 0;\ncode_r0x0042e404:\n                auVar17 = pinsrw(ZEXT816(0), 0x43f0, 3);\n                dVar23 = SUB168(auVar17, 0) * param_1;\n                uVar8 = uVar9;\n                dVar25 = *0x4927c0;\n                dVar22 = *0x4927d0;\n                if (uVar3 == 0) goto code_r0x0042e48a;\n            }\n            dVar12 = (dVar23 & CONCAT44(*0x4927e4, *0x4927e0)) >> 0x2c;\n            uVar8 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n            dVar25 = (dVar25 & dVar23 | dVar22) * *(uVar8 * 4 + 0x48ef30);\n            dVar22 = *(uVar8 * 4 + 0x48ef30);\n            dVar13 = *(uVar8 * 8 + 0x48f340);\n            dVar24 = *(uVar8 * 8 + 0x48f348);\n            uVar8 = 0x43e7f;\n            goto code_r0x0042dfe6;\n        }\n        uVar7 = uVar9;\n        if ((0x7fefffff < (uVar9 & 0x7fffffff)) && ((0x7ff00000 < (uVar9 & 0x7fffffff) || (uVar3 != 0)))) {\ncode_r0x0042e5cf:\n            _auStack12 = param_1 + param_1;\n            uVar10 = 0x3ee;\n            goto code_r0x0042e770;\n        }\n        goto code_r0x0042e685;\n    }\n    uVar7 = 0;\n    uVar8 = 0x3fe7f;\ncode_r0x0042dfe6:\n    uVar4 = (dVar25 >> 0x26 & 0xff) + 1 & 0x1fe;\n    dVar25 = dVar25 * *(uVar4 * 4 + 0x48fb50);\n    dVar20 = dVar23 & *0x4927c0 | *0x4927d0;\n    dVar14 = *0x492818 & dVar20;\n    dVar20 = dVar20 - dVar14;\n    uVar5 = (dVar25 >> 0x1f & 0x1ff) + 1 & 0x3fe;\n    dVar21 = dVar22 * *(uVar4 * 4 + 0x48fb50) * *(uVar5 * 4 + 0x490770);\n    dVar25 = dVar25 * *(uVar5 * 4 + 0x490770);\n    dVar23 = dVar13 + *(uVar4 * 8 + 0x48ff60) + (dVar12 - uVar8 >> 8) + *(uVar5 * 8 + 0x490f80);\n    dVar12 = dVar24 + *(uVar4 * 8 + 0x48ff68) + *(uVar5 * 8 + 0x490f88);\n    dVar13 = *0x492818 & dVar21;\n    dVar21 = dVar21 - dVar13;\n    dVar26 = *0x492820 + dVar25;\n    dVar24 = dVar23 + dVar26;\n    dVar22 = CONCAT44(param_3, param_2);\n    uVar2 = param_3 >> 0x10;\n    dVar23 = dVar23 - dVar24;\n    uVar4 = dVar24 >> 0x30;\n    dVar13 = (((dVar25 - dVar13 * dVar14) - dVar14 * dVar21) - dVar13 * dVar20) - dVar20 * dVar21;\n    dVar14 = dVar26 - dVar13;\n    dVar25 = dVar24 - dVar13;\n    uVar8 = uVar2 & 0x7ff0;\n    if (0x7fef < uVar8) {\n        _auStack12 = CONCAT44(param_3, param_2);\n        auVar17 = CONCAT88(in_XMM2_Qa, _auStack12);\n        in_XMM3_Qa = in_XMM3_Qa >> 0x1f & in_XMM2_Qa;\n        auVar15 = CONCAT412(-(in_XMM3_Qa >> 0x20 == 0), \n                            CONCAT48(-(in_XMM3_Qa == 0), \n                                     CONCAT44(-((*0x4927c0 & _auStack12) >> 0x20 == 0), -((*0x4927c0 & _auStack12) == 0)\n                                             )));\n        if ((SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 | (SUB161(auVar15 >> 0x17, 0) & 1) << 2\n             | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar15 >> 0x27, 0) & 1) << 4 |\n             (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar15 >> 0x37, 0) & 1) << 6 |\n            (SUB161(auVar15 >> 0x3f, 0) & 1) << 7) == 0xff) {\n            bVar11 = uVar3 == 0;\n            uVar3 = uVar4;\n            if (bVar11) {\n                if (uVar9 != 0x3ff00000) {\n                    uVar3 = uVar9;\n                    if (uVar9 == 0xbff00000) {\n                        return 1;\n                    }\n                    goto code_r0x0042e685;\n                }\n            }\n            else {\ncode_r0x0042e685:\n                _auStack12 = SUB168(auVar17, 0);\n                uVar19 = in_XMM3_Qa & SUB168(auVar17 >> 0x40, 0);\n                auVar15 = CONCAT412(-(uVar19 >> 0x20 == 0), \n                                    CONCAT48(-(uVar19 == 0), \n                                             CONCAT44(-((*0x4927c0 & _auStack12) >> 0x20 == 0), \n                                                      -((*0x4927c0 & _auStack12) == 0))));\n                if ((SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7) != 0xff)\n                goto code_r0x0042e6fe;\n                if ((uVar3 | uVar7 ^ 0xbff00000) != 0) {\n                    if ((auVar17 & 0x8000000000000000) == 0x0) {\n                        if ((uVar1 & 0x7ff0) < 0x3ff0) {\n                            return 0;\n                        }\n                    }\n                    else if (0x3fef < (uVar1 & 0x7ff0)) {\n                        return 0;\n                    }\ncode_r0x0042e6f7:\n                    return *0x492830;\n                }\n            }\n            uVar10 = 0x1c;\n            _auStack12 = *0x48ef30;\n        }\n        else {\ncode_r0x0042e6fe:\n            _auStack12 = _auStack12 + _auStack12;\n            uVar10 = 0x3ee;\n        }\n        goto code_r0x0042e770;\n    }\n    iVar6 = (uVar8 - 0x3ff0) + (uVar4 & 0x7ff0);\n    if ((0x40a0U - iVar6 | iVar6 - 0x3c70U) < 0x80000000) {\ncode_r0x0042e138:\n        dVar20 = *0x492818 & dVar22;\n        dVar21 = *0x492818 & dVar25;\n        dVar13 = (dVar23 + dVar26) - (dVar13 - (dVar24 - dVar25));\n        auVar17 = pinsrw(ZEXT816(0), 0x4060, 3);\n        dVar24 = dVar20 * dVar21 * SUB168(auVar17, 0);\n        uVar3 = ROUND(dVar24);\n        dVar22 = dVar20 * (dVar25 - dVar21) + dVar21 * (dVar22 - dVar20) + (dVar25 - dVar21) * (dVar22 - dVar20);\n        if (0 < (0x1ff7f - uVar3 | uVar3 + 0x1e1ff)) {\n            iVar6 = (uVar3 & 0x7f) * 0x10;\n            auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n            uVar3 = ((uVar7 + uVar3 & 0xffffff80) + 0x1ff80 << 0x2d) >> 0x20;\n            dVar25 = *(\"\\aAiFC.\u05bf\" + iVar6 + 8) * (uVar3 << 0x20);\n            dVar22 = (dVar24 - ((dVar24 + *0x4927b0) - *0x4927b0)) * SUB168(auVar17, 0) +\n                     dVar22 + ((*0x491f90 * dVar14 + *0x491fa0 * dVar14 * dVar14) * dVar14 * dVar14 +\n                               *0x491f98 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                              CONCAT44(param_3, param_2);\n            return dVar22 * dVar22 * dVar25 * (*0x492800 + *0x4927f0 * dVar22) * dVar22 * dVar22 +\n                   *(iVar6 + 0x491fb8) * SUB128((ZEXT412(uVar3) << 0x40) >> 0x20, 0) +\n                   (*0x492808 + *0x4927f8 * dVar22) * dVar22 * dVar22 * dVar25 + *0x492810 * dVar22 * dVar25 + dVar25;\n        }\n        if (uVar3 < 1) {\n            if (uVar3 < -0x3fdff) {\ncode_r0x0042e9c9:\n                uVar10 = 0x19;\n                _auStack12 = *0x492858 * *0x492858 | uVar7 << 0x2d;\n                goto code_r0x0042e770;\n            }\n            uVar7 = uVar7 + 0x80;\n            uVar9 = (uVar3 & 0xffffff80) + 0x3fe80;\n            uVar10 = 0;\n        }\n        else {\n            if (0x3ffff < uVar3) goto code_r0x0042e9ec;\n            uVar7 = uVar7 + 0x3ff00;\n            uVar9 = uVar3 - 0x80 & 0xffffff80;\n            uVar10 = 0x3ff0;\n        }\n        iVar6 = (uVar3 & 0x7f) * 0x10;\n        uVar3 = (-(uVar9 - 0x1ff80) >> 7) + 2;\n        auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n        uVar8 = (uVar9 << 0x2d) >> 0x20;\n        dVar25 = *(\"\\aAiFC.\u05bf\" + iVar6 + 8) * (uVar8 << 0x20);\n        dVar22 = (dVar24 - ((dVar24 + *0x4927b0) - *0x4927b0)) * SUB168(auVar17, 0) +\n                 dVar22 + ((*0x491f90 * dVar14 + *0x491fa0 * dVar14 * dVar14) * dVar14 * dVar14 +\n                           *0x491f98 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                          CONCAT44(param_3, param_2);\n        _auStack12 = uVar7 << 0x2d;\n        uVar19 = uVar3 + (uVar3 & 0x20);\n        dVar13 = -1 << uVar19 & dVar25;\n        dVar22 = dVar22 * dVar22 * dVar25 * (*0x492800 + *0x4927f0 * dVar22) * dVar22 * dVar22 +\n                 *(iVar6 + 0x491fb8) * SUB128((ZEXT412(uVar8) << 0x40) >> 0x20, 0) +\n                 (*0x492808 + *0x4927f8 * dVar22) * dVar22 * dVar22 * dVar25 + *0x492810 * dVar22 * dVar25;\n        dVar24 = dVar13 + dVar22 & -1 << uVar19;\n        auVar17 = pinsrw(ZEXT816(0), uVar10, 3);\n        dVar22 = dVar22 + (dVar13 - dVar24) + (dVar25 - dVar13);\n        if (uVar9 - 0x1ff80 < 1) {\n            _auStack12 = dVar22 * _auStack12 + dVar24 * _auStack12;\n            _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n            uVar10 = 0x18;\n            if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) && (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                return _auStack12;\n            }\n        }\n        else {\n            _auStack12 = (dVar22 + dVar24) * _auStack12;\n            _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n            uVar10 = 0x18;\n            if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) && (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                return _auStack12;\n            }\n        }\n    }\n    else {\n        dVar24 = dVar22 * dVar25;\n        uVar3 = dVar24 >> 0x30 & 0x7ff0;\n        uVar9 = uVar3 - 0x3c70;\n        if ((0x40a0 - uVar3 | uVar9) < 0x80000000) goto code_r0x0042e138;\n        if (0x7fffffff < uVar9) {\n            return (uVar7 | 0x1ff80) << 0x2d;\n        }\n        if (((uVar2 ^ (uVar1 & 0x7ff0) + 0xc010) & 0x8000) != 0) goto code_r0x0042e9c9;\ncode_r0x0042e9ec:\n        uVar10 = 0x18;\n        if (uVar7 == 0) {\n            _auStack12 = *0x492850 * *0x492850;\n        }\n        else {\n            _auStack12 = *0x492848 * *0x492850;\n        }\n    }\ncode_r0x0042e770:\n    fcn.004321d8(&param_1, &param_2, auStack12, uVar10);\n    return _auStack12;\n}\n",
        "token_count": 6607
    },
    "0042fbbf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0042fbbf(uint32_t arg_8h, int16_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint8_t uVar5;\n    int16_t iVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    uint32_t uVar14;\n    int16_t *piVar15;\n    bool bVar16;\n    ulong uVar17;\n    uint var_28h;\n    uint var_24h;\n    int16_t *lpMode;\n    int16_t *lpBuffer;\n    uint32_t var_18h;\n    uint32_t lpNumberOfBytesRead;\n    int16_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar14 = 0;\n    lpMode = NULL;\n    var_18h = 0xfffffffe;\n    if (arg_8h == 0xfffffffe) {\n        puVar7 = fcn.0042886a();\n        *puVar7 = 0;\n        puVar7 = fcn.0042889e();\n        *puVar7 = 9;\n        return 0xffffffff;\n    }\n    if ((-1 < arg_8h) && (arg_8h < *0x4c241c)) {\n        var_ch = arg_8h >> 5;\n        iVar8 = *(var_ch * 4 + 0x4c0940);\n        iVar9 = (arg_8h & 0x1f) * 0x40;\n        uVar5 = *(iVar8 + 4 + iVar9);\n        if ((uVar5 & 1) != 0) {\n            if (arg_10h < 0x80000000) {\n                if ((arg_10h == 0) || ((uVar5 & 2) != 0)) {\n                    return 0;\n                }\n                if (arg_ch != NULL) {\n                    cVar4 = *(iVar8 + 0x24 + iVar9) * '\\x02' >> 1;\n                    if (cVar4 == '\\x01') {\n                        if ((~arg_10h & 1) == 0) goto code_r0x0042fc65;\n                        uVar10 = arg_10h >> 1;\n                        if (uVar10 < 4) {\n                            uVar10 = 4;\n                        }\n                        var_10h = fcn.00427660(uVar10);\n                        if (var_10h == NULL) {\n                            puVar7 = fcn.0042889e();\n                            *puVar7 = 0xc;\n                            puVar7 = fcn.0042886a();\n                            *puVar7 = 8;\n                            return 0xffffffff;\n                        }\n                        uVar17 = fcn.004305df(arg_8h, 0, 0, 1);\n                        iVar8 = *(var_ch * 4 + 0x4c0940);\n                        *(iVar8 + 0x28 + iVar9) = uVar17;\n                        *(iVar8 + 0x2c + iVar9) = uVar17 >> 0x20;\n                    }\n                    else {\n                        uVar10 = arg_10h;\n                        if (cVar4 == '\\x02') {\n                            if ((~arg_10h & 1) == 0) goto code_r0x0042fc65;\n                            uVar10 = arg_10h & 0xfffffffe;\n                        }\n                        var_10h = arg_ch;\n                    }\n                    iVar8 = *(var_ch * 4 + 0x4c0940);\n                    uVar11 = uVar10;\n                    lpBuffer = var_10h;\n                    if ((((*(iVar8 + 4 + iVar9) & 0x48) != 0) && (cVar2 = *(iVar8 + 5 + iVar9),  cVar2 != '\\n')) &&\n                       (uVar10 != 0)) {\n                        *var_10h = cVar2;\n                        lpBuffer = var_10h + 1;\n                        uVar14 = 1;\n                        uVar11 = uVar10 - 1;\n                        *(*(var_ch * 4 + 0x4c0940) + 5 + iVar9) = 10;\n                        if (((cVar4 != '\\0') && (cVar2 = *(*(var_ch * 4 + 0x4c0940) + 0x25 + iVar9),  cVar2 != '\\n')) &&\n                           (uVar11 != 0)) {\n                            *lpBuffer = cVar2;\n                            lpBuffer = var_10h + 1;\n                            uVar11 = uVar10 - 2;\n                            uVar14 = 2;\n                            *(*(var_ch * 4 + 0x4c0940) + 0x25 + iVar9) = 10;\n                            if (((cVar4 == '\\x01') &&\n                                (cVar2 = *(*(var_ch * 4 + 0x4c0940) + 0x26 + iVar9),  cVar2 != '\\n')) && (uVar11 != 0))\n                            {\n                                uVar14 = 3;\n                                *lpBuffer = cVar2;\n                                lpBuffer = var_10h + 3;\n                                uVar11 = uVar10 - 3;\n                                *(*(var_ch * 4 + 0x4c0940) + 0x26 + iVar9) = 10;\n                            }\n                        }\n                    }\n                    iVar8 = fcn.004349a2(arg_8h);\n                    if ((((iVar8 == 0) || (iVar8 = *(var_ch * 4 + 0x4c0940),  (*(iVar8 + 4 + iVar9) & 0x80) == 0)) ||\n                        (lpMode = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(*(iVar8 + iVar9), &lpMode),  lpMode == NULL))\n                       || (cVar4 != '\\x02')) {\n                        iVar8 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                          (*(*(var_ch * 4 + 0x4c0940) + iVar9), lpBuffer, uVar11, &lpNumberOfBytesRead, \n                                           0);\n                        if (((iVar8 != 0) && (-1 < lpNumberOfBytesRead)) && (lpNumberOfBytesRead <= uVar11))\n                        goto code_r0x0042fe4c;\n                        iVar8 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        if (iVar8 != 5) {\n                            if (iVar8 == 0x6d) {\n                                uVar10 = 0;\n                                goto code_r0x004300c1;\n                            }\n                            goto code_r0x0042fdf7;\n                        }\n                        puVar7 = fcn.0042889e();\n                        *puVar7 = 9;\n                        puVar7 = fcn.0042886a();\n                        *puVar7 = 5;\n                    }\n                    else {\n                        iVar8 = (*_sym.imp.KERNEL32.dll_ReadConsoleW)\n                                          (*(*(var_ch * 4 + 0x4c0940) + iVar9), lpBuffer, uVar11 >> 1, \n                                           &lpNumberOfBytesRead, 0);\n                        if (iVar8 != 0) {\n                            lpNumberOfBytesRead = lpNumberOfBytesRead * 2;\ncode_r0x0042fe4c:\n                            uVar14 = uVar14 + lpNumberOfBytesRead;\n                            iVar8 = *(var_ch * 4 + 0x4c0940);\n                            uVar5 = *(iVar8 + 4 + iVar9);\n                            uVar10 = var_18h;\n                            if (-1 < uVar5) goto code_r0x004300c1;\n                            if (cVar4 == '\\x02') {\n                                if (lpMode == NULL) {\n                                    if ((lpNumberOfBytesRead == 0) || (*var_10h != 10)) {\n                                        uVar5 = uVar5 & 0xfb;\n                                    }\n                                    else {\n                                        uVar5 = uVar5 | 4;\n                                    }\n                                    *(iVar8 + 4 + iVar9) = uVar5;\n                                    lpMode = var_10h + uVar14;\n                                    iVar8 = var_ch;\n                                    piVar12 = var_10h;\n                                    piVar13 = var_10h;\n                                    if (var_10h < lpMode) {\n                                        do {\n                                            iVar6 = *piVar13;\n                                            if (iVar6 == 0x1a) {\n                                                iVar8 = *(iVar8 * 4 + 0x4c0940);\n                                                uVar5 = *(iVar8 + 4 + iVar9);\n                                                if ((uVar5 & 0x40) == 0) {\n                                                    *(iVar8 + 4 + iVar9) = uVar5 | 2;\n                                                }\n                                                else {\n                                                    *piVar12 = *piVar13;\n                                                    piVar12 = piVar12 + 1;\n                                                }\n                                                break;\n                                            }\n                                            if (iVar6 == 0xd) {\n                                                if (piVar13 < lpMode + -1) {\n                                                    if (piVar13[1] != 10) {\n                                                        *piVar12 = 0xd;\n                                                        iVar8 = var_ch;\n                                                        goto code_r0x004301d6;\n                                                    }\n                                                    piVar13 = piVar13 + 2;\n                                                    *piVar12 = 10;\ncode_r0x004302b8:\n                                                    piVar12 = piVar12 + 1;\n                                                    iVar8 = var_ch;\n                                                }\n                                                else {\n                                                    piVar13 = piVar13 + 1;\n                                                    iVar8 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                                                      (*(*(iVar8 * 4 + 0x4c0940) + iVar9), &var_8h, 2, \n                                                                       &lpNumberOfBytesRead, 0);\n                                                    if (((iVar8 == 0) &&\n                                                        (iVar8 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar8 != 0))\n                                                       || (lpNumberOfBytesRead == 0)) {\n                                                        *piVar12 = 0xd;\n                                                        piVar12 = piVar12 + 1;\n                                                        iVar8 = var_ch;\n                                                    }\n                                                    else {\n                                                        iVar8 = var_ch;\n                                                        if ((*(*(var_ch * 4 + 0x4c0940) + 4 + iVar9) & 0x48) == 0) {\n                                                            if ((piVar12 == var_10h) && (var_8h == 10)) {\n                                                                *piVar12 = 10;\n                                                                piVar12 = piVar12 + 1;\n                                                            }\n                                                            else {\n                                                                fcn.004305df(arg_8h, 0xfffffffe, 0xffffffff, 1);\n                                                                iVar8 = var_ch;\n                                                                if (var_8h != 10) {\n                                                                    *piVar12 = 0xd;\n                                                                    goto code_r0x004302b8;\n                                                                }\n                                                            }\n                                                        }\n                                                        else if (var_8h == 10) {\n                                                            *piVar12 = 10;\n                                                            piVar12 = piVar12 + 1;\n                                                        }\n                                                        else {\n                                                            *piVar12 = 0xd;\n                                                            *(*(var_ch * 4 + 0x4c0940) + 5 + iVar9) = var_8h;\n                                                            *(*(var_ch * 4 + 0x4c0940) + 0x25 + iVar9) = var_8h._1_1_;\n                                                            piVar12 = piVar12 + 1;\n                                                            *(*(var_ch * 4 + 0x4c0940) + 0x26 + iVar9) = 10;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                            else {\n                                                *piVar12 = iVar6;\ncode_r0x004301d6:\n                                                piVar12 = piVar12 + 1;\n                                                piVar13 = piVar13 + 1;\n                                            }\n                                        } while (piVar13 < lpMode);\n                                    }\n                                    uVar14 = piVar12 - var_10h;\n                                    uVar10 = var_18h;\n                                }\n                                else {\n                                    piVar12 = var_10h;\n                                    piVar13 = var_10h;\n                                    while (piVar12 < var_10h + uVar14 / 2) {\n                                        iVar6 = *piVar12;\n                                        if (iVar6 == 0x1a) {\n                                            puVar1 = *(var_ch * 4 + 0x4c0940) + 4 + iVar9;\n                                            *puVar1 = *puVar1 | 2;\n                                            break;\n                                        }\n                                        if (iVar6 == 0xd) {\n                                            if (piVar12 < var_10h + uVar14 / 2 + -1) {\n                                                piVar12 = piVar12 + 1;\n                                                iVar6 = 10;\n                                                if (*piVar12 != 10) {\n                                                    iVar6 = 0xd;\n                                                }\n                                                *piVar13 = iVar6;\n                                                piVar13 = piVar13 + 1;\n                                            }\n                                        }\n                                        else {\n                                            *piVar13 = iVar6;\n                                            piVar13 = piVar13 + 1;\n                                            piVar12 = piVar12 + 1;\n                                        }\n                                    }\n                                    uVar14 = piVar13 - var_10h & 0xfffffffe;\n                                }\n                                goto code_r0x004300c1;\n                            }\n                            if ((lpNumberOfBytesRead == 0) || (*var_10h != '\\n')) {\n                                uVar5 = uVar5 & 0xfb;\n                            }\n                            else {\n                                uVar5 = uVar5 | 4;\n                            }\n                            *(iVar8 + 4 + iVar9) = uVar5;\n                            lpBuffer = var_10h + uVar14;\n                            lpMode = var_10h;\n                            iVar8 = var_ch;\n                            piVar12 = var_10h;\n                            piVar13 = var_10h;\n                            if (var_10h < lpBuffer) {\n                                do {\n                                    cVar2 = *piVar13;\n                                    if (cVar2 == '\\x1a') {\n                                        iVar8 = *(iVar8 * 4 + 0x4c0940);\n                                        uVar5 = *(iVar8 + 4 + iVar9);\n                                        if ((uVar5 & 0x40) == 0) {\n                                            *(iVar8 + 4 + iVar9) = uVar5 | 2;\n                                        }\n                                        else {\n                                            *piVar12 = *piVar13;\n                                            piVar12 = piVar12 + 1;\n                                        }\n                                        break;\n                                    }\n                                    if (cVar2 == '\\r') {\n                                        if (piVar13 < lpBuffer + -1) {\n                                            piVar15 = piVar13 + 1;\n                                            if (*piVar15 == '\\n') {\n                                                piVar15 = piVar13 + 1;\n                                                *piVar12 = 10;\ncode_r0x0042ff7e:\n                                                piVar12 = piVar12 + 1;\n                                            }\n                                            else {\n                                                *piVar12 = 0xd;\n                                                piVar12 = piVar12 + 1;\n                                            }\n                                        }\n                                        else {\n                                            piVar15 = piVar13 + 1;\n                                            iVar8 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                                              (*(*(iVar8 * 4 + 0x4c0940) + iVar9), &var_1h, 1, \n                                                               &lpNumberOfBytesRead, 0);\n                                            if (((iVar8 == 0) &&\n                                                (iVar8 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar8 != 0)) ||\n                                               (lpNumberOfBytesRead == 0)) {\n                                                *piVar12 = 0xd;\n                                                piVar12 = piVar12 + 1;\n                                                iVar8 = var_ch;\n                                            }\n                                            else {\n                                                iVar8 = var_ch;\n                                                if ((*(*(var_ch * 4 + 0x4c0940) + 4 + iVar9) & 0x48) == 0) {\n                                                    if ((piVar12 == var_10h) && (var_1h == '\\n')) {\n                                                        *piVar12 = 10;\n                                                        piVar12 = piVar12 + 1;\n                                                    }\n                                                    else {\n                                                        fcn.004305df(arg_8h, 0xffffffff, 0xffffffff, 1);\n                                                        iVar8 = var_ch;\n                                                        if (var_1h != '\\n') {\n                                                            *piVar12 = 0xd;\n                                                            goto code_r0x0042ff7e;\n                                                        }\n                                                    }\n                                                }\n                                                else if (var_1h == '\\n') {\n                                                    *piVar12 = 10;\n                                                    piVar12 = piVar12 + 1;\n                                                }\n                                                else {\n                                                    *piVar12 = 0xd;\n                                                    piVar12 = piVar12 + 1;\n                                                    *(*(var_ch * 4 + 0x4c0940) + 5 + iVar9) = var_1h;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        *piVar12 = cVar2;\n                                        piVar12 = piVar12 + 1;\n                                        piVar15 = piVar13 + 1;\n                                    }\n                                    piVar13 = piVar15;\n                                } while (piVar15 < lpBuffer);\n                            }\n                            uVar14 = piVar12 - var_10h;\n                            uVar10 = var_18h;\n                            if ((cVar4 != '\\x01') || (uVar14 == 0)) goto code_r0x004300c1;\n                            uVar5 = *(piVar12 + -1);\n                            if (uVar5 < '\\0') {\n                                iVar8 = 1;\n                                cVar4 = *(uVar5 + 0x4baf50);\n                                piVar12 = piVar12 + -1;\n                                while (((cVar4 == '\\0' && (iVar8 < 5)) && (var_10h <= piVar12))) {\n                                    piVar12 = piVar12 + -1;\n                                    iVar8 = iVar8 + 1;\n                                    cVar4 = *(*piVar12 + 0x4baf50);\n                                }\n                                if (*(*piVar12 + 0x4baf50) == 0) {\n                                    puVar7 = fcn.0042889e();\n                                    *puVar7 = 0x2a;\n                                    goto code_r0x0042fdfe;\n                                }\n                                if (*(*piVar12 + 0x4baf50) + 1 == iVar8) {\n                                    piVar12 = piVar12 + iVar8;\n                                }\n                                else {\n                                    iVar3 = *(var_ch * 4 + 0x4c0940);\n                                    if ((*(iVar3 + 4 + iVar9) & 0x48) == 0) {\n                                        fcn.004305df(arg_8h, -iVar8, -iVar8 >> 0x1f, 1);\n                                    }\n                                    else {\n                                        piVar13 = piVar12 + 1;\n                                        *(iVar3 + 5 + iVar9) = *piVar12;\n                                        if (1 < iVar8) {\n                                            *(*(var_ch * 4 + 0x4c0940) + 0x25 + iVar9) = *piVar13;\n                                            piVar13 = piVar12 + 1;\n                                        }\n                                        if (iVar8 == 3) {\n                                            *(*(var_ch * 4 + 0x4c0940) + 0x26 + iVar9) = *piVar13;\n                                            piVar13 = piVar13 + 1;\n                                        }\n                                        piVar12 = piVar13 - iVar8;\n                                    }\n                                }\n                            }\n                            uVar10 = piVar12 - var_10h;\n                            uVar14 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                               (0xfde9, 0, var_10h, uVar10, arg_ch, arg_10h >> 1);\n                            if (uVar14 != 0) {\n                                bVar16 = uVar14 != uVar10;\n                                uVar14 = uVar14 * 2;\n                                *(*(var_ch * 4 + 0x4c0940) + 0x30 + iVar9) = bVar16;\n                                uVar10 = var_18h;\n                                goto code_r0x004300c1;\n                            }\n                        }\n                        iVar8 = (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x0042fdf7:\n                        fcn.0042887d(iVar8);\n                    }\ncode_r0x0042fdfe:\n                    uVar10 = 0xffffffff;\ncode_r0x004300c1:\n                    if (var_10h != arg_ch) {\n                        fcn.004228ca(var_10h);\n                    }\n                    if (uVar10 != 0xfffffffe) {\n                        return uVar10;\n                    }\n                    return uVar14;\n                }\ncode_r0x0042fc65:\n                puVar7 = fcn.0042886a();\n                *puVar7 = 0;\n            }\n            else {\n                puVar7 = fcn.0042886a();\n                *puVar7 = 0;\n            }\n            puVar7 = fcn.0042889e();\n            *puVar7 = 0x16;\n            goto code_r0x00430341;\n        }\n    }\n    puVar7 = fcn.0042886a();\n    *puVar7 = 0;\n    puVar7 = fcn.0042889e();\n    *puVar7 = 9;\ncode_r0x00430341:\n    fcn.00427aa0();\n    return 0xffffffff;\n}\n",
        "token_count": 4870
    },
    "0043097e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043097e(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.0042ecb0();\n    fcn.00430a03(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 90
    },
    "00430bde": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00430bde(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x492eb0 | *0x492f10;\n        dVar7 = SUB168(in_XMM0, 0) & *0x492eb8 | *0x492f18;\n        uVar1 = SUB82(*0x492ec0 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x492ed8 & dVar7;\n        dVar9 = (*0x492ed0 & dVar6) * *(uVar1 + 0x492f90) - *0x492f10;\n        dVar6 = (dVar6 - (*0x492ed0 & dVar6)) * *(uVar1 + 0x492f90);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x492f98);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x492f98) - *0x492f18);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x492f60 * dVar7 + *0x492f70) * dVar7 + *0x492f80) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   ((*0x492f68 * dVar11 + *0x492f78) * dVar11 + *0x492f88) * dVar11 * dVar11 +\n                   *(uVar1 + 0x4933a8) + dVar10 * *0x492ee8 + (dVar8 & *(iVar5 + 0x492ef8)) +\n                   *(uVar1 + 0x4933a0) + dVar9 + dVar10 * *0x492ee0 + (dVar6 & *(iVar5 + 0x492ef0));\n        }\n        dStack12 = -(*0x492f20 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x492f10 == (param_1 & *0x492eb0 | *0x492f10)) {\n                    return *0x492f48;\n                }\n                arg_14h = 1000;\n                dStack12 = *0x492eb0;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 3;\n            }\n            else {\n                arg_14h = 1000;\n            }\n            goto code_r0x00430dd2;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x492f30);\n        iVar4 = -0x34;\n    }\n    arg_14h = 2;\n    dStack12 = *0x492f40;\ncode_r0x00430dd2:\n    fcn.004321d8(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 998
    },
    "0043113e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0043113e(ulong param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_14h;\n    uint32_t in_XMM0_Da;\n    uint uVar4;\n    uint32_t in_XMM0_Db;\n    uint uVar5;\n    uint32_t in_XMM0_Dd;\n    double dVar6;\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    uint32_t uVar9;\n    double dVar10;\n    double dVar11;\n    uchar auVar12 [16];\n    double dVar13;\n    uint64_t in_XMM7_Qa;\n    double dVar14;\n    uint64_t uVar15;\n    double dVar17;\n    uint64_t uVar18;\n    double dStack12;\n    uint32_t uVar16;\n    \n    dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n    auVar12 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar1 = in_XMM0_Db >> 0xc & 0x7ffff;\n    if (uVar1 - 0x3fb00 < 0x3bb) {\n        iVar2 = (in_XMM0_Db >> 0xc & 0xfffc) - 0xfb00;\n        auVar12 = CONCAT88(in_XMM2_Qa & in_XMM7_Qa, *0x4950d8 & dVar8) | auVar12;\n        iVar3 = iVar2 * 4;\n        dVar11 = SUB168(auVar12, 0);\n        dVar13 = dVar8 * *(iVar2 * 2 + 0x494810);\n        dVar10 = SQRT(*0x4950e0 - dVar8 * dVar8) * dVar11;\n        dVar6 = dVar13 - dVar10;\n        uVar1 = SUB164(auVar12 >> 0x20, 0);\n        uVar9 = uVar1 & 0x80000000;\n        dVar7 = dVar6 * dVar6;\n        return (((*0x495088 * dVar7 + *0x495080) * dVar6 * dVar7 * dVar7 +\n                (str.UUUUUU333333._0_8_ * dVar6 * dVar7 - ((*(iVar3 + 0x493910) ^ uVar9 << 0x20) - *0x495010))) -\n               ((dVar8 + dVar11) * (CONCAT44(in_XMM0_Db, in_XMM0_Da) - dVar11)) / (dVar13 + dVar10)) -\n               ((*(iVar3 + 0x493918) ^ SUB168(CONCAT412(uVar1, ZEXT412(uVar9) << 0x20) >> 0x40, 0)) - *0x495018 &\n               0xffffffff00000000);\n    }\n    if (uVar1 - 0x3febb < 0x41) {\n        dVar13 = (in_XMM0_Db >> 6) << 0x26;\n        dVar11 = *0x4950e0 - dVar13 * dVar13;\n        dVar6 = (CONCAT44(in_XMM0_Db, in_XMM0_Da) + dVar13) * (dVar8 - dVar13);\n        dVar10 = SQRT(dVar11 - dVar6);\n        uVar1 = -(SUB121(CONCAT48(in_XMM0_Dd >> 0xc, CONCAT44(in_XMM0_Db, in_XMM0_Da)) >> 0x3f, 0) & 1);\n        dVar7 = *0x4950d8 & dVar10 | SUB168(auVar12, 0) | ~*0x4950d0 & CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        iVar3 = ((dVar10 << 2) >> 0x30) - 0xfec0;\n        dVar10 = dVar10 * *(iVar3 * 8 + 0x494810);\n        dVar13 = (dVar13 * dVar7 - dVar10) + (dVar8 - dVar13) * dVar7;\n        dVar8 = ((dVar11 - dVar7 * dVar7) - dVar6) / (dVar10 + dVar10 + dVar13);\n        iVar3 = iVar3 * 0x10;\n        dVar7 = (SUB168(CONCAT412(uVar1, CONCAT48(uVar1, CONCAT44(uVar1, uVar1))) >> 0x40, 0) & *0x495028) +\n                *(iVar3 + 0x493918);\n        dVar11 = dVar13 * dVar13;\n        auVar12 = pinsrw(0x0, uVar1 & 0x8000, 3);\n        dVar6 = dVar8 + dVar7;\n        return (*0x495088 * dVar11 + *0x495080) * dVar13 * dVar11 * dVar11 +\n               str.UUUUUU333333._0_8_ * dVar13 * dVar11 + (CONCAT44(uVar1, uVar1) & *0x495020) + *(iVar3 + 0x493910) +\n               dVar8 + (dVar7 - dVar6) + dVar6 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 - 0x3c300 < 0x3800) {\n        dVar6 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar7 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar11 = dVar8 * dVar6;\n        return (*0x495018 - dVar8) +\n               (((*0x495010 - dVar11 * dVar11 * dVar11 * (*0x495090 * dVar6 + *0x4950a0 + *0x4950b0 * dVar6 * dVar6)) -\n                CONCAT44(in_XMM0_Db, in_XMM0_Da) * dVar7 * (*0x495098 * dVar7 + *0x4950a8 + *0x4950b8 * dVar7 * dVar7))\n               - (dVar8 - (*0x495018 - (*0x495018 - dVar8))));\n    }\n    if (uVar1 - 0x3fefc < 4) {\n        dVar8 = *0x4950e8 - (dVar8 & *0x4950d0) * *0x4950e8;\n        uVar16 = dVar8 >> 0x20;\n        uVar15 = dVar8 & 0xffffffff;\n        dVar14 = uVar15 | uVar16 << 0x20;\n        dVar6 = SQRT(dVar8);\n        dVar17 = SUB168(CONCAT412(uVar16, CONCAT48(SUB84(dVar8, 0), dVar14)) >> 0x40, 0);\n        dVar13 = uVar15 | uVar16 << 0x20;\n        uVar18 = -(CONCAT44(in_XMM0_Db, in_XMM0_Da) < 0.0);\n        uVar1 = SUB164(ZEXT1216(CONCAT48(in_XMM0_Dd >> 0xc, uVar18)) >> 0x20, 0);\n        dVar8 = *0x495050 & dVar6;\n        uVar9 = dVar6 >> 0x20;\n        dVar7 = dVar6 & 0xffffffff | uVar9 << 0x20;\n        dVar11 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar7)) >> 0x40, 0);\n        dVar10 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar11)) >> 0x40, 0);\n        auVar12 = pinsrw(ZEXT816(0), in_XMM0_Db >> 0x10 & 0x8000, 3);\n        return (uVar1 << 0x20 & *0x495028) +\n               (*0x4950a0 + *0x495090 * dVar14 + *0x4950b0 * dVar14 * dVar14) * dVar14 * dVar14 * dVar13 * dVar13 *\n               (dVar11 + dVar11) + ((uVar18 & 0xffffffff | uVar1 << 0x20) & *0x495020) +\n               (*0x4950a8 + *0x495098 * dVar17 + *0x4950b8 * dVar17 * dVar17) *\n               SUB168(CONCAT412(uVar16, CONCAT48(uVar15, dVar13)) >> 0x40, 0) * (dVar10 + dVar10) +\n               ((dVar13 - dVar8 * dVar8) - (dVar6 - dVar8) * ((dVar7 + dVar7) - (dVar6 - dVar8))) / dVar11 +\n               dVar11 + dVar11 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 < 0x3ff00) {\n        return *0x495018 + *0x495010;\n    }\n    if ((0x3ff00000 - (in_XMM0_Db & 0x7fffffff) | in_XMM0_Da) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (param_1 == 0) < 0) {\n            auVar12 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dVar8 = SUB168(auVar12, 0) * 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3a;\n        }\n        else {\n            dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da) + 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3f0;\n        }\n        dStack12 = CONCAT44(uVar5, uVar4);\n        fcn.004321d8(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    iVar3 = -((in_XMM0_Db >> 0x10) >> 0xf);\n    uVar15 = CONCAT44(iVar3, iVar3);\n    return (*0x495038 & uVar15) + (*0x495030 & uVar15);\n}\n",
        "token_count": 2530
    },
    "0043169e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0043169e(double param_1)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    uchar in_XMM0 [16];\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    double dVar9;\n    uint32_t uVar11;\n    uchar auVar10 [16];\n    double dVar12;\n    ulong in_XMM6_Qa;\n    double dVar13;\n    double dVar14;\n    double dVar15;\n    double dVar16;\n    double dVar17;\n    uint in_XMM7_Dc;\n    uint in_XMM7_Dd;\n    double dStack12;\n    \n    dVar6 = SUB168(in_XMM0, 0);\n    uVar11 = SUB164(in_XMM0 >> 0x20, 0);\n    uVar3 = uVar11 >> 0xc;\n    auVar10 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar2 = uVar3 & 0x7ffff;\n    if (uVar2 - 0x3fb00 < 0x3bb) {\n        iVar4 = (uVar3 & 0xfffc) - 0xfb00;\n        auVar10 = CONCAT88(in_XMM2_Qa & CONCAT44(in_XMM7_Dd, in_XMM7_Dc), *0x4968c8 & dVar6) | auVar10;\n        iVar5 = iVar4 * 4;\n        dVar9 = SUB168(auVar10, 0);\n        dVar13 = dVar6 * *(iVar4 * 2 + 0x496030);\n        dVar1 = SQRT(*0x4968d0 - dVar6 * dVar6) * dVar9;\n        dVar7 = dVar13 - dVar1;\n        uVar11 = SUB164(auVar10 >> 0x20, 0);\n        uVar2 = uVar11 & 0x80000000;\n        dVar8 = dVar7 * dVar7;\n        return ((dVar6 - dVar9) * (dVar6 + dVar9)) / (dVar13 + dVar1) +\n               (*0x496870 + *0x496878 * dVar8) * dVar7 * dVar8 * dVar8 +\n               *0x496868 * dVar7 * dVar8 + (*(iVar5 + 0x495130) ^ uVar2 << 0x20) +\n               ((*(iVar5 + 0x495138) ^ SUB168(CONCAT412(uVar11, ZEXT412(uVar2) << 0x20) >> 0x40, 0)) &\n               0xffffffff00000000);\n    }\n    if (uVar2 - 0x3febb < 0x43) {\n        dVar1 = SQRT(*0x4968d0 - dVar6 * dVar6);\n        dVar7 = dVar6 & *0x496860;\n        dVar8 = (dVar6 & 0x7fffffffffffffff) - dVar7;\n        dVar9 = *0x4968c8 & dVar1 | SUB168(auVar10, 0);\n        iVar5 = ((dVar1 << 2) >> 0x30) - 0xfec0;\n        dVar1 = dVar1 * *(iVar5 * 8 + 0x496030);\n        dVar13 = (dVar7 * dVar9 - dVar1) + dVar8 * dVar9;\n        iVar5 = iVar5 * 0x10;\n        dVar14 = dVar13 * dVar13;\n        auVar10 = pinsrw(0x0, (SUB161(CONCAT412(in_XMM7_Dd, CONCAT48(in_XMM7_Dc, dVar6)) >> 0x3f, 0) & 1) << 0xf, 3);\n        return (((*0x496878 * dVar14 + *0x496870) * dVar13 * dVar14 * dVar14 +\n                *0x496868 * dVar13 * dVar14 + (*0x496830 - *(iVar5 + 0x495130))) -\n               (((*0x4968d0 - dVar7 * dVar7) - dVar9 * dVar9) - ((dVar6 & 0x7fffffffffffffff) + dVar7) * dVar8) /\n               (dVar1 + dVar1 + dVar13)) + (*0x496838 - *(iVar5 + 0x495138) & 0xffffffff00000000) | SUB168(auVar10, 0);\n    }\n    if (uVar2 - 0x3c300 < 0x3800) {\n        dVar1 = dVar6 * dVar6;\n        dVar7 = dVar6 * dVar6;\n        dVar8 = dVar6 * dVar1;\n        return dVar6 + dVar8 * dVar8 * dVar8 * (*0x496880 * dVar1 + *0x496890 + *0x4968a0 * dVar1 * dVar1) +\n                       dVar6 * dVar7 * (*0x496888 * dVar7 + *0x496898 + *0x4968a8 * dVar7 * dVar7);\n    }\n    if (uVar2 - 0x3fefe < 2) {\n        dVar1 = SQRT(*0x4968d0 - dVar6 * dVar6);\n        dVar8 = dVar6 & *0x496850;\n        uVar11 = dVar1 >> 0x20;\n        dVar14 = dVar1 & 0xffffffff | uVar11 << 0x20;\n        dVar7 = dVar1 & *0x496850;\n        dVar6 = dVar6 - dVar8;\n        dVar12 = SUB168(CONCAT412(uVar11, CONCAT48(SUB84(dVar1, 0), dVar14)) >> 0x40, 0);\n        dVar15 = SUB128(CONCAT84(in_XMM6_Qa, uVar11), 0) << 0x20;\n        dVar1 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar9 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar16 = dVar15 * dVar1;\n        dVar17 = SUB168(CONCAT412(uVar11, ZEXT812(dVar15)) >> 0x40, 0) * dVar9;\n        dVar13 = dVar16 * dVar16 * dVar16;\n        auVar10 = pinsrw(ZEXT816(0), SUB162(in_XMM0 >> 0x30, 0) & 0x8000, 3);\n        return (((*0x496830 + (*0x4968b0 * dVar1 + *0x4968b8) * dVar16 * dVar16 * dVar13) -\n                ((dVar1 * dVar1 * *0x4968a0 + *0x496890 + *0x496880 * dVar1) * dVar13 +\n                 (SUB128(CONCAT84(dVar17, (dVar9 * dVar9 * *0x4968a8 + *0x496898 + *0x496888 * dVar9) * dVar17 >> 0x20)\n                         , 0) << 0x20) +\n                (((((*0x4968d0 - dVar8 * dVar8) - (dVar8 + dVar8) * dVar6) - dVar7 * dVar7) - dVar6 * dVar6) +\n                (dVar14 + dVar14 + (dVar7 - dVar14)) * (dVar7 - dVar14)) / (dVar12 + dVar12))) -\n               (dVar15 - (*0x496838 + (dVar15 - *0x496838)))) - (dVar15 - *0x496838) | SUB168(auVar10, 0);\n    }\n    if (uVar2 < 0x3ff00) {\n        if (0x7fdf < (param_1 >> 0x30 & 0x7ff0) - 0x10) {\n            param_1 = param_1 | param_1 + 0.0;\n        }\n        return param_1;\n    }\n    if ((0x3ff00000 - (uVar11 & 0x7fffffff) | SUB164(in_XMM0, 0)) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (SUB84(param_1, 0) == 0) < 0) {\n            auVar10 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dStack12 = SUB168(auVar10, 0) * 0.0;\n            arg_14h = 0x3d;\n        }\n        else {\n            dStack12 = param_1 + 0.0;\n            arg_14h = 0x3f1;\n        }\n        fcn.004321d8(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    return *0x496838 + *0x496830 | ~*0x4968c0 & dVar6;\n}\n",
        "token_count": 2183
    },
    "00425428": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00425428(uint param_1, uint32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 in_ST0;\n    float10 fVar4;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = fcn.0042ef0c();\n        }\n        if (*0x4c0938 == 0) {\n            uVar3 = fcn.0042ee97(arg_8h, unaff_retaddr, param_3, param_4);\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    else {\n        fVar4 = fcos(in_ST0);\n        uVar1 = in_EAX & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0x49290a) * *0x49290a;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar4);\n        }\n        if (*0x4c0938 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.0042ee97(arg_8h, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\n    }\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 607
    },
    "00436961": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00436961(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00427750(0x4b6b50, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.0042889e();\n        *puVar1 = 0x16;\n        fcn.00427aa0();\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.00436a28(unaff_EBP + -0x1c, puVar1, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = iVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004369fc();\n        if (iVar2 != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.00427795();\n    return;\n}\n",
        "token_count": 466
    },
    "004369fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004369fc(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        if (unaff_EDI != 0) {\n            puVar1 = *((*unaff_ESI >> 5) * 4 + 0x4c0940) + 4 + (*unaff_ESI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.0042ba40(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "004376b7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004376b7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint unaff_EBX;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4badc0 ^ &stack0xfffffffc;\n    fcn.00421b3f(arg_10h);\n    var_14h = fcn.00437ffd(&var_10h, &var_18h, arg_ch, 0, 0, 0, 0, &var_28h);\n    fcn.00434ebf(&var_10h, arg_8h);\n    if (var_1ch != '\\0') {\n        *(var_20h + 0x70) = *(var_20h + 0x70) & 0xfffffffd;\n    }\n    fcn.0042b4bf(unaff_EBX);\n    return;\n}\n",
        "token_count": 259
    },
    "00437743": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00437743(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint unaff_EBX;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4badc0 ^ &stack0xfffffffc;\n    fcn.00421b3f(arg_10h);\n    var_14h = fcn.00437ffd(&var_10h, &var_18h, arg_ch, 0, 0, 0, 0, &var_28h);\n    fcn.0043542f(&var_10h, arg_8h);\n    if (var_1ch != '\\0') {\n        *(var_20h + 0x70) = *(var_20h + 0x70) & 0xfffffffd;\n    }\n    fcn.0042b4bf(unaff_EBX);\n    return;\n}\n",
        "token_count": 258
    },
    "00437ffd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00438301)\n// WARNING: Removing unreachable block (ram,0x0043830a)\n// WARNING: Removing unreachable block (ram,0x00438719)\n// WARNING: Removing unreachable block (ram,0x00438360)\n// WARNING: Removing unreachable block (ram,0x0043837e)\n// WARNING: Removing unreachable block (ram,0x00438365)\n// WARNING: Removing unreachable block (ram,0x0043836c)\n// WARNING: Removing unreachable block (ram,0x00438371)\n// WARNING: Removing unreachable block (ram,0x00438381)\n// WARNING: Removing unreachable block (ram,0x0043870f)\n// WARNING: Removing unreachable block (ram,0x00438389)\n// WARNING: Removing unreachable block (ram,0x0043838e)\n// WARNING: Removing unreachable block (ram,0x00438395)\n// WARNING: Removing unreachable block (ram,0x00438398)\n// WARNING: Removing unreachable block (ram,0x004383b0)\n// WARNING: Removing unreachable block (ram,0x004383b2)\n// WARNING: Removing unreachable block (ram,0x004383bc)\n// WARNING: Removing unreachable block (ram,0x004383bf)\n// WARNING: Removing unreachable block (ram,0x004383c6)\n// WARNING: Removing unreachable block (ram,0x004383c9)\n// WARNING: Removing unreachable block (ram,0x00438701)\n// WARNING: Removing unreachable block (ram,0x0043871f)\n// WARNING: Removing unreachable block (ram,0x004383d5)\n// WARNING: Removing unreachable block (ram,0x004386f2)\n// WARNING: Removing unreachable block (ram,0x004383e1)\n// WARNING: Removing unreachable block (ram,0x004383f1)\n// WARNING: Removing unreachable block (ram,0x004383f3)\n// WARNING: Removing unreachable block (ram,0x004383fd)\n// WARNING: Removing unreachable block (ram,0x00438406)\n// WARNING: Removing unreachable block (ram,0x004386d8)\n// WARNING: Removing unreachable block (ram,0x00438411)\n// WARNING: Removing unreachable block (ram,0x00438428)\n// WARNING: Removing unreachable block (ram,0x0043843a)\n// WARNING: Removing unreachable block (ram,0x0043844b)\n// WARNING: Removing unreachable block (ram,0x0043848a)\n// WARNING: Removing unreachable block (ram,0x00438493)\n// WARNING: Removing unreachable block (ram,0x004384a1)\n// WARNING: Removing unreachable block (ram,0x004384b3)\n// WARNING: Removing unreachable block (ram,0x004384b8)\n// WARNING: Removing unreachable block (ram,0x004384c5)\n// WARNING: Removing unreachable block (ram,0x004384cb)\n// WARNING: Removing unreachable block (ram,0x004384dc)\n// WARNING: Removing unreachable block (ram,0x004384e1)\n// WARNING: Removing unreachable block (ram,0x004384ee)\n// WARNING: Removing unreachable block (ram,0x004384f3)\n// WARNING: Removing unreachable block (ram,0x004384ab)\n// WARNING: Removing unreachable block (ram,0x004384f7)\n// WARNING: Removing unreachable block (ram,0x00438505)\n// WARNING: Removing unreachable block (ram,0x0043850c)\n// WARNING: Removing unreachable block (ram,0x0043851a)\n// WARNING: Removing unreachable block (ram,0x00438537)\n// WARNING: Removing unreachable block (ram,0x0043853c)\n// WARNING: Removing unreachable block (ram,0x00438541)\n// WARNING: Removing unreachable block (ram,0x00438544)\n// WARNING: Removing unreachable block (ram,0x0043854b)\n// WARNING: Removing unreachable block (ram,0x0043854e)\n// WARNING: Removing unreachable block (ram,0x0043855f)\n// WARNING: Removing unreachable block (ram,0x00438568)\n// WARNING: Removing unreachable block (ram,0x00438577)\n// WARNING: Removing unreachable block (ram,0x0043858e)\n// WARNING: Removing unreachable block (ram,0x00438592)\n// WARNING: Removing unreachable block (ram,0x004385c4)\n// WARNING: Removing unreachable block (ram,0x004385c9)\n// WARNING: Removing unreachable block (ram,0x004385d5)\n// WARNING: Removing unreachable block (ram,0x004385e4)\n// WARNING: Removing unreachable block (ram,0x004385ea)\n// WARNING: Removing unreachable block (ram,0x004385eb)\n// WARNING: Removing unreachable block (ram,0x00438616)\n// WARNING: Removing unreachable block (ram,0x00438620)\n// WARNING: Removing unreachable block (ram,0x00438632)\n// WARNING: Removing unreachable block (ram,0x00438636)\n// WARNING: Removing unreachable block (ram,0x00438640)\n// WARNING: Removing unreachable block (ram,0x0043864e)\n// WARNING: Removing unreachable block (ram,0x0043868a)\n// WARNING: Removing unreachable block (ram,0x00438656)\n// WARNING: Removing unreachable block (ram,0x00438681)\n// WARNING: Removing unreachable block (ram,0x00438661)\n// WARNING: Removing unreachable block (ram,0x00438679)\n// WARNING: Removing unreachable block (ram,0x00438672)\n// WARNING: Removing unreachable block (ram,0x00438685)\n// WARNING: Removing unreachable block (ram,0x0043868e)\n// WARNING: Removing unreachable block (ram,0x00438691)\n// WARNING: Removing unreachable block (ram,0x004386b5)\n// WARNING: Removing unreachable block (ram,0x004386cc)\n// WARNING: Removing unreachable block (ram,0x0043869b)\n// WARNING: Removing unreachable block (ram,0x004384d1)\n// WARNING: Removing unreachable block (ram,0x004386d2)\n// WARNING: Removing unreachable block (ram,0x004386e0)\n// WARNING: Removing unreachable block (ram,0x00438724)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.00437ffd(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.0042889e();\n        *puVar2 = 0x16;\n        fcn.00427aa0();\n        fcn.0042b4bf(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x00438086. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x438749\n    (**0x438749)();\n    return;\n}\n",
        "token_count": 1814
    },
    "0043a28d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043a28d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    ulong uVar4;\n    uint pvargDest;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t rgsabound;\n    \n    iVar3 = 0;\n    iVar1 = fcn.0040218e(0);\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayCreateEx)(0xc, iVar1, &rgsabound);\n    if (-1 < iVar2) {\n        iVar2 = 0;\n        if (0 < iVar1) {\n            do {\n                arg_8h_00 = iVar2 + 1;\n                *(rgsabound + 0x14 + iVar2 * 8) = 0;\n                uVar4 = fcn.0040218e(arg_8h_00);\n                *(rgsabound + 0x10 + (uVar4 >> 0x20) * 8) = uVar4;\n                iVar2 = arg_8h_00;\n            } while (arg_8h_00 < iVar1);\n        }\n        *(rgsabound + 2) = 0x880;\n        *(rgsabound + 4) = 0x10;\n        iVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroyDescriptor)(rgsabound);\n        if (iVar1 < 0) {\n            (*_sym.imp.OLEAUT32.dll_SafeArrayDestroyData)(rgsabound);\n        }\n        else {\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n            var_24h = 0;\n            var_20h = 0;\n            var_1ch = 0;\n            var_14h = 0;\n            var_10h = 1;\n            iVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(rgsabound, &var_ch);\n            if (-1 < iVar1) {\n                fcn.0040d89e(arg_8h);\n                iVar2 = fcn.0044aab4(&arg_8h);\n                iVar1 = arg_8h;\n                if (0 < iVar2) {\n                    do {\n                        if (*(iVar1 + iVar3 * 4) != 0) {\n                            fcn.0043a25b(*(iVar1 + iVar3 * 4));\n                            (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(var_ch, &pvargDest);\n                            iVar1 = arg_8h;\n                        }\n                        iVar3 = iVar3 + 1;\n                        var_ch = var_ch + 0x10;\n                    } while (iVar3 < iVar2);\n                }\n                (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(rgsabound);\n                fcn.00412570();\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n                return rgsabound;\n            }\n            (*_sym.imp.OLEAUT32.dll_SafeArrayRedim)(rgsabound);\n            (*_sym.imp.OLEAUT32.dll_SafeArrayDestroyData)(rgsabound);\n            fcn.00412570();\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 798
    },
    "0043ac4b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043ac4b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint extraout_ECX;\n    int32_t in_EDX;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint arg_ch;\n    int32_t *piVar5;\n    uint lpclsid;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint lpszProgID;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *lplpszProgID;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    lpclsid = *0x48d93c;\n    uStack84 = *0x48d940;\n    uStack80 = *0x48d944;\n    uStack76 = *0x48d948;\n    var_34h = in_EDX;\n    iVar1 = (***in_ECX)();\n    if (iVar1 < 0) {\n        piVar5 = 0x800;\n        var_28h = NULL;\n        iVar1 = (**(*in_ECX + 0x10))();\n    }\n    else {\n        piVar5 = var_28h;\n        iVar1 = (**(*var_28h + 0xc))(var_28h, &var_4h);\n        (**(*var_28h + 8))(var_28h);\n    }\n    if ((iVar1 < 0) || (var_4h == NULL)) goto code_r0x0043ae51;\n    var_8h = NULL;\n    iVar1 = (**(*var_4h + 0x48))(var_4h, &var_8h, &var_1ch, var_28h, piVar5);\n    if ((-1 < iVar1) && (var_8h != NULL)) {\n        (**(*var_8h + 0x14))(var_8h, var_1ch, &var_10h);\n        if (var_10h != 5) {\n            uVar2 = (**(*var_8h + 0xc))(var_8h);\n            puVar4 = NULL;\n            uVar3 = 0;\n            var_24h = NULL;\n            if (uVar2 != 0) {\n                do {\n                    if (puVar4 != NULL) break;\n                    var_10h = 0;\n                    (**(*var_8h + 0x14))(var_8h, uVar3, &var_10h);\n                    if (var_10h == 5) {\n                        (**(*var_8h + 0x10))(var_8h, uVar3, &var_ch);\n                        (**(*var_ch + 0xc))(var_ch, &var_2ch);\n                        var_20h = *(var_2ch + 0x30);\n                        (**(*var_ch + 0x4c))(var_ch, var_2ch);\n                        var_18h = -1;\n                        if (var_20h != NULL) {\n                            do {\n                                iVar1 = (**(*var_ch + 0x20))(var_ch, puVar4, &var_30h);\n                                if (iVar1 == 0) {\n                                    (**(*var_4h + 0x38))(var_4h, var_30h, &lplpszProgID);\n                                    (**(*lplpszProgID + 0x48))(lplpszProgID, 0, &var_18h);\n                                    if (var_18h == var_1ch) {\n                                        puVar4 = 0x1;\n                                        var_24h = 0x1;\n                                        (**(*lplpszProgID + 8))(lplpszProgID);\n                                        (**(*var_4h + 8))(var_4h);\n                                        var_4h = var_ch;\n                                        goto code_r0x0043adbd;\n                                    }\n                                    (**(*lplpszProgID + 8))();\n                                }\n                                puVar4 = puVar4 + 1;\n                            } while (puVar4 < var_20h);\n                        }\n                        (**(*var_ch + 8))(var_ch);\n                        puVar4 = var_24h;\n                    }\ncode_r0x0043adbd:\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 < uVar2);\n            }\n            if (var_10h != 5) goto code_r0x0043ae48;\n        }\n        (**(*var_4h + 0xc))(var_4h, &var_24h);\n        lpclsid = *var_24h;\n        uStack84 = var_24h[1];\n        uStack80 = var_24h[2];\n        uStack76 = var_24h[3];\n        (**(*var_4h + 0x4c))(var_4h, var_24h);\n        if (var_34h == 0) {\n            lplpszProgID = NULL;\n            iVar1 = (*_sym.imp.ole32.dll_ProgIDFromCLSID)(&lpclsid, &lplpszProgID);\n            if (-1 < iVar1) {\n                fcn.0040caee(lplpszProgID);\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(lplpszProgID);\n                arg_ch = extraout_ECX;\n                arg_8h_00 = fcn.0043b2d1(extraout_ECX, 0xffffffff);\n                fcn.0040a2fb(arg_8h_00, arg_ch);\n                (*_sym.imp.ole32.dll_CLSIDFromProgID)(lpszProgID, &lpclsid);\n                fcn.00405cd3();\n            }\n        }\n    }\ncode_r0x0043ae48:\n    (**(*var_4h + 8))(var_4h);\ncode_r0x0043ae51:\n    iVar1 = fcn.0043a6e8();\n    return iVar1 != 0;\n}\n",
        "token_count": 1438
    },
    "0043b31f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b31f(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    puVar2 = fcn.0042010a(8);\n    puVar2[1] = 0;\n    *puVar2 = *arg_8h;\n    puVar1 = puVar2;\n    if (*0x4c1108 != NULL) {\n        *(*0x4c110c + 4) = puVar2;\n        puVar1 = *0x4c1108;\n    }\n    *0x4c1108 = puVar1;\n    *0x4c1104 = *0x4c1104 + 1;\n    *0x4c110c = puVar2;\n    return;\n}\n",
        "token_count": 177
    },
    "0043b8b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b8b0(uint *param_1)\n\n{\n    if (param_1[2] != 0) {\n        (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(param_1[3], 0, param_1[2], 0, 0, 0);\n        fcn.0042017e(param_1[2]);\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[3]);\n    fcn.0042017e(*param_1);\n    return;\n}\n",
        "token_count": 124
    },
    "0043bc90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: lpCommandLine\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl\nfcn.0043bc90(uint lpUsername, uint lpDomain, uint32_t lpPassword, uint32_t hObject, uint noname_4, uint32_t arg_1ch, \n            uint32_t arg_20h, uint arg_24h, int32_t arg_28h, uint arg_2ch)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint8_t uVar6;\n    int32_t iVar7;\n    int32_t hObj;\n    uint32_t uVar8;\n    bool bVar9;\n    uint lpProfileInfo;\n    uint var_54h;\n    int32_t hProfile;\n    uint var_3ch;\n    uint uStack60;\n    uint uStack56;\n    uint32_t uStack52;\n    uint32_t var_2ch;\n    uint *var_28h;\n    uint32_t uStack40;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uint uStack28;\n    uint *var_14h;\n    int32_t lpCommandLine;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t hExistingToken;\n    \n    hExistingToken = 0x43bc98;\n    cVar2 = fcn.0043b9b8();\n    if (cVar2 == '\\0') {\n        uVar4 = 0;\n        hExistingToken = 0;\n        uVar8 = 0;\n        if ((hObject & 1) == 0) {\n            if ((hObject & 2) != 0) {\n                uVar8 = 2;\n            }\n        }\n        else {\n            uVar8 = 1;\n        }\n        if ((hObject & 4) != 0) {\n            var_14h = &fcn.0043bc90::hObject;\n            uStack28 = 10;\n            hObject = 0;\n            var_1ch = 0x43bcdf;\n            var_1ch = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n            var_20h = 0x43bce6;\n            (*_sym.imp.ADVAPI32.dll_OpenProcessToken)();\n            var_20h = 1;\n            uStack40 = hObject;\n            var_28h = &fcn.0043bc90::hExistingToken;\n            var_2ch = 0x43bcf5;\n            iVar7 = (*_sym.imp.USERENV.dll_CreateEnvironmentBlock)();\n            var_2ch = hObject;\n            uStack52 = 0x43bd00;\n            uVar5 = (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            if (iVar7 == 0) goto code_r0x0043bd34;\n        }\n        lpCommandLine = arg_2ch;\n        var_14h = arg_28h;\n        uStack28 = arg_24h;\n        var_20h = arg_20h | 0x400;\n        uStack40 = arg_1ch;\n        var_28h = NULL;\n        uStack52 = lpPassword;\n        uStack56 = lpDomain;\n        uStack60 = lpUsername;\n        var_3ch = 0x43bd2f;\n        var_2ch = uVar8;\n        var_1ch = hExistingToken;\n        uVar5 = (*_sym.imp.ADVAPI32.dll_CreateProcessWithLogonW)();\n        uVar4 = uVar5 != 0;\ncode_r0x0043bd34:\n        if (hExistingToken != 0) {\n            lpCommandLine = hExistingToken;\n            var_14h = 0x43bd43;\n            uVar5 = (*_sym.imp.USERENV.dll_DestroyEnvironmentBlock)();\n        }\n        return uVar5 & 0xffffff00 | uVar4;\n    }\n    fcn.0043b865(extraout_ECX_00, extraout_ECX_00);\n    cVar2 = fcn.0043bec3(extraout_ECX);\n    if (cVar2 == '\\0') {\n        uVar6 = 0;\n        goto code_r0x0043bc7f;\n    }\n    uVar6 = 0;\n    hExistingToken = 0;\n    iVar7 = 0;\n    hObj = 0;\n    var_8h = 0;\n    var_14h = NULL;\n    lpCommandLine = 0;\n    var_ch = 0;\n    fcn.00421970(&fcn.0043bc90::lpProfileInfo, 0, 0x20);\n    bVar9 = (hObject & 1) != 0;\n    lpProfileInfo = 0x20;\n    var_54h = lpUsername;\n    cVar2 = fcn.0043be95(lpUsername, lpDomain, lpPassword, hObject, &fcn.0043bc90::hExistingToken, \n                         &fcn.0043bc90::hExistingToken);\n    if (cVar2 == '\\0') {\ncode_r0x0043bc21:\n        if (hProfile != 0) {\n            (*_sym.imp.USERENV.dll_UnloadUserProfile)(hExistingToken, hProfile);\n        }\n    }\n    else {\n        if ((hObject & 2) != 0) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_DuplicateTokenEx)(hExistingToken, 0, 0, 2, 1, &fcn.0043bc90::lpPassword);\n            if (iVar3 == 0) goto code_r0x0043bc21;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hExistingToken);\n            hExistingToken = lpPassword;\n        }\n        iVar7 = (*_sym.imp.USER32.dll_OpenWindowStationW)(L\"winsta0\", 0, 0x60000);\n        if ((iVar7 == 0) || (iVar7 == -1)) goto code_r0x0043bc21;\n        var_14h = (*_sym.imp.USER32.dll_GetProcessWindowStation)();\n        iVar3 = (*_sym.imp.USER32.dll_SetProcessWindowStation)(iVar7);\n        if ((iVar3 == 0) ||\n           (((hObj = (*_sym.imp.USER32.dll_OpenDesktopW)(L\"default\", 0, 0, 0x60081),  hObj == 0 || (hObj == -1)) ||\n            (cVar2 = fcn.0043bf5b(hExistingToken, &fcn.0043bc90::var_8h),  cVar2 == '\\0')))) goto code_r0x0043bc21;\n        var_2ch = CONCAT22(var_2ch._2_2_, 0xb00);\n        var_28h = 0xf0000000;\n        var_20h = CONCAT22(var_20h._2_2_, 0x400);\n        var_1ch = 0xf037f;\n        cVar2 = fcn.0043b593(iVar7, var_8h, &fcn.0043bc90::var_2ch);\n        if (cVar2 == '\\0') goto code_r0x0043bc21;\n        var_20h = var_20h & 0xffff0000;\n        var_1ch = 0xf01ff;\n        cVar2 = fcn.0043b398(hObj, var_8h, &fcn.0043bc90::var_20h);\n        if (cVar2 == '\\0') goto code_r0x0043bc21;\n        *(arg_28h + 8) = L\"winsta0\\\\default\";\n        lpPassword = *(arg_28h + 0x2c) & 0x100;\n        if (arg_1ch != 0) {\n            iVar3 = fcn.004218fb(arg_1ch);\n            iVar1 = (iVar3 + 1) * 2;\n            lpCommandLine = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n            fcn.00421943(lpCommandLine, arg_1ch);\n        }\n        if ((((bVar9) &&\n             (iVar3 = (*_sym.imp.USERENV.dll_LoadUserProfileW)(hExistingToken, &fcn.0043bc90::lpProfileInfo), \n             iVar3 == 0)) ||\n            (((hObject & 4) == 0 &&\n             (iVar3 = (*_sym.imp.USERENV.dll_CreateEnvironmentBlock)(&fcn.0043bc90::var_ch, hExistingToken, 0), \n             iVar3 == 0)))) ||\n           (iVar3 = (*_sym.imp.ADVAPI32.dll_CreateProcessAsUserW)\n                              (hExistingToken, 0, lpCommandLine, 0, 0, lpPassword, arg_20h | 0x400, var_ch, arg_24h, \n                               arg_28h, arg_2ch),  iVar3 == 0)) goto code_r0x0043bc21;\n        if (bVar9) {\n            fcn.0043bff5(arg_2ch, &fcn.0043bc90::hProfile, &fcn.0043bc90::hExistingToken);\n        }\n        uVar6 = 1;\n    }\n    fcn.0043b850();\n    if (iVar7 != 0) {\n        (*_sym.imp.USER32.dll_CloseWindowStation)(iVar7);\n    }\n    if (hObj != 0) {\n        (*_sym.imp.USER32.dll_CloseDesktop)(hObj);\n    }\n    if (var_14h != NULL) {\n        (*_sym.imp.USER32.dll_SetProcessWindowStation)(var_14h);\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hExistingToken);\n    fcn.0042017e(lpCommandLine);\n    if (var_ch != 0) {\n        (*_sym.imp.USERENV.dll_DestroyEnvironmentBlock)(var_ch);\n    }\ncode_r0x0043bc7f:\n    uVar4 = fcn.0043b8b0();\n    return uVar4 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 2286
    },
    "0043bd4b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043bd4b(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint32_t var_8h;\n    uint32_t *var_4h;\n    \n    var_10h = 0;\n    var_4h = NULL;\n    uVar4 = 0;\n    cVar2 = fcn.0043b7ef(&var_4h, &var_10h, &var_10h);\n    puVar1 = var_4h;\n    if (cVar2 != '\\0') {\n        var_8h = 0;\n        if (var_ch[1] != 0) {\n            do {\n                uVar4 = 0;\n                iVar3 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, *(*var_ch + var_8h * 4), &var_1ch);\n                if ((iVar3 == 0) || (var_14h = 0,  *puVar1 == 0)) break;\n                uVar5 = 0;\n                var_4h = puVar1 + 1;\n                do {\n                    iVar3 = fcn.00420183(var_4h, &var_1ch, 8);\n                    if (iVar3 == 0) {\n                        uVar4 = 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                    var_4h = var_4h + 3;\n                } while (uVar5 < *puVar1);\n                if (uVar4 == 0) break;\n                var_8h = var_8h + 1;\n            } while (var_8h < var_ch[1]);\n        }\n    }\n    uVar5 = fcn.0043b850();\n    return uVar5 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 463
    },
    "0043c0fd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0043c0fd(uint arg_8h)\n\n{\n    char cVar1;\n    bool bVar2;\n    \n    cVar1 = fcn.0043c12c();\n    if (arg_8h == '\\0') {\n        bVar2 = cVar1 == '\\x01';\n    }\n    else {\n        bVar2 = cVar1 == '\\0';\n    }\n    if (bVar2) {\n        fcn.0043c145(0, 1, 0xffffffff, 0xffffffff);\n    }\n    return 1;\n}\n",
        "token_count": 128
    },
    "0043c239": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043c239(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x14f, arg_8h != '\\0', 0);\n    return iVar1 != 0;\n}\n",
        "token_count": 78
    },
    "0043ca6d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ca6d(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    int32_t arg_8h_00;\n    uint var_28h;\n    uint *hWnd;\n    \n    arg_8h_00 = 0;\n    hWnd = in_ECX;\n    iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1004, 0, 0);\n    fcn.00407e53(0x49dbf0);\n    if (arg_8h == '\\0') {\n        if (0 < iVar2) {\n            do {\n                iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x102c, arg_8h_00, 2);\n                if (iVar3 != 0) {\n                    fcn.00422177(arg_8h_00, &var_28h, 10);\n                    fcn.00407e53(&var_28h);\n                    return 1;\n                }\n                arg_8h_00 = arg_8h_00 + 1;\n            } while (arg_8h_00 < iVar2);\n        }\n    }\n    else if (0 < iVar2) {\n        do {\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x102c, arg_8h_00, 2);\n            if (iVar3 != 0) {\n                fcn.00422177(arg_8h_00, &var_28h, 10);\n                cVar1 = fcn.0043c46a();\n                if (cVar1 == '\\0') {\n                    fcn.004039e8(0x4b2b04);\n                }\n                fcn.004039e8(&var_28h);\n            }\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 468
    },
    "0043cf40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043cf40(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint *in_ECX;\n    \n    iVar1 = fcn.0043d0d4(arg_8h);\n    if (iVar1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar2 = 2;\n        if (arg_ch == '\\0') {\n            uVar2 = 1;\n        }\n        uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1102, uVar2, iVar1);\n        uVar3 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 185
    },
    "0043d206": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043d206(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint *arg_10h_00;\n    char cVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint var_b4h;\n    int32_t iStack180;\n    uint *puStack176;\n    uint uStack172;\n    uint uStack168;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    int32_t var_8h;\n    \n    arg_10h_00 = arg_10h;\n    var_8h = 0;\n    var_28h = *arg_10h;\n    var_24h = arg_10h[1];\n    var_20h = arg_10h[2];\n    var_1ch = arg_10h[3];\n    *var_1ch = *var_1ch + 1;\n    fcn.0040d3d2();\n    if (arg_8h != 0) {\n        arg_10h = 0x1;\n        do {\n            arg_8h_00 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x110a, 4, arg_8h);\n            if (arg_8h_00 != 0) {\n                cVar1 = fcn.0043c46a();\n                if (cVar1 == '\\0') {\n                    fcn.004039e8(0x4b2b04);\n                }\n                if (arg_14h == '\\0') {\n                    fcn.0043d4de(arg_8h, &fcn.0043d206::var_18h);\n                    uStack168 = 0x43d2ca;\n                    fcn.00407b4b(&fcn.0043d206::var_18h);\n                }\n                else {\n                    uStack168 = 0x43d297;\n                    fcn.00422177(var_8h, &fcn.0043d206::var_b4h, 10);\n                    fcn.0040bd2f(0x23);\n                    fcn.004039e8(0x43d2b1);\n                }\n                uStack168 = 0;\n                uStack172 = arg_14h;\n                puStack176 = arg_10h_00;\n                iStack180 = arg_ch;\n                cVar1 = fcn.0043d206(arg_8h_00, arg_ch, arg_10h_00, arg_14h);\n                if (cVar1 != '\\0') goto code_r0x0043d312;\n                fcn.0040c935(&fcn.0043d206::var_28h);\n            }\n            if (arg_8h == arg_ch) {\n                if (arg_10h_00[1] != 0) {\n                    fcn.004039e8(0x4b2b04);\n                }\n                if (arg_14h == '\\0') {\n                    fcn.0043d4de(arg_8h, &fcn.0043d206::var_18h);\n                    fcn.00407b4b(&fcn.0043d206::var_18h);\n                }\n                else {\n                    fcn.00422177(var_8h, &fcn.0043d206::var_b4h, 10);\n                    fcn.0040bd2f(0x23);\n                    fcn.004039e8(0x43d36f);\n                }\n                goto code_r0x0043d312;\n            }\n            arg_8h = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x110a, 1, arg_8h);\n            var_8h = var_8h + 1;\n        } while (arg_8h != 0);\n    }\n    arg_10h = NULL;\ncode_r0x0043d312:\n    fcn.00405cd3();\n    uVar2 = fcn.00405cd3();\n    return uVar2 & 0xffffff00 | arg_10h;\n}\n",
        "token_count": 959
    },
    "0043d38a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0043d38a(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_18h;\n    uint *hWnd;\n    uint var_1h;\n    \n    iVar4 = 0;\n    var_1h._0_1_ = '\\0';\n    fcn.0040d3d2();\n    piVar1 = fcn.0040a4f6(0);\n    if (*piVar1 == 0x23) {\n        piVar1 = fcn.0040a4f6(1);\n        if (*piVar1 != 0x23) {\n            fcn.0040a2fb(0, 1);\n            var_1h._0_1_ = '\\x01';\n            goto code_r0x0043d3eb;\n        }\n    }\n    piVar1 = fcn.0040a4f6(0);\n    if (*piVar1 == 0x23) {\n        fcn.0040a2fb(0, 1);\n    }\ncode_r0x0043d3eb:\n    iVar2 = fcn.00422241(*arg_ch);\n    for (; (var_1h == '\\0' || (iVar2 != iVar4)); iVar4 = iVar4 + 1) {\n        fcn.0043d4de(arg_8h, &var_18h);\n        iVar3 = fcn.0041dfb6(&var_18h, 0);\n        if (iVar3 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x110a, 1, arg_8h);\n        if (arg_8h == 0) break;\n    }\n    fcn.00405cd3();\n    return arg_8h;\n}\n",
        "token_count": 462
    },
    "0043e181": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0043e181(uint arg_8h)\n\n{\n    uint *in_ECX;\n    \n    (*_sym.imp.USER32.dll_EnableWindow)(*in_ECX, arg_8h != '\\0');\n    return 1;\n}\n",
        "token_count": 55
    },
    "0043e278": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e278(int32_t *lpRect, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_ECX;\n    int32_t iVar5;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    iVar3 = (*_sym.imp.USER32.dll_GetWindowRect)(*in_ECX, lpRect);\n    if (iVar3 == 0) {\ncode_r0x0043e2e0:\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch != '\\0') {\n            iVar3 = fcn.0043e221();\n            if (iVar3 == 0) goto code_r0x0043e2e0;\n            lpPoint = *lpRect;\n            var_4h = lpRect[1];\n            iVar1 = lpRect[2];\n            iVar2 = *lpRect;\n            iVar5 = lpRect[3] - var_4h;\n            (*_sym.imp.USER32.dll_ScreenToClient)(iVar3, &lpPoint);\n            *lpRect = lpPoint;\n            lpRect[2] = lpPoint + (iVar1 - iVar2);\n            lpRect[1] = var_4h;\n            lpRect[3] = iVar5 + var_4h;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 322
    },
    "0043e431": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0043e431(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint uVar1;\n    \n    if (arg_8h == '\\0') {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 4;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(*in_ECX, uVar1);\n    return 1;\n}\n",
        "token_count": 92
    },
    "0043e44e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e44e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    if (in_ECX != arg_8h) {\n        fcn.00402d1a();\n        uVar5 = *(arg_8h + 8);\n        if (*(in_ECX + 0xc) < uVar5) {\n            uVar4 = 8;\n            if (7 < uVar5) {\n                uVar4 = uVar5;\n            }\n            *(in_ECX + 0xc) = uVar4;\n            uVar2 = fcn.0042010a(-(uVar4 * 4 >> 0x20 != 0) | uVar4 * 4);\n            if (*(in_ECX + 4) != 0) {\n                fcn.0042017e(*(in_ECX + 4));\n            }\n            *(in_ECX + 4) = uVar2;\n        }\n        iVar1 = *(arg_8h + 8);\n        uVar5 = 0;\n        *(in_ECX + 8) = iVar1;\n        if (iVar1 != 0) {\n            do {\n                puVar3 = fcn.0042010a(4);\n                if (puVar3 == NULL) {\n                    puVar3 = NULL;\n                }\n                else {\n                    *puVar3 = **(*(arg_8h + 4) + uVar5 * 4);\n                }\n                *(*(in_ECX + 4) + uVar5 * 4) = puVar3;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < *(in_ECX + 8));\n        }\n    }\n    return;\n}\n",
        "token_count": 418
    },
    "0043e4ea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e4ea(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char16_t *pcVar3;\n    uint var_34h;\n    uint var_24h;\n    uint var_14h;\n    \n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    if (arg_8h[1] == 0) {\ncode_r0x0043e5f6:\n        pcVar3 = L\"[LAST\";\ncode_r0x0043e5fb:\n        fcn.00407e53(pcVar3);\n    }\n    else {\n        iVar1 = fcn.00421bc7(*arg_8h, L\"LAST\");\n        if (iVar1 == 0) goto code_r0x0043e5f6;\n        iVar1 = fcn.00421bc7(*arg_8h, L\"ACTIVE\");\n        if (iVar1 == 0) {\n            pcVar3 = L\"[ACTIVE\";\n            goto code_r0x0043e5fb;\n        }\n        iVar1 = fcn.0042247b(*arg_8h, L\"HANDLE=\", 7);\n        if (iVar1 == 0) {\n            pcVar3 = L\"[HANDLE:\";\ncode_r0x0043e576:\n            fcn.00407e53(pcVar3);\n            uVar2 = 7;\n        }\n        else {\n            iVar1 = fcn.0042247b(*arg_8h, L\"REGEXP=\", 7);\n            if (iVar1 == 0) {\n                pcVar3 = L\"[REGEXPTITLE:\";\n                goto code_r0x0043e576;\n            }\n            iVar1 = fcn.0042247b(*arg_8h, L\"CLASSNAME=\", 10);\n            if (iVar1 != 0) {\n                iVar1 = fcn.00421bc7(*arg_8h, 0x4b2cb8);\n                if (iVar1 != 0) goto code_r0x0043e61b;\n                pcVar3 = L\"[ALL\";\n                goto code_r0x0043e5fb;\n            }\n            fcn.00407e53(L\"[CLASS:\");\n            uVar2 = 10;\n        }\n        uVar2 = fcn.0043d936(&var_34h, uVar2, 0xffffffff);\n        fcn.0040c935(uVar2);\n        fcn.00405cd3();\n        fcn.0043e630(&var_24h);\n        fcn.00407b4b(&var_24h);\n    }\n    fcn.004039e8(0x4b2ccc);\n    fcn.0040c935(&var_14h);\ncode_r0x0043e61b:\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 647
    },
    "0043e69d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043e69d(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uint32_t uStack2084;\n    int32_t iStack2080;\n    int32_t iStack2076;\n    int32_t iStack2072;\n    int32_t iStack2068;\n    uchar auStack2064 [8];\n    uchar auStack2056 [2052];\n    \n    iVar1 = arg_ch;\n    bVar7 = (*(arg_ch + 8) & 0x40) != 0;\n    uStack2084 = bVar7;\n    uVar5 = bVar7;\n    if ((*(arg_ch + 8) & 8) != 0) {\n        (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2064, 0x400);\n        iVar3 = fcn.00422203(*(iVar1 + 0xbc), auStack2064);\n        if (iVar3 == 0) {\n            uVar5 = uVar5 + 1;\n        }\n        uStack2084 = bVar7 + 1;\n    }\n    uVar6 = uVar5;\n    if ((*(iVar1 + 8) & 1) != 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(arg_8h, auStack2064, 0x400);\n        if (*(iVar1 + 0xc) == '\\0') {\n            uVar4 = fcn.004218fb(auStack2064);\n            (*_sym.imp.USER32.dll_CharUpperBuffW)(auStack2064, uVar4);\n        }\n        iVar3 = *(iVar1 + 0x10);\n        if (iVar3 == 1) {\n            iVar3 = fcn.00422315(*(iVar1 + 0x14), auStack2064, *(iVar1 + 0x18));\ncode_r0x0043e786:\n            if (iVar3 == 0) {\ncode_r0x0043e78a:\n                uVar6 = uVar5 + 1;\n            }\n        }\n        else if (iVar3 == 2) {\n            iVar3 = fcn.00422633(auStack2064, *(iVar1 + 0x14));\n            if (iVar3 != 0) goto code_r0x0043e78a;\n        }\n        else if (iVar3 == 3) {\n            iVar3 = fcn.00422203(auStack2064, *(iVar1 + 0x14));\n            goto code_r0x0043e786;\n        }\n        if ((*(iVar1 + 8) & 0x18) == 0) {\n            (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2064, 0x400);\n            iVar3 = fcn.00422203(L\"ThumbnailClass\", auStack2064);\n            if (iVar3 == 0) {\n                uVar6 = uVar5;\n            }\n        }\n        uStack2084 = uStack2084 + 1;\n    }\n    if ((*(iVar1 + 8) & 2) == 0) goto code_r0x0043e843;\n    (*_sym.imp.USER32.dll_GetWindowTextW)(arg_8h, auStack2064, 0x400);\n    fcn.0040caee(auStack2056);\n    fcn.00407e36(&iStack2076);\n    fcn.00405cd3();\n    cVar2 = fcn.00442e0a();\n    if (cVar2 != '\\0') {\n        if ((*(iVar1 + 8) & 0x18) == 0) {\n            (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2064, 0x400);\n            iVar3 = fcn.00422203(L\"ThumbnailClass\", auStack2064);\n            if (iVar3 == 0) goto code_r0x0043e83a;\n        }\n        uVar6 = uVar6 + 1;\n    }\ncode_r0x0043e83a:\n    uStack2084 = uStack2084 + 1;\ncode_r0x0043e843:\n    if ((*(iVar1 + 8) & 0x10) != 0) {\n        (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2064, 0x400);\n        fcn.0040caee(auStack2056);\n        fcn.00407e36(&iStack2076);\n        fcn.00405cd3();\n        cVar2 = fcn.00442e0a();\n        if (cVar2 != '\\0') {\n            uVar6 = uVar6 + 1;\n        }\n        uStack2084 = uStack2084 + 1;\n    }\n    if ((*(iVar1 + 8) & 4) != 0) {\n        if ((uVar6 == uStack2084) && (cVar2 = fcn.0043e970(arg_8h),  cVar2 != '\\0')) {\n            uVar6 = uVar6 + 1;\n        }\n        uStack2084 = uStack2084 + 1;\n    }\n    uVar5 = *(iVar1 + 8);\n    if ((uVar5 & 0x780) != 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(arg_8h, &iStack2080);\n        uVar5 = *(iVar1 + 8);\n        if (uVar5 < '\\0') {\n            if (*(iVar1 + 0xd4) == iStack2080) {\n                uVar6 = uVar6 + 1;\n            }\n            uStack2084 = uStack2084 + 1;\n        }\n        if ((uVar5 & 0x100) != 0) {\n            if (*(iVar1 + 0xd8) == iStack2076) {\n                uVar6 = uVar6 + 1;\n            }\n            uStack2084 = uStack2084 + 1;\n        }\n        if ((uVar5 & 0x200) != 0) {\n            if (*(iVar1 + 0xdc) == iStack2072 - iStack2080) {\n                uVar6 = uVar6 + 1;\n            }\n            uStack2084 = uStack2084 + 1;\n        }\n        if ((uVar5 & 0x400) != 0) {\n            if (*(iVar1 + 0xe0) == iStack2068 - iStack2076) {\n                uVar6 = uVar6 + 1;\n            }\n            uStack2084 = uStack2084 + 1;\n        }\n    }\n    if ((uVar5 & 0x20) != 0) {\n        if ((uVar6 == uStack2084) && (*(iVar1 + 0xd0) = *(iVar1 + 0xd0) + 1,  *(iVar1 + 0xd0) == *(iVar1 + 0xcc))) {\n            uVar6 = uVar6 + 1;\n        }\n        uStack2084 = uStack2084 + 1;\n    }\n    if (uVar6 == uStack2084) {\n        fcn.0040197e(&arg_8h);\n        *(iVar1 + 0xe4) = *(iVar1 + 0xe4) + 1;\n        bVar7 = *(iVar1 + 4) == '\\0';\n    }\n    else {\n        bVar7 = true;\n    }\n    return bVar7;\n}\n",
        "token_count": 1722
    },
    "0043e970": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043e970(uint hWndParent)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x28) == 0) {\n        bVar1 = true;\n    }\n    else {\n        cVar2 = fcn.0040193b(hWndParent);\n        if (cVar2 == '\\0') {\n            *(in_ECX + 0xe8) = 0;\n            (*_sym.imp.USER32.dll_EnumChildWindows)(hWndParent, fcn.0043e9b5);\n            bVar1 = *(in_ECX + 0xe8) != '\\0';\n        }\n        else {\n            bVar1 = false;\n        }\n    }\n    return bVar1;\n}\n",
        "token_count": 176
    },
    "0043ef2d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043ef2d(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = 0;\n    if (*(in_ECX + 0x14) != 0) {\n        uVar3 = 0x40;\n        iVar1 = fcn.0042010a(0x40);\n        if (iVar1 != 0) {\n            iVar2 = fcn.0043ead5(in_ECX, arg_8h, arg_ch, arg_10h);\n            uVar3 = extraout_ECX;\n        }\n        if (iVar2 != 0) {\n            if (arg_10h != 0) {\n                return iVar2;\n            }\n            fcn.0043ee53(uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 220
    },
    "0043f144": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043f144(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    iVar2 = 0;\n    if (2 < arg_10h) {\n        ppiVar3 = *(arg_ch + 4) + 0xc;\n        arg_10h = arg_10h + -2;\n        do {\n            iVar1 = **ppiVar3;\n            if ((((iVar1 != 0) && (*(iVar1 + 4) == *(arg_8h + 4))) && (*(iVar1 + 0x90) == '\\x1d')) &&\n               (*(iVar1 + 0x80) != 0)) {\n                iVar2 = iVar2 + 1;\n            }\n            ppiVar3 = ppiVar3 + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 241
    },
    "0043f2f2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f2f2(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    \n    if ((arg_8h == NULL) || (*(arg_8h + 0x90) != '\\x1d')) {\n        piVar2 = *(in_ECX + 0x10);\n        if (piVar2 != NULL) {\n            if (*(in_ECX + 0x18) == '\\0') {\n                arg_8h = NULL;\n                (***piVar2)(piVar2, 0x48da2c, &arg_8h);\n                if (arg_8h != NULL) {\n                    (**(*arg_8h + 0x18))(arg_8h);\n                    (**(*arg_8h + 8))(arg_8h);\n                }\n            }\n            else {\n                (**(*piVar2 + 0x1c))(piVar2, 0);\n            }\n        }\n    }\n    else {\n        iVar1 = *(arg_8h + 0x80);\n        if ((iVar1 != 0) &&\n           (((piVar2 = *(in_ECX + 0x10),  piVar2 == NULL || (*(iVar1 + 0x3c) == '\\0')) && (*(in_ECX + 0x18) == '\\0'))))\n        {\n            if (piVar2 != NULL) {\n                (**(*piVar2 + 0x1c))(piVar2, 0);\n            }\n            (**(**(iVar1 + 0xc) + 0x2c))\n                      (*(iVar1 + 0xc), 0xffffffff, 0, *(iVar1 + 0x28), 0xffffffff, *(iVar1 + 8), iVar1 + 0x10);\n        }\n    }\n    return;\n}\n",
        "token_count": 415
    },
    "0043f733": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f733(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    \n    if (arg_ch != 0) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(arg_8h + 8), &var_10h);\n    }\n    return 0;\n}\n",
        "token_count": 78
    },
    "0043f898": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043f898(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t lpRect;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t nWidth;\n    int32_t var_4h;\n    \n    uVar4 = (*_sym.imp.USER32.dll_LoadIconW)(*0x4c10b8, 99);\n    (*_sym.imp.USER32.dll_SendMessageW)(param_1[0x15], 0x80, 0, uVar4);\n    pcVar2 = _sym.imp.USER32.dll_SetWindowTextW;\n    if (param_1[10] != 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextW)(param_1[0x15], param_1[9]);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    if (param_1[0x12] != 0) {\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(param_1[0x15], 0x3ea);\n        (*pcVar2)(uVar4, param_1[0x11]);\n    }\n    if (param_1[0xe] != 0) {\n        uVar4 = (*pcVar1)(param_1[0x15], 0x3e9);\n        (*pcVar2)(uVar4, param_1[0xd]);\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendDlgItemMessageW;\n    if (*(param_1 + 8) != 0) {\n        (*_sym.imp.USER32.dll_SendDlgItemMessageW)(param_1[0x15], 0x3e9, 0xcc, *(param_1 + 8), 0);\n    }\n    if (0 < param_1[5]) {\n        (*pcVar1)(param_1[0x15], 0x3e9, 0xc5, param_1[5], 0);\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(param_1[0x15], &lpRect);\n    fcn.0043f85c();\n    nWidth = var_14h - lpRect;\n    var_ch = lpRect;\n    var_4h = var_10h - var_18h;\n    if (param_1[2] != -0x80000000) {\n        var_ch = param_1[2];\n    }\n    iVar6 = var_18h;\n    if (param_1[3] != -0x80000000) {\n        iVar6 = param_1[3];\n    }\n    if (0 < *param_1) {\n        nWidth = *param_1;\n    }\n    if (0 < param_1[1]) {\n        var_4h = param_1[1];\n    }\n    cVar3 = fcn.0043d614();\n    if (cVar3 != '\\0') {\n        (*pcVar2)(param_1[0x15], param_1[9]);\n    }\n    uVar4 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&lpRect);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar4);\n    fcn.0043f85c();\n    iVar5 = var_ch;\n    if ((*(param_1 + 4) & 0x40) != 0) {\n        iVar5 = ((var_14h - nWidth) - lpRect) / 2;\n    }\n    if ((*(param_1 + 4) & 0x80) != 0) {\n        iVar6 = ((var_10h - var_4h) - var_18h) / 2;\n    }\n    (*_sym.imp.USER32.dll_MoveWindow)(param_1[0x15], iVar5, iVar6, nWidth, var_4h, 0);\n    (*_sym.imp.USER32.dll_GetClientRect)(param_1[0x15], &lpRect);\n    fcn.0043f85c();\n    (*_sym.imp.USER32.dll_PostMessageW)(param_1[0x15], 5, 0, ((var_10h - var_18h) * 0x10000 - lpRect) + var_14h);\n    if (0.0 < *(param_1 + 6)) {\n        uVar4 = fcn.00471e16(0);\n        iVar6 = (*_sym.imp.USER32.dll_SetTimer)(param_1[0x15], 0x40a, uVar4);\n        param_1[0x16] = iVar6;\n    }\n    return 1;\n}\n",
        "token_count": 1082
    },
    "0043fa7b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043fa7b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint lpString;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x54), 0x3e9);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(iVar1, &lpString, 0x100);\n        if (((*(param_1 + 0x10) & 1) == 0) || (lpString != 0)) {\n            if (0.0 < *(param_1 + 0x18)) {\n                (*_sym.imp.USER32.dll_KillTimer)(*(param_1 + 0x54), 0x40a);\n            }\n            fcn.00407e53(&lpString);\n            (*_sym.imp.USER32.dll_EndDialog)(*(param_1 + 0x54), 1);\n        }\n        else {\n            (*_sym.imp.USER32.dll_MessageBeep)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "0043fcce": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043fcce(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0x4c34dc == 0) {\n        return 0;\n    }\n    if (arg_ch == 5) {\n        fcn.0043fafd(arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n    }\n    else if (arg_ch == 0x24) {\n        *(arg_14h + 0x18) = 0xbe;\n        *(arg_14h + 0x1c) = 0x72;\n    }\n    else {\n        if (arg_ch == 0x110) {\n            if (*(*0x4c34dc + 0x54) == 0) {\n                *(*0x4c34dc + 0x54) = arg_8h;\n            }\n            uVar1 = fcn.0043f898();\n            return uVar1;\n        }\n        if (arg_ch == 0x111) {\n            if ((arg_10h & 0xffff) == 1) {\n                fcn.0043fa7b();\n            }\n            else {\n                if ((arg_10h & 0xffff) != 2) {\n                    return 0;\n                }\n                fcn.0043f87b();\n            }\n        }\n        else {\n            if (arg_ch != 0x113) {\n                return 0;\n            }\n            fcn.0043fca2(arg_10h);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 370
    },
    "0043fdab": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043fdab(int32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    \n    if (arg_8h != 0) {\n        if (*(arg_8h + 0x14) != 0) {\n            fcn.0043fdab(*(arg_8h + 0x14));\n            in_ECX = extraout_ECX;\n        }\n        if (*(arg_8h + 0x18) != 0) {\n            fcn.0043fdab(*(arg_8h + 0x18));\n            in_ECX = extraout_ECX_00;\n        }\n        fcn.00401926(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "0043fe1e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043fe1e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (arg_ch == 0) {\n        *(arg_8h + 0x18) = 0;\n        *(arg_8h + 0x14) = 0;\n        iVar2 = arg_8h;\n    }\n    else {\n        fcn.0043fe7c(arg_8h, &arg_ch);\n        iVar2 = arg_ch;\n        iVar1 = fcn.0040b933(arg_ch);\n        if (iVar1 < 0) {\n            *(arg_8h + 0x14) = *(iVar2 + 0x14);\n            *(arg_8h + 0x18) = iVar2;\n            *(iVar2 + 0x14) = 0;\n            iVar2 = arg_8h;\n        }\n        else if (0 < iVar1) {\n            *(arg_8h + 0x18) = *(iVar2 + 0x18);\n            *(arg_8h + 0x14) = iVar2;\n            *(iVar2 + 0x18) = 0;\n            iVar2 = arg_8h;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 293
    },
    "004402ad": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004402ad(uint32_t arg_8h, int32_t arg_ch, uint pvargSrc, uint pvarDest)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*(arg_ch + 8) == 0) {\n        if ((arg_8h & 2) == 0) {\n            uVar1 = 0x80020003;\n        }\n        else {\n            iVar2 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(pvarDest, pvargSrc);\n            if (iVar2 < 0) {\n                uVar1 = 0x80020009;\n            }\n            else {\n                uVar1 = 0;\n            }\n        }\n    }\n    else {\n        uVar1 = 0x8002000e;\n    }\n    return uVar1;\n}\n",
        "token_count": 188
    },
    "00440341": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440341(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.0042010a(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.0041faa0(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0042017e(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    iVar4 = fcn.0042010a(0x10);\n    if (iVar4 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = fcn.00439f5e(arg_8h);\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = uVar3;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 383
    },
    "00440527": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440527(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (in_ECX != arg_8h) {\n        fcn.00440fb2();\n        uVar4 = *(arg_8h + 8);\n        if (*(in_ECX + 0xc) < uVar4) {\n            uVar3 = 8;\n            if (7 < uVar4) {\n                uVar3 = uVar4;\n            }\n            *(in_ECX + 0xc) = uVar3;\n            uVar1 = fcn.0042010a(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n            if (*(in_ECX + 4) != 0) {\n                fcn.0042017e(*(in_ECX + 4));\n            }\n            *(in_ECX + 4) = uVar1;\n        }\n        iVar2 = *(arg_8h + 8);\n        uVar4 = 0;\n        *(in_ECX + 8) = iVar2;\n        if (iVar2 != 0) {\n            do {\n                iVar2 = fcn.0042010a(0x10);\n                if (iVar2 == 0) {\n                    iVar2 = 0;\n                }\n                else {\n                    uVar1 = *(*(arg_8h + 4) + uVar4 * 4);\n                    *(iVar2 + 8) = 0;\n                    fcn.004113a0(uVar1);\n                }\n                *(*(in_ECX + 4) + uVar4 * 4) = iVar2;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < *(in_ECX + 8));\n        }\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "00440657": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00440657(int32_t *arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    uint32_t uVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    int32_t unaff_ESI;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t unaff_EDI;\n    uint *puVar12;\n    uint arg_ch_00;\n    uint arg_10h;\n    int32_t in_stack_ffffff6c;\n    int32_t *piStack144;\n    int32_t iStack140;\n    int32_t iStack136;\n    uint *puStack132;\n    int32_t iStack128;\n    int32_t iStack124;\n    int32_t iStack120;\n    uint uStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    uint uStack104;\n    int32_t iStack100;\n    uint uStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uchar auStack68 [8];\n    int32_t iStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    int32_t *piStack44;\n    uchar auStack40 [20];\n    uchar auStack20 [16];\n    \n    uStack56 = *(in_ECX + 0x28);\n    uStack52 = *(in_ECX + 0x2c);\n    uStack48 = *(in_ECX + 0x30);\n    piStack44 = *(in_ECX + 0x34);\n    *piStack44 = *piStack44 + 1;\n    iStack108 = in_ECX;\n    fcn.00407b4b(&arg_ch);\n    fcn.0040caee(iStack60);\n    puVar2 = fcn.0041cf79(&uStack88);\n    puStack132 = puVar2;\n    fcn.00405cd3();\n    uVar9 = 0;\n    if (puVar2 == NULL) goto code_r0x00440c7a;\n    if (*(puVar2 + 8) != '\\0') {\n        *(*(in_ECX + 0x3c) + 0xf4) = puVar2[4];\n        iStack128 = 0;\n        iVar3 = fcn.00405554(puVar2[4]);\n        iVar4 = unaff_ESI << 4;\n        uStack96 = 0x49dc40;\n        puStack92 = NULL;\n        uStack88 = 0;\n        uStack84 = 0;\n        iVar10 = 4;\n        arg_10h = 0;\n        piStack144 = NULL;\n        iStack140 = 1;\n        uStack56 = 0x49dc3c;\n        uStack52 = 0;\n        uStack48 = 0;\n        piStack44 = NULL;\n        iStack120 = 0x49dbf4;\n        arg_ch_00 = 0;\n        uStack116 = 0;\n        iStack112 = 0;\n        iStack108 = 0;\n        iStack80 = 0x47;\n        iStack76 = 0x48;\n        iStack128 = 0x40;\n        iVar5 = 0;\n        while ((iVar5 < *(iStack136 + 0x14) || (iVar5 < unaff_ESI))) {\n            iVar11 = iVar10;\n            if (iVar5 < *(iStack136 + 0x14)) {\n                for (ppiVar6 = *(iVar3 + 4) + iVar10 * 4; *(*ppiVar6 + 2) == 0; ppiVar6 = ppiVar6 + 1) {\n                    if (((*(ppiVar6[1] + 2) != 0x33) && (in_ECX = iStack124,  **ppiVar6 == *ppiVar6[1])) ||\n                       ((**ppiVar6 != 0x24 && (**ppiVar6 != 0x1e)))) {\n                        fcn.0044d520(0x91, *(*(*(iVar3 + 4) + iVar10 * 4) + 10));\n                        goto code_r0x00440b0d;\n                    }\n                    iVar10 = iVar10 + 1;\n                }\n                iVar11 = iVar10 + 1;\n                if (*(*(*(iVar3 + 4) + iVar11 * 4) + 8) == 0x41) {\n                    iVar11 = iVar10 + 2;\n                    iVar5 = 0;\n                    piVar8 = *(iVar3 + 4) + iVar11 * 4;\n                    do {\n                        iVar1 = *(*piVar8 + 8);\n                        if (iVar1 == iStack80) {\n                            iVar5 = iVar5 + 1;\n                        }\n                        else if (iVar1 == iStack76) {\n                            iVar5 = iVar5 + -1;\n                            in_ECX = iStack124;\n                            if (iVar5 < 0) break;\n                        }\n                        else if ((iVar1 == iStack128) && (in_ECX = iStack124,  iVar5 == 0)) break;\n                        iVar11 = iVar11 + 1;\n                        piVar8 = piVar8 + 1;\n                    } while( true );\n                }\n                if (unaff_ESI <= puStack132) goto code_r0x00440859;\n                fcn.0044a6f6(*arg_8h + iVar4 + -0x10);\n                unaff_ESI = iVar3;\n            }\n            else {\ncode_r0x00440859:\n                fcn.00412570();\n                arg_10h = 0;\n                iStack140 = 1;\n                unaff_ESI = iVar3;\n            }\n            fcn.0041bc5c(&stack0xffffff5b);\n            fcn.0041baef(&stack0xffffff64);\n            iVar10 = iVar11 + 1;\n            iVar5 = iStack140 + 1;\n            iVar3 = unaff_ESI;\n            iStack140 = iVar5;\n        }\n        fcn.0040109f(*(iStack136 + 0x10));\n        iVar3 = 4;\n        uStack104 = 1;\n        if (0 < *(iStack140 + 0x14)) {\ncode_r0x004408ce:\n            in_ECX = iStack100;\n            iStack136 = 0;\n            ppiVar6 = *(in_stack_ffffff6c + 4) + iVar3 * 4;\ncode_r0x004408f7:\n            if (*(*ppiVar6 + 2) == 0) {\n                if (**ppiVar6 != 0x24) goto code_r0x004408e5;\n                goto code_r0x004408f3;\n            }\n            iStack140 = 1;\n            iVar4 = 0;\n            piVar8 = *(in_stack_ffffff6c + 4) + iVar3 * 4;\n            do {\n                piVar8 = piVar8 + 1;\n                iVar1 = *(*piVar8 + 8);\n                if (iVar1 == uStack56) {\n                    iVar4 = iVar4 + 1;\n                }\n                else if (iVar1 == uStack52) {\n                    iVar4 = iVar4 + -1;\n                    if (iVar4 < 0) goto code_r0x00440924;\n                }\n                else if ((iVar1 == uStack104) && (iVar4 == 0)) goto code_r0x00440924;\n                iStack140 = iStack140 + 1;\n            } while( true );\n        }\n        puVar2 = NULL;\n        goto code_r0x00440a01;\n    }\n    if (**(in_ECX + 0x38) == 0x40) {\n        fcn.00440fe1();\n    }\n    piStack144 = in_ECX + 0x40;\n    uStack116 = 0x49dc40;\n    iStack112 = 0;\n    iStack108 = 0;\n    uStack104 = 0;\n    iStack140 = 0;\n    iStack136 = 1;\n    if (*(in_ECX + 0x4c) == 8) {\n        iVar3 = *piStack144;\n    }\n    else {\n        iVar3 = 0;\n    }\n    (**(**(iVar3 + 8) + 4))(*(iVar3 + 8));\n    fcn.00412570();\n    puStack132 = 0x6;\n    fcn.0041baef(&piStack144);\n    fcn.00408182(auStack68);\n    fcn.0041baef(auStack40);\n    fcn.00412570();\n    iVar3 = unaff_EDI + -1;\n    if (-1 < iVar3) {\n        iVar4 = iVar3 * 0x10;\n        do {\n            fcn.0044a6f6(*arg_8h + iVar4);\n            fcn.0041baef(&stack0xffffff68);\n            iVar4 = iVar4 + -0x10;\n            iVar3 = iVar3 + -1;\n        } while (-1 < iVar3);\n    }\n    iVar3 = *(iStack140 + 0x14);\n    if ((unaff_EDI < iVar3) && (iVar4 = 0,  iVar3 != unaff_EDI && -1 < iVar3 - unaff_EDI)) {\n        do {\n            uStack96 = 0;\n            uStack88 = 0;\n            uStack84 = 1;\n            fcn.0041baef(&uStack96);\n            fcn.00412570();\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < *(iStack140 + 0x14) - unaff_EDI);\n    }\n    fcn.00441006(&iStack124);\n    fcn.00412570();\n    goto code_r0x00440c75;\ncode_r0x004408e5:\n    if (**ppiVar6 == 0x1e) {\n        iStack136 = 0x100;\ncode_r0x004408f3:\n        iVar3 = iVar3 + 1;\n        ppiVar6 = ppiVar6 + 1;\n    }\n    goto code_r0x004408f7;\ncode_r0x00440924:\n    if (iStack108 < iStack76) {\n        iStack80 = iVar3 + 2;\n        iVar4 = iStack140 + iVar3;\n        iVar5 = fcn.0040fa40(in_stack_ffffff6c, &iStack80, &iStack128, iVar4);\n        if (iVar5 < 0) goto code_r0x00440b0d;\n        fcn.00405b47(**(*(iVar4 + 4) + iVar3 * 4));\n    }\n    else {\n        fcn.00405b47(**(*(in_stack_ffffff6c + 4) + iVar3 * 4));\n    }\n    fcn.0040d380(**(puStack132[1] + iVar3 * 4), arg_ch_00, arg_10h, in_stack_ffffff6c);\n    puStack132 = puStack132 + 1;\n    iVar3 = iVar3 + iStack140 + 1;\n    iStack76 = iStack76 + 1;\n    if (*(iStack112 + 0x14) < iStack76) goto code_r0x004409f5;\n    goto code_r0x004408ce;\ncode_r0x00440b0d:\n    fcn.00407da8();\n    fcn.004404e2();\n    fcn.00412570();\n    fcn.004404c9();\n    uVar9 = 0x80004005;\n    goto code_r0x00440c7a;\ncode_r0x004409f5:\n    puStack132 = puStack92;\n    puVar2 = puStack92;\ncode_r0x00440a01:\n    fcn.00412570();\n    iStack128 = in_ECX + 0x40;\n    puVar12 = 0x4b2fa8;\n    uStack116 = 6;\n    fcn.0040caee(0x4b2fa8);\n    fcn.0040d380(auStack20, ~-(iStack120 != 6) & puStack132, 0, 1);\n    fcn.00405cd3();\n    fcn.00401000(puStack132[4] + 1, 0, 0);\n    uVar7 = arg_8h[2];\n    if (uVar7 != 0) {\n        iStack136 = iStack60 - puVar2;\n        do {\n            if (**(iStack136 + puVar2) != '\\0') {\n                puVar2 = ((uVar7 - uVar9) + -1) * 0x10 + *arg_8h;\n                fcn.00440e42(*puVar12, *puVar2, puVar2[1], puVar2[2]);\n                puVar2 = puVar12;\n            }\n            uVar7 = arg_8h[2];\n            uVar9 = uVar9 + 1;\n            puVar2 = puVar2 + 1;\n            puVar12 = puVar2;\n        } while (uVar9 < uVar7);\n    }\n    fcn.00401188();\n    fcn.00407da8();\n    fcn.004404e2();\n    fcn.00412570();\ncode_r0x00440c75:\n    uVar9 = 0;\n    fcn.004404c9();\ncode_r0x00440c7a:\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return uVar9;\n}\n",
        "token_count": 3125
    },
    "00440d39": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00440d39(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    if (arg_ch == -999) {\n        fcn.00440e20();\n    }\n    else {\n        piVar1 = *(arg_8h + 0xc);\n        if (piVar1 != NULL) {\n            arg_8h = 0;\n            iVar2 = (**(*piVar1 + 0x1c))(piVar1, arg_ch, &arg_8h, 1, &var_4h);\n            if ((-1 < iVar2) && (arg_8h != 0)) {\n                iVar2 = arg_8h;\n                fcn.0040caee(arg_8h);\n                uVar3 = fcn.00440657(arg_1ch, iVar2);\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg_8h);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 275
    },
    "00441006": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441006(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.0042010a(0x14);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.004403cc();\n    }\n    *(iVar1 + 0x10) = 0;\n    fcn.00440527(arg_8h);\n    if (in_ECX[1] == 0) {\n        in_ECX[1] = iVar1;\n    }\n    else {\n        *(in_ECX[2] + 0x10) = iVar1;\n    }\n    *in_ECX = *in_ECX + 1;\n    in_ECX[2] = iVar1;\n    return;\n}\n",
        "token_count": 190
    },
    "00441050": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441050(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t *in_ECX;\n    int32_t *var_8h;\n    int32_t ppv;\n    \n    *in_ECX = 0x4b3038;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = *0x48d93c;\n    in_ECX[7] = *0x48d940;\n    in_ECX[8] = *0x48d944;\n    in_ECX[9] = *0x48d948;\n    in_ECX[10] = *0x48d93c;\n    in_ECX[0xb] = *0x48d940;\n    in_ECX[0xc] = *0x48d944;\n    in_ECX[0xd] = *0x48d948;\n    in_ECX[0xe] = 1;\n    var_8h = in_ECX;\n    iVar1 = fcn.00441255(arg_8h, arg_ch);\n    if (-1 < iVar1) {\n        ppv = 0;\n        iVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(in_ECX + 6, 0, 5, in_ECX + 10, &ppv);\n        if (iVar1 < 0) {\n            if (arg_10h == 0) {\n                in_ECX[1] = -0x7ffbfeac;\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n                in_ECX[4] = arg_10h;\n                pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(arg_10h, \"DllGetClassObject\");\n                if (pcVar3 == NULL) {\n                    in_ECX[1] = -0x7ffd7fd1;\n                }\n                else {\n                    iVar1 = fcn.004413d1();\n                    if (-1 < iVar1) {\n                        var_8h = NULL;\n                        iVar1 = (*pcVar3)(in_ECX + 6, 0x48d90c, &var_8h);\n                        if ((iVar1 < 0) || (var_8h == NULL)) {\n                            in_ECX[1] = -0x7ffbfeef;\n                        }\n                        else {\n                            iVar1 = (**(*var_8h + 0xc))(var_8h, 0, in_ECX + 10, &ppv);\n                            if ((-1 < iVar1) && (ppv != 0)) {\n                                fcn.004412f6(ppv);\n                            }\n                            if (in_ECX[2] == 0) {\n                                in_ECX[1] = -0x7fffbffe;\n                            }\n                            (**(*var_8h + 8))(var_8h);\n                        }\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar2);\n            }\n        }\n        else {\n            fcn.004412f6(ppv);\n            if (in_ECX[2] == 0) {\n                in_ECX[1] = -0x7fffbffe;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 791
    },
    "00441255": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441255(uint arg_8h, int32_t lpsz)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0043a857(0);\n    if (iVar1 < 0) {\n        *(in_ECX + 4) = 0x800401f3;\n    }\n    else if (lpsz == 0) {\n        *(in_ECX + 0x28) = *0x48d91c;\n        *(in_ECX + 0x2c) = *0x48d920;\n        *(in_ECX + 0x30) = *0x48d924;\n        *(in_ECX + 0x34) = *0x48d928;\n    }\n    else {\n        iVar1 = (*_sym.imp.ole32.dll_IIDFromString)(lpsz, in_ECX + 0x28);\n        if (iVar1 < 0) {\n            *(in_ECX + 4) = 0x800401f4;\n        }\n    }\n    return *(in_ECX + 4);\n}\n",
        "token_count": 248
    },
    "0044137b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044137b(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"oleaut32.dll\");\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RegisterTypeLibForUser\");\n            param_1[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "004413a6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004413a6(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"oleaut32.dll\");\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"UnRegisterTypeLibForUser\");\n            param_1[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "004414df": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00441541)\n\nvoid __fastcall fcn.004414df(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint hLibModule;\n    uint var_8h;\n    int32_t pdecIn;\n    \n    if ((*(param_1 + 0x14) != 0) && (iVar2 = (**(**(param_1 + 0xc) + 0x1c))(*(param_1 + 0xc), &pdecIn),  -1 < iVar2)) {\n        if (*(param_1 + 0x14) == 1) {\n            cVar1 = fcn.00441369();\n            if (cVar1 != '\\0') {\n                pcVar3 = fcn.004411dd(pdecIn, *(pdecIn + 0x18), *(pdecIn + 0x1a), *(pdecIn + 0x10), *(pdecIn + 0x14));\n                (*pcVar3)();\n            }\n        }\n        else if (*(param_1 + 0x14) == 2) {\n            (*_sym.imp.OLEAUT32.dll_VarDecFix)\n                      (pdecIn, *(pdecIn + 0x18), *(pdecIn + 0x1a), *(pdecIn + 0x10), *(pdecIn + 0x14));\n        }\n        (**(**(param_1 + 0xc) + 0x30))(*(param_1 + 0xc), pdecIn);\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "00441622": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441622(uint *param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    \n    *param_1 = 0x4b32c4;\n    if (param_1[1] != 0) {\n        uVar2 = 0;\n        if (*(param_1[4] + 4) != 0) {\n            do {\n                fcn.0042017e(*(param_1[2] + uVar2 * 4));\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(param_1[4] + 4));\n        }\n        fcn.0042017e(param_1[2]);\n        fcn.0042017e(param_1[3]);\n        fcn.0042017e(param_1[4]);\n        fcn.0042017e(param_1[1]);\n    }\n    piVar1 = param_1[7];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if (param_1[9] != 0) {\n        (**(*param_1[5] + 8))(param_1[5]);\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "004420f7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004420f7(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar2 = *(param_1 + 0x1c);\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 0xc))(piVar2, &var_ch);\n        uVar1 = *(var_ch + 0x30);\n        iVar3 = *(var_ch + 0x28);\n        var_8h = uVar1;\n        (**(**(param_1 + 0x1c) + 0x4c))(*(param_1 + 0x1c), var_ch);\n        if ((((iVar3 != 3) && (*(param_1 + 4) != 0)) && (uVar1 != 0)) && (uVar4 = 0,  var_8h != 0)) {\n            do {\n                iVar3 = (**(**(param_1 + 0x1c) + 0x20))(*(param_1 + 0x1c), uVar4, &var_10h);\n                if (iVar3 == 0) {\n                    var_4h = NULL;\n                    (**(**(param_1 + 0x1c) + 0x38))(*(param_1 + 0x1c), var_10h, &var_4h);\n                    (**(*var_4h + 0xc))(var_4h, &var_14h);\n                    iVar3 = *(var_14h + 0x28);\n                    (**(*var_4h + 0x4c))(var_4h, var_14h);\n                    if (iVar3 == 3) {\n                        (**(**(param_1 + 0x1c) + 8))(*(param_1 + 0x1c));\n                        *(param_1 + 0x1c) = var_4h;\n                        return;\n                    }\n                    (**(*var_4h + 8))(var_4h);\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 543
    },
    "0044220c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044220c(uint32_t lpString)\n\n{\n    int16_t iVar1;\n    int64_t iVar2;\n    bool bVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    char16_t **ppcVar7;\n    int16_t *piVar8;\n    int32_t in_ECX;\n    int32_t iVar9;\n    int16_t *piVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint var_30h;\n    int32_t var_2ch;\n    int16_t *var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t *var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n    uVar11 = 2;\n    iVar2 = (iVar5 + 6) * 2;\n    uVar6 = fcn.0042010a(-(iVar2 >> 0x20 != 0) | iVar2);\n    iVar9 = 0;\n    *(in_ECX + 4) = uVar6;\n    iVar12 = 0;\n    var_8h = 2;\n    var_4h = 0;\n    if (0 < iVar5) {\n        do {\n            for (; *(lpString + iVar9 * 2) == 0x20; iVar9 = iVar9 + 1) {\n            }\n            iVar1 = *(lpString + iVar9 * 2);\n            while (iVar1 != 0x20) {\n                iVar9 = iVar9 + 1;\n                *(*(in_ECX + 4) + iVar12 * 2) = iVar1;\n                iVar12 = iVar12 + 1;\n                uVar11 = var_8h;\n                iVar1 = *(lpString + iVar9 * 2);\n            }\n            uVar11 = uVar11 + 1;\n            *(*(in_ECX + 4) + iVar12 * 2) = 0x7c;\n            for (; *(lpString + iVar9 * 2) == 0x20; iVar9 = iVar9 + 1) {\n            }\n            while( true ) {\n                iVar13 = iVar12 + 1;\n                iVar1 = *(lpString + iVar9 * 2);\n                if ((iVar1 == 0x20) || (iVar1 == 0x28)) break;\n                *(*(in_ECX + 4) + iVar13 * 2) = iVar1;\n                iVar9 = iVar9 + 1;\n                iVar12 = iVar13;\n            }\n            *(*(in_ECX + 4) + iVar13 * 2) = 0x3b;\n            iVar12 = iVar12 + 2;\n            for (; *(lpString + iVar9 * 2) == 0x20; iVar9 = iVar9 + 1) {\n            }\n            if (*(lpString + iVar9 * 2) != 0x28) goto code_r0x004422ef;\n            do {\n                iVar9 = iVar9 + 1;\ncode_r0x004422ef:\n            } while (*(lpString + iVar9 * 2) == 0x20);\n            bVar3 = true;\n            do {\n                for (; *(lpString + iVar9 * 2) == 0x20; iVar9 = iVar9 + 1) {\n                }\n                for (; iVar1 = *(lpString + iVar9 * 2),  iVar1 != 0x3b; iVar9 = iVar9 + 1) {\n                    while (iVar1 == 0x20) {\n                        iVar9 = iVar9 + 1;\n                        iVar1 = *(lpString + iVar9 * 2);\n                    }\n                    iVar1 = *(lpString + iVar9 * 2);\n                    if (iVar1 == 0x29) {\n                        bVar3 = false;\n                        iVar9 = iVar9 + 1;\n                        break;\n                    }\n                    *(*(in_ECX + 4) + iVar12 * 2) = iVar1;\n                    iVar12 = iVar12 + 1;\n                }\n                for (; *(lpString + iVar9 * 2) == 0x20; iVar9 = iVar9 + 1) {\n                }\n                if (bVar3) {\n                    uVar4 = 0x3b;\n                }\n                else {\n                    uVar4 = 10;\n                }\n                *(*(in_ECX + 4) + iVar12 * 2) = uVar4;\n                iVar12 = iVar12 + 1;\n                if (*(lpString + iVar9 * 2) == 0x3b) {\n                    iVar9 = iVar9 + 1;\n                }\n            } while (bVar3);\n            var_8h = uVar11;\n            var_4h = iVar12;\n        } while (iVar9 < iVar5);\n    }\n    if (*(in_ECX + 0x24) != 0) {\n        var_8h = var_8h + 3;\n    }\n    uVar6 = fcn.0042010a(-(var_8h * 4 >> 0x20 != 0) | var_8h * 4);\n    *(in_ECX + 8) = uVar6;\n    ppcVar7 = fcn.0042010a(-(var_8h * 0x1c >> 0x20 != 0) | var_8h * 0x1c);\n    *(in_ECX + 0xc) = ppcVar7;\n    *ppcVar7 = L\"InterfaceDispatch\";\n    *(*(in_ECX + 0xc) + 4) = 0;\n    *(*(in_ECX + 0xc) + 8) = 0xffffffff;\n    *(*(in_ECX + 0xc) + 0xc) = 0xffffffff;\n    *(*(in_ECX + 0xc) + 0x10) = 4;\n    *(*(in_ECX + 0xc) + 0x14) = 0;\n    *(*(in_ECX + 0xc) + 0x18) = 1;\n    *(*(in_ECX + 0xc) + 0x1a) = 0;\n    iVar9 = 2;\n    *(*(in_ECX + 0xc) + 0x1c) = 0;\n    *(*(in_ECX + 0xc) + 0x20) = 0;\n    lpString = 2;\n    *(*(in_ECX + 0xc) + 0x24) = 0;\n    *(*(in_ECX + 0xc) + 0x28) = 0xffffffff;\n    *(*(in_ECX + 0xc) + 0x2c) = 4;\n    *(*(in_ECX + 0xc) + 0x30) = 0;\n    *(*(in_ECX + 0xc) + 0x34) = 2;\n    *(*(in_ECX + 0xc) + 0x36) = 0x13;\n    **(in_ECX + 8) = 0;\n    *(*(in_ECX + 8) + 4) = 0;\n    if (*(in_ECX + 0x24) != 0) {\n        *(*(in_ECX + 0xc) + 0x38) = L\"QueryInterface\";\n        iVar9 = 5;\n        *(*(in_ECX + 0xc) + 0x40) = 1;\n        *(*(in_ECX + 0xc) + 0x44) = 0;\n        lpString = 5;\n        *(*(in_ECX + 0xc) + 0x48) = 4;\n        *(*(in_ECX + 0xc) + 0x4c) = 2;\n        *(*(in_ECX + 0xc) + 0x50) = 1;\n        *(*(in_ECX + 0xc) + 0x52) = 3;\n        uVar6 = fcn.0042010a(0x10);\n        *(*(in_ECX + 8) + 8) = uVar6;\n        *(*(*(in_ECX + 8) + 8) + 4) = 0x48;\n        *(*(*(in_ECX + 8) + 8) + 0xc) = 0x4013;\n        **(*(in_ECX + 8) + 8) = 0;\n        *(*(*(in_ECX + 8) + 8) + 8) = 0;\n        *(*(in_ECX + 0xc) + 0x3c) = *(*(in_ECX + 8) + 8);\n        *(*(in_ECX + 0xc) + 0x54) = L\"AddRef\";\n        *(*(in_ECX + 0xc) + 0x58) = 0;\n        *(*(in_ECX + 0xc) + 0x5c) = 2;\n        *(*(in_ECX + 0xc) + 0x60) = 1;\n        *(*(in_ECX + 0xc) + 100) = 4;\n        *(*(in_ECX + 0xc) + 0x68) = 0;\n        *(*(in_ECX + 0xc) + 0x6c) = 1;\n        *(*(in_ECX + 0xc) + 0x6e) = 0x13;\n        *(*(in_ECX + 8) + 0xc) = 0;\n        *(*(in_ECX + 0xc) + 0x70) = L\"Release\";\n        *(*(in_ECX + 0xc) + 0x74) = 0;\n        *(*(in_ECX + 0xc) + 0x78) = 3;\n        *(*(in_ECX + 0xc) + 0x7c) = 2;\n        *(*(in_ECX + 0xc) + 0x80) = 4;\n        *(*(in_ECX + 0xc) + 0x84) = 0;\n        *(*(in_ECX + 0xc) + 0x88) = 1;\n        *(*(in_ECX + 0xc) + 0x8a) = 0x13;\n        *(*(in_ECX + 8) + 0x10) = 0;\n    }\n    piVar10 = NULL;\n    iVar12 = *(in_ECX + 4);\n    var_28h = NULL;\n    var_2ch = 0;\n    if (0 < var_4h) {\n        iVar9 = iVar9 * 0x1c;\n        var_ch = lpString << 2;\n        var_20h = lpString + -2;\n        var_1ch = iVar12;\n        var_14h = iVar9;\n        do {\n            iVar1 = *(iVar12 + var_2ch * 2);\n            if (iVar1 == 0x7c) {\n                *(iVar12 + var_2ch * 2) = 0;\n                var_28h = iVar12 + (var_2ch + 1) * 2;\n                piVar10 = var_28h;\n            }\n            else if ((iVar1 == 10) || (iVar1 == 0)) {\n                *(iVar12 + var_2ch * 2) = 0;\n                *(iVar9 + *(in_ECX + 0xc)) = var_1ch;\n                *(iVar9 + 8 + *(in_ECX + 0xc)) = var_20h + 1;\n                *(iVar9 + 0xc + *(in_ECX + 0xc)) = var_20h;\n                *(iVar9 + 0x18 + *(in_ECX + 0xc)) = 1;\n                lpString = 0;\n                iVar5 = 0;\n                if (*piVar10 != 0) {\n                    lpString = 0;\n                    piVar8 = piVar10;\n                    do {\n                        if (*piVar8 == 0x3b) {\n                            if (piVar8[1] == 0) {\n                                *piVar8 = 0;\n                            }\n                            else {\n                                lpString = lpString + 1;\n                            }\n                        }\n                        iVar5 = iVar5 + 1;\n                        piVar8 = piVar10 + iVar5;\n                        iVar9 = var_14h;\n                    } while (*piVar8 != 0);\n                }\n                var_10h = NULL;\n                iVar13 = 0;\n                if (0 < iVar5) {\n                    do {\n                        if (piVar10[iVar13] == 0x3b) {\n                            piVar10[iVar13] = 0;\n                            if (piVar10[iVar13 + 1] != 0) {\n                                var_10h = piVar10 + iVar13 + 1;\n                            }\n                            break;\n                        }\n                        iVar13 = iVar13 + 1;\n                    } while (iVar13 < iVar5);\n                }\n                fcn.004418e8(piVar10, *(in_ECX + 0xc) + 0x10 + iVar9, *(in_ECX + 0xc) + 0x1a + iVar9);\n                *(iVar9 + 0x14 + *(in_ECX + 0xc)) = lpString;\n                if (lpString == 0) {\n                    *(var_ch + *(in_ECX + 8)) = 0;\n                    *(iVar9 + 4 + *(in_ECX + 0xc)) = 0;\n                }\n                else {\n                    uVar6 = fcn.0042010a(-(lpString * 8 >> 0x20 != 0) | lpString * 8);\n                    *(var_ch + *(in_ECX + 8)) = uVar6;\n                    if (var_10h != NULL) {\n                        iVar1 = *var_10h;\n                        lpString = 0;\n                        var_1ch = 0;\n                        piVar8 = var_10h;\n                        piVar10 = var_10h;\n                        while (iVar1 != 0) {\n                            if (*piVar8 == 0x3b) {\n                                *piVar8 = 0;\n                                uVar4 = fcn.00442caa(piVar10);\n                                *(*(*(in_ECX + 8) + var_ch) + 4 + lpString * 8) = uVar4;\n                                *(*(*(in_ECX + 8) + var_ch) + lpString * 8) = 0;\n                                lpString = lpString + 1;\n                                piVar10 = piVar8 + 1;\n                            }\n                            var_1ch = var_1ch + 1;\n                            piVar8 = var_10h + var_1ch;\n                            iVar1 = *piVar8;\n                        }\n                        uVar4 = fcn.00442caa(piVar10);\n                        *(*(*(in_ECX + 8) + var_ch) + 4 + lpString * 8) = uVar4;\n                        *(*(*(in_ECX + 8) + var_ch) + lpString * 8) = 0;\n                        iVar9 = var_14h;\n                    }\n                    *(iVar9 + 4 + *(in_ECX + 0xc)) = *(var_ch + *(in_ECX + 8));\n                }\n                var_ch = var_ch + 4;\n                iVar9 = iVar9 + 0x1c;\n                var_1ch = iVar12 + (var_2ch + 1) * 2;\n                piVar10 = var_28h;\n                var_20h = var_20h + 1;\n                var_14h = iVar9;\n            }\n            var_2ch = var_2ch + 1;\n        } while (var_2ch < var_4h);\n    }\n    iVar9 = fcn.0042010a(8);\n    *(in_ECX + 0x10) = iVar9;\n    *(iVar9 + 4) = var_8h;\n    **(in_ECX + 0x10) = *(in_ECX + 0xc);\n    return;\n}\n",
        "token_count": 3645
    },
    "00442d9a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00442d9a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint var_14h;\n    \n    arg_8h_00 = 0;\n    if ((*(in_ECX + 0x24) != 0) && (*(in_ECX + 0x10) != '\\0')) {\n        fcn.00407dd0();\n        iVar1 = fcn.0041de96(arg_8h, 1);\n        if (0 < iVar1) {\n            fcn.0040d3d2();\n            if (0 < iVar1) {\n                do {\n                    fcn.00442d53(arg_8h_00, &var_14h);\n                    fcn.00405b47(&var_14h);\n                    arg_8h_00 = arg_8h_00 + 1;\n                } while (arg_8h_00 < iVar1);\n            }\n            fcn.00405cd3();\n            return iVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 256
    },
    "00442e0a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00442e0a(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((param_1[9] != 0) && (*(param_1 + 4) != '\\0')) {\n        iVar1 = fcn.00408ca0(*param_1, param_1[10], 0, param_1[0x10], param_1[0xb], param_1[0xc]);\n        param_1[0xd] = iVar1;\n        if (0 < iVar1) {\n            param_1[0xd] = 0;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 149
    },
    "00442e45": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442e45(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    bool bVar3;\n    int16_t *piVar4;\n    uint16_t *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint var_18h;\n    uint var_8h;\n    \n    fcn.0040d3d2();\n    iVar1 = *arg_ch;\n    iVar6 = iVar1 + 1;\n    *arg_ch = iVar6;\n    if (iVar6 < *(arg_8h + 4)) {\n        bVar2 = false;\n        if ((arg_10h == '\\0') || (piVar4 = fcn.0041db6f(iVar6),  *piVar4 != 0x7b)) {\n            bVar3 = false;\n        }\n        else {\n            bVar3 = true;\n            *arg_ch = iVar1 + 2;\n        }\n        fcn.0040c4cd();\n        while (*arg_ch < *(arg_8h + 4)) {\n            puVar5 = fcn.0041db6f(*arg_ch);\n            iVar6 = fcn.00422952(*puVar5);\n            if (iVar6 == 0) break;\n            iVar6 = *arg_ch;\n            bVar2 = true;\n            *arg_ch = iVar6 + 1;\n            puVar5 = fcn.0041db6f(iVar6);\n            fcn.0040bd2f(*puVar5);\n        }\n        uVar7 = fcn.00422241(var_18h);\n        if (bVar2) {\n            if (!bVar3) goto code_r0x00442f16;\n            if ((*arg_ch != *(arg_8h + 4)) && (piVar4 = fcn.0041db6f(*arg_ch),  *piVar4 == 0x7d)) {\n                *arg_ch = *arg_ch + 1;\n                goto code_r0x00442f16;\n            }\n        }\n    }\n    uVar7 = 0xffffffff;\n    *arg_ch = iVar1;\ncode_r0x00442f16:\n    fcn.00405cd3();\n    return uVar7;\n}\n",
        "token_count": 518
    },
    "00443110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.00443110(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    uint arg_10h_00;\n    uint arg_8h_01;\n    int32_t arg_ch_00;\n    uchar auStackY8264 [8112];\n    uint uStackY152;\n    uint var_44h;\n    uint var_34h;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uchar *var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *var_14h;\n    uint uStack20;\n    \n    fcn.00430650();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    if (0 < arg_8h) {\n        uStack20 = 0xfff;\n        var_14h = &stack0xffffdfb8;\n        uStack28 = *0x4c2340;\n        uStack32 = 0;\n        uStack36 = 0x443147;\n        uStack36 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n        pcVar2 = _sym.imp.USER32.dll_LoadStringW;\n        var_24h = 0x443150;\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        var_24h = &stack0xffffdfb8;\n        uStack44 = 0x44315f;\n        fcn.0040caee(var_24h);\n        uStack44 = 0xfff;\n        puStack48 = &stack0xffffdfb8;\n        uStack52 = arg_ch;\n        var_34h = 0;\n        (*pcVar1)();\n        (*pcVar2)();\n        fcn.0040caee(&stack0xffffdfb8);\n        arg_8h_00 = fcn.00443438(arg_8h);\n        arg_10h_00 = fcn.004433b0(arg_8h);\n        arg_8h_01 = fcn.004433e2(arg_8h);\n        arg_ch_00 = fcn.00443414(arg_8h_01);\n        if (arg_ch_00 == 0) {\n            fcn.0042234b(&stack0xffffdfb8, L\"Line %d:\\n\\n\", arg_10h_00);\n        }\n        else {\n            fcn.0042234b(&stack0xffffdfb8, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", arg_10h_00);\n        }\n        fcn.0040caee(&stack0xffffdfb8);\n        fcn.004039e8(arg_8h_00);\n        fcn.004039e8(0x49dc8c);\n        fcn.0040d3d2();\n        if (-1 < arg_10h) {\n            fcn.00407e53(arg_8h_00);\n            fcn.0040a2fb(arg_10h, 0xffffffff);\n            fcn.004039e8(L\"^ ERROR\");\n            fcn.00407b4b(&fcn.00443110::var_24h);\n            fcn.004039e8(0x49dc8c);\n        }\n        fcn.004039e8(L\"\\nError: \");\n        fcn.00407b4b(&fcn.00443110::var_34h);\n        if (*0x4c22ea == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else {\n            uStackY152 = 0x443271;\n            fcn.00422c67(L\"%s (%d) : ==> %s: \\n%s \\n%s\\n\", arg_ch_00);\n        }\n        fcn.00405cd3();\n        fcn.00405cd3();\n        fcn.00405cd3();\n        fcn.00405cd3();\n    }\n    return;\n}\n",
        "token_count": 933
    },
    "004432b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.004432b0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t extraout_ECX;\n    uchar auStackY8228 [8156];\n    uint uStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uchar *puStackY60;\n    uint var_20h;\n    uint var_10h;\n    \n    fcn.00430650();\n    uVar1 = *(extraout_ECX + 0x58);\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    (*_sym.imp.USER32.dll_LoadStringW)();\n    fcn.0040caee(&stack0xffffdfdc);\n    if (*(extraout_ECX + 2) == '\\0') {\n        if (arg_8h == 0) {\n            fcn.0042234b(&stack0xffffdfdc, L\"Line %d:\\n\\n\", arg_ch);\n        }\n        else {\n            fcn.0042234b(&stack0xffffdfdc, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", arg_ch);\n        }\n        puStackY60 = &stack0xffffdfdc;\n        fcn.0040caee(puStackY60);\n        fcn.004039e8(arg_14h);\n        fcn.004039e8(L\"\\n\\nError: \");\n        fcn.004039e8(arg_10h);\n        fcn.004039e8(0x4b3374);\n        uStackY68 = 0;\n        uStackY72 = 0x44339b;\n        uStackY64 = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxW)();\n        fcn.00405cd3();\n    }\n    else {\n        puStackY60 = 0x44330e;\n        fcn.00422c67(0x4b32e0, arg_8h);\n    }\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 474
    },
    "00443569": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00443569(uint *arg_8h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint lpKeyState;\n    char var_f0h;\n    uint var_efh;\n    uint var_a5h;\n    uint var_60h;\n    \n    *arg_8h = 0;\n    *(arg_8h + 1) = 0;\n    if (*(in_ECX + 0x20) == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0xa0);\n        pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0xa0),  (uVar2 & 0x8000) != 0)) &&\n           (*(in_ECX + 0x1a) == '\\0')) {\n            *arg_8h = 1;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0xa1);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*pcVar1)(0xa1),  (uVar2 & 0x8000) != 0)) && (*(in_ECX + 0x1b) == '\\0')\n           ) {\n            *(arg_8h + 1) = 1;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x11);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*pcVar1)(0x11),  (uVar2 & 0x8000) != 0)) && (*(in_ECX + 0x1c) == '\\0')\n           ) {\n            *(arg_8h + 2) = 1;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x12);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*pcVar1)(0x12),  (uVar2 & 0x8000) != 0)) && (*(in_ECX + 0x1d) == '\\0')\n           ) {\n            *(arg_8h + 3) = 1;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x5b);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*pcVar1)(0x5b),  (uVar2 & 0x8000) != 0)) && (*(in_ECX + 0x1e) == '\\0')\n           ) {\n            *(arg_8h + 1) = 1;\n        }\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        if (iVar3 != 0) {\n            if (((var_60h == -0x80) || (var_f0h == -0x80)) && (*(in_ECX + 0x1a) == '\\0')) {\n                *arg_8h = 1;\n            }\n            if ((var_60h._1_1_ == -0x80) && (*(in_ECX + 0x1b) == '\\0')) {\n                *(arg_8h + 1) = 1;\n            }\n            if ((var_efh == -0x80) && (*(in_ECX + 0x1c) == '\\0')) {\n                *(arg_8h + 2) = 1;\n            }\n            if ((var_efh._1_1_ == -0x80) && (*(in_ECX + 0x1d) == '\\0')) {\n                *(arg_8h + 3) = 1;\n            }\n            if ((var_a5h == -0x80) && (*(in_ECX + 0x1e) == '\\0')) {\n                *(arg_8h + 1) = 1;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 965
    },
    "0044377c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0044377c(char *param_1)\n\n{\n    char cVar1;\n    \n    if (param_1[10] == '\\0') {\n        cVar1 = fcn.0044383c();\n        if ((cVar1 == '\\0') ||\n           (((((((((cVar1 = *param_1,  cVar1 != '-' && (cVar1 != '.')) && (cVar1 != '#')) &&\n                 ((cVar1 != '(' && (cVar1 != '\\\"')))) && ((cVar1 != '%' && ((cVar1 != '\\'' && (cVar1 != '$')))))) &&\n               (cVar1 != '&')) &&\n              (((((cVar1 != '!' && (cVar1 != 'o')) && (cVar1 != ']')) &&\n                (((cVar1 != '[' && (cVar1 != '\\\\')) && ((cVar1 != -0x5b && ((cVar1 != -0x5d && (cVar1 != '_')))))))) &&\n               ((cVar1 != -0x5a && (((cVar1 != -0x59 && (cVar1 != -0x58)) && (cVar1 != -0x57)))))))) &&\n             ((((cVar1 != -0x56 && (cVar1 != -0x55)) &&\n               (((cVar1 != -0x54 && ((cVar1 != -0x53 && (cVar1 != -0x52)))) && (cVar1 != -0x51)))) &&\n              ((((cVar1 != -0x50 && (cVar1 != -0x4f)) && (cVar1 != -0x4e)) && ((cVar1 != -0x4d && (cVar1 != -0x4c)))))))\n             ) && ((cVar1 != -0x4b && ((cVar1 != -0x4a && (cVar1 != -0x49)))))))) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 443
    },
    "00443845": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443845(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((*(param_1 + 0x10) != 0) && (iVar3 = 0,  *(param_1 + 0x20) == 0)) {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x10));\n        if (iVar1 == 0) {\n            *(param_1 + 0x10) = 0;\n        }\n        else {\n            do {\n                iVar1 = *(param_1 + 0x10);\n                iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n                if (iVar2 == iVar1) {\n                    return;\n                }\n                fcn.0041f78e(iVar1);\n                fcn.004449d1(0xf);\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "0044388d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpKeyState\n// WARNING: Variable defined which should be unmapped: var_fbh\n// WARNING: Variable defined which should be unmapped: var_b1h\n\nvoid __cdecl fcn.0044388d(char *arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_1;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint noname_2;\n    uint lpKeyState;\n    uint in_stack_fffffef4;\n    uint in_stack_fffffef8;\n    uint in_stack_fffffefc;\n    uchar var_fch;\n    uint var_fbh;\n    uint in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint in_stack_ffffff14;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint in_stack_ffffff28;\n    uint in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff38;\n    uint in_stack_ffffff3c;\n    uint in_stack_ffffff40;\n    uint in_stack_ffffff44;\n    uchar auStack184 [3];\n    uint var_b1h;\n    uint in_stack_ffffff50;\n    uint var_6ch;\n    uint var_ch;\n    \n    if (*arg_8h != '\\0') {\n        *(in_ECX + 0x14) = 1;\n    }\n    if (arg_8h[2] != '\\0') {\n        *(in_ECX + 0x16) = 1;\n    }\n    if (arg_8h[3] != '\\0') {\n        *(in_ECX + 0x17) = 1;\n    }\n    if ((*(in_ECX + 0x14) != '\\0') && (*(in_ECX + 0x1a) != '\\0')) {\n        *(in_ECX + 0x14) = 0;\n    }\n    if ((*(in_ECX + 0x15) != '\\0') && (*(in_ECX + 0x1b) != '\\0')) {\n        *(in_ECX + 0x15) = 0;\n    }\n    if ((*(in_ECX + 0x16) != '\\0') && (*(in_ECX + 0x1c) != '\\0')) {\n        *(in_ECX + 0x16) = 0;\n    }\n    if ((*(in_ECX + 0x17) != '\\0') && (*(in_ECX + 0x1d) != '\\0')) {\n        *(in_ECX + 0x17) = 0;\n    }\n    if ((*(in_ECX + 0x18) != '\\0') && (*(in_ECX + 0x1e) != '\\0')) {\n        *(in_ECX + 0x18) = 0;\n    }\n    if (*(in_ECX + 0x20) == 0) {\n        fcn.004434e5();\n        pcVar1 = _sym.imp.USER32.dll_GetAsyncKeyState;\n        noname_2 = 0xa0;\n        uVar3 = (*_sym.imp.USER32.dll_GetAsyncKeyState)();\n        pcVar2 = _sym.imp.USER32.dll_GetKeyState;\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*_sym.imp.USER32.dll_GetKeyState)(0xa0),  (uVar3 & 0x8000) != 0)) &&\n           (*(in_ECX + 0x1a) == '\\0')) {\n            uVar8 = 0xa0;\n            fcn.00444c14(0xa0);\n            fcn.00444497(&var_ch, uVar8, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, lpKeyState, in_stack_fffffef4, \n                         in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04, in_stack_ffffff08, \n                         in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18, in_stack_ffffff1c, \n                         in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, in_stack_ffffff30, \n                         in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, in_stack_ffffff44, \n                         _auStack184, stack0xffffff4c, in_stack_ffffff50);\n        }\n        uVar8 = 0xa1;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0xa1),  (uVar3 & 0x8000) != 0)) && (*(in_ECX + 0x1b) == '\\0')\n           ) {\n            uVar7 = 0xa1;\n            fcn.00444c14(0xa1);\n            fcn.00444497(&var_ch, uVar7, uVar8, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, lpKeyState, in_stack_fffffef4\n                         , in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04, in_stack_ffffff08, \n                         in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18, in_stack_ffffff1c, \n                         in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, in_stack_ffffff30, \n                         in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, in_stack_ffffff44, \n                         _auStack184, stack0xffffff4c);\n        }\n        uVar7 = 0x11;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0x11),  (uVar3 & 0x8000) != 0)) && (*(in_ECX + 0x1c) == '\\0')\n           ) {\n            uVar6 = 0x11;\n            fcn.00444c14(0x11);\n            fcn.00444497(&var_ch, uVar6, uVar7, uVar8, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, lpKeyState, \n                         in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04, \n                         in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18, \n                         in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, \n                         in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, \n                         in_stack_ffffff44, _auStack184);\n        }\n        uVar6 = 0x12;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0x12),  (uVar3 & 0x8000) != 0)) && (*(in_ECX + 0x1d) == '\\0')\n           ) {\n            uVar5 = 0x12;\n            fcn.00444c14(0x12);\n            fcn.00444497(&var_ch, uVar5, uVar6, uVar7, uVar8, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, lpKeyState, \n                         in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04, \n                         in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18, \n                         in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, \n                         in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, \n                         in_stack_ffffff44);\n        }\n        uVar5 = 0x5b;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0x5b),  (uVar3 & 0x8000) != 0)) && (*(in_ECX + 0x1e) == '\\0')\n           ) {\n            noname_1 = 0x5b;\n            fcn.00444c14(0x5b);\n            fcn.00444497(&var_ch, noname_1, uVar5, uVar6, uVar7, uVar8, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, \n                         lpKeyState, in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04\n                         , in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18\n                         , in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c\n                         , in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40\n                        );\n        }\n    }\n    else {\n        iVar4 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        if (iVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n        }\n    }\n    return;\n}\n",
        "token_count": 2385
    },
    "00443abb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443abb(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    uint in_stack_ffffffb0;\n    int32_t in_stack_ffffffb8;\n    int32_t iVar4;\n    \n    *(in_ECX + 0x20) = arg_ch;\n    iVar4 = 0x443ad7;\n    fcn.00444a5b(arg_ch, 1);\n    if (*(in_ECX + 8) == '\\x01') {\n        iVar4 = 0;\n        in_stack_ffffffb8 = 0x14;\n        fcn.004442d9(0x14, 0);\n        in_stack_ffffffb0 = fcn.00443569(&stack0xffffffc4);\n        fcn.00443503(in_stack_ffffffb0);\n    }\n    arg_8h_00 = 0;\n    fcn.00407b6e(0x40);\n    while( true ) {\n        arg_8h_01 = arg_8h_00;\n        piVar3 = fcn.0041db6f(arg_8h_00);\n        iVar1 = *piVar3;\n        if (iVar1 == 0) break;\n        arg_8h_00 = arg_8h_00 + 1;\n        fcn.00443845();\n        if (iVar1 == 0x21) {\n            *(in_ECX + 0x17) = 1;\n        }\n        else if (iVar1 == 0x23) {\n            *(in_ECX + 0x18) = 1;\n        }\n        else if (iVar1 == 0x2b) {\n            *(in_ECX + 0x14) = 1;\n        }\n        else if (iVar1 == 0x5e) {\n            *(in_ECX + 0x16) = 1;\n        }\n        else if ((iVar1 == 0x7b) &&\n                (cVar2 = fcn.0041da0a(0x7d, arg_8h, &stack0xffffffc8, &stack0xffffffb4),  cVar2 != '\\0')) {\n            arg_8h_00 = in_stack_ffffffb8;\n            if (iVar4 != 0) {\n                fcn.00443d2b(&stack0xffffffb8);\n                arg_8h_00 = in_stack_ffffffb8;\n            }\n            *(in_ECX + 0x14) = 0;\n            *(in_ECX + 0x18) = 0;\n            in_stack_ffffffb8 = arg_8h_00;\n        }\n        else {\n            fcn.00443c15(arg_8h_01, in_stack_ffffffb0);\n            *(in_ECX + 0x14) = 0;\n            *(in_ECX + 0x18) = 0;\n        }\n    }\n    if (*(in_ECX + 8) == '\\x01') {\n        fcn.004445f9(&stack0xffffffc0);\n        fcn.004442d9(0x14, in_stack_ffffffb8);\n    }\n    fcn.00444a5b(*(in_ECX + 0x20), 0);\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 778
    },
    "00443d2b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00443d2b(uint *arg_8h)\n\n{\n    char cVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    char *pcVar5;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t iVar6;\n    uint *arg_8h_00;\n    uint uVar7;\n    uint *arg_8h_01;\n    uint *noname_3;\n    uint *arg_10h;\n    uint *arg_14h;\n    uint in_stack_ffffff94;\n    uint var_64h;\n    uint in_stack_ffffff9c;\n    uint in_stack_ffffffa0;\n    uint in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint var_44h;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint var_34h;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint in_stack_ffffffdc;\n    uint32_t in_stack_ffffffe0;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    char var_8h;\n    char var_7h;\n    uint var_6h;\n    \n    var_ch = 0;\n    var_18h = 0;\n    var_6h._0_1_ = '\\0';\n    var_6h._1_1_ = '\\0';\n    var_7h = '\\0';\n    var_8h = '\\0';\n    fcn.004434e5();\n    arg_ch = 1;\n    var_10h = 1;\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    arg_14h = &var_ch;\n    arg_10h = &var_44h;\n    arg_8h_01 = 0x20;\n    noname_3 = arg_8h;\n    cVar1 = fcn.0041da0a(0x20, arg_8h, arg_10h, arg_14h);\n    iVar3 = var_ch;\n    iVar6 = 0;\n    if (cVar1 != '\\0') {\n        while ((piVar2 = fcn.0041db6f(iVar3),  *piVar2 == 0x20 || (piVar2 = fcn.0041db6f(iVar3),  *piVar2 == 9))) {\n            iVar3 = iVar3 + 1;\n        }\n        arg_8h_01 = NULL;\n        var_ch = iVar3;\n        fcn.0041da0a(0, arg_8h, &var_34h, &var_ch);\n        iVar3 = fcn.00421bc7(var_34h, 0x49ded4);\n        iVar6 = 0;\n        if (iVar3 == 0) {\n            var_6h._0_1_ = '\\x01';\n            iVar6 = var_18h;\n        }\n        else {\n            iVar3 = fcn.00421bc7(var_34h, L\"DOWN\");\n            if (iVar3 == 0) {\n                var_6h._1_1_ = '\\x01';\n            }\n            else {\n                iVar3 = fcn.00421bc7(var_34h, 0x4b3634);\n                if (iVar3 == 0) {\n                    var_7h = '\\x01';\n                }\n                else {\n                    iVar3 = fcn.00421bc7(var_34h, 0x4b363c);\n                    if (iVar3 == 0) {\n                        var_8h = '\\x01';\n                    }\n                    else {\n                        arg_8h_01 = NULL;\n                        piVar2 = fcn.0040a4f6(0);\n                        if (*piVar2 == 0x30) {\n                            piVar2 = fcn.0040a4f6(1);\n                            if (*piVar2 != 0x78) {\n                                arg_8h_01 = 0x1;\n                                piVar2 = fcn.0040a4f6(1);\n                                if (*piVar2 != 0x58) goto code_r0x00443ec0;\n                            }\n                            fcn.0040a2fb(0, 2);\n                            fcn.004436f9(&var_34h, &var_10h);\n                            piVar2 = fcn.0040a4f6(0);\n                            arg_ch = var_10h;\n                            if (*piVar2 == 0x30) {\n                                uVar7 = 0x4b3644;\n                            }\n                            else {\n                                uVar7 = 0x4b364c;\n                            }\n                            fcn.00444c4e(&var_64h, uVar7, var_10h);\n                            arg_8h_01 = &var_64h;\n                            fcn.00407e53(arg_8h_01);\n                        }\n                        else {\ncode_r0x00443ec0:\n                            arg_ch = fcn.00422241(var_34h);\n                            if (arg_ch < 1) {\n                                arg_ch = 1;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    do {\n        iVar3 = fcn.00421bc7(*(iVar6 * 4 + 0x4bb5d0), var_44h);\n        if (iVar3 == 0) break;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0x62);\n    if (iVar6 == 0x62) {\n        puVar4 = fcn.0040a4f6(0);\n        fcn.00444ba6(*puVar4);\n        if (var_6h._1_1_ == '\\0') {\n            if (var_6h == '\\0') {\n                fcn.0040a4f6(0);\ncode_r0x004441ae:\n                fcn.00443c15(arg_8h_01, noname_3);\n                goto code_r0x00444225;\n            }\n            goto code_r0x00444220;\n        }\n        goto code_r0x0044417b;\n    }\n    if (*(iVar6 + 0x4bb568) == '\\0') {\n        fcn.00444c14(str._f_b_b..__reepqrstuvwxyz________t__[iVar6]);\n        if (var_6h._1_1_ == '\\0') {\n            if (var_6h == '\\0') {\n                if (var_7h == '\\0') {\n                    if (var_8h == '\\0') {\n                        fcn.0044427b(str._f_b_b..__reepqrstuvwxyz________t__[iVar6], arg_ch);\n                        goto code_r0x00444225;\n                    }\n                    uVar7 = 0;\n                }\n                else {\n                    uVar7 = 1;\n                }\n                fcn.004442d9(str._f_b_b..__reepqrstuvwxyz________t__[iVar6], uVar7);\n                goto code_r0x00444225;\n            }\n            goto code_r0x00444220;\n        }\n        goto code_r0x0044417b;\n    }\n    // switch table (15 cases) at 0x44423f\n    switch(str._f_b_b..__reepqrstuvwxyz________t__[iVar6]) {\n    case 0:\n        if (*(in_ECX + 0x1c) != '\\0') goto code_r0x00444225;\n        fcn.00444c14(0x11);\n        *(in_ECX + 0x1c) = 1;\n        break;\n    case 1:\n        if (*(in_ECX + 0x1c) == '\\0') goto code_r0x00444225;\n        fcn.00444c14(0x11);\n        *(in_ECX + 0x1c) = 0;\n        goto code_r0x00444220;\n    case 2:\n        if (*(in_ECX + 0x1d) != '\\0') goto code_r0x00444225;\n        fcn.00444c14(0x12);\n        goto code_r0x00444019;\n    case 3:\n        if (*(in_ECX + 0x1d) == '\\0') goto code_r0x00444225;\n        fcn.00444c14(0x12);\ncode_r0x00443fcf:\n        *(in_ECX + 0x1d) = 0;\n        goto code_r0x00444220;\n    case 4:\n        if (*(in_ECX + 0x1a) != '\\0') goto code_r0x00444225;\n        fcn.00444c14(0x10);\n        goto code_r0x004440d3;\n    case 5:\n        if (*(in_ECX + 0x1a) == '\\0') goto code_r0x00444225;\n        fcn.00444c14(0x10);\ncode_r0x00444067:\n        *(in_ECX + 0x1a) = 0;\n        goto code_r0x00444220;\n    case 6:\n        if (*(in_ECX + 0x1e) != '\\0') goto code_r0x00444225;\n        fcn.00444c14(0x5b);\n        *(in_ECX + 0x1e) = 1;\n        break;\n    case 7:\n        if (*(in_ECX + 0x1e) == '\\0') goto code_r0x00444225;\n        fcn.00444c14(0x5b);\n        *(in_ECX + 0x1e) = 0;\n        goto code_r0x00444220;\n    case 8:\n        if (*(in_ECX + 0x1f) != '\\0') goto code_r0x00444225;\n        fcn.00444c14(0x5c);\n        *(in_ECX + 0x1f) = 1;\n        break;\n    case 9:\n        if (*(in_ECX + 0x1f) == '\\0') goto code_r0x00444225;\n        fcn.00444c14(0x5c);\n        *(in_ECX + 0x1f) = 0;\n        goto code_r0x00444220;\n    case 10:\n        if (*(in_ECX + 0x20) != 0) goto code_r0x004441ae;\n        if (*(in_ECX + 0x1d) == '\\0') {\n            uVar7 = 0x12;\n            fcn.00444c14(0x12);\n            fcn.00444342(&var_24h, uVar7, arg_8h_01, noname_3, arg_10h, arg_14h, unaff_EDI, unaff_ESI, unaff_EBX, \n                         in_stack_ffffff94, var_64h, in_stack_ffffff9c, in_stack_ffffffa0, in_stack_ffffffa4, \n                         in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, var_44h, \n                         in_stack_ffffffbc, in_stack_ffffffc0, in_stack_ffffffc4, var_34h, in_stack_ffffffcc, \n                         in_stack_ffffffd0, in_stack_ffffffd4, var_24h, in_stack_ffffffdc, in_stack_ffffffe0, 0, in_ECX)\n            ;\n        }\n        arg_8h_00 = NULL;\n        while (arg_8h_01 = arg_8h_00,  piVar2 = fcn.0040a4f6(arg_8h_00),  *piVar2 != 0) {\n            pcVar5 = fcn.0040a4f6(arg_8h_00);\n            fcn.00444c14(*pcVar5 + 0x30);\n            noname_3 = &var_24h;\n            fcn.004445dc(noname_3);\n            arg_8h_00 = arg_8h_00 + 1;\n        }\n        if (*(in_ECX + 0x1d) != '\\0') goto code_r0x00444225;\n        fcn.00444c14(0x12);\ncode_r0x00444220:\n        fcn.00444497(arg_8h_01, noname_3, arg_10h, arg_14h, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffff94, var_64h\n                     , in_stack_ffffff9c, in_stack_ffffffa0, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                     in_stack_ffffffb0, in_stack_ffffffb4, var_44h, in_stack_ffffffbc, in_stack_ffffffc0, \n                     in_stack_ffffffc4, var_34h, in_stack_ffffffcc, in_stack_ffffffd0, in_stack_ffffffd4, var_24h, \n                     in_stack_ffffffdc, in_stack_ffffffe0, 0, in_ECX, var_10h, var_ch);\n        goto code_r0x00444225;\n    case 0xb:\n        fcn.00444c14(0xd);\n        in_stack_ffffffe0 = in_stack_ffffffe0 & 0xff000000 | CONCAT12(1, in_stack_ffffffe0);\n        if (var_6h._1_1_ == '\\0') {\n            if (var_6h == '\\0') {\ncode_r0x004440b5:\n                fcn.004445dc(&var_24h);\n                goto code_r0x00444225;\n            }\n            goto code_r0x00444220;\n        }\n        break;\n    case 0xc:\n        fcn.00444c14(0x12);\n        if (var_6h._1_1_ == '\\0') {\n            if (var_6h == '\\0') goto code_r0x004440b5;\n            if (*(in_ECX + 0x1d) == '\\0') goto code_r0x00444225;\n            goto code_r0x00443fcf;\n        }\n        if (*(in_ECX + 0x1d) != '\\0') goto code_r0x00444225;\ncode_r0x00444019:\n        *(in_ECX + 0x1d) = 1;\n        break;\n    case 0xd:\n        fcn.00444c14(0xa0);\n        if (var_6h._1_1_ == '\\0') {\n            if (var_6h == '\\0') goto code_r0x004440b5;\n            if (*(in_ECX + 0x1a) == '\\0') goto code_r0x00444225;\n            goto code_r0x00444067;\n        }\n        if (*(in_ECX + 0x1a) != '\\0') goto code_r0x00444225;\ncode_r0x004440d3:\n        *(in_ECX + 0x1a) = 1;\n        break;\n    case 0xe:\n        fcn.00444c14(0xa1);\n        if (var_6h._1_1_ == '\\0') {\n            if (var_6h == '\\0') goto code_r0x004440b5;\n            if (*(in_ECX + 0x1b) == '\\0') goto code_r0x00444225;\n            *(in_ECX + 0x1b) = 0;\n            goto code_r0x00444220;\n        }\n        if (*(in_ECX + 0x1b) != '\\0') goto code_r0x00444225;\n        *(in_ECX + 0x1b) = 1;\n        break;\n    default:\n        goto code_r0x00444225;\n    }\ncode_r0x0044417b:\n    fcn.00444342(&var_24h, noname_3, arg_10h, arg_14h, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffff94, var_64h, \n                 in_stack_ffffff9c, in_stack_ffffffa0, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                 in_stack_ffffffb0, in_stack_ffffffb4, var_44h, in_stack_ffffffbc, in_stack_ffffffc0, in_stack_ffffffc4\n                 , var_34h, in_stack_ffffffcc, in_stack_ffffffd0, in_stack_ffffffd4, var_24h, in_stack_ffffffdc, \n                 in_stack_ffffffe0, 0, in_ECX, var_10h, var_ch);\ncode_r0x00444225:\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 4033
    },
    "00444342": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00444342(uint8_t *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint lpKeyState;\n    uint pInputs;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = *(arg_8h + 8);\n    uVar1 = *arg_8h;\n    uVar2 = arg_8h[7];\n    var_8h = var_8h & 0xffffff00 | uVar1;\n    var_4h = var_4h & 0xffffff00 | uVar2;\n    if ((((*(in_ECX + 0x20) == 0) || (uVar1 == 0x14)) || (uVar1 == 0x90)) || (uVar1 == 0x91)) {\n        cVar3 = fcn.0044383c();\n        if (cVar3 == '\\0') {\n            var_1ch = 0;\n            var_18h = 0;\n            var_24h._0_2_ = 0;\n            var_24h._2_2_ = *(arg_8h + 8);\n            pInputs = 1;\n            var_20h = 4;\n            (*_sym.imp.USER32.dll_SendInput)(1, &pInputs, 0x1c);\n        }\n        else {\n            cVar3 = fcn.0044377c();\n            fcn.00444b52(var_8h, var_4h, cVar3 == '\\x01');\n        }\n    }\n    else {\n        cVar3 = fcn.0044383c();\n        if (cVar3 == '\\0') {\n            uVar5 = var_ch & 0xffff;\n            uVar6 = 1;\n            uVar7 = 0x102;\n        }\n        else {\n            iVar4 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n            if (iVar4 != 0) {\n                *(&lpKeyState + uVar1) = *(&lpKeyState + uVar1) | 0x80;\n                (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n            }\n            uVar5 = uVar2 << 0x10;\n            uVar6 = uVar5 | 1;\n            cVar3 = fcn.0044377c();\n            if (cVar3 == '\\x01') {\n                uVar6 = uVar5 | 0x1000001;\n            }\n            if ((((*(in_ECX + 0x17) == '\\0') && (*(in_ECX + 0x1d) == '\\0')) && (uVar1 != 0x12)) ||\n               ((*(in_ECX + 0x16) != '\\0' || (*(in_ECX + 0x1c) != '\\0')))) {\n                uVar5 = uVar1;\n                uVar7 = 0x100;\n            }\n            else {\n                uVar6 = uVar6 | 0x20000000;\n                uVar5 = uVar1;\n                uVar7 = 0x104;\n            }\n        }\n        (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x20), uVar7, uVar5, uVar6);\n    }\n    fcn.0044354e();\n    return;\n}\n",
        "token_count": 1031
    },
    "00444497": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00444497(uint8_t *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint lpKeyState;\n    uint pInputs;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = *arg_8h;\n    uVar2 = arg_8h[7];\n    var_4h = var_4h & 0xffffff00 | uVar1;\n    var_8h = var_8h & 0xffffff00 | uVar2;\n    if ((((*(in_ECX + 0x20) == 0) || (uVar1 == 0x14)) || (uVar1 == 0x90)) || (uVar1 == 0x91)) {\n        cVar3 = fcn.0044383c();\n        if (cVar3 == '\\0') {\n            var_18h = 0;\n            var_14h = 0;\n            var_20h._0_2_ = 0;\n            var_20h._2_2_ = *(arg_8h + 8);\n            pInputs = 1;\n            var_1ch = 6;\n            (*_sym.imp.USER32.dll_SendInput)(1, &pInputs, 0x1c);\n        }\n        else {\n            cVar3 = fcn.0044377c();\n            if (cVar3 == '\\x01') {\n                uVar7 = 3;\n            }\n            else {\n                uVar7 = 2;\n            }\n            fcn.00444b52(var_4h, var_8h, uVar7);\n        }\n    }\n    else {\n        cVar3 = fcn.0044383c();\n        if (cVar3 != '\\0') {\n            iVar4 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n            if (iVar4 != 0) {\n                *(&lpKeyState + uVar1) = *(&lpKeyState + uVar1) ^ 0x80;\n                (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n            }\n            uVar5 = uVar2 << 0x10;\n            uVar6 = uVar5 | 0xc0000001;\n            cVar3 = fcn.0044377c();\n            if (cVar3 == '\\x01') {\n                uVar6 = uVar5 | 0xc1000001;\n            }\n            if ((((*(in_ECX + 0x17) == '\\0') && (*(in_ECX + 0x1d) == '\\0')) && (uVar1 != 0x12)) ||\n               ((*(in_ECX + 0x16) != '\\0' || (*(in_ECX + 0x1c) != '\\0')))) {\n                uVar7 = 0x101;\n            }\n            else {\n                uVar6 = uVar6 | 0x20000000;\n                uVar7 = 0x105;\n            }\n            (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x20), uVar7, uVar1, uVar6);\n        }\n    }\n    fcn.00443535();\n    return;\n}\n",
        "token_count": 992
    },
    "004445f9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004445f9(char *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint lpKeyState;\n    uint var_f0h;\n    uint var_a5h;\n    uint8_t var_60h;\n    uint var_5fh;\n    \n    if ((((*arg_8h == '\\0') && (arg_8h[1] == '\\0')) && (arg_8h[2] == '\\0')) &&\n       ((arg_8h[3] == '\\0' && (arg_8h[4] == '\\0')))) {\n        return;\n    }\n    if ((*(in_ECX + 0x20) == 0) || (iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20)),  iVar2 == 0)) {\n        if (*arg_8h != '\\0') {\n            fcn.00444b52(0xa0, *(in_ECX + 0x27), 0);\n        }\n        if (arg_8h[1] != '\\0') {\n            fcn.00444b52(0xa1, *(in_ECX + 0x28), 0);\n        }\n        if (arg_8h[2] != '\\0') {\n            fcn.00444b52(0x11, *(in_ECX + 0x24), 0);\n        }\n        if (arg_8h[3] != '\\0') {\n            fcn.00444b52(0x12, *(in_ECX + 0x25), 0);\n        }\n        if (arg_8h[4] != '\\0') {\n            fcn.00444b52(0x5b, *(in_ECX + 0x29), 0);\n        }\n        goto code_r0x004447d0;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n    if (iVar2 != 0) {\n        if (*arg_8h != '\\0') {\n            var_f0h._0_1_ = var_f0h | 0x80;\n            var_60h = var_60h | 0x80;\n        }\n        if (arg_8h[1] != '\\0') {\n            var_f0h._0_1_ = var_f0h | 0x80;\n            var_5fh._0_1_ = var_5fh | 0x80;\n        }\n        if (arg_8h[2] != '\\0') {\n            var_f0h._1_1_ = var_f0h._1_1_ | 0x80;\n        }\n        if (arg_8h[3] != '\\0') {\n            var_f0h._2_1_ = var_f0h._2_1_ | 0x80;\n        }\n        if (arg_8h[4] != '\\0') {\n            var_a5h._0_1_ = var_a5h | 0x80;\n        }\n        (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n    }\n    pcVar1 = _sym.imp.USER32.dll_PostMessageW;\n    if ((*arg_8h != '\\0') || (arg_8h[1] != '\\0')) {\n        (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x20), 0x100, 0x10, *(in_ECX + 0x26) << 0x10 | 1);\n    }\n    if (arg_8h[2] != '\\0') {\n        (*pcVar1)(*(in_ECX + 0x20), 0x100, 0x11, *(in_ECX + 0x24) << 0x10 | 1);\n    }\n    if (arg_8h[3] != '\\0') {\n        if ((arg_8h[2] == '\\0') && (*(in_ECX + 0x1c) == '\\0')) {\n            uVar3 = *(in_ECX + 0x25) << 0x10 | 0x20000001;\n            uVar4 = 0x104;\n        }\n        else {\n            if (arg_8h[3] == '\\0') goto code_r0x0044473d;\n            uVar3 = *(in_ECX + 0x25) << 0x10 | 1;\n            uVar4 = 0x100;\n        }\n        (*pcVar1)(*(in_ECX + 0x20), uVar4, 0x12, uVar3);\n    }\ncode_r0x0044473d:\n    if (arg_8h[4] != '\\0') {\n        (*pcVar1)(*(in_ECX + 0x20), 0x100, 0x5b, *(in_ECX + 0x29) << 0x10 | 1);\n    }\ncode_r0x004447d0:\n    fcn.0044354e();\n    return;\n}\n",
        "token_count": 1162
    },
    "004447de": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004447de(char *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint lpKeyState;\n    uint var_f0h;\n    uint var_a5h;\n    uint8_t var_60h;\n    uint var_5fh;\n    \n    if ((((*arg_8h == '\\0') && (arg_8h[1] == '\\0')) && (arg_8h[2] == '\\0')) &&\n       ((arg_8h[3] == '\\0' && (arg_8h[4] == '\\0')))) {\n        return;\n    }\n    if ((*(in_ECX + 0x20) == 0) || (iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20)),  iVar2 == 0)) {\n        if (*arg_8h != '\\0') {\n            fcn.00444b52(0xa0, *(in_ECX + 0x27), 2);\n        }\n        if (arg_8h[1] != '\\0') {\n            fcn.00444b52(0xa1, *(in_ECX + 0x28), 2);\n        }\n        if (arg_8h[2] != '\\0') {\n            fcn.00444b52(0x11, *(in_ECX + 0x24), 2);\n        }\n        if (arg_8h[3] != '\\0') {\n            fcn.00444b52(0x12, *(in_ECX + 0x25), 2);\n        }\n        if (arg_8h[4] != '\\0') {\n            fcn.00444b52(0x5b, *(in_ECX + 0x29), 2);\n        }\n        goto code_r0x004449c3;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n    if (iVar2 != 0) {\n        if (*arg_8h != '\\0') {\n            var_f0h._0_1_ = var_f0h ^ 0x80;\n            var_60h = var_60h ^ 0x80;\n        }\n        if (arg_8h[1] != '\\0') {\n            var_f0h._0_1_ = var_f0h ^ 0x80;\n            var_5fh._0_1_ = var_5fh ^ 0x80;\n        }\n        if (arg_8h[2] != '\\0') {\n            var_f0h._1_1_ = var_f0h._1_1_ ^ 0x80;\n        }\n        if (arg_8h[3] != '\\0') {\n            var_f0h._2_1_ = var_f0h._2_1_ ^ 0x80;\n        }\n        if (arg_8h[4] != '\\0') {\n            var_a5h._0_1_ = var_a5h ^ 0x80;\n        }\n        (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n    }\n    pcVar1 = _sym.imp.USER32.dll_PostMessageW;\n    if ((*arg_8h != '\\0') || (arg_8h[1] != '\\0')) {\n        (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x20), 0x101, 0x10, *(in_ECX + 0x26) << 0x10 | 0xc0000001);\n    }\n    if (arg_8h[2] != '\\0') {\n        (*pcVar1)(*(in_ECX + 0x20), 0x101, 0x11, *(in_ECX + 0x24) << 0x10 | 0xc0000001);\n    }\n    if (arg_8h[3] != '\\0') {\n        if ((arg_8h[2] == '\\0') && (*(in_ECX + 0x1c) == '\\0')) {\n            uVar3 = *(in_ECX + 0x25) << 0x10 | 0xe0000001;\n            uVar4 = 0x105;\n        }\n        else {\n            if (arg_8h[3] == '\\0') goto code_r0x00444928;\n            uVar3 = *(in_ECX + 0x25) << 0x10 | 0xc0000001;\n            uVar4 = 0x101;\n        }\n        (*pcVar1)(*(in_ECX + 0x20), uVar4, 0x12, uVar3);\n    }\ncode_r0x00444928:\n    if (arg_8h[4] != '\\0') {\n        (*pcVar1)(*(in_ECX + 0x20), 0x101, 0x5b, *(in_ECX + 0x29) << 0x10 | 0xc0000001);\n    }\ncode_r0x004449c3:\n    fcn.00443535();\n    return;\n}\n",
        "token_count": 1174
    },
    "00444a5b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444a5b(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t lpdwProcessId;\n    \n    iVar2 = arg_8h;\n    if ((arg_8h != 0) || (*(in_ECX + 9) != '\\0')) {\n        arg_8h = 0;\n        lpdwProcessId = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        pcVar1 = _sym.imp.USER32.dll_AttachThreadInput;\n        if (arg_ch == '\\0') {\n            if ((iVar2 != 0) && ((*_sym.imp.USER32.dll_AttachThreadInput)(iVar3, *0x4c3ed0, 0),  *0x4c3ecc != *0x4c3ed0)\n               ) {\n                (*pcVar1)(*0x4c3ecc, *0x4c3ed0, 0);\n            }\n            (*pcVar1)(iVar3, *0x4c3ecc, 0);\n        }\n        else {\n            uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)(0);\n            *0x4c3ecc = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(uVar4);\n            iVar5 = (*_sym.imp.USER32.dll_AttachThreadInput)(iVar3, *0x4c3ecc, 1);\n            if (iVar2 != 0) {\n                *0x4c3ed0 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, &lpdwProcessId);\n                if (*0x4c3ecc != *0x4c3ed0) {\n                    arg_8h = (*_sym.imp.USER32.dll_AttachThreadInput)(*0x4c3ecc, *0x4c3ed0, 1);\n                }\n                lpdwProcessId = (*_sym.imp.USER32.dll_AttachThreadInput)(iVar3, *0x4c3ed0, 1);\n            }\n            if ((((iVar5 == 0) && (arg_8h == 0)) && (lpdwProcessId == 0)) &&\n               ((iVar3 == *0x4c3ecc && (*0x4c3ecc == *0x4c3ed0)))) {\n                *(in_ECX + 0x20) = 0;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "00444c65": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444c65(uint arg_8h, uint hWnd)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t lpdwProcessId;\n    \n    iVar3 = 0;\n    piVar1 = in_ECX + 4;\n    do {\n        if (*piVar1 == 0) break;\n        iVar3 = iVar3 + 1;\n        piVar1 = piVar1 + 2;\n    } while (iVar3 < 0x10);\n    if (iVar3 == 0x10) {\n        uVar2 = 0;\n    }\n    else {\n        lpdwProcessId = in_ECX;\n        (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, &lpdwProcessId);\n        uVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x438, 0, lpdwProcessId);\n        *(in_ECX + iVar3 * 8) = uVar2;\n        uVar2 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(uVar2, 0, arg_8h, 0x1000, 4);\n        *(in_ECX + 4 + iVar3 * 8) = uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 303
    },
    "00444ed4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444ed4(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    uint *puVar2;\n    uint *arg_ch_00;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint lpsz;\n    uint cchLength;\n    uint var_ch;\n    int32_t *var_8h;\n    \n    cVar1 = fcn.0040d2c0(4);\n    if (cVar1 == '\\0') {\n        arg_8h_00 = fcn.0040cdb4();\n    }\n    else {\n        fcn.004084a6();\n        puVar2 = *(arg_8h + 8);\n        lpsz = *puVar2;\n        cchLength = puVar2[1];\n        var_ch = puVar2[2];\n        var_8h = puVar2[3];\n        *var_8h = *var_8h + 1;\n        fcn.0040b8a7();\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n        puVar2 = &fcn.00444ed4::lpsz;\n        arg_ch_00 = 0x444f30;\n        arg_8h_00 = fcn.0043fe03(puVar2);\n        if ((arg_8h_00 == -1) && (arg_ch != '\\0')) {\n            var_24h = 0;\n            var_1ch = 0;\n            arg_ch_00 = &fcn.00444ed4::var_24h;\n            puVar2 = &fcn.00444ed4::lpsz;\n            var_18h = 1;\n            arg_8h_00 = fcn.00445294(puVar2, arg_ch_00);\n            fcn.00412570();\n        }\n        fcn.00405cd3(puVar2, arg_ch_00);\n    }\n    fcn.00444f8a(arg_8h_00, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 486
    },
    "00444f8a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444f8a(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_8h < 0) {\ncode_r0x00445034:\n        uVar2 = 0;\n    }\n    else {\n        if (*(in_ECX[1] + 8) + -1 < arg_8h) {\n            if (arg_ch == '\\0') goto code_r0x00445034;\n            fcn.00445366(arg_8h);\n            var_14h = 0;\n            var_ch = 0;\n            var_8h = 1;\n            fcn.0041baef(&var_14h);\n            fcn.00412570();\n            *(*in_ECX + 4) = *(in_ECX[1] + 8);\n            iVar1 = *(in_ECX[1] + 4);\n        }\n        else {\n            if (*(*(in_ECX[1] + 4) + arg_8h * 4) == 0) {\n                if (arg_10h != '\\0') {\n                    uVar2 = fcn.00445198();\n                    return uVar2;\n                }\n                var_14h = 0;\n                var_ch = 0;\n                var_8h = 1;\n                fcn.004453e6(arg_8h, &var_14h);\n                fcn.00412570();\n            }\n            iVar1 = *(in_ECX[1] + 4);\n        }\n        uVar2 = *(iVar1 + arg_8h * 4);\n    }\n    return uVar2;\n}\n",
        "token_count": 404
    },
    "0044503c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0044503c(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpsz;\n    uint cchLength;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.004084a6();\n    puVar6 = *(arg_8h + 8);\n    lpsz = *puVar6;\n    cchLength = puVar6[1];\n    var_8h = puVar6[2];\n    var_4h = puVar6[3];\n    *var_4h = *var_4h + 1;\n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n    puVar5 = 0x1;\n    puVar6 = puVar5;\n    if (arg_ch == 1) {\n        puVar6 = &lpsz;\n        uVar3 = fcn.00444e54(puVar6);\n        fcn.0040d89e(uVar3);\n        if (*(in_ECX + 8) != '\\0') {\n            cVar2 = fcn.0041f885();\n            if ((cVar2 != '\\0') && (*(arg_10h + 8) == 1)) {\n                iVar4 = **(arg_10h + 4);\n                fcn.004084a6();\n                puVar6 = *(iVar4 + 8);\n                uVar3 = *puVar6;\n                uVar1 = puVar6[1];\n                *puVar6[3] = *puVar6[3] + 1;\n                fcn.0040b8a7();\n                (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar3, uVar1);\n                fcn.00405cd3();\n                puVar6 = puVar5;\n            }\n            goto code_r0x00445187;\n        }\n    }\n    else if ((arg_ch & 2) == 0) {\n        if ((arg_ch & 4) == 0) {\n            puVar6 = 0x2;\n            goto code_r0x00445187;\n        }\n        iVar4 = fcn.00445294(&lpsz, **(arg_10h + 4));\n        if (iVar4 < 0) goto code_r0x00445187;\n    }\n    else {\n        uVar3 = fcn.00444e54(&lpsz);\n        cVar2 = fcn.0041d5f6(0x29);\n        if (cVar2 == '\\0') {\ncode_r0x00445152:\n            fcn.0040d89e(uVar3);\n        }\n        else {\n            fcn.004084a6();\n            cVar2 = fcn.0041f885();\n            if (cVar2 == '\\0') goto code_r0x00445152;\n            fcn.0044a76d(in_ECX);\n        }\n        if (*(in_ECX + 8) != '\\0') goto code_r0x00445187;\n    }\n    puVar6 = NULL;\ncode_r0x00445187:\n    fcn.00405cd3();\n    return puVar6;\n}\n",
        "token_count": 802
    },
    "00445366": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445366(uint32_t arg_8h)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) <= arg_8h && arg_8h != *(in_ECX + 8)) {\n        uVar2 = 8;\n        if (7 < arg_8h) {\n            uVar2 = arg_8h;\n        }\n        *(in_ECX + 0xc) = uVar2 + 1;\n        iVar1 = (uVar2 + 1) * 4;\n        iVar3 = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.0041faa0(iVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0042017e(*(in_ECX + 4));\n        }\n        fcn.00421970(iVar3 + *(in_ECX + 8) * 4, 0, (*(in_ECX + 0xc) - *(in_ECX + 8)) * 4);\n        *(in_ECX + 4) = iVar3;\n        *(in_ECX + 8) = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "004454e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004454e0(uint arg_8h, int16_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint lpmi;\n    uint32_t var_34h;\n    uint var_30h;\n    int32_t var_28h;\n    int32_t hMenu;\n    int32_t var_18h;\n    int16_t *var_14h;\n    int32_t var_8h;\n    \n    if (arg_10h != -1) {\n        if (arg_10h < 7) {\n            return 0;\n        }\n        if (0x206 < arg_10h) {\n            return 0;\n        }\n    }\n    arg_8h_00 = fcn.00445757();\n    if (arg_8h_00 == -1) {\n        return 0;\n    }\n    piVar1 = in_ECX[arg_8h_00 + 0x6d];\n    lpmi = 0x30;\n    fcn.00421970(&var_34h, 0, 0x2c);\n    if (arg_10h == -1) {\n        *piVar1 = *in_ECX;\n    }\n    else {\n        var_8h = -1;\n        cVar2 = fcn.00445d2c(arg_10h, &var_8h);\n        if (cVar2 == '\\0') {\ncode_r0x00445674:\n            fcn.00445685(arg_8h_00);\n            return 0;\n        }\n        var_34h = 4;\n        iVar3 = *in_ECX[var_8h + 0x6d];\n        *piVar1 = iVar3;\n        iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar3, var_8h, 0, &lpmi);\n        if (((iVar3 == 0) || (*piVar1 = hMenu,  hMenu == 0)) ||\n           (iVar3 = (*_sym.imp.USER32.dll_IsMenu)(hMenu),  iVar3 == 0)) goto code_r0x00445674;\n    }\n    *(piVar1 + 5) = 0;\n    var_34h = 0x32;\n    var_30h = 0;\n    var_14h = arg_ch;\n    var_28h = arg_8h_00;\n    var_18h = arg_8h_00;\n    if (arg_8h == 0) {\n        if (*arg_ch == 0) {\n            var_30h = 0x800;\n        }\n        else if (arg_18h == 1) {\n            var_30h = 0x200;\n            *(piVar1 + 5) = 1;\n        }\n        *(piVar1 + 1) = 0;\n    }\n    else if (arg_8h == 1) {\n        iVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n        if (iVar3 == 0) goto code_r0x004455d7;\n        var_34h = var_34h | 4;\n        *(piVar1 + 1) = 1;\n        hMenu = iVar3;\n    }\n    if ((((*(in_ECX + 1) != '\\0') && (*(in_ECX + 2) != '\\0')) && ((6 < arg_8h_00 && (*piVar1 == *in_ECX)))) &&\n       ((iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*in_ECX),  arg_14h == -1 || (iVar3 + -4 < arg_14h + 1)))) {\n        arg_14h = iVar3 + -4;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_InsertMenuItemW)(*piVar1, arg_14h, 1, &lpmi);\n    if (iVar3 != 0) {\n        in_ECX[0x275] = arg_8h_00;\n        return arg_8h_00;\n    }\ncode_r0x004455d7:\n    fcn.00445a25(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 982
    },
    "00445685": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445685(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t *piVar1;\n    \n    if (0x206 < arg_8h) {\n        return;\n    }\n    piVar1 = in_ECX + (arg_8h + 0x6d) * 4;\n    if (*piVar1 != 0) {\n        fcn.0044aa9c(*piVar1);\n    }\n    *piVar1 = 0;\n    if (arg_8h != *(in_ECX + 0x9d0)) {\n        return;\n    }\n    if (6 < arg_8h) {\n        do {\n            if (*piVar1 != 0) break;\n            arg_8h = arg_8h + -1;\n            piVar1 = piVar1 + -1;\n        } while (6 < arg_8h);\n        if (6 < arg_8h) goto code_r0x004456cf;\n    }\n    arg_8h = 0;\ncode_r0x004456cf:\n    *(in_ECX + 0x9d0) = arg_8h;\n    return;\n}\n",
        "token_count": 266
    },
    "004456dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004456dc(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar2;\n    \n    if (*(in_ECX + 0x8c) == 0) {\n        if (*(in_ECX + 0xa0) == '\\0') {\n            if ((*0x4c183c == 0) && (*0x4c3ebc < 100)) {\n                *0x4c3ebc = *0x4c3ebc + 1;\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = 10;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(uVar2);\n        }\n        uVar2 = 0;\n    }\n    else {\n        puVar1 = **(in_ECX + 0x90);\n        *arg_8h = *puVar1;\n        fcn.0040c935(puVar1 + 1);\n        fcn.00446417();\n        fcn.00468ba4(extraout_ECX);\n        *0x4c3ebc = 0;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 280
    },
    "00445757": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00445757(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(param_1 + 0x9d0);\n    if (iVar1 < 0x206) {\n        puVar2 = fcn.0042010a(0x18);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            fcn.0040d3d2();\n        }\n        if (*(param_1 + 0x9d0) == 0) {\n            *(param_1 + 0x9d0) = 7;\n        }\n        else {\n            *(param_1 + 0x9d0) = *(param_1 + 0x9d0) + 1;\n        }\n        iVar4 = *(param_1 + 0x9d0);\ncode_r0x004457e0:\n        *(param_1 + 0x1b4 + iVar4 * 4) = puVar2;\n        *puVar2 = 0;\n        *(puVar2 + 1) = 0xff;\n    }\n    else {\n        iVar4 = 7;\n        if (6 < iVar1) {\n            piVar3 = param_1 + 0x1d0;\n            do {\n                if (*piVar3 == 0) break;\n                iVar4 = iVar4 + 1;\n                piVar3 = piVar3 + 1;\n            } while (iVar4 <= iVar1);\n            if (iVar4 <= iVar1) {\n                puVar2 = fcn.0042010a(0x18);\n                if (puVar2 == NULL) {\n                    puVar2 = NULL;\n                }\n                else {\n                    fcn.0040d3d2();\n                }\n                goto code_r0x004457e0;\n            }\n        }\n        iVar4 = -1;\n    }\n    return iVar4;\n}\n",
        "token_count": 452
    },
    "004457fb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004457fb(uint noname_0, uint noname_1, uint32_t hmenu, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_ECX;\n    int32_t iVar7;\n    uint lpmii;\n    uint var_40h;\n    uint32_t var_38h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    lpmii = 0x30;\n    fcn.00421970(&var_40h, 0, 0x2c);\n    var_4h = -1;\n    var_40h = 1;\n    cVar3 = fcn.00445d2c(hmenu & 0xffff, &var_4h);\n    iVar4 = var_4h;\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if (var_4h == 3) {\n        *0x4c10b0 = 2;\n        *0x4c10c0 = 1;\n    }\n    else if (var_4h == 4) {\n        iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*in_ECX, 4, 0, &lpmii);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        *0x4c10c5 = (var_38h & 8) == 0;\n        if (*0x4c10c5) {\n            var_38h = var_38h | 8;\n        }\n        else {\n            var_38h = var_38h ^ 8;\n        }\n        (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*in_ECX, 4, 0, &lpmii);\n        fcn.004038e4();\n        (*_sym.imp.KERNEL32.dll_Sleep)(500);\n    }\n    else {\n        if (hmenu >> 0x10 != 0) {\n            return 0;\n        }\n        if (arg_14h != 0) {\n            return 0;\n        }\n        if (*0x4c10c5 != '\\0') {\n            return 0;\n        }\n        uVar1 = *in_ECX[var_4h + 0x6d];\n        if ((*(in_ECX + 7) == '\\0') || (*(in_ECX[var_4h + 0x6d] + 5) == '\\0')) {\n            if (*(in_ECX + 5) != '\\0') {\n                (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar1, var_4h, 0, &lpmii);\n                if ((var_38h & 8) == 0) {\n                    var_38h = var_38h | 8;\n                }\n                else {\n                    var_38h = var_38h ^ 8;\n                }\n                (*_sym.imp.USER32.dll_SetMenuItemInfoW)(uVar1, iVar4, 0, &lpmii);\n            }\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(uVar1);\n            if (*(in_ECX + 1) != '\\0') {\n                iVar5 = iVar5 + -4;\n            }\n            if (iVar5 < 1) {\n                iVar6 = -1;\n            }\n            else {\n                do {\n                    iVar6 = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar1, iVar7);\n                    iVar2 = iVar7;\n                    if (iVar6 == iVar4) goto joined_r0x00445942;\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar5);\n            }\n            iVar2 = iVar7;\n            if (iVar6 == iVar4) {\njoined_r0x00445942:\n                do {\n                    var_14h = iVar2;\n                    var_8h = iVar7;\n                    iVar2 = var_14h + -1;\n                    iVar7 = var_8h;\n                    if (iVar2 < 0) break;\n                    var_ch = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar1, iVar2);\n                    cVar3 = fcn.00445d2c(var_ch, &var_10h);\n                    iVar7 = var_8h;\n                    iVar4 = var_4h;\n                } while ((cVar3 == '\\0') || (*(in_ECX[var_ch + 0x6d] + 5) != '\\0'));\n                do {\n                    iVar6 = iVar7;\n                    iVar7 = iVar6 + 1;\n                    if (iVar5 <= iVar7) break;\n                    var_ch = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar1, iVar7);\n                    cVar3 = fcn.00445d2c(var_ch, &var_10h);\n                    iVar4 = var_4h;\n                } while ((cVar3 == '\\0') || (*(in_ECX[var_ch + 0x6d] + 5) != '\\0'));\n                (*_sym.imp.USER32.dll_CheckMenuRadioItem)(uVar1, var_14h, iVar6, var_8h, 0x400);\n            }\n        }\n        fcn.00445436(iVar4);\n    }\n    return 1;\n}\n",
        "token_count": 1234
    },
    "00445c80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445c80(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_34h;\n    uint var_30h;\n    uint var_20h;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    uVar3 = *0x4c18f0;\n    if (arg_8h == 0) {\ncode_r0x00445c98:\n        *arg_ch = uVar3;\n        uVar3 = 1;\n    }\n    else {\n        if ((((arg_8h != 5) && (arg_8h != 6)) &&\n            ((iVar4 = arg_8h,  arg_8h == 3 ||\n             ((arg_8h == 4 || (cVar2 = fcn.00445d2c(arg_8h, &var_4h),  iVar4 = var_4h,  cVar2 != '\\0')))))) &&\n           ((iVar1 = *(iVar4 * 4 + 0x4c1aa4),  iVar1 != 0 && (*(iVar1 + 4) != '\\0')))) {\n            var_34h = 0x30;\n            fcn.00421970(&var_30h, 0, 0x2c);\n            var_30h = 4;\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(**(iVar4 * 4 + 0x4c1aa4), arg_8h, 0, &var_34h);\n            uVar3 = var_20h;\n            if (iVar4 != 0) goto code_r0x00445c98;\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 419
    },
    "00445d2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00445d2c(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint *puVar2;\n    \n    *arg_ch = 0xffffffff;\n    if (((arg_8h < 0) && (puVar2 = arg_ch,  arg_8h = *(in_ECX + 0x9d4),  *(in_ECX + 0x9d4) == 0xffffffff)) ||\n       (puVar2 = arg_8h,  *arg_ch = puVar2,  0x206 < puVar2)) {\n        uVar1 = puVar2 & 0xffffff00;\n    }\n    else {\n        uVar1 = puVar2 & 0xffffff00 | *(in_ECX + 0x1b4 + puVar2 * 4) != 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 213
    },
    "00445d65": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445d65(uint *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int16_t *arg_8h_00;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *unaff_EBX;\n    uint auStack80 [3];\n    int16_t *piStack68;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint *puStack32;\n    int16_t *piStack28;\n    uint uStack24;\n    \n    uVar3 = fcn.00403bcf();\n    fcn.00404bce(uVar3);\n    arg_8h_00 = piStack68;\n    auStack80[0] = 0xffffffff;\n    if ((arg_8h == 0x5) || (arg_8h == 0x6)) {\ncode_r0x00445f7b:\n        uVar3 = 0;\n        goto code_r0x00445f7d;\n    }\n    if ((arg_8h == 0x3) || (arg_8h == 0x4)) {\n        arg_10h = 0xffffffff;\n        if (arg_8h == 0x3) {\n            if (*piStack68 == 0) {\n                uVar3 = 0x4c190c;\n                goto code_r0x00445dea;\n            }\ncode_r0x00445e02:\n            fcn.00407e53(piStack68);\n        }\n        else if (arg_8h == 0x4) {\n            if (*piStack68 != 0) goto code_r0x00445e02;\n            uVar3 = 0x4c191c;\ncode_r0x00445dea:\n            fcn.0040c935(uVar3);\n        }\n        if ((*(arg_8h * 4 + 0x4c1aa4) == 0) || (*arg_8h_00 == 0)) goto code_r0x00445f7b;\n    }\n    else {\n        puVar1 = unaff_EBX;\n        cVar2 = fcn.00445d2c(arg_8h, auStack80);\n        arg_8h = puVar1;\n        unaff_EBX = arg_8h;\n        if (cVar2 == '\\0') goto code_r0x00445f7b;\n    }\n    puVar1 = *(arg_8h * 4 + 0x4c1aa4);\n    uVar3 = fcn.0042010a(0x208);\n    fcn.00404bce(uVar3);\n    piStack68 = 0x30;\n    fcn.00421970(&uStack64, 0, 0x2c);\n    uStack64 = 0x11;\n    piStack28 = 0x104;\n    puStack32 = puVar1;\n    iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*unaff_EBX, arg_8h, 0, &piStack68);\n    cVar2 = unaff_EBX >> 0x18;\n    if ((iVar4 == 0) || ((uStack56 & 0x800) != 0)) {\ncode_r0x00445f6c:\n        uVar3 = 0;\n    }\n    else {\n        if ((uStack52 & 0x1000) != 0) {\n            cVar2 = '\\x01';\n        }\n        if (arg_10h < 0) {\n            if (*arg_8h_00 == 0) goto code_r0x00445f6c;\n            arg_10h = 0;\n            uStack60 = 0x10;\n            piStack28 = arg_8h_00;\n            uStack24 = fcn.004218fb(arg_8h_00);\n        }\n        else {\n            uVar5 = uStack52;\n            if ((arg_10h & 0x40) != 0) {\n                uVar5 = uStack52 & 0xfffffffc;\n            }\n            if (arg_10h < '\\0') {\n                uVar5 = uVar5 | 3;\n            }\n            if ((arg_10h & 1) != 0) {\n                uVar5 = uVar5 | 8;\n            }\n            if ((arg_10h & 4) != 0) {\n                uVar5 = uVar5 & 0xfffffff7;\n            }\n            if ((arg_10h & 0x100) != 0) {\n                uVar5 = uVar5 | 0x80;\n            }\n            if (((uStack52 & 8) != 0) && ((arg_10h & 4) == 0)) {\n                uVar5 = uVar5 | 8;\n            }\n            uStack60 = 1;\n            uStack52 = uVar5;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*puVar1, arg_8h, 0, &uStack64);\n        if (iVar4 == 0) goto code_r0x00445f6c;\n        if (0 < arg_10h) {\n            if ((arg_10h & 0x200) == 0) {\n                if (cVar2 == '\\0') goto code_r0x00445f65;\n                arg_8h = 0xffffffff;\n            }\n            iVar4 = (*_sym.imp.USER32.dll_SetMenuDefaultItem)(*puVar1, arg_8h, 0);\n            if (iVar4 == 0) goto code_r0x00445f6c;\n        }\ncode_r0x00445f65:\n        uVar3 = 1;\n    }\n    fcn.00404fd2();\ncode_r0x00445f7d:\n    fcn.00404fd2();\n    return uVar3;\n}\n",
        "token_count": 1342
    },
    "00445fdb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpPoint\n// WARNING: Variable defined which should be unmapped: y\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: lpmii\n// WARNING: Removing unreachable block (ram,0x00446098)\n// WARNING: Removing unreachable block (ram,0x004460b4)\n// WARNING: Removing unreachable block (ram,0x004460a0)\n\nvoid __cdecl fcn.00445fdb(uint hWnd, uint noname_1, uint noname_2, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint32_t uVar5;\n    uint arg_8h;\n    uint lpmii;\n    uint var_38h;\n    uint var_30h;\n    uint lpPoint;\n    uint y;\n    int32_t var_4h;\n    \n    lpmii = 0x30;\n    fcn.00421970(&fcn.00445fdb::var_38h, 0, 0x2c);\n    var_4h = in_ECX[0x274];\n    uVar5 = 1;\n    if (arg_14h == 0x200) {\n        uVar5 = 0x40;\n        arg_8h = 0xfffffff5;\n    }\n    else if (arg_14h == 0x201) {\n        arg_8h = 0xfffffff9;\n    }\n    else if (arg_14h == 0x202) {\n        uVar5 = 2;\n        arg_8h = 0xfffffff8;\n    }\n    else if (arg_14h == 0x203) {\n        uVar5 = 4;\n        if (*(in_ECX + 10) != '\\0') {\n            iVar4 = 7;\n            var_38h = 1;\n            if (6 < var_4h) {\n                piVar3 = in_ECX + 0x74;\n                do {\n                    if (*piVar3 != NULL) {\n                        (*_sym.imp.USER32.dll_GetMenuItemInfoW)(**piVar3, iVar4, 0, &fcn.00445fdb::lpmii);\n                    }\n                    iVar4 = iVar4 + 1;\n                    piVar3 = piVar3 + 1;\n                } while (iVar4 <= in_ECX[0x274]);\n            }\n        }\n        arg_8h = 0xfffffff3;\n    }\n    else if (arg_14h == 0x204) {\n        arg_8h = 0xfffffff7;\n        uVar5 = 8;\n    }\n    else if (arg_14h == 0x205) {\n        arg_8h = 0xfffffff6;\n        uVar5 = 0x10;\n    }\n    else {\n        uVar5 = 0;\n        if (arg_14h != 0x206) goto code_r0x004460d9;\n        arg_8h = 0xfffffff2;\n        uVar5 = 0x20;\n    }\n    fcn.0044548a(arg_8h);\ncode_r0x004460d9:\n    pcVar2 = _sym.imp.USER32.dll_GetMenuItemCount;\n    pcVar1 = _sym.imp.USER32.dll_DeleteMenu;\n    if (((in_ECX[3] & uVar5) != 0) && (*0x4c10c4 != '\\0')) {\n        if (*(in_ECX + 1) == '\\0') {\n            (*_sym.imp.USER32.dll_DeleteMenu)(*in_ECX, 5, 0);\n            (*pcVar1)(*in_ECX, 4, 0);\n            (*pcVar1)(*in_ECX, 6, 0);\n            (*pcVar1)(*in_ECX, 3, 0);\n            *(in_ECX + 2) = 0;\n        }\n        else if (*(in_ECX + 2) == '\\0') {\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*in_ECX);\n            if (0 < iVar4) {\n                in_ECX[0x274] = 4;\n                fcn.004454e0(0, 0x49dbf0, 0xffffffff, 0xffffffff, 0);\n            }\n            in_ECX[0x274] = 3;\n            fcn.004454e0(0, in_ECX[0x1f], 0xffffffff, 0xffffffff, 0);\n            var_38h = 0;\n            in_ECX[0x274] = 5;\n            lpmii = 0x446166;\n            fcn.004454e0(0, 0x49dbf0, 0xffffffff, 0xffffffff, 0);\n            lpmii = 0;\n            in_ECX[0x274] = 2;\n            fcn.004454e0(0, in_ECX[0x1b], 0xffffffff, 0xffffffff, 0);\n            in_ECX[0x274] = var_4h;\n            *(in_ECX + 2) = 1;\n        }\n        iVar4 = (*pcVar2)(*in_ECX);\n        if (0 < iVar4) {\n            if (*(in_ECX + 1) == '\\0') {\n                *(in_ECX + 6) = 0;\n            }\n            else if (*(in_ECX + 6) != '\\0') {\n                *0x4c10c5 = 1;\n                var_38h = 1;\n                (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*in_ECX, 4, 0, &fcn.00445fdb::lpmii);\n            }\n            (*_sym.imp.USER32.dll_GetCursorPos)(&fcn.00445fdb::lpPoint);\n            (*_sym.imp.USER32.dll_SetForegroundWindow)(hWnd);\n            (*_sym.imp.USER32.dll_TrackPopupMenuEx)(*in_ECX, 0, lpPoint, y, hWnd, 0);\n            (*_sym.imp.USER32.dll_PostMessageW)(hWnd, 0, 0, 0);\n            fcn.004038e4();\n        }\n    }\n    return;\n}\n",
        "token_count": 1438
    },
    "0044632e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044632e(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    bool bVar2;\n    \n    if (*(param_1 + 0x1a4) == 0) {\n        *(param_1 + 0x1a4) = *0x4c1118;\n    }\n    arg_8h = param_1 + 0x1a8;\n    fcn.004038c4(arg_8h, param_1 + 0x1ac);\n    bVar2 = *(param_1 + 0x50) == 0;\n    if (!bVar2) {\n        iVar1 = fcn.00446237(*(param_1 + 0x14), *(param_1 + 0x4c), param_1 + 0x1ac);\n        bVar2 = *(param_1 + 0x50) == 0;\n        *arg_8h = iVar1;\n    }\n    if ((bVar2) || (*arg_8h == 0)) {\n        *arg_8h = *(param_1 + 0x1a4);\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "00446437": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446437(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *in_ECX;\n    \n    puVar2 = fcn.0042010a(8);\n    uVar1 = *arg_8h;\n    puVar2[1] = 0;\n    *puVar2 = uVar1;\n    if (in_ECX[1] == 0) {\n        in_ECX[1] = puVar2;\n    }\n    else {\n        *(in_ECX[2] + 4) = puVar2;\n    }\n    *in_ECX = *in_ECX + 1;\n    in_ECX[2] = puVar2;\n    return;\n}\n",
        "token_count": 168
    },
    "004469f9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.004469f9(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint lpExistingFileName;\n    uint lpNewFileName;\n    uint lpFileOp;\n    uint var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    ushort var_10h;\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    \n    fcn.004031b8();\n    fcn.004031b8();\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&lpExistingFileName, &lpNewFileName);\n    if (iVar2 == 0) {\n        if (arg_8h != '\\0') {\n            iVar2 = fcn.00422203(&lpExistingFileName, &lpNewFileName);\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_MoveFileW)(&lpExistingFileName, &lpNewFileName);\n            }\n            return '\\x01';\n        }\n    }\n    else {\n        cVar1 = fcn.00447c0c();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00447c0c();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.00446d6d();\n                if (cVar1 == '\\0') {\n                    return '\\0';\n                }\n                arg_8h._0_1_ = fcn.00447c0c();\n            }\n            if (arg_8h != '\\0') {\n                fcn.00421914(&lpExistingFileName, 0x4b37ac);\n                iVar2 = fcn.004218fb(&lpExistingFileName);\n                *(&lpExistingFileName + iVar2 * 2 + 2) = 0;\n                iVar2 = fcn.004218fb(&lpNewFileName);\n                *(&lpNewFileName + iVar2 * 2 + 2) = 0;\n                var_18h = &lpExistingFileName;\n                var_14h = &lpNewFileName;\n                var_ah = 0;\n                var_6h = 0;\n                var_eh = 0;\n                lpFileOp = 0;\n                var_10h = 0x614;\n                var_1ch = 2;\n                iVar2 = (*_sym.imp.SHELL32.dll_SHFileOperationW)(&lpFileOp);\n                return '\\x01' - (iVar2 != 0);\n            }\n        }\n    }\n    return '\\0';\n}\n",
        "token_count": 563
    },
    "00446f5b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446f5b(char *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EDX;\n    uint var_63ch;\n    uint var_438h;\n    uint var_234h;\n    int32_t var_22ch;\n    uint var_210h;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_234h = 0x22c;\n    var_4h = in_EDX;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    (*_sym.imp.KERNEL32.dll_Process32FirstW)(uVar1, &var_234h);\n    *arg_8h = '\\0';\n    iVar2 = fcn.004479c2();\n    while ((*arg_8h == '\\0' && (iVar3 = (*_sym.imp.KERNEL32.dll_Process32NextW)(uVar1, &var_234h),  iVar3 == 1))) {\n        fcn.0042297d(&var_210h, 0, 0, &var_438h, &var_63ch);\n        fcn.00421914(&var_438h, &var_63ch);\n        iVar3 = fcn.00421bc7(&var_438h, var_8h);\n        if ((iVar3 == 0) || ((iVar2 != 0 && (iVar2 == var_22ch)))) {\n            *arg_8h = '\\x01';\n            *var_4h = var_22ch;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n    return 1;\n}\n",
        "token_count": 392
    },
    "004470ae": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.004470ae(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    uint uStack28;\n    uint var_14h;\n    uint lpInBuffer;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*0x4c236c + 0x25) == '\\0') {\n        return 0x80004005;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(param_1, 0x80, 3, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        var_1ch = 0;\n        uStack28 = 0;\n        var_14h = 0;\n        lpInBuffer = 7;\n        var_ch = 0;\n        var_8h = 0;\n        var_4h = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)(iVar1, 0x2d1400, &lpInBuffer, 0xc, &var_1ch, 0xc, &var_4h, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        if (iVar2 != 0) {\n            return var_14h != '\\0';\n        }\n    }\n    return 0x80004005;\n}\n",
        "token_count": 335
    },
    "00447334": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00447334(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *arg_ch_00;\n    uint arg_8h_00;\n    uint var_1060h;\n    uint var_e54h;\n    uint var_c48h;\n    uint var_a3ch;\n    uint var_830h;\n    uint var_624h;\n    uint var_418h;\n    uint var_20ch;\n    uint uStackY56;\n    \n    fcn.00430650();\n    iVar1 = fcn.00423084();\n    if (iVar1 == 0) {\n        fcn.00421943(arg_10h, arg_ch);\n        return;\n    }\n    fcn.0042297d(arg_8h_00, &fcn.00447334::var_830h, &fcn.00447334::var_c48h, &fcn.00447334::var_1060h, \n                 &fcn.00447334::var_20ch);\n    uStackY56 = 0x4473ad;\n    fcn.0042297d(arg_ch, &fcn.00447334::var_830h, &fcn.00447334::var_c48h, &fcn.00447334::var_e54h, \n                 &fcn.00447334::var_624h);\n    if (var_20ch == 0x2e) {\n        fcn.00421943(&fcn.00447334::var_20ch, &fcn.00447334::var_20ch + 2);\n    }\n    if (var_624h == 0x2e) {\n        fcn.00421943(&fcn.00447334::var_624h, &fcn.00447334::var_624h + 2);\n    }\n    fcn.00421943(arg_10h, &fcn.00447334::var_830h);\n    fcn.00421914(arg_10h, &fcn.00447334::var_c48h);\n    fcn.004474b0(&fcn.00447334::var_624h, &fcn.00447334::var_a3ch);\n    fcn.004474b0(&fcn.00447334::var_e54h, &fcn.00447334::var_418h);\n    if (var_a3ch == 0) {\n        if (var_20ch == 0) goto code_r0x0044749b;\n        fcn.00421914(&fcn.00447334::var_418h, 0x49daa0);\n        arg_ch_00 = &fcn.00447334::var_20ch;\n    }\n    else {\n        fcn.00421914(&fcn.00447334::var_418h, 0x49daa0);\n        arg_ch_00 = &fcn.00447334::var_a3ch;\n    }\n    fcn.00421914(&fcn.00447334::var_418h, arg_ch_00);\ncode_r0x0044749b:\n    fcn.00421914(arg_10h, &fcn.00447334::var_418h);\n    return;\n}\n",
        "token_count": 720
    },
    "0044768a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044768a(uint arg_8h)\n\n{\n    int16_t *arg_8h_00;\n    \n    arg_8h_00 = fcn.0042010a(0x10000);\n    (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, arg_8h_00, 0x7fff);\n    if (*arg_8h_00 != 0) {\n        fcn.004039e8(arg_8h_00);\n        fcn.004039e8(0x49dc8c);\n    }\n    fcn.0042017e(arg_8h_00);\n    return 1;\n}\n",
        "token_count": 150
    },
    "004478ee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004478ee(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint lpWSAData;\n    uint name;\n    uint in;\n    \n    iVar3 = (*_sym.imp.WSOCK32.dll_WSAStartup)(0x101, &lpWSAData);\n    if (iVar3 == 0) {\n        (*_sym.imp.WSOCK32.dll_gethostname)(&name, 0x100);\n        iVar3 = (*_sym.imp.WSOCK32.dll_gethostbyname)(&name);\n        if (iVar3 != 0) {\n            piVar2 = *(iVar3 + 0xc);\n            iVar5 = 0;\n            iVar3 = *piVar2;\n            piVar1 = piVar2;\n            while (iVar3 != 0) {\n                piVar1 = piVar1 + 1;\n                iVar5 = iVar5 + 1;\n                iVar3 = *piVar1;\n            }\n            if (iVar5 < param_1) {\n                fcn.00421943(param_2, L\"0.0.0.0\");\n            }\n            else {\n                fcn.0041faa0(&in, piVar2[param_1 + -1], 4);\n                uVar4 = (*_sym.imp.WSOCK32.dll_inet_ntoa)(in);\n                fcn.00423220(&name, uVar4);\n                uVar4 = fcn.00448553();\n                fcn.00421943(param_2, uVar4);\n                fcn.0042017e(uVar4);\n            }\n            (*_sym.imp.WSOCK32.dll_WSACleanup)();\n            return;\n        }\n    }\n    fcn.00421943(param_2, 0x49dbf0);\n    return;\n}\n",
        "token_count": 428
    },
    "00447b9f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00447b9f(uint param_1, uint param_2)\n\n{\n    uint *arg_8h;\n    uint32_t uVar1;\n    uint *arg_ch;\n    uint var_418h;\n    uint var_214h;\n    uint var_10h;\n    uint var_8h;\n    \n    fcn.0042297d(param_1, &var_8h, &var_418h, 0, 0);\n    fcn.0042297d(param_2, &var_10h, &var_214h, 0, 0);\n    if ((var_8h == 0) && (var_10h == 0)) {\n        arg_ch = &var_214h;\n        arg_8h = &var_418h;\n    }\n    else {\n        arg_ch = &var_10h;\n        arg_8h = &var_8h;\n    }\n    uVar1 = fcn.00421bc7(arg_8h, arg_ch);\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 258
    },
    "00447d1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00447d1c(int16_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    if (*param_1 == 0) {\n        return '\\x01';\n    }\n    iVar2 = fcn.00421bc7(param_1, L\"LEFT\");\n    if (iVar2 == 0) {\n        return '\\x01';\n    }\n    iVar2 = fcn.00421bc7(param_1, L\"RIGHT\");\n    if (iVar2 == 0) {\n        return '\\x02';\n    }\n    iVar2 = fcn.00421bc7(param_1, L\"MIDDLE\");\n    if (iVar2 != 0) {\n        iVar2 = fcn.00421bc7(param_1, L\"MAIN\");\n        if ((iVar2 == 0) || (iVar2 = fcn.00421bc7(param_1, L\"PRIMARY\"),  iVar2 == 0)) {\n            cVar1 = fcn.0041c929();\n            bVar3 = cVar1 != '\\0';\n        }\n        else {\n            iVar2 = fcn.00421bc7(param_1, L\"MENU\");\n            if ((iVar2 != 0) && (iVar2 = fcn.00421bc7(param_1, L\"SECONDARY\"),  iVar2 != 0)) {\n                return '\\0';\n            }\n            cVar1 = fcn.0041c929();\n            bVar3 = cVar1 == '\\0';\n        }\n        return bVar3 + '\\x01';\n    }\n    return '\\x03';\n}\n",
        "token_count": 359
    },
    "00447e6f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00447e6f(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint var_840h;\n    uint var_63ch;\n    uint lpExistingFileName;\n    uint lpNewFileName;\n    uint lpFileOp;\n    uint var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ah;\n    uint var_6h;\n    \n    fcn.004031b8();\n    fcn.004031b8();\n    uVar2 = fcn.00447c0c();\n    if (uVar2 != '\\0') {\n        uVar2 = fcn.00447c0c();\n        if (uVar2 != '\\0') {\n            if (arg_8h == '\\0') goto code_r0x00447ea2;\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&lpExistingFileName, &lpNewFileName);\n            if (iVar3 == 0) {\n                iVar3 = fcn.00422203(&lpExistingFileName, &lpNewFileName);\n                if (iVar3 == 0) {\n                    return 1;\n                }\n                uVar2 = (*_sym.imp.KERNEL32.dll_MoveFileW)(&lpExistingFileName, &lpNewFileName);\n                bVar4 = uVar2 == 0;\n                goto code_r0x00447f0b;\n            }\n            fcn.0042297d(&lpExistingFileName, 0, 0, &var_840h, &var_63ch);\n            fcn.00421914(&lpNewFileName, 0x49dc88);\n            fcn.00421914(&lpNewFileName, &var_840h);\n            if (var_63ch != 0) {\n                fcn.00421914(&lpNewFileName, &var_63ch);\n            }\n        }\n        cVar1 = fcn.00447b9f();\n        if (cVar1 == '\\0') {\n            uVar2 = fcn.00422203(&lpExistingFileName, &lpNewFileName);\n            if (uVar2 != 0) {\n                iVar3 = fcn.004218fb(&lpExistingFileName);\n                *(&lpExistingFileName + iVar3 * 2 + 2) = 0;\n                iVar3 = fcn.004218fb(&lpNewFileName);\n                *(&lpNewFileName + iVar3 * 2 + 2) = 0;\n                var_18h = &lpExistingFileName;\n                var_14h = &lpNewFileName;\n                var_10h._0_2_ = 0x614;\n                var_ah = 0;\n                var_6h = 0;\n                stack0xffffffee = 0;\n                lpFileOp = 0;\n                var_1ch = 1;\n                iVar3 = (*_sym.imp.SHELL32.dll_SHFileOperationW)(&lpFileOp);\n                return -iVar3 & 0xffffff00U | 1 - (iVar3 != 0);\n            }\n        }\n        else {\n            uVar2 = fcn.004469f9(1);\n            if (uVar2 != '\\0') {\n                uVar2 = fcn.00448245();\n                bVar4 = uVar2 == '\\0';\ncode_r0x00447f0b:\n                return uVar2 & 0xffffff00 | !bVar4;\n            }\n        }\n    }\ncode_r0x00447ea2:\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 814
    },
    "00448097": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00448097(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    (*_sym.imp.WINMM.dll_timeGetTime)();\n    while( true ) {\n        if (*0x4c34da == '\\0') {\n            return 0;\n        }\n        iVar2 = fcn.0041e3a5();\n        if ((0xffffffff < iVar2) || ((-1 < iVar2 && (arg_8h[1] <= iVar2)))) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    }\n    *0x4c34e0 = 0;\n    (*_sym.imp.USER32.dll_EnumThreadWindows)(*arg_8h, fcn.0044804c, 0);\n    if (*0x4c34e0 == 0) {\n        return 0;\n    }\n    *0x4c34d9 = 1;\n    iVar1 = (*_sym.imp.USER32.dll_FindWindowExW)(*0x4c34e0, 0, L\"BUTTON\", 0);\n    if (iVar1 != 0) {\n        fcn.004469c9();\n        (*_sym.imp.USER32.dll_SetActiveWindow)(*0x4c34e0);\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar1, 0xf5, 0, 0);\n        fcn.004469c9();\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(*0x4c34e0, 0x10, 0, 0);\n    (*_sym.imp.KERNEL32.dll_Sleep)(0xfa);\n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*0x4c34e0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_EndDialog)(*0x4c34e0, 0);\n    return 0;\n}\n",
        "token_count": 439
    },
    "004483d6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004483d6(int16_t *param_1, char param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char16_t *pcVar3;\n    uint var_218h;\n    uint var_10h;\n    \n    fcn.0040d3d2();\n    fcn.00407e53(L\"open \");\n    fcn.0040bd2f(0x22);\n    fcn.004039e8(param_1);\n    fcn.0040bd2f(0x22);\n    fcn.004039e8(L\" alias PlayMe\");\n    pcVar1 = _sym.imp.WINMM.dll_mciSendStringW;\n    (*_sym.imp.WINMM.dll_mciSendStringW)(L\"status PlayMe mode\", &var_218h, 0x100, 0);\n    if (var_218h != 0) {\n        (*pcVar1)(L\"close PlayMe\", 0, 0, 0);\n    }\n    if (*param_1 != 0) {\n        iVar2 = (*pcVar1)(var_10h, 0, 0, 0);\n        if (iVar2 == 0) {\n            if (param_2 == '\\0') {\n                pcVar3 = L\"play PlayMe\";\n            }\n            else {\n                (*pcVar1)(L\"play PlayMe wait\", 0, 0, 0);\n                pcVar3 = L\"close PlayMe\";\n            }\n            (*pcVar1)(pcVar3, 0, 0, 0);\n        }\n    }\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 381
    },
    "004486ae": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004486ae(uint arg_8h, int32_t arg_ch)\n\n{\n    ushort uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int16_t *in_ECX;\n    ushort *in_EDX;\n    int16_t *piVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_GetLocalTime)();\n    if ((*in_ECX != 0) && (uVar2 = fcn.004218fb(in_ECX),  3 < uVar2)) {\n        if (arg_8h != '\\0') {\n            fcn.00422c1d(&var_ch, in_ECX, 4);\n            var_4h._0_2_ = 0;\n            uVar1 = fcn.00422241(&var_ch);\n            piVar4 = in_ECX + arg_ch + 4;\n            *in_EDX = uVar1;\n            uVar2 = fcn.004218fb(piVar4);\n            in_ECX = piVar4;\n            if (1 < uVar2) {\n                fcn.00422c1d(&var_ch, piVar4, 2);\n                var_8h._0_2_ = 0;\n                uVar1 = fcn.00422241(&var_ch);\n                in_ECX = piVar4 + arg_ch + 2;\n                in_EDX[1] = uVar1;\n                uVar2 = fcn.004218fb(in_ECX);\n                if (1 < uVar2) {\n                    fcn.00422c1d(&var_ch, in_ECX, 2);\n                    var_8h._0_2_ = 0;\n                    uVar1 = fcn.00422241(&var_ch);\n                    in_ECX = piVar4 + arg_ch + 4;\n                    in_EDX[3] = uVar1;\n                    iVar3 = fcn.004218fb(in_ECX);\n                    if (iVar3 != 0) {\n                        in_ECX = in_ECX + arg_ch;\n                    }\n                }\n            }\n        }\n        uVar2 = fcn.004218fb(in_ECX);\n        if (1 < uVar2) {\n            fcn.00422c1d(&var_ch, in_ECX, 2);\n            var_8h._0_2_ = 0;\n            uVar1 = fcn.00422241(&var_ch);\n            piVar4 = in_ECX + arg_ch + 2;\n            in_EDX[4] = uVar1;\n            uVar2 = fcn.004218fb(piVar4);\n            if (1 < uVar2) {\n                fcn.00422c1d(&var_ch, piVar4, 2);\n                var_8h._0_2_ = 0;\n                uVar1 = fcn.00422241(&var_ch);\n                in_EDX[5] = uVar1;\n                uVar2 = fcn.004218fb(piVar4 + arg_ch + 2);\n                if (1 < uVar2) {\n                    fcn.00422c1d(&var_ch, piVar4 + arg_ch + 2, 2);\n                    var_8h._0_2_ = 0;\n                    uVar1 = fcn.00422241(&var_ch);\n                    in_EDX[6] = uVar1;\n                    in_EDX[7] = 0;\n                }\n            }\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 803
    },
    "004489e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004489e0(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_14h == 1) {\n        if (*0x4c22d8 == 0) {\n            return 0;\n        }\n        if (arg_ch == 0) {\n            return 0;\n        }\n        fcn.00448a7c();\n    }\n    else if (arg_14h != 2) {\n        return 0;\n    }\n    fcn.0044a5f1(arg_8h, arg_ch, arg_10h);\n    return 1;\n}\n",
        "token_count": 150
    },
    "00448a2f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00448a2f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (*0x4c22d8 != 0) {\n        arg_ch = &var_4h;\n        arg_8h_00 = arg_8h;\n        fcn.00448a7c();\n        iVar1 = fcn.0040d349(arg_8h_00, arg_ch);\n        if (iVar1 != 0) {\n            return 0xffffffff;\n        }\n    }\n    iVar1 = fcn.0040d349(arg_8h, &var_4h);\n    return iVar1 != 0;\n}\n",
        "token_count": 180
    },
    "00448a7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00448a7c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 4);\n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = *(iVar1 + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 76
    },
    "00448d85": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00448d85(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t **arg_14h, int32_t **arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t *unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t *piVar8;\n    int32_t *arg_8h_00;\n    uchar *arg_8h_01;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    uint32_t arg_8h_02;\n    uint32_t extraout_var;\n    uint32_t *arg_8h_03;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack48;\n    uint uStack40;\n    \n    arg_8h_03 = NULL;\n    iStack76 = 0;\n    uStack68 = 0;\n    fcn.0040d3d2();\n    uVar5 = extraout_var;\n    fcn.0040d3d2();\n    fcn.0040d3d2();\ncode_r0x0044915f:\n    piVar9 = unaff_EBX;\n    if (*arg_14h < *(arg_ch + 4)) {\n        while( true ) {\n            piVar1 = fcn.0041db6f(*arg_14h);\n            if ((*piVar1 != 0x20) && (*piVar1 != 9)) break;\n            *arg_14h = *arg_14h + 1;\n        }\n        if (*arg_14h < *(arg_ch + 4)) {\n            arg_8h_02 = 0x49dbf0;\n            fcn.00407e53(0x49dbf0);\n            do {\n                piVar7 = *arg_14h;\n                puVar2 = fcn.0041db6f(piVar7);\n                iVar4 = fcn.004222b9(*puVar2);\n                if (iVar4 == 0) {\n                    piVar10 = *arg_14h;\n                    piVar1 = fcn.0041db6f(piVar10);\n                    if (*piVar1 != 0x5f) goto code_r0x00448e54;\n                }\n                piVar9 = *arg_14h;\n                *arg_14h = piVar9 + 1;\n                puVar2 = fcn.0041db6f(piVar9);\n                arg_8h_02 = *puVar2;\n                fcn.0040bd2f(arg_8h_02);\n            } while( true );\n        }\n    }\ncode_r0x0044916a:\n    if (arg_8h != '\\0') {\n        iVar3 = fcn.00448bfb(*arg_1ch, *arg_20h, *arg_10h);\n        iVar4 = *arg_1ch;\n        piVar7 = *arg_18h;\n        if (piVar7 < unaff_ESI) {\n            iVar6 = piVar7 << 5;\n            do {\n                *(iVar6 + piVar9[1]) = *(iVar6 + piVar9[1]) + iVar3 + iVar4;\n                piVar10 = iVar6 + 0x1c + piVar9[1];\n                *piVar10 = *piVar10 + iVar3 + iVar4;\n                piVar7 = piVar7 + 1;\n                iVar6 = iVar6 + 0x20;\n            } while (piVar7 < unaff_ESI);\n        }\n        arg_8h_03 = *(unaff_ESI * 0x20 + -4 + piVar9[1]);\n    }\n    iVar4 = fcn.00448bfb(arg_8h_03, *arg_20h, *arg_10h);\n    *arg_1ch = iVar4 + arg_8h_03;\n    *arg_18h = unaff_ESI;\n    iVar4 = 0;\ncode_r0x00449202:\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return iVar4;\ncode_r0x00448e54:\n    uStack64 = 0;\n    fcn.00407e53(0x49dbf0);\n    while( true ) {\n        unaff_ESI = *arg_14h;\n        piVar1 = fcn.0041db6f(unaff_ESI);\n        if ((*piVar1 != 0x20) && (*piVar1 != 9)) break;\n        *arg_14h = *arg_14h + 1;\n    }\n    piVar1 = fcn.0041db6f(*arg_14h);\n    if (*piVar1 != 0x5b) {\n        while( true ) {\n            puVar2 = fcn.0041db6f(0x448ea5);\n            iVar4 = fcn.004222b9(*puVar2);\n            if ((iVar4 == 0) && (piVar1 = fcn.0041db6f(*arg_14h),  *piVar1 != 0x5f)) break;\n            piVar9 = *arg_14h;\n            *arg_14h = piVar9 + 1;\n            puVar2 = fcn.0041db6f(piVar9);\n            fcn.0040bd2f(*puVar2);\n        }\n    }\n    iVar4 = 0x20;\n    while( true ) {\n        piVar1 = fcn.0041db6f(*arg_14h);\n        if ((*piVar1 != 0x20) && (*piVar1 != 9)) break;\n        *arg_14h = *arg_14h + 1;\n    }\n    piVar8 = *arg_14h;\n    piVar1 = fcn.0041db6f(piVar8);\n    piVar9 = piVar10;\n    if (*piVar1 == 0x5b) {\n        *arg_14h = *arg_14h + 1;\n        fcn.00407e53(0x49dbf0);\n        while( true ) {\n            puVar2 = fcn.0041db6f(0x448f2f);\n            iVar3 = fcn.004222df(*puVar2);\n            if (iVar3 == 0) break;\n            piVar8 = *arg_14h;\n            *arg_14h = piVar8 + 1;\n            puVar2 = fcn.0041db6f(piVar8);\n            fcn.0040bd2f(*puVar2);\n        }\n        iVar3 = fcn.00422241(uStack48);\n        if (iVar3 < 1) goto code_r0x004491cc;\n        piVar8 = *arg_14h;\n        piVar1 = fcn.0041db6f(piVar8);\n        if (*piVar1 != 0x5d) goto code_r0x004491cc;\n        *arg_14h = *arg_14h + 1;\n    }\n    arg_8h_00 = *arg_14h;\n    piVar1 = fcn.0041db6f(arg_8h_00);\n    if (*piVar1 == 0x3b) {\n        *arg_14h = *arg_14h + 1;\n    }\n    else if (*arg_14h < *(arg_ch + 4)) {\n        iVar4 = 1;\n        goto code_r0x00449202;\n    }\n    iStack76 = 0;\n    arg_8h_03 = 0x4bf800;\n    do {\n        if (iStack76 != 0) goto code_r0x00449013;\n        iVar3 = fcn.00422203(arg_8h_03 + -6, uStack40);\n        if (iVar3 == 0) {\n            uVar5 = *arg_8h_03;\n            if (((uVar5 & 0x31) != 0) && (0 < arg_8h_02)) {\n                uVar5 = uVar5 | 4;\n            }\n            piVar7 = arg_8h_03[-1];\n            iStack76 = 1;\n        }\n        arg_8h_03 = arg_8h_03 + 7;\n    } while (arg_8h_03 < 0x4bfb80);\n    if (iStack76 != 0) {\ncode_r0x00449013:\n        if (uVar5 == 0x100) {\n            *piVar10 = *piVar10 + -1;\n            if (piVar7 == NULL) goto code_r0x0044916a;\n            iStack76 = 0;\n            iVar3 = 1;\n            iVar4 = fcn.00448d85(1, arg_ch, arg_10h, arg_14h, &stack0xffffff98, &stack0xffffffa0, &stack0xffffffb4);\n            if (iVar4 != 0) goto code_r0x00449202;\n            unaff_EBX = piVar9;\n            if (*arg_20h < iVar3) {\n                *arg_20h = iVar3;\n            }\n        }\n        else if (uVar5 == 0x80) {\n            iVar4 = fcn.00422241(uStack72);\n            *arg_10h = iVar4;\n            if (iVar4 == 0) {\n                *arg_10h = 8;\n            }\n            else if ((((iVar4 != 1) && (iVar4 != 2)) && (iVar4 != 4)) && ((iVar4 != 8 && (iVar4 != 0x10)))) {\n                iVar4 = 2;\n                goto code_r0x00449202;\n            }\n            *piVar10 = *piVar10 + -1;\n            unaff_EBX = piVar9;\n        }\n        else {\n            unaff_EBX = piVar9;\n            iVar6 = fcn.00448bfb(piVar9, piVar7, *arg_10h);\n            iVar6 = piVar9 + iVar6;\n            *(piVar8 * 0x20 + *(iVar4 + 4)) = iVar6;\n            *(piVar8 * 0x20 + 4 + *(iVar4 + 4)) = arg_8h_00;\n            *(piVar8 * 0x20 + 8 + *(iVar4 + 4)) = unaff_EBX;\n            arg_8h_01 = &stack0xffffffac;\n            iVar3 = iVar4;\n            fcn.0040c935(arg_8h_01);\n            *(arg_8h_01 * 0x20 + 0x1c + *(iVar4 + 4)) = iVar3 + arg_8h_01 * iVar6;\n            if (*arg_20h < iVar6) {\n                *arg_20h = iVar6;\n            }\n        }\n        goto code_r0x0044915f;\n    }\ncode_r0x004491cc:\n    fcn.004492b3();\n    iVar4 = 2;\n    goto code_r0x00449202;\n}\n",
        "token_count": 2577
    },
    "00449228": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00449228(int32_t arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    uint arg_ch_00;\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    cVar1 = fcn.0040d2c0(4);\n    if (cVar1 == '\\0') {\n        iVar2 = fcn.0040cdb4();\n        *arg_ch = iVar2;\n    }\n    else {\n        *arg_ch = 0;\n        if (0 < *in_ECX) {\n            do {\n                arg_ch_00 = *(*arg_ch * 0x20 + 0xc + in_ECX[1]);\n                fcn.004084a6();\n                iVar2 = fcn.00421bc7(**(arg_8h + 8), arg_ch_00);\n                if (iVar2 == 0) break;\n                *arg_ch = *arg_ch + 1;\n            } while (*arg_ch < *in_ECX);\n        }\n    }\n    iVar2 = *arg_ch;\n    if ((iVar2 < *in_ECX) && (-1 < iVar2)) {\n        iVar2 = *(iVar2 * 0x20 + in_ECX[1]) + in_ECX[2];\n    }\n    else {\n        *arg_10h = 2;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 322
    },
    "00449569": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00449569(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, uint arg_24h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    uint *arg_8h_00;\n    uint var_10h;\n    \n    if (((arg_ch & 4) == 0) || (arg_1ch != -1)) {\n        fcn.0040d3d2();\n        if (arg_20h == '\\0') {\n            if ((arg_ch & 1) == 0) {\n                fcn.0041faa0(&arg_20h, arg_10h, 2);\n                uVar6 = arg_20h;\n            }\n            else {\n                fcn.0041faa0(&arg_20h + 3, arg_10h, 1);\n                uVar6 = arg_20h._3_1_;\n            }\n            fcn.00448b50(uVar6);\n            fcn.00407bef(&var_10h);\n            goto code_r0x004497a5;\n        }\n        cVar2 = fcn.0040d16a();\n        if (cVar2 == '\\0') {\n            fcn.004084a6();\n            uVar6 = ***(arg_8h + 8);\n        }\n        else {\n            uVar6 = fcn.0040cdb4();\n        }\n        fcn.00448b50(uVar6);\n        fcn.00407bef(&var_10h);\n        puVar5 = fcn.0040a4f6(0);\n        if ((arg_ch & 1) == 0) {\n            arg_20h = *puVar5;\n            arg_8h_00 = 0x2;\n        }\n        else {\n            arg_20h = arg_20h & 0xffffff | *puVar5 << 0x18;\n            arg_8h_00 = 0x1;\n        }\n    }\n    else {\n        uVar6 = arg_14h - arg_18h;\n        if (arg_20h == '\\0') {\n            if ((arg_ch & 1) != 0) {\n                iVar4 = fcn.0042010a(uVar6 + 1);\n                fcn.0041faa0(iVar4, arg_10h, uVar6);\n                *(iVar4 + uVar6) = 0;\n                uVar3 = fcn.00448553();\n                fcn.0040ca8e(uVar3);\n                fcn.0042017e(uVar3);\n                fcn.0042017e(iVar4);\n                return 0;\n            }\n            iVar1 = ((uVar6 >> 1) + 1) * 2;\n            iVar4 = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n            fcn.0041faa0(iVar4, arg_10h, uVar6 & 0xfffffffe);\n            *((uVar6 & 0xfffffffe) + iVar4) = 0;\n            fcn.0040ca8e(iVar4);\n            fcn.0042017e(iVar4);\n            return 0;\n        }\n        fcn.0040d3d2();\n        if ((arg_ch & 1) != 0) {\n            fcn.004084a6();\n            if (*(*(arg_8h + 8) + 4) < uVar6) {\n                fcn.004084a6();\n                uVar6 = *(*(arg_8h + 8) + 4) + 1;\n            }\n            fcn.004084a6();\n            fcn.00407f40(*(arg_8h + 8), 0, uVar6);\n            fcn.00407bef(&var_10h);\n            uVar3 = fcn.00448932();\n            fcn.0041faa0(arg_10h, uVar3, uVar6);\n            fcn.0042017e(uVar3);\n            goto code_r0x004497a5;\n        }\n        uVar6 = uVar6 >> 1;\n        fcn.004084a6();\n        if (*(*(arg_8h + 8) + 4) < uVar6) {\n            fcn.004084a6();\n            uVar6 = *(*(arg_8h + 8) + 4) + 1;\n        }\n        fcn.004084a6();\n        fcn.00407f40(*(arg_8h + 8), 0, uVar6);\n        arg_8h_00 = &var_10h;\n        fcn.00407bef(arg_8h_00);\n    }\n    fcn.0041faa0(arg_10h, arg_8h_00);\ncode_r0x004497a5:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1165
    },
    "004497b6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004497b6(uint32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint32_t in_stack_ffffffbc;\n    int32_t var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    cVar3 = fcn.0044a7a2();\n    piVar5 = arg_10h;\n    uVar6 = in_stack_ffffffbc;\n    if (cVar3 != '\\0') {\n        if (*(arg_ch + 8) == 0) {\n            iVar4 = *(in_ECX + 8);\n            fcn.00412570();\n            *piVar5 = iVar4;\n            piVar5[3] = 7;\n            uVar6 = 0;\n        }\n        else if (*(arg_ch + 8) == 1) {\n            puVar1 = arg_ch + 4;\n            uVar6 = 0;\n            arg_ch = 0;\n            arg_8h = 0;\n            var_14h = 0;\n            fcn.004113a0(**puVar1);\n            cVar3 = fcn.0040d2c0(4);\n            if (cVar3 == '\\0') {\n                var_1ch = fcn.0040cdb4();\n                var_1ch = var_1ch + -1;\n                fcn.00412570();\n                var_10h = 1;\n            }\n            arg_ch = fcn.00449228(&var_1ch, &arg_ch, &arg_8h);\n            piVar5 = arg_10h;\n            if (arg_ch == 0) {\n                fcn.00412570();\n                *piVar5 = 0;\n                piVar5[3] = 1;\n                uVar6 = arg_8h;\n            }\n            else {\n                fcn.00412570();\n                piVar5[3] = 7;\n                *piVar5 = arg_ch;\n            }\n            fcn.00412570();\n        }\n        goto code_r0x0044998f;\n    }\n    if ((arg_8h & 3) == 0) {\n        uVar6 = 2;\n        if ((arg_8h & 0xc) == 0) goto code_r0x0044998f;\n        iVar4 = -1;\n        uVar2 = *(arg_ch + 8);\n        if (2 < uVar2) {\n            fcn.00412570();\n            *piVar5 = 0;\n            piVar5[3] = 1;\n            goto code_r0x0044998f;\n        }\n        if ((uVar2 == 2) && (cVar3 = fcn.0041d5f6(0x29),  cVar3 == '\\0')) {\n            iVar4 = fcn.0040cdb4();\n            piVar5 = arg_10h;\n            iVar4 = iVar4 + -1;\n            if (iVar4 < 0) {\n                fcn.00412570();\n                piVar5[3] = 1;\ncode_r0x00449900:\n                *piVar5 = 0;\n                uVar6 = in_stack_ffffffbc;\n                goto code_r0x0044998f;\n            }\n        }\n        uVar6 = fcn.00449310(&arg_14h, *(*(arg_ch + 4) + -4 + uVar2 * 4), arg_10h, 1, iVar4);\n    }\n    else {\n        iVar4 = -1;\n        if (1 < *(arg_ch + 8)) {\n            fcn.00412570();\n            *piVar5 = 0;\n            piVar5[3] = 1;\n            goto code_r0x0044998f;\n        }\n        if (*(arg_ch + 8) == 1) {\n            arg_8h = **(arg_ch + 4);\n            cVar3 = fcn.0041d5f6(0x29);\n            if (cVar3 == '\\0') {\n                iVar4 = fcn.0040cdb4();\n                piVar5 = arg_10h;\n                iVar4 = iVar4 + -1;\n                if (iVar4 < 0) {\n                    fcn.00412570();\n                    piVar5[3] = 1;\n                    goto code_r0x00449900;\n                }\n            }\n        }\n        uVar6 = fcn.004492f4(&arg_14h, arg_10h, iVar4);\n    }\ncode_r0x0044998f:\n    fcn.00412570();\n    return uVar6;\n}\n",
        "token_count": 1100
    },
    "00449bee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449bee(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x14);\n    uVar1 = *(in_ECX + 0xc);\n    if (arg_ch != '\\0') {\n        fcn.0044ad14(*(in_ECX + 0xc));\n        uVar2 = fcn.0044be47(*(in_ECX + 8), *(in_ECX + 0xc));\n        fcn.0041faa0(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x14);\n    return uVar1;\n}\n",
        "token_count": 177
    },
    "00449cce": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449cce(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00449ffa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449ffa(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    \n    cVar2 = fcn.0044a0a2();\n    if (cVar2 == '\\0') {\n        iVar4 = *(extraout_ECX + 0x24);\n        if (iVar4 == 0) {\n            if (arg_ch != '\\0') {\n                fcn.0040ca8e(0x49dbf0);\n            }\n            return 0;\n        }\n    }\n    else {\n        iVar4 = *(extraout_ECX + 0x20);\n        if (iVar4 == 0) {\n            if (arg_ch != '\\0') {\n                fcn.0040ca8e(0x49dbf0);\n            }\n            return 0;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar4 + 0x14);\n    uVar1 = *(iVar4 + 0xc);\n    if (arg_ch != '\\0') {\n        fcn.0044ad14(*(iVar4 + 0xc));\n        uVar3 = fcn.0044be47(*(iVar4 + 8), *(iVar4 + 0xc));\n        fcn.0041faa0(uVar3);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar4 + 0x14);\n    return uVar1;\n}\n",
        "token_count": 340
    },
    "0044a0ba": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044a0ba(int32_t lpBuffer, int32_t nNumberOfBytesToWrite)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint lpNumberOfBytesWritten;\n    \n    lpNumberOfBytesWritten = 0;\n    cVar1 = fcn.0044a112();\n    if ((((cVar1 != '\\0') && (lpBuffer != 0)) && (nNumberOfBytesToWrite != 0)) &&\n       (iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (*(extraout_ECX + 0x18), lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0), \n       iVar2 == 0)) {\n        fcn.00449cce();\n    }\n    return lpNumberOfBytesWritten;\n}\n",
        "token_count": 183
    },
    "0044a1b7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044a1b7(int32_t param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t lpNumberOfBytesRead;\n    \n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(param_1 + 0x34, 0x1f5);\n    uVar1 = fcn.0042010a(0xffff);\n    *(param_1 + 0x10) = 0xffff;\n    uVar2 = fcn.0042010a(0xffff);\n    *(param_1 + 8) = uVar2;\n    iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(param_1 + 0x2c), uVar1, 0xffff, &lpNumberOfBytesRead, 0);\n    while ((iVar3 != 0 && (lpNumberOfBytesRead != 0))) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 0x14);\n        if (*(param_1 + 0x10) < *(param_1 + 0xc) + lpNumberOfBytesRead) {\n            uVar2 = *(param_1 + 8);\n            uVar4 = fcn.00471e16();\n            *(param_1 + 0x10) = uVar4;\n            uVar4 = fcn.0042010a(uVar4);\n            *(param_1 + 8) = uVar4;\n            fcn.0041faa0(*(param_1 + 8), uVar2, *(param_1 + 0xc));\n            fcn.0042017e(uVar2);\n        }\n        fcn.0041faa0(*(param_1 + 0xc) + *(param_1 + 8), uVar1, lpNumberOfBytesRead);\n        *(param_1 + 0xc) = *(param_1 + 0xc) + lpNumberOfBytesRead;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 0x14);\n        iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(param_1 + 0x2c), uVar1, 0xffff, &lpNumberOfBytesRead, 0);\n    }\n    fcn.0042017e(uVar1);\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(param_1 + 0x34, 0x1f6);\n    return 0x1f6;\n}\n",
        "token_count": 574
    },
    "0044a31d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a31d(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x30;\n    if (*piVar1 != 0) {\n        puVar2 = param_1 + 0x34;\n        iVar3 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(puVar2, *puVar2);\n        if (iVar3 != 0x1f6) {\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 0x14);\n            (*_sym.imp.KERNEL32.dll_TerminateThread)(*piVar1, 0x1f6);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*piVar1, 1000);\n            fcn.00449cce();\n            (*_sym.imp.KERNEL32.dll_InterlockedExchange)(puVar2, 0x1f6);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 0x14);\n        }\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "0044a37f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a37f(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    int32_t iStack8;\n    \n    if (*(param_1 + 0x20) == 0) {\n        iStack8 = 0x44a38d;\n        cVar1 = fcn.0044a1a9();\n        if (cVar1 != '\\0') {\n            iStack8 = 0x44a399;\n            uVar2 = fcn.00449bd1();\n            *(param_1 + 0x20) = uVar2;\n            iStack8 = 0x44a3a3;\n            fcn.0044a2f6();\n        }\n    }\n    if (*(param_1 + 0x24) == 0) {\n        iStack8 = 0x44a3b0;\n        cVar1 = fcn.0044a0ac();\n        if (cVar1 != '\\0') {\n            iStack8 = 0x44a3b9;\n            cVar1 = fcn.0044a0a2();\n            if (cVar1 == '\\0') {\n                iStack8 = 0x44a3c5;\n                iVar3 = fcn.00449bd1();\n                *(param_1 + 0x24) = iVar3;\n                if (*(iVar3 + 0x30) == 0) {\n                    iStack8 = iVar3;\n                    uVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)\n                                      (0, 0, fcn.0044a2dc, iVar3, 0, &stack0xfffffff8, unaff_ESI);\n                    *(iVar3 + 0x30) = uVar2;\n                }\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 422
    },
    "0044aab4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044aab4(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    \n    if ((in_ECX[3] == 5) && (*in_ECX != 0)) {\n        fcn.0044ac55();\n        uVar1 = (*in_ECX)[2];\n        *arg_8h = **in_ECX;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 113
    },
    "0044ac55": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ac55(int32_t **param_1)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    if (((param_1[3] == 0x5) && (piVar5 = (*param_1)[1],  piVar5 != NULL)) && (1 < *piVar5)) {\n        *piVar5 = *piVar5 + -1;\n        iVar1 = **param_1;\n        iVar2 = (*param_1)[2] * 4;\n        iVar3 = fcn.0042010a(-(iVar2 >> 0x20 != 0) | iVar2);\n        **param_1 = iVar3;\n        puVar4 = fcn.0042010a(4);\n        if (puVar4 == NULL) {\n            puVar4 = NULL;\n        }\n        else {\n            *puVar4 = 1;\n        }\n        iVar3 = 0;\n        (*param_1)[1] = puVar4;\n        piVar5 = *param_1;\n        if (0 < piVar5[2]) {\n            do {\n                if (*(iVar1 + iVar3 * 4) == 0) {\n                    *(*piVar5 + iVar3 * 4) = 0;\n                }\n                else {\n                    iVar6 = fcn.0042010a(0x10);\n                    if (iVar6 == 0) {\n                        iVar6 = 0;\n                    }\n                    else {\n                        arg_8h = *(iVar1 + iVar3 * 4);\n                        *(iVar6 + 8) = 0;\n                        fcn.004113a0(arg_8h);\n                    }\n                    *(**param_1 + iVar3 * 4) = iVar6;\n                }\n                piVar5 = *param_1;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < piVar5[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 470
    },
    "0044b05a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044b05a(uint16_t *pdblOut)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t **in_ECX;\n    int32_t *piVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    int32_t var_14h;\n    char *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    if ((*pdblOut & 0x2000) == 0) {\n        return 0;\n    }\n    if ((*pdblOut & 0x4000) == 0) {\n        pcVar7 = *(pdblOut + 4);\n    }\n    else {\n        pcVar7 = **(pdblOut + 4);\n    }\n    if (pcVar7 == NULL) {\n        return 0;\n    }\n    var_10h = pcVar7;\n    fcn.0040342c();\n    pdblOut = NULL;\n    (*in_ECX)[0x84] = *pcVar7;\n    piVar5 = *in_ECX;\n    var_14h = 4;\n    if (0 < piVar5[0x84]) {\n        var_18h = pcVar7 + 0x10;\n        iVar6 = 0x10c;\n        puVar4 = var_18h;\n        do {\n            *(iVar6 + piVar5) = *puVar4;\n            piVar5 = *in_ECX;\n            pdblOut = pdblOut + 1;\n            iVar6 = iVar6 + 4;\n            puVar4 = puVar4 + 2;\n            pcVar7 = var_10h;\n        } while (pdblOut < piVar5[0x84]);\n    }\n    fcn.00403320(in_ECX, 0);\n    var_8h = (*in_ECX)[2];\n    uVar1 = *(pcVar7 + 2) & 0xf00;\n    if (uVar1 == 0x100) {\n        iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar7, &var_24h);\n        iVar6 = var_8h;\n        if (iVar3 < 0) {\n            return 1;\n        }\n        var_18h = NULL;\n        if (0 < var_8h) {\n            do {\n                puVar4 = fcn.0042010a(0x10);\n                if (puVar4 == NULL) {\n                    puVar4 = NULL;\n                }\n                else {\n                    *puVar4 = 0;\n                    puVar4[2] = 0;\n                    puVar4[3] = 1;\n                }\n                *(**in_ECX + var_18h * 4) = puVar4;\n                var_34h._0_2_ = 8;\n                var_2ch = *(var_24h + var_18h * 4);\n                fcn.0044a6f6(&var_34h);\n                var_18h = var_18h + 1;\n                pcVar7 = var_10h;\n            } while (var_18h < iVar6);\n        }\n        goto code_r0x0044b3e7;\n    }\n    if (uVar1 == 0x200) goto code_r0x0044b368;\n    if (uVar1 == 0x400) {\n        iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar7, &var_20h);\n        iVar6 = var_8h;\n        if (iVar3 < 0) {\n            return 1;\n        }\n        var_18h = NULL;\n        if (0 < var_8h) {\n            do {\n                puVar4 = fcn.0042010a(0x10);\n                if (puVar4 == NULL) {\n                    puVar4 = NULL;\n                }\n                else {\n                    *puVar4 = 0;\n                    puVar4[2] = 0;\n                    puVar4[3] = 1;\n                }\n                *(**in_ECX + var_18h * 4) = puVar4;\n                var_34h._0_2_ = 9;\n                var_2ch = var_20h + var_18h * 4;\n                fcn.0044a6f6(&var_34h);\n                var_18h = var_18h + 1;\n                pcVar7 = var_10h;\n            } while (var_18h < iVar6);\n        }\n        goto code_r0x0044b3e7;\n    }\n    if (uVar1 == 0x800) {\n        iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar7, &var_1ch);\n        iVar6 = var_8h;\n        if (iVar3 < 0) {\n            return 1;\n        }\n        var_18h = NULL;\n        if (0 < var_8h) {\n            var_14h = 0;\n            do {\n                puVar4 = fcn.0042010a(0x10);\n                if (puVar4 == NULL) {\n                    puVar4 = NULL;\n                }\n                else {\n                    *puVar4 = 0;\n                    puVar4[2] = 0;\n                    puVar4[3] = 1;\n                }\n                *(**in_ECX + var_18h * 4) = puVar4;\n                var_34h._0_2_ = 0x400c;\n                var_2ch = var_1ch + var_14h;\n                fcn.0044a6f6(&var_34h);\n                var_14h = var_14h + 0x10;\n                var_18h = var_18h + 1;\n                pcVar7 = var_10h;\n            } while (var_18h < iVar6);\n        }\n        goto code_r0x0044b3e7;\n    }\n    if (-1 < *(pcVar7 + 2)) goto code_r0x0044b368;\n    (*_sym.imp.OLEAUT32.dll_VarR8FromUI1)(pcVar7, &pdblOut);\n    if ((pdblOut & 0xffff) - 2 < 0x16) {\n    // switch table (22 cases) at 0x44b3fa\n        switch(*(*((pdblOut & 0xffff) + 0x44b410) * 4 + 0x44b3fa)) {\n        case 0x44b15d:\n            iVar6 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar7, &var_ch);\n            if (-1 < iVar6) {\n                iVar6 = var_8h;\n                iVar3 = var_8h;\n                uVar2 = fcn.0044ad14(var_8h);\n                fcn.0041faa0(uVar2, iVar6, var_ch, iVar3);\n                (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(pcVar7);\n                return 1;\n            }\n            goto code_r0x0044b368;\n        case 0x44b196:\n            var_14h = 1;\n            break;\n        case 0x44b19b:\n            var_14h = 2;\n            break;\n        case 0x44b1a4:\n            var_14h = 8;\n            break;\n        case 0x44b1ad:\n            goto code_r0x0044b1ad;\n        }\n    }\n    else {\ncode_r0x0044b1ad:\n        if ((pdblOut & 0x4000) == 0) {\ncode_r0x0044b368:\n            fcn.00412570();\n            return 0;\n        }\n        var_14h = 4;\n    }\n    iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar7, &var_ch);\n    iVar6 = var_14h;\n    if (iVar3 < 0) {\n        return 1;\n    }\n    var_18h = NULL;\n    if (0 < var_8h) {\n        do {\n            puVar4 = fcn.0042010a(0x10);\n            if (puVar4 == NULL) {\n                puVar4 = NULL;\n            }\n            else {\n                *puVar4 = 0;\n                puVar4[2] = 0;\n                puVar4[3] = 1;\n            }\n            *(**in_ECX + var_18h * 4) = puVar4;\n            if ((pdblOut & 0x4000) == 0) {\n                var_34h._0_2_ = pdblOut | 0x4000;\n                var_2ch = var_ch;\n            }\n            else {\n                var_34h._0_2_ = pdblOut;\n                fcn.0041faa0(&var_2ch, var_ch, iVar6);\n            }\n            fcn.0044a6f6(&var_34h);\n            var_ch = var_ch + iVar6;\n            var_18h = var_18h + 1;\n            pcVar7 = var_10h;\n        } while (var_18h < var_8h);\n    }\ncode_r0x0044b3e7:\n    (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(pcVar7);\n    return 1;\n}\n",
        "token_count": 2202
    },
    "0044b428": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044b428(uint *arg_8h)\n\n{\n    float fVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    double *in_ECX;\n    uint uVar5;\n    uint uVar6;\n    char16_t *arg_10h;\n    uint in_stack_ffffff48;\n    ulong in_stack_ffffff4c;\n    uint *puVar7;\n    uint var_94h;\n    uint cIn;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint var_64h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_44h;\n    uint pdateOut;\n    uint wVerMinor;\n    uint var_20h;\n    uint32_t pvargDest;\n    uint pbstr;\n    uint var_10h;\n    double dStack16;\n    \n    uVar3 = *arg_8h;\n    if (0x24 < uVar3) {\n        if (0x15 < uVar3 - 0x4002) {\n            return 0;\n        }\n    // switch table (22 cases) at 0x44b8ec\n        switch(*((uVar3 - 0x4002) * 4 + 0x44b8ec)) {\n        case 0x44b73c:\n            goto code_r0x0044b73c;\n        case 0x44b756:\n            if (arg_8h[2] == 0) {\n                return 1;\n            }\n            *(in_ECX + 0xc) = 8;\n            uVar5 = fcn.0042010a(0x10);\n            *in_ECX = uVar5;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar5);\n            **in_ECX = 9;\n            *(*in_ECX + 8) = *arg_8h[2];\n            if (*(*in_ECX + 8) == NULL) {\n                return 1;\n            }\n            (**(**(*in_ECX + 8) + 4))();\n            return 1;\n        case 0x44b7a2:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0x44b7b5:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0x44b7c8:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0x44b7db:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0x44b7ee:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0x44b800:\n            puVar7 = arg_8h[2];\n            if (puVar7 == NULL) {\n                return 1;\n            }\n            uVar5 = *puVar7;\n            uVar6 = puVar7[1];\ncode_r0x0044b4cb:\n            fcn.00412570();\n            *(in_ECX + 0xc) = 2;\n            *in_ECX = uVar5;\n            *(in_ECX + 4) = uVar6;\n            return 1;\n        case 0x44b815:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            fVar1 = *arg_8h[2];\n            goto code_r0x0044b4e1;\n        case 0x44b827:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            fVar1 = *arg_8h[2];\n            goto code_r0x0044b4e1;\n        case 0x44b839:\n            uVar5 = 0;\n            if (arg_8h[2] == 0) {\n                return 1;\n            }\n            iVar4 = fcn.0042010a(0x10);\n            if (iVar4 == 0) goto code_r0x0044b530;\n            uVar5 = *arg_8h[2];\ncode_r0x0044b527:\n            uVar5 = fcn.0040caee(uVar5);\ncode_r0x0044b530:\n            *(in_ECX + 1) = uVar5;\n            *(in_ECX + 0xc) = 4;\n            return 1;\n        case 0x44b85e:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            iVar2 = *arg_8h[2];\ncode_r0x0044b544:\n            arg_8h = arg_8h & 0xffffff00 | iVar2 != 0;\n            fcn.0041e387(arg_8h);\n            return 1;\n        case 0x44b872:\n            if (arg_8h[2] == 0) {\n                return 1;\n            }\n            fcn.0044a6f6(arg_8h[2]);\n            return 1;\n        }\n        goto code_r0x0044b49e;\n    }\n    if (uVar3 == 0x24) {\ncode_r0x0044b63b:\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n        uVar5 = 0;\n        pbstr = 0;\n        var_10h = 0;\n        (**(*arg_8h[3] + 0x2c))(arg_8h[3], 0, 0, &pvargDest, 0);\n        if ((pvargDest & 0x8000) == 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\ncode_r0x0044b73c:\n            return 0;\n        }\n        uVar3 = pvargDest & 0xfff;\n        if (uVar3 == 0xc) {\n            *(in_ECX + 0xc) = 0xc;\n            iVar4 = fcn.0042010a(0x14);\n            if (iVar4 != 0) {\n                uVar5 = fcn.00448a89(pbstr);\n            }\n        }\n        else {\n            if (uVar3 == 0xd) {\n                *(in_ECX + 0xc) = 0xd;\n                iVar4 = fcn.0042010a(0x14);\n                if (iVar4 == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    fcn.0040d3d2();\n                }\n                *in_ECX = iVar4;\n                *(iVar4 + 0x10) = pbstr;\n                goto code_r0x0044b71c;\n            }\n            if (uVar3 == 0xe) {\n                *(in_ECX + 0xc) = 0xe;\n                iVar4 = fcn.0042010a(0x14);\n                if (iVar4 == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    fcn.0040d3d2();\n                }\n                *in_ECX = iVar4;\n                fcn.00407e53(pbstr);\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                goto code_r0x0044b71c;\n            }\n            *(in_ECX + 0xc) = 0xf;\n            iVar4 = fcn.0042010a(0x14);\n            if (iVar4 != 0) {\n                uVar5 = fcn.00444d76(pbstr);\n            }\n        }\n        *in_ECX = uVar5;\ncode_r0x0044b71c:\n        pvargDest = CONCAT22(pvargDest._2_2_, 0x1a);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n        return 1;\n    }\n    if (0x17 < uVar3) {\n        return 0;\n    }\n    // switch table (24 cases) at 0x44b88c\n    switch(*(uVar3 * 4 + 0x44b88c)) {\n    case 0x44b45b:\n        *(in_ECX + 0xc) = 8;\n        uVar5 = fcn.0042010a(0x10);\n        *in_ECX = uVar5;\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar5);\n        iVar4 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*in_ECX, arg_8h);\n        if (-1 < iVar4) {\n            return 1;\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*in_ECX);\n        fcn.0042017e(*in_ECX);\n        *in_ECX = 0;\n        return 1;\n    case 0x44b49a:\n        uVar3 = *(arg_8h + 2);\n        break;\n    case 0x44b4ae:\n        uVar3 = *(arg_8h + 2);\n        break;\n    case 0x44b4b4:\n        uVar3 = *(arg_8h + 2);\n        break;\n    case 0x44b4ba:\n        uVar3 = *(arg_8h + 2);\n        break;\n    case 0x44b4c0:\n        uVar3 = arg_8h[2];\n        break;\n    case 0x44b4c5:\n        uVar5 = arg_8h[2];\n        uVar6 = arg_8h[3];\n        goto code_r0x0044b4cb;\n    case 0x44b4de:\n        fVar1 = arg_8h[2];\n        goto code_r0x0044b4e1;\n    case 0x44b4f7:\n        fVar1 = *(arg_8h + 2);\n        goto code_r0x0044b4e1;\n    case 0x44b4fc:\n        fVar1 = *(arg_8h + 2) / *0x4b6558;\n        goto code_r0x0044b4e1;\n    case 0x44b50d:\n        uVar5 = 0;\n        if (arg_8h[2] == 0) {\n            return 1;\n        }\n        iVar4 = fcn.0042010a(0x10);\n        if (iVar4 == 0) goto code_r0x0044b530;\n        uVar5 = arg_8h[2];\n        goto code_r0x0044b527;\n    case 0x44b53f:\n        iVar2 = *(arg_8h + 2);\n        goto code_r0x0044b544;\n    case 0x44b555:\n        (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*(arg_8h + 2), &wVerMinor);\n        fcn.0042234b(&var_94h, L\"%4d%02d%02d%02d%02d%02d\", wVerMinor);\n        puVar7 = &var_94h;\ncode_r0x0044b5a2:\n        fcn.0040ca8e(puVar7);\n        return 1;\n    case 0x44b5ac:\n        cIn = *arg_8h;\n        uStack116 = arg_8h[1];\n        uStack112 = arg_8h[2];\n        uStack108 = arg_8h[3];\n        (*_sym.imp.OLEAUT32.dll_VarDateFromI1)();\n        fVar1 = _pdateOut;\ncode_r0x0044b4e1:\n        dStack16 = fVar1;\n        fcn.00412570();\n        *(in_ECX + 0xc) = 3;\n        *in_ECX = dStack16;\n        return 1;\n    case 0x44b5cd:\n        puVar7 = 0x49dbf0;\n        goto code_r0x0044b5a2;\n    case 0x44b5d4:\n        uVar5 = 0x49dbf0;\n        fcn.0040caee(0x49dbf0);\n        fcn.004499d0(0x2a, 0, uVar5, in_stack_ffffff48, in_stack_ffffff4c, in_stack_ffffff4c >> 0x20);\n        fcn.0044a689(&var_4ch);\ncode_r0x0044b5fd:\n        fcn.00405cd3();\n        return 1;\n    case 0x44b607:\n        if (arg_8h[2] == -0x7ffdfffc) {\n            arg_10h = L\"Default\";\n            fcn.0040caee(L\"Default\");\n            fcn.004499d0(0x29, 0, arg_10h, in_stack_ffffff48, in_stack_ffffff4c, in_stack_ffffff4c >> 0x20);\n            fcn.0044a689(&var_64h);\n            goto code_r0x0044b5fd;\n        }\n        goto code_r0x0044b63b;\n    case 0x44b73c:\n        goto code_r0x0044b73c;\n    }\ncode_r0x0044b49e:\n    fcn.00412570();\n    *(in_ECX + 0xc) = 1;\n    *in_ECX = uVar3;\n    return 1;\n}\n",
        "token_count": 3162
    },
    "0044be14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044be14(int16_t **param_1)\n\n{\n    int16_t *in_EAX;\n    \n    if ((((param_1[3] == 0x8) && (in_EAX = *param_1,  in_EAX != NULL)) && ((*in_EAX == 9 || (*in_EAX == 0xd)))) &&\n       (*(in_EAX + 4) != 0)) {\n        return CONCAT31(in_EAX >> 8, 1);\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 126
    },
    "0044bfb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop",
            "generate random numbers using a Mersenne Twister"
        ],
        "decompiled_code": "\nvoid fcn.0044bfb8(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    \n    if (*0x4c34e4 == 0) {\n        fcn.004240da(0);\n        fcn.0044bf7c();\n    }\n    *0x4bf7e0 = 0x270;\n    *0x4c34f0 = 0x4c34f8;\n    iVar3 = 0xe3;\n    puVar2 = 0x4c34f8;\n    do {\n        puVar1 = puVar2 + 1;\n        *puVar2 = ((*puVar2 ^ *puVar1) & 0x7ffffffe ^ *puVar2) >> 1 ^ puVar2[0x18d] ^ -((*puVar1 & 1) != 0) & 0x9908b0df\n        ;\n        iVar3 = iVar3 + -1;\n        puVar2 = puVar1;\n    } while (iVar3 != 0);\n    iVar3 = 0x18c;\n    do {\n        puVar2 = puVar1;\n        puVar1 = puVar2 + 1;\n        *puVar2 = ((*puVar2 ^ *puVar1) & 0x7ffffffe ^ *puVar2) >> 1 ^ puVar2[-0xe3] ^ -((*puVar1 & 1) != 0) & 0x9908b0df\n        ;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *puVar1 = ((*puVar1 ^ *0x4c34f8) & 0x7ffffffe ^ *puVar1) >> 1 ^ puVar2[-0xe2] ^ -((*0x4c34f8 & 1) != 0) & 0x9908b0df\n    ;\n    return;\n}\n",
        "token_count": 445
    },
    "0044c12d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044c12d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x44e) = 0;\n    do {\n        arg_8h = arg_8h + -1;\n        if (*(in_ECX + 0x450) == 0) {\n            if (*(in_ECX + 0x14) == 1) {\n                iVar1 = *(in_ECX + 0xc);\n                *(in_ECX + 0x44c) = *(in_ECX + 0x44c) | *(*(in_ECX + 4) + iVar1) << 8;\n                *(in_ECX + 0xc) = iVar1 + 1;\n                *(in_ECX + 0x44c) = *(in_ECX + 0x44c) | *(iVar1 + 1 + *(in_ECX + 4));\n                *(in_ECX + 0xc) = iVar1 + 2;\n            }\n            else {\n                uVar2 = fcn.0044c5e0();\n                *(in_ECX + 0x44c) = *(in_ECX + 0x44c) | (uVar2 & 0xff) << 8;\n                uVar2 = fcn.0044c5e0();\n                *(in_ECX + 0x44c) = *(in_ECX + 0x44c) | uVar2 & 0xff;\n                *(in_ECX + 0xc) = *(in_ECX + 0xc) + 2;\n            }\n            *(in_ECX + 0x450) = 0x10;\n        }\n        *(in_ECX + 0x44c) = *(in_ECX + 0x44c) << 1;\n        *(in_ECX + 0x450) = *(in_ECX + 0x450) + -1;\n    } while (arg_8h != 0);\n    return *(in_ECX + 0x44c) >> 0x10;\n}\n",
        "token_count": 480
    },
    "0044c376": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044c376(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(param_1 + 0x10);\n    do {\n        if (uVar1 <= *(param_1 + 0x43c)) {\n            fcn.0044c676();\n            return 0;\n        }\n        iVar3 = fcn.0044c12d(1);\n        if (iVar3 == 1) {\n            uVar2 = fcn.0044c12d(8);\n            *((*(param_1 + 0x43c) & 0x1ffff) + *(param_1 + 0x438)) = uVar2;\n            *(param_1 + 0x43c) = *(param_1 + 0x43c) + 1;\n            *(param_1 + 0x440) = *(param_1 + 0x440) + 1;\n        }\n        else {\n            fcn.0044c22e(&var_8h, &var_4h);\n            uVar5 = *(param_1 + 0x43c) - var_8h;\n            for (; var_4h != 0; var_4h = var_4h + -1) {\n                uVar4 = uVar5 & 0x1ffff;\n                uVar5 = uVar5 + 1;\n                *((*(param_1 + 0x43c) & 0x1ffff) + *(param_1 + 0x438)) = *(uVar4 + *(param_1 + 0x438));\n                *(param_1 + 0x43c) = *(param_1 + 0x43c) + 1;\n                *(param_1 + 0x440) = *(param_1 + 0x440) + 1;\n            }\n        }\n        fcn.0044c553();\n        fcn.0044c488();\n    } while (*(param_1 + 0x448) == '\\0');\n    return 4;\n}\n",
        "token_count": 510
    },
    "0044d338": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: lpCaption\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044d338(uint noname_0, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t arg_ch_00;\n    int32_t extraout_ECX;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uchar auStackY8268 [8148];\n    uint uStackY120;\n    uint lpCaption;\n    uchar *var_34h;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_24h;\n    uint lpText;\n    uint var_4h;\n    \n    fcn.00430650();\n    pcVar1 = _sym.imp.USER32.dll_LoadStringW;\n    if ((*0x4c10b6 == '\\0') && (*(extraout_ECX + 0xfc) != 1)) {\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        var_24h = 0x44d390;\n        fcn.0040caee(&stack0xffffdfb4);\n        var_24h = 0xfff;\n        puStack44 = &stack0xffffdfb4;\n        uStack48 = 0x72;\n        uStack52 = *0x4c10b8;\n        var_34h = 0x44d3a2;\n        (*pcVar1)();\n        var_34h = &stack0xffffdfb4;\n        fcn.0040caee(var_34h);\n        uVar3 = fcn.00443438(*(extraout_ECX + 0xf4));\n        uVar4 = fcn.004433b0(uVar3 >> 0x20);\n        uVar2 = fcn.004433e2(uVar4 >> 0x20);\n        uVar5 = fcn.00443414(uVar2);\n        uVar2 = uVar5 >> 0x20;\n        arg_ch_00 = uVar5;\n        if (arg_ch_00 != 0) {\n            uVar2 = uVar4;\n        }\n        fcn.0042234b(&stack0xffffdfb4, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", uVar2);\n        fcn.0040caee(&stack0xffffdfb4);\n        if (uVar3 != 0) {\n            fcn.004039e8(uVar3);\n            fcn.004039e8(0x49dc8c);\n        }\n        fcn.0040d3d2();\n        if (arg_ch != 0) {\n            fcn.00407e53(L\"^ ERROR \");\n            fcn.004039e8(arg_ch);\n            fcn.00407b4b(&fcn.0044d338::var_24h);\n            fcn.004039e8(0x49dc8c);\n        }\n        fcn.004039e8(L\"\\nError: \");\n        fcn.00407b4b(&fcn.0044d338::var_34h);\n        if (*0x4c10c2 == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else if (arg_ch_00 == 0) {\n            fcn.00422c67(L\"\\\"%s\\\" (%d) : ==> %s:\\n\", *(extraout_ECX + 200));\n        }\n        else {\n            uStackY120 = 0x44d49e;\n            fcn.00422c67(L\"\\\"%s\\\" (%d) : ==> %s:\\n%s\\n%s\\n\", arg_ch_00);\n        }\n        *(extraout_ECX + 0xfc) = 1;\n        *0x4c10bc = ((*(extraout_ECX + 0x11c) == '\\0') - 1 & 0x7ffff071) + 1;\n        fcn.00405cd3();\n        fcn.00405cd3();\n        fcn.00405cd3();\n        fcn.00405cd3();\n    }\n    return;\n}\n",
        "token_count": 943
    },
    "0044d520": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: lpCaption\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044d520(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    int32_t arg_ch_00;\n    int32_t extraout_ECX;\n    ulong uVar3;\n    ulong uVar4;\n    uchar auStackY8268 [8148];\n    uint uStackY120;\n    uint lpCaption;\n    uchar *var_34h;\n    uint uStack52;\n    int32_t iStack48;\n    uchar *puStack44;\n    uint var_24h;\n    uint lpText;\n    uint var_4h;\n    \n    fcn.00430650();\n    pcVar1 = _sym.imp.USER32.dll_LoadStringW;\n    if ((*0x4c10b6 == '\\0') && (*(extraout_ECX + 0xfc) != 1)) {\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        var_24h = 0x44d578;\n        fcn.0040caee(&stack0xffffdfb4);\n        var_24h = 0xfff;\n        puStack44 = &stack0xffffdfb4;\n        iStack48 = arg_8h;\n        uStack52 = *0x4c10b8;\n        var_34h = 0x44d58b;\n        (*pcVar1)();\n        var_34h = &stack0xffffdfb4;\n        fcn.0040caee(var_34h);\n        uVar3 = fcn.00443438(*(extraout_ECX + 0xf4));\n        arg_8h_00 = uVar3;\n        uVar3 = fcn.004433b0(uVar3 >> 0x20);\n        uVar2 = fcn.004433e2(uVar3 >> 0x20);\n        uVar4 = fcn.00443414(uVar2);\n        uVar2 = uVar4 >> 0x20;\n        arg_ch_00 = uVar4;\n        if (arg_ch_00 != 0) {\n            uVar2 = uVar3;\n        }\n        fcn.0042234b(&stack0xffffdfb4, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", uVar2);\n        fcn.0040caee(&stack0xffffdfb4);\n        if (arg_8h_00 != 0) {\n            fcn.004039e8(arg_8h_00);\n            fcn.004039e8(0x49dc8c);\n        }\n        fcn.0040d3d2();\n        if (-1 < arg_ch) {\n            fcn.00407e53(arg_8h_00);\n            fcn.0040a2fb(arg_ch, 0xffffffff);\n            fcn.004039e8(L\"^ ERROR\");\n            fcn.00407b4b(&fcn.0044d520::var_24h);\n            fcn.004039e8(0x49dc8c);\n        }\n        fcn.004039e8(L\"\\nError: \");\n        fcn.00407b4b(&fcn.0044d520::var_34h);\n        if (*0x4c10c2 == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else if (arg_ch_00 == 0) {\n            fcn.00422c67(L\"\\\"%s\\\" (%d) : ==> %s:\\n\", *(extraout_ECX + 200));\n        }\n        else {\n            uStackY120 = 0x44d692;\n            fcn.00422c67(L\"\\\"%s\\\" (%d) : ==> %s:\\n%s\\n%s\\n\", arg_ch_00);\n        }\n        *0x4c10bc = 1;\n        *(extraout_ECX + 0xfc) = 1;\n        if (*(extraout_ECX + 0x11c) != '\\0') {\n            *0x4c10bc = arg_8h + 0x7ffff000;\n        }\n        fcn.00405cd3();\n        fcn.00405cd3();\n        fcn.00405cd3();\n        fcn.00405cd3();\n    }\n    return;\n}\n",
        "token_count": 1000
    },
    "0044d80a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d80a(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar1 = *(in_ECX + 0xf4);\n    uVar2 = *(in_ECX + 0x160);\n    if (arg_ch != '\\0') {\n        fcn.0040109f(arg_8h);\n    }\n    fcn.0040e1f0(arg_8h);\n    if (arg_ch != '\\0') {\n        fcn.00401188();\n    }\n    while (uVar2 < *(in_ECX + 0x160)) {\n        fcn.0040d9f2();\n    }\n    *(in_ECX + 0xf4) = uVar1;\n    return;\n}\n",
        "token_count": 194
    },
    "0044d929": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d929(uint arg_8h, int32_t arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    if ((arg_ch == 1) && (arg_14h != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0x467, 1, arg_14h);\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0044ed57": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044ed57(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint uStack556;\n    uchar auStack536 [4];\n    uchar auStack532 [4];\n    uchar auStack528 [524];\n    \n    uVar3 = uStack556;\n    uStack556 = uStack556 & 0xffffff00;\n    if (2 < *(arg_8h + 8)) {\n        uVar2 = fcn.0040cdb4();\n        if ((uVar2 & 1) != 0) {\n            uStack556 = CONCAT31(SUB43(uVar3, 1), 1);\n        }\n        uVar3 = fcn.0040cdb4();\n        if ((uVar3 & 8) != 0) {\n            iVar4 = *(*(arg_8h + 4) + 4);\n            fcn.004084a6();\n            fcn.0042297d(**(iVar4 + 8), auStack536, auStack528, 0, 0);\n            fcn.0040caee(auStack536);\n            fcn.004039e8(auStack532);\n            if (((uStack556 != 0) && (cVar1 = fcn.00446f4b(),  cVar1 == '\\0')) &&\n               (cVar1 = fcn.00446d6d(),  cVar1 == '\\0')) {\n                fcn.00412570();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n            }\n            iVar4 = fcn.0040cdb4();\n            if (iVar4 == 0) {\n                fcn.00405cd3();\n                return 0;\n            }\n            fcn.00405cd3();\n        }\n    }\n    fcn.004084a6();\n    fcn.004084a6();\n    cVar1 = fcn.00446b3f(unaff_ESI, 0);\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 522
    },
    "0044ee88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044ee88(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX & 0xffffff00;\n    if (2 < *(arg_8h + 8)) {\n        iVar2 = fcn.0040cdb4();\n        if (iVar2 == 1) {\n            var_4h = CONCAT31(in_ECX >> 8, 1);\n        }\n    }\n    fcn.004084a6();\n    cVar1 = fcn.00447c0c();\n    if (cVar1 == '\\0') {\n        iVar2 = **(arg_8h + 4);\n        fcn.004084a6();\n        uVar3 = **(iVar2 + 8);\n        iVar2 = *(*(arg_8h + 4) + 4);\n        fcn.004084a6();\n        uVar3 = (*_sym.imp.KERNEL32.dll_CreateHardLinkW)(**(iVar2 + 8), uVar3, 0);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = uVar3;\n        iVar2 = fcn.0040cdb4();\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if ((iVar2 == 0xb7) && (var_4h != '\\0')) {\n                iVar2 = *(*(arg_8h + 4) + 4);\n                fcn.004084a6();\n                (*_sym.imp.KERNEL32.dll_DeleteFileW)(**(iVar2 + 8));\n                iVar2 = **(arg_8h + 4);\n                fcn.004084a6();\n                uVar3 = **(iVar2 + 8);\n                iVar2 = *(*(arg_8h + 4) + 4);\n                fcn.004084a6();\n                uVar3 = (*_sym.imp.KERNEL32.dll_CreateHardLinkW)(**(iVar2 + 8), uVar3, 0);\n                fcn.00412570();\n                arg_ch[3] = 1;\n                *arg_ch = uVar3;\n            }\n        }\n    }\n    else {\n        iVar2 = (*(arg_8h + 4))[1];\n        fcn.004084a6();\n        uVar3 = **(iVar2 + 8);\n        iVar2 = **(arg_8h + 4);\n        fcn.004084a6();\n        uVar3 = fcn.0044d950(**(iVar2 + 8), uVar3, var_4h);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 663
    },
    "0044efcd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044efcd(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t extraout_EDX;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uchar *arg_14h;\n    int32_t *arg_18h;\n    uint uStack124;\n    int32_t *piStack120;\n    int32_t *piStack116;\n    uint32_t uStack112;\n    int32_t *piStack108;\n    uint uStack104;\n    \n    uVar8 = *(arg_8h + 8);\n    iVar5 = *(*(arg_8h + 4) + 4);\n    uVar9 = 0;\n    fcn.004084a6();\n    iVar5 = *(iVar5 + 8);\n    iVar1 = *(iVar5 + 4);\n    piVar2 = *(iVar5 + 0xc);\n    *piVar2 = *piVar2 + 1;\n    fcn.004478ad();\n    iVar5 = fcn.0045267a(L\".lnk\", 2, 1, 0xffffffff, 0xffffffff, 0xffffffff);\n    if (iVar5 == iVar1) {\n        uStack104 = 0x44f04b;\n        fcn.004039e8(L\".lnk\");\n    }\n    uStack104 = 0;\n    piStack108 = 0x44f053;\n    (*_sym.imp.ole32.dll_CoInitialize)();\n    piStack108 = &stack0xffffffa8;\n    uStack112 = 0x48d8ec;\n    piStack116 = 0x1;\n    piStack120 = NULL;\n    uStack124 = 0x48da7c;\n    iVar5 = (*_sym.imp.ole32.dll_CoCreateInstance)();\n    if (iVar5 < 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    else {\n        iVar5 = **(arg_8h + 4);\n        fcn.004084a6();\n        piVar3 = piStack108;\n        piVar2 = **(iVar5 + 8);\n        (**(*piStack108 + 0x50))();\n        if (2 < uVar8) {\n            iVar5 = *(*(arg_8h + 4) + 8);\n            fcn.004084a6();\n            (**(*piStack116 + 0x24))(piStack116, **(iVar5 + 8));\n        }\n        if (3 < uVar8) {\n            iVar5 = *(*(arg_8h + 4) + 0xc);\n            fcn.004084a6();\n            (**(*piStack116 + 0x2c))(piStack116, **(iVar5 + 8));\n        }\n        if (4 < uVar8) {\n            iVar5 = *(*(arg_8h + 4) + 0x10);\n            fcn.004084a6();\n            (**(*piStack116 + 0x1c))(piStack116, **(iVar5 + 8));\n        }\n        if (5 < uVar8) {\n            iVar5 = *(*(arg_8h + 4) + 0x14);\n            fcn.004084a6();\n            (**(*piStack116 + 0x44))(piStack116, **(iVar5 + 8), 0);\n        }\n        iVar5 = arg_8h;\n        if (6 < uVar8) {\n            iVar1 = *(*(arg_8h + 4) + 0x18);\n            cVar4 = fcn.00405372();\n            iVar5 = extraout_EDX;\n            if (cVar4 != '\\0') {\n                fcn.004084a6();\n                fcn.0040caee(**(iVar1 + 8));\n                arg_18h = &stack0xffffff84;\n                arg_14h = &stack0xffffff85;\n                cVar4 = fcn.0041da5a(&stack0xffffffa8, &stack0xffffff94, &stack0xffffff86, arg_14h, arg_18h, \n                                     &stack0xffffff87);\n                fcn.00405cd3();\n                iVar5 = arg_8h;\n                uVar8 = uStack112;\n                if (cVar4 == '\\x01') {\n                    if (arg_14h != '\\0') {\n                        uVar9 = 4;\n                    }\n                    cVar4 = arg_14h >> 8;\n                    if (cVar4 != '\\0') {\n                        uVar9 = uVar9 | 2;\n                    }\n                    if (arg_14h >> 0x10 != '\\0') {\n                        uVar9 = uVar9 | 1;\n                    }\n                    if ((cVar4 == '\\0') && (arg_14h == '\\0')) {\n                        uVar9 = uVar9 | 6;\n                    }\n                    (**(*arg_18h + 0x34))(arg_18h, uVar9 << 8 | piVar3);\n                    uVar8 = uStack112;\n                }\n            }\n        }\n        if (7 < uVar8) {\n            iVar5 = *(*(iVar5 + 4) + 0x14);\n            fcn.004084a6();\n            uVar7 = **(iVar5 + 8);\n            iVar5 = *piStack116;\n            uVar6 = fcn.0040cdb4();\n            (**(iVar5 + 0x44))(piStack116, uVar7, uVar6);\n            uVar8 = uStack112;\n        }\n        if (8 < uVar8) {\n            iVar5 = *piStack116;\n            uVar7 = fcn.0040cdb4();\n            (**(iVar5 + 0x3c))(piStack116, uVar7);\n        }\n        iVar5 = (***piStack116)(piStack116, 0x48d94c, &stack0xffffff94);\n        if (iVar5 < 0) {\n            fcn.00412570();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        else {\n            iVar5 = (**(*piStack120 + 0x18))(piStack120, uStack112, 1);\n            if (iVar5 < 0) {\n                fcn.00412570();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n            }\n            (**(*piVar3 + 8))(piVar3);\n        }\n        (**(*piVar2 + 8))(piVar2);\n    }\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1543
    },
    "0044f350": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f350(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    int32_t **ppiVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint uStack612;\n    uint auStack608 [2];\n    uchar auStack600 [36];\n    uchar auStack564 [560];\n    \n    iVar7 = **(arg_8h + 4);\n    fcn.004084a6();\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(**(iVar7 + 8), auStack600);\n    iVar7 = iVar2;\n    if (iVar2 == -1) {\n        fcn.00412570();\n        *arg_ch = -1;\n        arg_ch[3] = 1;\n        return 0;\n    }\n    while ((iVar3 = fcn.00422203(auStack564, 0x4b3a68),  iVar3 == 0 ||\n           (iVar3 = fcn.00422203(auStack564, 0x49daa0),  iVar3 == 0))) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar2, auStack608);\n        if (iVar3 == 0) {\n            fcn.0044d7e4(1, 0);\n            fcn.00412570();\n            *arg_ch = -1;\n            arg_ch[3] = 1;\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n            return 0;\n        }\n    }\n    uVar1 = *(in_ECX + 0x19c);\n    uVar6 = 0;\n    if (uVar1 != 0) {\n        ppiVar5 = *(in_ECX + 0x198);\n        do {\n            if (**ppiVar5 == 0) break;\n            uVar6 = uVar6 + 1;\n            ppiVar5 = ppiVar5 + 1;\n        } while (uVar6 < uVar1);\n    }\n    if (uVar6 == uVar1) {\n        uStack612 = fcn.0042010a(0x14);\n        fcn.0040197e(&uStack612);\n    }\n    else {\n        uVar4 = fcn.0042010a(0x14);\n        **(*(in_ECX + 0x198) + uVar6 * 4) = uVar4;\n    }\n    ***(*(in_ECX + 0x198) + uVar6 * 4) = 1;\n    *(**(*(in_ECX + 0x198) + uVar6 * 4) + 8) = iVar7;\n    uVar4 = fcn.00403bcf();\n    *(**(*(in_ECX + 0x198) + uVar6 * 4) + 0xc) = uVar4;\n    *(**(*(in_ECX + 0x198) + uVar6 * 4) + 0x10) = auStack608[0];\n    fcn.00412570();\n    arg_ch[3] = 1;\n    *arg_ch = uVar6 + 1;\n    return 0;\n}\n",
        "token_count": 748
    },
    "0044f4ca": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f4ca(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t unaff_EDI;\n    uchar auStack604 [36];\n    uchar auStack568 [564];\n    \n    cVar2 = fcn.0041f0f3(auStack604, **(arg_8h + 4), 1);\n    if (cVar2 != '\\0') {\n        piVar1 = *(*(in_ECX + 0x198) + unaff_EDI * 4);\n        iVar3 = *piVar1;\n        if (*(iVar3 + 0xc) != 0) {\n            fcn.0040ca8e(*(iVar3 + 0xc));\n            if ((*(**(*(in_ECX + 0x198) + unaff_EDI * 4) + 0x10) & 0x10) != 0) {\n                fcn.00407ba9(1, 0);\n            }\n            fcn.0042017e(*(**(*(in_ECX + 0x198) + unaff_EDI * 4) + 0xc));\n            *(**(*(in_ECX + 0x198) + unaff_EDI * 4) + 0xc) = 0;\n            return 0;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(*(*piVar1 + 8), &stack0xfffffd9c);\n        if (iVar3 != 0) {\n            fcn.0040ca8e(auStack568);\n            if ((unaff_EDI & 0x10) == 0) {\n                return 0;\n            }\n            fcn.00407ba9(1, 0);\n            return 0;\n        }\n    }\n    fcn.0044d7e4(1, 0);\n    fcn.0040ca8e(0x49dbf0);\n    return 0;\n}\n",
        "token_count": 463
    },
    "004501e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004501e4(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uStack2660;\n    uchar auStack2648 [4];\n    uint uStack2644;\n    uint uStack2640;\n    uchar uStack2636;\n    uchar auStack2624 [504];\n    uchar auStack2120 [14];\n    int16_t aiStack2106 [257];\n    int16_t aiStack1592 [260];\n    uchar auStack1072 [528];\n    uchar auStack544 [540];\n    \n    uStack2644 = 0;\n    uStack2640 = 0;\n    uStack2636 = 0;\n    if (*(arg_8h + 8) == 3) {\n        iVar3 = fcn.0040cdb4();\n        uStack2660 = CONCAT31(uStack2660._1_3_, 1);\n        if (iVar3 == 0) goto code_r0x00450221;\n    }\n    else {\ncode_r0x00450221:\n        uStack2660 = uStack2660 & 0xffffff00;\n    }\n    fcn.004084a6();\n    cVar1 = fcn.0041f885();\n    if (cVar1 != '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0xb4) == 2) {\n        iVar3 = **(arg_8h + 4);\n        fcn.004084a6();\n        fcn.00421943(auStack2624, **(iVar3 + 8));\n        iVar3 = fcn.00423084(auStack2624, 0x5c);\n        if (iVar3 == 0) {\n            fcn.00421943(auStack2624, *(in_ECX + 0xd8));\n            fcn.00421914(auStack2624, 0x49dc88);\n            iVar3 = **(arg_8h + 4);\n            fcn.004084a6();\n            fcn.00421914(auStack2624, **(iVar3 + 8));\n        }\n        iVar3 = *(*(arg_8h + 4) + 4);\n        fcn.004084a6();\n        fcn.00421943(aiStack2106 + 1, **(iVar3 + 8));\n        cVar1 = fcn.00447c0c();\n        if ((cVar1 == '\\0') || (iVar3 = fcn.004218fb(aiStack2106 + 1),  aiStack2106[iVar3] == 0x5c)) {\n            fcn.004084a6();\n            cVar1 = fcn.00446b3f(uStack2660, 0);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n        }\ncode_r0x00450375:\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        return 0;\n    }\n    cVar1 = '\\x01';\n    iVar3 = fcn.00403f9b(*(in_ECX + 200), 1);\n    if ((iVar3 != 0) && (iVar3 = fcn.00403f9b(*(in_ECX + 200), 2),  iVar3 != 0)) {\n        fcn.00407ba9(iVar3, 0);\n        goto code_r0x00450375;\n    }\n    iVar3 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    fcn.0042297d(**(iVar3 + 8), auStack2648, auStack544, &uStack2640, aiStack1592);\n    if ((uStack2640 == 0) && (aiStack1592[0] == 0)) {\n        fcn.00421943(&uStack2640, 0x4b3980);\n        fcn.00421943(aiStack1592, 0x4b3d4c);\n    }\n    fcn.00421943(auStack2120, auStack2648);\n    fcn.00421914(auStack2120, auStack544);\n    fcn.00421914(auStack2120, &uStack2640);\n    fcn.00421914(auStack2120, aiStack1592);\n    fcn.004084a6();\n    fcn.00447334(0x4b3980, auStack2120, auStack1072);\n    cVar2 = fcn.0041dd84();\n    if (((cVar2 == '\\x01') && (cVar1 == '\\x01')) || (cVar2 == '\\0')) {\n        iVar3 = **(arg_8h + 4);\n        fcn.004084a6();\n        iVar3 = fcn.0044c890(**(iVar3 + 8), auStack1072);\n        if (iVar3 == 0) goto code_r0x004504dd;\n        fcn.00407ba9(iVar3, 0);\n    }\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\ncode_r0x004504dd:\n    fcn.00403e39();\n    return 0;\n}\n",
        "token_count": 1217
    },
    "004504f1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004504f1(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint arg_ch_00;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint uStack36;\n    uint uStack28;\n    \n    uVar3 = uStack28;\n    uStack28 = uStack28 & 0xffffff00;\n    if (2 < *(arg_8h + 8)) {\n        uVar2 = fcn.0040cdb4();\n        if ((uVar2 & 1) != 0) {\n            uStack28 = CONCAT31(SUB43(uVar3, 1), 1);\n        }\n        uVar3 = fcn.0040cdb4();\n        if ((uVar3 & 8) != 0) {\n            fcn.0040d3d2();\n            arg_ch_00 = fcn.0042010a(8);\n            uStack36 = fcn.0042010a(0x202);\n            iVar4 = *(*(arg_8h + 4) + 4);\n            fcn.004084a6();\n            fcn.0042297d(**(iVar4 + 8), arg_ch_00, uStack36, 0, 0);\n            fcn.004039e8(arg_ch_00);\n            fcn.004039e8(unaff_EBX);\n            if (((uStack28 != 0) && (cVar1 = fcn.00446f4b(),  cVar1 == '\\0')) &&\n               (cVar1 = fcn.00446d6d(),  cVar1 == '\\0')) {\n                fcn.00412570();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n            }\n            fcn.0042017e(arg_ch_00);\n            fcn.0042017e(unaff_ESI);\n            iVar4 = fcn.0040cdb4();\n            if (iVar4 == 0) {\n                fcn.00405cd3();\n                return 0;\n            }\n            fcn.00405cd3();\n        }\n    }\n    fcn.004084a6();\n    fcn.004084a6();\n    cVar1 = fcn.00446b3f(uStack36, 1);\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 588
    },
    "0045066a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045066a(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_ch_00;\n    char cVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar auStack44 [40];\n    \n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar2 = 4;\n    arg_ch_00 = **(arg_8h + 4);\n    cVar1 = fcn.0040d2c0(4);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0041f0f3(&stack0xffffffd0, arg_ch_00, 0);\n        if (cVar1 != '\\0') {\n            iVar2 = *(**(*(in_ECX + 0x198) + iVar2 * 4) + 4);\n            goto code_r0x00450727;\n        }\n    }\n    else {\n        iVar2 = fcn.0042010a(0x38);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.00405080();\n        }\n        iVar3 = **(arg_8h + 4);\n        fcn.004084a6();\n        cVar1 = fcn.00404bf9(*(iVar3 + 8), 0x2000);\n        if (cVar1 != '\\0') {\ncode_r0x00450727:\n            fcn.00407b6e(0x100);\n            iVar3 = 0;\n            while (cVar1 = fcn.0040a666(auStack44),  cVar1 != '\\0') {\n                fcn.00405b47(&stack0xffffffd0);\n            }\n            if (iVar3 == 0) {\n                fcn.00412570();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                fcn.0044d7e4(2, 0);\n            }\n            else {\n                fcn.00412490(&stack0xffffffc0);\n            }\n            cVar1 = fcn.0040d2c0(4);\n            if (cVar1 != '\\0') {\n                fcn.004050ec();\n                *(iVar2 + 0x2c) = 0;\n                *(iVar2 + 0x30) = 0;\n                fcn.00404592(extraout_ECX_00);\n            }\n            fcn.00407da8();\n            fcn.00405cd3();\n            return 0;\n        }\n        if (iVar2 != 0) {\n            fcn.00404592(extraout_ECX);\n        }\n    }\n    fcn.0044d7e4(1, 0);\n    return 0;\n}\n",
        "token_count": 657
    },
    "004508d9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004508d9(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *unaff_ESI;\n    int32_t *piVar6;\n    int32_t *unaff_EDI;\n    uint var_164ch;\n    uint var_64ch;\n    uint var_444h;\n    uint var_23ch;\n    uint uStackY60;\n    int32_t *piStackY56;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_4h = 0x4508e6;\n    fcn.00430650();\n    iVar1 = arg_8h;\n    piVar6 = *(arg_8h + 8);\n    var_23ch._0_2_ = 0;\n    var_18h = &fcn.004508d9::var_23ch + 2;\n    var_14h = NULL;\n    var_1ch = 0x450912;\n    arg_8h = piVar6;\n    var_ch = unaff_EDI;\n    var_8h = unaff_ESI;\n    fcn.00421970();\n    var_1ch = 0x206;\n    var_444h._0_2_ = 0;\n    var_24h = &fcn.004508d9::var_444h + 2;\n    var_20h = NULL;\n    var_28h = 0x45092d;\n    fcn.00421970();\n    var_10h = 0;\n    uVar5 = 0x200;\n    var_4h = 0;\n    var_14h = 0x450941;\n    (*_sym.imp.ole32.dll_CoInitialize)();\n    var_14h = &fcn.004508d9::var_8h;\n    var_18h = 0x45094b;\n    iVar2 = (*_sym.imp.SHELL32.dll_SHGetMalloc)();\n    if (iVar2 < 0) {\n        var_18h = 0x450955;\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n        var_14h = 0x49dbf0;\n        var_18h = 0x450962;\n        fcn.0040ca8e(0x49dbf0);\n    }\n    if (0x4 < piVar6) {\n        var_18h = 0x450972;\n        var_4h = fcn.0044be63();\n    }\n    if (0x3 < piVar6) {\n        iVar2 = *(*(iVar1 + 4) + 0xc);\n        var_18h = 0x450987;\n        fcn.004084a6();\n        var_18h = **(iVar2 + 8);\n        var_1ch = &fcn.004508d9::var_444h;\n        var_20h = 0x450998;\n        fcn.00421943(var_1ch, var_18h);\n        piVar6 = arg_8h;\n    }\n    if (0x2 < piVar6) {\n        var_18h = 0x4509ad;\n        uVar3 = fcn.0040cdb4();\n        if ((uVar3 & 1) != 0) {\n            uVar5 = 0x40;\n        }\n        var_18h = 0x4509bf;\n        uVar3 = fcn.0040cdb4();\n        if ((uVar3 & 2) != 0) {\n            uVar5 = uVar5 | 0x40;\n        }\n        var_18h = 0x4509d1;\n        uVar3 = fcn.0040cdb4();\n        if ((uVar3 & 4) != 0) {\n            uVar5 = uVar5 | 0x10;\n        }\n    }\n    iVar2 = *(*(iVar1 + 4) + 4);\n    var_18h = 0x4509e5;\n    fcn.004084a6();\n    if (***(iVar2 + 8) == 0) {\n        var_2ch = NULL;\n    }\n    else {\n        var_18h = &fcn.004508d9::arg_8h;\n        var_1ch = 0x4509fb;\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetDesktopFolder)();\n        if (iVar2 == 0) {\n            var_ch = NULL;\n            iVar2 = *(*(iVar1 + 4) + 4);\n            var_18h = 0x450a0f;\n            fcn.004084a6();\n            var_18h = **(iVar2 + 8);\n            var_1ch = &fcn.004508d9::var_64ch;\n            var_20h = 0x450a20;\n            fcn.00421943(var_1ch, var_18h);\n            var_18h = NULL;\n            var_1ch = &fcn.004508d9::var_ch;\n            var_20h = NULL;\n            var_24h = &fcn.004508d9::var_64ch;\n            var_28h = NULL;\n            var_2ch = NULL;\n            var_30h = arg_8h;\n            piStackY56 = 0x450a3c;\n            (**(*arg_8h + 0xc))();\n            piStackY56 = arg_8h;\n            uStackY60 = 0x450a45;\n            (**(*arg_8h + 8))();\n            var_2ch = var_ch;\n        }\n    }\n    var_30h = var_4h;\n    var_28h = &fcn.004508d9::var_23ch;\n    iVar1 = **(iVar1 + 4);\n    var_18h = 0x450a6b;\n    fcn.004084a6();\n    var_18h = **(iVar1 + 8);\n    var_1ch = &fcn.004508d9::var_164ch;\n    var_20h = 0x450a7c;\n    fcn.00421943(var_1ch, var_18h);\n    var_14h = NULL;\n    var_24h = &fcn.004508d9::var_164ch;\n    var_18h = &fcn.004508d9::var_30h;\n    var_1ch = 0x450aa8;\n    var_20h = uVar5;\n    puVar4 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderW)();\n    if (puVar4 == NULL) {\n        var_1ch = NULL;\n        var_20h = 0x1;\n        var_24h = 0x450afb;\n        fcn.0044d7e4(1, 0);\n        var_24h = 0x49dbf0;\n    }\n    else {\n        var_1ch = &fcn.004508d9::var_23ch;\n        var_20h = 0x450abd;\n        fcn.0040ca8e(var_1ch);\n        var_20h = &fcn.004508d9::var_23ch;\n        var_28h = 0x450acb;\n        var_24h = puVar4;\n        (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)();\n        var_2ch = var_8h;\n        var_30h = 0x450ad5;\n        var_28h = puVar4;\n        (**(*var_8h + 0x14))();\n        if (var_23ch == 0) goto code_r0x00450b08;\n        var_24h = &fcn.004508d9::var_23ch;\n    }\n    var_28h = 0x450b08;\n    fcn.0040ca8e(var_24h);\ncode_r0x00450b08:\n    var_28h = var_8h;\n    var_2ch = 0x450b11;\n    (**(*var_8h + 8))();\n    var_2ch = 0x450b17;\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    return 0;\n}\n",
        "token_count": 2098
    },
    "00451244": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00451244(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *piStack124;\n    int32_t iStack116;\n    uchar auStack112 [4];\n    int32_t iStack108;\n    uint uStack100;\n    uint uStack96;\n    uchar auStack92 [8];\n    uchar auStack84 [24];\n    uint32_t uStack60;\n    \n    fcn.0040d3d2();\n    fcn.004084a6();\n    fcn.004478ad();\n    uStack144 = 0x451284;\n    arg_8h_00 = fcn.0042010a(0xfffe);\n    uStack144 = 0x45128f;\n    fcn.00404bce(arg_8h_00);\n    iVar2 = *(*(arg_8h + 4) + 4);\n    uStack144 = 0x45129c;\n    fcn.004084a6();\n    uStack144 = uStack60;\n    uStack148 = 0x7fff;\n    uStack152 = uStack100;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionW)(**(iVar2 + 8));\n    if (iVar2 != 0) {\n        piStack124 = fcn.0042010a(0x14);\n        if (piStack124 == NULL) {\n            piStack124 = NULL;\n        }\n        else {\n            *piStack124 = 0;\n            piStack124[1] = 0;\n            piStack124[2] = 0;\n            piStack124[3] = 0;\n            piStack124[4] = 0;\n        }\n        uStack144._3_1_ = '\\0';\n        *piStack124 = 0;\n        iVar5 = 0;\n        uStack144 = uStack144 & 0xffffff;\n        iVar4 = 0;\n        piVar3 = piStack124;\n        piVar6 = piStack124;\n        if (0 < iVar2) {\n            do {\n                iVar1 = *(iStack116 + iVar4 * 2);\n                if ((iVar1 == 0x3b) && (*piVar3 == iVar4)) {\n                    uStack144._3_1_ = '\\x01';\n                    uStack144 = CONCAT13(1, uStack144);\n                }\n                else if ((iVar1 == 0x3d) && ((piVar3[1] == 0 && (uStack144._3_1_ == '\\0')))) {\n                    piVar3[2] = iVar4 + 1;\n                    piVar3[1] = iVar4;\n                }\n                else if (iVar1 == 0) {\n                    *(iStack116 + iVar4 * 2) = 0xd;\n                    if ((piVar3[2] == 0) || (uStack144._3_1_ != '\\0')) {\n                        piVar3[3] = 0;\n                        piVar3[2] = 0;\n                        piVar3[1] = 0;\ncode_r0x004513b2:\n                        *piVar3 = iVar4 + 1;\n                    }\n                    else {\n                        iVar5 = iVar5 + 1;\n                        piVar3[3] = iVar4;\n                        if (*(iStack116 + 2 + iVar4 * 2) != 0) {\n                            piVar3 = fcn.0042010a(0x14);\n                            if (piVar3 == NULL) {\n                                piVar3 = NULL;\n                            }\n                            else {\n                                *piVar3 = 0;\n                                piVar3[1] = 0;\n                                piVar3[2] = 0;\n                                piVar3[3] = 0;\n                                piVar3[4] = 0;\n                            }\n                            piVar6[4] = piVar3;\n                            piVar6 = piVar3;\n                            goto code_r0x004513b2;\n                        }\n                    }\n                    uStack144._3_1_ = '\\0';\n                    uStack144 = uStack144 & 0xffffff;\n                    if (*(iStack116 + 2 + iVar4 * 2) == 0) break;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar2);\n            if (0 < iVar5) {\n                fcn.00403320(arg_ch, 2);\n                uStack100 = 0;\n                uStack96 = 1;\n                iStack108 = iVar5;\n                fcn.00412320(arg_ch, &stack0xffffff94, 2);\n                fcn.00412570();\n                fcn.0040d3d2();\n                fcn.0040d3d2();\n                piVar3 = piStack124;\n                if (0 < iVar5) {\n                    do {\n                        fcn.0040a2fb(0, 0xffffffff);\n                        fcn.004080ea(piStack124, *piVar3, piVar3[1] - *piVar3);\n                        fcn.00408182(&stack0xffffff90);\n                        fcn.00412320(arg_ch, &stack0xffffffac, 2);\n                        fcn.00412570();\n                        fcn.0040a2fb(0, 0xffffffff);\n                        fcn.004080ea(uStack148, piVar3[2], piVar3[3] - piVar3[2]);\n                        fcn.00408182(&stack0xffffff68);\n                        fcn.00412320(arg_ch, &stack0xffffffa4, 2);\n                        fcn.00412570();\n                        piVar6 = piVar3[4];\n                        fcn.0042017e(piVar3);\n                        iVar5 = iVar5 + -1;\n                        piVar3 = piVar6;\n                    } while (iVar5 != 0);\n                }\n                fcn.00405cd3();\n                fcn.00405cd3();\n                goto code_r0x00451526;\n            }\n        }\n    }\n    fcn.0044d7e4(1, 0);\ncode_r0x00451526:\n    fcn.00404fd2();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1452
    },
    "00451543": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451543(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t *piStack84;\n    int32_t iStack80;\n    int32_t iStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [12];\n    uint uStack44;\n    \n    fcn.0040d3d2();\n    fcn.004084a6();\n    fcn.004478ad();\n    arg_8h_00 = fcn.0042010a(0xfffe);\n    fcn.00404bce(arg_8h_00);\n    *(iStack68 + 2) = 10;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionNamesW)(iStack68, 0x7fff, uStack44);\n    if ((iVar1 == 0) || (*(iStack68 + 2) == 10)) {\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        piStack84 = fcn.0042010a(0xc);\n        iVar5 = 0;\n        if (piStack84 == NULL) {\n            piStack84 = NULL;\n        }\n        else {\n            *piStack84 = 0;\n            piStack84[1] = 0;\n            piStack84[2] = 0;\n        }\n        *piStack84 = 0;\n        iVar7 = 0;\n        iVar4 = 0;\n        if (0 < iVar1) {\n            iVar7 = 0;\n            iVar3 = iStack80;\n            piVar2 = piStack84;\n            iVar6 = iVar1;\n            piVar8 = piStack84;\n            do {\n                if (*(iVar3 + iVar4 * 2) == 0) {\n                    piVar2[1] = iVar4;\n                    iVar7 = iVar7 + 1;\n                    *(iVar3 + iVar4 * 2) = 0xd;\n                    iVar1 = iVar6;\n                    piVar2 = fcn.0042010a(0xc);\n                    if (piVar2 == NULL) {\n                        piVar2 = NULL;\n                    }\n                    else {\n                        *piVar2 = 0;\n                        piVar2[1] = 0;\n                        piVar2[2] = 0;\n                    }\n                    piVar8[2] = piVar2;\n                    *piVar2 = iVar4 + 1;\n                    iVar3 = iStack80;\n                    iVar6 = iVar1;\n                    piVar8 = piVar2;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar1);\n        }\n        piVar2 = piStack84;\n        fcn.00403320(arg_ch, 1);\n        uStack60 = 1;\n        uStack64 = 0;\n        iStack72 = iVar7;\n        fcn.00412320(arg_ch, &iStack72, 1);\n        fcn.00412570();\n        fcn.0040d3d2();\n        if (0 < iVar7) {\n            do {\n                fcn.0040c4cd();\n                fcn.004080ea(iStack80, *piVar2, piVar2[1] - *piVar2);\n                fcn.00408182(&piStack84);\n                iVar5 = iVar5 + 1;\n                fcn.00412320(arg_ch, auStack56, 1);\n                fcn.00412570();\n                piVar8 = piVar2[2];\n                fcn.0042017e(piVar2);\n                piVar2 = piVar8;\n            } while (iVar5 < iVar7);\n        }\n        fcn.00405cd3();\n    }\n    fcn.00404fd2();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 919
    },
    "00451726": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451726(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    bool bVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    bVar4 = false;\n    if (3 < *(arg_8h + 8)) {\n        iVar6 = fcn.0040cdb4();\n        bVar4 = 0 < iVar6;\n    }\n    iVar6 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar6 + 8);\n    uVar2 = *puVar1;\n    piVar3 = puVar1[3];\n    *piVar3 = *piVar3 + 1;\n    fcn.004084a6();\n    fcn.004478ad();\n    arg_8h_00 = fcn.0042010a(0xfffe);\n    fcn.00404bce(arg_8h_00);\n    iVar6 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    iVar6 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionW)(**(iVar6 + 8), var_14h, 0x7fff, uVar2);\n    if (iVar6 != 0) {\n        iVar6 = *(*(arg_8h + 4) + 8);\n        fcn.004084a6();\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionW)(**(iVar6 + 8), &var_ch, 3, uVar2);\n        if ((iVar6 == 0) || (bVar4)) {\n            iVar6 = *(*(arg_8h + 4) + 8);\n            fcn.004084a6();\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileSectionW)(**(iVar6 + 8), var_14h, uVar2);\n            iVar6 = *(*(arg_8h + 4) + 4);\n            fcn.004084a6();\n            pcVar5 = _sym.imp.KERNEL32.dll_WritePrivateProfileStringW;\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(**(iVar6 + 8), 0, 0, uVar2);\n            (*pcVar5)(0, 0, 0, uVar2);\n            fcn.00412570();\n            arg_ch[3] = 1;\n            *arg_ch = 1;\n        }\n        else {\n            fcn.0044d7e4(1, 0);\n        }\n    }\n    fcn.00404fd2();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 702
    },
    "00451bfa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451bfa(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    ushort *puVar4;\n    uint arg_8h_00;\n    uint32_t uVar5;\n    int16_t *unaff_ESI;\n    int32_t **arg_8h_01;\n    int32_t iVar6;\n    int32_t iVar7;\n    ushort *arg_8h_02;\n    uint32_t uStack220;\n    uint uStack212;\n    uint uStack208;\n    uint auStack204 [2];\n    uint uStack196;\n    uint uStack192;\n    uint uStack176;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    int32_t *piStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    int32_t *piStack136;\n    int32_t *piStack112;\n    uint uStack108;\n    int16_t *piStack100;\n    uint uStack96;\n    int16_t *piStack92;\n    uint uStack88;\n    ushort *puStack84;\n    uint uStack80;\n    uint uStack68;\n    uint uStack64;\n    uint32_t uStack60;\n    \n    fcn.0040d3d2();\n    arg_8h_02 = 0x49dbf0;\n    uStack196 = 0;\n    fcn.0040ca8e(0x49dbf0);\n    iVar7 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar7 + 8);\n    uStack192 = *puVar1;\n    uStack144 = puVar1[1];\n    uStack140 = puVar1[2];\n    piStack136 = puVar1[3];\n    *piStack136 = *piStack136 + 1;\n    iVar7 = *(*(arg_8h + 4) + 4);\n    uStack148 = uStack192;\n    fcn.004084a6();\n    puVar1 = *(iVar7 + 8);\n    uStack196 = *puVar1;\n    uStack160 = puVar1[1];\n    uStack156 = puVar1[2];\n    piStack152 = puVar1[3];\n    *piStack152 = *piStack152 + 1;\n    uStack164 = uStack196;\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.004084a6();\n    uVar2 = fcn.00403bcf();\n    fcn.00404bce(uVar2);\n    iVar7 = 0x4b2b04;\n    while (iVar7 = fcn.00423318(uStack176, iVar7),  iVar7 != 0) {\n        fcn.00407e53(iVar7);\n        iVar6 = 0x4b3a70;\n        arg_8h_02 = fcn.00452628(0x4b3a70);\n        uVar5 = fcn.00452628(0x4b3a74);\n        if (((uVar2 == 0xffffffff) || (uVar5 == 0xffffffff)) || (uVar5 < uVar2)) {\n            fcn.0044d7e4(2, 0);\n            goto code_r0x00452003;\n        }\n        fcn.00407b4b(auStack204);\n        fcn.004039e8(0x4b2b04);\n        fcn.00407f40(&uStack212, iVar6 + 1, (uVar5 - iVar6) + -1);\n        fcn.00407b4b(&piStack152);\n        fcn.004039e8(0x4b2b04);\n        uStack176 = 0;\n    }\n    fcn.004039e8(0x4b2b04);\n    uVar2 = 1;\n    if (1 < uStack220) {\n        do {\n            piVar3 = fcn.0040a4f6(uVar2);\n            if (*piVar3 == 0x7c) {\n                puVar4 = fcn.0040a4f6(uVar2);\n                *puVar4 = 0;\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < uStack220);\n    }\n    if (5 < arg_10h) {\n        uStack208 = fcn.0044be63();\n    }\n    arg_8h_00 = fcn.0042010a(0x1fffe);\n    fcn.00404bce(arg_8h_00);\n    if (arg_10h < 5) {\n        *arg_8h_02 = 0;\n    }\n    else {\n        iVar7 = *(*(arg_8h + 4) + 0x10);\n        fcn.004084a6();\n        fcn.00421943(arg_8h_02, **(iVar7 + 8));\n    }\n    arg_8h_01 = &piStack112;\n    fcn.00421970(arg_8h_01, 0, 0x58);\n    uStack108 = uStack212;\n    uStack64 = auStack204[0];\n    piStack112 = 0x58;\n    uStack80 = 0xffff;\n    uStack68 = uStack208;\n    uVar2 = 0x80004;\n    piStack100 = unaff_ESI;\n    puStack84 = arg_8h_02;\n    if (((3 < arg_10h) && (iVar7 = fcn.0040cdb4(),  iVar7 < 0x20)) && (iVar7 = fcn.0040cdb4(),  -1 < iVar7)) {\n        uVar5 = fcn.0040cdb4();\n        if ((uVar5 & 0x10) != 0) {\n            uVar2 = 0x80006;\n        }\n        uVar5 = fcn.0040cdb4();\n        if ((uVar5 & 8) != 0) {\n            uVar2 = uVar2 | 0x2000;\n        }\n        uVar5 = fcn.0040cdb4();\n        if ((uVar5 & 4) != 0) {\n            uVar2 = uVar2 | 0x200;\n        }\n        uVar5 = fcn.0040cdb4();\n        if ((uVar5 & 2) != 0) {\n            uVar2 = uVar2 | 0x800;\n        }\n        uVar5 = fcn.0040cdb4();\n        if ((uVar5 & 1) != 0) {\n            uVar2 = uVar2 | 0x1000;\n        }\n    }\n    uStack60 = uVar2;\n    if (arg_14h == '\\0') {\n        iVar7 = (*_sym.imp.COMDLG32.dll_GetSaveFileNameW)(&piStack112);\n        if (iVar7 == 0) goto code_r0x00451fe9;\n    }\n    else {\n        iVar7 = (*_sym.imp.COMDLG32.dll_GetOpenFileNameW)();\n        if (iVar7 == 0) {\ncode_r0x00451fe9:\n            uStack88 = 0;\n            arg_8h_01 = 0x1;\n            fcn.0044d7e4(1, 0);\n            goto code_r0x00451ffa;\n        }\n        if ((uVar2 & 0x200) != 0) {\n            iVar7 = fcn.004218fb(uStack88);\n            fcn.0040caee(uStack88);\n            while (piStack92 = piStack92 + iVar7 + 1,  *piStack92 != 0) {\n                iVar7 = fcn.004218fb(piStack92);\n                fcn.004039e8(0x4b2b04);\n                uStack88 = uStack96;\n                fcn.004039e8(uStack96);\n                piStack92 = piStack100;\n            }\n            arg_8h_01 = &piStack152;\n            fcn.00407bef(arg_8h_01);\n            fcn.00405cd3();\n            goto code_r0x00451ffa;\n        }\n    }\n    fcn.0040ca8e(arg_8h_01);\ncode_r0x00451ffa:\n    fcn.00404fd2(arg_8h_01, uStack88);\ncode_r0x00452003:\n    fcn.00404fd2();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 2006
    },
    "00452044": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00452044(uint arg_8h, uint32_t dwFileAttributes, uint32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint lpFindFileData;\n    uint lpFileName;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_FindFirstFileW;\n    uVar7 = 0;\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(arg_8h, &lpFindFileData);\n    uVar2 = 0;\n    if (iVar4 != -1) {\n        do {\n            uVar7 = uVar2;\n            iVar5 = fcn.00422203(&lpFileName, 0x49daa0);\n            if ((iVar5 != 0) && (iVar5 = fcn.00422203(&lpFileName, 0x4b3a68),  iVar5 != 0)) {\n                uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(&lpFileName);\n                iVar5 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(&lpFileName, (uVar6 | dwFileAttributes) & ~arg_10h);\n                if (iVar5 == 0) {\n                    uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n                    return uVar6 & 0xffffff00;\n                }\n                uVar7 = 1;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            uVar2 = uVar7;\n        } while (iVar5 != 0);\n    }\n    uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    if (arg_14h != '\\0') {\n        iVar4 = (*pcVar1)(0x4b3a60, &lpFindFileData);\n        pcVar1 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n        if (iVar4 != -1) {\n            do {\n                if ((((lpFindFileData & 0x10) != 0) && (iVar5 = fcn.00422203(&lpFileName, 0x49daa0),  iVar5 != 0)) &&\n                   (iVar5 = fcn.00422203(&lpFileName, 0x4b3a68),  iVar5 != 0)) {\n                    (*pcVar1)(&lpFileName);\n                    cVar3 = fcn.00452044(arg_8h, dwFileAttributes, arg_10h, arg_14h);\n                    if (cVar3 == '\\0') {\n                        uVar7 = 0;\n                        goto code_r0x00452180;\n                    }\n                    (*pcVar1)(0x4b3a68);\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            } while (iVar5 != 0);\n        }\n        uVar7 = 1;\ncode_r0x00452180:\n        uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    }\n    return uVar6 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 767
    },
    "0045219f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0045219f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint lpFindFileData;\n    uint var_22ch;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_FindFirstFileW;\n    uVar7 = 0;\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(arg_8h, &lpFindFileData);\n    uVar2 = 0;\n    if (iVar4 != -1) {\n        do {\n            uVar7 = uVar2;\n            iVar5 = fcn.00422203(&var_22ch, 0x49daa0);\n            if ((iVar5 != 0) && (iVar5 = fcn.00422203(&var_22ch, 0x4b3a68),  iVar5 != 0)) {\n                cVar3 = fcn.00447606(arg_10h);\n                if (cVar3 == '\\0') {\n                    uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n                    return uVar6 & 0xffffff00;\n                }\n                uVar7 = 1;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            uVar2 = uVar7;\n        } while (iVar5 != 0);\n    }\n    uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    if (arg_14h != '\\0') {\n        iVar4 = (*pcVar1)(0x4b3a60, &lpFindFileData);\n        pcVar1 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n        if (iVar4 != -1) {\n            do {\n                if ((((lpFindFileData & 0x10) != 0) && (iVar5 = fcn.00422203(&var_22ch, 0x49daa0),  iVar5 != 0)) &&\n                   (iVar5 = fcn.00422203(&var_22ch, 0x4b3a68),  iVar5 != 0)) {\n                    (*pcVar1)(&var_22ch);\n                    cVar3 = fcn.0045219f(arg_8h, arg_ch, arg_10h, arg_14h);\n                    if (cVar3 == '\\0') {\n                        uVar7 = 0;\n                        goto code_r0x004522c6;\n                    }\n                    (*pcVar1)(0x4b3a68);\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            } while (iVar5 != 0);\n        }\n        uVar7 = 1;\ncode_r0x004522c6:\n        uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    }\n    return uVar6 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 735
    },
    "004522e5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004522e5(int32_t arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t unaff_ESI;\n    ulong uVar6;\n    uint arg_8h_00;\n    int32_t iStack36;\n    uchar auStack32 [28];\n    \n    arg_ch_00 = **(arg_8h + 4);\n    arg_8h_00 = 4;\n    cVar2 = fcn.0040d2c0(4);\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.0041f0f3(auStack32, arg_ch_00, 0);\n        if ((cVar2 == '\\0') || (iVar3 = *(**(*(iStack36 + 0x198) + unaff_ESI * 4) + 4),  (*(iVar3 + 0x28) & 3) == 0))\n        goto code_r0x0045234d;\n    }\n    else {\n        iVar3 = fcn.0042010a(0x38);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.00405080();\n        }\n        iVar1 = **(arg_8h + 4);\n        fcn.004084a6();\n        cVar2 = fcn.00404bf9(*(iVar1 + 8), 1);\n        if (cVar2 == '\\0') {\n            if (iVar3 != 0) {\n                fcn.00404592(extraout_ECX);\n            }\ncode_r0x0045234d:\n            fcn.00412570();\n            arg_ch[3] = 1;\n            *arg_ch = 0;\n            return 0;\n        }\n    }\n    iVar1 = *(*(arg_8h + 4) + 4);\n    cVar2 = fcn.0040d2c0(0xb);\n    if ((cVar2 != '\\0') || ((*(iVar3 + 0x28) & 0x10) != 0)) {\n        fcn.0044be47();\n        uVar6 = fcn.0044be8a();\n        cVar2 = fcn.0044689f(uVar6 >> 0x20, uVar6);\n        if (cVar2 == '\\0') {\n            fcn.00412570();\n            arg_ch[3] = 1;\n            *arg_ch = 0;\n        }\n        goto code_r0x00452476;\n    }\n    fcn.004084a6();\n    iVar1 = *(iVar1 + 8);\n    if (arg_10h == '\\0') {\ncode_r0x004523f6:\n        fcn.004467dc(iVar1);\n    }\n    else {\n        iVar5 = *(iVar1 + 4);\n        if (iVar5 != 0) {\n            piVar4 = fcn.0041db6f(iVar5 + -1);\n            if ((*piVar4 == 0xd) || (piVar4 = fcn.0041db6f(arg_8h_00),  *piVar4 == 10)) goto code_r0x004523f6;\n            iVar5 = *(iVar1 + 4);\n        }\n        fcn.00407b6e(iVar5 + 2);\n        fcn.0040c935(iVar1);\n        fcn.004039e8(0x4b38ec);\n        fcn.004467dc(&stack0xffffffd0);\n        fcn.00405cd3();\n    }\ncode_r0x00452476:\n    cVar2 = fcn.0040d2c0(4);\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    fcn.004050ec();\n    *(iVar3 + 0x2c) = 0;\n    *(iVar3 + 0x30) = 0;\n    fcn.00404592(extraout_ECX_00);\n    return 0;\n}\n",
        "token_count": 960
    },
    "004524a9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.004524a9(uint hFindFile, uint32_t *arg_ch, uint32_t *arg_10h, uint32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint lpFindFileData;\n    int32_t var_25ch;\n    uint32_t var_258h;\n    uint var_24ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint lpFileName;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.0040caee(hFindFile);\n    var_24h = lpFileName;\n    var_20h = var_ch;\n    var_1ch = var_8h;\n    *var_4h = *var_4h + 1;\n    var_18h = var_4h;\n    fcn.004039e8(0x4b3a60);\n    uVar2 = 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n    uVar1 = 1;\n    if (iVar3 != -1) {\n        do {\n            while( true ) {\n                uVar2 = uVar1;\n                iVar4 = fcn.0041e76d();\n                if (iVar4 == 1) {\n                    uVar2 = 0;\n                    goto code_r0x00452608;\n                }\n                if (iVar4 != 0xb) break;\n                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                uVar1 = uVar2;\n            }\n            iVar4 = fcn.00422203(&var_24ch, 0x49daa0);\n            if ((iVar4 != 0) && (iVar4 = fcn.00422203(&var_24ch, 0x4b3a68),  iVar4 != 0)) {\n                fcn.0040c935(&var_24h);\n                fcn.004039e8(&var_24ch);\n                if ((lpFindFileData & 0x10) == 0) {\n                    uVar5 = *arg_ch;\n                    *arg_ch = *arg_ch + var_258h;\n                    arg_ch[1] = arg_ch[1] + var_25ch + CARRY4(uVar5, var_258h);\n                    if (arg_18h != '\\0') {\n                        uVar5 = *arg_10h;\n                        *arg_10h = *arg_10h + 1;\n                        arg_10h[1] = arg_10h[1] + (0xfffffffe < uVar5);\n                    }\n                }\n                else {\n                    if (arg_18h != '\\0') {\n                        uVar5 = *arg_14h;\n                        *arg_14h = *arg_14h + 1;\n                        arg_14h[1] = arg_14h[1] + (0xfffffffe < uVar5);\n                    }\n                    if (arg_1ch != '\\0') {\n                        fcn.004039e8(0x49dc88);\n                        uVar2 = fcn.004524a9(lpFileName, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n                        if (uVar2 == 0) break;\n                    }\n                }\n            }\n            iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, &lpFindFileData);\n            uVar1 = uVar2;\n        } while (iVar4 != 0);\n    }\ncode_r0x00452608:\n    (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n    fcn.00405cd3();\n    uVar5 = fcn.00405cd3();\n    return uVar5 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 933
    },
    "0045267a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0045267a(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    bVar3 = arg_1ch != 0x7fffffff;\n    if (arg_14h < 0) {\n        arg_14h = fcn.004218fb(arg_8h);\n    }\n    var_4h = 0;\n    if (((arg_14h == 0) || (iVar1 = in_ECX[1],  iVar1 == 0)) || (arg_10h == 0)) {\n        arg_18h = in_ECX[1];\n    }\n    else {\n        if (arg_10h < 1) {\n            arg_10h = -arg_10h;\n            if ((arg_18h < 0) || (iVar1 <= arg_18h)) {\n                arg_18h = iVar1 - arg_14h;\n            }\n            else {\n                arg_18h = arg_18h + (1 - arg_14h);\n            }\n            if (arg_18h < 0) {\n                return iVar1;\n            }\n            if (arg_1ch < 0) {\n                arg_1ch = arg_18h + 1;\n            }\n            if (arg_18h + 1 < arg_1ch) {\n                arg_1ch = arg_18h + 1;\n            }\n            arg_1ch = arg_18h - arg_1ch;\n            for (; arg_1ch < arg_18h; arg_18h = arg_18h + iVar1) {\n                if (arg_10h <= var_4h) {\n                    return arg_18h;\n                }\n                if (arg_ch == 1) {\n                    iVar1 = fcn.0040b96c(arg_14h);\n                }\n                else {\n                    iVar1 = fcn.0041dfd2(*in_ECX + arg_18h * 2, arg_14h, arg_8h, arg_14h, arg_ch);\n                }\n                if (iVar1 == 0) {\n                    var_4h = var_4h + 1;\n                    if (var_4h == arg_10h) break;\n                    iVar1 = -arg_14h;\n                }\n                else {\n                    iVar1 = -1;\n                }\n            }\n        }\n        else {\n            if (arg_18h < 0) {\n                arg_18h = 0;\n            }\n            if (iVar1 <= arg_18h) {\n                return iVar1;\n            }\n            if (arg_1ch < 0) {\n                arg_1ch = iVar1 - arg_18h;\n            }\n            if (iVar1 - arg_18h < arg_1ch) {\n                arg_1ch = iVar1 - arg_18h;\n            }\n            iVar1 = arg_18h - arg_14h;\n            while (arg_18h < iVar1 + 1 + arg_1ch) {\n                if (arg_10h <= var_4h) {\n                    return arg_18h;\n                }\n                if (arg_ch == 1) {\n                    iVar2 = fcn.0040b96c(arg_14h);\n                }\n                else {\n                    iVar2 = fcn.0041dfd2(*in_ECX + arg_18h * 2, arg_14h, arg_8h, arg_14h, arg_ch);\n                }\n                if (iVar2 == 0) {\n                    var_4h = var_4h + 1;\n                    if (var_4h == arg_10h) {\n                        return arg_18h;\n                    }\n                    arg_18h = arg_18h + arg_14h;\n                }\n                else {\n                    arg_18h = arg_18h + 1;\n                }\n            }\n        }\n        if ((var_4h < arg_10h) && (arg_18h = var_4h,  bVar3)) {\n            arg_18h = in_ECX[1];\n        }\n    }\n    return arg_18h;\n}\n",
        "token_count": 974
    },
    "00453bc5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453bc5(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_10h;\n    char cVar1;\n    uint *puVar2;\n    uint8_t *paccel;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint8_t *puVar4;\n    uchar *arg_18h;\n    uchar *arg_1ch;\n    uint uStack44;\n    uchar auStack40 [4];\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t *piStack20;\n    \n    uStack36 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uStack36 = fcn.0044be63();\n    }\n    arg_10h = uStack36;\n    cVar1 = fcn.0040d2c0(5);\n    if (cVar1 == '\\0') {\n        fcn.0046daaa(0, 0, arg_10h);\n    }\n    else {\n        puVar2 = fcn.0040218e(1);\n        paccel = fcn.0042010a(-(ZEXT48(puVar2) * 6 >> 0x20 != 0) | ZEXT48(puVar2) * 6);\n        puVar4 = paccel;\n        if (0 < puVar2) {\n            do {\n                iVar3 = fcn.004114a0(**(arg_8h + 4), 1, 2);\n                fcn.004084a6();\n                puVar2 = *(iVar3 + 8);\n                uStack32 = *puVar2;\n                uStack28 = puVar2[1];\n                uStack24 = puVar2[2];\n                piStack20 = puVar2[3];\n                *piStack20 = *piStack20 + 1;\n                fcn.004114a0(**(arg_8h + 4), 1, 2);\n                uStack36 = fcn.0040cdb4();\n                arg_1ch = &stack0xffffffcb;\n                arg_18h = &stack0xffffffca;\n                puVar2 = &uStack32;\n                cVar1 = fcn.0041da5a(puVar2, auStack40, &stack0xffffffc8, &stack0xffffffc9, arg_18h, arg_1ch);\n                if (cVar1 == '\\0') {\n                    fcn.0042017e(paccel);\n                    fcn.00412570();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                    fcn.00405cd3();\n                    return 0;\n                }\n                *puVar4 = 1;\n                if (arg_18h != '\\0') {\n                    *puVar4 = 5;\n                }\n                if (arg_18h >> 8 != '\\0') {\n                    *puVar4 = *puVar4 | 8;\n                }\n                if (arg_18h >> 0x10 != '\\0') {\n                    *puVar4 = *puVar4 | 0x10;\n                }\n                *(puVar4 + 2) = unaff_EDI;\n                *(puVar4 + 4) = unaff_ESI;\n                fcn.00405cd3();\n                puVar4 = puVar4 + 6;\n            } while (arg_1ch + 1 < puVar2);\n        }\n        fcn.0046daaa(paccel, puVar2, uStack44);\n        fcn.0042017e(paccel);\n    }\n    return 0;\n}\n",
        "token_count": 819
    },
    "0045409b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045409b(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = 0;\n    if (*(arg_8h + 8) != 0) {\n        arg_8h_00 = fcn.0044be63();\n    }\n    if (*0x4c1830 == 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        fcn.0041aaff(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "004542c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004542c4(uint arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h, uint *arg_1ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint *extraout_ECX;\n    uint *noname_4;\n    int32_t unaff_EBX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *arg_10h_00;\n    char cVar6;\n    uint *apuStack60 [2];\n    uint uStack52;\n    uint uStack48;\n    uint auStack44 [2];\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    puVar5 = *0x4c1444;\n    apuStack60[0] = *0x4c1444;\n    if ((*0x4c1444 != 0x1) && (*0x4c10c5 == '\\0')) {\n        uVar3 = 0;\n        *0x4c1444 = NULL;\n        puVar2 = fcn.0041cf79(arg_8h);\n        if (puVar2[5] < 5) {\n            auStack44[0] = 0;\n            uStack36 = 0;\n            uStack32 = 1;\n            apuStack60[0] = NULL;\n            uStack52 = 0;\n            uStack48 = 1;\n            uStack28 = 0x49dc40;\n            uStack24 = 0;\n            uStack20 = 0;\n            uStack16 = 0;\n            noname_4 = puVar2;\n            if (0 < puVar2[5]) {\n                iVar4 = 0;\n                do {\n                    if (iVar4 == 0) {\n                        fcn.00412570();\n                        apuStack60[0] = arg_10h;\ncode_r0x00454393:\n                        uStack48 = 7;\n                    }\n                    else {\n                        if (iVar4 != 1) {\n                            if (iVar4 == 2) {\n                                fcn.00412570();\n                                apuStack60[0] = arg_18h;\n                            }\n                            else {\n                                if (iVar4 != 3) goto code_r0x0045439f;\n                                fcn.00412570();\n                                apuStack60[0] = arg_1ch;\n                            }\n                            goto code_r0x00454393;\n                        }\n                        fcn.00412570();\n                        uStack48 = 1;\n                        apuStack60[0] = arg_14h;\n                    }\ncode_r0x0045439f:\n                    fcn.0041baef(apuStack60);\n                    iVar4 = iVar4 + 1;\n                    noname_4 = extraout_ECX;\n                    puVar5 = puVar2;\n                } while (iVar4 < *(unaff_EBX + 0x14));\n            }\n            arg_10h_00 = auStack44;\n            cVar1 = fcn.00456a38(arg_8h, &uStack28, arg_10h_00, 0, noname_4, &stack0xffffffbb);\n            cVar6 = arg_10h_00 >> 0x18;\n            if ((cVar1 != '\\0') && (*0x4c1444 != 0x1)) {\n                *0x4c1444 = puVar5;\n                cVar1 = fcn.0040d2c0(4);\n                if (cVar1 != '\\0') {\n                    fcn.004084a6();\n                    iVar4 = fcn.00421bc7(*puVar2, 0x4b3d6c);\n                    if (iVar4 == 0) {\n                        uVar3 = 2;\n                        goto code_r0x00454423;\n                    }\n                }\n                if (cVar6 == '\\0') {\n                    fcn.004404c9();\n                    fcn.00412570();\n                    fcn.00412570();\n                    return 0;\n                }\n                uVar3 = fcn.0040cdb4();\n                *arg_ch = uVar3;\n                uVar3 = 1;\n            }\ncode_r0x00454423:\n            fcn.004404c9();\n            fcn.00412570();\n            fcn.00412570();\n            return uVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1011
    },
    "0045497b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045497b(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint arg_8h_01;\n    uint *arg_ch_00;\n    uint *arg_10h_00;\n    \n    if (arg_ch != '\\0') {\n        uVar1 = fcn.00454a41(arg_8h, arg_10h);\n        return uVar1;\n    }\n    iVar3 = in_ECX[0x15];\n    iVar2 = (*_sym.imp.WININET.dll_InternetConnectW)\n                      (in_ECX[1], *(arg_8h + 0x10), *(arg_8h + 0x78), *(arg_8h + 0x20), *(arg_8h + 0x30), \n                       *(arg_8h + 0x70), 0, 0);\n    *in_ECX = iVar2;\n    if (iVar2 == 0) {\n        uVar1 = fcn.004556a9(0x15, 0xdeadbeef, 0);\n        return uVar1;\n    }\n    arg_8h_00 = (*_sym.imp.WININET.dll_FtpOpenFileW)(iVar2, *(arg_8h + 0x60), 0x80000000, iVar3);\n    if (arg_8h_00 == NULL) {\n        arg_ch_00 = 0xdeadbeef;\n        arg_8h_01 = 0x16;\n        arg_10h_00 = arg_8h_00;\n    }\n    else {\n        arg_10h_00 = &arg_ch;\n        arg_ch_00 = arg_8h_00;\n        iVar3 = (*_sym.imp.WININET.dll_FtpGetFileSize)();\n        in_ECX[4] = iVar3;\n        in_ECX[5] = arg_ch;\n        if (arg_10h != '\\0') {\n            uVar1 = fcn.0045550c(arg_8h_00);\n            goto code_r0x00454a2b;\n        }\n        arg_8h_01 = 0;\n    }\n    uVar1 = fcn.004556a9(arg_8h_01, arg_ch_00, arg_10h_00);\ncode_r0x00454a2b:\n    uVar4 = uVar1;\n    if (arg_8h_00 != NULL) {\n        uVar4 = (*_sym.imp.WININET.dll_InternetCloseHandle)(arg_8h_00);\n    }\n    return uVar4 & 0xffffff00 | uVar1 & 0xff;\n}\n",
        "token_count": 642
    },
    "00454c23": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00454c23(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    ulong uVar5;\n    uint arg_8h_00;\n    uint *arg_ch_00;\n    int32_t iVar6;\n    uint var_24h;\n    ushort var_6h;\n    uint32_t var_4h;\n    \n    iVar6 = arg_8h;\n    uVar4 = in_ECX[0x15];\n    if (*(arg_8h + 0x74) == 4) {\n        uVar4 = uVar4 | 0x800000;\n    }\n    var_4h = uVar4;\n    iVar1 = (*_sym.imp.WININET.dll_InternetConnectW)\n                      (in_ECX[1], *(arg_8h + 0x10), *(arg_8h + 0x78), *(arg_8h + 0x20), *(arg_8h + 0x30), \n                       *(arg_8h + 0x70), 0, 0);\n    *in_ECX = iVar1;\n    if (iVar1 == 0) {\n        uVar4 = fcn.004556a9(0xb, 0xdeadbeef, 0);\n        return uVar4;\n    }\n    iVar1 = (*_sym.imp.WININET.dll_HttpOpenRequestW)(iVar1, 0, *(iVar6 + 0x60), 0, 0, 0, uVar4, 0);\n    if (iVar1 == 0) {\n        arg_8h_00 = 0xc;\n        iVar6 = iVar1;\ncode_r0x00454d57:\n        arg_ch_00 = 0xdeadbeef;\n    }\n    else {\n        if (arg_ch != '\\0') {\n            fcn.00455703(iVar1, iVar6);\n        }\n        if ((var_4h & 0x1000) != 0) {\n            arg_8h = 4;\n            (*_sym.imp.WININET.dll_InternetQueryOptionW)(iVar1, 0x1f, &arg_ch, &arg_8h);\n            arg_ch = arg_ch | 0x100;\n            (*_sym.imp.WININET.dll_InternetSetOptionW)(iVar1, 0x1f, &arg_ch, 4);\n        }\n        iVar6 = 0;\n        iVar2 = (*_sym.imp.WININET.dll_HttpSendRequestW)(iVar1, 0, 0, 0);\n        if ((iVar2 == 0) || (iVar2 = fcn.00454be4(iVar1),  iVar2 != 200)) {\n            iVar6 = 0;\n            arg_8h_00 = 0xd;\n            goto code_r0x00454d57;\n        }\n        arg_ch_00 = &arg_ch;\n        arg_ch = 0;\n        arg_8h = 0x20;\n        (*_sym.imp.WININET.dll_HttpQueryInfoW)(iVar1, 5, &var_24h, &arg_8h);\n        var_6h = 0;\n        uVar5 = fcn.0042224a(&var_24h);\n        in_ECX[4] = uVar5;\n        in_ECX[5] = uVar5 >> 0x20;\n        if (arg_10h != '\\0') {\n            uVar4 = fcn.0045550c(iVar1);\n            goto code_r0x00454d5e;\n        }\n        arg_8h_00 = 0;\n    }\n    uVar4 = fcn.004556a9(arg_8h_00, arg_ch_00, iVar6);\ncode_r0x00454d5e:\n    uVar3 = uVar4;\n    if (iVar1 != 0) {\n        uVar3 = (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar1);\n    }\n    return uVar3 & 0xffffff00 | uVar4 & 0xff;\n}\n",
        "token_count": 946
    },
    "00454d88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454d88(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = **(arg_8h + 4);\n    cVar2 = fcn.0041d5f6(0x29);\n    if ((cVar2 == '\\0') && (fcn.004084a6(),  *(*(iVar1 + 8) + 4) != 0)) {\n        iVar1 = **(arg_8h + 4);\n        fcn.004084a6();\n        fcn.0040c935(*(iVar1 + 8));\n        return 0;\n    }\n    fcn.00407e53(L\"AutoIt\");\n    return 0;\n}\n",
        "token_count": 168
    },
    "00454f9e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454f9e(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint *puVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    if (*(arg_8h + 8) == 0) {\n        iVar7 = 0;\n        while (cVar4 = fcn.00402e2a(0),  cVar4 != '\\0') {\n            cVar4 = fcn.004559c0(0);\n            if (cVar4 == '\\0') {\n                iVar7 = iVar7 + 1;\n            }\n            fcn.00468b5a(&var_8h);\n        }\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = iVar7;\n        return 0;\n    }\n    iVar7 = fcn.0040cdb4();\n    var_4h = *(in_ECX + 4);\n    while ((piVar3 = var_4h,  cVar4 = fcn.00402e2a(0),  cVar4 != '\\0' && (*(*piVar3 + 0xd8) != iVar7))) {\n        fcn.00468b5a(&var_8h);\n    }\n    cVar4 = fcn.00402e2a(0);\n    if (cVar4 == '\\0') {\n        uVar9 = 1;\ncode_r0x00455213:\n        fcn.0044d7e4(uVar9, 0);\n        fcn.0040ca8e(0x49dbf0);\n        return 0;\n    }\n    if (*(arg_8h + 8) < 2) {\n        iVar7 = -1;\n    }\n    else {\n        iVar7 = fcn.0040cdb4();\n    }\n    if (iVar7 == -1) {\n        fcn.00403320(arg_ch, 1);\n        uVar9 = *(*piVar3 + 8);\n        uVar1 = *(*piVar3 + 0xc);\n        puVar6 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar6[3] = 2;\n        *puVar6 = uVar9;\n        puVar6[1] = uVar1;\n        uVar9 = *(*piVar3 + 0x10);\n        uVar2 = *(*piVar3 + 0x14);\n        puVar6 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar6[3] = 2;\n        *puVar6 = uVar9;\n        puVar6[1] = uVar2;\n        uVar5 = fcn.004559c0(0);\n        uVar2 = uVar2 & 0xffffff00;\n        arg_8h = uVar2 | uVar5;\n        fcn.004114a0(arg_ch, 0, 1);\n        fcn.0041e387(arg_8h);\n        uVar5 = fcn.00455484();\n        arg_8h = uVar2 | uVar5;\n        fcn.004114a0(arg_ch, 0, 1);\n        fcn.0041e387(arg_8h);\n        uVar9 = *(*piVar3 + 0x18);\n        puVar6 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar6[3] = 1;\n        *puVar6 = uVar9;\n        iVar7 = *(*piVar3 + 0x1c);\n        arg_ch = fcn.004114a0(arg_ch, 0, 1);\ncode_r0x004551ac:\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = iVar7;\n    }\n    else {\n        if (iVar7 == 0) {\n            iVar7 = *(*piVar3 + 8);\n            iVar8 = *(*piVar3 + 0xc);\n        }\n        else {\n            if (iVar7 != 1) {\n                if (iVar7 == 2) {\n                    uVar5 = fcn.004559c0(0);\ncode_r0x004551d5:\n                    arg_8h = arg_8h & 0xffffff00 | uVar5;\n                    fcn.0041e387(arg_8h);\n                    return 0;\n                }\n                if (iVar7 == 3) {\n                    uVar5 = fcn.00455484();\n                    goto code_r0x004551d5;\n                }\n                if (iVar7 == 4) {\n                    iVar7 = *(*piVar3 + 0x18);\n                }\n                else {\n                    if (iVar7 != 5) {\n                        uVar9 = 2;\n                        goto code_r0x00455213;\n                    }\n                    iVar7 = *(*piVar3 + 0x1c);\n                }\n                goto code_r0x004551ac;\n            }\n            iVar7 = *(*piVar3 + 0x10);\n            iVar8 = *(*piVar3 + 0x14);\n        }\n        fcn.00412570();\n        arg_ch[3] = 2;\n        *arg_ch = iVar7;\n        arg_ch[1] = iVar8;\n    }\n    return 0;\n}\n",
        "token_count": 1271
    },
    "004552fd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004552fd(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uchar *arg_8h_01;\n    int32_t iVar2;\n    uint uStack356;\n    int32_t iStack352;\n    \n    if (*(arg_8h + 8) < 2) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.0040cdb4();\n    }\n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    arg_8h_00 = **(iVar2 + 8);\n    iVar2 = in_ECX + 0x10;\n    fcn.004546b0(iVar2);\n    fcn.004545cf(arg_8h_00, 0x49dbf0, uVar1, 0, iVar2);\n    fcn.004558e3(1);\n    if (iStack352 == 0) {\n        fcn.004548e8(arg_ch);\n        arg_8h_01 = &stack0xfffffe74;\n        uVar1 = extraout_ECX;\n        fcn.004556da(arg_8h_01);\n        fcn.00412570(arg_8h_01, uVar1);\n    }\n    else {\n        fcn.0044d7e4(iStack352, 0);\n        fcn.00407ba9(uStack356, 0);\n        fcn.0040ca8e(0x49dbf0);\n    }\n    fcn.004547d7();\n    return 0;\n}\n",
        "token_count": 386
    },
    "004553f6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004553f6(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    char16_t *pcVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 1) {\n        iVar1 = *(in_ECX + 0x8c);\n    }\n    else {\n        iVar1 = *(in_ECX + 0x58);\n    }\n    puVar3 = in_ECX + 0xb0;\n    if (arg_8h != 1) {\n        puVar3 = in_ECX + 0x7c;\n    }\n    if (iVar1 == 1) {\n        pcVar6 = NULL;\n        uVar5 = 0;\n        uVar4 = 1;\n    }\n    else if (iVar1 == 2) {\n        pcVar6 = L\"<local>\";\n        uVar5 = *puVar3;\n        uVar4 = 3;\n    }\n    else {\n        pcVar6 = NULL;\n        uVar5 = 0;\n        uVar4 = 0;\n    }\n    uVar2 = (*_sym.imp.WININET.dll_InternetOpenW)(*(in_ECX + 0xc0), uVar4, uVar5, pcVar6, 0);\n    *(in_ECX + 4) = uVar2;\n    if (uVar2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (*(in_ECX + 0xdc) != '\\0') {\n            var_8h = 1;\n            var_4h = 0;\n            uVar2 = (*_sym.imp.WININET.dll_InternetSetOptionW)(0, 0x32, &var_8h, 8);\n        }\n        uVar2 = uVar2 & 0xffffff00 | 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 460
    },
    "0045550c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045560a)\n\nuint32_t __cdecl fcn.0045550c(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    uint var_404h;\n    uint uStack60;\n    uint uStack56;\n    uint uVar7;\n    uint arg_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*(in_ECX + 0x30) == '\\0') {\n        iVar5 = fcn.00424129(*(in_ECX + 0x34), 0x4b3984);\n        if (iVar5 == 0) {\n            uVar4 = 0x1f;\n            iVar2 = iVar5;\ncode_r0x004555bd:\n            uVar7 = 0xdeadbeef;\n        }\n        else {\n            var_4h = 1;\n            do {\n                iVar2 = (*_sym.imp.WININET.dll_InternetReadFile)\n                                  (arg_8h, &fcn.0045550c::var_404h, 0x400, &fcn.0045550c::var_4h);\n                if (iVar2 == 0) {\n                    iVar2 = 0;\n                    uVar4 = 0x20;\n                    goto code_r0x004555bd;\n                }\n                if (var_4h == 0) break;\n                fcn.0042373e(&fcn.0045550c::var_404h, var_4h, 1, iVar5);\n                puVar1 = in_ECX + 8;\n                uVar6 = *puVar1;\n                *puVar1 = *puVar1 + var_4h;\n                *(in_ECX + 0xc) = *(in_ECX + 0xc) + CARRY4(uVar6, var_4h);\n            } while (var_4h != 0);\n            if ((*(in_ECX + 8) | *(in_ECX + 0xc)) == 0) {\n                iVar2 = 0;\n                uVar7 = 0xdeadbeef;\n                uVar4 = 0x21;\n            }\n            else {\n                iVar2 = 1;\n                uVar7 = 0;\n                uVar4 = 0;\n            }\n        }\n        uVar3 = fcn.004556a9(uVar4, uVar7, iVar2);\n        uVar6 = uVar3;\n        if (iVar5 != 0) {\n            uVar6 = fcn.00424274(iVar5);\n        }\n        return uVar6 & 0xffffff00 | uVar3 & 0xff;\n    }\n    var_4h = 1;\n    (*_sym.imp.WININET.dll_InternetQueryDataAvailable)();\n    do {\n        if (var_4h == 0) {\ncode_r0x0045565d:\n            if ((*(in_ECX + 8) | *(in_ECX + 0xc)) == 0) {\n                arg_10h = 0;\n                uVar7 = 0xdeadbeef;\n                uVar4 = 0x21;\n            }\n            else {\n                arg_10h = 1;\n                uVar7 = 0;\n                uVar4 = 0;\n            }\ncode_r0x00455684:\n            uStack56 = 0x45568b;\n            uVar6 = fcn.004556a9(uVar4, uVar7, arg_10h);\n            return uVar6;\n        }\n        uVar4 = fcn.004548d9();\n        uStack56 = arg_8h;\n        uStack60 = 0x45562f;\n        iVar5 = (*_sym.imp.WININET.dll_InternetReadFile)();\n        if (iVar5 == 0) {\n            fcn.0042017e();\n            arg_10h = 0;\n            uVar7 = 0xdeadbeef;\n            uVar4 = 0x20;\n            goto code_r0x00455684;\n        }\n        if (var_4h == 0) {\n            fcn.0042017e();\n            goto code_r0x0045565d;\n        }\n        fcn.0045595a(uVar4, var_4h);\n        puVar1 = in_ECX + 8;\n        uVar6 = *puVar1;\n        *puVar1 = *puVar1 + var_4h;\n        *(in_ECX + 0xc) = *(in_ECX + 0xc) + CARRY4(uVar6, var_4h);\n    } while( true );\n}\n",
        "token_count": 1070
    },
    "00455692": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00455692(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetEvent)(*param_1);\n        return iVar1 != 0;\n    }\n    return false;\n}\n",
        "token_count": 72
    },
    "004558e3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004558e3(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0xd0) == '\\0') || (arg_8h == '\\0')) {\n        uVar1 = fcn.00454b20(arg_8h);\n    }\n    else {\n        fcn.0045494e();\n        fcn.00424b5d(fcn.004559b1, 0, in_ECX);\n        uVar1 = *(in_ECX + 0x18) == 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 148
    },
    "004559c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004559c0(uint dwMilliseconds)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    bool bVar2;\n    \n    if (*in_ECX == 0) {\n        bVar2 = false;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*in_ECX, dwMilliseconds);\n        bVar2 = iVar1 == 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 107
    },
    "00455a92": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455a92(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        if (uVar1 < 8) {\n            uVar1 = 8;\n        }\n        *(in_ECX + 0xc) = uVar1;\n        uVar2 = fcn.0042010a(-(uVar1 * 4 >> 0x20 != 0) | uVar1 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.0041faa0(uVar2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0042017e(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar2;\n    }\n    puVar3 = fcn.0042010a(8);\n    if (puVar3 == NULL) {\n        puVar3 = NULL;\n    }\n    else {\n        *puVar3 = *arg_8h;\n        puVar3[1] = arg_8h[1];\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar3;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 376
    },
    "00456b19": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456b19(int32_t arg_8h, uint *arg_ch, uint hWnd)\n\n{\n    uint lpRect;\n    uint var_ch;\n    \n    if (arg_8h == 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        *arg_ch = lpRect;\n        arg_ch[1] = var_ch;\n    }\n    else {\n        *arg_ch = 0;\n        arg_ch[1] = 0;\n        if (arg_8h == 2) {\n            (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00456c64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456c64(int32_t arg_8h, int32_t **arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    int32_t *unaff_EBX;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    uint uStack60;\n    uint uStack56;\n    int32_t *piStack52;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    int32_t *piStack32;\n    uchar auStack28 [24];\n    \n    piVar5 = NULL;\n    if (*(in_ECX + 0x480) != 0) {\n        if (*(arg_8h + 8) == 0) {\n            *(**(in_ECX + 0x47c) + 0x11) = 1;\n        }\n        else {\n            iVar1 = **(arg_8h + 4);\n            cVar3 = fcn.0040d2c0(0xe);\n            if (cVar3 == '\\0') {\n                fcn.004084a6();\n                puVar4 = *(iVar1 + 8);\n                uStack44 = *puVar4;\n                uStack40 = puVar4[1];\n                uStack36 = puVar4[2];\n                piStack32 = puVar4[3];\n                *piStack32 = *piStack32 + 1;\n                puVar4 = &uStack44;\n            }\n            else {\n                puVar4 = fcn.0044afce(auStack28);\n            }\n            uVar2 = *puVar4;\n            uStack60 = puVar4[1];\n            uStack56 = puVar4[2];\n            piStack52 = puVar4[3];\n            *piStack52 = *piStack52 + 1;\n            if (cVar3 == '\\0') {\n                fcn.00405cd3();\n            }\n            else {\n                fcn.00405cd3();\n            }\n            fcn.0040b8a7();\n            (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar2, uStack60);\n            piVar5 = *(in_ECX + 0x478);\n            piVar6 = piVar5;\n            while (cVar3 = fcn.00402e2a(0),  cVar3 != '\\0') {\n                cVar3 = fcn.00405b2a();\n                if (cVar3 != '\\0') {\n                    *(*piVar6 + 0x11) = 1;\n                    break;\n                }\n                piVar6 = unaff_EBX;\n                fcn.00468b5a(&uStack60);\n                unaff_EBX = piVar6;\n            }\n            fcn.00405cd3();\n        }\n        piVar6 = *(in_ECX + 0x478);\n        while (cVar3 = fcn.00402e2a(0),  cVar3 != '\\0') {\n            if (*(*piVar6 + 0x11) == '\\0') {\n                piVar5 = piVar5 + 1;\n            }\n            piVar6 = unaff_EBX;\n            fcn.00468b5a(&uStack60);\n            unaff_EBX = piVar6;\n        }\n    }\n    fcn.00412570();\n    *arg_ch = piVar5;\n    arg_ch[3] = 0x1;\n    return 0;\n}\n",
        "token_count": 784
    },
    "00457c26": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457c26(int32_t arg_8h, uint *arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint arg_10h;\n    int32_t iVar4;\n    uint uStack32;\n    uint uStack28;\n    uint32_t uStack24;\n    uint auStack16 [3];\n    \n    uStack28 = *(arg_8h + 8);\n    (*_sym.imp.USER32.dll_GetCursorPos)(auStack16);\n    uStack32 = auStack16[0];\n    iVar4 = 1;\n    bVar1 = false;\n    fcn.004084a6();\n    iVar3 = fcn.00447d1c();\n    if (iVar3 == 0) {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    if (uStack24 != 2) {\n        if (1 < uStack24) {\n            cVar2 = fcn.0041d5f6(0x29);\n            if (cVar2 == '\\0') {\n                uStack32 = fcn.0040cdb4();\n            }\n            uStack28 = *(*(arg_8h + 4) + 8);\n            cVar2 = fcn.0041d5f6(0x29);\n            if (cVar2 == '\\0') {\n                iVar4 = fcn.0040cdb4();\n            }\n            cVar2 = fcn.0041d5f6(0x29);\n            if ((cVar2 == '\\0') || (cVar2 = fcn.0041d5f6(0x29),  cVar2 == '\\0')) {\n                bVar1 = true;\n            }\n        }\n        if ((3 < uStack24) && (iVar4 = fcn.0040cdb4(),  iVar4 < 1)) {\n            return 0;\n        }\n        if (uStack24 < 5) {\n            arg_10h = 0xffffffff;\n        }\n        else {\n            arg_10h = fcn.0040cdb4();\n        }\n        if (bVar1) {\n            fcn.00459fec(uStack28, uStack32, arg_10h, 1);\n        }\n        if (0 < iVar4) {\n            do {\n                fcn.004084a6();\n                fcn.00447dd5();\n                fcn.00448355();\n                fcn.004084a6();\n                fcn.00447e01();\n                fcn.00448355();\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        return 0;\n    }\n    fcn.00412570();\n    arg_ch[3] = 1;\n    *arg_ch = 0;\n    fcn.0044d7e4(5, 0);\n    return 0;\n}\n",
        "token_count": 658
    },
    "00458065": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458065(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint hWnd;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_8h);\n    hWnd = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    fcn.00456b19(*(in_ECX + 0x104), &var_10h, hWnd);\n    var_8h = var_8h - var_10h;\n    var_4h = var_4h - var_ch;\n    if (*(arg_8h + 8) == 0) {\n        fcn.00403320(arg_ch, 1);\n        var_18h = 0;\n        var_20h = var_8h;\n        var_14h = 1;\n        fcn.00412320(arg_ch, &var_20h, 1);\n        fcn.00412570();\n        var_18h = 0;\n        var_20h = var_4h;\n        var_14h = 1;\n        fcn.00412320(arg_ch, &var_20h, 1);\n        fcn.00412570();\n    }\n    else {\n        cVar1 = fcn.0040d16a();\n        if (cVar1 == '\\0') {\n            fcn.0044d7e4(1, 0);\n        }\n        else {\n            iVar2 = fcn.0040cdb4();\n            iVar3 = var_8h;\n            if (iVar2 == 0) {\n                fcn.00412570();\n                arg_ch[3] = 1;\n            }\n            else {\n                iVar2 = fcn.0040cdb4();\n                iVar3 = var_4h;\n                if (iVar2 != 1) {\n                    return 0;\n                }\n                fcn.00412570();\n                arg_ch[3] = 1;\n            }\n            *arg_ch = iVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 526
    },
    "00458a77": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00458a77(int32_t arg_8h, uint *arg_ch)\n\n{\n    bool bVar1;\n    uint *arg_8h_00;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint arg_ch_00;\n    uint arg_8h_01;\n    int32_t *piVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    char var_2h;\n    uint var_1h;\n    \n    arg_8h_00 = arg_ch;\n    var_4ch = fcn.0040cdb4();\n    var_48h = fcn.0040cdb4();\n    iVar3 = fcn.0040cdb4();\n    var_44h = iVar3;\n    var_40h = fcn.0040cdb4();\n    var_14h = var_40h;\n    if (7 < *(arg_8h + 8)) {\n        uVar4 = fcn.0044be63();\n        iVar5 = (*_sym.imp.USER32.dll_IsWindow)(uVar4);\n        if (iVar5 != 0) {\n            uVar4 = fcn.0044be63();\n            goto code_r0x00458af4;\n        }\n    }\n    uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x00458af4:\n    fcn.00456b19(*(in_ECX + 0x108), &var_3ch, uVar4);\n    if ((*(arg_8h + 8) < 7) || (iVar5 = fcn.0040cdb4(),  iVar5 < 2)) {\n        var_8h = 1;\n    }\n    else {\n        var_8h = fcn.0040cdb4();\n    }\n    if (*(arg_8h + 8) < 6) {\n        arg_ch_00 = 0;\n    }\n    else {\n        arg_ch_00 = fcn.0040cdb4();\n    }\n    arg_8h_01 = fcn.0040cdb4();\n    fcn.004569ba(arg_8h_01, arg_ch_00);\n    var_1h._0_1_ = iVar3 < var_4ch;\n    var_2h = var_14h < var_48h;\n    var_18h = fcn.00422626(var_14h - var_48h);\n    var_18h = var_18h + 1;\n    iVar3 = fcn.00422626(iVar3 - var_4ch);\n    iVar3 = iVar3 + 1;\n    bVar1 = false;\n    var_28h = iVar3;\n    var_14h = fcn.0045a268(uVar4, &var_4ch, &var_24h);\n    if (var_14h != 0) {\n        var_24h = -var_8h;\n        arg_ch = NULL;\n        var_ch = var_40h;\n        iVar5 = var_8h;\n        do {\n            if (var_18h <= arg_ch) break;\n            iVar7 = iVar3 * 4 * arg_ch;\n            var_1ch = iVar3 * 4 + iVar7;\n            iVar8 = iVar7;\n            var_20h = iVar7;\n            iVar3 = var_28h;\n            for (; (var_28h = iVar3,  var_10h = iVar7,  !bVar1 && (iVar7 < var_1ch)); iVar7 = iVar7 + var_8h * 4) {\n                cVar2 = fcn.00459f79(var_14h + iVar7);\n                if (cVar2 != '\\0') {\n                    bVar1 = true;\n                    fcn.00403320(arg_8h_00, 1);\n                    iVar3 = (iVar7 - iVar8) / 4;\n                    if (var_1h == '\\0') {\n                        iVar3 = var_4ch + iVar3;\n                    }\n                    else {\n                        iVar3 = var_44h - iVar3;\n                    }\n                    iVar3 = iVar3 - var_3ch;\n                    piVar6 = fcn.004114a0(arg_8h_00, 0, 1);\n                    fcn.00412570();\n                    piVar6[3] = 1;\n                    *piVar6 = iVar3;\n                    iVar3 = var_ch;\n                    if (var_2h == '\\0') {\n                        iVar3 = arg_ch + var_48h;\n                    }\n                    iVar3 = iVar3 - var_38h;\n                    piVar6 = fcn.004114a0(arg_8h_00, 0, 1);\n                    fcn.00412570();\n                    *piVar6 = iVar3;\n                    piVar6[3] = 1;\n                    iVar7 = var_10h;\n                    iVar8 = var_20h;\n                }\n                iVar5 = var_8h;\n                iVar3 = var_28h;\n            }\n            var_ch = var_ch + var_24h;\n            arg_ch = arg_ch + iVar5;\n        } while (!bVar1);\n        fcn.0042017e(var_14h);\n        if (bVar1) {\n            return 0;\n        }\n    }\n    fcn.00412570();\n    *arg_8h_00 = 0;\n    arg_8h_00[3] = 1;\n    fcn.0044d7e4(1, 0);\n    return 0;\n}\n",
        "token_count": 1417
    },
    "00458d31": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458d31(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar1 = *(arg_8h + 8);\n    if (*0x4c10d0 != 0) {\n        iVar2 = fcn.0040cdb4();\n        if ((-1 < iVar2) && (iVar2 = fcn.0040cdb4(),  iVar2 < 0x65)) {\n            uVar3 = fcn.0040cdb4(0);\n            (*_sym.imp.USER32.dll_SendMessageW)(*0x4c10d0, 0x402, uVar3);\n        }\n        if (1 < uVar1) {\n            iVar2 = *(*(arg_8h + 4) + 4);\n            fcn.004084a6();\n            if (***(iVar2 + 8) != 0) {\n                iVar2 = *(*(arg_8h + 4) + 4);\n                fcn.004084a6();\n                (*_sym.imp.USER32.dll_SendMessageW)(*0x4c10c8, 0xc, 0, **(iVar2 + 8));\n            }\n            if (2 < uVar1) {\n                iVar2 = *(*(arg_8h + 4) + 8);\n                fcn.004084a6();\n                (*_sym.imp.USER32.dll_SendMessageW)(*0x4c10cc, 0xc, 0, **(iVar2 + 8));\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 360
    },
    "00459a66": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459a66(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    int32_t unaff_EDI;\n    uchar *arg_ch_00;\n    uint uVar6;\n    int32_t arg_8h_00;\n    uint *arg_ch_01;\n    int32_t iVar7;\n    ushort uStack342;\n    ushort uStack340;\n    ushort uStack338;\n    uint uStack324;\n    uchar auStack320 [4];\n    uint uStack316;\n    uint uStack312;\n    ushort uStack308;\n    uint uStack306;\n    uint uStack302;\n    uint uStack298;\n    ushort uStack294;\n    uint uStack276;\n    int32_t iStack272;\n    \n    fcn.0040cdb4();\n    iVar7 = 0x49dbf0;\n    fcn.0040ca8e(0x49dbf0);\n    iVar1 = fcn.004114a0(**(arg_8h + 4), 1, 1);\n    if (iVar1 == 0) {\ncode_r0x00459aae:\n        arg_ch_01 = NULL;\n        uVar6 = 0xffffffff;\ncode_r0x00459ab2:\n        fcn.0044d7e4(uVar6, arg_ch_01);\n        return 0;\n    }\n    iVar1 = fcn.0040cdb4();\n    if (iVar1 != 0x2b594d1) {\n        arg_ch_01 = NULL;\n        uVar6 = 0xfffffffe;\n        goto code_r0x00459ab2;\n    }\n    fcn.004114a0(**(arg_8h + 4), 1, 1);\n    iVar1 = fcn.0040cdb4();\n    uStack308 = 0;\n    uStack306 = 0;\n    uStack302 = 0;\n    uStack298 = 0;\n    uStack294 = 0;\n    uStack340 = 0x10;\n    uStack338 = 0;\n    if (iVar1 == -1) goto code_r0x00459aae;\n    arg_ch_01 = &uStack316;\n    arg_8h_00 = 0;\n    uStack316 = 0;\n    uStack312 = 100000;\n    uStack276 = 1;\n    iStack272 = iVar1;\n    iVar2 = (*_sym.imp.WSOCK32.dll_select)(0, &uStack276, 0);\n    if (iVar2 == -1) {\n        uVar6 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n        goto code_r0x00459ab2;\n    }\n    uVar6 = fcn.0042010a(iVar7 + 1);\n    fcn.00404bce(uVar6);\n    iVar2 = (*_sym.imp.WSOCK32.dll___WSAFDIsSet)(iVar1, &uStack302 + 2);\n    if (iVar2 == 0) {\n        arg_ch_00 = NULL;\n        uVar6 = 0xffffffff;\n    }\n    else {\n        arg_ch_00 = &stack0xfffffe8c;\n        iVar1 = (*_sym.imp.WSOCK32.dll_recvfrom)(iVar1, arg_8h_00, iVar7, 0, &uStack340);\n        if (iVar1 != -1) {\n            if (*(arg_8h + 8) < 3) {\ncode_r0x00459ca2:\n                *(arg_8h_00 + iVar1) = 0;\n                iVar7 = fcn.004223f0(arg_8h_00);\n                if (iVar7 == iVar1) {\n                    fcn.00407b6e(iVar1);\n                    fcn.0043e0f5(arg_8h_00);\n                    fcn.0040c610(auStack320, &stack0xfffffe98);\n                    fcn.00405cd3();\n                    fcn.00407bef(&stack0xfffffe90);\n                    fcn.00405cd3();\n                    goto code_r0x00459d2a;\n                }\n            }\n            else {\n                uVar3 = fcn.0040cdb4();\n                uVar4 = fcn.0040cdb4();\n                if ((uVar4 & 2) != 0) {\n                    fcn.00403320(arg_ch, 1);\n                    fcn.004114a0(arg_ch, 0, 1);\n                    uVar6 = (*_sym.imp.WSOCK32.dll_inet_ntoa)(uStack324);\n                    fcn.0043e0f5(uVar6);\n                    uVar6 = fcn.0045ae5a(auStack320);\n                    fcn.00407bef(uVar6);\n                    fcn.00405cd3();\n                    puVar5 = fcn.004114a0(arg_ch, 0, 1);\n                    uVar4 = (*_sym.imp.WSOCK32.dll_ntohs)(CONCAT22(uStack340, uStack342));\n                    fcn.00412570();\n                    puVar5[3] = 1;\n                    *puVar5 = uVar4 & 0xffff;\n                    fcn.004114a0(arg_ch, 0, 1);\n                    arg_8h_00 = unaff_EDI;\n                    fcn.00405cd3();\n                }\n                if ((uVar3 & 1) == 0) goto code_r0x00459ca2;\n            }\n            iVar7 = iVar1;\n            uVar6 = fcn.0044ad14(iVar1);\n            fcn.0041faa0(uVar6, iVar1, arg_8h_00, iVar7);\n            goto code_r0x00459d2a;\n        }\n        uVar6 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n    }\n    fcn.0044d7e4(uVar6, arg_ch_00);\ncode_r0x00459d2a:\n    fcn.00404fd2();\n    return 0;\n}\n",
        "token_count": 1384
    },
    "00459fec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459fec(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    fcn.00456b19(*(in_ECX + 0x104), &iStack40, uVar2);\n    arg_8h = arg_8h + iStack52;\n    uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&iStack36);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar2);\n    if (arg_10h == 0) {\n        (*_sym.imp.USER32.dll_mouse_event)\n                  (0x8001, ((arg_8h + 1) * 0x10000) / iStack36 + -1, ((arg_ch + iStack48 + 1) * 0x10000) / iStack32 + -1\n                   , 0, 0);\n        if (arg_14h != '\\0') {\n            fcn.00448355();\n        }\n    }\n    else {\n        if ((arg_10h < 1) || (100 < arg_10h)) {\n            arg_10h = 10;\n        }\n        (*_sym.imp.USER32.dll_GetCursorPos)(&iStack52);\n        iVar3 = (unaff_EBX * 0xffff) / (iStack40 + -1) + 1;\n        iVar4 = (iStack52 * 0xffff) / (iStack36 + -1) + 1;\n        while( true ) {\n            cVar1 = fcn.00448190(arg_10h, 0x20, &stack0xffffffbc, &stack0xffffffb8);\n            if (cVar1 == '\\0') break;\n            (*_sym.imp.USER32.dll_mouse_event)(0x8001, iVar3, iVar4, 0, 0);\n            fcn.00448355();\n        }\n    }\n    return;\n}\n",
        "token_count": 531
    },
    "0045a750": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a750(int32_t *lpPictDesc, uint32_t lParam, int32_t *nWidth)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint nEscapement;\n    uint var_34h;\n    uint32_t nHeight;\n    int32_t lpRect;\n    int32_t cy;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t dwStyle;\n    int32_t lpNumberOfBytesRead;\n    \n    pcVar1 = _sym.imp.GDI32.dll_DeleteObject;\n    var_18h = -1;\n    var_1ch = -1;\n    uVar10 = 0x50000001;\n    var_ch = 500;\n    lpNumberOfBytesRead = 400;\n    nHeight = 0;\n    var_14h = 0x50000001;\n    dwStyle = 0x88c00000;\n    var_10h = 8;\n    if (*0x4c10dc != 0) {\n        if (*0x4c10e0 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(*0x4c10e0);\n            *0x4c10e0 = 0;\n        }\n        if (*0x4c10d8 != 0) {\n            (*pcVar1)(*0x4c10d8);\n            *0x4c10d8 = 0;\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0x4c10dc);\n        *0x4c10dc = 0;\n    }\n    if (nWidth == 0x2) {\n        return 0;\n    }\n    uVar4 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&lpRect);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar4);\n    uVar6 = lParam;\n    piVar2 = lpPictDesc;\n    if ((2 < lParam) && (iVar5 = fcn.0040cdb4(),  iVar5 != -1)) {\n        var_ch = fcn.0040cdb4();\n    }\n    if ((3 < uVar6) && (iVar5 = fcn.0040cdb4(),  iVar5 != -1)) {\n        lpNumberOfBytesRead = fcn.0040cdb4();\n    }\n    if (4 < uVar6) {\n        var_18h = fcn.0040cdb4();\n    }\n    if (5 < uVar6) {\n        var_1ch = fcn.0040cdb4();\n    }\n    if ((6 < uVar6) && (iVar5 = fcn.0040cdb4(),  iVar5 != -1)) {\n        nHeight = fcn.0040cdb4();\n        if (nWidth == 0x1) {\n            if ((nHeight & 8) == 0) {\n                cVar3 = '\\0';\n            }\n            else {\n                cVar3 = '\\x02';\n                var_14h = 0x50000002;\n            }\n            uVar10 = var_14h;\n            if ((nHeight & 4) != 0) {\n                uVar10 = (cVar3 | 0xa0000001U) >> 1;\n                var_14h = uVar10;\n            }\n        }\n        var_10h = ~-((nHeight & 2) != 0) & var_10h;\n        if ((nHeight & 1) == 0) {\n            uVar6 = 0x88c00000;\n        }\n        else {\n            uVar6 = 0x88800000;\n            dwStyle = 0x88800000;\n        }\n        if ((nHeight & 0x10) != 0) {\n            dwStyle = uVar6 ^ 0x8000000;\n        }\n    }\n    uVar6 = var_10h;\n    if (var_18h == -1) {\n        var_18h = (var_24h - var_ch) / 2;\n    }\n    if (var_1ch == -1) {\n        var_1ch = (var_20h - lpNumberOfBytesRead) / 2;\n    }\n    (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, 0, var_ch, lpNumberOfBytesRead);\n    (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&lpRect, dwStyle, 0, uVar6);\n    iVar5 = *piVar2[1];\n    fcn.004084a6();\n    pcVar1 = _sym.imp.USER32.dll_CreateWindowExW;\n    *0x4c10dc = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (var_10h, 0x49daa8, **(iVar5 + 8), dwStyle, var_18h, var_1ch, var_24h - lpRect, var_20h - cy, \n                           *0x4c10e8, 0, 0, 0);\n    (*_sym.imp.USER32.dll_GetClientRect)(*0x4c10dc, &lpRect);\n    if (nWidth == NULL) {\n        nWidth = NULL;\n        nHeight = (*pcVar1)(0, 0x4b184c, 0, 0x5000000e, 0, 0, var_24h - lpRect, var_20h - cy, *0x4c10dc, 0, 0, 0);\n        iVar5 = *(piVar2[1] + 4);\n        fcn.004084a6();\n        iVar5 = (*_sym.imp.KERNEL32.dll_CreateFileW)(**(iVar5 + 8), 0x80000000, 0, 0, 3, 0, 0);\n        if (iVar5 == -1) {\n            return 0;\n        }\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar5, 0);\n        uVar7 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, uVar4);\n        uVar8 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar7);\n        iVar9 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar5, uVar8, uVar4, &lpNumberOfBytesRead, 0);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar7);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar5);\n        if (iVar9 == 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar7);\n            return 0;\n        }\n        (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(uVar7, 1, &lpPictDesc);\n        (*_sym.imp.OLEAUT32.dll_OleCreatePictureIndirect)(lpPictDesc, 0, 0, 0x48d9bc, &nWidth);\n        (**(*lpPictDesc + 8))(lpPictDesc);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar7);\n        if (nWidth == NULL) {\n            return 0;\n        }\n        (**(*nWidth + 0xc))(nWidth, &lParam);\n        lParam = (*_sym.imp.USER32.dll_CopyImage)(lParam, 0, 0, 0, 0x2000);\n        (**(*nWidth + 8))(nWidth);\n        uVar10 = nHeight;\n        (*_sym.imp.USER32.dll_SendMessageW)(nHeight, 0x172, 0, lParam);\n        *0x4c10d8 = lParam;\n        (*_sym.imp.USER32.dll_SetWindowPos)(uVar10, 0, 0, 0, var_24h - lpRect, var_20h - cy, 0x20);\n    }\n    else {\n        lpNumberOfBytesRead = (var_20h - cy) + -0x16;\n        nWidth = (var_24h - lpRect) + -0x16;\n        iVar5 = *(piVar2[1] + 4);\n        fcn.004084a6();\n        uVar10 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                           (0, 0x4b184c, **(iVar5 + 8), uVar10, 0xb, 0xb, nWidth, lpNumberOfBytesRead, *0x4c10dc, 0, 0, \n                            0);\n        dwStyle = uVar10;\n        uVar4 = (*_sym.imp.GDI32.dll_CreateDCW)(L\"DISPLAY\", 0, 0, 0);\n        uVar7 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar4, uVar7);\n        (*_sym.imp.GDI32.dll_GetTextFaceW)(uVar4, 0x40, &nEscapement);\n        var_ch = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar4, 0x5a);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar4);\n        if (7 < lParam) {\n            iVar5 = *(piVar2[1] + 0x1c);\n            fcn.004084a6();\n            iVar5 = fcn.004218fb(**(iVar5 + 8));\n            if (iVar5 != 0) {\n                iVar5 = *(piVar2[1] + 0x1c);\n                fcn.004084a6();\n                fcn.00421943(&nEscapement, **(iVar5 + 8));\n            }\n        }\n        if ((lParam < 9) || (iVar5 = fcn.0040cdb4(),  iVar5 < 6)) {\n            iVar5 = 0xc;\n        }\n        else {\n            iVar5 = fcn.0040cdb4();\n        }\n        if (((lParam < 10) || (iVar9 = fcn.0040cdb4(),  iVar9 < 0)) || (iVar9 = fcn.0040cdb4(),  1000 < iVar9)) {\n            uVar4 = 400;\n        }\n        else {\n            uVar4 = fcn.0040cdb4();\n        }\n        *0x4c10e0 = (*_sym.imp.GDI32.dll_CreateFontW)\n                              ((var_ch * iVar5) / -0x48, 0, 0, 0, uVar4, 0, 0, 0, 1, 4, 0, 2, 0, &nEscapement);\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar10, 0x30, *0x4c10e0, 1);\n        if ((nHeight & 0x20) != 0) {\n            uVar4 = (*_sym.imp.USER32.dll_GetDC)(uVar10);\n            uVar7 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, *0x4c10e0);\n            fcn.004084a6();\n            fcn.00447a28(&var_34h);\n            (*_sym.imp.GDI32.dll_SelectObject)(uVar4, uVar7);\n            uVar10 = dwStyle;\n            (*_sym.imp.USER32.dll_ReleaseDC)(dwStyle, uVar4);\n            (*_sym.imp.USER32.dll_MoveWindow)\n                      (uVar10, 0xb, (lpNumberOfBytesRead - nHeight) / 2 + 0xb, nWidth, nHeight, 1);\n        }\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(*0x4c10dc, 4);\n    return 0;\n}\n",
        "token_count": 2701
    },
    "0045adca": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045adca(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_ECX;\n    \n    if (arg_8h == 0) {\n        fcn.0044646d();\n    }\n    else {\n        uVar2 = fcn.004223f0(arg_8h);\n        in_ECX[1] = uVar2;\n        cVar1 = fcn.00408176();\n        if (cVar1 == '\\0') {\n            fcn.0041f33f(uVar2);\n        }\n        else {\n            *in_ECX[3] = *in_ECX[3] + -1;\n            fcn.0040a6f8();\n            uVar2 = fcn.00403d82(in_ECX[1] + 1);\n            in_ECX[2] = uVar2;\n            uVar2 = fcn.0042010a(uVar2);\n            *in_ECX = uVar2;\n        }\n        fcn.0041faa0(*in_ECX, arg_8h, in_ECX[1] + 1);\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "0045b250": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045b250(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint32_t pdwRegister;\n    uint uVar4;\n    char16_t *arg_10h;\n    int32_t *arg_ch_00;\n    uint uStack84;\n    int32_t *piStack80;\n    int32_t iStack76;\n    uint uStack68;\n    uint32_t uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar auStack44 [16];\n    uchar auStack28 [24];\n    \n    cVar1 = unaff_EBX >> 0x18;\n    iVar3 = **(arg_8h + 4);\n    fcn.004084a6();\n    uStack68 = **(iVar3 + 8);\n    iVar3 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    uStack64 = **(iVar3 + 8);\n    uStack60 = 0;\n    piStack80 = CONCAT13(1, piStack80._0_3_);\n    iVar3 = (*_sym.imp.ole32.dll_CoInitialize)(0);\n    if (iVar3 == 1) {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    iStack76 = 0;\n    if (3 < *(arg_8h + 8)) {\n        cVar1 = fcn.0041d5f6(0x29);\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.0041e3ee();\n        }\n        else {\n            cVar1 = '\\x01';\n        }\n    }\n    iVar3 = fcn.0043a857(0);\n    if (iVar3 < 0) {\n        arg_ch_00 = fcn.0044be63();\n        if (arg_ch_00 == NULL) {\n            arg_10h = L\"NULL Pointer assignment\";\n            uVar4 = 3;\n            goto code_r0x0045b316;\n        }\n        cVar2 = fcn.0044be14();\n        if (cVar2 != '\\0') {\n            (**(*arg_ch_00 + 4))(arg_ch_00);\n        }\ncode_r0x0045b366:\n        if (uStack84._3_1_ == '\\0') {\ncode_r0x0045b3dc:\n            piStack80 = arg_ch_00;\n            pdwRegister = uStack64;\n            if (2 < *(arg_8h + 8)) {\n                iVar3 = *(*(arg_8h + 4) + 8);\n                cVar2 = fcn.0041d5f6(0x29);\n                if (cVar2 == '\\0') {\n                    fcn.004084a6();\n                    pdwRegister = **(iVar3 + 8);\n                }\n                else {\n                    pdwRegister = 0;\n                }\n            }\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&uStack60);\n            uStack56 = 0;\n            uStack52 = 0;\n            uStack64 = uStack64 & 0xffff0000 | 9;\n            uVar4 = uStack84;\n            if (pdwRegister != 0) {\n                iVar3 = fcn.0042010a(0x28);\n                if (iVar3 == 0) {\n                    uStack56 = 0;\n                    uVar4 = uStack56;\n                }\n                else {\n                    uVar4 = fcn.0044157b(uStack84, pdwRegister, cVar1 != '\\0');\n                }\n            }\n            uStack56 = uVar4;\n            fcn.0044a6f6(&uStack64);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack68);\n            return 0;\n        }\n        iVar3 = (*_sym.imp.ole32.dll_IIDFromString)(uStack68, auStack28);\n        if (iVar3 < 0) {\n            if (iStack76 != 0) {\n                (**(*arg_ch_00 + 8))(arg_ch_00);\n            }\n            arg_ch_00 = NULL;\n            arg_10h = L\"Invalid parameter\";\n            uVar4 = 2;\n            goto code_r0x0045b316;\n        }\n        piStack80 = NULL;\n        iVar3 = (***arg_ch_00)(arg_ch_00, auStack28, &piStack80);\n        if (-1 < iVar3) {\n            (**(*arg_ch_00 + 8))(arg_ch_00);\n            arg_ch_00 = piStack80;\n            goto code_r0x0045b3dc;\n        }\n        if (iStack76 != 0) {\n            (**(*arg_ch_00 + 8))(arg_ch_00);\n        }\n    }\n    else {\n        piStack80 = NULL;\n        iVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)(auStack44, 0, 0x17, 0x48d8fc, &piStack80);\n        arg_ch_00 = piStack80;\n        if (-1 < iVar3) {\n            fcn.0043ae84();\n            iStack76 = 1;\n            goto code_r0x0045b366;\n        }\n    }\n    arg_ch_00 = NULL;\n    arg_10h = L\"Failed to create object\";\n    uVar4 = 1;\ncode_r0x0045b316:\n    uVar4 = fcn.0045c235(uVar4, arg_ch_00, arg_10h, arg_ch_00);\n    return uVar4;\n}\n",
        "token_count": 1288
    },
    "0045b482": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045b482(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t in_ECX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint uVar5;\n    int32_t iVar6;\n    uchar *arg_ch_00;\n    uint uVar7;\n    uint uStack84;\n    int32_t *piStack76;\n    uint32_t uStack72;\n    int32_t *piStack68;\n    ushort auStack64 [2];\n    uchar auStack60 [4];\n    int32_t *piStack56;\n    int32_t *piStack52;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    uchar auStack40 [36];\n    \n    uVar5 = 0;\n    uVar7 = 0x49dbf0;\n    fcn.0040ca8e(0x49dbf0);\n    arg_ch_00 = auStack60;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    auStack64[0] = 9;\n    piStack56 = NULL;\n    piStack52 = NULL;\n    iVar6 = **(arg_8h + 4);\n    cVar2 = fcn.0044be14();\n    if (cVar2 != '\\0') {\n        if (*(arg_8h + 8) < 2) {\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = fcn.0042010a(0x50);\n            if (iVar6 == 0) {\n                piVar3 = NULL;\n            }\n            else {\n                if (*(arg_8h + 8) < 3) {\n                    uStack84 = 0;\n                }\n                else {\n                    iVar6 = *(*(arg_8h + 4) + 8);\n                    fcn.004084a6();\n                    uStack84 = **(iVar6 + 8);\n                }\n                iVar6 = *(*(arg_8h + 4) + 4);\n                fcn.004084a6();\n                piVar3 = fcn.004403e0(**(arg_8h + 4), *(iVar6 + 8), uStack84, in_ECX, in_ECX + 0x188);\n            }\n            iVar6 = piVar3[1];\n            if (-1 < iVar6) {\ncode_r0x0045b728:\n                piStack56 = piVar3;\n                fcn.0044a6f6(auStack64);\n                goto code_r0x0045b735;\n            }\n            (**(*piVar3 + 8))(piVar3);\n            unaff_EDI = 0;\n            uVar7 = 0;\n            arg_ch_00 = NULL;\n        }\n        uVar5 = fcn.0045c235(iVar6, arg_ch_00, uVar7, unaff_EDI);\n        goto code_r0x0045b735;\n    }\n    fcn.004084a6();\n    puVar1 = *(iVar6 + 8);\n    uVar7 = *puVar1;\n    piStack76 = puVar1[1];\n    uStack72 = puVar1[2];\n    piStack68 = puVar1[3];\n    *piStack68 = *piStack68 + 1;\n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar7, piStack76);\n    cVar2 = fcn.0043d614();\n    if (cVar2 == '\\0') {\n        if (*(arg_8h + 8) != 1) {\n            cVar2 = fcn.0040d2c0(*(*(arg_8h + 4) + 4));\n            if (cVar2 == '\\0') {\n                fcn.004084a6();\n                ppiVar4 = *(unaff_ESI + 8);\n                piStack56 = *ppiVar4;\n                piStack52 = ppiVar4[1];\n                piStack48 = ppiVar4[2];\n                piStack44 = ppiVar4[3];\n                *piStack44 = *piStack44 + 1;\n                ppiVar4 = &piStack56;\n            }\n            else {\n                ppiVar4 = fcn.0044afce(auStack40);\n            }\n            iVar6 = fcn.0041cf79(ppiVar4);\n            uStack72 = -iVar6 & 0xffffff00U | 1 - (iVar6 != 0);\n            if ((piStack76 & 2) != 0) {\n                piStack76 = piStack76 & 0xfffffffd;\n                fcn.00405cd3();\n            }\n            if ((piStack76 & 1) != 0) {\n                fcn.00405cd3();\n            }\n            if (uStack72 == '\\0') {\n                uVar7 = 0x30;\n                uStack72 = fcn.0042010a(0x30);\n                if (uStack72 == 0) {\n                    uStack72 = 0;\n                }\n                else {\n                    uVar7 = *(*(arg_8h + 4) + 4);\n                    fcn.004113a0(uVar7);\n                    uVar7 = fcn.0044001d(in_ECX + 0x178, uVar7);\n                }\n                fcn.0045d0a1(&uStack72);\n                piStack48 = piStack76;\n                fcn.00405cd3(uVar7);\n                piVar3 = piStack56;\n                goto code_r0x0045b728;\n            }\n            goto code_r0x0045b6ac;\n        }\n        if (*(in_ECX + 0x180) != 0) {\n            fcn.0040d89e(**(*(in_ECX + 0x17c) + -4 + *(in_ECX + 0x180) * 4) + 8);\n        }\n    }\n    else {\ncode_r0x0045b6ac:\n        uVar5 = fcn.0045c235(1, 0, L\"Incorrect Parameter format\", 0);\n    }\n    fcn.00405cd3();\ncode_r0x0045b735:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&piStack68);\n    return uVar5;\n}\n",
        "token_count": 1452
    },
    "0045bae6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bae6(int32_t *arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint *puVar9;\n    uint var_2a0h;\n    uint var_94h;\n    uint32_t var_44h;\n    int32_t *var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    fcn.0040ca8e(0x49dbf0);\n    piVar6 = arg_8h;\n    cVar2 = fcn.0044be14();\n    if (cVar2 == '\\0') {\n        fcn.0044d7e4(1, 0);\n        return 0;\n    }\n    var_1ch = 1;\n    if ((1 < piVar6[2]) && ((var_1ch = fcn.0040cdb4(),  var_1ch < 1 || (7 < var_1ch)))) {\ncode_r0x0045bcf3:\n        fcn.0044d7e4(1, 0);\n        return 0;\n    }\n    iVar4 = var_1ch;\n    piVar6 = *piVar6[1];\n    if (piVar6[3] == 8) {\n        iVar5 = *piVar6;\n    }\n    else {\n        iVar5 = 0;\n    }\n    piVar6 = *(iVar5 + 8);\n    if (var_1ch == 5) {\n        var_30h = 0;\n        var_28h = 0;\n        cVar2 = fcn.0045bf43();\n        if (cVar2 == '\\0') {\n            fcn.0044d7e4(1, 0);\n        }\n        else {\n            pcVar3 = fcn.0045aede(6, **piVar6, &arg_8h);\n            (*pcVar3)();\n            (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(arg_8h, &var_2a0h, 0x104);\n            fcn.0040ca8e(&var_2a0h);\n        }\n        if (var_30h == 0) {\n            return 0;\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(var_30h);\n        return 0;\n    }\n    if (var_1ch == 7) {\n        iVar4 = (**(*piVar6 + 0x10))(piVar6, 0, 0x800, &arg_8h);\n        if ((iVar4 != 0) || (arg_8h == NULL)) goto code_r0x0045bcf3;\n        (**(*arg_8h + 0xc))(arg_8h, &var_4h);\n        var_34h = *var_4h;\n        var_30h = var_4h[1];\n        iStack48 = var_4h[2];\n        var_28h = var_4h[3];\n        (**(*arg_8h + 0x4c))(arg_8h, var_4h);\n        (*_sym.imp.ole32.dll_StringFromGUID2)(&var_34h, &var_94h, 0x28);\n        fcn.0040ca8e(&var_94h);\n        piVar6 = arg_8h;\n        goto code_r0x0045bf38;\n    }\n    var_8h = NULL;\n    iVar5 = (***piVar6)(piVar6, 0x48d98c, &var_40h);\n    if (iVar5 < 0) {\n        iVar5 = (**(*piVar6 + 0x10))(piVar6, 0, 0x800, &var_8h);\n    }\n    else {\n        iVar5 = (**(*var_40h + 0xc))(var_40h);\n        (**(*var_40h + 8))(var_40h);\n        iVar4 = var_1ch;\n    }\n    if ((iVar5 < 0) || (var_8h == NULL)) goto code_r0x0045bcf3;\n    if (iVar4 == 1) {\n        puVar9 = NULL;\n        puVar8 = &arg_8h;\n    }\n    else {\n        if (iVar4 != 2) {\n            iVar5 = (**(*var_8h + 0x48))(var_8h, &arg_8h, &var_20h);\n            if (iVar5 != 0) {\n                (**(*var_8h + 8))(var_8h);\n                goto code_r0x0045bcf3;\n            }\n            if (iVar4 == 4) {\n                (**(*arg_8h + 0x1c))(arg_8h, &var_4h);\n                iVar4 = (*_sym.imp.OLEAUT32.dll_LHashValOfNameSys)\n                                  (var_4h, *(var_4h + 6), *(var_4h + 0x1a), var_4h[4], &var_10h);\n                (**(*arg_8h + 0x30))(arg_8h, var_4h);\n                if (iVar4 == 0) {\n                    fcn.0040ca8e(var_10h);\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_10h);\n                }\n            }\n            else {\n                (**(*arg_8h + 0x14))(arg_8h, var_20h, &var_14h);\n                if (var_14h != 5) {\n                    var_44h = (**(*arg_8h + 0xc))(arg_8h);\n                    var_ch = NULL;\n                    uVar7 = 0;\n                    if (var_44h != 0) {\n                        bVar1 = false;\n                        do {\n                            iVar4 = var_1ch;\n                            if (bVar1) break;\n                            var_14h = 0;\n                            (**(*arg_8h + 0x14))(arg_8h, uVar7, &var_14h);\n                            if (var_14h == 5) {\n                                (**(*arg_8h + 0x10))(arg_8h, uVar7, &var_18h);\n                                (**(*var_18h + 0xc))(var_18h, &var_3ch);\n                                var_ch = *(var_3ch + 0x30);\n                                (**(*var_18h + 0x4c))(var_18h, var_3ch);\n                                var_24h = -1;\n                                var_10h = NULL;\n                                if (var_ch != NULL) {\n                                    do {\n                                        iVar4 = (**(*var_18h + 0x20))(var_18h, var_10h, &var_38h);\n                                        if (iVar4 == 0) {\n                                            (**(*var_8h + 0x38))(var_8h, var_38h, &var_4h);\n                                            (**(*var_4h + 0x48))(var_4h, 0, &var_24h);\n                                            if (var_24h == var_20h) {\n                                                bVar1 = true;\n                                                (**(*var_4h + 8))(var_4h);\n                                                (**(*var_8h + 8))(var_8h);\n                                                var_8h = var_18h;\n                                                goto code_r0x0045be58;\n                                            }\n                                            (**(*var_4h + 8))();\n                                        }\n                                        var_10h = var_10h + 1;\n                                    } while (var_10h < var_ch);\n                                }\n                                (**(*var_18h + 8))(var_18h);\n                            }\ncode_r0x0045be58:\n                            uVar7 = uVar7 + 1;\n                            iVar4 = var_1ch;\n                        } while (uVar7 < var_44h);\n                    }\n                }\n                if (((iVar4 == 3) || (iVar4 == 6)) && (var_14h == 5)) {\n                    (**(*var_8h + 0xc))(var_8h, &var_ch);\n                    var_34h = *var_ch;\n                    var_30h = var_ch[1];\n                    iStack48 = var_ch[2];\n                    var_28h = var_ch[3];\n                    (**(*var_8h + 0x4c))(var_8h, var_ch);\n                    iVar4 = (*_sym.imp.ole32.dll_StringFromGUID2)(&var_34h, &var_94h, 0x28);\n                    if (iVar4 == 0) {\ncode_r0x0045bf1c:\n                        fcn.0044d7e4(1, 0);\n                    }\n                    else if (var_1ch == 6) {\n                        fcn.0040ca8e(&var_94h);\n                    }\n                    else if (var_1ch == 3) {\n                        iVar4 = (*_sym.imp.ole32.dll_ProgIDFromCLSID)(&var_34h, &var_4h);\n                        if ((iVar4 != 0) || (var_4h == NULL)) goto code_r0x0045bf1c;\n                        fcn.0040ca8e(var_4h);\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(var_4h);\n                    }\n                }\n            }\n            (**(*arg_8h + 8))(arg_8h);\n            piVar6 = var_8h;\n            goto code_r0x0045bf38;\n        }\n        puVar9 = &arg_8h;\n        puVar8 = NULL;\n    }\n    (**(*var_8h + 0x30))(var_8h, 0xffffffff, puVar8, puVar9, 0, 0);\n    fcn.0040ca8e(arg_8h);\n    (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg_8h);\n    piVar6 = var_8h;\ncode_r0x0045bf38:\n    (**(*piVar6 + 8))(piVar6);\n    return 0;\n}\n",
        "token_count": 2441
    },
    "0045bf55": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045bf55(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32.dll\");\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x4b4108);\n            param_1[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0045bf80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045bf80(int32_t arg_8h, int16_t **arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t *extraout_EDX;\n    int16_t *piVar4;\n    int32_t iVar5;\n    char16_t *pcVar6;\n    uint var_94h;\n    uint pvarg;\n    int32_t *var_6ch;\n    uint var_64h;\n    int32_t *var_5ch;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint pvargDest;\n    char16_t *var_28h;\n    char16_t *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    var_1ch = 0;\n    var_10h = 0;\n    var_24h = L\"_NewEnum\";\n    var_28h = L\"get__NewEnum\";\n    var_4ch = 0;\n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_20h = 0x20404;\n    var_18h = 0xc0;\n    var_14h = 0x46000000;\n    fcn.00421970(&var_94h, 0, 0x20);\n    if (((arg_8h == 0) || (arg_10h == 0)) || (arg_ch == NULL)) {\ncode_r0x0045c21e:\n        pcVar6 = L\"Null Object assignment in FOR..IN loop\";\ncode_r0x0045c224:\n        iVar5 = 1;\n    }\n    else {\n        cVar2 = fcn.0044be14();\n        if (cVar2 != '\\0') {\ncode_r0x0045c158:\n            if (arg_ch[3] == 0x8) {\n                piVar4 = *arg_ch;\n            }\n            else {\n                piVar4 = NULL;\n            }\n            if (piVar4 == NULL) goto code_r0x0045c21e;\n            if (arg_ch[3] == 0x8) {\n                piVar4 = *arg_ch;\n            }\n            else {\n                piVar4 = NULL;\n            }\n            if (*piVar4 == 0xd) {\n                if (arg_ch[3] == 0x8) {\n                    piVar4 = *arg_ch;\n                }\n                else {\n                    piVar4 = NULL;\n                }\n                piVar1 = *(piVar4 + 4);\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n                iVar5 = (**(*piVar1 + 0xc))(piVar1, 1, &pvargDest, &var_10h);\n                if ((-1 < iVar5) || (iVar5 == 1)) {\n                    if ((var_10h == 0) || (iVar5 == 1)) {\n                        pvargDest._0_2_ = 1;\n                        fcn.00412570();\n                        *arg_ch = NULL;\n                        arg_ch[3] = 0x1;\n                    }\n                    fcn.0044a6f6(&pvargDest);\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n                    return 0;\n                }\n                fcn.00412570();\n                var_5ch = NULL;\n                arg_ch[3] = 0x1;\n                *arg_ch = NULL;\n                pcVar6 = NULL;\n                goto code_r0x0045c229;\n            }\n            pcVar6 = L\"Incorrect Object type in FOR..IN loop\";\n            goto code_r0x0045c224;\n        }\n        if (extraout_EDX[3] == 8) {\n            iVar5 = *extraout_EDX;\n        }\n        else {\n            iVar5 = 0;\n        }\n        if (((iVar5 != 0) && (extraout_EDX[3] == 8)) && (piVar1 = *(*extraout_EDX + 8),  piVar1 != NULL)) {\n            iVar5 = (**(*piVar1 + 0x14))(piVar1, 0x48d93c, &var_24h, 1, 0x400, &var_ch);\n            if (((iVar5 < 0) || (var_ch == -1)) &&\n               ((iVar5 = (**(*piVar1 + 0x14))(piVar1, 0x48d93c, &var_28h, 1, 0x400, &var_ch),  iVar5 < 0 ||\n                (var_ch == -1)))) {\n                var_ch = -4;\n            }\n            uVar3 = fcn.0041fa89(0x10);\n            var_44h = 0;\n            var_4ch = uVar3;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvarg);\n            iVar5 = (**(*piVar1 + 0x18))(piVar1, var_ch, 0x48d93c, 0x800, 3, &var_4ch, &pvarg, &var_94h, &var_50h);\n            fcn.00421a00(uVar3);\n            if (iVar5 < 0) {\n                pcVar6 = NULL;\n                if (iVar5 == -0x7ffdfff7) {\n                    var_5ch = &var_94h;\n                    iVar5 = -0x7ffdfff7;\n                }\n                else {\n                    var_5ch = NULL;\n                }\n                goto code_r0x0045c229;\n            }\n            if (var_6ch == NULL) {\n                var_5ch = NULL;\n                iVar5 = 1;\n                pcVar6 = L\"Null Object assignment in FOR..IN loop\";\n                goto code_r0x0045c229;\n            }\n            var_64h._0_2_ = 0xd;\n            iVar5 = (***var_6ch)(var_6ch, &var_20h, &var_5ch);\n            (**(*var_6ch + 8))(var_6ch);\n            pcVar6 = var_5ch;\n            if (var_5ch == NULL) goto code_r0x0045c229;\n            (**(*var_5ch + 0x14))(var_5ch);\n            fcn.0044a6f6(&var_64h);\n            (**(*var_5ch + 8))(var_5ch);\n            goto code_r0x0045c158;\n        }\n        pcVar6 = L\"Null Object assignment in FOR..IN loop\";\n        iVar5 = 2;\n    }\n    var_5ch = NULL;\ncode_r0x0045c229:\n    uVar3 = fcn.0045c235(iVar5, var_5ch, pcVar6, 1);\n    return uVar3;\n}\n",
        "token_count": 1643
    },
    "0045c235": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0045c235(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint noname_4;\n    uint noname_4_00;\n    uint uVar4;\n    uint var_58h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t *var_2ch;\n    uint pvargDest;\n    int32_t *var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (*(in_ECX + 0x180) == 0) {\n        fcn.0044d7e4(arg_8h, 0);\n        iVar2 = (arg_14h == '\\0') - 1;\n    }\n    else {\n        if (*0x4c3ec4 == '\\0') {\n            arg_14h = **(*(in_ECX + 0x17c) + -4 + *(in_ECX + 0x180) * 4);\n            fcn.0044016d();\n            var_48h = arg_8h;\n            puVar3 = &var_48h;\n            uVar4 = 0;\n            var_40h = 0;\n            var_3ch = 1;\n            fcn.004401fa(0);\n            fcn.0043a25b(uVar4);\n            fcn.00412570(uVar4, puVar3);\n            if (arg_10h == 0) {\n                uVar4 = fcn.0044d712(&var_48h, arg_8h);\n            }\n            else {\n                uVar4 = fcn.0040caee(arg_10h);\n            }\n            fcn.00408182(uVar4);\n            puVar3 = &var_58h;\n            uVar4 = 1;\n            fcn.004401fa(1);\n            fcn.0043a25b(uVar4);\n            fcn.00412570(uVar4, puVar3);\n            if (arg_10h == 0) {\n                fcn.00405cd3();\n            }\n            else {\n                fcn.00405cd3();\n            }\n            var_20h = arg_14h;\n            if (arg_ch != NULL) {\n                if (*(arg_ch + 4) != 0) {\n                    fcn.0041d6b4(*(arg_ch + 4));\n                    puVar3 = &var_58h;\n                    uVar4 = 2;\n                    fcn.004401fa(2);\n                    fcn.0043a25b(uVar4);\n                    fcn.00412570(uVar4, puVar3);\n                }\n                if (*(arg_ch + 2) != 0) {\n                    fcn.0041d6b4(*(arg_ch + 2));\n                    puVar3 = &var_58h;\n                    uVar4 = 3;\n                    fcn.004401fa(3);\n                    fcn.0043a25b(uVar4);\n                    fcn.00412570(uVar4, puVar3);\n                }\n                if (*(arg_ch + 6) != 0) {\n                    fcn.0041d6b4(*(arg_ch + 6));\n                    puVar3 = &var_58h;\n                    uVar4 = 4;\n                    fcn.004401fa(4);\n                    fcn.0043a25b(uVar4);\n                    fcn.00412570(uVar4, puVar3);\n                }\n                var_48h = *(arg_ch + 8);\n                var_40h = 0;\n                puVar3 = &var_48h;\n                uVar4 = 5;\n                var_3ch = 1;\n                fcn.004401fa(5);\n                fcn.0043a25b(uVar4);\n                fcn.00412570(uVar4, puVar3);\n                var_20h = arg_14h;\n                var_48h = *arg_ch;\n                if (*arg_ch == 0) {\n                    var_48h = *(arg_ch + 0xe);\n                }\n                var_40h = 0;\n                puVar3 = &var_48h;\n                uVar4 = 8;\n                var_3ch = 1;\n                fcn.004401fa(8);\n                fcn.0043a25b(uVar4);\n                fcn.00412570(uVar4, puVar3);\n            }\n            var_48h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            var_40h = 0;\n            puVar3 = &var_48h;\n            uVar4 = 6;\n            var_3ch = 1;\n            fcn.004401fa(6);\n            fcn.0043a25b(uVar4);\n            fcn.00412570(uVar4, puVar3);\n            var_48h = fcn.004433b0(*(in_ECX + 0xf4));\n            var_40h = 0;\n            puVar3 = &var_48h;\n            uVar4 = 7;\n            var_3ch = 1;\n            fcn.004401fa(7);\n            fcn.0043a25b(uVar4);\n            fcn.00412570(uVar4, puVar3);\n            cVar1 = fcn.0040d2c0(0xe);\n            if (cVar1 == '\\0') {\n                fcn.004084a6();\n                puVar3 = var_20h[4];\n                var_14h = *puVar3;\n                var_10h = puVar3[1];\n                var_ch = puVar3[2];\n                var_8h = puVar3[3];\n                *var_8h = *var_8h + 1;\n                puVar3 = &var_14h;\n            }\n            else {\n                puVar3 = fcn.0044afce(&var_58h);\n            }\n            var_38h = *puVar3;\n            var_34h = puVar3[1];\n            var_30h = puVar3[2];\n            var_2ch = puVar3[3];\n            *var_2ch = *var_2ch + 1;\n            if (cVar1 == '\\0') {\n                fcn.00405cd3();\n            }\n            else {\n                fcn.00405cd3();\n            }\n            var_14h = 0x49dc40;\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = NULL;\n            var_48h = 0;\n            var_40h = 0;\n            var_3ch = 1;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n            var_1ch = 0;\n            pvargDest._0_2_ = 9;\n            (**(*var_20h + 4))(var_20h);\n            var_58h = 0;\n            var_50h = 0;\n            var_4ch = 1;\n            fcn.0041baef(&var_58h);\n            fcn.00412570();\n            fcn.0044a6f6(&pvargDest);\n            *0x4c3ec4 = 1;\n            cVar1 = fcn.00456a38(&var_38h, &var_14h, &var_48h, 0, noname_4, &arg_14h + 3);\n            if (cVar1 == '\\0') {\n                fcn.00456a38(&var_38h, &var_14h, &var_48h, 1, noname_4_00, &arg_14h + 3);\n            }\n            fcn.0044d7e4(arg_8h, 0);\n            *0x4c3ec4 = '\\0';\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n            var_20h = NULL;\n            var_1ch = 0;\n            fcn.00412570();\n            fcn.004404c9();\n            fcn.00405cd3();\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 1968
    },
    "0045c8b7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045c8b7(uint32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint32_t *arg_14h, int32_t arg_18h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint extraout_ECX;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    char16_t *arg_10h_00;\n    int32_t var_104h;\n    uint32_t var_100h;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_74h;\n    uint var_64h;\n    uint pvargDest;\n    uint var_34h;\n    uint var_30h;\n    uint32_t *var_2ch;\n    uint *var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    uVar4 = arg_8h;\n    var_ch = *(arg_18h + 8);\n    var_2ch = NULL;\n    var_28h = NULL;\n    var_24h = 0;\n    var_20h = 0;\n    var_34h = 0xfffffffd;\n    var_10h = 0;\n    var_5h._0_1_ = '\\0';\n    if (((arg_10h == NULL) || (arg_ch == 0)) || (arg_14h == NULL)) {\n        iVar8 = 1;\n        arg_10h_00 = L\"NULL Pointer assignment\";\n        goto code_r0x0045cd06;\n    }\n    cVar2 = fcn.0045cff8();\n    if (cVar2 == '\\0') {\n        arg_10h_00 = L\"Not an Object type\";\n        iVar8 = 2;\n        goto code_r0x0045cd06;\n    }\n    cVar2 = fcn.0044be14();\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.0040d2c0(0xc);\n        if (cVar2 != '\\0') {\n            fcn.0041d6b4(arg_14h);\n            fcn.004497b6(arg_8h, arg_18h, arg_ch, arg_14h);\ncode_r0x0045cc99:\n            fcn.0044d7e4(arg_8h, arg_18h);\n            return 0;\n        }\n        cVar2 = fcn.0040d2c0(0xf);\n        if (cVar2 != '\\0') {\n            uVar3 = fcn.0041d6b4(arg_14h);\n            arg_8h = fcn.0044503c(uVar3, arg_14h, arg_8h, arg_18h);\n            fcn.00412570();\n            arg_18h = 0;\n            goto code_r0x0045cc99;\n        }\n    }\n    else {\n        if (arg_10h[3] == 8) {\n            iVar8 = *arg_10h;\n        }\n        else {\n            iVar8 = 0;\n        }\n        var_14h = *(iVar8 + 8);\n        if (var_14h != NULL) {\n            var_104h = 0;\n            iVar8 = fcn.0043abf3(&fcn.0045c8b7::var_10h);\n            if (iVar8 < 0) {\n                arg_10h_00 = NULL;\n                goto code_r0x0045cd06;\n            }\n            if (((arg_8h == 1) && (arg_8h = 3,  var_10h != 0)) &&\n               (iVar8 = fcn.0043a8c8(arg_14h, uVar4, &fcn.0045c8b7::var_104h),  -1 < iVar8)) {\n                if (((var_100h & 1) != 0) && (var_f8h == 0)) {\n                    var_5h._0_1_ = '\\x01';\n                }\n                if (var_100h == 1) {\n                    arg_8h = 1;\n                }\n            }\n            uVar5 = var_ch + 1;\n            uVar4 = -(uVar5 * 0x10 >> 0x20 != 0) | uVar5 * 0x10;\n            arg_14h = fcn.0041fa89(-(0xfffffffb < uVar4) | uVar4 + 4);\n            if (arg_14h == NULL) {\n                arg_14h = NULL;\n            }\n            else {\n                *arg_14h = uVar5;\n                arg_14h = arg_14h + 1;\n                fcn.0041ac65(uVar5, 0x43a215);\n            }\n            uVar4 = var_ch;\n            uVar5 = 0;\n            if (var_ch != 0) {\n                do {\n                    fcn.0043a25b(*(*(arg_18h + 4) + uVar5 * 4));\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < uVar4);\n            }\n            uVar3 = 0;\n            uVar4 = var_ch;\n            if ((var_104h != 0) && (arg_10h = NULL,  var_ch != 0)) {\n                puVar6 = arg_14h + var_ch * 4 + -4;\n                do {\n                    if (*(&fcn.0045c8b7::var_f4h + arg_10h * 4 + 2) == 2) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar6);\n                        iVar1 = *(&fcn.0045c8b7::var_f4h + arg_10h);\n                        *puVar6 = iVar1;\n                        if (iVar1 == 0x4008) {\n                            var_30h = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(0x49dbf0);\n                            puVar6[2] = &fcn.0045c8b7::var_30h;\n                        }\n                        uVar4 = var_ch;\n                        if (*(*(*(arg_18h + 4) + arg_10h * 4) + 0xc) != 6) {\n                            puVar6[2] = puVar6;\n                        }\n                    }\n                    arg_10h = arg_10h + 1;\n                    puVar6 = puVar6 + -4;\n                } while (arg_10h < uVar4);\n            }\n            var_2ch = arg_14h;\n            if ((arg_8h & 0xc) != 0) {\n                var_28h = &fcn.0045c8b7::var_34h;\n                var_20h = 1;\n            }\n            var_24h = uVar4;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&fcn.0045c8b7::pvargDest);\n            fcn.00421970(&fcn.0045c8b7::var_64h, 0, 0x20);\n            if (var_5h == '\\0') {\n                puVar7 = &fcn.0045c8b7::pvargDest;\n            }\n            else {\n                puVar7 = NULL;\n            }\n            iVar8 = (**(*var_14h + 0x18))\n                              (var_14h, var_10h, 0x48d93c, 0x800, arg_8h, &fcn.0045c8b7::var_2ch, puVar7, \n                               &fcn.0045c8b7::var_64h, &fcn.0045c8b7::var_18h);\n            if (iVar8 == -0x7ffdfffd) {\n                if (var_20h == 1) {\n                    iVar8 = (**(*var_14h + 0x18))\n                                      (var_14h, var_10h, 0x48d93c, 0x800, (arg_8h == 4) * '\\x04' + '\\x04', \n                                       &fcn.0045c8b7::var_2ch, 0, &fcn.0045c8b7::var_64h, &fcn.0045c8b7::var_18h);\n                    goto code_r0x0045cb8a;\n                }\ncode_r0x0045cba1:\n                puVar7 = NULL;\n            }\n            else {\ncode_r0x0045cb8a:\n                if (-1 < iVar8) {\n                    fcn.0044d7e4(0, 0);\n                    fcn.0044a6f6(0x45cbce);\n                    uVar4 = 0;\n                    if (var_ch != 0) {\n                        puVar6 = arg_14h + var_ch * 4 + -4;\n                        do {\n                            if ((*(*(*(arg_18h + 4) + uVar4 * 4) + 0xc) == 6) &&\n                               ((var_104h == 0 ||\n                                ((*(&fcn.0045c8b7::var_f4h + uVar4) != 0x4024 &&\n                                 ((((*(&fcn.0045c8b7::var_f4h + uVar4 * 4 + 2) & 2) != 0 ||\n                                   ((*(&fcn.0045c8b7::var_f4h + uVar4) & 0x4000) != 0)) || (*puVar6 == 8)))))))) {\n                                fcn.0044a6f6(puVar6);\n                            }\n                            uVar4 = uVar4 + 1;\n                            puVar6 = puVar6 + -4;\n                        } while (uVar4 < var_ch);\n                    }\n                    goto code_r0x0045cc41;\n                }\n                if (iVar8 != -0x7ffdfff7) goto code_r0x0045cba1;\n                puVar7 = &fcn.0045c8b7::var_64h;\n                iVar8 = -0x7ffdfff7;\n            }\n            uVar3 = fcn.0045c235(iVar8, puVar7, 0, 1);\ncode_r0x0045cc41:\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&fcn.0045c8b7::pvargDest);\n            if (arg_14h == NULL) {\n                return uVar3;\n            }\n            fcn.00441693(extraout_ECX);\n            return uVar3;\n        }\n    }\n    arg_10h_00 = L\"NULL Pointer assignment\";\n    iVar8 = 4;\ncode_r0x0045cd06:\n    uVar3 = fcn.0045c235(iVar8, 0, arg_10h_00, 1);\n    return uVar3;\n}\n",
        "token_count": 2542
    },
    "0045cd12": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045cd12(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_18h == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.0040ca8e(0x49dbf0);\n        if (arg_8h == 0) {\n            uVar1 = 3;\n        }\n        else {\n            uVar1 = 1;\n        }\n        uVar1 = fcn.0045c8b7(uVar1, arg_18h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 174
    },
    "0045d058": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d058(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = param_1[1];\n        iVar2 = *(iVar1 + 0x10);\n        if (iVar1 != 0) {\n            fcn.0041bdcc(iVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    if (*(param_1 + 2) == '\\0') {\n        iVar1 = param_1[1];\n        iVar2 = *(iVar1 + 0x10);\n        if (iVar1 != 0) {\n            fcn.0041bdcc(iVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    else {\n        *(param_1 + 9) = 1;\n    }\n    *param_1 = *param_1 + -1;\n    return;\n}\n",
        "token_count": 247
    },
    "0045d0a1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d0a1(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.0041fa89(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.0041faa0(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.00421a00(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    puVar4 = fcn.0042010a(4);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        *puVar4 = *arg_8h;\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 379
    },
    "0045d443": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nvoid __cdecl fcn.0045d443(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *arg_ch_00;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *var_3ch;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    var_2ch = 0;\n    var_1ch = 0;\n    var_14h = 0;\n    var_10h = 1;\n    fcn.00412570();\n    var_2ch = 1;\n    fcn.00412570();\n    var_10h = 1;\n    var_1ch = 0;\n    var_8h = 0xb;\n    fcn.0040d3d2();\n    arg_ch_00 = arg_ch;\n    *arg_ch = *arg_ch + 1;\n    iVar4 = *arg_ch;\n    iVar7 = *(arg_8h + 4);\n    piVar2 = *(iVar7 + iVar4 * 4);\n    if ((*(piVar2 + 2) == 0) && (*piVar2 == 0x10)) {\n        *arg_ch = iVar4 + 1;\n        iVar1 = *(*(iVar7 + (iVar4 + 1) * 4) + 8);\n        if (iVar1 == 0x49) {\ncode_r0x0045d4d4:\n            var_8h = 0xb;\n        }\n        else if (iVar1 == 0x4a) {\n            var_8h = 0xc;\n        }\n        else {\n            if (iVar1 != 0x4c) {\n                *arg_ch = iVar4;\n                goto code_r0x0045d4d4;\n            }\n            fcn.00412570();\n            var_10h = 1;\n            var_1ch = 1;\n            var_8h = 0xd;\n        }\n        *arg_ch_00 = *arg_ch_00 + 1;\n        puVar5 = *(*(arg_8h + 4) + *arg_ch_00 * 4);\n        if (*(puVar5 + 2) != 5) goto code_r0x0045d625;\n        uVar6 = *puVar5;\n        fcn.00412570();\n        *arg_ch_00 = *arg_ch_00 + 1;\n        iVar4 = *arg_ch_00;\n        var_2ch = uVar6;\n    }\n    iVar7 = 0x33;\n    iVar1 = *(*(*(arg_8h + 4) + iVar4 * 4) + 8);\n    while (iVar1 == 0x33) {\n        fcn.0040c935(**(*(arg_8h + 4) + iVar4 * 4));\n        *arg_ch_00 = *arg_ch_00 + 1;\n        if (*(*(*(arg_8h + 4) + *arg_ch_00 * 4) + 8) == 0x41) {\n            *arg_ch_00 = *arg_ch_00 + 1;\n            iVar4 = fcn.0040fa40(arg_8h, arg_ch_00, &fcn.0045d443::var_1ch, 0xffffffff);\n            if (iVar4 < 0) {\n                uVar6 = 0x6e;\n                goto code_r0x0045d62f;\n            }\n        }\n        var_3ch = &fcn.0045d443::arg_ch;\n        fcn.0040d2d2(&fcn.0045d443::var_3ch, var_3ch, &fcn.0045d443::var_ch, arg_10h);\n        if (arg_ch != NULL) {\n            uVar6 = 0xa3;\n            goto code_r0x0045d62f;\n        }\n        fcn.0040d380(0x45d595, &fcn.0045d443::var_1ch, 0x100, arg_10h);\n        if (var_8h == 0xb) {\n            fcn.00414265(&fcn.0045d443::var_2ch);\n        }\n        else if (var_8h == 0xc) {\n            fcn.0044a955(&fcn.0045d443::var_2ch);\n        }\n        else if (var_8h == 0xd) {\n            fcn.0044a875(&fcn.0045d443::var_2ch);\n        }\n        iVar1 = *(*(*(arg_8h + 4) + *arg_ch_00 * 4) + 8);\n        if (iVar1 == 0x7f) goto code_r0x0045d636;\n        if (iVar1 != 0x40) {\n            uVar6 = 0x7f;\n            goto code_r0x0045d62f;\n        }\n        iVar4 = *arg_ch_00 + 1;\n        iVar3 = *(*(arg_8h + 4) + iVar4 * 4);\n        *arg_ch_00 = iVar4;\n        iVar1 = *(iVar3 + 8);\n    }\n    puVar5 = *(*(arg_8h + 4) + iVar4 * 4);\ncode_r0x0045d625:\n    iVar7 = *(puVar5 + 10);\n    uVar6 = 0x9d;\ncode_r0x0045d62f:\n    fcn.0044d520(uVar6, iVar7);\ncode_r0x0045d636:\n    fcn.00405cd3();\n    fcn.00412570();\n    fcn.00412570();\n    return;\n}\n",
        "token_count": 1398
    },
    "0045d67e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d67e(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    iVar3 = 1;\n    var_4h = 1;\n    if (*(*(*(arg_8h + 4) + 4) + 8) == 0x7f) {\ncode_r0x0045d704:\n        arg_8h = 0;\n        if (0 < iVar3) {\n            do {\n                if (*(in_ECX + 0x160) == 0) {\n                    fcn.0044d520(0x96, 0xffffffff);\n                    return;\n                }\n                piVar1 = fcn.004053b6();\n                if (((*piVar1 == 1) || (piVar1 = fcn.004053b6(),  *piVar1 == 2)) ||\n                   (piVar1 = fcn.004053b6(),  *piVar1 == 3)) {\n                    arg_8h = arg_8h + 1;\n                    iVar2 = fcn.004053b6();\n                    *arg_ch = *(iVar2 + 8) + 1;\n                }\n                fcn.0040d9f2();\n            } while (arg_8h < iVar3);\n        }\n    }\n    else {\n        var_18h = 0;\n        var_10h = 0;\n        var_ch = 1;\n        iVar3 = fcn.0040fa40(arg_8h, &var_4h, &var_18h, 0xffffffff);\n        if (-1 < iVar3) {\n            iVar3 = *(*(arg_8h + 4) + var_4h * 4);\n            if (*(iVar3 + 8) == 0x7f) {\n                iVar3 = fcn.0040cdb4();\n                fcn.00412570();\n                goto code_r0x0045d704;\n            }\n            fcn.0044d520(0x72, *(iVar3 + 10));\n        }\n        fcn.00412570();\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "0045d76f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045d76f(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    int32_t iVar5;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_38h;\n    uint var_28h;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    var_4h._0_1_ = '\\0';\n    var_4h._1_1_ = '\\0';\n    var_4h._2_1_ = '\\0';\n    var_4h._3_1_ = '\\0';\n    var_10h = 1;\n    fcn.00404ae8();\n    var_48h = 4;\n    var_44h = *arg_ch + -1;\n    var_14h = var_40h;\n    var_18h = var_44h;\ncode_r0x0045d7af:\n    do {\n        iVar5 = *arg_ch;\n        *arg_ch = iVar5 + 1;\n        var_ch = fcn.00405554(iVar5);\n        if (var_ch == 0) break;\n        if (var_4h._2_1_ != '\\0') goto code_r0x0045d8ab;\n        *(in_ECX + 0xf4) = extraout_ECX + -1;\n        piVar1 = **(var_ch + 4);\n        if (*(piVar1 + 2) == 0) {\n            iVar5 = *piVar1;\n            if (iVar5 == 0x14) {\ncode_r0x0045d88d:\n                iVar4 = iVar4 + 1;\n                goto code_r0x0045d7af;\n            }\n            if (iVar5 == 0x15) {\n                if ((iVar4 == 0) && (var_4h._1_1_ == '\\0')) {\n                    piVar1 = (*(var_ch + 4))[1];\n                    var_4h._0_1_ = '\\x01';\n                    var_8h = 1;\n                    if ((*(piVar1 + 2) == 0) && (*piVar1 == 6)) {\n                        iVar5 = 2;\n                        var_4h._3_1_ = '\\x01';\n                        iVar3 = 2;\n                    }\n                    else {\n                        iVar5 = &var_4h + 3;\n                        iVar2 = fcn.00405322(var_ch, &var_8h, iVar5);\n                        iVar3 = var_8h;\n                        if (iVar2 < 0) goto code_r0x0045d8e8;\n                    }\n                    if (*(*(*(var_ch + 4) + iVar3 * 4) + 8) != 0x7f) {\n                        arg_8h = 0x72;\n                        goto code_r0x0045d8e1;\n                    }\n                    if (var_4h._3_1_ != '\\0') {\n                        var_10h = *arg_ch;\n                        var_4h._1_1_ = '\\x01';\n                    }\n                }\n                goto code_r0x0045d7af;\n            }\n            if (iVar5 == 0x16) {\n                if (iVar4 == 0) {\n                    var_40h = *arg_ch + -1;\n                    var_4h._2_1_ = '\\x01';\n                    var_14h = var_40h;\n                    goto code_r0x0045d7af;\n                }\n            }\n            else {\n                if (iVar5 == 0x17) goto code_r0x0045d88d;\n                if (iVar5 != 0x18) goto code_r0x0045d7af;\n            }\n            iVar4 = iVar4 + -1;\n        }\n    } while( true );\n    if (var_4h._2_1_ != '\\0') {\ncode_r0x0045d8ab:\n        if (var_4h != '\\0') {\n            fcn.00404b02(&var_48h);\n            iVar4 = var_10h;\n            if (var_4h._1_1_ == '\\0') {\n                iVar4 = var_14h;\n            }\n            *arg_ch = iVar4;\n            goto code_r0x0045d8e8;\n        }\n    }\n    iVar5 = -1;\n    *(in_ECX + 0xf4) = var_18h;\n    arg_8h = 0xa0;\ncode_r0x0045d8e1:\n    fcn.0044d520(arg_8h, iVar5);\ncode_r0x0045d8e8:\n    fcn.00412570();\n    fcn.00412570();\n    return;\n}\n",
        "token_count": 1168
    },
    "0045d8ff": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045d8ff(int32_t arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    char cVar4;\n    uint16_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    uint uVar11;\n    uint in_stack_fffffde0;\n    int32_t in_stack_fffffde4;\n    int32_t arg_14h;\n    uint var_1fch;\n    uint var_17ch;\n    uint auStack380 [64];\n    uint var_78h;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    \n    var_30h = 0;\n    var_8h = 0;\n    var_38h = 0;\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    *arg_ch = *arg_ch + 1;\n    var_2ch = 0;\n    var_24h = 0;\n    var_3ch = 0;\n    var_14h = 0;\n    var_20h = 1;\n    piVar2 = *(*(arg_8h + 4) + *arg_ch * 4);\n    if (*(piVar2 + 2) == 0) {\n        iVar9 = *piVar2;\n        if (iVar9 == 0x1a) {\n            fcn.0044d520(0x6e, *(piVar2 + 10));\n        }\n        else {\n            if (iVar9 == 0x1c) {\n                arg_10h = 1;\n            }\n            else {\n                if (iVar9 != 0x1d) goto code_r0x0045df40;\n                arg_10h = 2;\n            }\n            *arg_ch = *arg_ch + 1;\n        }\n    }\n    if (*0x4c22d8 == 0) {\n        var_18h = 2;\n    }\n    else {\n        var_18h = arg_10h;\n        if (arg_10h == 0) {\n            var_18h = 1;\n        }\n    }\n    fcn.00425b75(*(in_ECX + 0xf4), &var_1fch, 8, 10);\n    iVar9 = *(arg_8h + 4);\n    var_68h = 0x7f;\n    var_60h = 0x33;\n    if (*(*(iVar9 + *arg_ch * 4) + 8) == 0x33) {\n        var_44h = 0x4e;\n        var_4ch = 0x4f;\n        var_48h = 0x47;\n        var_40h = 0x40;\n        var_64h = 0x48;\n        do {\n            bVar3 = true;\n            in_stack_fffffde4 = **(iVar9 + *arg_ch * 4);\n            fcn.0040c935(in_stack_fffffde4);\n            fcn.0040d2d2(&var_78h, &var_3ch, &var_30h, var_18h);\n            if (var_3ch != 0) {\n                in_stack_fffffde0 = 0x9b;\n                goto code_r0x0045df40;\n            }\n            fcn.00407e53(&var_1fch);\n            uVar11 = 0x2e;\n            fcn.0040bd2f(0x2e);\n            fcn.00407b4b(**(*(arg_8h + 4) + *arg_ch * 4));\n            fcn.0040d2d2(&var_5ch, &var_14h, &var_30h, 0x10);\n            if (var_14h == 0) {\n                fcn.0040ca8e(0x49dbf0);\n                fcn.0040d380(&var_5ch, &var_2ch, var_30h, 0x10);\n                fcn.0040d2d2(&var_5ch, &var_14h, &var_30h, 0x10);\n                if (var_14h == 0) {\n                    in_stack_fffffde0 = 0x79;\n                    goto code_r0x0045df40;\n                }\n                bVar3 = false;\n            }\n            in_stack_fffffde4 = var_14h;\n            iVar9 = var_18h;\n            fcn.004489e0(&var_78h, var_14h, 0x400, var_18h);\n            *arg_ch = *arg_ch + 1;\n            var_3ch = var_14h;\n            if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) == 0x4e) {\n                var_8h = 0;\n                do {\n                    *arg_ch = *arg_ch + 1;\n                    if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) != 0x4f) {\n                        iVar7 = fcn.0040fa40(arg_8h, arg_ch, &var_2ch, 0xffffffff);\n                        if (-1 < iVar7) goto code_r0x0045db64;\ncode_r0x0045df89:\n                        in_stack_fffffde0 = 0x7b;\n                        goto code_r0x0045df40;\n                    }\n                    iVar7 = arg_8h;\n                    fcn.0045d154(arg_8h);\n                    uVar6 = fcn.0045ec7e(var_8h, *arg_ch, 0, iVar7, uVar11);\n                    fcn.00412570();\n                    var_20h = 1;\n                    var_2ch = uVar6;\ncode_r0x0045db64:\n                    iVar7 = fcn.0040cdb4();\n                    if ((iVar7 < 0) || (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) != 0x4f)) goto code_r0x0045df89;\n                    *arg_ch = *arg_ch + 1;\n                    uVar6 = fcn.0040cdb4();\n                    uVar8 = *arg_ch;\n                    auStack380[var_8h + -1] = uVar6;\n                    var_38h = var_8h + 1;\n                    var_8h = var_38h;\n                } while (*(*(*(arg_8h + 4) + uVar8 * 4) + 8) == 0x4e);\n                if (var_38h < 1) {\ncode_r0x0045df85:\n                    in_stack_fffffde0 = 0x7e;\n                }\n                else {\n                    fcn.0040346e();\n                    var_10h = 0;\n                    if (0 < var_8h) {\n                        do {\n                            cVar4 = fcn.00403489(auStack380[var_10h - 1]);\n                            if (cVar4 == '\\0') goto code_r0x0045df78;\n                            var_10h = var_10h + 1;\n                        } while (var_10h < var_8h);\n                    }\n                    cVar4 = fcn.00403320(&var_2ch, 0);\n                    if (cVar4 != '\\0') goto code_r0x0045dc19;\ncode_r0x0045df7d:\n                    in_stack_fffffde0 = 0x82;\n                }\n                goto code_r0x0045df40;\n            }\ncode_r0x0045dc19:\n            if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) == 0x41) {\n                var_ch = *arg_ch + 1;\n                iVar7 = *(*(arg_8h + 4) + var_ch * 4);\n                var_10h = *(iVar7 + 10);\n                *arg_ch = var_ch;\n                if (bVar3) {\n                    iVar9 = 0;\n                    iVar1 = *(*(*(arg_8h + 4) + var_ch * 4) + 8);\n                    uVar8 = var_ch;\n                    while (iVar1 != 0x7f) {\n                        iVar1 = *(*(*(arg_8h + 4) + uVar8 * 4) + 8);\n                        if (iVar1 == 0x47) {\ncode_r0x0045dc75:\n                            iVar9 = iVar9 + 1;\n                        }\n                        else if (iVar1 == 0x48) {\ncode_r0x0045dc72:\n                            iVar9 = iVar9 + -1;\n                        }\n                        else {\n                            if (iVar1 == 0x4e) goto code_r0x0045dc75;\n                            if (iVar1 == 0x4f) goto code_r0x0045dc72;\n                        }\n                        uVar8 = uVar8 + 1;\n                        *arg_ch = uVar8;\n                        if ((iVar9 == 0) && (*(*(*(arg_8h + 4) + uVar8 * 4) + 8) == 0x40)) break;\n                        iVar1 = *(*(*(arg_8h + 4) + uVar8 * 4) + 8);\n                    }\n                }\n                else {\n                    if (*(iVar7 + 8) == 0x4e) {\n                        cVar4 = fcn.0040d2c0(5);\n                        if (cVar4 == '\\0') {\n                            *arg_ch = var_ch - 1;\n                            iVar7 = arg_8h;\n                            fcn.0045d154(arg_8h);\n                            var_17ch = fcn.0045ec7e(0, *arg_ch, &var_38h, iVar7, uVar11);\n                            iVar7 = 1;\n                            var_8h = var_38h;\n                            if (1 < var_38h) {\n                                do {\n                                    arg_14h = arg_8h;\n                                    fcn.0045d154(arg_8h);\n                                    in_stack_fffffde4 = 0;\n                                    uVar11 = fcn.0045ec7e(iVar7, *arg_ch, 0, arg_14h, iVar9);\n                                    auStack380[iVar7 + -1] = uVar11;\n                                    iVar7 = iVar7 + 1;\n                                } while (iVar7 < var_8h);\n                            }\n                            fcn.0040346e();\n                            arg_10h = 0;\n                            if (0 < var_8h) {\n                                do {\n                                    cVar4 = fcn.00403489(auStack380[arg_10h + -1]);\n                                    if (cVar4 == '\\0') goto code_r0x0045df78;\n                                    arg_10h = arg_10h + 1;\n                                } while (arg_10h < var_8h);\n                            }\n                            cVar4 = fcn.00403320(&var_2ch, 0);\n                            if (cVar4 == '\\0') goto code_r0x0045df7d;\n                            *arg_ch = *arg_ch + 1;\n                            var_ch = *arg_ch;\n                        }\n                        if (var_ch < *(arg_8h + 8)) {\n                            iVar9 = 0;\n                            do {\n                                uVar5 = *(*(*(arg_8h + 4) + var_ch * 4) + 8);\n                                var_10h = uVar5;\n                                if (uVar5 == 0x33) {\n                                    cVar4 = fcn.00405b2a();\n                                    if (cVar4 == '\\0') {\n                                        uVar5 = var_10h;\n                                        goto code_r0x0045ddc2;\n                                    }\n                                    *0x4c22e4 = 1;\n                                }\n                                else {\ncode_r0x0045ddc2:\n                                    if ((uVar5 == 0x4e) || (uVar5 == 0x47)) {\n                                        iVar9 = iVar9 + 1;\n                                    }\n                                    else if ((uVar5 == 0x4f) || (uVar5 == 0x48)) {\n                                        iVar9 = iVar9 + -1;\n                                    }\n                                    else if (((uVar5 == 0x40) && (iVar9 == 0)) || (uVar5 == 0x7f)) break;\n                                }\n                                var_ch = var_ch + 1;\n                            } while (var_ch < *(arg_8h + 8));\n                        }\n                        if (0 < var_8h) {\n                            puVar10 = &var_17ch;\n                            for (iVar9 = var_8h; iVar9 != 0; iVar9 = iVar9 + -1) {\n                                *puVar10 = 0;\n                                puVar10 = puVar10 + 1;\n                            }\n                        }\n                        cVar4 = fcn.0040203a(arg_8h, arg_ch, &var_2ch, &var_17ch, 1);\n                        if (cVar4 == '\\0') goto code_r0x0045df47;\n                    }\n                    else {\n                        cVar4 = fcn.0040d2c0(5);\n                        if (cVar4 != '\\0') goto code_r0x0045df85;\n                        iVar9 = 0;\n                        arg_10h = 0;\n                        uVar8 = var_ch;\n                        if (var_ch < *(arg_8h + 8)) {\n                            do {\n                                var_ch = *(*(arg_8h + 4) + uVar8 * 4);\n                                iVar1 = *(var_ch + 8);\n                                if (iVar1 == 0x7f) break;\n                                if ((iVar1 == var_44h) || (iVar1 == var_48h)) {\n                                    iVar9 = iVar9 + 1;\n                                    arg_10h = iVar9;\n                                }\n                                else if ((iVar1 == var_4ch) || (iVar1 == var_64h)) {\n                                    iVar9 = iVar9 + -1;\n                                    arg_10h = iVar9;\n                                }\n                                else {\n                                    if ((iVar1 == var_40h) && (iVar9 == 0)) break;\n                                    if ((iVar1 == var_60h) && (cVar4 = fcn.00405b2a(),  iVar9 = arg_10h,  cVar4 != '\\0')\n                                       ) {\n                                        *0x4c22e4 = 1;\n                                    }\n                                }\n                                uVar8 = uVar8 + 1;\n                            } while (uVar8 < *(arg_8h + 8));\n                        }\n                        iVar9 = fcn.0040fa40(arg_8h, arg_ch, &var_2ch, 0xffffffff);\n                        if (iVar9 < 0) {\n                            in_stack_fffffde0 = 0x6e;\n                            goto code_r0x0045df40;\n                        }\n                        *0x4c22e4 = 0;\n                    }\ncode_r0x0045def2:\n                    fcn.0040d89e(&var_2ch);\n                }\n            }\n            else if (!bVar3) goto code_r0x0045def2;\n            uVar8 = *arg_ch;\n            iVar9 = *(arg_8h + 4);\n            iVar1 = *(*(iVar9 + uVar8 * 4) + 8);\n            if (iVar1 == var_68h) goto code_r0x0045df47;\n            if (iVar1 != var_40h) {\n                in_stack_fffffde4 = *(*(*(arg_8h + 4) + uVar8 * 4) + 10);\n                in_stack_fffffde0 = 0x7f;\n                goto code_r0x0045df40;\n            }\n            *arg_ch = uVar8 + 1;\n        } while (*(*(iVar9 + (uVar8 + 1) * 4) + 8) == 0x33);\n    }\n    in_stack_fffffde4 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n    in_stack_fffffde0 = 0x7f;\n    goto code_r0x0045df40;\ncode_r0x0045df78:\n    in_stack_fffffde0 = 0x7d;\ncode_r0x0045df40:\n    fcn.0044d520(in_stack_fffffde0, in_stack_fffffde4);\ncode_r0x0045df47:\n    fcn.00412570();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 3952
    },
    "0045dfce": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045dfce(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    ulong uVar7;\n    int32_t in_stack_ffffff64;\n    uint *in_stack_ffffff68;\n    uint var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_68h;\n    uint var_58h;\n    uint var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_3h;\n    \n    var_14h = 1;\n    var_10h = 1;\n    var_3h._0_1_ = '\\0';\n    var_3h._1_1_ = '\\0';\n    var_3h._2_1_ = '\\0';\n    fcn.00404ae8();\n    var_1ch = 1;\n    var_2ch = 1;\n    var_3ch = 1;\n    var_28h = 0;\n    var_20h = 0;\n    var_38h = 0;\n    var_30h = 0;\n    var_48h = 0;\n    var_40h = 0;\n    var_78h = 5;\n    if (*(*(*(arg_8h + 4) + 4) + 8) != 0x7f) {\n        var_74h = *arg_ch + -1;\n        in_stack_ffffff68 = &var_14h;\n        var_18h = var_74h;\n        iVar4 = fcn.0040fa40(arg_8h, in_stack_ffffff68, &var_28h, 0xffffffff);\n        if (iVar4 < 0) goto code_r0x0045e23e;\n        var_ch = 0;\ncode_r0x0045e063:\n        in_stack_ffffff64 = *arg_ch;\n        *arg_ch = in_stack_ffffff64 + 1;\n        uVar7 = fcn.00405554(in_stack_ffffff64);\n        iVar6 = uVar7 >> 0x20;\n        iVar4 = uVar7;\n        if (iVar4 != 0) {\n            *(in_ECX + 0xf4) = extraout_ECX + -1;\n            ppiVar1 = *(iVar4 + 4);\n            if (*(*ppiVar1 + 2) == 0) {\n                iVar5 = **ppiVar1;\n                if (iVar5 != 0x14) {\n                    if (iVar5 == 0x15) {\n                        if ((iVar6 == 0) && (var_3h._1_1_ == '\\0')) {\n                            var_3h._0_1_ = '\\x01';\n                            var_8h = 1;\n                            if ((*(ppiVar1[1] + 2) == 0) && (*ppiVar1[1] == 6)) {\n                                var_3h._2_1_ = '\\x01';\n                                var_8h = 2;\n                                if (*(ppiVar1[2] + 2) != 0x7f) goto code_r0x0045e237;\n                            }\n                            if (var_3h._2_1_ == '\\0') {\n                                do {\n                                    in_stack_ffffff64 = iVar4;\n                                    iVar5 = fcn.0040fa40(iVar4, &var_8h, &var_38h, 0xffffffff);\n                                    iVar6 = var_8h;\n                                    if (iVar5 < 0) goto code_r0x0045e23e;\n                                    piVar2 = *(*(iVar4 + 4) + var_8h * 4);\n                                    if ((*(piVar2 + 2) == 0) && (*piVar2 == 0xf)) {\n                                        in_stack_ffffff68 = &var_8h;\n                                        var_8h = var_8h + 1;\n                                        in_stack_ffffff64 = iVar4;\n                                        iVar6 = fcn.0040fa40(iVar4, in_stack_ffffff68, &var_48h, 0xffffffff);\n                                        if (iVar6 < 0) goto code_r0x0045e23e;\n                                        cVar3 = fcn.0041ee93();\n                                        iVar6 = var_8h;\n                                        if (cVar3 != '\\0') {\n                                            cVar3 = fcn.0044a860();\n                                            iVar6 = var_8h;\n                                            goto joined_r0x0045e183;\n                                        }\n                                    }\n                                    else {\n                                        cVar3 = fcn.0040cbf7();\njoined_r0x0045e183:\n                                        if (cVar3 != '\\0') {\n                                            var_3h._2_1_ = '\\x01';\n                                            goto code_r0x0045e1c3;\n                                        }\n                                    }\n                                    if (*(*(*(iVar4 + 4) + iVar6 * 4) + 8) != 0x40) goto code_r0x0045e1a4;\n                                    var_8h = iVar6 + 1;\n                                } while( true );\n                            }\n                            goto code_r0x0045e1b9;\n                        }\n                        goto code_r0x0045e063;\n                    }\n                    if (iVar5 != 0x16) {\n                        if (iVar5 == 0x17) goto code_r0x0045e1d4;\n                        if (iVar5 != 0x18) goto code_r0x0045e063;\n                        if (iVar6 == 0) {\n                            iVar4 = *arg_ch + -1;\n                            var_70h = iVar4;\n                            if (var_3h != '\\0') {\n                                fcn.00404b02(&var_78h);\n                                if (var_3h._1_1_ == '\\0') {\n                                    *arg_ch = iVar4;\n                                }\n                                else {\n                                    *arg_ch = var_10h;\n                                }\n                                goto code_r0x0045e23e;\n                            }\n                            goto code_r0x0045e227;\n                        }\n                    }\n                    var_ch = iVar6 + -1;\n                    goto code_r0x0045e063;\n                }\ncode_r0x0045e1d4:\n                var_ch = iVar6 + 1;\n            }\n            goto code_r0x0045e063;\n        }\ncode_r0x0045e227:\n        *(in_ECX + 0xf4) = var_18h;\n    }\ncode_r0x0045e237:\n    fcn.0044d520(in_stack_ffffff64, in_stack_ffffff68);\ncode_r0x0045e23e:\n    fcn.00412570();\n    fcn.00412570();\n    fcn.00412570();\n    fcn.00412570();\n    fcn.00412570();\n    return;\ncode_r0x0045e1a4:\n    if (*(*(*(iVar4 + 4) + iVar6 * 4) + 8) != 0x7f) goto code_r0x0045e237;\ncode_r0x0045e1b9:\n    if (var_3h._2_1_ != '\\0') {\ncode_r0x0045e1c3:\n        var_10h = *arg_ch;\n        var_3h._1_1_ = '\\x01';\n    }\n    goto code_r0x0045e063;\n}\n",
        "token_count": 1808
    },
    "0045ea48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ea48(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        iVar1 = fcn.0042010a(0x18);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            *(iVar1 + 8) = 0;\n            fcn.004113a0(arg_8h);\n        }\n        *(iVar1 + 0x10) = in_ECX[1];\n        in_ECX[1] = iVar1;\n    }\n    else {\n        fcn.0040d89e(arg_8h);\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 195
    },
    "0045ea97": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045ea97(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 4);\n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = *(iVar1 + 0x10);\n    }\n    return iVar1;\n}\n",
        "token_count": 77
    },
    "0045eabc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045eabc(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_stack_fffffed0;\n    uint var_124h;\n    uint var_24h;\n    \n    if (arg_ch != 0) {\n        fcn.0045eb34(&var_24h);\n        iVar1 = fcn.00426a63(&var_124h, 0x80, arg_ch, &var_24h);\n        if (iVar1 == 0) {\n            var_124h._0_2_ = 0;\n        }\n        in_stack_fffffed0 = &var_124h;\n    }\n    fcn.0040caee(in_stack_fffffed0);\n    return arg_8h;\n}\n",
        "token_count": 186
    },
    "0045eb34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0045eb34(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_24h;\n    \n    if (arg_8h == NULL) {\n        fcn.0043a83b();\n        in_ECX = extraout_ECX;\n    }\n    iVar1 = fcn.00425c91(&var_24h, in_ECX);\n    if (iVar1 == 0) {\n        puVar2 = &var_24h;\n        puVar3 = arg_8h;\n        for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    else {\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 232
    },
    "0045ebb9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ebb9(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32.dll\");\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"GetSystemWow64DirectoryW\");\n            param_1[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0045ede9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ede9(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    fcn.0040d2d2(**(*(arg_8h + 4) + *arg_ch * 4), &var_4h, &var_8h, 0);\n    if (var_4h == 0) {\n        fcn.0044d520(0x79, *(*(*(arg_8h + 4) + *arg_ch * 4) + 10));\n        uVar1 = 0xffffffff;\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        uVar1 = fcn.0040f6d0(arg_8h, arg_ch, var_4h, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 231
    },
    "0045f34f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f34f(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint noname_0;\n    uint uVar5;\n    uint *in_stack_ffffff94;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar5 = 0;\n    var_20h = 0x49dc40;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_8h = 0;\n    var_4h = 1;\n    fcn.0040d3d2();\n    iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n    if ((iVar1 == 0x35) || (iVar1 == 0x47)) {\n        fcn.00440fb2();\n        puVar2 = *(*(arg_8h + 4) + *arg_ch * 4);\n        if (*(puVar2 + 2) == 0x47) {\n            *arg_ch = *arg_ch + -1;\n            fcn.00407e53(0x49dbf0);\n        }\n        else {\n            fcn.0040c935(*puVar2);\n        }\n        if (*(*(*(arg_8h + 4) + 4 + *arg_ch * 4) + 8) == 0x47) {\n            iVar4 = fcn.0045cdb5(arg_8h, arg_ch, &var_20h);\n            if (iVar4 < 0) {\n                fcn.0044d338(noname_0, L\"Incorrect parameters to object property !\");\n                uVar5 = 0xffffffff;\n                goto code_r0x0045f4b6;\n            }\n            arg_8h_00 = 1;\n        }\n        else {\n            *arg_ch = *arg_ch + 1;\n            arg_8h_00 = 0;\n        }\n        fcn.0045cd12(arg_8h_00, arg_10h, var_30h, &var_20h, &var_10h);\n        cVar3 = fcn.0045cff8();\n        if (cVar3 != '\\0') {\n            uVar5 = fcn.0045f34f(arg_8h, arg_ch, &var_10h, arg_14h);\n            goto code_r0x0045f4b6;\n        }\n        arg_10h = CONCAT13(1, arg_10h);\n        if (*(in_ECX + 0x4ac) == '\\0') {\n            fcn.0045ebe4(arg_8h, arg_ch, &arg_10h + 3);\n            if (arg_10h._3_1_ == '\\0') {\n                fcn.0040ca8e(0x49dbf0);\n                fcn.0044d7e4(1, 0);\n                goto code_r0x0045f4b6;\n            }\n        }\n        in_stack_ffffff94 = &var_10h;\n    }\n    fcn.0040d89e(in_stack_ffffff94);\ncode_r0x0045f4b6:\n    fcn.00405cd3();\n    fcn.00412570();\n    fcn.00412570();\n    fcn.004404c9();\n    return uVar5;\n}\n",
        "token_count": 888
    },
    "0045f4df": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f4df(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    var_1ch = 0;\n    var_14h = 0;\n    uVar4 = 0xffffffff;\n    *arg_ch = *arg_ch + 1;\n    var_10h = 1;\n    fcn.0040fa40(arg_8h, arg_ch, &var_1ch, 0xffffffff);\n    iVar3 = *arg_ch;\n    uVar1 = *(arg_8h + 4);\n    if (*(*(uVar1 + iVar3 * 4) + 8) == 0x4f) {\n        *arg_ch = iVar3 + 1;\n        iVar3 = fcn.00444ed4(&var_1ch, uVar1 & 0xffffff00 | arg_14h == '\\0', arg_18h);\n        if (iVar3 != 0) {\n            if ((arg_18h == '\\0') || (cVar2 = fcn.0041d5f6(0x29),  cVar2 == '\\0')) {\ncode_r0x0045f5a4:\n                *arg_10h = iVar3;\n            }\n            else {\n                fcn.004084a6();\n                cVar2 = fcn.0041f885();\n                if (cVar2 == '\\0') goto code_r0x0045f5a4;\n            }\n            uVar4 = 0;\n            goto code_r0x0045f5ab;\n        }\n        iVar3 = *(*(arg_8h + 4) + -4 + *arg_ch * 4);\n    }\n    else {\n        iVar3 = *((uVar1 - 4) + iVar3 * 4);\n    }\n    fcn.0044d520(0x7b, *(iVar3 + 10));\ncode_r0x0045f5ab:\n    fcn.00412570();\n    return uVar4;\n}\n",
        "token_count": 518
    },
    "0045f79f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f79f(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t **ppiVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t unaff_EBX;\n    uint *puVar7;\n    int32_t unaff_ESI;\n    int32_t *piVar8;\n    uint *puVar9;\n    int32_t *piVar10;\n    uint *puVar11;\n    uchar *arg_8h_00;\n    uint arg_8h_01;\n    uint uVar12;\n    int32_t iStack924;\n    int32_t *piStack920;\n    uint32_t uStack916;\n    int32_t iStack912;\n    int32_t iStack908;\n    int32_t iStack900;\n    int32_t iStack896;\n    int32_t iStack892;\n    int32_t iStack884;\n    uint uStack880;\n    int32_t *piStack876;\n    int32_t *piStack872;\n    uint uStack868;\n    int32_t *piStack860;\n    uint uStack856;\n    uint uStack852;\n    uint uStack848;\n    int32_t *piStack844;\n    int32_t *piStack840;\n    int32_t *piStack836;\n    int32_t *piStack832;\n    int32_t *piStack828;\n    int32_t iStack824;\n    int32_t iStack820;\n    int32_t iStack812;\n    int32_t iStack808;\n    int32_t aiStack800 [6];\n    int32_t aiStack776 [193];\n    \n    iStack896 = 0;\n    uStack916 = arg_10h != '\\0';\n    iVar3 = *(arg_8h[1] + uStack916 * -4 + 4);\n    fcn.004084a6();\n    ppiVar1 = *(iVar3 + 8);\n    piStack840 = *ppiVar1;\n    piStack836 = ppiVar1[1];\n    piStack832 = ppiVar1[2];\n    piStack828 = ppiVar1[3];\n    *piStack828 = *piStack828 + 1;\n    iStack812 = (uStack916 - 3) + arg_8h[2];\n    iStack908 = iStack812 / 2;\n    if (iStack908 * 2 != iStack812) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.0044d7e4(4, 0);\n        goto code_r0x0045fc82;\n    }\n    piStack876 = NULL;\n    piStack872 = NULL;\n    uStack868 = 0;\n    uStack880 = 0x4b4564;\n    piVar8 = 0xffffffff;\n    iStack812 = iStack908;\n    cVar2 = fcn.00460458(&stack0xfffffcb8, &stack0xfffffcc8);\n    if (cVar2 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.0044d7e4(2, 0);\n    }\n    else {\n        iStack824 = 0;\n        iStack896 = 0;\n        uVar12 = 3;\n        iStack908 = 3 - iStack924;\n        if (0 < iStack820) {\n            piStack920 = iStack908 * 4;\n            do {\n                uStack916 = piVar8 + 1;\n                fcn.004628d9(&stack0xfffffc6c);\n                iVar3 = *(iStack912 + arg_8h[1]);\n                fcn.004084a6();\n                puVar4 = *(iVar3 + 8);\n                uStack856 = *puVar4;\n                uStack852 = puVar4[1];\n                uStack848 = puVar4[2];\n                piVar10 = piStack920 * 0x18;\n                piStack844 = puVar4[3];\n                *piStack844 = *piStack844 + 1;\n                piStack860 = piStack920;\n                uVar12 = 0x45f932;\n                cVar2 = fcn.0045fc96(&stack0xfffffca8, &stack0xfffffcf8 + piVar10);\n                if (cVar2 == '\\0') {\n                    fcn.00412570();\n                    uVar12 = 0;\n                    arg_ch[3] = 1;\n                    arg_8h_01 = 1;\ncode_r0x0045fbce:\n                    *arg_ch = 0;\n                    fcn.0044d7e4(arg_8h_01, uVar12);\n                    fcn.00405cd3();\n                    goto code_r0x0045fc79;\n                }\n                piVar8 = &stack0xfffffcf8 + piVar10;\n                piStack872 = piVar8;\n                if ((*piVar8 == 0x10) && (*(&stack0xfffffcfc + unaff_EBX) == 0)) {\n                    uVar12 = 0xc;\n                    iStack892 = arg_8h[1];\n                    iStack912 = *(iStack892 + 4 + piVar10);\n                    cVar2 = fcn.0040d2c0(0xc);\n                    if (cVar2 == '\\0') {\n                        fcn.00412570();\n                        arg_ch[3] = 1;\n                        arg_8h_01 = 5;\n                        goto code_r0x0045fbce;\n                    }\n                    iVar3 = fcn.0044be8a();\n                    uStack916 = iVar3 - 1U >> 2;\n                    piStack828 = piStack828 + (uStack916 + 1) * *(&stack0xfffffcfc + unaff_ESI);\n                    iVar3 = (piVar10 + uStack916) - uStack916;\n                    if (piStack920 < iVar3) {\n                        iVar5 = iVar3 - piStack920;\n                        puVar4 = &stack0xfffffcec + (iVar3 + uStack916) * 0x18;\n                        puVar7 = &stack0xfffffcec + iVar3 * 0x18;\n                        do {\n                            puVar9 = puVar7;\n                            puVar11 = puVar4;\n                            for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                *puVar11 = *puVar9;\n                                puVar9 = puVar9 + 1;\n                                puVar11 = puVar11 + 1;\n                            }\n                            iVar5 = iVar5 + -1;\n                            puVar4 = puVar4 + -6;\n                            puVar7 = puVar7 + -6;\n                            piStack920 = piStack872;\n                            piVar8 = piStack876;\n                        } while (iVar5 != 0);\n                    }\n                    piVar6 = *(iStack896 + 4 + iStack924);\n                    if (piVar6[3] == 0xc) {\n                        iVar3 = *piVar6;\n                    }\n                    else {\n                        iVar3 = 0;\n                    }\n                    piVar6 = *(iVar3 + 8);\n                    iVar3 = uStack916 + 1 + piStack920;\n                    if (piStack920 < iVar3) {\n                        iVar3 = iVar3 - piStack920;\n                        piStack920 = piStack920 + iVar3;\n                        do {\n                            iVar5 = *piVar6;\n                            piVar8[1] = 0;\n                            piVar8[-2] = iVar5;\n                            *piVar8 = 0x10;\n                            piVar8[2] = *(&stack0xfffffcfc + unaff_ESI);\n                            piVar6 = piVar6 + 1;\n                            piVar8 = piVar8 + 6;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                    }\n                    piVar8 = piStack920 + -1;\n                    piStack920 = piVar10 + uStack916;\n                }\n                else {\n                    iStack824 = iStack824 + *(&stack0xfffffd00 + unaff_EBX);\n                    piVar8 = piStack920;\n                    piStack920 = piVar10;\n                }\n                iStack908 = iStack908 + 8;\n                fcn.00405cd3();\n                iStack884 = iStack884 + 1;\n            } while (iStack884 < iStack808);\n        }\n        if (arg_10h == '\\0') {\n            piVar8 = arg_8h;\n            iStack900 = fcn.00460579(&stack0xfffffccc, arg_8h);\n            if (iStack900 == 0) {\n                fcn.00412570();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                goto code_r0x0045fc79;\n            }\n        }\n        else {\n            piVar8 = 0x45fa91;\n            iStack820 = fcn.0044be63();\n        }\n        arg_8h_00 = &stack0xfffffc94;\n        fcn.0045f5fb(arg_8h_00);\n        fcn.00460719(&stack0xfffffcc8, arg_8h, 4 - uStack916, arg_8h_00, uVar12);\n        piVar10 = piStack840;\n        piStack840 = piVar8;\n        iVar3 = fcn.0041f92c(&stack0xfffffcac);\n        if (iVar3 == 0) {\n            fcn.0044d520(0x67, 0xffffffff);\n            uVar12 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0);\n            (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar12);\n        }\n        piStack844 = piVar10;\n        fcn.00403320(arg_ch, 1);\n        if (piStack840 == 0x1) {\n            uVar12 = fcn.004114a0(arg_ch, 0, 1);\n            fcn.00460300(&stack0xfffffcc0, uVar12);\n        }\n        iVar3 = 0;\n        if (0 < piStack844) {\n            unaff_ESI = unaff_ESI << 2;\n            do {\n                iVar5 = iVar3 + 1;\n                puVar4 = fcn.004114a0(arg_ch, 0, 1);\n                iVar3 = **(iStack908 + iVar3 * 4) * 0x18;\n                if (*(&stack0xfffffce0 + iVar3) == 0x10) {\n                    uVar12 = *(arg_8h[1] + 4 + unaff_ESI);\n                    cVar2 = fcn.0040d2c0(0xc);\n                    if (cVar2 == '\\0') {\n                        uVar12 = fcn.0044be63();\n                        fcn.00412570();\n                        puVar4[3] = 7;\n                        *puVar4 = uVar12;\n                        iVar3 = iVar5;\n                    }\n                    else {\n                        fcn.0040d89e(uVar12);\n                        iVar3 = iVar5;\n                    }\n                }\n                else {\n                    fcn.00460300(&stack0xfffffcd8 + iVar3, puVar4);\n                    iVar3 = iVar5;\n                }\n                unaff_ESI = unaff_ESI + 8;\n            } while (iVar3 < piStack844);\n        }\n        if ((arg_10h == '\\0') && (cVar2 = fcn.0040d2c0(4),  cVar2 != '\\0')) {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(uStack916);\n        }\n    }\ncode_r0x0045fc79:\n    fcn.0045f717();\ncode_r0x0045fc82:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 2688
    },
    "00460300": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00460300(double *arg_8h, double *arg_ch)\n\n{\n    float fVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_18h;\n    uint var_10h;\n    double dStack12;\n    \n    if (0xf < *(arg_8h + 1)) goto code_r0x00460401;\n    // switch table (16 cases) at 0x460418\n    switch(*(*(arg_8h + 1) * 4 + 0x460418)) {\n    case 0x46031f:\n        uVar3 = fcn.00448553();\n        fcn.0040ca8e(uVar3);\n        fcn.0042017e(uVar3);\n        break;\n    case 0x460340:\n        fcn.0040ca8e(*arg_8h);\n        break;\n    default:\n        uVar4 = *arg_8h;\ncode_r0x00460351:\n        fcn.00412570();\n        *(arg_ch + 0xc) = 1;\ncode_r0x00460362:\n        *arg_ch = uVar4;\n        break;\n    case 0x460369:\n        uVar3 = *arg_8h;\n        fcn.00412570();\n        *(arg_ch + 4) = 0;\n        *(arg_ch + 0xc) = 2;\n        *arg_ch = uVar3;\n        break;\n    case 0x460384:\n        uVar4 = *arg_8h;\n        goto code_r0x00460351;\n    case 0x460389:\n        uVar4 = *arg_8h;\n        goto code_r0x00460351;\n    case 0x46038e:\n        uVar4 = *arg_8h;\n        goto code_r0x00460351;\n    case 0x460393:\n        fVar1 = *arg_8h;\n        goto code_r0x00460395;\n    case 0x4603b0:\n        fVar1 = *arg_8h;\ncode_r0x00460395:\n        dStack12 = fVar1;\n        fcn.00412570();\n        *arg_ch = dStack12;\n        *(arg_ch + 0xc) = 3;\n        break;\n    case 0x4603b4:\n        uVar4 = *arg_8h;\n        fcn.00412570();\n        *(arg_ch + 0xc) = 7;\n        goto code_r0x00460362;\n    case 0x4603c9:\n        uVar3 = *arg_8h;\n        uVar2 = *(arg_8h + 4);\n        fcn.00412570();\n        *(arg_ch + 4) = uVar2;\n        *(arg_ch + 0xc) = 2;\n        *arg_ch = uVar3;\n        break;\n    case 0x4603e9:\n        var_18h._0_2_ = 9;\n        var_10h = *arg_8h;\n        fcn.0044a6f6(&var_18h);\n    }\ncode_r0x00460401:\n    if (*(arg_8h + 0x14) != 0) {\n        fcn.004228ca(*(arg_8h + 0x14));\n    }\n    return;\n}\n",
        "token_count": 769
    },
    "00460b3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460b3c(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_10h;\n    \n    iVar2 = fcn.0041cf79(arg_8h);\n    if ((iVar2 == 0) || (*(iVar2 + 0x18) != *(iVar2 + 0x14))) {\ncode_r0x00460b53:\n        uVar3 = 0;\n    }\n    else {\n        fcn.00405b47(arg_8h);\n        iVar4 = fcn.00405554(*(iVar2 + 0x10));\n        iVar6 = 3;\n        if (*(iVar2 + 0x20) != '\\0') {\n            iVar6 = 4;\n        }\n        iVar5 = 0;\n        if (0 < *(iVar2 + 0x14)) {\n            iVar6 = iVar6 << 2;\n            do {\n                fcn.0040d3d2();\n                if (iVar5 != 0) {\n                    if (*(*(*(iVar4 + 4) + iVar6) + 8) == 0x40) {\n                        iVar6 = iVar6 + 4;\n                        goto code_r0x00460bad;\n                    }\ncode_r0x00460bed:\n                    fcn.00405cd3();\n                    goto code_r0x00460b53;\n                }\ncode_r0x00460bad:\n                puVar1 = *(iVar6 + *(iVar4 + 4));\n                if (*(puVar1 + 2) != 0x33) goto code_r0x00460bed;\n                fcn.0040c935(*puVar1);\n                fcn.00405b47(&var_10h);\n                iVar6 = iVar6 + 4;\n                fcn.00405cd3();\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < *(iVar2 + 0x14));\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 478
    },
    "00460d01": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460d01(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char cVar7;\n    uint8_t uVar8;\n    int32_t iVar9;\n    uchar *arg_8h_00;\n    uint32_t uVar10;\n    int16_t *piVar11;\n    int32_t in_ECX;\n    uint32_t uVar12;\n    int32_t *piVar13;\n    int32_t **ppiVar14;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t iVar15;\n    uint in_stack_ffffff60;\n    uint in_stack_ffffff64;\n    int32_t iVar16;\n    uint32_t uStack128;\n    int32_t *piStack120;\n    uint32_t arg_ch_00;\n    int32_t iVar17;\n    uint32_t uStack96;\n    uchar auStack88 [4];\n    int32_t iStack84;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    int32_t *piStack68;\n    uint uStack60;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    \n    uStack76 = 0;\n    iVar9 = fcn.0042010a(0x340);\n    if (iVar9 == 0) {\n        iStack84 = 0;\n    }\n    else {\n        iStack84 = fcn.0045f703();\n    }\n    iStack84 = iStack84 + 0x10;\n    iVar9 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar9 + 8);\n    uStack56 = *puVar1;\n    uStack52 = puVar1[1];\n    piStack48 = puVar1[2];\n    piStack44 = puVar1[3];\n    *piStack44 = *piStack44 + 1;\n    fcn.0040b8a7();\n    uVar10 = uStack56;\n    pcVar4 = _sym.imp.USER32.dll_CharLowerBuffW;\n    arg_ch_00 = uStack52;\n    (*_sym.imp.USER32.dll_CharLowerBuffW)();\n    iVar9 = *(*(arg_8h + 4) + 8);\n    fcn.004084a6();\n    puVar1 = *(iVar9 + 8);\n    uStack80 = *puVar1;\n    uStack76 = puVar1[1];\n    uStack72 = puVar1[2];\n    piStack68 = puVar1[3];\n    *piStack68 = *piStack68 + 1;\n    fcn.0040b8a7();\n    uVar6 = uStack76;\n    uVar5 = uStack80;\n    (*pcVar4)();\n    uVar2 = *(in_ECX + 0x1bc);\n    uVar12 = 0;\n    if (uVar2 != 0) {\n        ppiVar14 = *(in_ECX + 0x1b8);\n        do {\n            if (**ppiVar14 == 0) break;\n            uVar12 = uVar12 + 1;\n            ppiVar14 = ppiVar14 + 1;\n        } while (uVar12 < uVar2);\n    }\n    if (uVar12 == uVar2) {\n        unaff_ESI = unaff_EDI;\n        fcn.004628d9(&stack0xffffff94);\n        unaff_EDI = unaff_ESI;\n    }\n    else {\n        **(*(in_ECX + 0x1b8) + uVar12 * 4) = unaff_ESI;\n    }\n    iVar16 = 0xe;\n    iVar9 = **(arg_8h + 4);\n    cVar7 = fcn.0040d2c0(0xe);\n    if (cVar7 == '\\0') {\n        iVar17 = 2;\n        fcn.004084a6();\n        puVar3 = *(iVar9 + 8);\n        uStack60 = *puVar3;\n        uStack56 = puVar3[1];\n        uStack52 = puVar3[2];\n        piStack48 = puVar3[3];\n        *piStack48 = *piStack48 + 1;\n        arg_8h_00 = &stack0xffffffc4;\n    }\n    else {\n        iVar17 = 1;\n        arg_8h_00 = fcn.0044afce(&stack0xffffffd4);\n    }\n    cVar7 = fcn.00460b3c(arg_8h_00, unaff_ESI);\n    uVar8 = 1 - (cVar7 != '\\0');\n    uStack128 = uVar5 & 0xffffff | uVar8 << 0x18;\n    if ((uVar10 & 2) != 0) {\n        uVar10 = uVar10 & 0xfffffffd;\n        fcn.00405cd3();\n    }\n    if ((uVar10 & 1) != 0) {\n        fcn.00405cd3();\n    }\n    if (uVar8 == 0) {\n        cVar7 = fcn.00460458(&stack0xffffffa8, arg_ch_00);\n        if (cVar7 != '\\0') {\n            iVar9 = 0;\n            iVar15 = 0;\n            while (piVar11 = fcn.0040a4f6(0x460f0c),  *piVar11 != 0) {\n                piVar11 = fcn.0040a4f6(iVar9);\n                iVar9 = iVar9 + 1;\n                if (*piVar11 == 0x3b) {\n                    iVar15 = iVar15 + 1;\n                }\n            }\n            if ((1 < uStack96) && (piVar11 = fcn.0040a4f6(iVar9 + -1),  *piVar11 != 0x3b)) {\n                iVar15 = iVar15 + 1;\n            }\n            *(unaff_EDI + 0xc) = iVar15;\n            *(unaff_EDI + 8) = 0;\n            piStack120 = NULL;\n            if (0 < iVar15) {\n                piVar13 = unaff_EDI + 0x40;\n                do {\n                    cVar7 = fcn.0045fc96(&stack0xffffff98, piVar13 + -4);\n                    if (cVar7 == '\\0') {\n                        fcn.00412570();\n                        in_stack_ffffff64 = 0;\n                        in_stack_ffffff60 = 2;\n                        goto code_r0x00461037;\n                    }\n                    *(unaff_EDI + 8) = *(unaff_EDI + 8) + *piStack120;\n                    uStack128 = uStack128 + 1;\n                    piVar13 = piStack120 + 6;\n                    piStack120 = piVar13;\n                } while (uStack128 < iVar15);\n            }\n            iVar9 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x77, 0x3000, 0x40);\n            fcn.0041faa0(iVar9, fcn.0041fa12, 0x77);\n            *(**(*(iVar17 + 0x1b8) + uVar6 * 4) + 0x10) = iVar9;\n            *(iVar9 + 0x51) = fcn.00460a19;\n            *(iVar9 + 10) = unaff_ESI;\n            *(iVar9 + 0x12) = iVar16;\n            if ((*(iVar16 + 0xc) == 0) || (*(iVar16 + 4) == 1)) {\n                *(iVar9 + 0x74) = 0xc3;\n            }\n            else {\n                *(iVar9 + 0x74) = 0xc2;\n                *(iVar9 + 0x75) = *(iVar16 + 8);\n            }\n            fcn.00412570();\n            arg_ch[3] = 1;\n            *arg_ch = uVar6 + 1;\n            goto code_r0x00461067;\n        }\n        fcn.00412570();\n        in_stack_ffffff64 = 0;\n        arg_ch[3] = 1;\n        in_stack_ffffff60 = 1;\n    }\n    else {\n        fcn.00412570();\ncode_r0x00461037:\n        arg_ch[3] = 1;\n    }\n    *arg_ch = 0;\n    fcn.0044d7e4(in_stack_ffffff60, in_stack_ffffff64);\ncode_r0x00461067:\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 2019
    },
    "00461084": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461084(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = fcn.0040cdb4();\n    iVar2 = iVar2 + -1;\n    if (((iVar2 < 0) || (*(in_ECX + 0x1ac) <= iVar2)) || (piVar1 = *(*(in_ECX + 0x1a8) + iVar2 * 4),  *piVar1 == 0)) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(*piVar1);\n        **(*(in_ECX + 0x1a8) + iVar2 * 4) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 210
    },
    "004610e5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004610e5(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    arg_8h = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(**(iVar1 + 8));\n    piVar4 = arg_ch;\n    if (arg_8h == 0) {\n        fcn.00412570();\n        *piVar4 = -1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0x1ac);\n        uVar5 = 0;\n        if (uVar2 != 0) {\n            ppiVar3 = *(in_ECX + 0x1a8);\n            do {\n                if (**ppiVar3 == 0) break;\n                uVar5 = uVar5 + 1;\n                ppiVar3 = ppiVar3 + 1;\n            } while (uVar5 < uVar2);\n        }\n        if (uVar5 == uVar2) {\n            fcn.004628d9(&arg_8h);\n        }\n        else {\n            **(*(in_ECX + 0x1a8) + uVar5 * 4) = arg_8h;\n        }\n        piVar4 = arg_ch;\n        fcn.00412570();\n        *piVar4 = uVar5 + 1;\n    }\n    piVar4[3] = 1;\n    return 0;\n}\n",
        "token_count": 384
    },
    "00461836": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461836(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar4 = arg_ch;\n    iVar3 = arg_8h;\n    var_4h = *(arg_8h + 8);\n    fcn.00412570();\n    *puVar4 = 0;\n    var_8h = 0;\n    puVar4[3] = 1;\n    if (1 < var_4h) {\n        var_8h = fcn.0040cdb4();\n    }\n    if (((var_4h == 0) || (iVar1 = fcn.0040cdb4(),  iVar1 == -1)) ||\n       (iVar3 = **(iVar3 + 4),  fcn.004084a6(),  *(*(iVar3 + 8) + 4) == 0)) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    }\n    else {\n        fcn.004084a6();\n        fcn.00446f5b(&arg_8h + 3);\n        uVar2 = var_4h;\n        if (arg_8h._3_1_ == '\\0') goto code_r0x00461ab9;\n    }\n    arg_8h = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x410, 0, uVar2);\n    if ((arg_8h == 0) || (arg_8h == -1)) {\ncode_r0x00461ab9:\n        fcn.0044d7e4(1, 0);\n        return 0;\n    }\n    if (var_8h == 0) {\n        iVar3 = (*_sym.imp.PSAPI.DLL_GetProcessMemoryInfo)(arg_8h, &var_30h, 0x28);\n        if (iVar3 != 0) {\n            fcn.00403320(puVar4, 1);\n            puVar5 = fcn.004114a0(puVar4, 0, 1);\n            fcn.00412570();\n            puVar5[1] = 0;\n            puVar5[3] = 2;\n            *puVar5 = var_24h;\n            puVar4 = fcn.004114a0(puVar4, 0, 1);\n            fcn.00412570();\n            puVar4[1] = 0;\n            puVar4[3] = 2;\n            *puVar4 = var_28h;\n            goto code_r0x00461aad;\n        }\n    }\n    else if ((var_8h == 1) && (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcessIoCounters)(arg_8h, &var_38h),  iVar3 != 0)) {\n        fcn.00403320(puVar4, 1);\n        puVar4 = fcn.004114a0(puVar4, 0, 1);\n        fcn.00412570();\n        puVar4[3] = 2;\n        *puVar4 = var_38h;\n        puVar4[1] = var_34h;\n        puVar4 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar4[3] = 2;\n        *puVar4 = var_30h;\n        puVar4[1] = var_2ch;\n        puVar4 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar4[3] = 2;\n        *puVar4 = var_28h;\n        puVar4[1] = var_24h;\n        puVar4 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar4[3] = 2;\n        *puVar4 = var_20h;\n        puVar4[1] = var_1ch;\n        puVar4 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar4[3] = 2;\n        *puVar4 = var_18h;\n        puVar4[1] = var_14h;\n        puVar4 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar4[3] = 2;\n        *puVar4 = var_10h;\n        puVar4[1] = var_ch;\n        goto code_r0x00461aad;\n    }\n    fcn.0044d7e4(2, 0);\ncode_r0x00461aad:\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h);\n    return 0;\n}\n",
        "token_count": 1220
    },
    "00461cc7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461cc7(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint in_ECX;\n    uint var_4h;\n    \n    puVar1 = arg_ch;\n    fcn.00412570();\n    *puVar1 = 0;\n    puVar1[3] = 1;\n    fcn.0044d7e4(1, 0);\n    fcn.004084a6();\n    fcn.00446f5b(&arg_ch + 3);\n    if (arg_ch._3_1_ == '\\0') {\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x200, 0, in_ECX);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = fcn.0040cdb4();\n    if (iVar3 == 0) {\n        uVar4 = 0x40;\n    }\n    else if (iVar3 == 1) {\n        uVar4 = 0x4000;\n    }\n    else if (iVar3 == 2) {\n        uVar4 = 0x20;\n    }\n    else if (iVar3 == 3) {\n        uVar4 = 0x8000;\n    }\n    else if (iVar3 == 4) {\n        uVar4 = 0x80;\n    }\n    else {\n        if (iVar3 != 5) goto code_r0x00461d9f;\n        uVar4 = 0x100;\n    }\n    (*_sym.imp.KERNEL32.dll_SetPriorityClass)(iVar2, uVar4);\n    fcn.00412570();\n    puVar1[3] = 1;\n    *puVar1 = 1;\n    fcn.0044d7e4(0, 0);\ncode_r0x00461d9f:\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    return 0;\n}\n",
        "token_count": 464
    },
    "00461f45": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461f45(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    fcn.004623c5(1, 1, arg_8h, arg_ch);\n    iVar1 = fcn.00407be1();\n    if (*(iVar1 + 0x14) == 0) {\n        *(in_ECX + 0xfc) = 7;\n        fcn.0040e1f0(0);\n        arg_8h_00 = fcn.00407be1();\n        fcn.0040d89e(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 164
    },
    "00461fa1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461fa1(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    fcn.004623c5(1, 0, arg_8h, arg_ch);\n    iVar1 = fcn.00407be1();\n    if (*(iVar1 + 0x14) == 0) {\n        *(in_ECX + 0xfc) = 7;\n        fcn.0040e1f0(0);\n        arg_8h_00 = fcn.00407be1();\n        fcn.0040d89e(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 164
    },
    "00462015": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462015(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    fcn.00462121(1, arg_8h, *(arg_8h + 8), arg_ch);\n    iVar1 = fcn.00407be1();\n    if (*(iVar1 + 0x14) == 0) {\n        *(in_ECX + 0xfc) = 7;\n        fcn.0040e1f0(0);\n        arg_8h_00 = fcn.00407be1();\n        fcn.0040d89e(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 170
    },
    "004620f6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004620f6(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"kernel32.dll\");\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"GetProcessId\");\n            param_1[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00462121": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00462121(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, double *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint in_ECX;\n    uint pExecInfo;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    uint32_t var_50h;\n    int32_t hObject;\n    uint var_30h;\n    int32_t hLibModule;\n    uint var_18h;\n    uint uStack24;\n    int32_t var_10h;\n    double dStack24;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    dStack24 = CONCAT44(in_ECX, uStack24);\n    fcn.0040d3d2();\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 1;\n    fcn.00421970(&pExecInfo, 0, 0x3c);\n    if ((1 < arg_10h) && (iVar4 = *(*(arg_ch + 4) + 4),  fcn.004084a6(),  ***(iVar4 + 8) != 0)) {\n        fcn.004084a6();\n        var_4h = fcn.00403bcf();\n    }\n    if (2 < arg_10h) {\n        fcn.004084a6();\n        var_8h = fcn.00403bcf();\n    }\n    if ((3 < arg_10h) && (iVar4 = *(*(arg_ch + 4) + 0xc),  fcn.004084a6(),  ***(iVar4 + 8) != 0)) {\n        iVar4 = *(*(arg_ch + 4) + 0xc);\n        cVar3 = fcn.0041d5f6(0x29);\n        if (cVar3 == '\\0') {\n            fcn.004084a6();\n            fcn.0040c935(*(iVar4 + 8));\n        }\n    }\n    if (4 < arg_10h) {\n        var_ch = fcn.0040cdb4();\n        var_ch = var_ch & 0xffff;\n    }\n    fcn.00421970(&pExecInfo, 0, 0x3c);\n    var_60h = var_30h;\n    pExecInfo = 0x3c;\n    var_68h = 0x40;\n    var_64h = 0;\n    iVar4 = **(arg_ch + 4);\n    fcn.004084a6();\n    iVar2 = var_4h;\n    iVar1 = var_8h;\n    var_5ch = **(iVar4 + 8);\n    var_50h = var_ch;\n    var_58h = var_4h;\n    var_54h = var_8h;\n    iVar4 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n    if (iVar2 != 0) {\n        fcn.0042017e(iVar2);\n    }\n    if (iVar1 != 0) {\n        fcn.0042017e(iVar1);\n    }\n    if (iVar4 == 0) {\n        fcn.0044d7e4(1, 0);\n        fcn.00412570();\n        *(arg_14h + 0xc) = 1;\n        *arg_14h = 0;\n    }\n    else if (arg_8h == '\\0') {\n        fcn.00412570();\n        *arg_14h = 0xffffffff;\n        *(arg_14h + 0xc) = 1;\n        if (hObject != 0) {\n            hLibModule = 0;\n            var_18h = 0;\n            cVar3 = fcn.004620e4();\n            if (cVar3 != '\\0') {\n                pcVar5 = fcn.0045f749(hObject);\n                iVar4 = (*pcVar5)();\n                dStack24 = iVar4;\n                if (iVar4 < 0) {\n                    dStack24 = dStack24 + *0x4b6568;\n                }\n                fcn.00412570();\n                *(arg_14h + 0xc) = 3;\n                *arg_14h = dStack24;\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            if (hLibModule != 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n            }\n        }\n    }\n    else {\n        *(var_10h + 0x470) = hObject;\n    }\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1125
    },
    "004623c5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004623c5(uint arg_8h, uint arg_ch, int32_t arg_10h, double *arg_14h)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uchar *arg_8h_00;\n    int32_t iVar4;\n    uint arg_8h_01;\n    int32_t in_ECX;\n    uchar *extraout_ECX;\n    uchar *extraout_ECX_00;\n    uchar *noname_4;\n    uchar *puVar5;\n    int32_t extraout_EDX;\n    uint8_t uVar6;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint32_t uVar7;\n    bool bVar8;\n    bool bVar9;\n    uint arg_ch_00;\n    uchar *arg_8h_02;\n    uchar *arg_8h_03;\n    uchar *puVar10;\n    double dVar11;\n    uint uStack180;\n    int32_t iStack176;\n    uchar *puStack172;\n    uchar *puStack168;\n    uint32_t uStack164;\n    uchar *puStack160;\n    uchar *puStack156;\n    uint uStack152;\n    int32_t aiStack140 [14];\n    uchar auStack84 [4];\n    uint auStack80 [10];\n    uint32_t uStack40;\n    uint uStack36;\n    ushort uStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    aiStack140[0] = in_ECX;\n    fcn.00421970(auStack80, 0, 0x44);\n    uStack36 = 1;\n    uStack32 = 1;\n    auStack80[0] = 0x44;\n    puStack172 = NULL;\n    uStack180 = 0;\n    iStack176 = 0;\n    uStack152 = 0;\n    uVar7 = 0;\n    uStack164 = 0;\n    puStack156 = NULL;\n    if (arg_ch == '\\0') {\n        if (3 < *(arg_10h + 8)) {\n            uVar7 = fcn.0040cdb4();\n            goto code_r0x0046246b;\n        }\ncode_r0x0046249d:\n        if (2 < *(arg_10h + 8)) {\ncode_r0x004624ab:\n            uStack32 = fcn.0040cdb4();\n        }\n    }\n    else {\n        uStack152 = fcn.0040cdb4();\n        if (7 < *(arg_10h + 8)) {\n            uVar7 = fcn.0040cdb4();\ncode_r0x0046246b:\n            uVar7 = uVar7 & 0xffff0000;\n            uStack164 = fcn.0040cdb4();\n            uStack164 = uStack164 & 0xffff;\n            if (arg_ch == '\\0') goto code_r0x0046249d;\n        }\n        if (6 < *(arg_10h + 8)) goto code_r0x004624ab;\n        if (arg_ch == '\\0') goto code_r0x0046249d;\n    }\n    if ((uVar7 & 0x10000) != 0) {\n        puStack156 = 0x10;\n    }\n    fcn.004084a6();\n    puStack168 = fcn.00403bcf();\n    if (arg_ch == '\\0') {\n        if (1 < *(arg_10h + 8)) {\n            fcn.004084a6();\n            arg_8h_00 = fcn.00403bcf();\n            if ((arg_8h_00 != NULL) && (iVar4 = fcn.004218fb(arg_8h_00),  iVar4 != 0)) goto code_r0x0046263e;\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_GetCurrentDirectoryW;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0, 0);\n        iVar1 = (iVar4 + 1) * 2;\n        puStack168 = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n        (*pcVar2)();\n        arg_8h_00 = puStack160;\n        in_ECX = aiStack140[0];\n    }\n    else {\n        puStack172 = puStack168;\n        fcn.004084a6();\n        uStack180 = fcn.00403bcf();\n        fcn.004084a6();\n        iStack176 = fcn.00403bcf();\n        fcn.004084a6();\n        puStack168 = fcn.00403bcf();\n        if (5 < *(arg_10h + 8)) {\n            fcn.004084a6();\n            arg_8h_00 = fcn.00403bcf();\n            if ((arg_8h_00 != NULL) && (iVar4 = fcn.004218fb(arg_8h_00),  iVar4 != 0)) goto code_r0x00462609;\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_GetSystemDirectoryW;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(0, 0);\n        iVar1 = (iVar4 + 1) * 2;\n        arg_8h_00 = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n        puStack168 = arg_8h_00;\n        (*pcVar2)();\n        in_ECX = aiStack140[0];\n    }\ncode_r0x00462609:\n    if (arg_ch != '\\0') {\n        fcn.0040ca8e(0x49dbf0);\n        fcn.0040ca8e(0x49dbf0);\n        fcn.0040ca8e(0x49dbf0);\n    }\ncode_r0x0046263e:\n    uVar7 = uStack164;\n    fcn.00449a8f(uStack164);\n    if (extraout_EDX == 0) {\n        uVar6 = 0;\n        noname_4 = extraout_ECX;\n    }\n    else {\n        iStack24 = fcn.0044a17a();\n        bVar8 = iStack24 == -1;\n        iStack20 = fcn.0044a073();\n        bVar9 = iStack20 == -1;\n        iStack28 = fcn.0044a102();\n        uVar6 = (iStack28 == -1) - 1U & bVar9 - 1U & bVar8 - 1U & 1;\n        noname_4 = extraout_ECX_00;\n        if (uVar6 != 0) {\n            uStack40 = uStack40 | 0x100;\n        }\n    }\n    if (arg_ch == '\\0') {\n        puVar10 = NULL;\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, puStack172, 0, 0, uVar6, puStack160, 0, arg_8h_00);\n        cVar3 = iVar4 != 0;\n    }\n    else {\n        arg_8h_02 = puStack156;\n        arg_8h_03 = puStack172;\n        puVar10 = puStack160;\n        cVar3 = fcn.0043bc90(iStack176, unaff_EBX, uStack180, puStack156, noname_4, puStack172, puStack160, arg_8h_00, \n                             auStack84, aiStack140);\n        iVar4 = fcn.004218fb(arg_8h_03);\n        puVar5 = arg_8h_03;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        iVar4 = fcn.004218fb(arg_8h_02);\n        puVar5 = arg_8h_02;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        iVar4 = fcn.004218fb(noname_4);\n        puVar5 = noname_4;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0042017e(arg_8h_03);\n        fcn.0042017e(arg_8h_02);\n        fcn.0042017e(noname_4);\n    }\n    fcn.0042017e(puVar10);\n    fcn.0042017e(arg_8h_00);\n    if (cVar3 == '\\0') {\n        fcn.0044d7e4(1, 0);\n        arg_ch_00 = 0;\n        arg_8h_01 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00407ba9(arg_8h_01, arg_ch_00);\n        fcn.00412570();\n        *(arg_14h + 0xc) = 1;\n        *arg_14h = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iStack176);\n        if (uVar6 != 0) {\n            fcn.00449d09();\n            iStack176 = unaff_ESI;\n            fcn.0044a37f();\n            fcn.00462881(&uStack180);\n        }\n        if (arg_8h == '\\0') {\n            dVar11 = unaff_ESI;\n            if (unaff_ESI < 0) {\n                dVar11 = dVar11 + *0x4b6568;\n            }\n            fcn.00412570();\n            *arg_14h = dVar11;\n            *(arg_14h + 0xc) = 3;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar7);\n        }\n        else {\n            *(in_ECX + 0x470) = uVar7;\n        }\n    }\n    fcn.00449b29();\n    return 0;\n}\n",
        "token_count": 2324
    },
    "004628d9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004628d9(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.0042010a(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.0041faa0(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0042017e(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    puVar4 = fcn.0042010a(4);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        *puVar4 = *arg_8h;\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 377
    },
    "00462962": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462962(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.0042010a(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.0041faa0(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0042017e(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    iVar4 = fcn.0042010a(0x14);\n    if (iVar4 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = fcn.0045f6af(arg_8h);\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = uVar3;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 383
    },
    "00462a0a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462a0a(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint unaff_EBX;\n    int32_t *arg_8h_00;\n    uint unaff_EDI;\n    uchar *puVar6;\n    uchar *arg_ch_00;\n    uint uVar7;\n    uint in_stack_ffffff80;\n    uchar auStack124 [4];\n    uchar auStack120 [4];\n    uint uStack116;\n    uint uStack96;\n    int32_t *piStack92;\n    uchar auStack76 [16];\n    uchar auStack60 [16];\n    int32_t aiStack44 [10];\n    \n    iVar4 = *(arg_8h + 8);\n    uStack116 = 0x462a2b;\n    fcn.0040d3d2();\n    uStack116 = 0x462a34;\n    fcn.0040d3d2();\n    uStack116 = 0x462a3d;\n    fcn.0040d3d2();\n    uStack116 = 0x462a46;\n    fcn.0040d3d2();\n    iVar2 = **(arg_8h + 4);\n    uStack116 = 0x462a52;\n    fcn.004084a6();\n    uVar7 = **(iVar2 + 8);\n    fcn.0040caee(uVar7);\n    arg_ch_00 = &stack0xffffffb4;\n    arg_8h_00 = &stack0xffffffd4;\n    fcn.00463d7b(arg_8h_00, arg_ch_00, &stack0xffffffc4, uVar7, in_stack_ffffff80);\n    *piStack92 = *piStack92 + 1;\n    uVar7 = unaff_EBX;\n    cVar1 = fcn.00463af7(&stack0xffffff88, &stack0xffffff84, unaff_EBX, 0);\n    if (cVar1 == '\\0') {\n        fcn.0044d7e4(2, 0);\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else if ((piStack92 == NULL) ||\n            (iVar2 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(uStack96, arg_8h_00, &stack0xffffff64), \n            arg_8h_00 = piStack92,  iVar2 == 0)) {\n        puVar6 = &stack0xffffff70;\n        uVar3 = arg_ch_00 | 0x2001f;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(arg_8h_00, uVar7, 0, uVar3);\n        if (iVar2 == 0) {\n            if (iVar4 == 1) {\n                cVar1 = fcn.00463c63();\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(unaff_EBX);\n                if (cVar1 == '\\0') {\n                    fcn.0044d7e4(0xfffffffe, 0);\n                    fcn.00412570();\n                    arg_ch[3] = 1;\n                    *arg_ch = 2;\n                }\n                else {\n                    cVar1 = fcn.00463aba();\n                    if (cVar1 == '\\0') {\n                        iVar4 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(arg_8h_00, unaff_EDI);\n                    }\n                    else {\n                        pcVar5 = fcn.004629ed(arg_8h_00, unaff_EDI, piStack92, 0);\n                        iVar4 = (*pcVar5)();\n                    }\n                    if (iVar4 != 0) {\n                        fcn.00407ba9(iVar4, 0);\n                        fcn.0044d7e4(0xfffffffe, 0);\n                        fcn.00412570();\n                        arg_ch[3] = 1;\n                        *arg_ch = 2;\n                    }\n                    if (piStack92 != NULL) {\n                        (*_sym.imp.KERNEL32.dll_FreeLibrary)(piStack92);\n                    }\n                }\n            }\n            else if (iVar4 == 2) {\n                iVar4 = *(*(arg_8h + 4) + 4);\n                fcn.004084a6();\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(unaff_EBX, **(iVar4 + 8));\n                if (iVar4 != 0) {\n                    if (iVar4 == 2) {\n                        fcn.00412570();\n                        *arg_ch = 0;\n                    }\n                    else {\n                        fcn.00407ba9(iVar4, 0);\n                        fcn.0044d7e4(0xfffffffe, 0);\n                        fcn.00412570();\n                        *arg_ch = 2;\n                    }\n                    arg_ch[3] = 1;\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar3);\n            }\n        }\n        else {\n            fcn.00407ba9(iVar2, 0);\n            fcn.0044d7e4(1, 0);\n            fcn.00412570();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        if (puVar6 != NULL) {\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar6);\n        }\n    }\n    else {\n        fcn.00407ba9(iVar2, 0);\n        fcn.0044d7e4(3, 0);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1364
    },
    "00462d1a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462d1a(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint uVar5;\n    uchar *arg_ch_00;\n    int32_t *piStack656;\n    uchar *arg_ch_01;\n    uint in_stack_fffffd84;\n    uint uStack628;\n    int32_t iStack624;\n    uint lpsz;\n    uchar auStack596 [4];\n    uint uStack592;\n    uchar auStack588 [12];\n    uchar auStack576 [16];\n    uchar auStack560 [556];\n    \n    uStack592 = 0xff;\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    lpsz = 0x49dbf0;\n    iStack624 = 0x462d5f;\n    fcn.0040ca8e(0x49dbf0);\n    iVar4 = **(arg_8h + 4);\n    iStack624 = 0x462d6e;\n    fcn.004084a6();\n    uVar5 = **(iVar4 + 8);\n    fcn.0040caee(uVar5);\n    arg_ch_01 = &stack0xfffffdb0;\n    piStack656 = 0x462d91;\n    piVar2 = unaff_EBX;\n    fcn.00463d7b(&stack0xfffffdc0, arg_ch_01, &stack0xfffffdd0, uVar5, in_stack_fffffd84);\n    piStack656 = piVar2;\n    *piStack656 = *piStack656 + 1;\n    arg_ch_00 = &stack0xfffffd90;\n    uVar5 = unaff_ESI;\n    cVar3 = fcn.00463af7(&stack0xfffffd84, arg_ch_00, lpsz, unaff_EDI);\n    if (cVar3 == '\\0') {\n        uVar5 = 2;\n    }\n    else {\n        if ((iStack624 == 0) ||\n           (iVar4 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(uStack628, unaff_ESI, &stack0xfffffd68), \n           unaff_ESI = unaff_EDI,  iVar4 == 0)) {\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(unaff_ESI, uVar5, 0, arg_ch_01 | 0x20019, &stack0xfffffd70);\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            if (iVar4 == 0) {\n                uVar5 = 0;\n                iVar4 = fcn.0040cdb4(&stack0xfffffdb4, &stack0xfffffd74, 0, 0, 0, &stack0xfffffdac);\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(piStack656, iVar4 + -1);\n                if (iVar4 == 0) {\n                    fcn.0040ca8e(&stack0xfffffd94);\n                }\n                else {\n                    fcn.0044d7e4(0xffffffff, 0);\n                }\n                (*pcVar1)(uVar5);\n            }\n            else {\n                fcn.0044d7e4(1, 0);\n            }\n            if (arg_ch_00 != NULL) {\n                (*pcVar1)(arg_ch_00);\n            }\n            goto code_r0x00462ea1;\n        }\n        uVar5 = 3;\n    }\n    fcn.0044d7e4(uVar5, 0);\ncode_r0x00462ea1:\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 907
    },
    "00462ec7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462ec7(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *arg_8h_00;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uchar *arg_8h_01;\n    uchar *puStack152;\n    int32_t *piStack148;\n    uchar *arg_ch_00;\n    uint in_stack_ffffff80;\n    uchar auStack120 [4];\n    uint uStack116;\n    uint uStack92;\n    int32_t *piStack84;\n    uchar auStack68 [16];\n    uchar auStack52 [16];\n    uchar auStack36 [32];\n    \n    uVar3 = fcn.0042010a(0x8002);\n    fcn.00404bce(uVar3);\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    uStack116 = 0x462f1f;\n    fcn.0040ca8e(0x49dbf0);\n    iVar4 = **(arg_8h + 4);\n    uStack116 = 0x462f2e;\n    fcn.004084a6();\n    uVar3 = **(iVar4 + 8);\n    fcn.0040caee(uVar3);\n    arg_ch_00 = &stack0xffffffbc;\n    arg_8h_00 = &stack0xffffffcc;\n    piStack148 = 0x462f51;\n    fcn.00463d7b(arg_8h_00, arg_ch_00, &stack0xffffffdc, uVar3, in_stack_ffffff80);\n    puStack152 = NULL;\n    piStack148 = piStack84;\n    *piStack84 = *piStack84 + 1;\n    arg_8h_01 = &stack0xffffff88;\n    cVar2 = fcn.00463af7(arg_8h_01, &stack0xffffff8c, unaff_EBX, uStack92);\n    if (cVar2 == '\\0') {\n        uVar3 = 2;\n    }\n    else {\n        if ((unaff_ESI == 0) ||\n           (iVar4 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(unaff_EDI, arg_8h_00, &stack0xffffff68), \n           arg_8h_00 = puStack152,  iVar4 == 0)) {\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(arg_8h_00, 0, 0, arg_ch_00 | 0x20019, &stack0xffffff6c);\n            if (iVar4 == 0) {\n                iVar4 = fcn.0040cdb4(in_stack_ffffff80, &stack0xffffff78, 0, &stack0xffffff7c, 0);\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegEnumValueW)(piStack148, iVar4 + -1);\n                if (iVar4 == 0) {\n                    fcn.0044a6be(&stack0xffffff60);\n                    fcn.00407ba9(arg_8h_01, 0);\n                }\n                else {\n                    fcn.0044d7e4(0xffffffff, 0);\n                }\n                pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(in_stack_ffffff80);\n                if (unaff_EBX != 0) {\n                    (*pcVar1)(unaff_EBX);\n                }\n            }\n            else {\n                fcn.0044d7e4(1, 0);\n                if (unaff_EBX != 0) {\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(unaff_EBX);\n                }\n            }\n            goto code_r0x0046307e;\n        }\n        uVar3 = 3;\n    }\n    fcn.0044d7e4(uVar3, 0);\ncode_r0x0046307e:\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00404fd2();\n    return 0;\n}\n",
        "token_count": 983
    },
    "004630ad": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004630ad(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar8;\n    uchar *puVar9;\n    uchar *puStack168;\n    uchar *puStack164;\n    uint uVar10;\n    uchar *puVar11;\n    uint uVar12;\n    int32_t *piStack132;\n    int32_t *piStack104;\n    int32_t iStack84;\n    int32_t *piStack76;\n    uchar auStack60 [16];\n    uchar auStack44 [16];\n    uchar auStack28 [24];\n    \n    piStack104 = 0x4630ca;\n    fcn.0040ca8e(0x49dbf0);\n    piStack104 = 0x4630d3;\n    fcn.0040d3d2();\n    piStack104 = 0x4630dc;\n    fcn.0040d3d2();\n    piStack104 = 0x4630e5;\n    fcn.0040d3d2();\n    iVar5 = **(arg_8h + 4);\n    piStack104 = 0x4630f4;\n    fcn.004084a6();\n    puVar1 = *(iVar5 + 8);\n    uVar10 = *puVar1;\n    uVar12 = puVar1[1];\n    piStack104 = puVar1[3];\n    *piStack104 = *piStack104 + 1;\n    puVar9 = &stack0xffffffc4;\n    puStack164 = &stack0xffffffd4;\n    piStack132 = 0x463128;\n    fcn.00463d7b(puStack164, puVar9, &stack0xffffffe4, uVar10, uVar12);\n    piStack132 = piStack76;\n    *piStack76 = *piStack76 + 1;\n    cVar4 = fcn.00463af7(&stack0xffffff98, &stack0xffffffa0, unaff_EBX, iStack84);\n    if (cVar4 == '\\0') {\n        uVar10 = 2;\n    }\n    else {\n        piStack132 = NULL;\n        puVar11 = puStack164;\n        if (unaff_ESI != 0) {\n            puStack168 = 0x463185;\n            puStack164 = puVar9;\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)();\n            if (iVar5 != 0) {\n                fcn.00407ba9(iVar5, 0);\n                uVar10 = 3;\n                goto code_r0x004631e6;\n            }\n        }\n        puStack168 = 0x4631c1;\n        iVar5 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n        if (iVar5 == 0) {\n            iVar5 = *(*(arg_8h + 4) + 4);\n            fcn.004084a6();\n            puStack168 = puVar11;\n            puVar9 = &stack0xffffff7c;\n            uVar12 = 0;\n            puVar11 = &stack0xffffff8c;\n            uVar10 = 0;\n            puStack164 = **(iVar5 + 8);\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n            if (iVar5 == 0) {\n                fcn.00407ba9(iStack84, 0);\n                if (puVar9 == NULL) {\ncode_r0x004634dc:\n                    uVar10 = 0xfffffffe;\n                    goto code_r0x004634df;\n                }\n                if (puVar9 < 0x3) {\n                    iVar2 = ((puStack164 >> 1) + 1) * 2;\n                    arg_8h_00 = fcn.0042010a(-(iVar2 >> 0x20 != 0) | iVar2);\n                    iVar5 = *(*(arg_8h + 4) + 4);\n                    fcn.004084a6();\n                    puVar9 = &stack0xffffff5c;\n                    iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(uVar10, **(iVar5 + 8), 0, 0, arg_8h_00, puVar9);\n                    if (iVar5 == 0) {\n                        *(arg_8h_00 + (puVar11 & 0xfffffffe)) = 0;\ncode_r0x004634aa:\n                        iVar5 = 0x4634b2;\n                        iVar8 = arg_8h_00;\n                        fcn.0040ca8e(arg_8h_00);\n                    }\n                    else {\ncode_r0x004634b4:\n                        fcn.00407ba9(iVar5, 0);\n                        puVar9 = NULL;\n                        iVar8 = -2;\n                        fcn.0044d7e4(0xfffffffe, 0);\n                    }\n                    fcn.0042017e(arg_8h_00, iVar8, puVar9, iVar5);\n                }\n                else if (puVar9 == 0x3) {\n                    uVar10 = fcn.0044ad14(puStack164);\n                    iVar5 = *(*(arg_8h + 4) + 4);\n                    fcn.004084a6();\n                    iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                                      (puStack164, **(iVar5 + 8), 0, 0, uVar10, &stack0xffffff58);\n                    if (iVar5 != 0) {\n                        fcn.00407ba9(iVar5, 0);\n                        fcn.0044d7e4(0xfffffffe, 0);\n                        fcn.00412570();\n                        arg_ch[3] = 1;\n                        *arg_ch = 0;\n                    }\n                }\n                else if (puVar9 == 0x4) {\n                    puStack164 = 0x4;\n                    iVar5 = *(*(arg_8h + 4) + 4);\n                    fcn.004084a6();\n                    (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                              (uVar10, **(iVar5 + 8), 0, 0, &stack0xffffff70, &stack0xffffff5c);\n                    fcn.00412570();\n                    arg_ch[3] = 2;\n                    *arg_ch = uVar12;\n                    arg_ch[1] = 0;\n                }\n                else {\n                    if (puVar9 == 0x7) {\n                        iVar2 = ((puStack164 >> 1) + 2) * 2;\n                        arg_8h_00 = fcn.0042010a(-(iVar2 >> 0x20 != 0) | iVar2);\n                        iVar5 = *(*(arg_8h + 4) + 4);\n                        fcn.004084a6();\n                        puVar9 = &stack0xffffff5c;\n                        iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                                          (uVar10, **(iVar5 + 8), 0, 0, arg_8h_00, puVar9);\n                        if (iVar5 != 0) goto code_r0x004634b4;\n                        uVar6 = puVar11 >> 1;\n                        uVar7 = 0;\n                        *(arg_8h_00 + (puVar11 & 0xfffffffe)) = 0;\n                        if (1 < uVar6) {\n                            if (*(arg_8h_00 + -2 + (puVar11 & 0xfffffffe)) == 0) {\n                                uVar6 = uVar6 - 1;\n                            }\n                            if (uVar6 != 0) {\n                                do {\n                                    if (*(arg_8h_00 + uVar7 * 2) == 0) {\n                                        *(arg_8h_00 + uVar7 * 2) = 10;\n                                    }\n                                    uVar7 = uVar7 + 1;\n                                } while (uVar7 < uVar6);\n                            }\n                            if (*(arg_8h_00 + -2 + uVar7 * 2) == 10) {\n                                *(arg_8h_00 + -2 + uVar7 * 2) = 0;\n                            }\n                        }\n                        goto code_r0x004634aa;\n                    }\n                    if (puVar9 != 0xb) goto code_r0x004634dc;\n                    puStack164 = 0x8;\n                    iVar5 = *(*(arg_8h + 4) + 4);\n                    fcn.004084a6();\n                    (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                              (uVar10, **(iVar5 + 8), 0, 0, &stack0xffffff70, &stack0xffffff5c);\n                    fcn.00412570();\n                    arg_ch[3] = 2;\n                    *arg_ch = uVar12;\n                    arg_ch[1] = puVar9;\n                }\n            }\n            else {\n                fcn.00407ba9(iVar5, 0);\n                uVar10 = 0xffffffff;\ncode_r0x004634df:\n                fcn.0044d7e4(uVar10, 0);\n            }\n            pcVar3 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puStack168);\n            if (iStack84 != 0) {\n                puStack168 = 0x463504;\n                (*pcVar3)();\n            }\n            goto code_r0x00463504;\n        }\n        fcn.00407ba9(iVar5, 0);\n        if (piStack132 != NULL) {\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n        uVar10 = 1;\n    }\ncode_r0x004631e6:\n    puStack164 = 0x4631f2;\n    fcn.0044d7e4(uVar10, 0);\ncode_r0x00463504:\n    puStack164 = 0x46350d;\n    fcn.00405cd3();\n    puStack164 = 0x463516;\n    fcn.00405cd3();\n    puStack164 = 0x46351f;\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 2383
    },
    "0046352a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00463619)\n// WARNING: Removing unreachable block (ram,0x00463630)\n// WARNING: Removing unreachable block (ram,0x00463667)\n\nuint __cdecl fcn.0046352a(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t in_ECX;\n    ulong uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    int32_t *piStack136;\n    uchar *arg_8h_00;\n    uint32_t uVar13;\n    int32_t *piStack108;\n    uint uStack80;\n    uint uStack68;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [20];\n    \n    piStack108 = 0x46354a;\n    fcn.0040d3d2();\n    piStack108 = 0x463553;\n    fcn.0040d3d2();\n    piStack108 = 0x46355c;\n    fcn.0040d3d2();\n    piVar1 = *(arg_8h + 8);\n    if ((piVar1 == 0x1) || (piVar1 == 0x4)) {\n        iVar5 = **(arg_8h + 4);\n        piStack108 = 0x463580;\n        fcn.004084a6();\n        puVar2 = *(iVar5 + 8);\n        uVar13 = *puVar2;\n        uVar7 = puVar2[1];\n        piStack108 = puVar2[3];\n        *piStack108 = *piStack108 + 1;\n        arg_8h_00 = &stack0xffffffd8;\n        piStack136 = 0x4635b4;\n        fcn.00463d7b(arg_8h_00, &stack0xffffffc8, &stack0xffffffe8, uVar13, uVar7);\n        *piVar1 = *piVar1 + 1;\n        piStack136 = piVar1;\n        cVar4 = fcn.00463af7(&stack0xffffff94, &stack0xffffff98, in_ECX, uStack80);\n        if (cVar4 != '\\0') {\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                              (arg_8h_00, uStack68, 0, 0x49dbf0, 0, uVar13 | 0x20006, 0, &stack0xffffff78, \n                               &stack0xffffff98);\n            if (iVar5 != 0) {\n                fcn.00407ba9(iVar5, 0);\n                fcn.0044d7e4(1, 0);\n                fcn.00412570();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                if (in_ECX != 0) {\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(in_ECX);\n                }\n                goto code_r0x00463a94;\n            }\n            if (1 < uVar7) {\n                iVar5 = *(*(arg_8h + 4) + 8);\n                fcn.004084a6();\n                iVar5 = fcn.00421bc7(**(iVar5 + 8), L\"REG_EXPAND_SZ\");\n                if (iVar5 == 0) {\n                    iVar5 = *(*(arg_8h + 4) + 0xc);\n                    fcn.004084a6();\n                    iVar5 = fcn.004218fb(**(iVar5 + 8));\n                    iVar5 = iVar5 * 2 + 2;\n                    iVar6 = *(*(arg_8h + 4) + 0xc);\n                    fcn.004084a6();\n                    uVar11 = **(iVar6 + 8);\n                    iVar6 = *(*(arg_8h + 4) + 4);\n                    fcn.004084a6();\n                    uVar10 = 2;\n                    uVar12 = **(iVar6 + 8);\ncode_r0x00463761:\n                    iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(piStack136, uVar12, 0, uVar10, uVar11, iVar5);\n                    if (iVar5 != 0) {\n                        fcn.00407ba9(iVar5, 0);\n                        fcn.00412570();\n                        *arg_ch = 0;\ncode_r0x00463a74:\n                        arg_ch[3] = 1;\n                    }\n                }\n                else {\n                    iVar5 = *(*(arg_8h + 4) + 8);\n                    fcn.004084a6();\n                    iVar5 = fcn.00421bc7(**(iVar5 + 8), L\"REG_SZ\");\n                    if (iVar5 == 0) {\n                        iVar5 = *(*(arg_8h + 4) + 0xc);\n                        fcn.004084a6();\n                        iVar6 = fcn.004218fb(**(iVar5 + 8));\n                        iVar5 = *(*(arg_8h + 4) + 0xc);\n                        fcn.004084a6();\n                        uVar11 = **(iVar5 + 8);\n                        iVar5 = *(*(arg_8h + 4) + 4);\n                        fcn.004084a6();\n                        iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                                          (piStack136, **(iVar5 + 8), 0, 1, uVar11, iVar6 * 2 + 2);\n                        if (iVar5 != 0) {\n                            fcn.00407ba9(iVar5, 0);\n                            fcn.00412570();\n                            arg_ch[3] = 1;\n                            *arg_ch = 0;\n                            in_ECX = iVar5;\n                        }\n                    }\n                    else {\n                        iVar5 = *(*(arg_8h + 4) + 8);\n                        fcn.004084a6();\n                        iVar5 = fcn.00421bc7(**(iVar5 + 8), L\"REG_MULTI_SZ\");\n                        if (iVar5 == 0) {\n                            iVar5 = *(*(arg_8h + 4) + 0xc);\n                            fcn.004084a6();\n                            uVar13 = *(*(iVar5 + 8) + 4);\n                            uVar7 = uVar13 + 2;\n                            iVar6 = fcn.0042010a(-(uVar7 * 2 >> 0x20 != 0) | uVar7 * 2);\n                            fcn.004084a6();\n                            iVar5 = iVar6;\n                            fcn.00403b1e(uVar13 + 1);\n                            uVar8 = 0;\n                            *(iVar6 + uVar13 * 2) = 0;\n                            if (uVar13 != 0) {\n                                do {\n                                    if (*(iVar6 + uVar8 * 2) == 10) {\n                                        *(iVar6 + uVar8 * 2) = 0;\n                                    }\n                                    uVar8 = uVar8 + 1;\n                                } while (uVar8 < uVar13);\n                                if (uVar13 != 0) {\n                                    uVar13 = uVar7;\n                                }\n                            }\n                            iVar6 = *(*(arg_8h + 4) + 4);\n                            fcn.004084a6();\n                            iVar6 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                                              (piStack136, **(iVar6 + 8), 0, 7, iVar5, uVar13 * 2);\n                            if (iVar6 != 0) {\n                                fcn.00407ba9(iVar6, 0);\n                                fcn.00412570();\n                                *arg_ch = 0;\n                                arg_ch[3] = 1;\n                                in_ECX = iVar6;\n                            }\n                            fcn.0042017e(iVar5);\n                        }\n                        else {\n                            iVar5 = *(*(arg_8h + 4) + 8);\n                            fcn.004084a6();\n                            iVar5 = fcn.00421bc7(**(iVar5 + 8), L\"REG_DWORD\");\n                            if (iVar5 == 0) {\n                                fcn.0040cdb4();\n                                iVar5 = *(*(arg_8h + 4) + 4);\n                                fcn.004084a6();\n                                uVar12 = 4;\n                                uVar11 = 4;\n                            }\n                            else {\n                                iVar5 = *(*(arg_8h + 4) + 8);\n                                fcn.004084a6();\n                                iVar5 = fcn.00421bc7(**(iVar5 + 8), L\"REG_QWORD\");\n                                if (iVar5 != 0) {\n                                    iVar5 = *(*(arg_8h + 4) + 8);\n                                    fcn.004084a6();\n                                    iVar5 = fcn.00421bc7(**(iVar5 + 8), L\"REG_BINARY\");\n                                    if (iVar5 == 0) {\n                                        uVar11 = fcn.0044be47();\n                                        fcn.004084a6();\n                                        uVar9 = fcn.0044be8a();\n                                        iVar5 = uVar9;\n                                        uVar10 = 3;\n                                        uVar12 = *(uVar9 >> 0x20);\n                                        goto code_r0x00463761;\n                                    }\n                                    fcn.00412570();\n                                    *arg_ch = 0;\n                                    goto code_r0x00463a74;\n                                }\n                                fcn.0040d00b();\n                                iVar5 = *(*(arg_8h + 4) + 4);\n                                fcn.004084a6();\n                                uVar12 = 8;\n                                uVar11 = 0xb;\n                            }\n                            iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                                              (piStack136, **(iVar5 + 8), 0, uVar11, &stack0xffffff8c, uVar12);\n                            if (iVar5 != 0) {\n                                fcn.00407ba9(iVar5, 0);\n                                fcn.00412570();\n                                *arg_ch = 0;\n                                goto code_r0x00463a74;\n                            }\n                        }\n                    }\n                }\n            }\n            pcVar3 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(piStack136);\n            if (in_ECX != 0) {\n                (*pcVar3)(in_ECX);\n            }\n            goto code_r0x00463a94;\n        }\n        fcn.0044d7e4(2, 0);\n    }\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\ncode_r0x00463a94:\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 2514
    },
    "00463acc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463acc(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"advapi32.dll\");\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RegDeleteKeyExW\");\n            param_1[2] = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00463af7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00463af7(code **arg_8h, uint *arg_ch, uint lpsz, uint cchLength)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint extraout_ECX;\n    uint8_t uVar3;\n    uint *arg_8h_00;\n    uint uVar4;\n    uint var_10h;\n    \n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n    *arg_ch = 0;\n    arg_8h_00 = &var_10h;\n    uVar4 = extraout_ECX;\n    fcn.00463e59(arg_8h_00);\n    cVar1 = fcn.0041f885(arg_8h_00, uVar4);\n    fcn.00405cd3();\n    if (cVar1 != '\\0') {\n        fcn.0041e617(0x4b457c);\n        if (*(*0x4c236c + 0x30) != '\\0') {\n            *arg_ch = 0x100;\n        }\n    }\n    cVar1 = fcn.0041f885();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0041f885();\n        if (cVar1 != '\\0') goto code_r0x00463c47;\n        cVar1 = fcn.0041f885();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.0041f885();\n            if (cVar1 != '\\0') goto code_r0x00463c3c;\n            cVar1 = fcn.0041f885();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.0041f885();\n                if (cVar1 != '\\0') goto code_r0x00463c31;\n                cVar1 = fcn.0041f885();\n                if (cVar1 == '\\0') {\n                    cVar1 = fcn.0041f885();\n                    if (cVar1 != '\\0') goto code_r0x00463c26;\n                    cVar1 = fcn.0041f885();\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.0041f885();\n                        if (cVar1 == '\\0') {\n                            uVar3 = 0;\n                            goto code_r0x00463c52;\n                        }\n                    }\n                    *arg_8h = 0x80000003;\n                }\n                else {\ncode_r0x00463c26:\n                    *arg_8h = 0x80000001;\n                }\n            }\n            else {\ncode_r0x00463c31:\n                *arg_8h = 0x80000005;\n            }\n        }\n        else {\ncode_r0x00463c3c:\n            *arg_8h = 0x80000000;\n        }\n    }\n    else {\ncode_r0x00463c47:\n        *arg_8h = reloc.WSOCK32.dll_bind;\n    }\n    uVar3 = 1;\ncode_r0x00463c52:\n    uVar2 = fcn.00405cd3();\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 742
    },
    "00463c63": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00463c63(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint lpSubKey;\n    uint var_24h;\n    uint32_t var_1ch;\n    int32_t hLibModule;\n    uint var_10h;\n    uint32_t var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    var_4h = 0xff;\n    var_ch = param_2;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(param_1, 0, &lpSubKey, &var_4h, 0, 0, 0, &var_24h);\n    if (iVar2 != 0x103) {\n        var_1ch = param_2 | 0x20019;\n        do {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(param_1, &lpSubKey, 0, var_1ch, &hKey);\n            if (iVar2 != 0) {\n                return 0;\n            }\n            cVar1 = fcn.00463c63();\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            hLibModule = 0;\n            var_10h = 0;\n            cVar1 = fcn.00463aba();\n            if (cVar1 == '\\0') {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(param_1, &lpSubKey);\n            }\n            else {\n                pcVar3 = fcn.004629ed(param_1, &lpSubKey, var_ch, 0);\n                iVar2 = (*pcVar3)();\n            }\n            if (iVar2 != 0) {\n                if (hLibModule == 0) {\n                    return 0;\n                }\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n                return 0;\n            }\n            if (hLibModule != 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n            }\n            var_4h = 0xff;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(param_1, 0, &lpSubKey, &var_4h, 0, 0, 0, &var_24h);\n        } while (iVar2 != 0x103);\n    }\n    return 1;\n}\n",
        "token_count": 578
    },
    "00463e8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00463e8c(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    char cVar3;\n    char cVar4;\n    char cVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    int32_t extraout_EDX;\n    uint var_10h;\n    \n    fcn.0040ca8e(0x49dbf0);\n    if (*(arg_8h + 8) == 0) {\n        cVar3 = '\\0';\n    }\n    else {\n        cVar3 = fcn.0041e3ee();\n        arg_8h = extraout_EDX;\n    }\n    if (*(arg_8h + 8) < 2) {\n        cVar4 = '\\0';\n    }\n    else {\n        cVar4 = fcn.0041e3ee();\n    }\n    if (*(in_ECX + 0x494) == 0) {\n        uVar6 = 2;\n    }\n    else {\n        cVar5 = fcn.00449c3b();\n        puVar2 = *(in_ECX + 0x494);\n        if (cVar5 != '\\0') {\n            if (cVar3 == '\\0') {\n                arg_ch = fcn.00449c73(arg_ch);\n            }\n            else {\n                arg_ch = fcn.00449bee(arg_ch, 1);\n            }\n            if (cVar4 == '\\0') {\n                fcn.0040d3d2();\n                fcn.0044be47();\n                uVar6 = fcn.00448553();\n                fcn.004080ea(uVar6, 0, arg_ch);\n                fcn.0042017e(uVar6);\n                fcn.00407bef(&var_10h);\n                fcn.00405cd3();\n            }\n            fcn.00407ba9(arg_ch, 0);\n            return 0;\n        }\n        piVar1 = puVar2 + 1;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            (***puVar2)(1);\n        }\n        *(in_ECX + 0x494) = 0;\n        uVar6 = 1;\n    }\n    fcn.0044d7e4(uVar6, 0);\n    return 0;\n}\n",
        "token_count": 539
    },
    "00463fc5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00463fc5(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint lpBuffer;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040cdb4();\n    fcn.0046418b(&var_4h, in_ECX + 0x488);\n    cVar1 = fcn.00402e2a(0);\n    if (cVar1 == '\\0') {\n        fcn.0044d7e4(2, 0);\n    }\n    else {\n        if (*(arg_8h + 8) < 2) {\n            fcn.00449cce();\n        }\n        else {\n            cVar1 = fcn.0044a112();\n            if (cVar1 == '\\0') {\n                fcn.0044d7e4(1, 0);\n            }\n            else {\n                cVar1 = fcn.0040d2c0(0xb);\n                if (cVar1 == '\\0') {\n                    fcn.004084a6();\n                    lpBuffer = fcn.00448932();\n                    uVar2 = fcn.004223f0(lpBuffer);\n                }\n                else {\n                    lpBuffer = fcn.0044be47();\n                    uVar2 = fcn.0044be8a();\n                }\n                uVar2 = fcn.0044a0ba(lpBuffer, uVar2);\n                fcn.00412570();\n                arg_ch[3] = 1;\n                *arg_ch = uVar2;\n                if (cVar1 == '\\0') {\n                    fcn.0042017e(lpBuffer);\n                }\n            }\n        }\n        cVar1 = fcn.00449d53();\n        if (cVar1 == '\\0') {\n            fcn.00464359(&var_4h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 450
    },
    "004641f9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004641f9(int32_t arg_8h, uint arg_ch, code *arg_10h, code *arg_14h, code *arg_18h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    float10 fVar3;\n    uint var_20h;\n    int32_t var_10h;\n    uint var_8h;\n    double dStack16;\n    uint var_1h;\n    \n    fcn.0040ca8e(0x49dbf0);\n    fVar3 = fcn.00412620();\n    dStack16 = fVar3;\n    if (*(arg_8h + 8) < 2) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.0041e3ee();\n    }\n    if (*(arg_8h + 8) < 3) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = fcn.0041e3ee();\n    }\n    var_10h = in_ECX + 0x488;\n    fcn.0046418b(&var_8h, var_10h);\n    cVar2 = fcn.00402e2a(0);\n    if (cVar2 == '\\0') {\n        fcn.0044d7e4(2, 0);\n    }\n    else {\n        cVar2 = (*arg_18h)();\n        if (cVar2 == '\\0') {\n            fcn.0044d7e4(1, 0);\n        }\n        else {\n            if (cVar1 == '\\0') {\n                arg_8h = (*arg_14h)(arg_ch);\n            }\n            else {\n                arg_8h = (*arg_10h)(arg_ch, 1);\n            }\n            if (var_1h == '\\0') {\n                fcn.0040d3d2();\n                fcn.0044be47();\n                arg_8h_00 = fcn.00448553();\n                fcn.004080ea(arg_8h_00, 0, arg_8h);\n                fcn.0042017e(arg_8h_00);\n                fcn.00407bef(&var_20h);\n                fcn.00405cd3();\n            }\n            fcn.00407ba9(arg_8h, 0);\n        }\n        cVar1 = fcn.00449d53();\n        if (cVar1 == '\\0') {\n            fcn.00464359(&var_8h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 633
    },
    "00465ba4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465ba4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 9;\n    if (*(arg_8h + 8) != 0) {\n        iVar1 = fcn.0040cdb4();\n        if ((iVar1 < 0) || (0x7f < iVar1)) {\n            iVar1 = 9;\n        }\n    }\n    *0x4c18fc = iVar1;\n    return 0;\n}\n",
        "token_count": 112
    },
    "00465db3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465db3(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = 1;\n    if (*(arg_8h + 8) != 0) {\n        arg_8h_00 = fcn.0040cdb4();\n    }\n    fcn.00446387(arg_8h_00);\n    return;\n}\n",
        "token_count": 93
    },
    "00465dd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465dd8(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x4c10c6 == '\\0') || (*0x4c10c3 != '\\0')) {\n        fcn.0044d7e4(1, 0);\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        if (*(arg_8h + 8) == 0) {\n            fcn.00407e53(0x49dbf0);\n        }\n        else {\n            iVar1 = **(arg_8h + 4);\n            fcn.004084a6();\n            fcn.00407f40(*(iVar1 + 8), 0, 0x80);\n        }\n        fcn.004038e4();\n    }\n    return 0;\n}\n",
        "token_count": 210
    },
    "0046744c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046744c(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uchar *puVar8;\n    uchar *puVar9;\n    int32_t unaff_EBX;\n    code *pcVar10;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint uVar11;\n    int32_t iVar12;\n    uchar *puStack188;\n    int32_t in_stack_ffffff4c;\n    uchar *puVar13;\n    uint32_t uStack156;\n    uchar *puStack144;\n    char cStack140;\n    uchar auStack136 [4];\n    uint uStack132;\n    uint uStack128;\n    uchar auStack120 [16];\n    uchar auStack104 [4];\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    \n    uVar2 = *(arg_8h + 8);\n    puStack144 = NULL;\n    uStack132 = 0;\n    cStack140 = '\\0';\n    auStack136[0] = 0;\n    if (3 < uVar2) {\n        in_stack_ffffff4c = 0x29;\n        cVar1 = fcn.0041d5f6(0x29);\n        if (cVar1 == '\\0') {\n            fcn.004084a6();\n        }\n    }\n    uStack156 = uVar2;\n    if (4 < uVar2) {\n        uStack156 = *(*(arg_8h + 4) + 0x10);\n        puStack188 = 0x4674c7;\n        cVar1 = fcn.0041d5f6(0x29);\n        if (cVar1 == '\\0') {\n            puStack188 = 0x4674d4;\n            cStack140 = fcn.0040cdb4();\n        }\n    }\n    if (5 < uVar2) {\n        puStack188 = 0x4674ec;\n        cVar1 = fcn.0041d5f6(0x29);\n        if (cVar1 == '\\0') {\n            puStack188 = 0x4674f7;\n            fcn.0040cdb4();\n            puStack188 = 0x46750b;\n            uVar2 = fcn.0040cdb4();\n            puStack144 = uVar2 & 0xffffff00 | uVar2 >> 1 & 1;\n            puStack188 = 0x467521;\n            uVar2 = fcn.0040cdb4();\n            uStack156._0_1_ = uVar2 >> 2 & 1;\n        }\n    }\n    uStack100 = 0x30;\n    uStack96 = 0x1a0;\n    if (cStack140 != '\\0') {\n        uStack96 = 0x1a2;\n    }\n    uStack92 = 0;\n    uStack68 = 0;\n    uStack88 = 0;\n    iVar12 = **(arg_8h + 4);\n    fcn.004084a6();\n    uStack64 = **(iVar12 + 8);\n    uStack72 = 0;\n    uStack76 = 0;\n    uStack80 = 0;\n    uStack84 = 0;\n    puVar4 = &stack0xffffff58;\n    puStack188 = 0x46758d;\n    (*_sym.imp.USER32.dll_GetCursorPos)();\n    puVar8 = unaff_ESI + 0x10;\n    unaff_EBX = unaff_EBX + 0x10;\n    puStack188 = &stack0xffffff78;\n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar3);\n    puVar6 = puVar8;\n    if (0x1 < puVar8) {\n        puVar6 = *(*(arg_8h + 4) + 4);\n        cVar1 = fcn.0041d5f6(0x29);\n        if (cVar1 == '\\0') {\n            puVar4 = fcn.0040cdb4();\n        }\n    }\n    if ((0x2 < puVar8) && (cVar1 = fcn.0041d5f6(0x29),  cVar1 == '\\0')) {\n        in_stack_ffffff4c = fcn.0040cdb4();\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(in_ECX + 0xe8), 0xfffffff0);\n    if ((uVar2 & 0x40) != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*(in_ECX + 0xe8));\n        *(in_ECX + 0xe8) = 0;\n    }\n    iVar12 = *(in_ECX + 0xe8);\n    if (iVar12 == 0) {\n        if (uStack156 == 0) {\n            uVar3 = 3;\n        }\n        else {\n            uVar3 = 0x43;\n        }\n        uVar3 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (8, L\"tooltips_class32\", 0, uVar3, 0x80000000, 0x80000000, 0x80000000, 0x80000000, 0, 0, 0, 0)\n        ;\n        pcVar10 = _sym.imp.USER32.dll_SendMessageW;\n        *(in_ECX + 0xe8) = uVar3;\n        (*pcVar10)(uVar3, 0x432, 0, &stack0xffffff58);\n        uVar3 = 0x418;\n        iVar12 = *(in_ECX + 0xe8);\n    }\n    else {\n        puStack144 = &stack0xffffff88;\n        uVar3 = 0x439;\n        pcVar10 = _sym.imp.USER32.dll_SendMessageW;\n    }\n    cVar1 = '\\0';\n    (*pcVar10)(iVar12, uVar3, 0, puStack144);\n    uVar11 = 0x421;\n    uVar3 = *(in_ECX + 0xe8);\n    puVar8 = puVar4;\n    puVar13 = puVar6;\n    iVar5 = (*pcVar10)(uVar3, 0x421, puVar6);\n    if (iVar5 == 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        (*pcVar10)(*(in_ECX + 0xe8), 0x41d, 0, 0);\n    }\n    iVar5 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(in_ECX + 0xe8));\n    if (iVar5 == 0) {\n        (*pcVar10)(*(in_ECX + 0xe8), 0x412, 0, 0xd8f0d8f0);\n        (*pcVar10)(*(in_ECX + 0xe8), 0x411, 1, &stack0xffffff54);\n    }\n    if (cVar1 != '\\0') {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0xe8), &stack0xffffff54);\n        iVar5 = 1 - in_stack_ffffff4c;\n        puVar6 = (unaff_EBX - unaff_EDI) + 1;\n        uVar3 = (*_sym.imp.USER32.dll_MonitorFromPoint)(uVar3, uVar11, 2);\n        uStack128 = 0x28;\n        iVar7 = (*_sym.imp.USER32.dll_GetMonitorInfoW)(uVar3, &stack0xffffff80);\n        if (iVar7 != 0) {\n            (*_sym.imp.USER32.dll_CopyRect)(&stack0xffffff44, &stack0xffffff98);\n        }\n        puVar9 = puStack188;\n        if ((puVar6 < puStack188) ||\n           (puVar9 = in_stack_ffffff4c - (puVar13 + iVar5),  in_stack_ffffff4c - (puVar13 + iVar5) < puVar6)) {\n            puVar6 = puVar9;\n        }\n        if ((puVar4 < puVar8) || (puVar8 = unaff_EDI - iVar12,  puVar8 < puVar4)) {\n            puVar4 = puVar8;\n        }\n    }\n    (*pcVar10)(*(in_ECX + 0xe8), 0x412, 0, puVar4 << 0x10 | puVar6 & 0xffff);\n    return 0;\n}\n",
        "token_count": 2042
    },
    "00468cdb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00468cdb(uint arg_8h, uint *hWnd, uint *arg_10h, int32_t nHeight, uint arg_18h, uint32_t arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar1 = *hWnd;\n    if (hWnd[0x11] != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(hWnd[0x11]);\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    iVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    uVar2 = (*_sym.imp.GDI32.dll_CreateFontW)\n                      ((iVar3 * nHeight) / -0x2d0, 0, 0, 0, arg_18h, arg_1ch & 2, arg_1ch & 4, arg_1ch & 8, 1, 4, 0, \n                       arg_20h, 0, *arg_10h);\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x30, uVar2, 1);\n    if ((*(hWnd + 0x24) == '\\x01') && (arg_24h != '\\0')) {\n        (*_sym.imp.USER32.dll_MoveWindow)(*hWnd, *(hWnd + 0x22), *(hWnd + 0x8a), *(hWnd + 0x23), *(hWnd + 0x8e), 0);\n    }\n    if ((*(hWnd + 0x24) == '\\0') && (arg_24h != '\\0')) {\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x142, 0, 0);\n    }\n    hWnd[0x11] = uVar2;\n    fcn.0046ddee(arg_8h, hWnd, 1);\n    return;\n}\n",
        "token_count": 487
    },
    "00468eef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00468eef(uint arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, uint noname_9, int32_t arg_30h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 2;\n    }\n    if (arg_28h < 0x10) {\n        arg_28h = arg_28h | 2;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    if ((-1 < arg_30h) && (*arg_14h != 0)) {\n        iVar2 = fcn.0041c619(arg_8h, 0, L\"SysAnimate32\", 0, arg_28h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                             arg_20h, 0);\n        *arg_ch = iVar2;\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x467, 0, arg_14h);\n            if (((iVar2 != 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(arg_14h),  iVar2 == 0)) ||\n               (iVar2 = (*pcVar1)(*arg_ch, 0x467, iVar2, arg_30h),  iVar2 != 0)) {\n                if (*0x4c1818 == 0) {\n                    *(arg_ch + 0x86) = 0x300;\n                }\n                return 1;\n            }\n            (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 501
    },
    "00468fb5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00468fb5(int32_t arg_8h, int32_t *arg_ch, uint noname_2, int32_t arg_14h, uint arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (arg_14h != 0) {\n        if (arg_20h == -1) {\n            arg_20h = 0x96;\n        }\n        if (arg_24h == -1) {\n            arg_24h = 0x96;\n        }\n        *(arg_ch + 0x22) = arg_18h;\n        *(arg_ch + 0x8a) = arg_1ch;\n        *(arg_ch + 0x23) = arg_20h;\n        *(arg_ch + 0x8e) = arg_24h;\n        if (*(arg_8h + 0x1cc) == 0) {\n            iVar2 = fcn.0042010a(0x1c);\n            if (iVar2 == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = fcn.0043ed56(***(*0x4c1870 + *0x4c187c * 4));\n            }\n            *(arg_8h + 0x1cc) = uVar3;\n        }\n        iVar2 = fcn.0043ef2d(arg_14h, arg_ch, arg_ch);\n        arg_ch[0x20] = iVar2;\n        if (*arg_ch != 0) {\n            if (*0x4c1818 == 0) {\n                *(arg_ch + 0x86) = 0x300;\n            }\n            pcVar1 = _sym.imp.USER32.dll_SetWindowLongW;\n            (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_ch, 0xfffffff0, -(arg_28h != 0xffffffff) & arg_28h | 0x50010000);\n            (*pcVar1)(*arg_ch, 0xffffffec, -(arg_2ch != 0xffffffff) & arg_2ch | 0x10000);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 539
    },
    "004690be": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004690be(uint *arg_8h, int32_t *arg_ch, uint wParam, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    arg_18h_00 = fcn.0046e0fb(-(arg_28h != 0xffffffff) & arg_28h | 0x10000);\n    bVar3 = (arg_18h_00 & 1) != 0;\n    if (bVar3) {\n        arg_18h_00 = arg_18h_00 ^ 1;\n    }\n    if (arg_2ch == -1) {\n        arg_2ch = 0x100;\n    }\n    iVar1 = fcn.0041c619(arg_8h, arg_2ch, L\"button\", arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, wParam, \n                         arg_2ch, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (bVar3) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x401, wParam, 0);\n        }\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 0x300;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 404
    },
    "00469158": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00469158(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 3;\n    }\n    if ((arg_28h & 7) == 0) {\n        arg_28h = arg_28h | 3;\n    }\n    uVar1 = fcn.0046e0fb(arg_28h | 0x10000);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    iVar2 = fcn.0041c619(arg_8h, arg_2ch, L\"button\", arg_14h, uVar1, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                         arg_2ch, 1);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        arg_ch[0x13] = iVar2;\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 0x200;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 374
    },
    "00469293": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00469293(int32_t arg_8h, int32_t arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    iVar2 = arg_ch;\n    iVar1 = arg_8h;\n    if (arg_14h == -1) {\n        arg_ch = iVar2;\n        if (*(arg_8h + 0x1a0) == 0) {\n            uVar4 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n            *(iVar1 + 0x1a0) = uVar4;\n            *(iVar1 + 0x1a4) = uVar4;\n            *(iVar2 + 0xc) = uVar4;\n            arg_ch = iVar2;\n            if (*(iVar1 + 0x1a0) == 0) goto code_r0x004692d4;\n        }\ncode_r0x0046935d:\n        *(arg_ch + 0x92) = 0;\n        uVar4 = 1;\n    }\n    else {\n        cVar3 = fcn.0040cf2c(arg_14h, &arg_8h, &var_4h);\n        if (cVar3 != '\\0') {\n            arg_14h = **(*0x4c1870 + arg_8h * 4);\n            iVar1 = **(*0x4c1884 + var_4h * 4);\n            cVar3 = *(iVar1 + 0x90);\n            if ((((cVar3 != '\\x0e') && (cVar3 != '\\x0f')) && (cVar3 != '\\x02')) &&\n               ((cVar3 != '\\x03' && (*(iVar1 + 0xc) == 0)))) {\n                uVar4 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                *(arg_ch + 0xc) = uVar4;\n                *(arg_14h + 0x1a4) = uVar4;\n                *(**(*0x4c1884 + var_4h * 4) + 0xc) = *(arg_ch + 0xc);\n                if (*(arg_ch + 0xc) != 0) goto code_r0x0046935d;\n            }\n        }\ncode_r0x004692d4:\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 557
    },
    "0046936b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0046936b(uint arg_8h, uint32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_10h;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 4;\n    }\n    arg_18h_00 = fcn.0046e0fb(arg_28h | 0x10000);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x14;\n    }\n    uVar1 = fcn.0041c619(arg_8h, arg_2ch, L\"SysDateTimePick32\", 0, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, \n                         arg_10h, arg_24h, 1);\n    *arg_ch = uVar1;\n    if (uVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.004486ae(uVar1 & 0xffffff00 | ~(arg_18h_00 >> 3 & 0x1f) & 1, 1);\n        (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch, 0x1002, 0, &var_10h);\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 0x200;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 466
    },
    "00469424": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00469424(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0x3010c0;\n    }\n    if ((arg_28h & 0x800) == 0) {\n        arg_28h = arg_28h | 0x10004;\n    }\n    else {\n        arg_28h = arg_28h | 4;\n    }\n    uVar1 = fcn.0046e0fb(arg_28h);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar2 = fcn.0041c619(arg_8h, arg_2ch, L\"edit\", arg_14h, uVar1, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, arg_20h\n                         , 1);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthW)(iVar2);\n        uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch, 0xb1, uVar1, uVar1);\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n        uVar3 = uVar3 & 0xffffff00 | 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 490
    },
    "004694d3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.004694d3(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    arg_18h_00 = fcn.0046e0fb(-(arg_28h != 0xffffffff) & arg_28h | 0x20007);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar1 = fcn.0041c619(arg_8h, arg_2ch, L\"button\", arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                         arg_2ch, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        arg_ch[0x13] = uVar2;\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n        uVar2 = uVar2 & 0xffffff00 | 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 410
    },
    "00469567": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00469567(uint arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint arg_18h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0x100;\n    }\n    arg_18h_00 = fcn.0046e0fb(arg_28h | 0x10003);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    if (arg_20h == -1) {\n        arg_20h = 0x20;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x20;\n    }\n    iVar2 = fcn.0041c619(arg_8h, arg_2ch, 0x4b184c, 0, arg_18h_00, arg_18h, arg_1ch, 0, 0, arg_10h, arg_2ch, 0);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\ncode_r0x00469621:\n        uVar4 = 0;\n    }\n    else {\n        *(arg_ch + 0x23) = arg_20h;\n        *(arg_ch + 0x8e) = arg_24h;\n        uVar4 = 1;\n        if (*arg_14h != 0) {\n            *(arg_ch + 0x22) = arg_18h;\n            *(arg_ch + 0x8a) = arg_1ch;\n            arg_8h_00 = &arg_30h;\n            fcn.004113a0(arg_8h_00);\n            cVar1 = fcn.0046e305(arg_ch, arg_14h, arg_8h_00, in_stack_ffffffac, in_stack_ffffffb0);\n            if (cVar1 == '\\0') {\n                (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n                goto code_r0x00469621;\n            }\n            (*_sym.imp.USER32.dll_MoveWindow)\n                      (*arg_ch, *(arg_ch + 0x22), *(arg_ch + 0x8a), *(arg_ch + 0x23), *(arg_ch + 0x8e), 1);\n        }\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 0x300;\n        }\n    }\n    uVar3 = fcn.00412570();\n    return uVar3 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 704
    },
    "00469674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00469674(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0x80;\n    }\n    if ((arg_28h & 0x800) == 0) {\n        arg_28h = arg_28h | 0x10000;\n    }\n    else {\n        arg_28h = arg_28h & 0xfffffffb;\n    }\n    uVar1 = fcn.0046e0fb(arg_28h);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x14;\n    }\n    iVar2 = fcn.0041c619(arg_8h, arg_2ch, L\"edit\", arg_14h, uVar1, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, arg_20h\n                         , 1);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 0x200;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 420
    },
    "0046970b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0046970b(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_18h_00 = fcn.0046e0fb(-(arg_28h != 0xffffffff) & arg_28h | 0x100);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    iVar1 = fcn.0041c619(arg_8h, arg_2ch, 0x4b184c, arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                         arg_2ch, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if ((arg_18h_00 & 0x10) != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar1, &lpRect);\n            *(arg_8h + 0x60) = var_8h - lpRect;\n            *(arg_8h + 100) = var_4h - var_ch;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        arg_ch[0x13] = iVar1;\n        uVar2 = 1;\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 463
    },
    "004697b2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.004697b2(uint arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *arg_14h, uint X, uint Y, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint arg_18h;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0xa00002;\n    }\n    arg_18h = fcn.0046e0fb(arg_28h | 0x10001);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar2 = fcn.0041c619(arg_8h, arg_2ch, L\"Listbox\", 0, arg_18h, X, Y, arg_20h, arg_24h, arg_10h, arg_2ch, 1);\n    *arg_ch = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        uVar3 = arg_ch & 0xffffff00;\n    }\n    else {\n        if (*arg_14h != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x180, 0, arg_14h);\n            (*pcVar1)(*arg_ch, 0x186, 0, 0);\n        }\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n        (*_sym.imp.USER32.dll_MoveWindow)(*arg_ch, X, Y, arg_20h, arg_24h, 0);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 489
    },
    "00469882": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl\nfcn.00469882(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h\n            , int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    bool bVar8;\n    ushort auStackY8236 [4052];\n    uint uStackY132;\n    int32_t iStackY128;\n    uint uStackY124;\n    int32_t iStackY120;\n    uint *puStackY116;\n    int32_t iStackY112;\n    uint uStackY108;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_10h;\n    uint var_1h;\n    \n    fcn.00430650();\n    iVar7 = -1;\n    uVar4 = arg_28h;\n    if (arg_28h == 0xffffffff) {\n        uVar4 = 0xc;\n    }\n    uVar5 = fcn.0046e0fb(uVar4 | 0x10001);\n    uVar4 = arg_2ch;\n    if (arg_2ch == 0xffffffff) {\n        uVar4 = 0x220;\n    }\n    bVar8 = (uVar4 & 0x10) != 0;\n    if (bVar8) {\n        uVar4 = uVar4 ^ 0x10;\n    }\n    var_24h = arg_20h;\n    if (arg_20h == -1) {\n        var_24h = 0x96;\n    }\n    var_20h = arg_24h;\n    if (arg_24h == -1) {\n        var_20h = 0x96;\n    }\n    var_1ch = arg_10h;\n    var_18h = var_20h;\n    iVar6 = fcn.0041c619(arg_8h, uVar4, L\"SysListView32\", 0x49dbf0, uVar5, arg_18h, arg_1ch, var_24h, var_20h, arg_10h, \n                         var_20h, 0);\n    piVar2 = arg_ch;\n    *arg_ch = iVar6;\n    if (iVar6 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        if (bVar8) {\n            (*_sym.imp.USER32.dll_SendMessageW)();\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        if (*(arg_8h + 0x188) != 0) {\n            uStackY108 = 0;\n            iStackY112 = *piVar2;\n            puStackY116 = 0x46995a;\n            (*_sym.imp.USER32.dll_SetWindowPos)();\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        var_18h = &stack0xffffdfd4;\n        var_20h = 0;\n        var_24h = 0xf;\n        arg_8h = arg_14h;\n        while( true ) {\n            cVar3 = fcn.0046d71e(&stack0xffffdfd4, &fcn.00469882::arg_8h, 0x4c1824);\n            if (cVar3 == '\\0') break;\n            arg_28h = fcn.004218fb(&stack0xffffdfd4);\n            uStackY108 = 0x4699b4;\n            fcn.00421914(&stack0xffffdfd4, 0x4b4ca4);\n            uStackY108 = 0x1057;\n            iStackY112 = *piVar2;\n            puStackY116 = 0x4699c8;\n            var_1ch = (*pcVar1)();\n            if (0x96 < var_1ch) {\n                var_1ch = 0x96;\n            }\n            *(&stack0xffffdfd4 + arg_28h * 2) = 0;\n            puStackY116 = &fcn.00469882::var_24h;\n            iVar7 = iVar7 + 1;\n            uStackY124 = 0x1061;\n            iStackY128 = *piVar2;\n            uStackY132 = 0x4699f6;\n            iStackY120 = iVar7;\n            (*pcVar1)();\n        }\n        *(piVar2 + 0x25) = iVar7;\n        *(piVar2 + 0x96) = 0xffff;\n        uVar5 = 1;\n        if (*0x4c1818 == 0) {\n            *(piVar2 + 0x86) = 1;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 1238
    },
    "00469a23": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00469a23(uint noname_0, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint arg_8h;\n    uint uVar1;\n    code *pcVar2;\n    char cVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar8;\n    int16_t iStackY8268;\n    uint uStackY160;\n    uint uStackY156;\n    uint uStackY152;\n    int32_t iStackY148;\n    uint uStackY144;\n    uint uStackY140;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t hWnd;\n    \n    hWnd = 0x469a30;\n    fcn.00430650();\n    var_8h = unaff_ESI;\n    hWnd = unaff_EBX;\n    cVar3 = fcn.0040cf2c(arg_18h, &fcn.00469a23::var_8h, &fcn.00469a23::hWnd);\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    if (cVar3 != '\\0') {\n        arg_8h = **(*0x4c1870 + var_8h * 4);\n        uVar1 = ***(*0x4c1884 + hWnd * 4);\n        *(arg_ch + 0x34) = uVar1;\n        *(arg_ch + 0x93) = *(**(*0x4c1884 + hWnd * 4) + 0x93);\n        (*pcVar2)();\n        var_8h = (*pcVar2)();\n        *(arg_ch + 0x94) = var_8h;\n        *(**(*0x4c1884 + hWnd * 4) + 0x94) = var_8h;\n        uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n        fcn.00421970();\n        uVar4 = (*pcVar2)();\n        *(arg_ch + 0x88) = uVar4;\n        iVar8 = 1;\n        arg_18h = 1;\n        fcn.0046d71e(&stack0xffffdfb4, &fcn.00469a23::arg_14h, 0x4c1824);\n        iVar6 = (*pcVar2)();\n        if (iVar6 != -1) {\n            while( true ) {\n                cVar3 = fcn.0046d71e(&stack0xffffdfb4, &fcn.00469a23::arg_14h, 0x4c1824);\n                if (cVar3 == '\\0') {\n                    if (*(arg_ch + 0x93) != -1) {\n                        uStackY140 = 0x469c47;\n                        fcn.0046ddee(arg_8h, **(*0x4c1884 + hWnd * 4), 1);\n                    }\n                    return 1;\n                }\n                if (var_8h <= iVar8) break;\n                if (iStackY8268 != 0) {\n                    uStackY144 = 0x469bb3;\n                    uStackY140 = uVar1;\n                    iVar6 = (*pcVar2)();\n                    if (iVar6 == 0) {\n                        return 0;\n                    }\n                }\n                if ((uVar5 & 1) != 0) {\n                    uStackY144 = 0x469bd2;\n                    uStackY140 = uVar1;\n                    iVar6 = (*pcVar2)();\n                    iVar6 = iVar6 + 0xc;\n                    if (0x96 < iVar6) {\n                        iVar6 = 0x96;\n                    }\n                    uStackY144 = 0;\n                    iStackY148 = arg_18h;\n                    uStackY152 = 0x101d;\n                    uStackY160 = 0x469bed;\n                    uStackY156 = uVar1;\n                    iVar7 = (*pcVar2)();\n                    iVar8 = arg_18h;\n                    if (iVar7 <= iVar6) {\n                        (*pcVar2)();\n                    }\n                }\n                iVar8 = iVar8 + 1;\n                arg_18h = iVar8;\n            }\n            uStackY144 = 0x469c1e;\n            uStackY140 = uVar1;\n            (*pcVar2)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1121
    },
    "00469c50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00469c50(uint *arg_8h, int32_t arg_ch, uint arg_10h, int32_t item, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    uint lpmi;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_10h;\n    int32_t var_4h;\n    \n    lpmi = 0x30;\n    fcn.00421970(&var_30h, 0, 0x2c);\n    puVar4 = arg_8h;\n    if (item == -1) {\n        iVar3 = arg_8h[0x67];\n        if (iVar3 == 0) {\n            uVar2 = (*_sym.imp.USER32.dll_CreateMenu)();\n            puVar4[0x67] = uVar2;\n            (*_sym.imp.USER32.dll_SetMenu)(*puVar4, uVar2);\n            iVar3 = puVar4[0x67];\n            puVar4[0x69] = iVar3;\n        }\n        piVar5 = arg_ch + 0xc;\n        *piVar5 = iVar3;\n    }\n    else {\n        cVar1 = fcn.0040cf2c(item, &arg_8h, &var_4h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        puVar4 = **(*0x4c1870 + arg_8h * 4);\n        iVar3 = *(**(*0x4c1884 + var_4h * 4) + 0xc);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar5 = arg_ch + 0xc;\n        *piVar5 = iVar3;\n        if (*(**(*0x4c1884 + var_4h * 4) + 0x90) != '\\f') {\n            var_30h = 4;\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar3, item, 0, &lpmi);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            *piVar5 = var_20h;\n        }\n        if (*piVar5 == 0) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_IsMenu)(*piVar5);\n        if (iVar3 == 0) {\n            return 0;\n        }\n    }\n    iVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n    if (iVar3 == 0) {\n        return 0;\n    }\n    var_2ch = 0;\n    var_10h = arg_18h;\n    var_24h = arg_10h;\n    var_30h = 0x16;\n    var_20h = iVar3;\n    (*_sym.imp.USER32.dll_InsertMenuItemW)(*piVar5, arg_1ch, 1, &lpmi);\n    if (*(puVar4 + 0x3a) == '\\0') {\n        (*_sym.imp.USER32.dll_DrawMenuBar)(*puVar4);\n    }\n    puVar4[0x69] = iVar3;\n    return 1;\n}\n",
        "token_count": 762
    },
    "00469d97": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00469d97(uint *arg_8h, int32_t arg_ch, uint arg_10h, int32_t item, int16_t *arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lpmii;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    int16_t *var_14h;\n    int32_t var_8h;\n    \n    lpmii = 0x30;\n    fcn.00421970(&var_34h, 0, 0x2c);\n    if (item == -1) {\n        if (arg_8h[0x69] == 0) {\n            return 0;\n        }\n        *(arg_ch + 0xc) = arg_8h[0x67];\n        iVar4 = arg_ch;\n        puVar5 = arg_8h;\n    }\n    else {\n        cVar2 = fcn.0040cf2c(item, &arg_8h, &var_8h);\n        iVar4 = arg_ch;\n        if (cVar2 == '\\0') {\n            return 0;\n        }\n        puVar5 = **(*0x4c1870 + arg_8h * 4);\n        if (puVar5[0x69] == 0) {\n            return 0;\n        }\n        iVar3 = *(**(*0x4c1884 + var_8h * 4) + 0xc);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        *(arg_ch + 0xc) = iVar3;\n        if (*(**(*0x4c1884 + var_8h * 4) + 0x90) == '\\x0e') {\n            var_34h = 4;\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*(arg_ch + 0xc), item, 0, &lpmii);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            *(iVar4 + 0xc) = var_24h;\n        }\n        if (*(iVar4 + 0xc) == 0) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_IsMenu)(*(iVar4 + 0xc));\n        if (iVar3 == 0) {\n            return 0;\n        }\n    }\n    uVar1 = arg_1ch;\n    var_34h = 0x13;\n    var_30h = 0;\n    if (arg_20h == 1) {\n        var_30h = 0x200;\n    }\n    if (*arg_18h == 0) {\n        var_30h = 0x800;\n    }\n    else {\n        var_14h = arg_18h;\n    }\n    var_28h = arg_10h;\n    iVar3 = (*_sym.imp.USER32.dll_InsertMenuItemW)(*(iVar4 + 0xc), arg_1ch, 1, &lpmii);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    *(iVar4 + 0x88) = uVar1;\n    if (*(puVar5 + 0x3a) == '\\0') {\n        (*_sym.imp.USER32.dll_DrawMenuBar)(*puVar5);\n    }\n    return 1;\n}\n",
        "token_count": 795
    },
    "00469ee3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00469ee3(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h, \n            uint32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.0046e0fb(-(arg_28h != 0xffffffff) & arg_28h | 0x10000);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    arg_20h = -(arg_20h != 0xffffffff) & arg_20h;\n    arg_24h = -(arg_24h != 0xffffffff) & arg_24h;\n    iVar3 = fcn.0041c619(arg_8h, arg_2ch, L\"SysMonthCal32\", 0, uVar2, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                         arg_2ch, 1);\n    *arg_ch = iVar3;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if ((arg_20h == 0) || (arg_24h == 0)) {\n            (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x1009, 0, &var_10h);\n            (*_sym.imp.USER32.dll_SetWindowPos)(*arg_ch, 0, arg_18h, arg_1ch, var_8h, var_4h, 4);\n        }\n        fcn.004486ae(1, 1);\n        (*pcVar1)(*arg_ch, 0x1002, 0, &var_20h);\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 0x300;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 533
    },
    "0046a0d6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0046a0d6(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint arg_18h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    arg_18h_00 = fcn.0046e0fb(-(arg_28h != 0xffffffff) & arg_28h);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    iVar2 = fcn.0041c619(arg_8h, arg_2ch, L\"Msctls_Progress32\", 0, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, \n                         arg_10h, arg_2ch, 0);\n    *arg_ch = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x2001, 0, 0xff000000);\n        (*pcVar1)(*arg_ch, 0x409, 0, 0xff000000);\n        (*pcVar1)(*arg_ch, 0x402, 0, 0);\n        (*pcVar1)(*arg_ch, 0x401, 0, 0x640000);\n        uVar3 = (*pcVar1)(*arg_ch, 0x404, 1, 0);\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n        uVar3 = uVar3 & 0xffffff00 | 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 466
    },
    "0046a189": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0046a189(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_18h_00 = fcn.0046e0fb(-(arg_28h != 0xffffffff) & arg_28h | 9);\n    if (*(arg_8h + 0x69) == '\\0') {\n        arg_18h_00 = arg_18h_00 | 0x10000;\n        *(arg_8h + 0x69) = 1;\n    }\n    iVar1 = fcn.0041c619(arg_8h, -(arg_2ch != 0xffffffff) & arg_2ch, L\"button\", arg_14h, arg_18h_00, arg_18h, arg_1ch, \n                         arg_20h, arg_24h, arg_10h, arg_18h_00, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        arg_ch[0x13] = iVar1;\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 0x200;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 394
    },
    "0046a217": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0046a217(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, uint32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint32_t arg_18h_00;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (arg_28h == -1) {\n        arg_28h = 1;\n    }\n    arg_18h_00 = fcn.0046e0fb(arg_28h);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    iVar2 = fcn.0041c619(arg_8h, arg_2ch, L\"msctls_trackbar32\", 0, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, \n                         arg_10h, arg_2ch, 0);\n    *arg_ch = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x405, 0, 0);\n        if ((arg_18h_00 & 1) != 0) {\n            (*pcVar1)(*arg_ch, 0x406, 0, 0x640000);\n            (*pcVar1)(*arg_ch, 0x414, 10, 0);\n        }\n        uVar3 = 1;\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 434
    },
    "0046a2b9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0046a2b9(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint noname_3, uint X, uint Y, int32_t cx, int32_t arg_24h, \n            uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint arg_18h;\n    int32_t iVar2;\n    \n    if (*(arg_8h + 0x188) == 0) {\n        arg_18h = fcn.0046e0fb(-(arg_28h != 0xffffffff) & arg_28h | 0x4014000);\n        arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n        if (cx == -1) {\n            cx = 0x96;\n        }\n        if (arg_24h == -1) {\n            arg_24h = 0x96;\n        }\n        iVar2 = fcn.0041c619(arg_8h, arg_2ch, L\"SysTabControl32\", 0x49dbf0, arg_18h, X, Y, cx, arg_24h, arg_10h, arg_2ch\n                             , 1);\n        *arg_ch = iVar2;\n        if (iVar2 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar2, 0xffffffff, X, Y, cx, arg_24h, 0x20);\n            iVar2 = *arg_ch;\n            *(arg_8h + 0x18c) = 0xffffffff;\n            *(arg_8h + 400) = 0xffffffff;\n            *(arg_8h + 0x194) = 0;\n            *(arg_8h + 0x188) = iVar2;\n            *(arg_8h + 0x198) = 1;\n            if (*0x4c1818 == 0) {\n                *(arg_ch + 0x86) = 0x300;\n            }\n            uVar1 = CONCAT31(iVar2 >> 8, 1);\n        }\n    }\n    else {\n        uVar1 = in_EAX & 0xffffff00;\n    }\n    return uVar1;\n}\n",
        "token_count": 532
    },
    "0046a44d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0046a44d(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    \n    uVar1 = arg_28h;\n    if (arg_28h == 0xffffffff) {\n        uVar1 = 0x37;\n    }\n    uVar1 = fcn.0046e0fb(uVar1 | 0x10000);\n    bVar4 = (uVar1 & 0x100) != 0;\n    if (bVar4) {\n        uVar1 = uVar1 ^ 0x100;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar2 = fcn.0041c619(arg_8h, -(arg_2ch != 0xffffffff) & arg_2ch, L\"SysTreeView32\", 0x49dbf0, uVar1, arg_18h, arg_1ch\n                         , arg_20h, arg_24h, arg_10h, uVar1, 0);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        if (*(arg_8h + 0x188) != 0) {\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar2, 0, 0, 0, 0, 0, 0x13);\n        }\n        *(arg_8h + 0x1ac) = *arg_ch;\n        if (bVar4) {\n            *(arg_ch + 0x24) = 0x10;\n            uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_ch, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_ch, 0xfffffff0, uVar1 | 0x100);\n        }\n        if (*(arg_8h + 0x38) != '\\0') {\n            iVar2 = *(arg_8h + 0x1c);\n            fcn.0040cf2c(arg_10h, &arg_2ch, &arg_28h);\n            fcn.0041acd1(arg_2ch, arg_28h);\n            if (iVar2 != -1) {\n                fcn.0041acd1(arg_2ch, iVar2);\n            }\n        }\n        *(arg_8h + 0x1b4) = 0xffffffff;\n        *(arg_8h + 0x1b8) = 0xffffffff;\n        uVar3 = 1;\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 729
    },
    "0046a7b7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046a7b7(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if ((*arg_8h != 0) && (arg_8h[2] == 0)) {\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_8h, 0xfffffffc, fcn.0046e769);\n        arg_8h[2] = iVar1;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0046a8dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0046a8dc(uint item, uint32_t *hWnd, uint arg_10h)\n\n{\n    ushort *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    code *pcVar11;\n    bool bVar12;\n    bool bVar13;\n    uint uVar14;\n    uint uVar15;\n    uint var_c4h;\n    uint var_c0h;\n    uint32_t var_b8h;\n    int32_t var_a0h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_90h;\n    uint var_88h;\n    uint32_t var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_6eh;\n    uint var_64h;\n    uint32_t var_60h;\n    int32_t var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint32_t var_44h;\n    uint lParam;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint *var_8h;\n    \n    cVar6 = fcn.0040cf2c(item, &var_78h, &var_8h);\n    if (cVar6 == '\\0') {\n        *hWnd = 0;\n        return 0;\n    }\n    piVar3 = *(*0x4c1884 + var_8h * 4);\n    *hWnd = 0xffffffff;\n    pcVar11 = _sym.imp.USER32.dll_SendMessageW;\n    puVar4 = *piVar3;\n    uVar2 = *(puVar4 + 0x24);\n    uVar14 = *puVar4;\n    var_8h = puVar4;\n    if (uVar2 < 0x12) {\n        if (uVar2 == 0x11) {\n            var_2ch = puVar4[4];\n            uVar14 = puVar4[0xd];\n            *hWnd = 0;\n            uVar7 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar14, 0xfffffff0);\n            lParam = 8;\n            var_24h = 0xf000;\n            if (arg_10h == '\\0') {\n                iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(var_8h[0xd], 0x113e, 0, &lParam);\n                if (iVar8 == 0) {\n                    return 0;\n                }\n                if ((uVar7 & 0x100) != 0) {\n                    *hWnd = (-(var_28h >> 0xc != 1) & 0xfffffffd) + 4;\n                }\n                if ((var_28h & 2) != 0) {\n                    *hWnd = *hWnd | 0x100;\n                }\n                if ((var_28h & 0x20) != 0) {\n                    *hWnd = *hWnd | 0x400;\n                }\n                if ((var_28h & 0x10) == 0) {\n                    return 0;\n                }\n                *hWnd = *hWnd | 0x200;\n                return 0;\n            }\n            iVar8 = fcn.0042010a(0x2000);\n            uVar14 = var_8h[0xd];\n        }\n        else {\n            if (uVar2 < 0xb) {\n                if (uVar2 == 10) {\n                    uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x130b, 0, 0);\n                    *hWnd = uVar7;\n                    if (arg_10h == '\\0') {\n                        return 0;\n                    }\n                    var_94h = 8;\n                    (*pcVar11)(uVar14, 0x133c, uVar7, &var_94h);\n                    goto code_r0x0046afe1;\n                }\n                if (uVar2 == 0) {\n                    iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x147, 0, 0);\n                    pcVar11 = _sym.imp.USER32.dll_SendMessageW;\n                    if (iVar8 != -1) {\n                        iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x149, iVar8, 0);\n                        iVar5 = (iVar9 + 1) * 2;\n                        iVar9 = fcn.0042010a(-(iVar5 >> 0x20 != 0) | iVar5);\n                        uVar15 = 0x148;\ncode_r0x0046a9b2:\n                        (*pcVar11)(uVar14, uVar15, iVar8, iVar9);\n                        return iVar9;\n                    }\ncode_r0x0046ad97:\n                    iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0xe, 0, 0);\n                    iVar5 = (iVar8 + 1U) * 2;\n                    iVar9 = fcn.0042010a(-(iVar5 >> 0x20 != 0) | iVar5);\n                    (*_sym.imp.USER32.dll_GetWindowTextW)(uVar14, iVar9, iVar8 + 1U);\n                    return iVar9;\n                }\n                if (uVar2 == 1) {\n                    iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x188, 0, 0);\n                    pcVar11 = _sym.imp.USER32.dll_SendMessageW;\n                    if (iVar8 != -1) {\n                        iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x18a, iVar8, 0);\n                        iVar5 = (iVar9 + 1) * 2;\n                        iVar9 = fcn.0042010a(-(iVar5 >> 0x20 != 0) | iVar5);\n                        uVar15 = 0x189;\n                        goto code_r0x0046a9b2;\n                    }\n                    goto code_r0x0046ad97;\n                }\n                if (uVar2 != 8) goto code_r0x0046ad97;\n                uVar15 = 0x408;\n                goto code_r0x0046afda;\n            }\n            if (uVar2 == 0xc) {\n                *hWnd = 0;\n                return 0;\n            }\n            if (uVar2 < 0xe) goto code_r0x0046ad97;\n            if (uVar2 < 0x10) {\n                iVar8 = (*_sym.imp.USER32.dll_IsMenu)(puVar4[3]);\n                if (iVar8 == 0) {\n                    return 0;\n                }\n                iVar8 = fcn.0042010a(0x208);\n                var_c4h = 0x30;\n                if (arg_10h == '\\0') {\n                    var_c0h = 1;\n                    iVar9 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(var_8h[3], item, 0, &var_c4h);\n                    if (iVar9 != 0) {\n                        fcn.0042017e(iVar8);\n                        var_7ch = (-((var_b8h & 3) != 0) & 0x40) + 0x40;\n                        *hWnd = var_b8h;\n                        if ((var_b8h & 0x8080) != 0) {\n                            var_7ch = var_7ch | 0x100;\n                        }\n                        if ((var_b8h & 8) == 0) {\n                            var_7ch = var_7ch | 4;\n                        }\n                        else {\n                            var_7ch = var_7ch | 1;\n                        }\n                        if ((var_b8h & 0x1000) != 0) {\n                            var_7ch = var_7ch | 0x200;\n                        }\n                        goto code_r0x0046afe1;\n                    }\n                }\n                else {\n                    var_c0h = 0x10;\n                    var_9ch = 0x104;\n                    var_a0h = iVar8;\n                    iVar9 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(var_8h[3], item, 0);\n                    if (iVar9 != 0) {\n                        return iVar8;\n                    }\n                    *hWnd = 0;\n                }\n                goto code_r0x0046aad2;\n            }\n            if (uVar2 != 0x10) goto code_r0x0046ad97;\n            *hWnd = 0;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x110a, 9, 0);\n            if (var_2ch == 0) {\n                return 0;\n            }\n            lParam = 4;\n            if (arg_10h == '\\0') {\n                iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x113e, 0, &lParam);\n                var_7ch = var_ch;\n                if (iVar8 == 0) {\n                    return 0;\n                }\n                goto code_r0x0046afe1;\n            }\n            iVar8 = fcn.0042010a(0x2000);\n        }\n        var_1ch = 0xfff;\n        lParam = 1;\n        var_20h = iVar8;\n        iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x113e, 0, &lParam);\n        if (iVar9 != 0) {\n            return iVar8;\n        }\ncode_r0x0046aad2:\n        fcn.0042017e(iVar8);\n        return 0;\n    }\n    if (uVar2 != 0x12) {\n        if (uVar2 == 0x13) {\n            uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x100c, 0xffffffff, 2);\n            *hWnd = uVar7;\n            fcn.00421970(&var_64h, 0, 0x34);\n            var_60h = *hWnd;\n            var_64h = 4;\n            iVar8 = (*pcVar11)(uVar14, 0x104b, 0, &var_64h);\n            var_7ch = -(iVar8 != 0) & var_44h;\n        }\n        else if (uVar2 == 0x14) {\n            *hWnd = 0xffffffff;\n            uVar7 = (*_sym.imp.USER32.dll_GetWindowLongW)(puVar4[0xd], 0xffffffec);\n            fcn.00421970(&var_64h, 0, 0x34);\n            puVar4 = var_8h;\n            var_88h = item;\n            var_90h = 1;\n            var_60h = (*_sym.imp.USER32.dll_SendMessageW)(var_8h[0xd], 0x1053, 0xffffffff, &var_90h);\n            if (var_60h == -1) {\n                return 0;\n            }\n            if (((uVar7 & 4) == 0) || (arg_10h == '\\0')) {\n                iVar9 = fcn.0042010a(0x2000);\n                bVar13 = false;\n                bVar12 = 0 < *(puVar4 + 0x25);\n                var_64h = 1;\n                var_4ch = 0xfff;\n                iVar10 = 0;\n                iVar8 = iVar9;\n                while( true ) {\n                    var_5ch = iVar10;\n                    var_50h = iVar8;\n                    if (bVar13 == bVar12) {\n                        (*_sym.imp.USER32.dll_SendMessageW)();\n                        return iVar9;\n                    }\n                    (*_sym.imp.USER32.dll_SendMessageW)(puVar4[0xd], 0x104b, 0, &var_64h);\n                    var_4ch = fcn.004218fb(iVar8);\n                    var_4ch = 0xffe - var_4ch;\n                    if (var_4ch < 1) break;\n                    iVar8 = fcn.004218fb(iVar9);\n                    puVar1 = iVar9 + iVar8 * 2;\n                    *puVar1 = *0x4c1824;\n                    puVar1[1] = 0;\n                    iVar8 = (*_sym.imp.USER32.dll_CharNextW)(puVar1);\n                    iVar10 = iVar10 + 1;\n                    bVar13 = SBORROW4(iVar10, *(puVar4 + 0x25));\n                    bVar12 = iVar10 - *(puVar4 + 0x25) < 0;\n                }\n                return iVar9;\n            }\n            var_64h = 8;\n            var_54h = 0xf000;\n            iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(puVar4[0xd], 0x104b, 0, &var_64h);\n            if (iVar8 == 0) {\n                return 0;\n            }\n            var_7ch = (-(var_58h >> 0xc != 1) & 0xfffffffd) + 4;\n        }\n        else {\n            if (uVar2 != 0x15) {\n                if (0x18 < uVar2) {\n                    if (uVar2 < 0x1b) {\n                        if (arg_10h == '\\0') {\n                            uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0xf0, 0, 0);\n                            *hWnd = uVar7;\n                            if (uVar7 != 0) {\n                                return 0;\n                            }\n                            *hWnd = 4;\n                            return 0;\n                        }\n                        iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0xe);\n                        iVar5 = (iVar9 + 1U) * 2;\n                        iVar8 = fcn.0042010a(-(iVar5 >> 0x20 != 0) | iVar5);\n                        iVar9 = (*_sym.imp.USER32.dll_GetWindowTextW)(uVar14, iVar8, iVar9 + 1U);\n                        if (iVar9 != 0) {\n                            return iVar8;\n                        }\n                        *hWnd = 0;\n                        goto code_r0x0046aad2;\n                    }\n                    if (uVar2 == 0x1c) {\n                        iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x1001, 0, &var_74h);\n                        if (iVar8 == 0) {\n                            *hWnd = 0;\n                            return 0;\n                        }\n                        iVar8 = fcn.0042010a(0x16);\n                        (*_sym.imp.USER32.dll_wsprintfW)(iVar8, L\"%d/%02d/%02d\", var_74h, var_74h._2_2_, var_6eh);\n                        return iVar8;\n                    }\n                }\n                goto code_r0x0046ad97;\n            }\n            cVar6 = fcn.0040d2c0(4);\n            if (cVar6 != '\\0') {\n                fcn.004084a6();\n                iVar5 = (*(puVar4[0x1e] + 4) + 1) * 2;\n                iVar9 = fcn.0042010a(-(iVar5 >> 0x20 != 0) | iVar5);\n                fcn.004084a6();\n                iVar8 = *(puVar4[0x1e] + 4);\n                fcn.004084a6();\n                fcn.00403b1e(iVar8 + 1);\n                return iVar9;\n            }\n            var_7ch = fcn.0040cdb4();\n        }\n        goto code_r0x0046afe1;\n    }\n    uVar15 = 0x400;\ncode_r0x0046afda:\n    var_7ch = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, uVar15, 0, 0);\ncode_r0x0046afe1:\n    *hWnd = var_7ch;\n    return 0;\n}\n",
        "token_count": 3759
    },
    "0046b14a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046b14a(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *hWnd;\n    uint uVar2;\n    code *pcVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t arg_8h_00;\n    uint uVar6;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = fcn.0040cf2c(arg_8h, &var_4h, &var_8h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    var_4h = **(*0x4c1870 + var_4h * 4);\n    hWnd = **(*0x4c1884 + var_8h * 4);\n    uVar2 = *hWnd;\n    uVar1 = *(hWnd + 0x24);\n    var_8h = uVar2;\n    fcn.0041a63d();\n    if (-1 < hWnd[0x12]) {\n        fcn.0046cf4e(hWnd[0x12]);\n    }\n    pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n    if (uVar1 < 0x13) {\n        if (uVar1 == 0x12) {\n            if (arg_ch < -1) {\n                return 0;\n            }\n            hWnd[0x12] = arg_ch;\n            fcn.0041b650(arg_ch, 1);\n            pcVar3 = _sym.imp.USER32.dll_ShowWindow;\n            if ((*(hWnd + 0x92) & 0x20) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*hWnd, 0);\n                (*pcVar3)(*hWnd, 5);\n                (*_sym.imp.USER32.dll_SetFocus)(*hWnd);\n            }\n            goto code_r0x0046b336;\n        }\n        if (uVar1 == 0) {\n            arg_8h_00 = arg_ch;\n            if (arg_ch < 0) {\n                return 0;\n            }\ncode_r0x0046b300:\n            hWnd[0x12] = arg_8h_00;\n            fcn.0041b650(arg_8h_00, 1);\n            goto code_r0x0046b336;\n        }\n        if (uVar1 == 0) {\n            return 0;\n        }\n        if (4 < uVar1) {\n            if (uVar1 == 8) {\n                if (arg_ch < 0) {\n                    return 0;\n                }\n                uVar6 = 0x2001;\n            }\n            else {\n                if (uVar1 != 0x10) {\n                    if (uVar1 != 0x11) {\n                        return 0;\n                    }\n                    goto code_r0x0046b1e7;\n                }\n                if (arg_ch < 0) {\n                    return 0;\n                }\n                uVar6 = 0x111d;\n            }\n            (*_sym.imp.USER32.dll_SendMessageW)(uVar2, uVar6, 0, arg_ch);\n            goto code_r0x0046b336;\n        }\ncode_r0x0046b2de:\n        hWnd[0x12] = arg_ch;\n        fcn.0041b650(arg_ch, 1);\n    }\n    else {\n        if (uVar1 != 0x13) {\n            if (uVar1 == 0x14) {\ncode_r0x0046b1e7:\n                if (arg_ch < 0) {\n                    return 0;\n                }\n                hWnd[0x12] = arg_ch;\n                fcn.0041b650(arg_ch, 1);\n                (*_sym.imp.USER32.dll_InvalidateRect)(hWnd[0xd], 0, 1);\n                goto code_r0x0046b336;\n            }\n            if (uVar1 != 0x17) {\n                if (uVar1 == 0x18) {\n                    if (arg_ch < 0) {\n                        return 0;\n                    }\n                    uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n                    (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xfffffff0, uVar5 | 0xb);\n                }\n                else {\n                    if (uVar1 < 0x19) {\n                        return 0;\n                    }\n                    if (0x1b < uVar1) {\n                        return 0;\n                    }\n                }\n            }\n            goto code_r0x0046b2de;\n        }\n        if (arg_ch == -2) {\n            return 0;\n        }\n        arg_8h_00 = -0x2000000;\n        if (arg_ch == -0x2000000) goto code_r0x0046b300;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x1001, 0, arg_ch);\n        (*pcVar3)(var_8h, 0x1026, 0, arg_ch);\n    }\n    fcn.0046ddee(var_4h, hWnd, 1);\ncode_r0x0046b336:\n    if ((*0x4c10ec != 0) && (uVar1 == 8)) {\n        return 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 1218
    },
    "0046b354": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046b354(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *hWnd;\n    uint uVar2;\n    char cVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar3 = fcn.0040cf2c(arg_8h, &var_4h, &var_8h);\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    uVar4 = **(*0x4c1870 + var_4h * 4);\n    hWnd = **(*0x4c1884 + var_8h * 4);\n    uVar2 = *hWnd;\n    uVar1 = *(hWnd + 0x24);\n    fcn.0041a63d();\n    if (uVar1 < 0x14) {\n        if (uVar1 == 0x13) {\n            uVar4 = 0x1024;\n        }\n        else {\n            if (uVar1 < 5) goto code_r0x0046b46d;\n            if (uVar1 == 8) {\n                uVar4 = 0x409;\n            }\n            else {\n                if (uVar1 != 0x10) {\n                    if (uVar1 != 0x11) {\n                        return 0;\n                    }\n                    goto code_r0x0046b3d4;\n                }\n                uVar4 = 0x111e;\n            }\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, uVar4, 0, arg_ch);\n    }\n    else {\n        if (uVar1 == 0x14) {\ncode_r0x0046b3d4:\n            hWnd[0x13] = arg_ch;\n            (*_sym.imp.USER32.dll_InvalidateRect)(hWnd[0xd], 0, 1);\n            goto code_r0x0046b3e7;\n        }\n        if (uVar1 != 0x17) {\n            if (uVar1 == 0x18) {\n                uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n                (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xfffffff0, uVar5 | 0xb);\n            }\n            else {\n                if (uVar1 < 0x19) {\n                    return 0;\n                }\n                if (0x1b < uVar1) {\n                    return 0;\n                }\n            }\n        }\ncode_r0x0046b46d:\n        hWnd[0x13] = arg_ch;\n        fcn.0046ddee(uVar4, hWnd, 1);\n    }\ncode_r0x0046b3e7:\n    if ((*0x4c10ec == 0) || ((((uVar1 != 8 && (uVar1 != 4)) && (uVar1 != 0x1a)) && (uVar1 != 0x19)))) {\n        uVar4 = 1;\n    }\n    else {\n        uVar4 = 0xffffffff;\n    }\n    return uVar4;\n}\n",
        "token_count": 730
    },
    "0046b4d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: Msg\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0046b4d4(uint item, int16_t *lpString, int16_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint *hWnd_00;\n    int16_t *arg_8h;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_ESI;\n    int32_t iVar6;\n    int16_t aiStackY8464 [4096];\n    uint var_10ch;\n    uint var_108h;\n    int16_t *var_fch;\n    uint var_e4h;\n    int16_t *var_d8h;\n    uint var_c8h;\n    uint var_c0h;\n    uint lpmii;\n    uint var_ach;\n    uint32_t var_a8h;\n    int16_t *var_8ch;\n    uint var_88h;\n    uint lParam;\n    int16_t *var_74h;\n    uint var_60h;\n    int32_t wParam;\n    int32_t var_58h;\n    uint uStackY88;\n    uint uStackY84;\n    int16_t *var_4ch;\n    uint uStackY76;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint Msg;\n    uint var_ch;\n    uint hWnd;\n    \n    fcn.00430650();\n    iVar6 = 0;\n    var_ch = 0;\n    cVar2 = fcn.0040cf2c(0, 0, 0);\n    arg_8h = lpString;\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    iVar4 = **(*0x4c1870 + unaff_ESI * 4);\n    hWnd_00 = **(*0x4c1884 + 0x11ad41c);\n    uVar1 = *(hWnd_00 + 0x24);\n    uStackY88 = *hWnd_00;\n    if (uVar1 == 0) {\n        var_ch = 0x14e;\n    }\n    else if (uVar1 == 1) {\n        var_ch = 0x186;\n    }\n    else if ((((uVar1 < 2) || (3 < uVar1)) && (arg_10h != NULL)) && (*arg_10h != 0)) {\n        return 0;\n    }\n    // switch table (29 cases) at 0x46ba10\n    switch(uVar1) {\n    case 0:\n    case 1:\n        if (lpString != NULL) {\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageW)();\n            if (iVar6 != -1) {\n                (*_sym.imp.USER32.dll_SendMessageW)();\n                uStackY76 = 0x46b5e3;\n                fcn.0046ddee(iVar4, hWnd_00, 1);\n                return 0;\n            }\n            if ((*lpString != *0x4c1824) && (pcVar5 = _sym.imp.USER32.dll_SendMessageW,  *lpString != 0))\n            goto code_r0x0046b61c;\n            lpString = (*_sym.imp.USER32.dll_CharNextW)();\n            pcVar5 = _sym.imp.USER32.dll_SendMessageW;\n            do {\n                uStackY76 = 0x46b643;\n                (*pcVar5)();\ncode_r0x0046b61c:\n                cVar2 = fcn.0046d71e(&stack0xffffdef0, &fcn.0046b4d4::lpString, 0x4c1824);\n            } while (cVar2 != '\\0');\n            if (arg_10h == NULL) {\n                return 1;\n            }\n            uStackY76 = 0x46b659;\n            var_4ch = (*pcVar5)();\n            if (var_4ch == 0xffffffff) {\n                return 1;\n            }\n            uStackY76 = 0;\n            uStackY84 = var_ch;\n            var_58h = 0x46b66a;\n            (*pcVar5)();\n            return 1;\n        }\n        break;\n    case 2:\n    case 3:\n        if ((arg_10h == NULL) || (*arg_10h == 0)) {\n            (*_sym.imp.USER32.dll_SetWindowTextW)();\n            (*_sym.imp.USER32.dll_SendMessageW)();\n            *(iVar4 + 0x1c4) = 0xffffffff;\n            return 1;\n        }\n        goto code_r0x0046b684;\n    default:\n        if (lpString != NULL) {\n            iVar6 = (*_sym.imp.USER32.dll_SetWindowTextW)();\n            if (iVar6 != 0) {\n                fcn.0046ddee(iVar4, hWnd_00, 1);\n                return 1;\n            }\n            return 0;\n        }\n        break;\n    case 5:\n    case 0x1c:\n        fcn.004486ae(1, 1);\n        goto code_r0x0046b71e;\n    case 6:\n    case 7:\n    case 0x16:\n        break;\n    case 8:\n        fcn.00422d13(lpString);\n        fcn.00471de0();\n        goto code_r0x0046b684;\n    case 0xb:\n        var_d8h = lpString;\n        var_e4h = 1;\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (iVar6 == 0) {\n            return 0;\n        }\n        if (*(hWnd_00 + 0x93) == -1) {\n            return 1;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)();\n        return 1;\n    case 0xe:\n    case 0xf:\n        var_8ch = fcn.0042010a(0x208);\n        lpmii = 0x30;\n        var_ach = 0x10;\n        var_88h = 0x104;\n        iVar6 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)();\n        if ((iVar6 != 0) && ((var_a8h & 0x800) == 0)) {\n            var_8ch = lpString;\n            iVar6 = (*_sym.imp.USER32.dll_SetMenuItemInfoW)();\n            if (iVar6 != 0) {\n                (*_sym.imp.USER32.dll_DrawMenuBar)();\n                fcn.0042017e();\n                return 1;\n            }\n        }\n        fcn.0042017e();\n        return 0;\n    case 0x11:\n        var_108h = hWnd_00[4];\n        var_fch = lpString;\n        var_10ch = 1;\n        goto code_r0x0046b71e;\n    case 0x12:\n        fcn.00422d13(lpString);\n        fcn.00471de0();\ncode_r0x0046b684:\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        return 1;\n    case 0x13:\n        if (lpString != NULL) {\n            fcn.00421970();\n            lpString = arg_8h;\n            while (cVar2 = fcn.0046d71e(&stack0xffffdef0, &fcn.0046b4d4::lpString, 0x4c1824),  cVar2 != '\\0') {\n                var_74h = &stack0xffffdef0;\n                lParam = 4;\n                if ((aiStackY8464[0] != 0) && (iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(),  iVar6 == 0)) {\n                    return 0;\n                }\n            }\n            iVar6 = fcn.004218fb(arg_8h);\n            if ((iVar6 != 0) && (iVar6 = fcn.004218fb(arg_8h),  arg_8h[iVar6 + -1] != *0x4c1824)) {\n                return 1;\n            }\n            var_74h = lpString;\n            goto code_r0x0046b71e;\n        }\n        break;\n    case 0x14:\n        if (lpString == NULL) {\n            return 0xffffffff;\n        }\n        fcn.00421970();\n        var_c0h = item;\n        var_c8h = 1;\n        wParam = (*_sym.imp.USER32.dll_SendMessageW)();\n        lpString = arg_8h;\n        if (wParam == -1) {\n            return 0;\n        }\n        while (cVar2 = fcn.0046d71e(&stack0xffffdef0, &fcn.0046b4d4::lpString, 0x4c1824),  cVar2 != '\\0') {\n            var_4ch = &stack0xffffdef0;\n            var_60h = 1;\n            var_58h = iVar6;\n            if ((aiStackY8464[0] != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(),  iVar4 == 0)) {\n                return 0;\n            }\n            iVar6 = iVar6 + 1;\n        }\n        iVar4 = fcn.004218fb(arg_8h);\n        if ((iVar4 != 0) && (iVar4 = fcn.004218fb(arg_8h),  arg_8h[iVar4 + -1] != *0x4c1824)) {\n            return 1;\n        }\n        var_4ch = lpString;\n        var_58h = iVar6;\ncode_r0x0046b71e:\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (iVar6 != 0) {\n            return 1;\n        }\n        return 0;\n    case 0x15:\n        fcn.00422d13(lpString);\n        uVar3 = fcn.00471de0();\n        hWnd_00[0x13] = uVar3;\n        return 1;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 2354
    },
    "0046ba61": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ba61(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t hWnd;\n    char cVar1;\n    uint uVar2;\n    double in_stack_00000018;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_4h;\n    \n    fcn.0040caee(arg_10h);\n    cVar1 = fcn.0040cf2c(arg_8h, &arg_10h, &var_4h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = **(*0x4c1870 + arg_10h * 4);\n        hWnd = **(*0x4c1884 + var_4h * 4);\n        if ((*(hWnd + 0x91) & 1) == 0) {\n            if (*0x4b6578 == in_stack_00000018) {\n                arg_10h = *(arg_8h_00 + 0x7c);\n            }\n            else {\n                arg_10h = fcn.00471de0();\n            }\n            if (arg_ch == -1) {\n                arg_ch = *(arg_8h_00 + 0x80);\n            }\n            if (arg_14h == -1) {\n                arg_14h = *(arg_8h_00 + 0x84);\n            }\n            if (var_10h == 0) {\n                fcn.0040c935(arg_8h_00 + 0x6c);\n            }\n            uVar2 = 1;\n            fcn.00468cdb(arg_8h_00, hWnd, &var_14h, arg_10h, arg_ch, arg_14h, arg_18h, 1);\n            goto code_r0x0046bb2e;\n        }\n    }\n    uVar2 = 0;\ncode_r0x0046bb2e:\n    fcn.00405cd3();\n    return uVar2;\n}\n",
        "token_count": 487
    },
    "0046bb3e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046bb3e(uint32_t arg_8h, uint32_t lpszFile, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t *arg_8h_00;\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    uint *arg_8h_01;\n    uint in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint var_a8h;\n    uint32_t var_a4h;\n    uint var_a0h;\n    uint32_t var_8ch;\n    uint var_74h;\n    uint var_70h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    uint lParam;\n    uint var_48h;\n    uint32_t lprcUpdate;\n    uint var_38h;\n    int32_t lpRect;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t phiconLarge;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t nIconIndex;\n    uint32_t var_ch;\n    uint32_t phiconSmall;\n    \n    var_18h = fcn.0040cdb4();\n    cVar2 = fcn.0040cf2c(arg_8h, &var_ch, &var_14h);\n    if (cVar2 == '\\0') goto code_r0x0046c1db;\n    var_20h = **(*0x4c1870 + var_ch * 4);\n    arg_8h_00 = **(*0x4c1884 + var_14h * 4);\n    uVar6 = *arg_8h_00;\n    arg_8h = arg_8h & 0xffffff | *(arg_8h_00 + 0x24) << 0x18;\n    var_ch = uVar6;\n    uVar7 = fcn.00447b84();\n    nIconIndex = uVar7;\n    uVar5 = uVar7 >> 0x20 & 0xff;\n    if (uVar5 < 0x12) {\n        if (0xf < uVar5) {\n            iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, 0, &phiconSmall, 1);\n            if (iVar3 < 1) goto code_r0x0046c1db;\n            if (arg_8h._3_1_ == '\\x10') {\n                lpszFile = *0x4c1894;\n                var_ch = var_14h;\n                uVar5 = 3;\n            }\n            else {\n                uVar6 = arg_8h_00[0xd];\n                var_ch = fcn.0041b155(uVar6);\n                lpszFile = var_14h;\n                uVar5 = var_14h;\n            }\n            iVar3 = *(**(*0x4c1884 + var_ch * 4) + 0x40);\n            if (iVar3 == 0) {\n                var_18h = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 1, 1);\n                *(**(*0x4c1884 + var_ch * 4) + 0x40) = var_18h;\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x1109, 0, var_18h);\n                iVar3 = var_18h;\n                if (var_18h != 0) goto code_r0x0046bdb4;\n            }\n            else {\ncode_r0x0046bdb4:\n                var_ch = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(iVar3, 0xffffffff, phiconSmall);\n                if (arg_8h._3_1_ == '\\x10') {\n                    if ((arg_10h & 2) != 0) {\n                        *(var_20h + 0x1b4) = var_ch;\n                    }\n                    if ((arg_10h & 4) != 0) {\n                        *(var_20h + 0x1b8) = var_ch;\n                    }\n                }\n                for (; uVar5 <= lpszFile; uVar5 = uVar5 + 1) {\n                    iVar3 = **(*0x4c1884 + uVar5 * 4);\n                    if ((((iVar3 != 0) && (*(iVar3 + 4) == *(var_20h + 4))) && (*(iVar3 + 0x90) == '\\x11')) &&\n                       (*(iVar3 + 0x34) == uVar6)) {\n                        var_70h = *(iVar3 + 0x10);\n                        var_74h = 0x32;\n                        (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x113e, 0, &var_74h);\n                        if ((arg_10h & 2) != 0) {\n                            var_58h = var_ch;\n                        }\n                        if ((arg_10h & 4) != 0) {\n                            var_5ch = var_ch;\n                        }\n                        (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x113f, 0, &var_74h);\n                    }\n                }\n            }\n            (*_sym.imp.USER32.dll_GetClientRect)(uVar6, &lprcUpdate);\n            (*_sym.imp.USER32.dll_RedrawWindow)(uVar6, &lprcUpdate, 0, 0);\ncode_r0x0046be7f:\n            (*_sym.imp.USER32.dll_DestroyIcon)(phiconSmall);\ncode_r0x0046c1d6:\n            uVar4 = 1;\n            goto code_r0x0046c1dd;\n        }\n        if (uVar5 == 6) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(uVar6, &lpRect);\n            arg_8h = var_28h - lpRect;\n            arg_10h = var_24h - var_2ch;\n            iVar3 = fcn.0046e541(arg_8h_00, lpszFile, &arg_8h, &arg_10h);\n            if (iVar3 != 0) {\n                uVar4 = 1;\n                fcn.0046ddee(var_20h, arg_8h_00, 1);\n                goto code_r0x0046c1dd;\n            }\n        }\n        else {\n            if (uVar5 != 7) {\n                if ((uVar5 != 0xb) ||\n                   (iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, 0, &phiconSmall, 1),  iVar3 < 1\n                   )) goto code_r0x0046c1db;\n                lpszFile = *(var_20h + 0x188);\n                arg_10h = fcn.0041b155(lpszFile);\n                iVar3 = *(**(*0x4c1884 + arg_10h * 4) + 0x40);\n                uVar6 = lpszFile;\n                if (iVar3 == 0) {\n                    iVar3 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 1, 1);\n                    uVar6 = lpszFile;\n                    *(**(*0x4c1884 + arg_10h * 4) + 0x40) = iVar3;\n                    (*_sym.imp.USER32.dll_SendMessageW)(lpszFile, 0x1303, 0, iVar3);\n                    if (iVar3 != 0) goto code_r0x0046bc63;\n                }\n                else {\ncode_r0x0046bc63:\n                    uVar4 = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(iVar3, *(arg_8h_00 + 0x22), phiconSmall);\n                    lParam = 2;\n                    var_38h = uVar4;\n                    (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x133d, *(arg_8h_00 + 0x93), &lParam);\n                    *(arg_8h_00 + 0x22) = uVar4;\n                }\n                goto code_r0x0046be7f;\n            }\n            arg_8h_01 = &arg_14h;\n            fcn.004113a0(arg_8h_01);\n            cVar2 = fcn.0046e305(arg_8h_00, lpszFile, arg_8h_01, in_stack_ffffff2c, in_stack_ffffff30);\n            if (cVar2 != '\\0') {\n                fcn.0046ddee(var_20h, arg_8h_00, 0);\n                goto code_r0x0046c1d6;\n            }\n        }\n    }\n    else if (0x12 < uVar5) {\n        if (uVar5 < 0x15) {\n            iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, &phiconLarge, &phiconSmall, 1);\n            if (((0 < iVar3) ||\n                ((*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, 0xffffffff, &phiconLarge, &phiconSmall, 1), \n                phiconLarge != 0)) || (phiconSmall != 0)) {\n                if (arg_8h._3_1_ == '\\x13') {\n                    lpszFile = var_14h;\n                    var_14h = 0;\n                    uVar5 = (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x1004, 0, 0);\n                }\n                else {\n                    uVar6 = arg_8h_00[0xd];\n                    var_ch = uVar6;\n                    lpszFile = fcn.0041b155(uVar6);\n                    lprcUpdate = var_14h;\n                    var_48h = 1;\n                    uVar5 = (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x1053, 0xffffffff, &var_48h);\n                    var_14h = uVar5;\n                    if (uVar5 == 0xffffffff) goto code_r0x0046c1db;\n                }\n                iVar3 = **(*0x4c1884 + lpszFile * 4);\n                var_18h = *(iVar3 + 0x38);\n                arg_10h = *(iVar3 + 0x3c);\n                nIconIndex = uVar5;\n                if (var_18h == 0) {\n                    var_18h = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 0, 1);\n                    *(**(*0x4c1884 + lpszFile * 4) + 0x38) = var_18h;\n                    (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x1003, 1, var_18h);\n                }\n                if (arg_10h == 0) {\n                    arg_10h = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x20, 0x20, 0x21, 0, 1);\n                    *(**(*0x4c1884 + lpszFile * 4) + 0x3c) = arg_10h;\n                    (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x1003, 0, arg_10h);\n                }\n                pcVar1 = _sym.imp.COMCTL32.dll_ImageList_ReplaceIcon;\n                if ((var_18h != 0) && (arg_10h != 0)) {\n                    lpszFile = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(var_18h, 0xffffffff, phiconSmall);\n                    (*pcVar1)(arg_10h, 0xffffffff, phiconLarge);\n                    uVar6 = var_ch;\n                    if (arg_8h._3_1_ == '\\x13') {\n                        arg_8h_00[0x27] = lpszFile;\n                    }\n                    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n                    arg_10h = var_14h;\n                    if (var_14h <= nIconIndex) {\n                        do {\n                            var_a8h = 2;\n                            var_a0h = 0;\n                            var_a4h = arg_10h;\n                            (*pcVar1)(uVar6, 0x104b, 0, &var_a8h);\n                            if ((var_8ch == 0xfffffffe) || (arg_8h._3_1_ == '\\x14')) {\n                                var_8ch = lpszFile;\n                                (*pcVar1)(uVar6, 0x104c, 0, &var_a8h);\n                            }\n                            arg_10h = arg_10h + 1;\n                        } while (arg_10h <= nIconIndex);\n                    }\n                    (*pcVar1)(uVar6, 0x1015, var_14h, nIconIndex);\n                }\n                pcVar1 = _sym.imp.USER32.dll_DestroyIcon;\n                (*_sym.imp.USER32.dll_DestroyIcon)(phiconSmall);\n                (*pcVar1)(phiconLarge);\n                goto code_r0x0046c1d6;\n            }\n        }\n        else if (uVar5 - 0x18 < 3) {\n            cVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar6, 0xfffffff0);\n            if (cVar2 < '\\0') {\n                lpszFile = (*_sym.imp.USER32.dll_LoadImageW)(0, lpszFile, 0, 0, 0, 0x2010);\n                if (lpszFile == 0) goto code_r0x0046c1db;\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0xf7, 0, lpszFile);\n                if (arg_8h_00[0x19] != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x19]);\n                }\n                if (arg_8h_00[0x1a] != 0) {\n                    (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h_00[0x1a]);\n                }\n                arg_8h_00[0x19] = lpszFile;\n                arg_8h_00[0x1a] = 0;\n            }\n            else {\n                if ((var_18h == -1) && (arg_8h._3_1_ == '\\x18')) {\n                    lpszFile = (*_sym.imp.USER32.dll_LoadImageW)(0, lpszFile, 1, 0, 0, 0x2010);\n                    if (lpszFile == 0) goto code_r0x0046c1d6;\n                    (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0xf7, 1, lpszFile);\n                    if (arg_8h_00[0x19] != 0) {\n                        (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x19]);\n                    }\n                    if (arg_8h_00[0x1a] != 0) {\n                        (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h_00[0x1a]);\n                    }\n                    arg_8h_00[0x19] = 0;\n                }\n                else {\n                    iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, &phiconLarge, &phiconSmall, 1);\n                    pcVar1 = _sym.imp.USER32.dll_DestroyIcon;\n                    if (iVar3 < 1) goto code_r0x0046c1db;\n                    lpszFile = phiconSmall;\n                    if (arg_10h != 0) {\n                        lpszFile = phiconLarge;\n                        phiconLarge = phiconSmall;\n                    }\n                    (*_sym.imp.USER32.dll_DestroyIcon)(phiconLarge);\n                    (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0xf7, 1, lpszFile);\n                    if (arg_8h_00[0x19] != 0) {\n                        (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x19]);\n                    }\n                    if (arg_8h_00[0x1a] != 0) {\n                        (*pcVar1)(arg_8h_00[0x1a]);\n                    }\n                    arg_8h_00[0x19] = 0;\n                }\n                arg_8h_00[0x1a] = lpszFile;\n            }\n            goto code_r0x0046c1d6;\n        }\n    }\ncode_r0x0046c1db:\n    uVar4 = 0;\ncode_r0x0046c1dd:\n    fcn.00412570();\n    return uVar4;\n}\n",
        "token_count": 3924
    },
    "0046c1ee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c1ee(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar3 = fcn.0040cf2c(arg_8h, &var_8h, &var_4h);\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    puVar1 = **(*0x4c1884 + var_4h * 4);\n    uVar2 = *puVar1;\n    cVar3 = *(puVar1 + 0x24);\n    if (cVar3 == '\\x01') {\n        if (arg_ch < 1) {\n            return 1;\n        }\n        uVar4 = 0;\n        uVar5 = 0x194;\n        arg_10h = arg_ch;\n    }\n    else {\n        if (cVar3 != '\\x02') {\n            if (cVar3 != '\\x03') {\n                if (cVar3 == '\\x12') {\n                    uVar4 = arg_10h & 0xffff | arg_ch << 0x10;\n                    arg_10h = 1;\n                    uVar5 = 0x406;\n                }\n                else {\n                    if (cVar3 != '\\x16') {\n                        return 0;\n                    }\n                    uVar5 = 0x46f;\n                    uVar4 = arg_ch;\n                }\n                goto code_r0x0046c297;\n            }\n            (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0xb1, 0, 0xffffffff);\n        }\n        if (arg_ch < 1) {\n            return 1;\n        }\n        uVar4 = 0;\n        uVar5 = 0xc5;\n        arg_10h = arg_ch;\n    }\ncode_r0x0046c297:\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar2, uVar5, arg_10h, uVar4);\n    return 1;\n}\n",
        "token_count": 494
    },
    "0046c4f9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046c4f9(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *hWnd;\n    int32_t *piVar1;\n    uint *puVar2;\n    code *pcVar3;\n    char cVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t unaff_ESI;\n    uint uVar9;\n    uint unaff_EDI;\n    uint uVar10;\n    uint uVar11;\n    uint *in_stack_ffffff2c;\n    uint32_t uVar12;\n    uchar *arg_ch_00;\n    uchar *arg_10h;\n    uint32_t uVar13;\n    uint uVar14;\n    uint *puStack180;\n    uint uStack176;\n    uint32_t uStack172;\n    uint *puStack168;\n    uint32_t uStack164;\n    uchar *puStack160;\n    uchar auStack156 [12];\n    uchar auStack144 [8];\n    uint uStack136;\n    uint32_t uStack132;\n    uint uStack128;\n    uint uStack68;\n    int32_t iStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    \n    arg_10h = &stack0xffffff50;\n    arg_ch_00 = &stack0xffffff64;\n    uVar12 = 0x46c51f;\n    cVar4 = fcn.0040cf2c(arg_8h, arg_ch_00, arg_10h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    uStack172 = **(*0x4c1870 + puStack168 * 4);\n    uVar9 = 0;\n    uVar14 = 0;\n    hWnd = **(*0x4c1884 + unaff_ESI * 4);\n    uStack176 = *hWnd;\n    puStack180 = CONCAT13(*(hWnd + 0x24), puStack180._0_3_);\n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    uStack164 = arg_ch & 0x100;\n    uVar13 = unaff_ESI;\n    if (uStack164 != 0) {\n        in_stack_ffffff2c = puStack168;\n        fcn.0041acd1(puStack168, unaff_ESI);\n        unaff_EDI = 1;\n        uVar12 = unaff_ESI;\n    }\n    if ((arg_ch & 0x800) != 0) {\n        (*_sym.imp.USER32.dll_SetWindowPos)(uVar14, 0, 0, 0, 0, 0, 0x13);\n        unaff_EDI = 1;\n    }\n    uVar5 = uVar13 >> 0x18;\n    if (uVar5 < 0x15) {\n        if (uVar5 == 0x14) {\n            iVar7 = hWnd[0xd];\n            puStack168 = 0x1;\n            puStack160 = arg_10h;\n            uStack132 = (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0x1053, 0xffffffff, &stack0xffffff58);\n            if (uStack132 == 0xffffffff) {\n                return 0;\n            }\n            uStack128 = 0;\n            uStack136 = 8;\n            uVar12 = (*_sym.imp.USER32.dll_GetWindowLongW)(iVar7, 0xffffffec);\n            if (((uVar12 & 4) != 0) && ((arg_ch & 5) != 0)) {\n                uStack132 = (-(arg_ch != 1) & 0xfffff000) + 0x2000;\n                uStack128 = 0xf000;\n                uVar9 = (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0x104c, 0, &stack0xffffff70);\n            }\n            if ((arg_ch & 0x2100) != 0) {\n                if (arg_10h != NULL) {\n                    uStack132 = 0xffffffff;\n                }\n                uStack132 = ~-((arg_ch & 0x2000) != 0) & uStack132;\n                uStack128 = 3;\n                uVar9 = (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0x102b, arg_ch_00, &stack0xffffff70);\n                return uVar9;\n            }\n            return uVar9;\n        }\n        if (uVar5 == 9) {\n            if ((arg_ch & 7) == 0) {\n                uVar11 = 0;\n                uVar10 = 0;\n                uVar9 = 0x466;\n            }\n            else {\n                if ((arg_ch & 7) != 1) {\ncode_r0x0046c925:\n                    (*_sym.imp.USER32.dll_SendMessageW)();\n                    goto code_r0x0046c8ff;\n                }\n                uVar11 = 0xffff0000;\n                uVar10 = 0xffffffff;\n                uVar9 = 0x465;\n            }\n            iVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, uVar9, uVar10, uVar11);\n            if (iVar7 == 0) goto code_r0x0046ca03;\n        }\n        else if (uVar5 == 0xb) {\n            if ((arg_ch & 0x10) == 0) goto code_r0x0046ca03;\n            uVar5 = *(hWnd + 0x93);\n            if (*(puStack180 + 0x66) != '\\0') {\n                puStack180[100] = puStack180[0x65];\n            }\n            fcn.0046e1a7(puStack180, uVar5);\n            *(uVar13 + 0x194) = *(hWnd + 0x93);\n        }\n        else {\n            if (uVar5 == 0xc) {\n                return 0;\n            }\n            if (uVar5 < 0xe) goto code_r0x0046ca03;\n            if (0xf < uVar5) {\n                if (uVar5 != 0x11) goto code_r0x0046ca03;\n                iStack64 = hWnd[4];\n                uStack60 = (-((arg_ch & 1) != 0) & 0x1000) + 0x1000;\n                uStack68 = 8;\n                uStack56 = 0xf010;\n                if ((arg_ch & 0x200) != 0) {\n                    uStack60 = uStack60 | 0x10;\n                }\n                (*_sym.imp.USER32.dll_SendMessageW)(hWnd[0xd], 0x113f, 0, &stack0xffffffbc);\n                if ((arg_ch & 0x400) != 0) {\n                    (*_sym.imp.USER32.dll_SendMessageW)(hWnd[0xd], 0x1102, 2, hWnd[4]);\n                }\n                if (uStack172 != 0) {\n                    uVar9 = fcn.0041b155(hWnd[0xd]);\n                    fcn.0041acd1(puStack180, uVar9);\n                    goto code_r0x0046c925;\n                }\n                goto code_r0x0046c8ff;\n            }\n            puStack168 = 0x30;\n            iVar7 = hWnd[3];\n            uStack164 = 1;\n            iVar6 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar7, arg_10h, 0, &stack0xffffff58);\n            if (iVar6 == 0) {\n                return 0;\n            }\n            if ((arg_ch & 0x20) != 0) {\n                return 0;\n            }\n            if (arg_ch < '\\0') {\n                uVar12 = 3;\n            }\n            else {\n                uVar12 = 0;\n            }\n            if ((arg_ch & 1) != 0) {\n                uVar12 = uVar12 | 8;\n            }\n            if (uVar13 != 0) {\n                uVar12 = uVar12 | 0x80;\n            }\n            if (((uStack172 & 8) != 0) && ((arg_ch & 4) == 0)) {\n                uVar12 = uVar12 | 8;\n            }\n            uStack172 = uVar12;\n            (*_sym.imp.USER32.dll_SetMenuItemInfoW)(hWnd[3], in_stack_ffffff2c, 0, &stack0xffffff48);\n            if ((arg_ch & 0x200) == 0) {\n                iVar7 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(hWnd[3], iVar7, 0, &stack0xffffff38);\n                if ((iVar7 != 0) && ((uVar13 & 0x1000) != 0)) {\n                    iVar7 = -1;\n                    goto code_r0x0046c74f;\n                }\n            }\n            else {\ncode_r0x0046c74f:\n                (*_sym.imp.USER32.dll_SetMenuDefaultItem)(hWnd[3], iVar7, 0);\n            }\n            (*_sym.imp.USER32.dll_DrawMenuBar)(*in_stack_ffffff2c);\n        }\n    }\n    else {\n        if (uVar5 == 0x16) {\n            iVar7 = 3;\n            if (2 < *0x4c1894) {\n                do {\n                    piVar1 = **(*0x4c1884 + iVar7 * 4);\n                    if ((((piVar1 != NULL) && (piVar1[1] == puStack180[1])) && (*(piVar1 + 0x24) == '\\x03')) &&\n                       (*piVar1 == hWnd[0xd])) {\n                        if (((arg_ch & *(hWnd + 0x92)) == 0) && ((*(hWnd + 0x92) & 0x10) != 0)) {\n                            puVar2 = **(*0x4c1884 + iVar7 * 4);\n                            (*_sym.imp.USER32.dll_MoveWindow)\n                                      (*puVar2, *(puVar2 + 0x22), *(puVar2 + 0x8a), *(puVar2 + 0x23), *(puVar2 + 0x8e), \n                                       0);\n                            (*_sym.imp.USER32.dll_SendMessageW)(uVar12, 0x469, hWnd[0xd], 0);\n                        }\n                        break;\n                    }\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 <= *0x4c1894);\n            }\n            goto code_r0x0046ca03;\n        }\n        if (uVar5 == 0x18) {\n            if ((arg_ch & 0x200) == 0) goto code_r0x0046ca03;\n            (*_sym.imp.USER32.dll_SendMessageW)(*puStack180, 0x401, arg_10h, 0);\n            iVar7 = (*_sym.imp.USER32.dll_GetFocus)();\n            if (iVar7 == *hWnd) {\n                fcn.0041acd1(uStack176, arg_10h);\n            }\n        }\n        else {\n            if (uVar5 == 0x19) {\n                if ((arg_ch & 7) == 0) goto code_r0x0046ca03;\n                goto code_r0x0046c925;\n            }\n            if ((uVar5 != 0x1a) || ((arg_ch & 7) == 0)) goto code_r0x0046ca03;\n            fcn.00468dd5(arg_10h, arg_ch & 3);\n        }\n    }\ncode_r0x0046c8ff:\n    unaff_EDI = 1;\ncode_r0x0046ca03:\n    if ((arg_ch & 0x10f8) != 0) {\n        unaff_EDI = 1;\n        uVar5 = 0;\n        uVar8 = arg_ch & 0x10f8;\n        if (uVar8 < '\\0') {\n            uVar5 = 0xc0;\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar14, 0);\n        }\n        if ((arg_ch & 0x40) != 0) {\n            uVar5 = 0xc0;\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar14, 1);\n        }\n        if ((arg_ch & 0x20) != 0) {\n            uVar5 = uVar5 + 0x30;\n        }\n        uStack176 = arg_ch & 0x10;\n        if (uStack176 != 0) {\n            uVar5 = uVar5 + 0x30;\n        }\n        if ((arg_ch & 8) != 0) {\n            uVar5 = uVar5 + 8;\n        }\n        if ((arg_ch & 0x1000) != 0) {\n            uVar5 = uVar5 + 8;\n        }\n        *(hWnd + 0x92) = ~uVar5 & *(hWnd + 0x92) | uVar8;\n        pcVar3 = _sym.imp.USER32.dll_ShowWindow;\n        if (((*(hWnd + 0x93) == 0xff) || (*(hWnd + 0x93) == puStack180[100])) || (puStack180[100] == 0xffffffff)) {\n            if ((arg_ch & 0x20) != 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(uVar14, 0);\n            }\n            if (uStack164 != 0) {\n                (*pcVar3)(uVar14, 4);\n                if ((uStack176._3_1_ == '\\x1a') && ((*(hWnd + 0x92) & 0x40) != 0)) {\n                    (*_sym.imp.USER32.dll_EnableWindow)(uVar14, 1);\n                }\n            }\n            fcn.0046ddee(puStack168, hWnd, 1);\n        }\n    }\n    return unaff_EDI;\n}\n",
        "token_count": 3166
    },
    "0046cc68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046cc68(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    char16_t *pcStack152;\n    uint32_t uStack148;\n    uint32_t uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    int32_t iStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uchar *puStack116;\n    uchar auStack80 [4];\n    uchar auStack76 [4];\n    uchar auStack72 [4];\n    uint uStack68;\n    uint32_t uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack36;\n    uint uStack32;\n    \n    cVar4 = fcn.0040cf2c(arg_8h, &stack0xffffffb4, &stack0xffffffb0);\n    if (cVar4 != '\\0') {\n        iVar6 = **(*0x4c1870 + unaff_EBX * 4);\n        puVar1 = **(*0x4c1884 + unaff_ESI * 4);\n        cVar4 = *(puVar1 + 0x24);\n        if ((((((cVar4 != '\\x0e') && (cVar4 != '\\x0f')) && (cVar4 != '\\f')) && ((cVar4 != '\\t' && (cVar4 != '\\x14'))))\n            && ((cVar4 != '\\x11' && ((cVar4 != '\\x1d' && (cVar4 != '\\x1b')))))) && (cVar4 != '\\x15')) {\n            puStack120 = &stack0xffffffc0;\n            puStack116 = NULL;\n            uStack124 = 0x46cd10;\n            fcn.00421970();\n            uStack64 = -(arg_1ch != '\\0') & 2 | 0x11;\n            uStack68 = 0x30;\n            uStack60 = *puVar1;\n            uStack36 = *0x4c1864;\n            uStack56 = *puVar1;\n            uStack32 = arg_ch;\n            if (*(puVar1 + 0x24) == '\\v') {\n                puStack116 = 0x46cd67;\n                iVar5 = fcn.0041b155(*(iVar6 + 0x188));\n                iVar2 = **(*0x4c1884 + iVar5 * 4);\n                if ((*(iVar2 + 0x50) != 0) && (*(iVar2 + 0x58) != 0)) {\n                    puStack116 = *(iVar2 + 0x50);\n                    puStack120 = 0x46cd89;\n                    (*_sym.imp.USER32.dll_DestroyWindow)();\n                    *(**(*0x4c1884 + iVar5 * 4) + 0x50) = 0;\n                    puStack116 = 0x46cdae;\n                    fcn.00407e53(0x49dbf0);\n                }\n                pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n                uStack64 = *(iVar6 + 0x188);\n                iVar6 = puVar1[0x14];\n                if (iVar6 == 0) {\n                    puStack116 = NULL;\n                    puStack120 = *0x4c1864;\n                    uStack124 = 0;\n                    iStack128 = *(unaff_ESI + 0x188);\n                    uStack132 = 0x80000000;\n                    uStack136 = 0x80000000;\n                    uStack140 = 0x80000000;\n                    uStack144 = 0x80000000;\n                    uStack148 = -(arg_18h != '\\0') & 0x40 | 0x80000013;\n                    pcStack152 = NULL;\n                    iVar6 = (*_sym.imp.USER32.dll_CreateWindowExW)(8, L\"tooltips_class32\");\n                    if (iVar6 == 0) {\n                        return 0;\n                    }\n                    puVar1[0x14] = iVar6;\n                }\n                else {\n                    puStack116 = &stack0xffffffb8;\n                    puStack120 = NULL;\n                    uStack124 = 0x433;\n                    uStack132 = 0x46ce28;\n                    iStack128 = iVar6;\n                    (*_sym.imp.USER32.dll_SendMessageW)();\n                }\n                (*pcVar3)(iVar6, 0x432, 0, &stack0xffffff88);\n                fcn.00407e53(arg_ch);\n            }\n            else {\n                if (puVar1[0x14] != 0) {\n                    puStack116 = 0x46ce58;\n                    (*_sym.imp.USER32.dll_DestroyWindow)();\n                }\n                puStack116 = *0x4c1864;\n                puStack120 = NULL;\n                uStack124 = *puVar1;\n                iStack128 = 0x80000000;\n                uStack132 = 0x80000000;\n                uStack136 = 0x80000000;\n                uStack140 = 0x80000000;\n                uStack144 = -(arg_18h != '\\0') & 0x40 | 0x80000013;\n                uStack148 = 0;\n                pcStack152 = L\"tooltips_class32\";\n                iVar6 = (*_sym.imp.USER32.dll_CreateWindowExW)(8);\n                pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n                if (iVar6 == 0) {\n                    return 0;\n                }\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar6, 0x432, 0, &stack0xffffff8c);\n                puVar1[0x14] = iVar6;\n                fcn.00407e53(arg_ch);\n                uVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&stack0xffffff68);\n                (*_sym.imp.USER32.dll_GetWindowRect)(uVar7);\n                (*pcVar3)(iVar6, 0x418, 0, pcStack152);\n                if (arg_10h != 0) {\n                    (*pcVar3)(iVar6, 0x421, arg_14h, arg_10h);\n                }\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1477
    },
    "0046cefc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046cefc(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(arg_ch + 0x1cc) != 0) {\n        fcn.0043f195(arg_8h);\n        iVar1 = fcn.0043f144(arg_ch, in_ECX + 0x70, *(in_ECX + 0x84));\n        if (iVar1 == 0) {\n            if (*(arg_ch + 0x1cc) != 0) {\n                fcn.00468b73(*(arg_ch + 0x1cc));\n            }\n            *(arg_ch + 0x1cc) = 0;\n        }\n        *arg_8h = 0;\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "0046d095": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d095(int32_t arg_8h, int32_t *hWnd)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uStack208;\n    int32_t iStack204;\n    int32_t *piStack200;\n    int32_t iStack188;\n    uint uStack184;\n    uint uStack180;\n    int32_t iStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    int32_t *piStack164;\n    uint32_t uStack160;\n    uchar *puStack156;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    int32_t iStack140;\n    uchar *puStack136;\n    uint32_t uStack132;\n    uint uStack128;\n    int32_t iStack124;\n    uint *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    uint uStack92;\n    int32_t iStack88;\n    uint *puStack84;\n    uint uStack60;\n    uint uStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint32_t uStack44;\n    uint32_t uStack36;\n    \n    if (*0x4c10ec == 0) {\n        uStack36 = *(arg_8h + 0x10);\n        iVar1 = *(arg_8h + 0x18);\n        uStack52 = uStack36 & 0x10;\n        uStack44 = uStack36 & 1;\n        uStack36 = uStack36 & 6;\n        if (uStack36 == 0) {\n            if (hWnd[0x13] == -1) {\n                (*_sym.imp.USER32.dll_GetSysColor)();\n            }\n            puStack84 = 0x46d110;\n            iVar3 = iVar1;\n            uStack52 = (*_sym.imp.GDI32.dll_SetTextColor)();\n        }\n        else {\n            iVar3 = (*_sym.imp.USER32.dll_GetSysColor)();\n            iStack88 = 0x46d0f1;\n            puStack84 = iVar1;\n            uStack52 = (*_sym.imp.GDI32.dll_SetTextColor)();\n        }\n        if (hWnd[0x12] == -1) {\n            iStack88 = 0xf;\n            uStack92 = 0x46d122;\n            (*_sym.imp.USER32.dll_GetSysColorBrush)();\n            uStack92 = 0xf;\n            iStack96 = 0x46d12e;\n            iStack96 = (*_sym.imp.USER32.dll_GetSysColor)();\n        }\n        else {\n            iStack88 = hWnd[0x12];\n            uStack92 = 0x46d139;\n            iVar3 = (*_sym.imp.GDI32.dll_CreateSolidBrush)();\n            iStack96 = hWnd[0x12];\n        }\n        iStack104 = 0x46d148;\n        iStack100 = iVar1;\n        uStack56 = (*_sym.imp.GDI32.dll_SetBkColor)();\n        iStack104 = iStack88;\n        uStack112 = 0x46d157;\n        iStack108 = iVar1;\n        (*_sym.imp.GDI32.dll_SelectObject)();\n        puStack84 = arg_8h + 0x1c;\n        uStack60 = *puStack84;\n        uStack56 = *(arg_8h + 0x20);\n        uStack52 = *(arg_8h + 0x24);\n        uStack48 = *(arg_8h + 0x28);\n        if (iVar3 == 0) {\n            if (iStack88 != 0) {\n                uStack112 = 0xffffffff;\n                iStack116 = 0xffffffff;\n                puStack120 = &stack0xffffffc4;\n                iStack124 = 0x46d1bf;\n                (*_sym.imp.USER32.dll_InflateRect)();\n            }\n            uStack112 = 0x10;\n            iStack116 = 4;\n            puStack120 = &stack0xffffffc4;\n            uStack128 = 0x46d1cf;\n            iStack124 = iVar1;\n            (*_sym.imp.USER32.dll_DrawFrameControl)();\n        }\n        else {\n            uStack112 = 0xffffffff;\n            iStack116 = -1;\n            puStack120 = &stack0xffffffc4;\n            iStack124 = 0x46d182;\n            (*_sym.imp.USER32.dll_InflateRect)();\n            iStack124 = 0x10;\n            uStack128 = 0x46d18a;\n            uStack128 = (*_sym.imp.USER32.dll_GetSysColor)();\n            uStack132 = 0x46d191;\n            uVar4 = (*_sym.imp.GDI32.dll_CreateSolidBrush)();\n            puStack136 = &stack0xffffffb0;\n            uStack144 = 0x46d1a0;\n            iStack140 = iVar1;\n            uStack132 = uVar4;\n            (*_sym.imp.USER32.dll_FrameRect)();\n            uStack148 = 0x46d1a7;\n            uStack144 = uVar4;\n            (*_sym.imp.GDI32.dll_DeleteObject)();\n        }\n        iVar3 = iStack116;\n        iStack96 = *puStack120;\n        uStack92 = puStack120[1];\n        iStack88 = puStack120[2];\n        puStack84 = puStack120[3];\n        puStack156 = &stack0xffffffa0;\n        if (iStack116 == 0) {\n            if (iStack124 == 0) {\n                uStack148 = 0xfffffffe;\n                uStack152 = 0xfffffffe;\n            }\n            else {\n                uStack148 = 0xfffffffd;\n                uStack152 = 0xfffffffd;\n            }\n            uStack160 = 0x46d20c;\n            (*_sym.imp.USER32.dll_InflateRect)();\n            iStack108 = iStack108 + -1;\n            iStack104 = iStack104 + -1;\n        }\n        else {\n            uStack148 = 0xfffffffe;\n            uStack152 = 0xfffffffe;\n            uStack160 = 0x46d1f2;\n            (*_sym.imp.USER32.dll_InflateRect)();\n        }\n        uStack160 = uStack144;\n        piStack164 = &stack0xffffff94;\n        iStack172 = 0x46d224;\n        iStack168 = iVar1;\n        (*_sym.imp.USER32.dll_FillRect)();\n        if ((iVar3 != 0) || (uStack132 != 0)) {\n            puStack120 = puStack120 + 2;\n            iStack116 = iStack116 + 2;\n        }\n        iStack172 = -0x10;\n        iStack176 = *hWnd;\n        uVar5 = 0x104;\n        uStack152 = 0x104;\n        uStack180 = 0x46d24f;\n        uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n        if ((uVar4 & 0x2000) == 0) {\n            uVar5 = 0x124;\n            uStack160 = 0x124;\n        }\n        if ((uVar4 & 0x100) == 0) {\n            uVar5 = uVar5 | 1;\n            uStack160 = uVar5;\n        }\n        uStack180 = 0;\n        uStack184 = 0;\n        iStack188 = 0xe;\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageW)();\n        uVar4 = iVar3 + 1;\n        piStack200 = 0x46d292;\n        piStack200 = fcn.0042010a(-(uVar4 * 2 >> 0x20 != 0) | uVar4 * 2);\n        iStack204 = *hWnd;\n        uStack208 = 0x46d2a4;\n        piStack164 = piStack200;\n        (*_sym.imp.USER32.dll_GetWindowTextW)();\n        iVar3 = iStack176;\n        uStack208 = uVar5;\n        (*_sym.imp.USER32.dll_DrawTextW)(iVar1, iStack176, 0xffffffff, &stack0xffffff64);\n        if (iStack188 != 0) {\n            iStack168 = piStack200[2];\n            piStack164 = piStack200[3];\n            iStack176 = *piStack200 + 1;\n            iStack172 = piStack200[1] + 1;\n            uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x11);\n            (*_sym.imp.GDI32.dll_SetTextColor)(iVar1, uVar2);\n            (*_sym.imp.USER32.dll_DrawTextW)(iVar1, uStack208, 0xffffffff, &stack0xffffff44, iVar3);\n        }\n        if (iStack204 != 0) {\n            iStack176 = *piStack200;\n            iStack172 = piStack200[1];\n            iStack168 = piStack200[2];\n            piStack164 = piStack200[3];\n            uVar2 = (*_sym.imp.GDI32.dll_CreateSolidBrush)(0);\n            (*_sym.imp.USER32.dll_FrameRect)(iVar1, &stack0xffffff4c, uVar2);\n            (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n            (*_sym.imp.USER32.dll_InflateRect)(&stack0xffffff3c, 0xfffffffc, 0xfffffffc);\n            (*_sym.imp.USER32.dll_DrawFocusRect)(iVar1, &stack0xffffff30);\n        }\n        fcn.0042017e(uVar4);\n        (*_sym.imp.GDI32.dll_SelectObject)(iVar1, uStack184);\n        (*_sym.imp.GDI32.dll_DeleteObject)(iVar3);\n        (*_sym.imp.GDI32.dll_SetTextColor)(iVar1, iStack204);\n        (*_sym.imp.GDI32.dll_SetBkColor)(iVar1, piStack200);\n        uVar2 = 1;\n    }\n    else {\n        puStack84 = 0x46d0b5;\n        uVar2 = fcn.0046d385(arg_8h, hWnd);\n    }\n    return uVar2;\n}\n",
        "token_count": 2312
    },
    "0046d385": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d385(uint32_t format, uint *lpchText)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    uint nLeftRect;\n    uint nTopRect;\n    uint nRightRect;\n    uint nBottomRect;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint *crColor;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = _sym.imp.USER32.dll_GetSysColor;\n    uVar1 = *(format + 0x18);\n    var_10h = *(format + 0x10) & 0x10;\n    uVar7 = *(format + 0x10) & 6;\n    var_14h = uVar7;\n    if (uVar7 == 0) {\n        iVar5 = lpchText[0x13];\n        if (iVar5 != -1) goto code_r0x0046d3c0;\n        uVar9 = 0x12;\n    }\n    else {\n        uVar9 = 0xe;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetSysColor)(uVar9);\ncode_r0x0046d3c0:\n    var_8h = (*_sym.imp.GDI32.dll_SetTextColor)(uVar1, iVar5);\n    if (lpchText[0x12] == -1) {\n        var_4h = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n        crColor = (*pcVar3)(0xf);\n    }\n    else {\n        var_4h = (*_sym.imp.GDI32.dll_CreateSolidBrush)(lpchText[0x12]);\n        crColor = lpchText[0x12];\n    }\n    if (uVar7 == 0) {\n        uVar9 = 0x743c00;\n    }\n    else {\n        uVar9 = (*pcVar3)(0x11);\n    }\n    var_20h = (*_sym.imp.GDI32.dll_CreatePen)(0, 1, uVar9);\n    pcVar3 = _sym.imp.GDI32.dll_SelectObject;\n    var_1ch = (*_sym.imp.GDI32.dll_SelectObject)(uVar1, var_20h);\n    var_24h = (*_sym.imp.GDI32.dll_SetBkColor)(uVar1, crColor);\n    var_18h = (*pcVar3)(uVar1, var_4h);\n    crColor = format + 0x1c;\n    nLeftRect = *crColor;\n    nTopRect = *(format + 0x20);\n    nRightRect = *(format + 0x24);\n    nBottomRect = *(format + 0x28);\n    (*_sym.imp.USER32.dll_InflateRect)(&nLeftRect, 0xffffffff, 0xffffffff);\n    (*_sym.imp.GDI32.dll_RoundRect)(uVar1, nLeftRect, nTopRect, nRightRect, nBottomRect, 5, 5);\n    uVar8 = 0x104;\n    format = 0x104;\n    uVar7 = (*_sym.imp.USER32.dll_GetWindowLongW)(*lpchText, 0xfffffff0);\n    if ((uVar7 & 0x2000) == 0) {\n        uVar8 = 0x124;\n        format = 0x124;\n    }\n    if ((uVar7 & 0x100) == 0) {\n        format = uVar8 | 1;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*lpchText, 0xe, 0, 0);\n    iVar2 = (iVar5 + 1U) * 2;\n    uVar9 = fcn.0042010a(-(iVar2 >> 0x20 != 0) | iVar2);\n    (*_sym.imp.USER32.dll_GetWindowTextW)(*lpchText, uVar9, iVar5 + 1U);\n    if (var_10h != 0) {\n        nLeftRect = *crColor;\n        nTopRect = crColor[1];\n        nRightRect = crColor[2];\n        nBottomRect = crColor[3];\n        (*_sym.imp.USER32.dll_InflateRect)(&nLeftRect, 0xfffffffd, 0xfffffffd);\n        (*_sym.imp.USER32.dll_DrawFocusRect)(uVar1, &nLeftRect);\n    }\n    if (var_14h != 0) {\n        uVar6 = (*_sym.imp.USER32.dll_GetSysColor)(0x11);\n        (*_sym.imp.GDI32.dll_SetTextColor)(uVar1, uVar6);\n    }\n    (*_sym.imp.USER32.dll_DrawTextW)(uVar1, uVar9, 0xffffffff, &nLeftRect, format);\n    fcn.0042017e(uVar9);\n    pcVar4 = _sym.imp.GDI32.dll_SelectObject;\n    (*_sym.imp.GDI32.dll_SelectObject)(uVar1, var_18h);\n    pcVar3 = _sym.imp.GDI32.dll_DeleteObject;\n    (*_sym.imp.GDI32.dll_DeleteObject)(var_4h);\n    (*pcVar4)(uVar1, var_1ch);\n    (*pcVar3)(var_20h);\n    (*_sym.imp.GDI32.dll_SetTextColor)(uVar1, var_8h);\n    (*_sym.imp.GDI32.dll_SetBkColor)(uVar1, var_24h);\n    return 1;\n}\n",
        "token_count": 1303
    },
    "0046d5ee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046d5ee(int32_t *hWnd, uint lpPoint, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    var_8h = -1;\n    var_ch = -1;\n    (*_sym.imp.USER32.dll_ClientToScreen)(***(*0x4c1870 + *hWnd * 4), &lpPoint);\n    iVar4 = 0;\n    var_10h = *0x4c1874;\n    if (0 < *0x4c1874) {\n        do {\n            iVar1 = **(*0x4c1870 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar5 = 3,  2 < *0x4c1894)) {\n                do {\n                    puVar2 = **(*0x4c1884 + iVar5 * 4);\n                    if (((puVar2 != NULL) && ((puVar2[1] == *(iVar1 + 4) && ((*(puVar2 + 0x92) & 0x20) == 0)))) &&\n                       ((*(puVar2 + 0x93) == 0xff || (*(puVar2 + 0x93) == *(iVar1 + 400))))) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(*puVar2, &lpRect);\n                        iVar3 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n                        if (iVar3 != 0) {\n                            if (*hWnd != iVar4) {\n                                var_ch = iVar4;\n                            }\n                            if ((*(**(*0x4c1884 + iVar5 * 4) + 0x92) & 8) != 0) {\n                                if (*hWnd == iVar4) {\n                                    return iVar5;\n                                }\n                                *hWnd = var_ch;\n                                return iVar5;\n                            }\n                            if (var_8h < 0) {\n                                var_8h = iVar5;\n                            }\n                        }\n                    }\n                    iVar5 = iVar5 + 1;\n                } while (iVar5 <= *0x4c1894);\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < var_10h);\n        if (-1 < var_8h) {\n            if (var_ch < 0) {\n                return var_8h;\n            }\n            *hWnd = var_ch;\n            return var_8h;\n        }\n    }\n    (*_sym.imp.USER32.dll_MessageBeep)(0);\n    return -1;\n}\n",
        "token_count": 629
    },
    "0046d784": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046d784(void)\n\n{\n    uint *puVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    arg_8h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    iVar2 = (*_sym.imp.USER32.dll_GetFocus)();\n    if ((iVar2 != 0) && (iVar3 = fcn.0041af7d(arg_8h),  iVar3 != -1)) {\n        iVar3 = **(*0x4c1870 + iVar3 * 4);\n        iVar2 = fcn.0041b155(iVar2);\n        if ((iVar2 != -1) && (**(*0x4c1884 + iVar2 * 4) != 0)) {\n            *(iVar3 + 0x1c) = iVar2;\n            puVar1 = **(*0x4c1884 + iVar2 * 4);\n            if (*(puVar1 + 0x24) == '\\x02') {\n                (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0xb0, iVar3 + 0x1bc, iVar3 + 0x1c0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "0046d80a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046d80a(int32_t arg_8h)\n\n{\n    bool bVar1;\n    \n    if (arg_8h != 0) {\n        *0x4c187c = fcn.0041af7d(arg_8h);\n    }\n    bVar1 = *0x4c187c != -1;\n    if (bVar1) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(***(*0x4c1870 + *0x4c187c * 4));\n    }\n    return bVar1;\n}\n",
        "token_count": 128
    },
    "0046d93b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d93b(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar1;\n    \n    if (*(in_ECX + 0x2c) == 0) {\n        if (*(in_ECX + 0xc) == '\\0') {\n            if ((*0x4c197c == 0) && (*0x4c2364 < 100)) {\n                *0x4c2364 = *0x4c2364 + 1;\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = 10;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(uVar1);\n        }\n        uVar1 = 0;\n    }\n    else {\n        arg_8h_00 = **(in_ECX + 0x30);\n        fcn.00468b20(arg_8h_00);\n        fcn.00446417();\n        if (arg_8h_00 != 0) {\n            fcn.00468ba4(extraout_ECX);\n        }\n        *0x4c2364 = 0;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 286
    },
    "0046d9a7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046d9a7(uint *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if (arg_10h != 0) {\n        *0x4c187c = fcn.0041af7d(arg_10h);\n    }\n    bVar3 = *0x4c187c != -1;\n    if (bVar3) {\n        uVar2 = ***(*0x4c1870 + *0x4c187c * 4);\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n        *arg_8h = uVar1;\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xffffffec);\n        *arg_ch = uVar2;\n    }\n    return bVar3;\n}\n",
        "token_count": 220
    },
    "0046da07": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046da07(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t **ppiVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t **var_4h;\n    \n    var_18h = arg_8h;\n    var_4h = *0x4c18dc;\n    do {\n        ppiVar1 = var_4h;\n        cVar2 = fcn.00402e2a(0);\n        arg_8h_00 = arg_ch;\n        if (cVar2 == '\\0') {\n            if (*(arg_ch + 4) == 0) {\n                uVar3 = 0;\n            }\n            else {\n                fcn.0040d3d2();\n                fcn.0040c935(arg_8h_00);\n                fcn.0046e691(&var_18h);\n                fcn.00405cd3();\ncode_r0x0046daa1:\n                uVar3 = 1;\n            }\n            return uVar3;\n        }\n        if (**ppiVar1 == var_18h) {\n            if (*(arg_ch + 4) == 0) {\n                fcn.0046e729(&var_4h);\n            }\n            else {\n                fcn.0040c935(arg_ch);\n            }\n            goto code_r0x0046daa1;\n        }\n        fcn.00468b5a(&arg_8h);\n    } while( true );\n}\n",
        "token_count": 361
    },
    "0046daaa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046daaa(int32_t paccel, uint cAccel, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (arg_10h != 0) {\n        *0x4c187c = fcn.0041af7d(arg_10h);\n    }\n    if (*0x4c187c != -1) {\n        piVar1 = **(*0x4c1870 + *0x4c187c * 4);\n        if (piVar1[6] != 0) {\n            if (*0x4c1838 == *0x4c187c) {\n                *0x4c1838 = -1;\n            }\n            (*_sym.imp.USER32.dll_DestroyAcceleratorTable)(piVar1[6]);\n            piVar1[6] = 0;\n        }\n        if (paccel != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_CreateAcceleratorTableW)(paccel, cAccel);\n            piVar1[6] = iVar2;\n            iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n            if (*piVar1 == iVar2) {\n                *0x4c1838 = *0x4c187c;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "0046db30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046db30(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_18h != 0) {\n        *0x4c187c = fcn.0041af7d(arg_18h);\n    }\n    if (*0x4c187c == -1) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = **(*0x4c1870 + *0x4c187c * 4);\n        *(iVar1 + 0x58) = arg_8h;\n        *(iVar1 + 0x5c) = arg_ch;\n        if (0 < arg_10h) {\n            *(iVar1 + 0x60) = arg_10h;\n        }\n        if (0 < arg_14h) {\n            *(iVar1 + 100) = arg_14h;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 251
    },
    "0046db90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046db90(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    \n    if (arg_10h != 0) {\n        *0x4c187c = fcn.0041af7d(arg_10h);\n    }\n    if (*0x4c187c != -1) {\n        puVar1 = **(*0x4c1870 + *0x4c187c * 4);\n        puVar1[4] = arg_8h;\n        puVar1[5] = arg_ch;\n        (*_sym.imp.USER32.dll_PostMessageW)(*puVar1, 0x20, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "0046dbe3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046dbe3(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    double in_stack_00000018;\n    \n    if (arg_18h != 0) {\n        *0x4c187c = fcn.0041af7d(arg_18h);\n    }\n    if (*0x4c187c == -1) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = **(*0x4c1870 + *0x4c187c * 4);\n        if (*0x4b6578 != in_stack_00000018) {\n            uVar2 = fcn.00471de0();\n            *(iVar1 + 0x7c) = uVar2;\n        }\n        if (arg_8h != -1) {\n            *(iVar1 + 0x80) = arg_8h;\n        }\n        if (arg_10h != -1) {\n            *(iVar1 + 0x84) = arg_10h;\n        }\n        fcn.0040c935(arg_ch);\n        *(iVar1 + 0x88) = arg_14h;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 309
    },
    "0046dc79": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046dc79(uint32_t arg_8h, int32_t dwNewLong, int32_t hWnd)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if (hWnd != 0) {\n        *0x4c187c = fcn.0041af7d(hWnd);\n    }\n    if (*0x4c187c == -1) {\n        uVar2 = 0;\n    }\n    else {\n        puVar1 = **(*0x4c1870 + *0x4c187c * 4);\n        uVar2 = *puVar1;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n        if (((arg_8h == 0xffffffff) ||\n            (iVar4 = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xfffffff0, arg_8h),  iVar4 != 0)) &&\n           ((dwNewLong == -1 ||\n            (iVar4 = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xffffffec, dwNewLong),  iVar4 != 0)))) {\n            if (*(puVar1 + 0xe) != '\\0') {\n                iVar4 = -((arg_8h & 0xc00000) != 0xc00000);\n                if (((uVar3 & 0xc00000) == 0xc00000) != iVar4 + 1U) {\n                    iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n                    if (iVar4 == -1) {\n                        puVar1[0x12] = puVar1[0x12] - iVar5;\n                    }\n                    else {\n                        puVar1[0x12] = puVar1[0x12] + iVar5;\n                    }\n                }\n                (*_sym.imp.USER32.dll_SetWindowPos)(uVar2, 0, 0, 0, 0, 0, 0x47);\n            }\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 507
    },
    "0046ddee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ddee(uint *arg_8h, uint *hWnd, uint bErase)\n\n{\n    uint lpRect;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpPoint;\n    uint var_8h;\n    \n    if (*(arg_8h + 0x39) == '\\0') {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*hWnd, &lpRect);\n        lpPoint = lpRect;\n        var_8h = var_18h;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*arg_8h, &lpPoint);\n        lpRect = lpPoint;\n        var_18h = var_8h;\n        lpPoint = var_14h;\n        var_8h = var_10h;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*arg_8h, &lpPoint);\n        var_14h = lpPoint;\n        var_10h = var_8h;\n        (*_sym.imp.USER32.dll_InvalidateRect)(*arg_8h, &lpRect, bErase);\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "00454132": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454132(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint32_t noname_4;\n    uint uVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint auStack56 [2];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint auStack24 [2];\n    uint uStack16;\n    uint uStack12;\n    \n    iVar4 = *0x4c1444;\n    iStack60 = *0x4c1444;\n    if ((*0x4c1444 == 1) || (*0x4c10c5 != '\\0')) {\ncode_r0x004542b9:\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0;\n        noname_4 = 0;\n        *0x4c1444 = 0;\n        auStack24[0] = 0;\n        uStack16 = 0;\n        uStack12 = 1;\n        auStack56[0] = 0;\n        uStack48 = 0;\n        uStack44 = 1;\n        uStack40 = 0x49dc40;\n        uStack36 = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        iStack64 = 0;\n        if (*0x4c1860 != 0) {\n            do {\n                uVar1 = *0x4c184c;\n                if (noname_4 == 0) {\n                    fcn.00412570();\n                    auStack56[0] = uVar1;\n                    uStack44 = 1;\n                }\n                else {\n                    if (noname_4 == 1) {\n                        fcn.00412570();\n                        auStack56[0] = arg_8h;\n                    }\n                    else {\n                        if (noname_4 != 2) {\n                            if (noname_4 == 3) {\n                                fcn.00412570();\n                                uStack44 = 1;\n                                auStack56[0] = arg_10h;\n                            }\n                            goto code_r0x0045420d;\n                        }\n                        fcn.00412570();\n                        auStack56[0] = arg_ch;\n                    }\n                    uStack44 = 1;\n                }\ncode_r0x0045420d:\n                fcn.0041baef(auStack56);\n                noname_4 = uStack68 + 1;\n                iVar4 = iStack64;\n                uStack68 = noname_4;\n            } while (noname_4 < *0x4c1860);\n        }\n        cVar5 = '\\0';\n        uStack68 = uStack68 & 0xffffff;\n        cVar2 = fcn.00456a38(0x4c1850, &uStack40, auStack24, 0, noname_4, &uStack68 + 3);\n        if ((cVar2 != '\\0') && (*0x4c1444 != 1)) {\n            *0x4c1444 = iVar4;\n            if (cVar5 == '\\0') {\n                fcn.004404c9();\n                fcn.00412570();\n                fcn.00412570();\n                goto code_r0x004542b9;\n            }\n            uVar3 = fcn.0040cdb4();\n        }\n        fcn.004404c9();\n        fcn.00412570();\n        fcn.00412570();\n    }\n    return uVar3;\n}\n",
        "token_count": 838
    },
    "0046de72": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0046de72(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *arg_8h_00;\n    uint arg_14h;\n    uint32_t uVar2;\n    uint *arg_8h_01;\n    int32_t iVar3;\n    bool bVar4;\n    uint uVar5;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint *hWnd;\n    uint var_1h;\n    \n    uVar2 = fcn.0040cf2c(arg_8h, &fcn.0046de72::var_ch, &fcn.0046de72::var_10h);\n    if (uVar2 == '\\0') {\n        return uVar2;\n    }\n    arg_8h_00 = **(*0x4c1870 + var_ch * 4);\n    arg_8h_01 = **(*0x4c1884 + var_10h * 4);\n    var_1h._0_1_ = *(arg_8h_01 + 0x24);\n    hWnd = arg_8h_01;\n    if ((((((arg_ch == 6) && (var_1h == 0x18)) || ((arg_ch == 4 && (var_1h == 1)))) || ((arg_ch == 3 && (var_1h == 0))))\n        || ((arg_ch == 0x100 && ((var_1h == 2 || (var_1h == 3)))))) && (arg_8h_00[7] = var_10h,  arg_8h_00[0x73] != 0))\n    {\n        arg_8h_01 = fcn.0043f2f2(arg_8h_01);\n    }\n    if ((*(arg_8h_00 + 0xe) == '\\0') ||\n       ((uVar1 = *(**(*0x4c1884 + var_10h * 4) + 0x93),  uVar1 != 0xff &&\n        (arg_8h_01 = uVar1,  arg_8h_01 != arg_8h_00[100])))) {\n        return arg_8h_01 & 0xffffff00;\n    }\n    fcn.0041b736(arg_8h_00, 0);\n    arg_14h = arg_8h_00[0x5d];\n    uVar5 = arg_8h_00[0x5e];\n    var_ch = uVar5;\n    if (0x1c < var_1h) goto code_r0x0046dfc3;\n    // switch table (29 cases) at 0x46e0be\n    switch(*(*(var_1h + 0x46e0de) * 4 + 0x46e0be)) {\n    case 0x46df6d:\n        bVar4 = arg_ch == 1;\n        goto code_r0x0046df70;\n    case 0x46df74:\n        goto code_r0x0046df74;\n    case 0x46df89:\n        if (arg_ch == 0) goto code_r0x0046df74;\n        if (arg_ch == 0x300) {\n            iVar3 = arg_8h_00[0x71];\n            if ((0 < iVar3) && (iVar3 != arg_8h)) {\n                arg_8h_00[0x71] = 0;\n                fcn.00468bbc(iVar3, arg_8h_00, *hWnd, arg_14h, uVar5);\n            }\n            arg_8h_00[0x71] = arg_8h;\n        }\n        else if (arg_ch == 0x200) {\n            if (*(hWnd + 0x24) == '\\x02') {\n                (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0xb0, arg_8h_00 + 0x6f, arg_8h_00 + 0x70);\n            }\n            iVar3 = arg_8h_00[0x71];\n            if ((0 < iVar3) && (iVar3 == arg_8h)) {\n                arg_8h_00[0x71] = 0;\n                fcn.00468bbc(iVar3, arg_8h_00, *hWnd, arg_14h, var_ch);\n            }\n        }\n        break;\n    case 0x46e055:\n        uVar5 = 0x46e05e;\n        iVar3 = (*_sym.imp.USER32.dll_IsDlgButtonChecked)(*arg_8h_00, arg_8h);\n        if (iVar3 == 1) goto code_r0x0046df74;\n        break;\n    case 0x46e072:\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(*hWnd, 0xffffffec);\n        if ((uVar2 & 0x100000) != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h_00, 0xa1, 2, 0);\n        }\n    case 0x46e09d:\n        bVar4 = arg_ch == 0;\ncode_r0x0046df70:\n        uVar5 = var_ch;\n        if (bVar4) goto code_r0x0046df74;\n        break;\n    case 0x46e0a4:\n        fcn.0046e1a7(arg_8h_00, arg_ch);\n        uVar5 = var_ch;\n        goto code_r0x0046df74;\n    }\ncode_r0x0046dfc3:\n    arg_8h._3_1_ = 0;\ncode_r0x0046dfc6:\n    uVar2 = **(*0x4c1884 + var_10h * 4);\n    if (*(uVar2 + 0x50) != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*(uVar2 + 0x50), 0x41c, 0, 0);\n    }\n    return uVar2 & 0xffffff00 | arg_8h._3_1_;\ncode_r0x0046df74:\n    fcn.00468bbc(arg_8h, arg_8h_00, *hWnd, arg_14h, uVar5);\n    arg_8h._3_1_ = 1;\n    goto code_r0x0046dfc6;\n}\n",
        "token_count": 1501
    },
    "0046e0fb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046e0fb(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(*0x4c1870 + *0x4c187c * 4);\n    if ((arg_8h & 0x20000) != 0) {\n        fcn.0041aaff(0);\n    }\n    if (*(iVar1 + 0x68) == '\\0') {\n        *(iVar1 + 0x68) = 1;\n        arg_8h = arg_8h | 0x20000;\n    }\n    return arg_8h;\n}\n",
        "token_count": 144
    },
    "0046e1a7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e1a7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    \n    iVar1 = *(arg_8h + 4);\n    iVar3 = 3;\n    if (*(arg_8h + 400) != arg_ch) {\n        if (2 < *(in_ECX + 0x84)) {\n            do {\n                puVar2 = **(*(in_ECX + 0x74) + iVar3 * 4);\n                if ((((puVar2 != NULL) && (puVar2[1] == iVar1)) && (*(puVar2 + 0x24) != '\\v')) &&\n                   ((*(puVar2 + 0x93) == *(arg_8h + 400) ||\n                    (((*(arg_8h + 0x198) != '\\0' && (*(puVar2 + 0x93) != 0xff)) && (*(puVar2 + 0x24) != '\\n')))))) {\n                    (*_sym.imp.USER32.dll_ShowWindow)(*puVar2, 0);\n                    puVar2 = **(*(in_ECX + 0x74) + iVar3 * 4);\n                    if (((*(puVar2 + 0x92) & 0x40) != 0) && (*(puVar2 + 0x24) == '\\x1a')) {\n                        (*_sym.imp.USER32.dll_EnableWindow)(*puVar2, 0);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 <= *(in_ECX + 0x84));\n        }\n        *(arg_8h + 400) = arg_ch;\n    }\n    iVar3 = 3;\n    if (2 < *(in_ECX + 0x84)) {\n        do {\n            puVar2 = **(*(in_ECX + 0x74) + iVar3 * 4);\n            if ((((puVar2 != NULL) && (puVar2[1] == iVar1)) && (*(puVar2 + 0x24) != '\\v')) &&\n               ((*(puVar2 + 0x93) == *(arg_8h + 400) && ((*(puVar2 + 0x92) & 0x20) == 0)))) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*puVar2, 0);\n                (*_sym.imp.USER32.dll_ShowWindow)(***(*(in_ECX + 0x74) + iVar3 * 4), 4);\n                puVar2 = **(*(in_ECX + 0x74) + iVar3 * 4);\n                if (((*(puVar2 + 0x92) & 0x40) != 0) && (*(puVar2 + 0x24) == '\\x1a')) {\n                    (*_sym.imp.USER32.dll_EnableWindow)(*puVar2, 1);\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= *(in_ECX + 0x84));\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(*(arg_8h + 0x188), 0x130c, arg_ch, 0);\n    return;\n}\n",
        "token_count": 730
    },
    "0046e305": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046e305(uint *arg_8h, int32_t hLibModule, uint arg_10h, uint noname_3, uint32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    char cVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    bool bVar11;\n    uint *puVar12;\n    uint *puVar13;\n    char16_t *pcVar14;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar7 = fcn.0040cdb4();\n    cVar5 = '\\0';\n    uVar8 = fcn.004218fb(hLibModule);\n    if (4 < uVar8) {\n        pcVar14 = L\".icl\";\n        iVar9 = fcn.004218fb(hLibModule);\n        iVar9 = fcn.00421bc7(hLibModule + (iVar9 + -4) * 2, pcVar14);\n        cVar5 = '\\x01' - (iVar9 != 0);\n        pcVar14 = L\".exe\";\n        iVar9 = fcn.004218fb(hLibModule);\n        iVar9 = fcn.00421bc7(hLibModule + (iVar9 + -4) * 2, pcVar14);\n        pcVar14 = L\".dll\";\n        iVar10 = fcn.004218fb(hLibModule);\n        iVar10 = fcn.00421bc7(hLibModule + (iVar10 + -4) * 2, pcVar14);\n        if ((iVar10 == 0) || (iVar9 == 0)) {\n            iVar9 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(hLibModule, 0, 0x32);\n            if (iVar9 == 0) goto code_r0x0046e3c4;\n            cVar6 = fcn.0040d2c0(4);\n            if (cVar6 == '\\0') {\n                if (0 < uVar7) {\n                    var_4h = (*_sym.imp.USER32.dll_LoadImageW)\n                                       (iVar9, uVar7 & 0xffff, 1, *(arg_8h + 0x23), *(arg_8h + 0x8e), 0);\n                }\n                if (var_4h == 0) {\n                    fcn.004084a6();\n                    iVar10 = 0;\n                    uVar8 = *arg_18h;\n                    iVar1 = *(arg_8h + 0x8e);\n                    iVar2 = *(arg_8h + 0x23);\n                    goto code_r0x0046e4d0;\n                }\n            }\n            else {\n                fcn.004084a6();\n                iVar10 = (*_sym.imp.USER32.dll_LoadImageW)(iVar9, *arg_18h, 1, *(arg_8h + 0x23), *(arg_8h + 0x8e), 0);\n                var_4h = iVar10;\n                if (iVar10 == 0) {\n                    iVar1 = *(arg_8h + 0x8e);\n                    iVar2 = *(arg_8h + 0x23);\n                    uVar8 = uVar7 & 0xffff;\ncode_r0x0046e4d0:\n                    var_4h = (*_sym.imp.USER32.dll_LoadImageW)(iVar9, uVar8, 1, iVar2, iVar1, iVar10);\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar9);\n            goto code_r0x0046e3c4;\n        }\n        if (cVar5 != '\\0') goto code_r0x0046e3c4;\n    }\n    var_4h = (*_sym.imp.USER32.dll_LoadImageW)(0, hLibModule, 1, *(arg_8h + 0x23), *(arg_8h + 0x8e), 0x2010);\ncode_r0x0046e3c4:\n    if (((var_4h == 0) && (cVar6 = fcn.0040d16a(),  cVar6 != '\\0')) && ((uVar7 < 1 || (cVar5 != '\\0')))) {\n        if (uVar7 < 0) {\n            uVar7 = -uVar7 - 1;\n        }\n        puVar13 = &var_4h;\n        if (*(arg_8h + 0x23) < 0x11) {\n            puVar12 = NULL;\n        }\n        else {\n            puVar12 = puVar13;\n            puVar13 = NULL;\n        }\n        (*_sym.imp.SHELL32.dll_ExtractIconExW)(hLibModule, uVar7, puVar12, puVar13, 1);\n    }\n    if (arg_8h[0x1a] != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h[0x1a]);\n    }\n    pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n    arg_8h[0x1a] = var_4h;\n    uVar3 = *arg_8h;\n    (*pcVar4)(uVar3, 0x170, var_4h, 0);\n    (*pcVar4)(uVar3, 100, 0x172, 1);\n    bVar11 = var_4h != 0;\n    uVar7 = fcn.00412570();\n    return uVar7 & 0xffffff00 | bVar11;\n}\n",
        "token_count": 1293
    },
    "0046e541": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046e541(uint *arg_8h, int16_t *hgdiobj, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint lpvObject;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint lpNumberOfBytesRead;\n    int32_t *lpPictDesc;\n    int32_t *var_4h;\n    \n    if (*hgdiobj == 0) {\n        hgdiobj = NULL;\ncode_r0x0046e660:\n        if (arg_8h[0x19] != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h[0x19]);\n        }\n        arg_8h[0x19] = hgdiobj;\n        uVar2 = *arg_8h;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x172, 0, hgdiobj);\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(hgdiobj, 0x80000000, 0, 0, 3, 0, 0);\n        if (iVar1 != -1) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar1, 0);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, uVar2);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            }\n            else {\n                uVar4 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar3);\n                iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar1, uVar4, uVar2, &lpNumberOfBytesRead, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar3);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n                if (iVar5 != 0) {\n                    (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(iVar3, 1, &lpPictDesc);\n                    var_4h = NULL;\n                    (*_sym.imp.OLEAUT32.dll_OleCreatePictureIndirect)(lpPictDesc, 0, 0, 0x48d9bc, &var_4h);\n                    (**(*lpPictDesc + 8))(lpPictDesc);\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar3);\n                    if (var_4h != NULL) {\n                        (**(*var_4h + 0xc))(var_4h, &hgdiobj);\n                        (*_sym.imp.GDI32.dll_GetObjectW)(hgdiobj, 0x18, &lpvObject);\n                        if ((*arg_10h == 0) && (*arg_14h == 0)) {\n                            *arg_10h = var_20h;\n                            *arg_14h = var_1ch;\n                        }\n                        hgdiobj = (*_sym.imp.USER32.dll_CopyImage)(hgdiobj, 0, *arg_10h, *arg_14h, 0x2000);\n                        (**(*var_4h + 8))(var_4h);\n                        goto code_r0x0046e660;\n                    }\n                }\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 783
    },
    "0046e7d3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046e7d3(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.0041b155(arg_8h);\n    iVar2 = **(*0x4c1884 + iVar2 * 4);\n    iVar1 = **(*0x4c1870 + *(iVar2 + 4) * 4);\n    if (*(iVar1 + 0x14) == 0) {\n        if (*(iVar2 + 0x84) == -1) {\n            uVar3 = (**(iVar2 + 8))(arg_8h, 0x20, arg_ch, arg_10h & 0xffff | arg_14h << 0x10);\n            return uVar3;\n        }\n        iVar2 = *(iVar2 + 0x84);\n    }\n    else {\n        iVar2 = *(iVar1 + 0x10);\n    }\n    fcn.0046cfc5(iVar2);\n    return 1;\n}\n",
        "token_count": 257
    },
    "0046e83c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e83c(uint arg_8h, uint X, uint Y, uint nXEnd, uint nYEnd, uint32_t arg_1ch)\n\n{\n    if ((arg_1ch & 2) != 0) {\n        fcn.0041b58b(arg_8h, 0, 0xffffffff, 2, 1);\n        (*_sym.imp.GDI32.dll_MoveToEx)(arg_8h, X, Y, 0);\n        (*_sym.imp.GDI32.dll_LineTo)(arg_8h, nXEnd, nYEnd);\n        if (*0x4c18cc != '\\0') {\n            (*_sym.imp.GDI32.dll_EndPath)(arg_8h);\n            *0x4c18cc = '\\0';\n        }\n        (*_sym.imp.GDI32.dll_StrokePath)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "0046e9c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e9c8(uint hdc, int32_t X, int32_t Y, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    \n    if ((arg_14h & 1) != 0) {\n        fcn.0041b58b(hdc, 0, 0xffffffff, 0, 1);\n        (*_sym.imp.GDI32.dll_MoveToEx)(hdc, X + -2, Y, 0);\n        pcVar1 = _sym.imp.GDI32.dll_LineTo;\n        (*_sym.imp.GDI32.dll_LineTo)(hdc, X + 3, Y);\n        (*_sym.imp.GDI32.dll_MoveToEx)(hdc, X, Y + -2, 0);\n        (*pcVar1)(hdc, X, Y + 3);\n        if (*0x4c18cc != '\\0') {\n            (*_sym.imp.GDI32.dll_EndPath)(hdc);\n            *0x4c18cc = '\\0';\n        }\n        (*_sym.imp.GDI32.dll_StrokePath)(hdc);\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "0046ea4e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ea4e(uint hDlg, uint noname_1, uint32_t arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0041af7d(hDlg);\n    fcn.0041b736(**(*0x4c1870 + iVar1 * 4), 1);\n    if (arg_1ch == 0) {\n        uVar2 = 0x204;\n    }\n    else {\n        uVar2 = 0x201;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, uVar2, arg_18h, arg_10h & 0xffff | arg_14h << 0x10);\n    return;\n}\n",
        "token_count": 195
    },
    "0046eaa6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046eaa6(uint *hDlg, uint *arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint *lpPoint;\n    uint *arg_10h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint in_stack_00000018;\n    uint uVar4;\n    uint *puVar5;\n    uint *hWnd;\n    \n    iVar2 = fcn.0041af7d(hDlg);\n    fcn.0041b736(**(*0x4c1870 + iVar2 * 4), 1);\n    arg_10h_00 = arg_10h;\n    lpPoint = arg_ch;\n    if (arg_18h == 0) {\n        if (*0x4c18c0 != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_DragLeave)(0);\n            (*_sym.imp.COMCTL32.dll_ImageList_EndDrag)();\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            arg_ch = arg_10h_00;\n            hDlg = lpPoint;\n            arg_14h = fcn.0046d5ee(&stack0x00000018, lpPoint, arg_10h_00);\n            if ((arg_14h != -1) && (arg_14h != *0x4c18c0)) {\n                in_stack_00000018 = **(*0x4c1870 + arg_10h * 4);\n                puVar5 = **(*0x4c1884 + arg_14h * 4);\n                if ((*(puVar5 + 0x92) & 8) != 0) {\n                    arg_10h = *puVar5;\n                    puVar5 = &arg_18h;\n                    iVar2 = *0x4c18c0;\n                    fcn.0046a8dc(*0x4c18c0, puVar5, 0);\n                    hWnd = &arg_14h;\n                    uVar4 = fcn.0046a8dc(arg_ch, hWnd, 0);\n                    cVar1 = *(**(*0x4c1884 + puVar5 * 4) + 0x90);\n                    if ((cVar1 == '\\x02') || (cVar1 == '\\x03')) {\n                        (*_sym.imp.USER32.dll_SetWindowTextW)(iVar2, uVar4);\n                        (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0xb1, 0, 0xffffffff);\n                    }\n                    fcn.0042017e(uVar4);\n                    arg_ch = NULL;\n                    arg_14h = 0;\n                    arg_18h = 1;\n                    fcn.00412570();\n                    arg_ch = puVar5;\n                    arg_18h = 1;\n                    fcn.0040caee(L\"@GUI_DROPID\");\n                    puVar5 = &arg_18h;\n                    fcn.0040d380(puVar5, &hDlg, 1, 2);\n                    fcn.00405cd3();\n                    fcn.0040ca8e(0x49dbf0);\n                    fcn.0040caee(L\"@GUI_DRAGFILE\");\n                    fcn.0040d380(&stack0xfffffffc, &stack0xffffffec, 1, 2);\n                    fcn.00405cd3();\n                    fcn.00468c6b(0xfffffff3, puVar5, 0, 0);\n                    fcn.00412570();\n                }\n                *0x4c18c0 = 0;\n            }\n        }\n        uVar3 = arg_10h_00 << 0x10 | lpPoint & 0xffff;\n        uVar4 = 0x202;\n    }\n    else {\n        uVar3 = arg_ch & 0xffff | arg_10h << 0x10;\n        uVar4 = 0x205;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, uVar4, arg_14h, uVar3);\n    return;\n}\n",
        "token_count": 920
    },
    "0046ecbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ecbc(uint hDlg, uint32_t arg_ch, int32_t lParam, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t unaff_EBX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint uStack84;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uchar auStack56 [8];\n    uint32_t uStack48;\n    uint uStack40;\n    uint uStack36;\n    int32_t iStack20;\n    \n    iStack68 = fcn.0041af7d(hDlg);\n    uVar4 = **(*0x4c1870 + iStack68 * 4);\n    uStack72 = uVar4;\n    if (arg_ch == 2) {\n        if (*0x4c1810 == '\\0') {\n            return;\n        }\n        uVar9 = 0xf060;\n        uVar8 = 0x112;\ncode_r0x0046ed09:\n        (*_sym.imp.USER32.dll_PostMessageW)(hDlg, uVar8, uVar9, 0);\n        return;\n    }\n    if (arg_ch == 1) {\n        iStack68 = (*_sym.imp.USER32.dll_GetFocus)();\n        uVar9 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iStack68);\n        fcn.0046a7e0(uVar9, &iStack60);\n        uVar3 = fcn.00422626(*(uVar4 + 0x1c4));\n        if (uVar9 != uVar3) {\n            return;\n        }\n        *(uVar4 + 0x1c4) = 0;\n        if (arg_14h != 0) {\n            return;\n        }\n        if (lParam != 0) {\n            return;\n        }\n        uVar9 = uVar9 & 0xffff;\n        uVar8 = 0x111;\n        goto code_r0x0046ed09;\n    }\n    iVar7 = 0;\n    uVar4 = arg_ch;\n    if (arg_14h == 0) {\n        if (lParam == 0) {\n            uStack76 = arg_ch;\n        }\n        else {\ncode_r0x0046eda7:\n            uVar4 = fcn.0041b155(lParam);\n            if (uVar4 == 0xffffffff) goto code_r0x0046ef7f;\n        }\n    }\n    else {\n        if ((arg_14h != 1) || (lParam != 0)) goto code_r0x0046eda7;\n        arg_14h = 0;\n        uStack76 = arg_ch;\n    }\n    uVar3 = uVar4;\n    cVar2 = fcn.0040cf2c(uVar4, &uStack72, &stack0xffffffa4);\n    if (cVar2 == '\\0') {\n        iVar7 = *(unaff_EBX + 0x1c4);\n        if (iVar7 != 0) {\n            *(unaff_EBX + 0x1c4) = 0;\n            fcn.0046de72(iVar7, 0);\n        }\n    }\n    else {\n        if (*(**(*0x4c1884 + uVar3 * 4) + 0x90) == '\\x0f') {\n            uStack40 = fcn.0042010a(0x208);\n            uVar8 = *(**(*0x4c1884 + uVar3 * 4) + 0xc);\n            uStack76 = 0x30;\n            fcn.00421970(&uStack72, 0, 0x2c);\n            uStack72 = 0x10;\n            uStack36 = 0x104;\n            iVar5 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar8, uVar4, 0, &uStack76);\n            if ((iVar5 != 0) && ((uStack48 & 0x200) != 0)) {\n                iVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(uStack84);\n                if (iVar5 < 1) {\n                    uVar3 = 0xffffffff;\n                }\n                else {\n                    do {\n                        uVar3 = (*_sym.imp.USER32.dll_GetMenuItemID)(uStack84, iVar7);\n                        iVar1 = iVar7;\n                        if (uVar3 == uVar4) goto joined_r0x0046eed5;\n                        iVar7 = iVar7 + 1;\n                    } while (iVar7 < iVar5);\n                }\n                iVar1 = iVar7;\n                if (uVar3 == uVar4) {\njoined_r0x0046eed5:\n                    do {\n                        iStack60 = iVar1;\n                        iStack64 = iVar7;\n                        iVar1 = iStack60 + -1;\n                        iStack20 = iStack68;\n                        iVar7 = iStack64;\n                        if (iVar1 < 0) break;\n                        iVar6 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uStack84, iVar1, 1, auStack56);\n                        iVar7 = iStack64;\n                        arg_14h = uStack76;\n                    } while ((iVar6 == 0) || (iStack20 = iStack68,  (uStack48 & 0x200) != 0));\n                    do {\n                        iVar1 = iVar7;\n                        iVar7 = iVar1 + 1;\n                        if (iVar5 <= iVar7) break;\n                        iVar6 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uStack84, iVar7, 1, auStack56);\n                        uVar4 = uStack72;\n                        arg_14h = uStack76;\n                    } while ((iVar6 == 0) || ((uStack48 & 0x200) != 0));\n                    (*_sym.imp.USER32.dll_CheckMenuRadioItem)(uStack84, iStack60, iVar1, iStack64, 0x400);\n                }\n            }\n            fcn.0042017e(iStack68);\n        }\n        cVar2 = fcn.0046de72(uVar4, arg_14h);\n        if (cVar2 != '\\0') {\n            return;\n        }\n    }\ncode_r0x0046ef7f:\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x111, arg_14h << 0x10 | arg_ch & 0xffff, lParam);\n    return;\n}\n",
        "token_count": 1504
    },
    "0046f3da": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f3da(uint noname_0, int32_t arg_ch, uint hDlg, uint wParam, uint lParam)\n\n{\n    int32_t arg_ch_00;\n    \n    arg_ch_00 = **(*0x4c1870 + arg_ch * 4);\n    if (*(arg_ch_00 + 0x184) != '\\0') {\n        fcn.00468c6b(0xfffffff4, arg_ch_00, 0, 0);\n    }\n    *(arg_ch_00 + 0x184) = 0;\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x232, wParam, lParam);\n    return;\n}\n",
        "token_count": 157
    },
    "0046f425": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f425(uint noname_0, int32_t arg_ch, uint hDlg, uint wParam, uint lParam)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(*0x4c1870 + arg_ch * 4);\n    if (*(iVar1 + 0x2c) == 0) {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x53, wParam, lParam);\n    }\n    else {\n        fcn.0046e13e(*(iVar1 + 0x28));\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0046f45a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f45a(uint hDlg, uint32_t arg_ch, uint32_t arg_10h, uint wParam)\n\n{\n    uint32_t in_ECX;\n    uint32_t lpPoint;\n    uint32_t y;\n    \n    lpPoint = in_ECX;\n    y = in_ECX;\n    if (*0x4c18c0 != 0) {\n        lpPoint = arg_ch;\n        y = arg_10h;\n        (*_sym.imp.USER32.dll_ClientToScreen)(hDlg, &lpPoint);\n        (*_sym.imp.COMCTL32.dll_ImageList_DragMove)(lpPoint, y);\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x200, wParam, arg_10h << 0x10 | arg_ch & 0xffff);\n    return;\n}\n",
        "token_count": 186
    },
    "0046f5d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046f5d0(uint32_t hWnd, uint wParam, uint *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    code *pcVar5;\n    char cVar6;\n    int16_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t unaff_EDI;\n    uint32_t uVar12;\n    uint32_t *arg_ch;\n    uint *arg_10h_00;\n    uint32_t uVar13;\n    uint uStack172;\n    uint32_t uStack168;\n    uint uStack164;\n    uint32_t uStack160;\n    uint uStack156;\n    uint32_t uStack152;\n    uint uStack148;\n    uint8_t uStack144;\n    uint *puStack132;\n    uint32_t uStack128;\n    uint uStack124;\n    uint32_t uStack120;\n    uint uStack108;\n    int32_t iStack104;\n    uint uStack96;\n    uint uStack88;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack36;\n    \n    uVar13 = hWnd;\n    uStack152 = fcn.0041af7d(hWnd);\n    pcVar5 = _sym.imp.USER32.dll_SendMessageW;\n    pcVar4 = _sym.imp.USER32.dll_GetKeyState;\n    uVar10 = **(*0x4c1870 + uStack152 * 4);\n    uVar9 = arg_10h[2];\n    uStack128 = uVar10;\n    if (uVar9 < 0xfffffe6f) {\n        if (uVar9 == 0xfffffe6e) {\ncode_r0x0046f80e:\n            uVar8 = 0;\n            iVar11 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x110a, 9);\n            if (iVar11 == 0) goto code_r0x0046f645;\n            uStack108 = 4;\n            iStack104 = iVar11;\n            iVar11 = (*pcVar5)(*arg_10h, 0x113e, 0, &uStack108);\n            if (((iVar11 == 0) || (arg_10h[0xd] == arg_10h[0x17])) || (arg_10h[3] == 0x1000)) goto code_r0x0046f645;\n            uVar10 = arg_10h[3] - 1;\n            uVar9 = uVar13;\n            goto joined_r0x0046fada;\n        }\n        if (uVar9 < 0xfffffdda) {\n            if (uVar9 == 0xfffffdd9) {\n                uVar9 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x130b, 0);\n            }\n            else if (uVar9 == 0xfffffd09) {\n                *(uVar10 + 0x19a) = 1;\n                if (*(uVar10 + 0x199) != '\\0') goto code_r0x0046f645;\n                *(uVar10 + 0x19a) = 0;\n                uVar9 = uVar13;\n            }\n            else {\n                if (uVar9 == 0xfffffd0e) {\n                    *(uVar10 + 0x199) = 1;\n                    goto code_r0x0046f645;\n                }\n                if (uVar9 == 0xfffffd0f) {\n                    if (*(uVar10 + 0x19a) == '\\x01') {\n                        fcn.0046de72(arg_10h[1], 0xfffffd0f);\n                    }\n                    *(uVar10 + 0x199) = 0;\n                    goto code_r0x0046f645;\n                }\n                if (uVar9 != 0xfffffd16) goto code_r0x0046f645;\n            }\n        }\n        else {\n            if (uVar9 != 0xfffffdda) {\n                if (uVar9 == 0xfffffdee) {\n                    if ((*(uVar10 + 0x188) != 0) && (iVar11 = 3,  2 < *0x4c1894)) {\n                        do {\n                            iVar3 = **(*0x4c1884 + iVar11 * 4);\n                            if ((iVar3 != 0) && (*(iVar3 + 0x93) == arg_10h[1])) break;\n                            iVar11 = iVar11 + 1;\n                        } while (iVar11 <= *0x4c1894);\n                        if (iVar11 <= *0x4c1894) {\n                            fcn.00422c1d(arg_10h + 4, *(**(*0x4c1884 + iVar11 * 4) + 0x54), 0x4f);\n                            *(arg_10h + 0xae) = 0;\n                            return 1;\n                        }\n                    }\n                    goto code_r0x0046f645;\n                }\n                if (uVar9 != 0xfffffe3d) {\n                    if (uVar9 != 0xfffffe64) goto code_r0x0046f645;\n                    uVar2 = *arg_10h;\n                    uVar8 = 0xfffffff0;\n                    uVar10 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2);\n                    if ((((uVar10 & 0x100) == 0) || (*(arg_10h + 3) != 0x20)) ||\n                       (iVar11 = (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x110a, 9, 0),  iVar11 == 0))\n                    goto code_r0x0046f645;\n                    uStack108 = 4;\n                    iStack104 = iVar11;\n                    uVar10 = (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x113e, 0, &uStack108);\n                    uVar9 = uVar13;\n                    goto joined_r0x0046fada;\n                }\n                goto code_r0x0046f80e;\n            }\n            iVar7 = (*_sym.imp.USER32.dll_GetKeyState)();\n            if ((-1 < iVar7) || (iVar7 = (*pcVar4)(9),  -1 < iVar7)) goto code_r0x0046f645;\n            iVar11 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x130b, 0, 0);\n            iVar7 = (*_sym.imp.USER32.dll_GetKeyState)(0x10);\n            if (iVar7 < 0) {\n                uVar9 = iVar11 - 1;\n            }\n            else {\n                uVar9 = iVar11 + 1;\n            }\n        }\n        uVar8 = arg_10h[1];\n    }\n    else {\n        if (uVar9 < 0xfffffff1) {\n            if (uVar9 == 0xfffffff0) {\n                (*_sym.imp.USER32.dll_ReleaseCapture)();\n            }\n            else if ((uVar9 == 0xfffffec0) || (uVar9 == 0xfffffed4)) {\n                (*_sym.imp.USER32.dll_InvalidateRect)(*arg_10h, 0);\n            }\n            else if (uVar9 == 0xffffff93) {\n                (*_sym.imp.COMCTL32.dll_ImageList_SetDragCursorImage)(*0x4c18bc, 0, 0);\n                (*_sym.imp.COMCTL32.dll_ImageList_BeginDrag)(*0x4c18bc, 0, 0xfffffff8, 0xfffffff0);\n                (*_sym.imp.USER32.dll_SetCapture)(hWnd);\n                *0x4c18c0 = wParam;\n                uStack172 = 1;\n                fcn.00412570();\n                uStack172 = 1;\n                fcn.0040caee(L\"@GUI_DRAGID\");\n                fcn.0040d380(&uStack164, &stack0xffffff44, 1, 2);\n                fcn.00405cd3();\n                (*_sym.imp.USER32.dll_ClientToScreen)(*arg_10h, arg_10h + 8);\n                (*_sym.imp.COMCTL32.dll_ImageList_DragEnter)(0, arg_10h[8], arg_10h[9]);\n                fcn.00412570();\n            }\n            else if (uVar9 == 0xffffff94) {\n                uVar8 = arg_10h[1];\n                arg_10h_00 = &uStack172;\n                arg_ch = &uStack152;\n                cVar6 = fcn.0040cf2c(uVar8, arg_ch, arg_10h_00);\n                if (cVar6 != '\\0') {\n                    *(**(*0x4c1884 + unaff_EDI * 4) + 0x96) = *(arg_10h + 4);\n                    fcn.0046de72(arg_10h[1], 0);\n                    if (*(**(*0x4c1884 + arg_10h_00 * 4) + 0x28) != 0) {\n                        *0x4c184c = uVar8;\n                        fcn.0040c935(**(*0x4c1884 + arg_10h_00 * 4) + 0x24);\n                        *0x4c1860 = *(**(*0x4c1884 + arg_ch * 4) + 0x98);\n                        (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1030, arg_10h[4], fcn.0046de69);\n                    }\n                }\n            }\n            goto code_r0x0046f645;\n        }\n        if (uVar9 == 0xfffffff4) {\n            iVar11 = fcn.0041b155(*arg_10h);\n            if (iVar11 != -1) {\n                iVar11 = **(*0x4c1884 + iVar11 * 4);\n                cVar6 = *(iVar11 + 0x90);\n                if ((cVar6 == '\\x10') || (cVar6 == '\\x13')) {\n                    if (arg_10h[3] == 1) {\n                        return 0x20;\n                    }\n                    if (arg_10h[3] == 0x10001) {\n                        iVar11 = *(iVar11 + 0x48);\n                        cVar6 = fcn.0040cf2c(arg_10h[0xb], &uStack156, &stack0xffffff50);\n                        if ((cVar6 != '\\0') &&\n                           (uVar10 = (*_sym.imp.USER32.dll_GetWindowLongW)\n                                               (*(**(*0x4c1884 + uVar13 * 4) + 0x34), 0xfffffff0), \n                           (uVar10 & 0x8000000) == 0)) {\n                            if (((*(arg_10h + 10) & 0x11) != 0) && (*(**(*0x4c1884 + uVar13 * 4) + 0x90) != '\\x14'))\n                            goto code_r0x0046f645;\n                            iVar3 = *(**(*0x4c1884 + uVar13 * 4) + 0x4c);\n                            if (iVar3 != -1) {\n                                arg_10h[0xc] = iVar3;\n                            }\n                            iVar3 = *(**(*0x4c1884 + uVar13 * 4) + 0x48);\n                            if ((-1 < iVar3) && ((iVar11 != -0x2000000 || ((*(arg_10h + 9) & 1) != 0)))) {\n                                arg_10h[0xd] = iVar3;\n                            }\n                        }\n                        return 0;\n                    }\n                }\n            }\n            goto code_r0x0046f645;\n        }\n        if (uVar9 == 0xfffffffb) {\n            uStack168 = uStack168 & 0xffffff;\n            fcn.0041b736(uVar10, 1);\n            (*_sym.imp.USER32.dll_GetCursorPos)(&uStack172);\n            (*_sym.imp.USER32.dll_ScreenToClient)(*arg_10h, &stack0xffffff50);\n            uVar10 = fcn.0041b155(*arg_10h);\n            if (uVar10 == 0xffffffff) {\n                uVar8 = (*_sym.imp.USER32.dll_GetParent)(*arg_10h);\n                uVar10 = fcn.0041b155(uVar8);\n                if (uVar10 == 0xffffffff) goto code_r0x0046f645;\n                uStack172 = CONCAT13(1, uStack172);\n            }\n            cVar6 = *(**(*0x4c1884 + uVar10 * 4) + 0x90);\n            uStack160 = uVar10;\n            if (cVar6 == '\\x10') {\n                uStack152 = uStack168;\n                uStack148 = uStack164;\n                uVar12 = 0x1111;\n                uVar9 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1111, 0, &uStack152);\n                if (uVar9 != 0) {\n                    uStack124 = 4;\n                    uStack120 = uVar9;\n                    (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x113e, 0, &uStack124);\n                    if (((uStack160 & 0x46) != 0) &&\n                       ((cVar6 = fcn.0040cf2c(uStack88, &uStack172, &stack0xffffff40),  cVar6 == '\\0' ||\n                        (uVar10 = uVar12,  *(**(*0x4c1884 + uVar12 * 4) + 0xc) == 0)))) {\n                        uVar10 = uVar13;\n                    }\n                }\n                (*_sym.imp.USER32.dll_ClientToScreen)(*arg_10h, &stack0xffffff48);\n                iVar11 = *(**(*0x4c1884 + uVar10 * 4) + 0xc);\n                if (iVar11 != 0) {\n                    (*_sym.imp.USER32.dll_TrackPopupMenuEx)(iVar11, 0x80, uStack168, uStack164, *puStack132, 0);\n                    return 1;\n                }\n            }\n            else if (cVar6 == '\\x13') {\n                uStack128 = uStack168;\n                uStack124 = uStack164;\n                iVar11 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1012, 0, &uStack128);\n                if ((-1 < iVar11) && (uStack172._3_1_ == '\\0')) {\n                    uStack68 = 4;\n                    iStack64 = iVar11;\n                    iVar11 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x104b, 0, &uStack68);\n                    if (iVar11 == 0) goto code_r0x0046f645;\n                    if (((uStack120 & 0xe) != 0) &&\n                       (((cVar6 = fcn.0040cf2c(uStack36, &uStack156, &stack0xffffff50),  cVar6 == '\\0' ||\n                         (iVar11 = **(*0x4c1884 + uVar13 * 4),  iVar11 == 0)) ||\n                        (uVar10 = uVar13,  *(iVar11 + 0xc) == 0)))) {\n                        uVar10 = uStack172;\n                    }\n                }\n                (*_sym.imp.USER32.dll_ClientToScreen)(*arg_10h, &uStack168);\n                iVar11 = *(**(*0x4c1884 + uVar10 * 4) + 0xc);\n                if (iVar11 != 0) {\n                    (*_sym.imp.USER32.dll_TrackPopupMenuEx)(iVar11, 0, uStack168, uStack164, *puStack132, 0);\n                }\n            }\n            goto code_r0x0046f645;\n        }\n        if (uVar9 != 0xfffffffe) goto code_r0x0046f645;\n        fcn.0041b736(uVar10, 1);\n        (*_sym.imp.USER32.dll_GetCursorPos)(&uStack172);\n        (*_sym.imp.USER32.dll_ScreenToClient)(*arg_10h, &stack0xffffff50);\n        uVar8 = *arg_10h;\n        iVar11 = fcn.0041b155(uVar8);\n        pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n        if ((iVar11 == -1) || (uVar1 = *(**(*0x4c1884 + iVar11 * 4) + 0x90),  uVar1 < 0x10)) goto code_r0x0046f645;\n        if (uVar1 < 0x12) {\n            uStack152 = uStack168;\n            uStack148 = uStack164;\n            iVar11 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1111, 0, &uStack152);\n            if (iVar11 != 0) {\n                uStack108 = 0xc;\n                uStack96 = 0xf000;\n                iStack104 = iVar11;\n                (*pcVar4)(*arg_10h, 0x113e, 0, &uStack108);\n                if ((uStack144 & 0x46) != 0) {\n                    (*pcVar4)(*arg_10h, 0x110b, 9, 0);\n                    (*pcVar4)(*arg_10h, 0x110b, 9, uStack156);\n                }\n            }\n            goto code_r0x0046f645;\n        }\n        if (uVar1 != 0x13) goto code_r0x0046f645;\n        uStack128 = uStack168;\n        uStack124 = uStack164;\n        iVar11 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1012, 0, &uStack128);\n        if (iVar11 == -1) goto code_r0x0046f645;\n        uStack68 = 4;\n        iStack64 = iVar11;\n        (*pcVar4)(*arg_10h, 0x104b, 0, &uStack68);\n        uVar10 = uStack120 & 0xe;\n        uVar9 = uVar13;\njoined_r0x0046fada:\n        if (uVar10 == 0) goto code_r0x0046f645;\n    }\n    fcn.0046de72(uVar8, uVar9);\ncode_r0x0046f645:\n    uVar8 = (*_sym.imp.USER32.dll_DefDlgProcW)(hWnd, 0x4e, wParam, arg_10h);\n    return uVar8;\n}\n",
        "token_count": 4292
    },
    "0046fe80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046fe80(uint hDlg, uint arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    arg_8h = fcn.0041b155(arg_ch);\n    if (((arg_8h != -1) &&\n        (((arg_10h == 8 && (*(**(*0x4c1884 + arg_8h * 4) + 0x90) == '\\x12')) ||\n         ((arg_10h == 4 && (*(**(*0x4c1884 + arg_8h * 4) + 0x90) == '\\x16')))))) &&\n       (cVar1 = fcn.0046de72(arg_8h, arg_10h),  cVar1 != '\\0')) {\n        return;\n    }\n    if (arg_18h == 0) {\n        uVar2 = 0x115;\n    }\n    else {\n        uVar2 = 0x114;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, uVar2, arg_14h << 0x10 | arg_10h & 0xffff, arg_ch);\n    return;\n}\n",
        "token_count": 297
    },
    "0046ff91": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ff91(int32_t hDlg, int32_t wParam, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint16_t uVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.0041af7d(hDlg);\n    puVar1 = **(*0x4c1870 + iVar3 * 4);\n    iVar3 = puVar1[0x11];\n    iVar7 = puVar1[0x12];\n    if (puVar1[0x67] != 0) {\n        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xf);\n        iVar7 = iVar7 - iVar4;\n    }\n    if ((((iVar3 < 1) || (iVar7 < 1)) || (arg_10h < 1)) || ((arg_14h < 1 || (wParam == 1)))) {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 5, wParam, arg_14h << 0x10 | arg_10h & 0xffff);\n    }\n    else {\n        hDlg = 3;\n        if (2 < *0x4c1894) {\n            do {\n                piVar2 = **(*0x4c1884 + hDlg * 4);\n                if (((piVar2 != NULL) && (piVar2[1] == puVar1[1])) && (*piVar2 != 0)) {\n                    iVar4 = (*(piVar2 + 0x22) * arg_10h) / iVar3;\n                    iVar5 = (*(piVar2 + 0x8a) * arg_14h) / iVar7;\n                    wParam = (*(piVar2 + 0x23) * arg_10h) / iVar3;\n                    iVar6 = (*(piVar2 + 0x8e) * arg_14h) / iVar7;\n                    uVar8 = *(piVar2 + 0x86);\n                    if (uVar8 != 0) {\n                        if (((uVar8 & 0x100) != 0) && (wParam = *(piVar2 + 0x23),  (uVar8 & 6) == 0)) {\n                            if ((uVar8 & 8) == 0) {\n                                if (arg_10h / 2 < iVar4) {\n                                    iVar4 = (arg_10h - (((iVar3 - *(piVar2 + 0x22)) - wParam) * arg_10h) / iVar3) -\n                                            wParam;\n                                }\n                            }\n                            else {\n                                iVar4 = (arg_10h - iVar3) / 2 + *(piVar2 + 0x22);\n                            }\n                            uVar8 = *(piVar2 + 0x86);\n                        }\n                        if ((uVar8 & 0x200) != 0) {\n                            iVar6 = *(piVar2 + 0x8e);\n                            if ((uVar8 & 0x60) == 0) {\n                                if (uVar8 < '\\0') {\n                                    iVar5 = (arg_14h - iVar7) / 2 + *(piVar2 + 0x8a);\n                                }\n                                else if (arg_14h / 2 < iVar5) {\n                                    iVar5 = (arg_14h - (((iVar7 - *(piVar2 + 0x8a)) - iVar6) * arg_14h) / iVar7) - iVar6\n                                    ;\n                                }\n                                uVar8 = *(piVar2 + 0x86);\n                            }\n                        }\n                        if ((uVar8 & 2) != 0) {\n                            iVar4 = *(piVar2 + 0x22);\n                        }\n                        if ((uVar8 & 4) != 0) {\n                            if ((uVar8 & 2) == 0) {\n                                iVar4 = ((*(piVar2 + 0x23) - wParam) - iVar3) + *(piVar2 + 0x22) + arg_10h;\n                            }\n                            else {\n                                wParam = ((*(piVar2 + 0x23) - iVar4) - iVar3) + *(piVar2 + 0x22) + arg_10h;\n                            }\n                        }\n                        if ((uVar8 & 0x20) != 0) {\n                            iVar5 = *(piVar2 + 0x8a);\n                        }\n                        if ((uVar8 & 0x40) != 0) {\n                            if ((uVar8 & 0x20) == 0) {\n                                iVar5 = ((*(piVar2 + 0x8e) - iVar6) - iVar7) + *(piVar2 + 0x8a) + arg_14h;\n                            }\n                            else {\n                                iVar6 = ((*(piVar2 + 0x8e) - iVar5) - iVar7) + *(piVar2 + 0x8a) + arg_14h;\n                            }\n                        }\n                    }\n                    (*_sym.imp.USER32.dll_MoveWindow)(*piVar2, iVar4, iVar5, wParam, iVar6, 0);\n                    if (*(piVar2 + 0x24) == '\\0') {\n                        (*_sym.imp.USER32.dll_SendMessageW)(*piVar2, 0x142, 0, 0xffff);\n                    }\n                    else if ((*(piVar2 + 0x24) == '\\x16') && ((*(piVar2 + 0x92) & 0x20) == 0)) {\n                        (*_sym.imp.USER32.dll_SendMessageW)(*piVar2, 0x469, piVar2[0xd], 0);\n                        if ((*(piVar2 + 0x93) != 0xff) && (*(piVar2 + 0x93) != puVar1[100])) {\n                            (*_sym.imp.USER32.dll_ShowWindow)(*piVar2, 0);\n                        }\n                    }\n                }\n                hDlg = hDlg + 1;\n            } while (hDlg <= *0x4c1894);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(*puVar1, 0, 1);\n        *(puVar1 + 0x61) = 1;\n    }\n    return;\n}\n",
        "token_count": 1453
    },
    "0047035d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0047035d(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t *in_ECX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *in_ECX;\n    do {\n        if (uVar1 == 0) {\n            return NULL;\n        }\n        if (uVar1 == 0x6c) {\n            uVar2 = in_ECX[1];\ncode_r0x00470490:\n            in_ECX = in_ECX + uVar2;\n        }\n        else if (uVar1 == 0x76) {\n            if (arg_8h < 0) {\n                return in_ECX;\n            }\n            in_ECX = in_ECX + 2;\n        }\n        else {\n            if ((((uVar1 == 0x7f) || (uVar1 == 0x84)) || (uVar1 == 0x80)) || (uVar1 == 0x85)) {\n                if (in_ECX[2] == arg_8h) {\n                    return in_ECX;\n                }\n                uVar2 = *(uVar1 + 0x49e530);\n                goto code_r0x00470490;\n            }\n            uVar2 = uVar1;\n            if (uVar2 < 0x90) {\n                if (uVar2 == 0x8f) {\ncode_r0x0047043b:\n                    in_ECX = in_ECX + in_ECX[1];\n                }\n                else {\n                    if (uVar2 < 0x55) goto code_r0x00470442;\n                    if (uVar2 < 0x5b) {\ncode_r0x00470411:\n                        uVar1 = in_ECX[1];\n                    }\n                    else {\n                        if (0x5d < uVar2) {\n                            if (uVar2 < 0x61) goto code_r0x00470411;\n                            if (uVar2 != 0x61) goto code_r0x00470442;\n                        }\n                        uVar1 = in_ECX[2];\n                    }\n                    if ((uVar1 == 0x10) || (uVar1 == 0xf)) {\n                        in_ECX = in_ECX + 2;\n                    }\n                }\n            }\n            else if (((uVar2 == 0x91) || (uVar2 == 0x93)) || (uVar2 == 0x95)) goto code_r0x0047043b;\ncode_r0x00470442:\n            in_ECX = in_ECX + *(uVar2 + 0x49e530);\n            if (((in_EDX != 0) && (0x1c < uVar2)) &&\n               (((uVar2 < 0x1f || (uVar2 - 0x21 < 0x1a)) && ((in_ECX[-1] & 0xfc00) == 0xd800)))) {\n                in_ECX = in_ECX + 1;\n            }\n        }\n        uVar1 = *in_ECX;\n    } while( true );\n}\n",
        "token_count": 713
    },
    "00470830": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00470830(uint arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    uint16_t *in_EDX;\n    uint16_t *puVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = fcn.0040785a();\n    while (puVar3 < in_EDX) {\n        uVar1 = *puVar3;\n        uVar7 = uVar1;\n        if (uVar7 == 0x77) {\n            do {\n                puVar3 = puVar3 + puVar3[1];\n            } while (*puVar3 == 0x71);\n            goto code_r0x00470b1c;\n        }\n        if (uVar7 == 0x6f) {\n            puVar5 = *(arg_ch + 0x10);\n            if (puVar5 < *(arg_ch + 0x24)) {\n                do {\n                    if (*puVar5 == puVar3 + (2 - *(arg_ch + 0x14)) >> 1) {\n                        return 1;\n                    }\n                    puVar5 = puVar5 + 1;\n                } while (puVar5 < *(arg_ch + 0x24));\n            }\n            piVar6 = *(arg_ch + 0x14) + puVar3[1] * 2;\n            if (piVar6[1] == 0) {\n                return 1;\n            }\n            while (iVar4 = fcn.00470830(arg_8h, arg_ch),  iVar4 == 0) {\n                piVar6 = piVar6 + piVar6[1];\n                if (*piVar6 != 0x71) {\n                    return 0;\n                }\n            }\n            goto code_r0x00470b1c;\n        }\n        if ((((uVar1 == 0x8c) || (uVar1 == 0x8d)) || (uVar1 == 0x9b)) || (uVar1 == 0x8e)) {\n            puVar3 = puVar3 + *(uVar7 + 0x49e530);\n            do {\n                puVar3 = puVar3 + puVar3[1];\n            } while (*puVar3 == 0x71);\n            goto code_r0x00470b1c;\n        }\n        if (((uVar1 == 0x82) || (uVar1 == 0x83)) || ((uVar1 == 0x84 || (uVar1 == 0x85)))) {\n            do {\n                puVar3 = puVar3 + puVar3[1];\n            } while (*puVar3 == 0x71);\n            goto code_r0x00470b1c;\n        }\n        if (((uVar7 == 0x7d) || (uVar7 == 0x7e)) ||\n           ((uVar7 == 0x7f || (((uVar1 == 0x80 || (uVar7 == 0x7b)) || (uVar7 == 0x7c)))))) {\ncode_r0x00470a93:\n            if (puVar3[1] == 0) {\n                return 1;\n            }\n            if ((uVar1 != 0x81) || (puVar3[puVar3[1]] == 0x71)) {\n                bVar2 = false;\n                do {\n                    if ((!bVar2) && (iVar4 = fcn.00470830(arg_8h, arg_ch),  iVar4 != 0)) {\n                        bVar2 = true;\n                    }\n                    puVar3 = puVar3 + puVar3[1];\n                } while (*puVar3 == 0x71);\n                if (!bVar2) {\n                    return 0;\n                }\n            }\n            goto code_r0x00470b1c;\n        }\n    // switch table (144 cases) at 0x470b44\n        switch(uVar7) {\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n        case 0xf:\n        case 0x10:\n        case 0x16:\n        case 0x1d:\n        case 0x1e:\n        case 0x1f:\n        case 0x20:\n        case 0x23:\n        case 0x24:\n        case 0x29:\n        case 0x2b:\n        case 0x3d:\n        case 0x3e:\n        case 0x43:\n        case 0x45:\n        case 0x57:\n        case 0x58:\n        case 0x5d:\n        case 0x5f:\n            goto code_r0x00470b3e;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n        case 0x14:\n        case 0x15:\n        case 0x17:\n        case 0x18:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n        case 0x1c:\n        case 0x30:\n        case 0x31:\n        case 0x36:\n        case 0x38:\n        case 0x3b:\n        case 0x3c:\n        case 0x3f:\n        case 0x40:\n        case 0x41:\n        case 0x42:\n        case 0x44:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n        case 0x7b:\n        case 0x7c:\n        case 0x7d:\n        case 0x7e:\n        case 0x7f:\n        case 0x80:\n        case 0x81:\n        case 0x82:\n        case 0x83:\n        case 0x84:\n        case 0x85:\n        case 0x86:\n        case 0x87:\n        case 0x88:\n        case 0x89:\n        case 0x8a:\n        case 0x8b:\n        case 0x8c:\n        case 0x8d:\n        case 0x8e:\n        case 0x90:\n        case 0x92:\n        case 0x94:\n            break;\n        case 0x21:\n        case 0x22:\n        case 0x25:\n        case 0x26:\n        case 0x2a:\n        case 0x2c:\n        case 0x2e:\n        case 0x2f:\n        case 0x32:\n        case 0x33:\n        case 0x37:\n        case 0x39:\n            break;\n        case 0x27:\n        case 0x28:\n        case 0x2d:\n        case 0x34:\n        case 0x35:\n        case 0x3a:\n            break;\n        case 0x55:\n        case 0x56:\n        case 0x59:\n        case 0x5a:\n        case 0x5e:\n        case 0x60:\n            break;\n        case 0x5b:\n        case 0x5c:\n        case 0x61:\n            break;\n        case 0x6a:\n        case 0x6b:\n            puVar3 = puVar3 + 0x11;\n            goto code_r0x004709c8;\n        case 0x6c:\n            puVar3 = puVar3 + puVar3[1];\ncode_r0x004709c8:\n            uVar1 = *puVar3;\n            if ((uVar1 < 0x62) ||\n               ((99 < uVar1 && ((uVar1 < 0x66 || ((0x67 < uVar1 && ((0x69 < uVar1 || (puVar3[1] != 0)))))))))) {\ncode_r0x00470b3e:\n                return 0;\n            }\n            break;\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n            goto code_r0x00470b3e;\n        case 0x8f:\n        case 0x91:\n        case 0x93:\n        case 0x95:\n            break;\n        default:\n            goto code_r0x00470a93;\n        }\ncode_r0x00470b1c:\n        puVar3 = fcn.0040785a();\n    }\ncode_r0x00470b3e:\n    return 1;\n}\n",
        "token_count": 2197
    },
    "00470c98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00470c98(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    uint16_t *puVar7;\n    int32_t in_EDX;\n    int32_t iVar8;\n    uint16_t *puVar9;\n    bool bVar10;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar8 = -1;\n    var_4h = -1;\n    puVar9 = in_ECX + 4;\ncode_r0x00470cac:\n    iVar5 = iVar8;\n    iVar8 = 0;\ncode_r0x00470cae:\n    uVar6 = *puVar9;\n    // switch table (156 cases) at 0x470e7c\n    switch(uVar6) {\n    case 0:\n    case 0x71:\n    case 0x72:\n    case 0x98:\n    case 0x99:\n        goto code_r0x00470d0a;\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x70:\n    case 0x76:\n    case 0x87:\n    case 0x88:\n    case 0x89:\n    case 0x8a:\n    case 0x8b:\n    case 0x90:\n    case 0x92:\n    case 0x94:\n    case 0x96:\n    case 0x97:\n    case 0x9a:\n        uVar2 = *(uVar6 + 0x49e530);\n        break;\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n        goto code_r0x00470e23;\n    case 0xe:\n        return -2;\n    case 0xf:\n    case 0x10:\n        puVar9 = puVar9 + 2;\n        goto code_r0x00470e23;\n    case 0x11:\n    case 0x16:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x2a:\n    case 0x2b:\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n    case 0x5c:\n    case 0x5e:\n    case 0x5f:\n    case 0x60:\n    case 0x61:\n    case 0x6d:\n    case 0x6e:\n    case 0x73:\n    case 0x74:\n    case 0x75:\n    case 0x7e:\n    case 0x80:\n    case 0x82:\n    case 0x83:\n    case 0x84:\n    case 0x85:\n    case 0x86:\n    case 0x8c:\n    case 0x8d:\n    case 0x8e:\n    case 0x9b:\n        goto code_r0x00470e77;\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n        iVar8 = iVar8 + 1;\n        puVar9 = puVar9 + 2;\n        goto code_r0x00470dd0;\n    case 0x29:\n    case 0x36:\n    case 0x43:\n    case 0x50:\n        iVar8 = iVar8 + puVar9[1];\n        puVar9 = puVar9 + 3;\ncode_r0x00470dd0:\n        if ((in_EDX != 0) && ((puVar9[-1] & 0xfc00) == 0xd800)) goto code_r0x00470df4;\n        goto code_r0x00470cae;\n    case 0x5d:\n        iVar8 = iVar8 + puVar9[1];\n        if ((puVar9[2] == 0x10) || (puVar9[2] == 0xf)) {\n            puVar9 = puVar9 + 2;\n        }\ncode_r0x00470e55:\n        puVar9 = puVar9 + 3;\n        goto code_r0x00470cae;\n    default:\n        return -4;\n    case 0x6a:\n    case 0x6b:\n    case 0x6c:\n        if (uVar6 == 0x6c) {\n            puVar9 = puVar9 + puVar9[1];\n        }\n        else {\n            puVar9 = puVar9 + 0x11;\n        }\n        uVar3 = *puVar9;\n        if (0x61 < uVar3) {\n            if (uVar3 < 0x68) {\n                return -1;\n            }\n            if (uVar3 < 0x6a) {\n                if (puVar9[1] != puVar9[2]) {\n                    return -1;\n                }\n                iVar8 = iVar8 + puVar9[1];\n                goto code_r0x00470e55;\n            }\n        }\n        iVar8 = iVar8 + 1;\n        goto code_r0x00470cae;\n    case 0x6f:\n        if (arg_8h == 0) {\n            return -3;\n        }\n        puVar1 = *(arg_ch + 0x14) + puVar9[1] * 2;\n        puVar7 = puVar1;\n        do {\n            puVar7 = puVar7 + puVar7[1];\n        } while (*puVar7 == 0x71);\n        if ((puVar1 < puVar9) && (puVar9 < puVar7)) {\n            return -1;\n        }\n        iVar5 = fcn.00470c98(arg_8h, arg_ch);\n        if (iVar5 < 0) {\n            return iVar5;\n        }\n        goto code_r0x00470d05;\n    case 0x77:\n    case 0x78:\n    case 0x79:\n    case 0x7a:\n        do {\n            puVar9 = puVar9 + puVar9[1];\n        } while (*puVar9 == 0x71);\n        uVar2 = *(*puVar9 + 0x49e530);\n        iVar5 = var_4h;\n        break;\n    case 0x7b:\n    case 0x7c:\n    case 0x7d:\n    case 0x7f:\n    case 0x81:\n        iVar5 = fcn.00470c98(arg_8h, arg_ch);\n        if (iVar5 < 0) {\n            return iVar5;\n        }\n        do {\n            puVar9 = puVar9 + puVar9[1];\n        } while (*puVar9 == 0x71);\ncode_r0x00470d05:\n        iVar8 = iVar8 + iVar5;\n        puVar9 = puVar9 + 2;\n        iVar5 = var_4h;\n        goto code_r0x00470cae;\n    case 0x8f:\n    case 0x91:\n    case 0x93:\n    case 0x95:\n        goto code_r0x00470dae;\n    }\n    puVar9 = puVar9 + uVar2;\n    goto code_r0x00470cae;\ncode_r0x00470dae:\n    puVar9 = puVar9 + *(uVar6 + 0x49e530) + puVar9[1];\n    goto code_r0x00470cae;\ncode_r0x00470e23:\n    iVar8 = iVar8 + 1;\ncode_r0x00470df4:\n    puVar9 = puVar9 + 1;\n    goto code_r0x00470cae;\ncode_r0x00470d0a:\n    iVar4 = iVar8;\n    if ((-1 < iVar5) && (bVar10 = iVar5 != iVar8,  iVar8 = iVar5,  iVar4 = var_4h,  bVar10)) {\ncode_r0x00470e77:\n        return -1;\n    }\n    var_4h = iVar4;\n    if (*puVar9 != 0x71) {\n        return iVar8;\n    }\n    puVar9 = puVar9 + 2;\n    goto code_r0x00470cac;\n}\n",
        "token_count": 2358
    },
    "00470f9f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00470f9f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    bool bVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint16_t **in_ECX;\n    int32_t in_EDX;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint16_t *var_4h;\n    \n    puVar7 = *in_ECX;\n    iVar1 = *arg_18h;\n    bVar3 = false;\n    var_4h = puVar7;\n    if (*puVar7 == 0x28) {\n        if (puVar7[1] == 0x2a) {\n            for (var_4h = puVar7 + 2; (var_4h < *(in_EDX + 0x1c) && (*var_4h != 0x29)); var_4h = var_4h + 1) {\n            }\n        }\n        else if (puVar7[1] == 0x3f) {\n            var_4h = puVar7 + 2;\n            uVar4 = *var_4h;\n            if (uVar4 == 0x7c) {\n                var_4h = puVar7 + 3;\n                bVar3 = true;\n            }\n            else {\n                if (uVar4 == 0x23) {\n                    var_4h = puVar7 + 3;\n                    uVar4 = *var_4h;\n                    while ((uVar4 != 0 && (uVar4 != 0x29))) {\n                        var_4h = var_4h + 1;\n                        uVar4 = *var_4h;\n                    }\n                    goto code_r0x004713ed;\n                }\n                if (uVar4 == 0x28) {\n                    if ((puVar7[3] != 0x3f) && (uVar4 = *var_4h,  uVar4 != 0)) {\n                        do {\n                            if (uVar4 == 0x29) break;\n                            var_4h = var_4h + 1;\n                            uVar4 = *var_4h;\n                        } while (uVar4 != 0);\n                        if (*var_4h != 0) {\n                            var_4h = var_4h + 1;\n                        }\n                    }\n                }\n                else {\n                    if (*var_4h == 0x50) {\n                        var_4h = puVar7 + 3;\n                    }\n                    uVar4 = *var_4h;\n                    if ((((uVar4 == 0x3c) && (var_4h[1] != 0x21)) && (var_4h[1] != 0x3d)) || (uVar4 == 0x27)) {\n                        iVar6 = iVar1 + 1;\n                        *arg_18h = iVar6;\n                        if ((arg_8h == 0) && (iVar6 == arg_ch)) {\n                            return iVar6;\n                        }\n                        puVar7 = var_4h + 1;\n                        var_4h = puVar7;\n                        if (uVar4 == 0x3c) {\n                            uVar4 = 0x3e;\n                        }\n                        for (; *var_4h != uVar4; var_4h = var_4h + 1) {\n                        }\n                        if (((arg_8h != 0) && (arg_ch == var_4h - puVar7 >> 1)) &&\n                           (iVar5 = fcn.0047191e(arg_ch),  iVar5 == 0)) {\n                            return iVar6;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            iVar6 = iVar1 + 1;\n            *arg_18h = iVar6;\n            if ((arg_8h == 0) && (iVar6 == arg_ch)) {\n                return iVar6;\n            }\n            var_4h = puVar7 + 1;\n        }\n    }\n    var_14h = iVar1;\n    if (var_4h < *(in_EDX + 0x1c)) {\n        do {\n            uVar4 = *var_4h;\n            if (uVar4 == 0x5c) {\n                var_4h = var_4h + 1;\n                if (*var_4h == 0) break;\n                if (*var_4h == 0x51) {\n                    do {\n                        do {\n                            puVar7 = var_4h;\n                            var_4h = puVar7 + 1;\n                            if (*var_4h == 0) goto code_r0x004713ed;\n                        } while (*var_4h != 0x5c);\n                        if (*var_4h == 0) goto code_r0x004713ed;\n                        var_4h = puVar7 + 2;\n                    } while (*var_4h != 0x45);\n                }\n            }\n            else if (uVar4 == 0x5b) {\n                bVar2 = false;\n                while( true ) {\n                    do {\n                        while (puVar7 = var_4h,  puVar7[1] != 0x5c) {\n                            if ((bVar2) || (puVar7[1] != 0x5e)) goto code_r0x00471238;\n                            bVar2 = true;\n                            var_4h = puVar7 + 1;\n                        }\n                        var_4h = puVar7 + 2;\n                    } while (puVar7[2] == 0x45);\n                    iVar6 = fcn.0041ee64(3);\n                    if (iVar6 != 0) break;\n                    var_4h = puVar7 + 4;\n                }\ncode_r0x00471238:\n                if ((puVar7[1] == 0x5d) && ((*(in_EDX + 0x50) & 0x2000000) == 0)) {\n                    puVar7 = puVar7 + 1;\n                }\n                while( true ) {\n                    puVar8 = puVar7;\n                    var_4h = puVar8 + 1;\n                    uVar4 = *var_4h;\n                    if (uVar4 == 0x5d) break;\n                    if (uVar4 == 0) {\n                        return -1;\n                    }\n                    puVar7 = var_4h;\n                    if (uVar4 == 0x5c) {\n                        var_4h = puVar8 + 2;\n                        if (*var_4h == 0) goto code_r0x004713ed;\n                        puVar7 = var_4h;\n                        if (*var_4h == 0x51) {\n                            do {\n                                do {\n                                    puVar7 = var_4h;\n                                    var_4h = puVar7 + 1;\n                                    if (*var_4h == 0) goto code_r0x004713ed;\n                                } while (*var_4h != 0x5c);\n                                if (*var_4h == 0) goto code_r0x004713ed;\n                                puVar7 = puVar7 + 2;\n                                var_4h = puVar7;\n                            } while (*puVar7 != 0x45);\n                        }\n                    }\n                }\n            }\n            else {\n                if ((arg_10h != 0) && (uVar4 == 0x23)) {\n                    do {\n                        var_4h = var_4h + 1;\n                        do {\n                            if (*var_4h == 0) goto code_r0x004713ed;\n                            if (*(in_EDX + 0x68) == 0) {\n                                if (((var_4h <= *(in_EDX + 0x1c) + *(in_EDX + 0x6c) * -2) &&\n                                    (*var_4h == *(in_EDX + 0x70))) &&\n                                   ((*(in_EDX + 0x6c) == 1 || (var_4h[1] == *(in_EDX + 0x72))))) goto code_r0x00471390;\n                            }\n                            else if ((var_4h < *(in_EDX + 0x1c)) &&\n                                    (iVar6 = fcn.004080a0(*(in_EDX + 0x1c), in_EDX + 0x6c, arg_14h),  iVar6 != 0)) {\ncode_r0x00471390:\n                                var_4h = var_4h + *(in_EDX + 0x6c) + -1;\n                                goto code_r0x0047139c;\n                            }\n                            var_4h = var_4h + 1;\n                        } while ((arg_14h == 0) || ((*var_4h & 0xfc00) != 0xdc00));\n                    } while( true );\n                }\n                if (uVar4 == 0x28) {\n                    iVar6 = fcn.00470f9f(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n                    if (0 < iVar6) {\n                        return iVar6;\n                    }\ncode_r0x0047139c:\n                    if (*var_4h == 0) break;\n                }\n                else {\n                    if (uVar4 == 0x29) {\n                        if ((bVar3) && (*arg_18h < var_14h)) {\n                            *arg_18h = var_14h;\n                        }\n                        break;\n                    }\n                    if ((uVar4 == 0x7c) && (bVar3)) {\n                        if (*arg_18h != var_14h && var_14h <= *arg_18h) {\n                            var_14h = *arg_18h;\n                        }\n                        *arg_18h = iVar1;\n                    }\n                }\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_EDX + 0x1c));\n    }\ncode_r0x004713ed:\n    *in_ECX = var_4h;\n    return -1;\n}\n",
        "token_count": 2371
    },
    "004716b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004716b8(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint16_t *in_EDX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint16_t *puVar12;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar12 = *(arg_ch + 0x78) + *(*(arg_ch + 0xc) + in_ECX * 4) * 2;\n    if (arg_8h < 0) {\ncode_r0x004716db:\n        iVar3 = -1;\n    }\n    else {\n        puVar9 = in_EDX;\n        if (arg_10h == 0) {\n            if (0 < arg_8h) {\n                do {\n                    arg_8h = arg_8h + -1;\n                    if (*(arg_ch + 0x7c) <= puVar9) {\n                        return -2;\n                    }\n                    uVar1 = *puVar12;\n                    uVar2 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    puVar12 = puVar12 + 1;\n                    if (uVar1 != uVar2) goto code_r0x004716db;\n                } while (0 < arg_8h);\n            }\n        }\n        else if (*(arg_ch + 0x50) == 0) {\n            if (0 < arg_8h) {\n                iVar3 = arg_8h;\n                do {\n                    iVar3 = iVar3 + -1;\n                    if (*(arg_ch + 0x7c) <= puVar9) {\n                        return -2;\n                    }\n                    arg_8h = *((puVar12 - in_EDX) + puVar9);\n                    uVar5 = *puVar9;\n                    if (arg_8h < 0x100) {\n                        arg_8h = *(*(arg_ch + 0x3c) + arg_8h);\n                    }\n                    if (uVar5 < 0x100) {\n                        uVar5 = *(*(arg_ch + 0x3c) + uVar5);\n                    }\n                    if (arg_8h != uVar5) goto code_r0x004716db;\n                    puVar9 = puVar9 + 1;\n                } while (0 < iVar3);\n            }\n        }\n        else if (puVar12 < puVar12 + arg_8h) {\n            puVar8 = in_EDX;\n            puVar10 = puVar12;\n            do {\n                if (*(arg_ch + 0x7c) <= puVar8) {\n                    return -2;\n                }\n                uVar5 = *puVar8;\n                puVar9 = puVar8 + 1;\n                if ((uVar5 & 0xfc00) == 0xd800) {\n                    uVar5 = ((uVar5 & 0x3ff) << 10 | *puVar9 & 0x3ff) + 0x10000;\n                    puVar9 = puVar8 + 2;\n                }\n                uVar7 = *puVar10;\n                puVar11 = puVar10 + 1;\n                if ((uVar7 & 0xfc00) == 0xd800) {\n                    uVar7 = ((uVar7 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                    puVar11 = puVar10 + 2;\n                }\n                uVar6 = *((*(uVar7 / 0x80 + 0x4ac470) * 0x80 + uVar7 % 0x80) * 2 + 0x49e5d0);\n                if ((uVar5 != uVar7) && (uVar5 != *(uVar6 * 8 + 0x4ab0d4) + uVar7)) {\n                    puVar4 = *(uVar6 * 8 + 0x4ab0d3) * 4 + 0x4ae670;\n                    do {\n                        uVar7 = *puVar4;\n                        if (uVar5 < uVar7) goto code_r0x004716db;\n                        puVar4 = puVar4 + 1;\n                    } while (uVar5 != uVar7);\n                }\n                puVar8 = puVar9;\n                puVar10 = puVar11;\n            } while (puVar11 < puVar12 + arg_8h);\n        }\n        iVar3 = puVar9 - in_EDX >> 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 1109
    },
    "00471953": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00471953(uint16_t *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    int32_t in_ECX;\n    uint32_t uVar1;\n    int32_t in_EDX;\n    uint16_t *puVar2;\n    uint uVar3;\n    \n    uVar3 = 2;\n    puVar2 = in_ECX + -2;\n    if (arg_10h == 0) {\n        uVar1 = *puVar2;\n    }\n    else {\n        if ((*puVar2 & 0xfc00) == 0xdc00) {\n            puVar2 = in_ECX + -4;\n        }\n        uVar1 = *puVar2;\n        if ((uVar1 & 0xfc00) == 0xd800) {\n            uVar1 = ((uVar1 & 0x3ff) << 10 | puVar2[1] & 0x3ff) + 0x10000;\n        }\n    }\n    if (in_EDX == 2) {\n        if (uVar1 == 10) {\ncode_r0x004719ee:\n            if ((puVar2 <= arg_8h) || (puVar2[-1] != 0xd)) {\n                uVar3 = 1;\n            }\n            *arg_ch = uVar3;\n            return 1;\n        }\n        if (uVar1 == 0xd) {\n            *arg_ch = 1;\n            return 1;\n        }\n    }\n    else {\n        if (uVar1 == 10) goto code_r0x004719ee;\n        if ((10 < uVar1) && (((uVar1 < 0xe || (uVar1 == 0x85)) || (uVar1 - 0x2028 < 2)))) {\n            *arg_ch = 1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 427
    },
    "00471abf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint16_t __cdecl fcn.00471abf(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint16_t uVar6;\n    uint32_t in_ECX;\n    uint32_t uVar7;\n    uint16_t *in_EDX;\n    uint32_t uVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    bool bVar11;\n    bool bVar12;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = *in_EDX;\n    uVar6 = uVar3 & 1;\n    if (((in_ECX < 0x100) && ((uVar3 & 2) != 0)) && ((*((in_ECX >> 3) + 2 + in_EDX) & 1 << (in_ECX & 7)) != 0)) {\ncode_r0x00471af6:\n        uVar6 = (uVar3 & 1) == 0;\n    }\n    else {\n        puVar9 = in_EDX + 1;\n        if ((uVar3 & 2) != 0) {\n            puVar9 = in_EDX + 0x11;\n        }\n        uVar4 = *puVar9;\n        while (uVar4 != 0) {\n            puVar10 = puVar9 + 1;\n            if (uVar4 == 1) {\n                uVar7 = *puVar10;\n                puVar10 = puVar9 + 2;\n                if ((arg_8h != 0) && ((uVar7 & 0xfc00) == 0xd800)) {\n                    uVar7 = ((uVar7 & 0x3ff) << 10 | *puVar10 & 0x3ff) + 0x10000;\n                    puVar10 = puVar9 + 3;\n                }\n                if (in_ECX != uVar7) goto code_r0x00471d94;\n                goto code_r0x00471af6;\n            }\n            if (uVar4 == 2) {\n                uVar7 = *puVar10;\n                puVar10 = puVar9 + 2;\n                if (arg_8h == 0) {\n                    uVar8 = *puVar10;\ncode_r0x00471bd9:\n                    puVar10 = puVar10 + 1;\n                }\n                else {\n                    if ((uVar7 & 0xfc00) == 0xd800) {\n                        uVar7 = ((uVar7 & 0x3ff) << 10 | *puVar10 & 0x3ff) + 0x10000;\n                        puVar10 = puVar9 + 3;\n                    }\n                    uVar8 = *puVar10;\n                    puVar10 = puVar10 + 1;\n                    if ((uVar8 & 0xfc00) == 0xd800) {\n                        uVar8 = ((uVar8 & 0x3ff) << 10 | *puVar10 & 0x3ff) + 0x10000;\n                        goto code_r0x00471bd9;\n                    }\n                }\n                if ((in_ECX < uVar7) || (uVar8 < in_ECX)) goto code_r0x00471d94;\n                goto code_r0x00471af6;\n            }\n            uVar7 = *((*(in_ECX / 0x80 + 0x4ac470) * 0x80 + in_ECX % 0x80) * 2 + 0x49e5d0);\n    // switch table (11 cases) at 0x471daf\n            switch(*puVar10) {\n            case 0:\n                bVar12 = uVar4 == 3;\n                goto code_r0x00471d88;\n            case 1:\n                cVar1 = *(uVar7 * 8 + 0x4ab0d1);\n                if ((cVar1 != '\\t') && (cVar1 != '\\x05')) {\n                    bVar12 = cVar1 == '\\b';\ncode_r0x00471c41:\n                    if (!bVar12) {\ncode_r0x00471c43:\n                        bVar12 = false;\n                        goto code_r0x00471c4c;\n                    }\n                }\n                break;\n            case 2:\n                bVar12 = puVar9[2] == *(*(uVar7 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8);\n                goto code_r0x00471d7a;\n            case 3:\n                uVar2 = *(uVar7 * 8 + 0x4ab0d1);\n                goto code_r0x00471c81;\n            case 4:\n                uVar2 = *(uVar7 * 8 + 0x4ab0d0);\ncode_r0x00471c81:\n                bVar12 = puVar9[2] == uVar2;\ncode_r0x00471d7a:\n                bVar12 = bVar12 == (uVar4 == 3);\n                goto code_r0x00471d88;\n            case 5:\n                iVar5 = *(*(uVar7 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8);\n                bVar12 = true;\n                if (iVar5 != 1) {\n                    bVar11 = iVar5 == 3;\ncode_r0x00471cb2:\n                    bVar12 = true;\n                    if (!bVar11) goto code_r0x00471c43;\n                }\n                goto code_r0x00471c4c;\n            case 6:\n                if ((*(*(uVar7 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8) != 6) && (in_ECX != 9)) {\n                    bVar12 = in_ECX == 10;\ncode_r0x00471cd8:\n                    if ((!bVar12) && (in_ECX != 0xc)) {\n                        bVar12 = in_ECX == 0xd;\n                        goto code_r0x00471c41;\n                    }\n                }\n                break;\n            case 7:\n                if (((*(*(uVar7 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8) != 6) && (in_ECX != 9)) && (in_ECX != 10)) {\n                    bVar12 = in_ECX == 0xb;\n                    goto code_r0x00471cd8;\n                }\n                break;\n            case 8:\n                iVar5 = *(*(uVar7 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8);\n                bVar12 = true;\n                if ((iVar5 != 1) && (iVar5 != 3)) {\n                    bVar11 = in_ECX == 0x5f;\n                    goto code_r0x00471cb2;\n                }\n                goto code_r0x00471c4c;\n            default:\n                return 0;\n            case 10:\n                if (0x9f < in_ECX) {\n                    bVar12 = 0x7ff < in_ECX - 0xd800;\n                    goto code_r0x00471d7a;\n                }\n                if ((in_ECX != 0x24) && (in_ECX != 0x40)) {\n                    bVar12 = in_ECX == 0x60;\n                    goto code_r0x00471c41;\n                }\n            }\n            bVar12 = true;\ncode_r0x00471c4c:\n            bVar12 = bVar12 == (uVar4 == 3);\ncode_r0x00471d88:\n            if (bVar12) goto code_r0x00471af6;\n            puVar10 = puVar9 + 3;\ncode_r0x00471d94:\n            puVar9 = puVar10;\n            uVar4 = *puVar10;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 1836
    },
    "00401ac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ac0(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    uint extraout_ECX;\n    \n    fcn.00402d7f();\n    fcn.0040d89e(arg_8h + 2);\n    fcn.0040c935(arg_8h + 6);\n    *(in_ECX + 0x98) = arg_8h[10];\n    *(in_ECX + 0x310) = arg_8h[0xb];\n    fcn.0040200a(arg_8h[0xc]);\n    *(in_ECX + 0x318) = arg_8h[0xd];\n    fcn.0040c935(arg_8h + 0xe);\n    *(in_ECX + 0x468) = arg_8h[0x12];\n    *(in_ECX + 0x46c) = arg_8h[0x13];\n    *(in_ECX + 0x474) = arg_8h[0x14];\n    if (*(in_ECX + 0xfc) != 1) {\n        *(in_ECX + 0xfc) = arg_8h[0x15];\n    }\n    *(in_ECX + 0xf4) = *arg_8h;\n    fcn.004018f5(extraout_ECX);\n    return;\n}\n",
        "token_count": 307
    },
    "00401f04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00401f04(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uchar *arg_8h_00;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    int32_t iVar7;\n    int32_t iVar8;\n    uchar auStack64 [16];\n    uchar auStack48 [4];\n    int32_t iStack44;\n    \n    fcn.00402d1a();\n    fcn.00402d1a();\n    *(in_ECX + 1) = arg_20h;\n    *(in_ECX + 5) = arg_1ch;\n    fcn.0040c935(arg_8h);\n    fcn.0040c935(arg_ch);\n    fcn.00407e53(0x49dbf0);\n    iVar7 = 0;\n    in_ECX[0x33] = 1;\n    in_ECX[4] = arg_14h;\n    *(in_ECX + 3) = 1;\n    in_ECX[2] = 0;\n    in_ECX[0x34] = 0;\n    in_ECX[0x39] = 0;\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    if (in_ECX[4] < 0) {\n        iVar6 = fcn.00422626(in_ECX[4]);\n        in_ECX[4] = iVar6;\n        *(in_ECX + 3) = 0;\n    }\n    if (in_ECX[4] == 4) {\n        fcn.0043e4ea(in_ECX + 5);\n        in_ECX[4] = 1;\n    }\n    if ((in_ECX[6] == 0) && (in_ECX[10] == 0)) {\n        uVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        fcn.0040200a(uVar3);\n        arg_8h_00 = &stack0xffffffa8;\ncode_r0x00401fd8:\n        fcn.0040197e(arg_8h_00);\n        iVar7 = 1;\n    }\n    else {\n        piVar4 = fcn.0040a4f6(0);\n        if ((*piVar4 == 0x5b) && (piVar4 = fcn.0040a4f6(in_ECX[6] + -1),  *piVar4 == 0x5d)) {\n            uVar3 = 1;\n            iVar6 = in_ECX[6] + -2;\ncode_r0x004725c9:\n            iVar8 = iVar6;\n            cVar2 = fcn.0043d68d(in_ECX + 5, &stack0xffffffb0, &stack0xffffffc0, &stack0xffffffac, iVar6);\n            if (cVar2 == '\\0') goto code_r0x00472899;\n            cVar2 = fcn.0041f885();\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.0041f885();\n                if (cVar2 != '\\0') {\n                    cVar2 = fcn.0041f885();\n                    if (cVar2 == '\\0') goto code_r0x00472873;\n                    uVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x00472849:\n                    fcn.0040200a(uVar3);\n                    goto code_r0x00472852;\n                }\n                cVar2 = fcn.0041f885();\n                if (cVar2 != '\\0') {\n                    fcn.004488a2();\n                    iVar6 = (*_sym.imp.USER32.dll_IsWindow)(iVar6);\n                    if (iVar6 != 0) goto code_r0x00472849;\n                    goto code_r0x00401fe4;\n                }\n                cVar2 = fcn.0041f885();\n                if (cVar2 == '\\0') {\n                    cVar2 = fcn.0041f885();\n                    if (cVar2 != '\\0') {\n                        in_ECX[2] = in_ECX[2] | 8;\ncode_r0x004727e6:\n                        fcn.0040c935(&stack0xffffffac);\n                        iVar6 = iVar8;\n                        goto code_r0x004725c9;\n                    }\n                    cVar2 = fcn.0041f885();\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.0041f885();\n                        if (cVar2 != '\\0') {\n                            in_ECX[2] = in_ECX[2] | 0x80;\n                            iVar6 = fcn.00422241(uVar3);\n                            in_ECX[0x35] = iVar6;\n                            iVar6 = iVar8;\n                            goto code_r0x004725c9;\n                        }\n                        cVar2 = fcn.0041f885();\n                        if (cVar2 != '\\0') {\n                            in_ECX[2] = in_ECX[2] | 0x100;\n                            iVar6 = fcn.00422241(uVar3);\n                            in_ECX[0x36] = iVar6;\n                            iVar6 = iVar8;\n                            goto code_r0x004725c9;\n                        }\n                        cVar2 = fcn.0041f885();\n                        if (cVar2 != '\\0') {\n                            in_ECX[2] = in_ECX[2] | 0x200;\n                            iVar6 = fcn.00422241(uVar3);\n                            in_ECX[0x37] = iVar6;\n                            iVar6 = iVar8;\n                            goto code_r0x004725c9;\n                        }\n                        cVar2 = fcn.0041f885();\n                        if (cVar2 != '\\0') {\n                            in_ECX[2] = in_ECX[2] | 0x400;\n                            iVar6 = fcn.00422241(uVar3);\n                            in_ECX[0x38] = iVar6;\n                            iVar6 = iVar8;\n                            goto code_r0x004725c9;\n                        }\n                        cVar2 = fcn.0041f885();\n                        if (cVar2 != '\\0') {\n                            in_ECX[2] = in_ECX[2] | 0x20;\n                            iVar6 = fcn.00422241(uVar3);\n                            in_ECX[0x33] = iVar6;\n                            iVar6 = iVar8;\n                            goto code_r0x004725c9;\n                        }\n                        cVar2 = fcn.0041f885();\n                        if (cVar2 != '\\0') {\n                            cVar2 = fcn.0041f885();\n                            if (cVar2 == '\\0') goto code_r0x00472873;\n                            in_ECX[2] = in_ECX[2] | 0x40;\n                            iVar6 = iVar8;\n                            goto code_r0x004725c9;\n                        }\n                        cVar2 = fcn.0041f885();\n                        if (cVar2 != '\\0') {\n                            if ((in_ECX[2] & 2U) == 0) {\n                                in_ECX[2] = in_ECX[2] | 1;\n                                goto code_r0x004727e6;\n                            }\n                            iVar7 = -4;\n                            goto code_r0x00401fe4;\n                        }\n                        cVar2 = fcn.0043d614();\n                        iVar6 = iVar8;\n                        if (cVar2 == '\\0') goto code_r0x004725c9;\n                        goto code_r0x00472873;\n                    }\n                    in_ECX[2] = in_ECX[2] | 0x10;\n                    fcn.00405cf6();\n                }\n                else {\n                    if ((in_ECX[2] & 1U) != 0) {\n                        iVar7 = -3;\n                        goto code_r0x00401fe4;\n                    }\n                    in_ECX[2] = in_ECX[2] | 2;\n                    fcn.00405cf6();\n                }\n                iVar5 = fcn.00405be9(&stack0xffffffac);\n                iVar6 = iVar8;\n                if (iVar5 != 0) goto code_r0x00472811;\n                goto code_r0x004725c9;\n            }\n            cVar2 = fcn.0041f885();\n            if (cVar2 != '\\0') {\n                if (*in_ECX == 0) goto code_r0x00401fe4;\ncode_r0x00472852:\n                arg_8h_00 = &stack0xffffffac;\n                goto code_r0x00401fd8;\n            }\ncode_r0x00472873:\n            iVar7 = -1;\n            goto code_r0x00401fe4;\n        }\ncode_r0x00472899:\n        if (iStack44 != 0) {\n            fcn.0040c935(&stack0xffffffd0);\n        }\n        if (in_ECX[2] == 0) {\n            in_ECX[2] = 1;\n        }\n        in_ECX[2] = in_ECX[2] | 4;\n        pcVar1 = _sym.imp.USER32.dll_CharUpperBuffW;\n        if (*(in_ECX + 3) == '\\0') {\n            fcn.0040b8a7();\n            (*pcVar1)(in_ECX[9], in_ECX[10]);\n        }\n        if (((*(in_ECX + 2) & 1) != 0) && (*(in_ECX + 3) == '\\0')) {\n            fcn.0040b8a7();\n            (*pcVar1)(in_ECX[5], in_ECX[6]);\n        }\n        if (arg_18h == '\\0') {\n            (*_sym.imp.USER32.dll_EnumWindows)(fcn.0043e69d);\n        }\n        else {\n            uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            (*_sym.imp.USER32.dll_EnumChildWindows)(uVar3);\n        }\n        fcn.0043e44e(0x472922);\n        fcn.00402d1a();\n        if (0 < in_ECX[0x39]) {\n            fcn.0040200a(***(arg_10h + 4));\n        }\n        iVar7 = in_ECX[0x39];\n    }\ncode_r0x00401fe4:\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return iVar7;\ncode_r0x00472811:\n    iVar7 = -2;\n    goto code_r0x00401fe4;\n}\n",
        "token_count": 2459
    },
    "00403598": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403598(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    uint uStack956;\n    uint uStack952;\n    uint uStack948;\n    \n    fcn.00421970(&uStack956, 0);\n    if (*(param_1 + 0x198) == 0) {\n        *(param_1 + 0x198) = *0x4c1114;\n    }\n    uVar1 = *0x4c1118;\n    if (*(param_1 + 0x1a4) == 0) {\n        *(param_1 + 0x1a4) = *0x4c1118;\n        *(param_1 + 0x1a8) = uVar1;\n    }\n    if (*(param_1 + 0x1b0) == 0) {\n        *(param_1 + 0x1b0) = *0x4c111c;\n    }\n    arg_8h = param_1 + 0x19c;\n    fcn.004038c4(arg_8h, param_1 + 0x1a0);\n    uStack956 = 3;\n    uStack952 = 0x401;\n    uStack948 = 0;\n    if (*(param_1 + 0x40) != 0) {\n        iVar2 = fcn.00446237(*(param_1 + 0x10), *(param_1 + 0x3c), param_1 + 0x1a0);\n        *arg_8h = iVar2;\n        if ((*(param_1 + 0x40) != 0) && (iVar2 != 0)) goto code_r0x00403654;\n    }\n    *arg_8h = *(param_1 + 0x198);\ncode_r0x00403654:\n    if (*0x4c10c6 == '\\x01') {\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &stack0xfffffc2c);\n    }\n    else {\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(0);\n        *0x4c10c6 = '\\x01';\n    }\n    fcn.004038e4();\n    return;\n}\n",
        "token_count": 521
    },
    "00403f9b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403f9b(uint lpLibFileName, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00403f5d();\n    iVar1 = fcn.00424129(lpLibFileName, 0x4aeec4);\n    *in_ECX = iVar1;\n    if (iVar1 == 0) {\n        fcn.00403e39();\n        fcn.00403e78();\n        iVar1 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(lpLibFileName, 0, 2);\n        in_ECX[3] = iVar1;\n        uVar2 = fcn.00403e78();\n        iVar1 = fcn.00404010(uVar2 & 0xffffff00 | arg_ch == 1);\n        if (iVar1 == 0) {\n            fcn.0040417d(&var_14h, 1, 0x10, *in_ECX);\n            fcn.0044c846(&var_14h, 0x10, 0x99f2);\n            in_ECX[2] = 0;\n            iVar1 = fcn.004041cb(*in_ECX);\n            in_ECX[1] = iVar1;\n            iVar1 = 0;\n        }\n        else {\n            fcn.00403e39();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 353
    },
    "00404d29": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d29(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX[3];\n    if (iVar1 < 2) {\n        fcn.00404d67(in_ECX[1] + 1);\n    }\n    else {\n        *in_ECX[3] = iVar1 + -1;\n        fcn.0040a6f8();\n        iVar1 = fcn.00403d82(in_ECX[1] + 2);\n        in_ECX[2] = iVar1;\n        iVar1 = fcn.0042010a(iVar1);\n        fcn.0041faa0(iVar1, *in_ECX, in_ECX[1] + 1);\n        *in_ECX = iVar1;\n    }\n    *(in_ECX[1] + *in_ECX) = arg_8h;\n    in_ECX[1] = in_ECX[1] + 1;\n    *(in_ECX[1] + *in_ECX) = 0;\n    return;\n}\n",
        "token_count": 251
    },
    "0040776b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040776b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *in_ECX;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    bool bVar4;\n    ulong uVar5;\n    uint var_4h;\n    \n    do {\n        uVar5 = fcn.0040785a();\n        iVar3 = uVar5 >> 0x20;\n        iVar1 = *uVar5;\n        iVar2 = arg_ch;\n        if ((((((iVar1 == 0x7d) || (iVar1 == 0x7e)) || (iVar1 == 0x82)) ||\n             (((iVar1 == 0x83 || (iVar1 == 0x7f)) || ((iVar1 == 0x80 || ((iVar1 == 0x84 || (iVar1 == 0x85)))))))) ||\n            (iVar1 == 0x77)) || (iVar1 == 0x81)) {\ncode_r0x00483653:\n            iVar2 = fcn.0040776b(arg_8h, iVar2);\n            if (iVar2 == 0) {\n                return 0;\n            }\n        }\n        else {\n            if ((iVar1 == 0x7b) || (iVar1 == 0x7c)) {\n                iVar2 = arg_ch + 1;\n                goto code_r0x00483653;\n            }\n            if (((iVar1 == 0x55) || (iVar1 == 0x56)) || (iVar1 == 0x5e)) {\n                if (uVar5[1] != 0xd) {\n                    return 0;\n                }\n                if ((*(arg_8h + 0x48) & in_EDX) != 0) {\n                    return 0;\n                }\n                if (iVar3 < arg_ch) {\n                    return 0;\n                }\n                bVar4 = *(arg_8h + 0x60) == iVar3;\ncode_r0x0040782b:\n                if (!bVar4) {\n                    return 0;\n                }\n            }\n            else if ((iVar1 != 1) && (iVar1 != 2)) {\n                bVar4 = iVar1 == 0x19;\n                goto code_r0x0040782b;\n            }\n        }\n        in_ECX = in_ECX + in_ECX[1];\n        if (*in_ECX != 0x71) {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 568
    },
    "00408176": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00408176(int32_t param_1)\n\n{\n    return 1 < **(param_1 + 0xc);\n}\n",
        "token_count": 34
    },
    "0040a359": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040a359(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    bool bVar3;\n    int16_t *piVar4;\n    uint *extraout_ECX;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    int16_t aiStackY8240 [4100];\n    uint uStackY40;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    fcn.00430650();\n    fcn.00407dd0();\n    *extraout_ECX = 0;\n    *(extraout_ECX + 9) = 0;\n    if (*arg_8h == 0x21) {\n        arg_8h = arg_8h + 1;\n        *(extraout_ECX + 9) = 1;\n    }\n    fcn.00407e53(arg_8h);\n    iVar5 = 0;\n    bVar3 = false;\n    while( true ) {\n        piVar4 = fcn.0040a4f6(iVar5);\n        if ((*piVar4 != 0x20) && (*piVar4 != 9)) break;\n        iVar5 = iVar5 + 1;\n    }\ncode_r0x0040a3ce:\n    var_8h = 0;\n    bVar2 = false;\n    arg_8h_00 = iVar5;\ncode_r0x0040a3d1:\n    do {\n        piVar4 = fcn.0040a4f6(arg_8h_00);\n        iVar1 = *piVar4;\n        iVar5 = arg_8h_00 + 1;\n        if ((iVar1 == 0) || (0xfff < var_8h)) {\n            if ((var_8h != 0) || ((bVar2 || (bVar3)))) {\n                iVar5 = var_8h;\n                if (bVar3) {\n                    while (iVar5 = iVar5 + -1,  arg_8h_00 <= iVar5) {\n                        *(&stack0xffffdfd2 + iVar5 * 2) = *(&stack0xffffdfd0 + iVar5 * 2);\n                    }\n                    var_8h = var_8h + 1;\n                    *(&stack0xffffdfd0 + arg_8h_00 * 2) = 0x22;\n                }\n                *(&stack0xffffdfd0 + var_8h * 2) = 0;\n                fcn.0040caee(&stack0xffffdfd0);\n                var_20h = 0x40a4cc;\n                fcn.00405b47(&fcn.0040a359::var_20h);\n                var_20h = 0x40a4d4;\n                fcn.00405cd3();\n            }\n            return;\n        }\n        if ((iVar1 == 0x20) || (iVar1 == 9)) {\n            if (!bVar3) break;\n        }\n        else if (iVar1 == 0x22) {\n            piVar4 = fcn.0040a4f6(iVar5);\n            if (*piVar4 == 0x22) {\n                if (bVar3) {\n                    *(&stack0xffffdfd0 + var_8h * 2) = 0x22;\n                    var_8h = var_8h + 1;\n                }\n                else {\n                    bVar2 = true;\n                    bVar3 = false;\n                }\n                arg_8h_00 = arg_8h_00 + 2;\n            }\n            else if (bVar3) {\n                bVar3 = false;\n                arg_8h_00 = iVar5;\n            }\n            else {\n                bVar3 = true;\n                arg_8h_00 = iVar5;\n            }\n            goto code_r0x0040a3d1;\n        }\n        *(&stack0xffffdfd0 + var_8h * 2) = iVar1;\n        var_8h = var_8h + 1;\n        arg_8h_00 = iVar5;\n    } while( true );\n    *(&stack0xffffdfd0 + var_8h * 2) = 0;\n    fcn.0040caee(&stack0xffffdfd0);\n    var_20h = 0x40a461;\n    fcn.00405b47(&fcn.0040a359::var_20h);\n    var_20h = 0x40a469;\n    fcn.00405cd3();\n    while( true ) {\n        uStackY40 = 0x40a47b;\n        piVar4 = fcn.0040a4f6(iVar5);\n        if ((*piVar4 != 0x20) && (uStackY40 = 9,  *piVar4 != 9)) break;\n        iVar5 = iVar5 + 1;\n    }\n    goto code_r0x0040a3ce;\n}\n",
        "token_count": 1163
    },
    "0040aa70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aa70(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    uint16_t uVar1;\n    double dVar2;\n    double dVar3;\n    double dVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar7 = *arg_14h[3];\n    if (1 < iVar7) {\n        *arg_14h[3] = iVar7 + -1;\n        fcn.0040a6f8();\n        arg_14h[2] = 8;\n        iVar7 = fcn.0041fa89(0x10);\n        *arg_14h = iVar7;\n    }\n    dVar2 = *0x4b2750;\n    dVar3 = *0x4b2748;\n    dVar4 = *0x4b2740;\n    arg_14h[1] = 0;\n    **arg_14h = 0;\n    while ((((uVar1 = *(arg_8h + *arg_ch * 2),  uVar1 < 0x5b && (0x40 < uVar1)) || ((0x60 < uVar1 && (uVar1 < 0x7b))))\n           || (((0x2f < uVar1 && (uVar1 < 0x3a)) || (uVar1 == 0x5f))))) {\n        iVar7 = *arg_14h[3];\n        if (iVar7 < 2) {\n            uVar5 = arg_14h[1] + 2;\n            if (arg_14h[2] < uVar5) {\n                if (uVar5 < 0x41c2) {\n                    var_8h = uVar5 * 2;\n                }\n                else if (uVar5 < 0x2000000) {\n                    dVar3 = uVar5;\n                    if (uVar5 < 0) {\n                        dVar3 = dVar3 + *0x4b6568;\n                    }\n                    var_8h = ROUND(dVar2 * dVar3);\n                }\n                else if (uVar5 < 0x8000000) {\n                    dVar2 = uVar5;\n                    if (uVar5 < 0) {\n                        dVar2 = dVar2 + *0x4b6568;\n                    }\n                    var_8h = ROUND(dVar3 * dVar2);\n                }\n                else {\n                    dVar2 = uVar5;\n                    if (uVar5 < 0) {\n                        dVar2 = dVar2 + *0x4b6568;\n                    }\n                    var_8h = ROUND(dVar4 * dVar2);\n                }\n                arg_14h[2] = var_8h;\n                uVar5 = fcn.0040c91c(var_8h);\n                arg_14h[2] = uVar5;\n                iVar7 = fcn.0041fa89(-(uVar5 * 2 >> 0x20 != 0) | uVar5 * 2);\n                if (*arg_14h != 0) {\n                    fcn.0041faa0(iVar7, *arg_14h, arg_14h[1] * 2 + 2);\n                    fcn.00421a00(*arg_14h);\n                }\n                goto code_r0x0040ac9a;\n            }\n        }\n        else {\n            *arg_14h[3] = iVar7 + -1;\n            fcn.0040a6f8();\n            uVar5 = fcn.0040c91c(arg_14h[1] + 2);\n            arg_14h[2] = uVar5;\n            iVar7 = fcn.0042010a(-(uVar5 * 2 >> 0x20 != 0) | uVar5 * 2);\n            fcn.0041faa0(iVar7, *arg_14h, arg_14h[1] * 2 + 2);\ncode_r0x0040ac9a:\n            dVar2 = *0x4b2750;\n            *arg_14h = iVar7;\n            dVar3 = *0x4b2748;\n            dVar4 = *0x4b2740;\n        }\n        *(*arg_14h + arg_14h[1] * 2) = uVar1;\n        arg_14h[1] = arg_14h[1] + 1;\n        *(*arg_14h + arg_14h[1] * 2) = 0;\n        *arg_ch = *arg_ch + 1;\n    }\n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(*arg_14h, arg_14h[1]);\n    iVar7 = 0;\n    do {\n        iVar6 = fcn.00422203(*(iVar7 * 4 + 0x4bb758), *arg_14h);\n        if (iVar6 == 0) {\n            if (-1 < iVar7) {\n                if (((uVar1 == 0x20) || (uVar1 == 0x2c)) ||\n                   ((((uVar1 == 0x29 || ((uVar1 == 9 || (uVar1 == 0x3d)))) || (uVar1 == 0x28)) ||\n                    ((uVar1 == 0x5d || (uVar1 == 0)))))) {\n                    if ((0x2f < *(arg_10h + 2)) && (*(arg_10h + 2) < 0x40)) {\n                        if (*arg_10h != 0) {\n                            fcn.00401926(*arg_10h);\n                        }\n                        *arg_10h = 0;\n                        *arg_10h = iVar7;\n                        *(arg_10h + 2) = 0;\n                        return;\n                    }\n                    *(arg_10h + 2) = 0;\n                    *arg_10h = iVar7;\n                }\n                else {\n                    fcn.0040b7ff(0xffffffff);\n                    *arg_10h = -1;\n                }\n                return;\n            }\n            break;\n        }\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x2d);\n    iVar7 = (**(**0x4c22ec + 4))(*arg_14h);\n    if (iVar7 < 0) {\n        fcn.0040b7ff(0x34);\n        fcn.0041df08(arg_14h);\n        return;\n    }\n    fcn.0040b7ff(1);\n    *arg_10h = iVar7;\n    return;\n}\n",
        "token_count": 1537
    },
    "0040bd2f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd2f(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    iVar2 = *in_ECX[3];\n    if (iVar2 < 2) {\n        fcn.0040bd71(in_ECX[1] + 1);\n    }\n    else {\n        *in_ECX[3] = iVar2 + -1;\n        fcn.0040a6f8();\n        uVar1 = fcn.0040c91c(in_ECX[1] + 2);\n        in_ECX[2] = uVar1;\n        iVar2 = fcn.0042010a(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n        fcn.0041faa0(iVar2, *in_ECX, in_ECX[1] * 2 + 2);\n        *in_ECX = iVar2;\n    }\n    *(*in_ECX + in_ECX[1] * 2) = arg_8h;\n    in_ECX[1] = in_ECX[1] + 1;\n    *(*in_ECX + in_ECX[1] * 2) = 0;\n    return;\n}\n",
        "token_count": 290
    },
    "0040c4cd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c4cd(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    iVar1 = *param_1[3];\n    if (1 < iVar1) {\n        *param_1[3] = iVar1 + -1;\n        puVar2 = fcn.0042010a(4);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            *puVar2 = 1;\n        }\n        param_1[3] = puVar2;\n        param_1[2] = 8;\n        uVar3 = fcn.0041fa89(0x10);\n        *param_1 = uVar3;\n    }\n    param_1[1] = 0;\n    **param_1 = 0;\n    return;\n}\n",
        "token_count": 199
    },
    "0040c610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c610(uint *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h[1];\n    uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, *arg_8h, iVar1 + 1, 0, 0);\n    if (uVar2 == 0) {\n        fcn.0040c4cd();\n    }\n    else {\n        iVar3 = fcn.0042010a(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n        uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, *arg_8h, iVar1 + 1, iVar3, uVar2);\n        iVar1 = uVar2 - 1;\n        if (((iVar1 == 0) || (iVar1 == -1)) || (iVar3 == 0)) {\n            fcn.0040a2fb(0, 0xffffffff);\n            fcn.0042017e(iVar3);\n            return;\n        }\n        iVar4 = *arg_ch[3];\n        if (iVar4 < 2) {\n            if (arg_ch[2] < uVar2) {\n                iVar4 = fcn.0040c91c(uVar2);\n                arg_ch[2] = iVar4;\n                if (*arg_ch != 0) {\n                    fcn.0042017e(*arg_ch);\n                }\n                iVar4 = fcn.0042010a(-(arg_ch[2] * 2 >> 0x20 != 0) | arg_ch[2] * 2);\n                *arg_ch = iVar4;\n                *(iVar4 + iVar1 * 2) = 0;\n            }\n        }\n        else {\n            *arg_ch[3] = iVar4 + -1;\n            fcn.0040a6f8();\n            uVar2 = fcn.0040c91c(uVar2);\n            arg_ch[2] = uVar2;\n            iVar4 = fcn.0042010a(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            *arg_ch = iVar4;\n        }\n        arg_ch[1] = iVar1;\n        fcn.0041faa0(*arg_ch, iVar3, iVar1 * 2);\n        *(iVar1 * 2 + *arg_ch) = 0;\n        fcn.0042017e(iVar3);\n    }\n    return;\n}\n",
        "token_count": 602
    },
    "0040c714": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040c714(int16_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint noname_1;\n    int32_t iVar4;\n    int16_t *arg_8h_00;\n    uchar *extraout_ECX;\n    uint32_t uVar5;\n    uchar auStackY8196 [8144];\n    uint uStackY52;\n    uchar *lpFileName;\n    char16_t *arg_10h_00;\n    \n    fcn.00430650();\n    if (*arg_8h != 0x23) {\n        return 3;\n    }\n    iVar3 = fcn.0042247b(arg_8h, L\"#pragma compile\", 0xf);\n    if (iVar3 == 0) {\n        return true;\n    }\n    iVar3 = fcn.0042247b(arg_8h, L\"#notrayicon\", 0xb);\n    if (iVar3 == 0) {\n        *extraout_ECX = 1;\n        return true;\n    }\n    iVar3 = fcn.0042247b(arg_8h, L\"#requireadmin\", 0xd);\n    if (iVar3 == 0) {\n        extraout_ECX[1] = 1;\n        return true;\n    }\n    iVar3 = fcn.0042247b(arg_8h, L\"#OnAutoItStartRegister\", 0x16);\n    if (iVar3 == 0) {\n        arg_8h_00 = fcn.00403bcf();\n        fcn.0041dd27(arg_8h_00);\n        fcn.0041dcee(arg_8h_00);\n        iVar3 = fcn.004218fb(arg_8h_00);\n        iVar1 = arg_8h_00[iVar3 + -1];\n        if ((iVar1 == 0x22) || (iVar1 == 0x27)) {\n            if (*arg_8h_00 == iVar1) {\n                arg_8h_00[iVar3 + -1] = 0;\n                (**(**(extraout_ECX + 4) + 8))();\n                goto code_r0x0047343f;\n            }\n        }\n        else if ((*arg_8h_00 != 0x22) && (*arg_8h_00 != 0x27)) {\n            (**(**(extraout_ECX + 4) + 8))();\ncode_r0x0047343f:\n            fcn.0042017e();\n            return true;\n        }\n        fcn.0042017e();\n        arg_10h_00 = L\"Bad directive syntax error\";\n    }\n    else {\n        iVar3 = fcn.0042247b(arg_8h, L\"#include-once\", 0xd);\n        if (iVar3 == 0) {\n            uVar5 = 0;\n            if (*(extraout_ECX + 0x20) == 0) {\n                return true;\n            }\n            do {\n                iVar3 = fcn.00421bc7(**(*(extraout_ECX + 0x1c) + uVar5 * 4), arg_ch);\n                if (iVar3 == 0) {\n                    return ((**(*(extraout_ECX + 0x2c) + uVar5 * 4) < 2) - 1U & 3) + 1;\n                }\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < *(extraout_ECX + 0x20));\n            return true;\n        }\n        iVar3 = fcn.0042247b(arg_8h, 0x49dc90, 8);\n        if (iVar3 == 0) {\n            cVar2 = fcn.0041db8c(arg_8h + 8, &stack0xffffdffc);\n            if (cVar2 == '\\x01') {\n                lpFileName = &stack0xffffdffc;\n                noname_1 = fcn.00403b45(lpFileName);\n                uStackY52 = 0x40c876;\n                cVar2 = fcn.0040bdf0(&stack0xffffdffc, noname_1, lpFileName, arg_ch, arg_8h);\n                return cVar2 != '\\0';\n            }\n            arg_10h_00 = L\"Cannot parse #include\";\n        }\n        else {\n            iVar3 = fcn.0042247b(arg_8h, L\"#comments-start\", 0xf);\n            if ((iVar3 != 0) && (iVar3 = fcn.0042247b(arg_8h, 0x49dd64, 3),  iVar3 != 0)) {\n                return true;\n            }\n            iVar3 = 1;\n            while (cVar2 = fcn.0041e928(arg_8h),  cVar2 != '\\0') {\n                *arg_10h = *arg_10h + 1;\n                fcn.0041dcee(arg_8h);\n                fcn.0041dd27(arg_8h);\n                iVar4 = fcn.0042247b(arg_8h, L\"#comments-start\", 0xf);\n                if ((iVar4 == 0) || (iVar4 = fcn.0042247b(arg_8h, 0x49dd64, 3),  iVar4 == 0)) {\n                    iVar3 = iVar3 + 1;\n                }\n                else {\n                    iVar4 = fcn.0042247b(arg_8h, L\"#comments-end\", 0xd);\n                    if (((iVar4 == 0) || (iVar4 = fcn.0042247b(arg_8h, 0x49dd88, 3),  iVar4 == 0)) &&\n                       (iVar3 = iVar3 + -1,  iVar3 < 1)) {\n                        return true;\n                    }\n                }\n            }\n            if (iVar3 < 1) {\n                return true;\n            }\n            arg_10h_00 = L\"Unterminated group of comments\";\n        }\n    }\n    fcn.004432b0(arg_ch, *arg_10h, arg_10h_00, arg_8h);\n    return false;\n}\n",
        "token_count": 1401
    },
    "0040cf97": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cf97(uint32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t extraout_EDX;\n    uint32_t uVar6;\n    bool bVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint var_4h;\n    \n    if (param_1[3] == 1) {\n        return;\n    }\n    if (param_1[3] == 2) {\n        return;\n    }\n    uVar9 = fcn.0040d00b();\n    uVar5 = uVar9 >> 0x20;\n    uVar4 = uVar9;\n    bVar2 = false;\n    uVar6 = uVar5;\n    if (((param_1[3] == 4) && (cVar3 = fcn.0040d093(),  uVar6 = extraout_EDX,  cVar3 != '\\0')) &&\n       (*(param_1[2] + 4) < 0x13)) {\n        puVar1 = param_1[2] + 4;\n        bVar7 = *puVar1 < 10;\n        bVar8 = *puVar1 == 10;\ncode_r0x0040cfe8:\n        if (bVar7 || bVar8) goto code_r0x0040cfea;\n    }\n    else if ((-2 < uVar6) && ((uVar6 < 0x80000000 || (0x7fffffff < uVar4)))) {\n        if (uVar6 < 0) goto code_r0x0040cfea;\n        if (uVar6 < 1) {\n            bVar7 = uVar4 < 0x7fffffff;\n            bVar8 = uVar4 == 0x7fffffff;\n            goto code_r0x0040cfe8;\n        }\n    }\n    bVar2 = true;\ncode_r0x0040cfea:\n    fcn.00412570();\n    *param_1 = uVar4;\n    if (bVar2) {\n        param_1[1] = uVar5;\n        param_1[3] = 2;\n    }\n    else {\n        param_1[3] = 1;\n    }\n    return;\n}\n",
        "token_count": 529
    },
    "0040d0ba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d0ba(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t arg_14h;\n    ulong uVar2;\n    uint var_10h;\n    \n    arg_14h = 0;\n    if (1 < *(arg_8h + 8)) {\n        iVar1 = fcn.0040cdb4();\n        if (iVar1 == 1) {\n            arg_14h = 1;\n        }\n        else if (iVar1 == 2) {\n            arg_14h = 2;\n        }\n    }\n    if (arg_14h == 0) {\n        fcn.0040d89e(**(arg_8h + 4));\n        fcn.0040cf97();\n    }\n    else if (arg_14h - 1U < 2) {\n        uVar2 = fcn.0040d00b();\n        arg_8h_00 = fcn.00456927(&var_10h, uVar2, uVar2 >> 0x20, arg_14h);\n        fcn.0040d89e(arg_8h_00);\n        fcn.00412570();\n    }\n    return 0;\n}\n",
        "token_count": 288
    },
    "0040d0f6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d0f6(int32_t arg_8h, double *arg_ch)\n\n{\n    int32_t iVar1;\n    float10 fVar2;\n    \n    if (1 < *(arg_8h + 8)) {\n        iVar1 = fcn.0040cdb4();\n        if ((iVar1 == 1) || (iVar1 == 2)) {\n            fcn.0040d0ba(arg_8h, arg_ch);\n            return 0;\n        }\n        if (iVar1 == 3) {\n            fVar2 = fcn.00412620();\n            fcn.00412570();\n            *arg_ch = fVar2;\n            *(arg_ch + 0xc) = 3;\n            return 0;\n        }\n    }\n    fcn.0040d89e(**(arg_8h + 4));\n    fcn.0040d145();\n    return 0;\n}\n",
        "token_count": 206
    },
    "0040d1b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040d1b3(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    int32_t arg_ch_00;\n    float10 fVar4;\n    double dVar5;\n    ulong uVar6;\n    uint uVar7;\n    uint var_68h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    _var_10h = CONCAT44(in_ECX, var_10h);\n    puVar1 = *(arg_8h + 4);\n    cVar2 = fcn.0040d2c0(0xb);\n    if (cVar2 != '\\0') {\n        var_18h = 0;\n        fcn.004113a0(*puVar1);\n        fcn.004084a6();\n        uVar6 = fcn.0044be8a();\n        iVar3 = uVar6 >> 0x20;\n        if (uVar6 != 0) {\n            iVar3 = iVar3 + 4;\n        }\n        fcn.0040ca8e(iVar3);\n        fcn.00412570();\n        return 0;\n    }\n    uVar7 = 8;\n    var_1h._0_1_ = '\\x01';\n    if (1 < *(arg_8h + 8)) {\n        var_8h = *(*(arg_8h + 4) + 4);\n        if (*(var_8h + 0xc) == 10) {\n            uVar7 = 0x29;\n            cVar2 = fcn.0041d5f6(0x29);\n            if (cVar2 != '\\0') goto code_r0x0040d20d;\n        }\n        var_1h._0_1_ = '\\0';\n        fcn.0040cdb4(uVar7);\n    }\ncode_r0x0040d20d:\n    cVar2 = fcn.0040d2c0(7);\n    if (cVar2 != '\\0') {\n        iVar3 = fcn.0044be63();\n        arg_ch_00 = iVar3 >> 0x1f;\n        goto code_r0x0040d295;\n    }\n    if (1 < *(arg_8h + 8)) {\n        puVar1 = *(*(arg_8h + 4) + 4);\n        fcn.00412570();\n        puVar1[3] = 1;\n        *puVar1 = 0;\n    }\n    var_14h = 1;\n    var_20h = 0;\n    var_18h = 0;\n    fcn.0040d0f6(arg_8h, &var_20h);\n    cVar2 = fcn.0040d2c0(3);\n    if (cVar2 == '\\0') {\n        dVar5 = fcn.0040d00b();\n        if ((var_1h != '\\0') && (*(**(arg_8h + 4) + 0xc) == 2)) {\ncode_r0x00476d8f:\n            var_1h._0_1_ = '\\0';\n        }\n    }\n    else {\n        fVar4 = fcn.00412620();\n        _var_10h = fVar4;\n        dVar5 = _var_10h;\n        if (var_1h != '\\0') goto code_r0x00476d8f;\n    }\n    arg_ch_00 = dVar5 >> 0x20;\n    var_8h = SUB84(dVar5, 0);\n    fcn.00412570();\n    iVar3 = var_8h;\ncode_r0x0040d295:\n    fcn.0040ca32(iVar3, arg_ch_00);\n    fcn.0040ca8e(&var_68h);\n    return 0;\n}\n",
        "token_count": 942
    },
    "00414265": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414265(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    double *in_ECX;\n    int32_t iVar7;\n    float10 fVar8;\n    ulong uVar9;\n    \n    iVar7 = *(in_ECX + 0xc);\n    if (iVar7 < 5) {\n        if (iVar7 == 4) goto code_r0x0041427d;\n        if (iVar7 == 1) {\n            if (arg_8h[3] == 1) {\n                uVar2 = *arg_8h;\n                uVar1 = *in_ECX;\n                iVar7 = (uVar1 >> 0x1f) + (uVar2 >> 0x1f) + CARRY4(uVar1, uVar2);\n                if (uVar1 + uVar2 >> 0x1f == iVar7) {\n                    *in_ECX = uVar1 + uVar2;\n                }\n                else {\n                    *(in_ECX + 0xc) = 2;\n                    *in_ECX = uVar1 + uVar2;\n                    *(in_ECX + 4) = iVar7;\n                }\n                goto code_r0x004142a7;\n            }\n            if (arg_8h[3] == 2) {\n                uVar2 = *in_ECX;\n                uVar1 = *arg_8h;\n                uVar3 = arg_8h[1];\n                *in_ECX = uVar2 + *arg_8h;\n                *(in_ECX + 4) = (uVar2 >> 0x1f) + uVar3 + CARRY4(uVar2, uVar1);\n                *(in_ECX + 0xc) = 2;\n                goto code_r0x004142a7;\n            }\ncode_r0x00414309:\n            fcn.0041df8a();\n        }\n        else {\n            if (iVar7 == 2) {\n                if ((arg_8h[3] == 1) || (arg_8h[3] == 2)) {\n                    uVar9 = fcn.0040d00b();\n                    uVar2 = *in_ECX;\n                    *in_ECX = *in_ECX + uVar9;\n                    *(in_ECX + 4) = *(in_ECX + 4) + (uVar9 >> 0x20) + CARRY4(uVar2, uVar9);\n                    goto code_r0x004142a7;\n                }\n                goto code_r0x00414309;\n            }\n            if (iVar7 != 3) goto code_r0x004142a7;\n        }\n    }\n    else {\n        if (iVar7 == 7) {\n            iVar7 = *in_ECX;\n            if (arg_8h[3] == 1) {\n                iVar4 = fcn.0040cdb4();\n            }\n            else {\n                iVar4 = fcn.0040d00b();\n            }\n            *in_ECX = iVar7 + iVar4;\n            goto code_r0x004142a7;\n        }\n        if (iVar7 < 9) goto code_r0x004142a7;\n        if (10 < iVar7) {\n            if (iVar7 != 0xb) goto code_r0x004142a7;\n            if (arg_8h[3] == 0xb) {\n                iVar4 = fcn.0044be8a();\n                iVar7 = **in_ECX;\n                iVar5 = fcn.0042010a(iVar4 + iVar7);\n                fcn.0041faa0(iVar5, (*in_ECX)[1], **in_ECX);\n                uVar6 = fcn.0044be8a();\n                uVar6 = fcn.0044be47(uVar6);\n                fcn.0041faa0(**in_ECX + iVar5, uVar6);\n                fcn.0042017e(*(*in_ECX + 4));\n                *(*in_ECX + 4) = iVar5;\n                **in_ECX = iVar4 + iVar7;\n                goto code_r0x004142a7;\n            }\n            goto code_r0x00414309;\n        }\ncode_r0x0041427d:\n        if (iVar7 != 3) {\n            fVar8 = fcn.00412620();\n            fcn.00412570();\n            *in_ECX = fVar8;\n            *(in_ECX + 0xc) = 3;\n        }\n    }\n    fVar8 = fcn.00412620();\n    *in_ECX = fVar8 + *in_ECX;\ncode_r0x004142a7:\n    if (*(in_ECX + 1) != 0) {\n        fcn.00401926(*(in_ECX + 1));\n        *(in_ECX + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 1125
    },
    "0041a54d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a54d(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint arg_10h;\n    uint arg_14h;\n    uint arg_1ch;\n    uint arg_20h;\n    \n    uVar1 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044be63();\n    }\n    arg_20h = 0xffffffff;\n    arg_1ch = 0xffffffff;\n    arg_14h = 0xffffffff;\n    arg_10h = 0;\n    arg_ch_00 = fcn.0040cdb4();\n    uVar1 = fcn.0041a599(0, arg_ch_00, arg_10h, arg_14h, uVar1, arg_1ch, arg_20h);\n    fcn.00412570();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 236
    },
    "0041a665": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a665(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint dwExStyle;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    arg_8h = 0;\n    uVar1 = *(iVar2 + 8);\n    dwExStyle = 0xffffffff;\n    var_4h = 0xffffffff;\n    var_ch = 0xffffffff;\n    var_8h = 0xffffffff;\n    var_14h = 0xffffffff;\n    var_10h = 0xffffffff;\n    if (7 < uVar1) {\n        arg_8h = fcn.0044be63();\n    }\n    if (6 < uVar1) {\n        var_4h = fcn.0040cdb4();\n    }\n    if (5 < uVar1) {\n        dwExStyle = fcn.0040cdb4();\n    }\n    if (4 < uVar1) {\n        var_10h = fcn.0040cdb4();\n    }\n    if (3 < uVar1) {\n        var_14h = fcn.0040cdb4();\n    }\n    if (2 < uVar1) {\n        var_8h = fcn.0040cdb4();\n    }\n    if (1 < uVar1) {\n        var_ch = fcn.0040cdb4();\n    }\n    iVar2 = **(iVar2 + 4);\n    fcn.004084a6();\n    iVar2 = fcn.0041a756(**(iVar2 + 8), var_14h, var_10h, var_ch, var_8h, dwExStyle, var_4h, arg_8h);\n    if (iVar2 == 0) {\n        fcn.0044d7e4(1, 0);\n        fcn.00412570();\n        *arg_ch = 0;\n    }\n    else {\n        fcn.00412570();\n        *arg_ch = iVar2;\n    }\n    arg_ch[3] = 7;\n    return 0;\n}\n",
        "token_count": 508
    },
    "0041ad5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t ** __cdecl fcn.0041ad5c(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t **arg_14h)\n\n{\n    uint32_t **ppuVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t arg_ch_00;\n    uint32_t **ppuVar4;\n    int32_t iVar5;\n    int16_t iVar6;\n    uint uVar7;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.0041af7d(arg_8h);\n    ppuVar4 = arg_14h;\n    if ((arg_ch_00 == -1) && (arg_ch != 1)) goto code_r0x0041ae5c;\n    if ((*0x4c18e4 != 0) && ((*0x4c1848 == '\\0' || (*0x4c18e8 != arg_ch)))) {\n        arg_14h = *0x4c18dc;\n        while (ppuVar1 = arg_14h,  cVar2 = fcn.00402e2a(0),  cVar2 != '\\0') {\n            if (**ppuVar1 == arg_ch) {\n                arg_14h = NULL;\n                *0x4c18e8 = arg_ch;\n                *0x4c1848 = 1;\n                iVar5 = fcn.004542c4(*ppuVar1 + 1, &arg_14h, arg_8h, arg_ch, arg_10h, ppuVar4);\n                *0x4c18e8 = 0xffffffff;\n                *0x4c1848 = '\\0';\n                if (iVar5 == 1) {\n                    *0x4c1848 = 0;\n                    *0x4c18e8 = 0xffffffff;\n                    return arg_14h;\n                }\n                iVar5 = fcn.0041af7d(arg_8h);\n                if (iVar5 == -1) {\n                    return NULL;\n                }\n                break;\n            }\n            fcn.00468b5a(&var_4h);\n        }\n    }\n    iVar6 = ppuVar4;\n    iVar3 = ppuVar4 >> 0x10;\n    if (0x115 < arg_ch) {\n        if (arg_ch < 0x203) {\n            if (arg_ch != 0x202) {\n                if (arg_ch < 0x138) {\n                    if (arg_ch == 0x137) {\ncode_r0x0047f3e6:\n                        ppuVar4 = fcn.0046f084(arg_8h, arg_10h);\n                        return ppuVar4;\n                    }\n                    if (arg_ch == 0x133) {\n                        uVar7 = 1;\n                    }\n                    else {\n                        if (arg_ch != 0x134) {\n                            if (arg_ch != 0x135) {\n                                if (arg_ch == 0x136) {\n                                    uVar7 = fcn.0041af7d(arg_8h);\n                                    ppuVar4 = fcn.0041ad1f(uVar7, arg_10h);\n                                    return ppuVar4;\n                                }\n                                goto code_r0x0041ae5c;\n                            }\n                            goto code_r0x0047f3e6;\n                        }\n                        uVar7 = 2;\n                    }\n                }\n                else {\n                    if (arg_ch != 0x138) {\n                        if (arg_ch == 0x200) {\n                            fcn.0046f45a(arg_8h, iVar6, iVar3, arg_10h);\n                            return NULL;\n                        }\n                        iVar5 = arg_ch - 0x201;\n                        if (iVar5 != 0) goto code_r0x0041ae5c;\n                        uVar7 = 0;\n                        goto code_r0x0047f404;\n                    }\n                    uVar7 = 6;\n                }\n                ppuVar4 = fcn.0041afb4(arg_8h, arg_10h, ppuVar4, uVar7);\n                return ppuVar4;\n            }\n            uVar7 = 0;\n        }\n        else {\n            iVar5 = arg_ch - 0x204;\n            if (iVar5 == 0) {\n                uVar7 = 1;\ncode_r0x0047f404:\n                fcn.0046ea4e(arg_8h, iVar5, iVar6, iVar3, arg_10h, uVar7);\n                return NULL;\n            }\n            if (arg_ch != 0x205) {\n                if (arg_ch == 0x211) {\n                    fcn.0046f37c(0, arg_ch_00, arg_8h, arg_10h, ppuVar4);\n                    return NULL;\n                }\n                if (arg_ch == 0x212) {\n                    fcn.0046f3ab(0, arg_ch_00, arg_8h, arg_10h, ppuVar4);\n                    return NULL;\n                }\n                if (arg_ch == 0x232) {\n                    fcn.0046f3da(0, arg_ch_00, arg_8h, arg_10h, ppuVar4);\n                    return NULL;\n                }\n                if (arg_ch == 0x233) {\n                    fcn.0046f122(arg_8h, arg_10h);\n                    return NULL;\n                }\n                if (arg_ch == 0x31a) {\n                    *0x4c10ec = (*_sym.imp.UxTheme.dll_IsThemeActive)();\n                    (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x31a, arg_10h, ppuVar4);\n                    return NULL;\n                }\n                goto code_r0x0041ae5c;\n            }\n            uVar7 = 1;\n        }\n        fcn.0046eaa6(arg_8h, iVar6, iVar3, arg_10h, uVar7);\n        return NULL;\n    }\n    if (arg_ch != 0x115) {\n        if (arg_ch < 0x2c) {\n            if (arg_ch == 0x2b) {\n                fcn.0046f0a1(arg_8h, ppuVar4);\n                return NULL;\n            }\n            if (arg_ch < 7) {\n                if (arg_ch == 6) {\n                    fcn.0041b7f2(arg_8h, arg_10h & 0xffff, ppuVar4, arg_10h >> 0x10);\n                    return NULL;\n                }\n                if (arg_ch == 1) {\n                    return NULL;\n                }\n                if (arg_ch == 2) {\n                    fcn.0041b845(arg_8h);\n                    return NULL;\n                }\n                if (arg_ch == 3) {\n                    fcn.0046f4b2(arg_8h);\n                    return NULL;\n                }\n                if (arg_ch == 5) {\n                    fcn.0046ff91(arg_8h, arg_10h, iVar6, iVar3);\n                    return NULL;\n                }\n            }\n            else {\n                if (arg_ch == 0xf) {\n                    fcn.0041b18c(arg_8h);\n                    return NULL;\n                }\n                if (arg_ch == 7) {\n                    fcn.0041ac99(arg_8h, arg_10h);\n                    return NULL;\n                }\n                if (arg_ch == 0x20) {\n                    ppuVar4 = fcn.0046ff04(arg_8h, arg_10h, ppuVar4 & 0xffff, ppuVar4 >> 0x10);\n                    return ppuVar4;\n                }\n            }\n        }\n        else {\n            if (arg_ch == 0x4e) {\n                ppuVar4 = fcn.0046f5d0(arg_8h, arg_10h, ppuVar4);\n                return ppuVar4;\n            }\n            if (arg_ch == 0x53) {\n                fcn.0046f425(0, arg_ch_00, arg_8h, arg_10h, ppuVar4);\n                return NULL;\n            }\n            if (arg_ch == 0x7b) {\n                fcn.0046efa8(arg_8h, arg_10h, ppuVar4 & 0xffff, ppuVar4 >> 0x10);\n                return NULL;\n            }\n            if (arg_ch == 0x84) {\n                ppuVar4 = fcn.0046f594(arg_8h, iVar6, iVar3);\n                return ppuVar4;\n            }\n            if (arg_ch == 0x111) {\n                fcn.0046ecbc(arg_8h, arg_10h & 0xffff, ppuVar4, arg_10h >> 0x10);\n                return NULL;\n            }\n            if (arg_ch == 0x112) {\n                fcn.004702aa(arg_8h, arg_10h, iVar6, iVar3);\n                return NULL;\n            }\n            if (arg_ch == 0x114) {\n                uVar7 = 1;\n                goto code_r0x0047f358;\n            }\n        }\ncode_r0x0041ae5c:\n        ppuVar4 = (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, arg_ch, arg_10h, ppuVar4);\n        return ppuVar4;\n    }\n    uVar7 = 0;\ncode_r0x0047f358:\n    fcn.0046fe80(arg_8h, ppuVar4, arg_10h & 0xffff, arg_10h >> 0x10, uVar7);\n    return NULL;\n}\n",
        "token_count": 2180
    },
    "0041afb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041afb4(uint hDlg, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    arg_8h = fcn.0041af7d(hDlg);\n    iVar2 = fcn.0041b155(arg_10h);\n    uVar3 = arg_10h;\n    if (iVar2 == -1) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(arg_10h);\n        iVar2 = fcn.0041b155(uVar3);\n    }\n    if (arg_14h == 1) {\n        if ((iVar2 == -1) ||\n           (((cVar1 = *(**(*0x4c1884 + iVar2 * 4) + 0x90),  cVar1 != '\\x02' && (cVar1 != '\\x03')) && (cVar1 != '\\0'))))\n        {\n            uVar3 = 0x133;\n            goto code_r0x0047f52c;\n        }\n    }\n    else if (arg_14h == 2) {\n        if ((iVar2 == -1) || (*(**(*0x4c1884 + iVar2 * 4) + 0x90) != '\\x01')) {\n            uVar3 = 0x134;\n            goto code_r0x0047f52c;\n        }\n    }\n    else if ((arg_14h == 6) &&\n            ((iVar2 == -1 ||\n             ((iVar2 = **(*0x4c1884 + iVar2 * 4),  *(iVar2 + 0x90) == '\\x12' && (*(iVar2 + 0x48) == -1)))))) {\n        uVar3 = 0x138;\ncode_r0x0047f52c:\n        (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, uVar3, arg_ch, arg_10h);\n        return;\n    }\n    fcn.0041b039(arg_8h, arg_ch, uVar3);\n    return;\n}\n",
        "token_count": 491
    },
    "0041c446": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c446(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    if (*0x4c1814 == 1) {\n        if (arg_8h != -1) {\n            *(arg_18h + 0x58) = arg_8h;\n        }\n        if (arg_ch != -1) {\n            *(arg_18h + 0x5c) = arg_ch;\n        }\n    }\n    else {\n        if (*0x4c1814 == 2) {\n            if (arg_8h != -1) {\n                *(arg_18h + 0x58) = *(arg_18h + 0x58) + *(arg_18h + 0x60) + arg_8h;\n            }\n            if (arg_ch == -1) goto code_r0x0041c470;\n            arg_ch = *(arg_18h + 100) + arg_ch;\n        }\n        else {\n            if (arg_8h != -1) {\n                *(arg_18h + 0x58) = *(arg_18h + 0x58) + arg_8h;\n            }\n            if (arg_ch == -1) goto code_r0x0041c470;\n        }\n        *(arg_18h + 0x5c) = *(arg_18h + 0x5c) + arg_ch;\n    }\ncode_r0x0041c470:\n    if (0 < arg_10h) {\n        *(arg_18h + 0x60) = arg_10h;\n    }\n    if (0 < arg_14h) {\n        *(arg_18h + 100) = arg_14h;\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "0041e850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e850(int32_t arg_8h, double *arg_ch)\n\n{\n    uint uVar1;\n    float10 fVar2;\n    ulong uVar3;\n    uint var_10h;\n    double dStack12;\n    \n    if (*(arg_8h + 8) != 1) {\n        fcn.0040cdb4();\n    }\n    fVar2 = fcn.0041e8f6(*0x4b2758);\n    dStack12 = fVar2;\n    fVar2 = fcn.00412620();\n    if (fVar2 < *0x4b2720) {\n        fcn.00412620();\n        fVar2 = fcn.00425810();\n        dStack12 = fVar2 / dStack12;\n        fcn.00412570();\n    }\n    else {\n        fcn.00412620();\n        fVar2 = fcn.004256e0();\n        dStack12 = fVar2 / dStack12;\n        fcn.00412570();\n    }\n    *arg_ch = dStack12;\n    *(arg_ch + 0xc) = 3;\n    if (*(arg_8h + 8) == 1) {\n        uVar1 = 0;\n        uVar3 = fcn.0040d00b();\n        uVar1 = fcn.00456927(&var_10h, uVar3, uVar3 >> 0x20, uVar1);\n        fcn.0040d89e(uVar1);\n        fcn.00412570();\n    }\n    return 0;\n}\n",
        "token_count": 357
    },
    "00434ebf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.00434ebf(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t uStack24;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4badc0 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    uVar16 = *(arg_8h + 3);\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar10 = uVar1 & 0x7fff;\n    iVar11 = uVar10 - 0x3fff;\n    uVar5 = *arg_8h << 0x10;\n    iVar14 = 0;\n    var_8h = uVar5;\n    uVar2 = str.5_v_[1];\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x00434f34;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = str.5_v_[0] + L'\\xffffffff';\n        iVar15 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n        bVar4 = false;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x00435034;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            bVar4 = false;\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar3 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar3 = true;\n                bVar4 = true;\n            }\n            iVar12 = iVar12 + -1;\n            (&var_ch)[iVar12] = uVar9;\n            while ((-1 < iVar12 && (bVar3))) {\n                bVar3 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                bVar4 = false;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar3 = true;\n                    bVar4 = true;\n                }\n                iVar12 = iVar12 + -1;\n                (&var_ch)[iVar12] = uVar7;\n            }\n        }\ncode_r0x00435034:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar4) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        uStack24 = uVar5;\n        if (iVar15 < *0x4bb184 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4bb184 < iVar15) {\n                if (iVar15 < *0x4bb180) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = str.5_v_[3] + iVar15;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar2 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14];\n                        iVar14 = iVar14 + 1;\n                        (&uStack24)[iVar14] = uVar16 >> uVar8 | var_20h;\n                        var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar2 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14];\n                        (&var_10h)[iVar14] = uVar16 >> uVar8 | var_20h;\n                        iVar14 = iVar14 + 1;\n                        var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = str.5_v_[3] + *0x4bb180;\n                }\n                goto code_r0x004353e5;\n            }\n            iVar11 = *0x4bb184 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar5;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14];\n                iVar14 = iVar14 + 1;\n                (&uStack24)[iVar14] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x004351ef;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar4 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar4 = true;\n                }\n                iVar14 = iVar14 + -1;\n                (&var_ch)[iVar14] = uVar17;\n                while ((-1 < iVar14 && (bVar4))) {\n                    bVar4 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar4 = true;\n                    }\n                    iVar14 = iVar14 + -1;\n                    (&var_ch)[iVar14] = uVar16;\n                }\n            }\ncode_r0x004351ef:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = str.5_v_[1] + L'\\x01';\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x00434f34:\n        iVar15 = 0;\n    }\ncode_r0x004353e5:\n    uVar16 = iVar15 << (0x1f - uVar2 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar16;\n    }\n    fcn.0042b4bf(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3224
    },
    "0043542f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0043542f(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t uStack24;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4badc0 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    uVar16 = *(arg_8h + 3);\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar10 = uVar1 & 0x7fff;\n    iVar11 = uVar10 - 0x3fff;\n    uVar5 = *arg_8h << 0x10;\n    iVar14 = 0;\n    var_8h = uVar5;\n    uVar2 = *0x4bb1a4;\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x004354a4;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = *0x4bb1a0 + -1;\n        iVar15 = (*0x4bb1a0 >> 0x1f & 0x1fU) + *0x4bb1a0 >> 5;\n        bVar4 = false;\n        uVar8 = 0x1f - (*0x4bb1a0 & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x004355a4;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            bVar4 = false;\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar3 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar3 = true;\n                bVar4 = true;\n            }\n            iVar12 = iVar12 + -1;\n            (&var_ch)[iVar12] = uVar9;\n            while ((-1 < iVar12 && (bVar3))) {\n                bVar3 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                bVar4 = false;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar3 = true;\n                    bVar4 = true;\n                }\n                iVar12 = iVar12 + -1;\n                (&var_ch)[iVar12] = uVar7;\n            }\n        }\ncode_r0x004355a4:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar4) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        uStack24 = uVar5;\n        if (iVar15 < *0x4bb19c - *0x4bb1a0) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4bb19c < iVar15) {\n                if (iVar15 < *0x4bb198) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = *0x4bb1ac + iVar15;\n                    iVar11 = *0x4bb1a4 + (*0x4bb1a4 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar2 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14];\n                        iVar14 = iVar14 + 1;\n                        (&uStack24)[iVar14] = uVar16 >> uVar8 | var_20h;\n                        var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = *0x4bb1a4 + (*0x4bb1a4 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar2 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14];\n                        (&var_10h)[iVar14] = uVar16 >> uVar8 | var_20h;\n                        iVar14 = iVar14 + 1;\n                        var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = *0x4bb1ac + *0x4bb198;\n                }\n                goto code_r0x00435955;\n            }\n            iVar11 = *0x4bb19c - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar5;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14];\n                iVar14 = iVar14 + 1;\n                (&uStack24)[iVar14] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (*0x4bb1a0 >> 0x1f & 0x1fU) + *0x4bb1a0 >> 5;\n            uVar8 = 0x1f - (*0x4bb1a0 & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x0043575f;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar4 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar4 = true;\n                }\n                iVar14 = iVar14 + -1;\n                (&var_ch)[iVar14] = uVar17;\n                while ((-1 < iVar14 && (bVar4))) {\n                    bVar4 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar4 = true;\n                    }\n                    iVar14 = iVar14 + -1;\n                    (&var_ch)[iVar14] = uVar16;\n                }\n            }\ncode_r0x0043575f:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = *0x4bb1a4 + 1;\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x004354a4:\n        iVar15 = 0;\n    }\ncode_r0x00435955:\n    uVar16 = iVar15 << (0x1f - uVar2 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x4bb1a8 == 0x40) {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (*0x4bb1a8 == 0x20) {\n        *arg_ch = uVar16;\n    }\n    fcn.0042b4bf(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3239
    },
    "0043b064": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0043b064(int32_t **arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    uint var_4ch;\n    uint var_3ch;\n    uint *var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t *var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *arg_8h = NULL;\n    piVar7 = NULL;\n    var_1ch = NULL;\n    if (in_ECX == NULL) {\n        return -0x7fffbffd;\n    }\n    iVar6 = (**(*in_ECX + 0x10))();\n    if (iVar6 < 0) {\n        return iVar6;\n    }\n    iVar6 = (**(*var_ch + 0x48))(var_ch, &var_4h, &var_34h);\n    if (iVar6 < 0) {\n        (**(*var_ch + 8))(var_ch);\n        return iVar6;\n    }\n    if (in_EDX == 0) {\n        var_28h = (**(*var_4h + 0xc))(var_4h);\n        iVar6 = 0;\n        piVar9 = NULL;\n        var_10h = 0;\n        piVar8 = var_1ch;\n        if (var_28h != NULL) {\n            do {\n                piVar8 = piVar7;\n                if (iVar6 != 0) break;\n                var_20h = 0;\n                (**(*var_4h + 0x14))(var_4h, piVar9, &var_20h);\n                if (var_20h == 5) {\n                    (**(*var_4h + 0x10))(var_4h, piVar9, &var_8h);\n                    (**(*var_8h + 0xc))(var_8h, &var_2ch);\n                    uVar5 = *(var_2ch + 0x30);\n                    var_1ch = uVar5;\n                    (**(*var_8h + 0x4c))(var_8h, var_2ch);\n                    if (0x1 < uVar5) {\n                        var_14h = -1;\n                        piVar8 = NULL;\n                        if (var_1ch != NULL) {\n                            do {\n                                iVar6 = (**(*var_8h + 0x20))(var_8h, piVar8, &var_30h);\n                                if (iVar6 == 0) {\n                                    (**(*var_ch + 0x38))(var_ch, var_30h, &var_18h);\n                                    if (var_14h == -1) {\n                                        (**(*var_18h + 0x48))(var_18h, 0, &var_14h);\n                                    }\n                                    (**(*var_8h + 0x24))(var_8h, piVar8, &var_24h);\n                                    if (((var_14h == var_34h) && ((var_24h & 1) != 0)) && ((var_24h & 2) != 0)) {\n                                        var_10h = 1;\n                                        piVar7 = var_18h;\n                                        break;\n                                    }\n                                    (**(*var_18h + 8))(var_18h);\n                                }\n                                piVar8 = piVar8 + 1;\n                            } while (piVar8 < var_1ch);\n                        }\n                    }\n                    iVar6 = var_10h;\n                    (**(*var_8h + 8))(var_8h);\n                }\n                piVar9 = piVar9 + 1;\n                piVar8 = piVar7;\n            } while (piVar9 < var_28h);\n        }\n        var_1ch = piVar8;\n        (**(*var_4h + 8))(var_4h);\n        (**(*var_ch + 8))(var_ch);\n    }\n    else {\n        var_10h = 1;\n        iVar6 = (**(*var_4h + 0x2c))(var_4h);\n        (**(*var_4h + 8))(var_4h);\n        (**(*var_ch + 8))(var_ch);\n        if (iVar6 < 0) {\n            return -0x7ffd7fe9;\n        }\n        if (var_10h == 0) {\n            return -0x7ffd7fe9;\n        }\n        var_1ch = var_28h;\n        piVar7 = var_28h;\n    }\n    if (piVar7 == NULL) {\n        return -0x7ffd7fe9;\n    }\n    (**(*piVar7 + 0xc))(piVar7, &var_38h);\n    piVar7 = var_1ch;\n    iVar6 = var_38h[10];\n    uVar1 = *var_38h;\n    uVar2 = var_38h[1];\n    uVar3 = var_38h[2];\n    uVar4 = var_38h[3];\n    (**(*var_1ch + 0x4c))(var_1ch, var_38h);\n    if (iVar6 == 4) {\n        *arg_8h = piVar7;\n        *arg_ch = uVar1;\n        arg_ch[1] = uVar2;\n        arg_ch[2] = uVar3;\n        arg_ch[3] = uVar4;\n        return 0;\n    }\n    (**(*piVar7 + 8))(piVar7);\n    return -0x7ffd7360;\n}\n",
        "token_count": 1405
    },
    "0043b398": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043b398(uint hObj, int32_t pDestinationSid, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint32_t uVar5;\n    uint in_ECX;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint32_t pAclInformation;\n    uint var_2ch;\n    uint lpbDaclDefaulted;\n    int32_t pAceList;\n    int32_t lpbDaclPresent;\n    uint var_18h;\n    uint pSIRequested;\n    uint pSecurityDescriptor;\n    uint32_t var_ch;\n    uint pSID;\n    int32_t pDacl;\n    \n    uVar7 = 0;\n    pSecurityDescriptor = 0;\n    pSID = 0;\n    var_ch = 0;\n    pSIRequested = 4;\n    cVar1 = fcn.0043b8e7(&pSecurityDescriptor, in_ECX, &var_18h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0043b982(var_18h);\n        if (cVar1 != '\\0') {\n            pDacl = 0;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_GetSecurityDescriptorDacl)\n                              (pSecurityDescriptor, &lpbDaclPresent, &pDacl, &lpbDaclDefaulted);\n            if (iVar2 != 0) {\n                fcn.00421970(&pAclInformation, 0, 0xc);\n                var_2ch = 8;\n                if (pDacl != 0) {\n                    iVar2 = (*_sym.imp.ADVAPI32.dll_GetAclInformation)(pDacl, &pAclInformation, 0xc, 2);\n                    if (iVar2 == 0) goto code_r0x0043b56c;\n                }\n                (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid);\n                cVar1 = fcn.0043b94e(var_2ch);\n                uVar5 = var_ch;\n                if (cVar1 != '\\0') {\n                    if ((lpbDaclPresent != 0) && (pAclInformation != 0)) {\n                        var_ch = 0;\n                        do {\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_GetAce)(pDacl, var_ch, &pAceList);\n                            if (iVar2 == 0) goto code_r0x0043b56c;\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_AddAce)(uVar5, 2, 0xffffffff, pAceList, *(pAceList + 2));\n                            if (iVar2 == 0) goto code_r0x0043b56c;\n                            var_ch = var_ch + 1;\n                        } while (var_ch < pAclInformation);\n                    }\n                    pAceList = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid);\n                    pAceList = pAceList + 8;\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, pAceList);\n                    puVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar3);\n                    if (puVar4 != NULL) {\n                        *(puVar4 + 2) = pAceList;\n                        uVar3 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid, puVar4 + 8, pDestinationSid);\n                        iVar2 = (*_sym.imp.ADVAPI32.dll_CopySid)(uVar3);\n                        if (iVar2 != 0) {\n                            puVar6 = arg_10h + 4;\n                            pDestinationSid = 0;\n                            do {\n                                *puVar4 = *(puVar6 + -1);\n                                puVar4[1] = *(puVar6 + -3);\n                                *(puVar4 + 4) = *puVar6;\n                                iVar2 = (*_sym.imp.ADVAPI32.dll_AddAce)(uVar5, 2, 0xffffffff, puVar4, *(puVar4 + 2));\n                                if (iVar2 == 0) goto code_r0x0043b56c;\n                                pDestinationSid = pDestinationSid + 1;\n                                puVar6 = puVar6 + 3;\n                            } while (pDestinationSid == 0);\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(pSID, 1, uVar5, 0);\n                            if (iVar2 != 0) {\n                                iVar2 = (*_sym.imp.USER32.dll_SetUserObjectSecurity)(hObj, &pSIRequested, pSID);\n                                if (iVar2 != 0) {\n                                    uVar7 = 1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0043b56c:\n    fcn.0043b850();\n    fcn.0043b850();\n    fcn.0043b850();\n    uVar5 = fcn.0043b850();\n    return uVar5 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 1153
    },
    "0043be31": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.0043be31(void)\n\n{\n    int32_t iVar1;\n    uint pIdentifierAuthority;\n    uint var_ch;\n    uint SidToCheck;\n    uint32_t IsMember;\n    \n    pIdentifierAuthority = 0;\n    var_ch._0_2_ = 0x500;\n    IsMember = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                         (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &SidToCheck);\n    if (IsMember != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(0, SidToCheck, &IsMember);\n        IsMember = IsMember & -(iVar1 != 0);\n        (*_sym.imp.ADVAPI32.dll_FreeSid)(SidToCheck);\n    }\n    return IsMember == 1;\n}\n",
        "token_count": 216
    },
    "0043c145": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c145(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint *in_ECX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint Msg;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(*in_ECX, &lpRect);\n    if (arg_10h == 0xffffffff) {\n        arg_10h = (var_ch - lpRect) / 2;\n    }\n    if (arg_14h == -1) {\n        arg_14h = (var_8h - var_10h) / 2;\n    }\n    uVar2 = arg_14h << 0x10 | arg_10h & 0xffff;\n    uVar1 = 1;\n    arg_14h = 0x201;\n    arg_10h = 0x203;\n    Msg = 0x202;\n    if (arg_8h == 2) {\n        arg_14h = 0x204;\n        Msg = 0x205;\n        uVar1 = 2;\n    }\n    else {\n        if (arg_8h != 1) goto code_r0x0043c1dd;\n        arg_14h = 0x207;\n        Msg = 0x208;\n        uVar1 = 0x10;\n    }\n    arg_10h = 0x206;\ncode_r0x0043c1dd:\n    arg_8h = 1;\n    if (0 < arg_ch) {\n        do {\n            uVar3 = arg_14h;\n            if ((arg_8h - (arg_8h >> 0x1f) & 0xfffffffe) == arg_8h) {\n                uVar3 = arg_10h;\n            }\n            (*_sym.imp.USER32.dll_PostMessageW)(*in_ECX, uVar3, uVar1, uVar2);\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            (*_sym.imp.USER32.dll_PostMessageW)(*in_ECX, Msg, 0, uVar2);\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            arg_8h = arg_8h + 1;\n        } while (arg_8h <= arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 564
    },
    "0043c265": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c265(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0xb0, &var_4h, &var_10h);\n    iVar1 = var_4h;\n    var_ch = var_4h;\n    var_8h = (*pcVar2)(*in_ECX, 0xc9, var_4h, 0);\n    if (var_8h < 1) {\n        *arg_8h = var_4h + 1;\n    }\n    else {\n        iVar4 = (*pcVar2)(*in_ECX, 0xc9, var_4h, 0);\n        iVar3 = var_8h;\n        while (iVar3 == iVar4) {\n            var_4h = var_4h + -1;\n            iVar4 = (*pcVar2)(*in_ECX, 0xc9, var_4h, 0);\n            iVar1 = var_ch;\n        }\n        *arg_8h = iVar1 - var_4h;\n    }\n    return 1;\n}\n",
        "token_count": 332
    },
    "0043ceb5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ceb5(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    arg_8h_00 = fcn.0043d0d4(arg_8h);\n    if (arg_8h_00 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1127, arg_8h_00, 0xf000);\n        uVar2 = uVar2 >> 0xc;\n        if ((((uVar2 != 0) && ((arg_ch != '\\0' || (uVar2 != 1)))) && ((arg_ch != '\\x01' || (uVar2 != 2)))) &&\n           (cVar1 = fcn.0043cf7f(arg_8h_00, &var_8h),  cVar1 != '\\0')) {\n            fcn.0043c145(0, 1, var_8h, var_4h);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 299
    },
    "0043d623": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d623(uint hWnd, uint lpdwResult)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (lpdwResult == '\\x01') {\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(hWnd, 0, 0, 0, 2, 5000, &lpdwResult);\n        if (iVar1 == 0) {\n            return;\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 195
    },
    "0043e138": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e138(uint hWnd, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (arg_ch == '\\x01') {\n        uVar2 = hWnd;\n        cVar1 = fcn.0040193b(hWnd);\n        if (cVar1 != '\\0') {\n            return;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 165
    },
    "0043e9b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e9b5(uint arg_8h, int32_t arg_ch)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(arg_8h);\n    if ((iVar2 == 0) && (*(arg_ch + 5) != '\\x01')) {\ncode_r0x0043ea78:\n        uVar4 = 1;\n    }\n    else {\n        var_4h = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0xe, 0, 0);\n        if (var_4h == 0) {\n            var_4h = 0x7fff;\n        }\n        iVar1 = (var_4h + 1U) * 2;\n        iVar2 = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0xd, var_4h + 1U, iVar2);\n        *(iVar2 + var_4h * 2) = 0;\n        if (iVar3 < 1) {\n            uVar4 = 1;\n        }\n        else {\n            if (*(arg_ch + 0xc) == '\\0') {\n                uVar4 = fcn.004218fb(iVar2);\n                (*_sym.imp.USER32.dll_CharUpperBuffW)(iVar2, uVar4);\n            }\n            iVar3 = fcn.00422633(iVar2, *(arg_ch + 0x24));\n            if (iVar3 == 0) {\n                fcn.0042017e(iVar2);\n                goto code_r0x0043ea78;\n            }\n            *(arg_ch + 0xe8) = 1;\n            uVar4 = 0;\n        }\n        fcn.0042017e(iVar2);\n    }\n    return uVar4;\n}\n",
        "token_count": 462
    },
    "0043fafd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043fafd(int32_t hWnd, int32_t nWidth, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    if (hWnd != 1) {\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x54), 1);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &lpRect);\n            iVar1 = var_ch;\n            iVar4 = lpRect;\n            if (var_8h < lpRect) {\n                lpRect = var_8h;\n                var_8h = iVar4;\n            }\n            if (var_4h < var_ch) {\n                var_ch = var_4h;\n                var_4h = iVar1;\n            }\n            iVar4 = (arg_10h - (var_4h - var_ch)) + -10;\n            (*_sym.imp.USER32.dll_MoveWindow)\n                      (iVar3, (10 - (var_8h - lpRect)) / 2 + nWidth / 4, iVar4, var_8h - lpRect, var_4h - var_ch, 0);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x54), 2);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &lpRect);\n            iVar2 = var_ch;\n            iVar1 = lpRect;\n            if (var_8h < lpRect) {\n                lpRect = var_8h;\n                var_8h = iVar1;\n            }\n            if (var_4h < var_ch) {\n                var_ch = var_4h;\n                var_4h = iVar2;\n            }\n            (*_sym.imp.USER32.dll_MoveWindow)\n                      (iVar3, (nWidth * 3) / 4 - ((var_8h - lpRect) + 10) / 2, iVar4, var_8h - lpRect, var_4h - var_ch, \n                       0);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x54), 0x3e9);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &lpRect);\n            iVar2 = var_ch;\n            iVar1 = lpRect;\n            if (var_8h < lpRect) {\n                lpRect = var_8h;\n                var_8h = iVar1;\n            }\n            if (var_4h < var_ch) {\n                var_ch = var_4h;\n                var_4h = iVar2;\n            }\n            iVar4 = iVar4 + (-5 - (var_4h - var_ch));\n            (*_sym.imp.USER32.dll_MoveWindow)(iVar3, 10, iVar4, nWidth + -0x14, var_4h - var_ch, 0);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x54), 0x3ea);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_MoveWindow)(iVar3, 10, 10, nWidth + -0x14, iVar4 + -5, 0);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x54), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 851
    },
    "004429cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004429cb(int16_t *pvargSrc, int16_t *pvarDest, uint32_t arg_10h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    \n    iVar2 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(pvarDest, pvargSrc);\n    if (iVar2 < 0) {\n        bVar1 = false;\n    }\n    else {\n        if (arg_10h != 0xc) {\n            if ((arg_10h & 0xffff) - 0x1e < 2) {\n                arg_10h = 8;\n            }\n            if (*pvargSrc != arg_10h) {\n                if (*pvargSrc == 8) {\n                    fcn.004419a0(*(pvarDest + 4), 0);\n                }\n                iVar2 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(pvarDest, pvarDest, 0, arg_10h);\n                if (*pvarDest == 8) {\n                    fcn.004419a0(*(pvarDest + 4), 1);\n                }\n                return -1 < iVar2;\n            }\n        }\n        bVar1 = true;\n    }\n    return bVar1;\n}\n",
        "token_count": 285
    },
    "00443c7f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00443c7f(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint arg_8h_00;\n    uint16_t *puVar4;\n    int32_t in_ECX;\n    int32_t arg_8h_01;\n    uint var_eh;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = arg_ch;\n    *(in_ECX + 0x20) = arg_ch;\n    fcn.00444a5b(arg_ch, 1);\n    arg_ch = arg_ch & 0xffffff00;\n    var_8h = 0;\n    var_4h._0_2_ = 0;\n    if (*(in_ECX + 8) == '\\x01') {\n        uVar3 = fcn.004442d9(0x14, 0);\n        arg_ch = uVar2 & 0xffffff00 | uVar3;\n        arg_8h_00 = fcn.00443569(&var_eh);\n        fcn.00443503(arg_8h_00);\n    }\n    arg_8h_01 = 0;\n    while( true ) {\n        puVar4 = fcn.0041db6f(arg_8h_01);\n        uVar1 = *puVar4;\n        if (uVar1 == 0) break;\n        arg_8h_01 = arg_8h_01 + 1;\n        fcn.00443845();\n        fcn.00443c15(uVar1, 1);\n        *(in_ECX + 0x14) = 0;\n        *(in_ECX + 0x18) = 0;\n    }\n    if (*(in_ECX + 8) == '\\x01') {\n        fcn.004445f9(&var_8h);\n        fcn.004442d9(0x14, arg_ch);\n    }\n    fcn.00444a5b(*(in_ECX + 0x20), 0);\n    return;\n}\n",
        "token_count": 484
    },
    "00445a25": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445a25(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint *puStack68;\n    uint uStack64;\n    uint auStack60 [4];\n    int32_t iStack44;\n    \n    puStack68 = 0xffffffff;\n    cVar3 = fcn.00445d2c(arg_8h, &puStack68);\n    if (((cVar3 != '\\0') && (iVar5 = 7,  6 < unaff_ESI)) && (unaff_ESI <= *(in_ECX + 0x9d0))) {\n        puStack68 = *(in_ECX + 0x1b4 + unaff_ESI * 4);\n        uVar8 = *puStack68;\n        if (*(puStack68 + 1) == '\\x01') {\n            uStack64 = 0x30;\n            iVar7 = unaff_ESI;\n            fcn.00421970(auStack60, 0, 0x2c);\n            auStack60[0] = 4;\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar8, unaff_ESI, 0, &uStack64);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            if ((iStack44 != 0) && (6 < *(in_ECX + 0x9d0))) {\n                ppiVar6 = in_ECX + 0x1d0;\n                unaff_ESI = iVar7;\n                iVar7 = iStack44;\n                do {\n                    piVar1 = *ppiVar6;\n                    if ((piVar1 != NULL) && (*piVar1 == iStack44)) {\n                        if (*(piVar1 + 1) == '\\x01') {\n                            iStack44 = iVar7;\n                            fcn.00445a25(iVar5);\n                            iVar7 = iStack44;\n                        }\n                        else {\n                            (*_sym.imp.USER32.dll_DeleteMenu)(iStack44, iVar5, 0);\n                            *(*ppiVar6 + 1) = 0xff;\n                            **ppiVar6 = 0;\n                            *(*ppiVar6 + 5) = 0;\n                            fcn.0040a2fb(0, 0xffffffff);\n                            iStack44 = iVar7;\n                            fcn.00445685(iVar5);\n                            iVar7 = iStack44;\n                        }\n                    }\n                    iVar5 = iVar5 + 1;\n                    ppiVar6 = ppiVar6 + 1;\n                } while (iVar5 <= *(in_ECX + 0x9d0));\n            }\n        }\n        puVar2 = puStack68;\n        iVar5 = (*_sym.imp.USER32.dll_DeleteMenu)(*puStack68, unaff_ESI, 0);\n        if (iVar5 != 0) {\n            *(puVar2 + 1) = 0xff;\n            *puVar2 = 0;\n            fcn.0040a2fb(0, 0xffffffff);\n            fcn.00445685(unaff_ESI);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 759
    },
    "00446387": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446387(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h & 1) == 0) {\n        if ((arg_8h & 2) != 0) {\n            fcn.00402b94();\n            uVar1 = 0xfffffffc;\n            goto code_r0x004463b5;\n        }\n    }\n    else {\n        fcn.00403598();\n        uVar1 = 0xfffffffd;\ncode_r0x004463b5:\n        fcn.0044548a(uVar1);\n    }\n    if ((arg_8h & 4) == 0) {\n        if ((arg_8h & 8) == 0) goto code_r0x004463f1;\n        *0x4c18f9 = 0;\n        if (*0x4c10c6 == '\\x01') {\n            fcn.00403598();\n        }\n        uVar1 = 0xfffffffa;\n    }\n    else {\n        *0x4c18f9 = 1;\n        uVar1 = 0xfffffffb;\n    }\n    fcn.0044548a(uVar1);\ncode_r0x004463f1:\n    if ((arg_8h & 0x10) != 0) {\n        *0x4c18f9 = 0;\n        fcn.00407e53(0x49dbf0);\n    }\n    return 1;\n}\n",
        "token_count": 332
    },
    "004469c9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004469c9(uint param_1, char param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (param_2 == '\\x01') {\n        cVar1 = fcn.00447c22();\n        if (cVar1 != '\\0') {\n            return;\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(param_1, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 170
    },
    "00446b3f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00446b3f(uint arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_10b8h;\n    uint var_eb0h;\n    uint var_ca8h;\n    uint lpFindFileData;\n    uint var_a74h;\n    uint var_850h;\n    uint lpFileName;\n    uint lpString2;\n    uint lpExistingFileName;\n    uint uStackY48;\n    uint *var_ch;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    fcn.00430650();\n    uVar6 = 0;\n    var_ch = 0x446b60;\n    fcn.004031b8();\n    var_ch = 0x446b6d;\n    fcn.004031b8();\n    var_ch = 0x446b7e;\n    uVar2 = fcn.00447b9f();\n    var_ch = 0x446b8c;\n    cVar3 = fcn.00447c0c();\n    if (cVar3 != '\\0') {\n        var_ch = 0x4b37ac;\n        fcn.00421914(&fcn.00446b3f::lpFileName, 0x4b37ac);\n    }\n    var_ch = 0x446baf;\n    cVar3 = fcn.00447c0c();\n    if (cVar3 != '\\0') {\n        var_ch = 0x4b37ac;\n        fcn.00421914(&fcn.00446b3f::var_850h, 0x4b37ac);\n    }\n    var_ch = &fcn.00446b3f::var_10b8h;\n    fcn.0042297d(&fcn.00446b3f::lpFileName, &fcn.00446b3f::var_ch, &fcn.00446b3f::var_eb0h, &fcn.00446b3f::var_ca8h, \n                 var_ch);\n    var_ch = &fcn.00446b3f::lpFindFileData;\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n    auStack8 = CONCAT12(1, uVar2 << 8);\n    bVar1 = true;\n    _auStack8 = auStack8;\n    if (iVar4 != -1) {\n        while (bVar1) {\n            if ((lpFindFileData & 0x10) == 0) {\n                fcn.00447334(&fcn.00446b3f::var_10b8h, &fcn.00446b3f::var_850h, &fcn.00446b3f::lpString2);\n                fcn.00421943(&fcn.00446b3f::lpExistingFileName, &fcn.00446b3f::var_ch);\n                fcn.00421914(&fcn.00446b3f::lpExistingFileName, &fcn.00446b3f::var_eb0h);\n                uStackY48 = 0x446c82;\n                fcn.00421914(&fcn.00446b3f::lpExistingFileName, &fcn.00446b3f::var_a74h);\n                cVar3 = fcn.0041dd84();\n                if (cVar3 == '\\0') {\ncode_r0x00446cc2:\n                    if (arg_ch == '\\x01') {\n                        if (auStack8[1] == '\\0') {\n                            iVar4 = (*_sym.imp.KERNEL32.dll_MoveFileW)();\n                        }\n                        else {\n                            iVar4 = (*_sym.imp.KERNEL32.dll_CopyFileW)();\n                            if (iVar4 == 0) goto code_r0x00446d52;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                        }\n                    }\n                    else {\n                        iVar4 = (*_sym.imp.KERNEL32.dll_CopyFileW)();\n                    }\n                    if (iVar4 == 0) {\ncode_r0x00446d52:\n                        uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)();\n                        return uVar6 & 0xffffff00;\n                    }\n                }\n                else {\n                    if (arg_8h == '\\0') goto code_r0x00446d52;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n                    if (iVar4 != 0) {\n                        (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                        goto code_r0x00446cc2;\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_MoveFileW)();\n                    if (iVar4 == 0) goto code_r0x00446d60;\n                }\n                _auStack8 = CONCAT13(1, auStack8);\n            }\n            iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)();\n            if (iVar4 == 0) {\n                _auStack8 = _auStack8 & 0xff00ffff;\n                bVar1 = false;\n            }\n        }\n    }\n    uVar6 = _auStack8 >> 0x18;\ncode_r0x00446d60:\n    uVar5 = (*_sym.imp.KERNEL32.dll_FindClose)();\n    return uVar5 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 1243
    },
    "00446e4a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00446e4a(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t unaff_EBX;\n    uint32_t uVar5;\n    uchar auStack1664 [7];\n    uchar uStack1657;\n    uchar auStack1656 [8];\n    uchar auStack1648 [520];\n    uint8_t auStack1128 [8];\n    uchar auStack1120 [36];\n    uchar auStack1084 [548];\n    uchar auStack536 [8];\n    uchar auStack528 [524];\n    \n    uVar5 = 0;\n    uStack1657 = 0;\n    fcn.004031b8();\n    cVar1 = fcn.00447c0c();\n    if (cVar1 != '\\0') {\n        fcn.00421914(auStack1648, 0x4b37ac);\n    }\n    fcn.0042297d(auStack1648, auStack1656, auStack528, 0, 0);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(auStack1648, auStack1120);\n    cVar1 = '\\x01';\n    uVar4 = unaff_EBX & 0xff000000 | 0x10000;\n    if (iVar2 != -1) {\n        while (cVar1 == '\\x01') {\n            if ((auStack1128[0] & 0x10) == 0) {\n                uVar4 = uVar4 & 0xffffff | 0x1000000;\n                fcn.00421943(auStack1656, auStack1664);\n                fcn.00421914(auStack1656, auStack536);\n                fcn.00421914(auStack1656, auStack1084);\n                iVar3 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(auStack1656);\n                if (iVar3 != 1) goto code_r0x00446f3c;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar2, auStack1128);\n            cVar1 = uVar4 >> 0x10;\n            if (iVar3 == 0) {\n                cVar1 = '\\0';\n                uVar4 = uVar4 & 0xff00ffff;\n            }\n        }\n    }\n    uVar5 = uVar4 >> 0x18;\ncode_r0x00446f3c:\n    uVar4 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n    return uVar4 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 597
    },
    "0044713c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0044713c(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lpInBuffer;\n    uint var_228h;\n    uint var_224h;\n    uint var_21ch;\n    uint var_20ah;\n    uint var_56h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(param_1, 0xc0000000, 3, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        fcn.00421970(&lpInBuffer, 0, 0x228);\n        lpInBuffer._2_2_ = 2;\n        lpInBuffer._0_2_ = 0x28;\n        var_228h = 0x200;\n        var_224h = 3;\n        var_21ch = 0x28;\n        var_20ah._0_1_ = 0xec;\n        var_4h = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)\n                          (iVar1, 0x4d02c, &lpInBuffer, 0x200, &lpInBuffer, 0x200, &var_4h, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        if (iVar2 != 0) {\n            return var_56h != 1;\n        }\n    }\n    return 0x80004005;\n}\n",
        "token_count": 356
    },
    "00447606": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00447606(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 95
    },
    "00447b18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00447b18(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    cVar1 = fcn.00447c22();\n    if (cVar1 == '\\0') {\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(arg_8h);\n        if ((iVar2 != 0) || (*0x4c34d8 == '\\x01')) {\n            fcn.0040d3d2();\n            fcn.0043e2e8(&var_10h);\n            fcn.00407b4b(&var_10h);\n            fcn.004039e8(0x49dc8c);\n            fcn.00405cd3();\n        }\n    }\n    return 1;\n}\n",
        "token_count": 184
    },
    "00447b84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00447b84(int32_t param_1)\n\n{\n    if (param_1 < 0) {\n        param_1 = -1 - param_1;\n    }\n    else if (param_1 == 1) {\n        param_1 = 0;\n    }\n    else {\n        param_1 = -param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 90
    },
    "00447c45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00447c45(uint lpCaption, uint uType, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_10h;\n    iVar3 = 0;\n    *0x4c34d9 = '\\0';\n    if (arg_10h != 0) {\n        *0x4c34da = 1;\n        var_4h = in_ECX;\n        var_ch = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        var_8h = iVar1;\n        iVar3 = fcn.00422e57(0, 0, fcn.00448097, &var_ch, 0, &arg_10h);\n        in_ECX = var_4h;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_MessageBoxW)(in_ECX);\n    if (iVar3 != 0) {\n        *0x4c34da = 0;\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(iVar3, 0xffffffff);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    }\n    if (*0x4c34d9 == '\\x01') {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 328
    },
    "00448c32": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t __cdecl fcn.00448c32(uint32_t arg_8h, uint lpsz, uint32_t cchLength)\n\n{\n    int16_t *piVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharLowerBuffW)(lpsz, cchLength);\n    fcn.004492b3();\n    var_4h = 0;\n    if (cchLength == 0) {\n        iVar6 = 1;\n    }\n    else {\n        *in_ECX = 0;\n        iVar6 = 0;\n        while( true ) {\n            var_ch = iVar6;\n            piVar1 = fcn.0040a4f6(iVar6);\n            if (*piVar1 == 0) break;\n            iVar7 = iVar6 + 1;\n            piVar1 = fcn.0040a4f6(iVar6);\n            iVar6 = iVar7;\n            if (*piVar1 == 0x3b) {\n                *in_ECX = *in_ECX + 1;\n            }\n        }\n        if (1 < cchLength) {\n            var_ch = iVar6 + -1;\n            piVar1 = fcn.0040a4f6(var_ch);\n            if (*piVar1 != 0x3b) {\n                *in_ECX = *in_ECX + 1;\n            }\n        }\n        uVar4 = *in_ECX;\n        uVar5 = -(uVar4 * 0x20 >> 0x20 != 0) | uVar4 * 0x20;\n        var_10h = -(0xfffffffb < uVar5) | uVar5 + 4;\n        var_14h = 0x448cd2;\n        puVar2 = fcn.0042010a(var_10h);\n        if (puVar2 == NULL) {\n            puVar8 = NULL;\n        }\n        else {\n            var_10h = 0x448b39;\n            puVar8 = puVar2 + 1;\n            *puVar2 = uVar4;\n            var_ch = uVar4;\n            fcn.0041ac65(uVar4, 0x448b39);\n        }\n        var_8h = 0xffffffff;\n        in_ECX[1] = puVar8;\n        var_10h = 0;\n        var_ch = 0;\n        var_14h = 8;\n        iVar6 = fcn.00448d85(0, &fcn.00448c32::lpsz, &fcn.00448c32::var_14h, &fcn.00448c32::var_10h, \n                             &fcn.00448c32::var_ch, 8, 0);\n        uVar4 = var_4h;\n        if (iVar6 == 0) {\n            in_ECX[3] = var_4h;\n            if (arg_8h == 0) {\n                puVar3 = fcn.0042010a(4);\n                if (puVar3 == NULL) {\n                    puVar3 = NULL;\n                }\n                else {\n                    *puVar3 = 1;\n                }\n                in_ECX[4] = puVar3;\n                uVar4 = fcn.0042010a(uVar4);\n                in_ECX[2] = uVar4;\n                fcn.00421970(uVar4, 0, in_ECX[3]);\n            }\n            else {\n                in_ECX[4] = 0;\n                in_ECX[2] = arg_8h;\n            }\n            iVar6 = 0;\n        }\n    }\n    fcn.00405cd3();\n    return iVar6;\n}\n",
        "token_count": 984
    },
    "0044a6f6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a6f6(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    \n    fcn.00412570();\n    if (arg_8h != 0) {\n        cVar1 = fcn.0044b428(arg_8h);\n        if (cVar1 != '\\x01') {\n            cVar1 = fcn.0044b05a(arg_8h);\n            if (cVar1 != '\\x01') {\n                in_ECX[3] = 8;\n                uVar2 = fcn.0042010a(0x10);\n                *in_ECX = uVar2;\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar2);\n                iVar3 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*in_ECX, arg_8h);\n                if (iVar3 < 0) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*in_ECX);\n                    fcn.0042017e(*in_ECX);\n                    *in_ECX = 0;\n                    fcn.00412570();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "0044a875": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a875(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    double *in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    float10 fVar4;\n    ulong uVar5;\n    \n    iVar1 = *(in_ECX + 0xc);\n    if (iVar1 == 1) {\n        if (arg_8h[3] == 1) {\n            iVar3 = *in_ECX * *arg_8h >> 0x20;\n            iVar1 = *in_ECX * *arg_8h;\n            iVar2 = *in_ECX * *arg_8h;\n            if ((iVar2 - iVar1 == 0) && (iVar2 >> 0x1f == iVar3)) {\n                *in_ECX = iVar2;\n            }\n            else {\n                *(in_ECX + 0xc) = 2;\n                *in_ECX = iVar1;\n                *(in_ECX + 4) = iVar3;\n            }\n        }\n        else if (arg_8h[3] == 2) {\n            uVar5 = fcn.00434ba0(*in_ECX, *in_ECX >> 0x1f, *arg_8h, arg_8h[1]);\n            *in_ECX = uVar5;\n            *(in_ECX + 4) = uVar5 >> 0x20;\n            *(in_ECX + 0xc) = 2;\n        }\n        else {\n            fcn.0041df8a();\n            fVar4 = fcn.00412620();\n            *in_ECX = fVar4 * *in_ECX;\n        }\n    }\n    else {\n        if (iVar1 == 2) {\n            if ((arg_8h[3] == 1) || (arg_8h[3] == 2)) {\n                uVar5 = fcn.0040d00b();\n                uVar5 = fcn.00434ba0(uVar5, *in_ECX, *(in_ECX + 4));\n                *in_ECX = uVar5;\n                *(in_ECX + 4) = uVar5 >> 0x20;\n                goto code_r0x0044a946;\n            }\n            fcn.0041df8a();\n        }\n        else if (iVar1 != 3) {\n            if (((iVar1 != 4) && (iVar1 != 9)) && (iVar1 != 0xb)) goto code_r0x0044a946;\n            fcn.0041df8a();\n        }\n        fVar4 = fcn.00412620();\n        *in_ECX = fVar4 * *in_ECX;\n    }\ncode_r0x0044a946:\n    fcn.0044b00a();\n    return;\n}\n",
        "token_count": 627
    },
    "0044bd6a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044bd6a(double *param_1)\n\n{\n    uint32_t uVar1;\n    double dVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (*(param_1 + 0xc) == 3) {\n        uVar1 = fcn.00423cea(SUB84(*param_1, 0), *param_1 >> 0x20);\n        if ((uVar1 & 0x1f8) == 0) {\n            return uVar1;\n        }\n        dVar2 = fcn.00471e16();\n        if (*param_1 != dVar2) {\n            return uVar1;\n        }\n    }\n    else if (*(param_1 + 0xc) == 1) {\n        dVar2 = *param_1;\n    }\n    else {\n        if (*(param_1 + 0xc) != 2) {\n            return 0;\n        }\n        dVar2 = *param_1;\n    }\n    if (dVar2 == 0.0) {\n        uVar1 = uVar1 | 0x40000;\n    }\n    else {\n        if ((dVar2 & 1) == 0) {\n            uVar1 = uVar1 | 0x200000;\n        }\n        else {\n            uVar1 = uVar1 | 0x100000;\n        }\n        if ((dVar2 < 0x100000000) && (dVar2 < 0)) {\n            uVar1 = uVar1 | 0x10000;\n        }\n        else {\n            uVar1 = uVar1 | 0x20000;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 390
    },
    "0044c4d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.0044c4d4(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 0x14) == 1) {\n        fcn.0041faa0(&var_8h, *(in_ECX + 0xc) + *(in_ECX + 4), 8);\n    }\n    else {\n        fcn.004244ae(&var_8h, 1, 8, *(in_ECX + 0x1c));\n    }\n    *(in_ECX + 0xc) = *(in_ECX + 0xc) + 8;\n    *arg_8h = CONCAT31(CONCAT21(CONCAT11(var_4h, var_4h._1_1_), var_4h._2_1_), var_4h._3_1_);\n    var_4h = var_4h & 0xffffff00;\n    iVar1 = fcn.00424560(&var_8h, \"EA06\");\n    return iVar1 != 0;\n}\n",
        "token_count": 279
    },
    "0044c553": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c553(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_1[0x111];\n    if (param_1[6] == 1) {\n        if (uVar1 < param_1[0x10f]) {\n            do {\n                *(*param_1 + param_1[2]) = *((param_1[0x111] & 0x1ffffU) + param_1[0x10e]);\n                param_1[2] = param_1[2] + 1;\n                param_1[0x111] = param_1[0x111] + 1;\n            } while (param_1[0x111] < param_1[0x10f]);\n        }\n    }\n    else {\n        while (uVar1 < param_1[0x10f]) {\n            fcn.0044c629(*((param_1[0x111] & 0x1ffffU) + param_1[0x10e]));\n            param_1[0x111] = param_1[0x111] + 1;\n            uVar1 = param_1[0x111];\n            param_1[2] = param_1[2] + 1;\n        }\n    }\n    param_1[0x110] = 0;\n    return;\n}\n",
        "token_count": 312
    },
    "0044c890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_5h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044c890(uint arg_8h, uint *lpNewFileName)\n\n{\n    uint8_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t arg_10h;\n    uint *extraout_ECX;\n    uint *puVar3;\n    uint unaff_ESI;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t unaff_EDI;\n    uint var_11cch;\n    uint var_fc4h;\n    uint var_dbch;\n    uint var_bach;\n    uint var_9a4h;\n    uint var_794h;\n    uint lpExistingFileName;\n    uint var_4ach;\n    uint var_4a8h;\n    uint var_4a4h;\n    uint var_4a0h;\n    uint var_49ch;\n    uint var_498h;\n    uint var_494h;\n    uint var_490h;\n    uint var_48ch;\n    uint var_488h;\n    uint var_27eh;\n    uint uStackY200;\n    uint in_stack_ffffff4c;\n    uint var_58h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_ch;\n    uchar auStack12 [3];\n    uint var_5h;\n    \n    stack0xfffffff8 = 0x44c89d;\n    fcn.00430650();\n    var_4ach = 0;\n    var_4a8h = 0;\n    var_4a4h = 0;\n    var_4a0h = 0;\n    var_49ch = 0;\n    var_498h = 0;\n    var_494h = 0;\n    var_490h = 0;\n    var_48ch = 0;\n    var_488h._0_2_ = 0;\n    var_27eh._0_2_ = 0;\n    var_14h = 0x44c8fa;\n    var_ch = unaff_EDI;\n    _auStack12 = unaff_ESI;\n    arg_8h_00 = fcn.0042010a(0x10000);\n    var_14h = 0x44c904;\n    fcn.00404bce(arg_8h_00);\n    var_14h = 0x44c90f;\n    fcn.0044c6a0();\n    var_14h = 0;\n    var_18h = extraout_ECX[1];\n    var_1ch = 0x1;\n    var_20h = 0x44c922;\n    fcn.004041a7(1, var_18h, 0);\n    var_20h = 0x4b3980;\n    var_24h = arg_8h;\n    var_28h = 0x44c92f;\n    iVar2 = fcn.00422203(arg_8h, 0x4b3980);\n    var_24h = &fcn.0044c890::var_dbch;\n    var_28h = arg_8h;\n    if (iVar2 == 0) {\n        var_2ch = 0x44c94b;\n        iVar2 = fcn.0044ce59(arg_8h, var_24h);\n        if (iVar2 == 0) {\n            var_2ch = &fcn.0044c890::var_bach;\n            var_30h = &fcn.0044c890::var_11cch;\n            var_34h = &fcn.0044c890::var_fc4h;\n            var_38h = &fcn.0044c890::var_28h;\n            var_3ch = lpNewFileName;\n            var_40h = 0x44c974;\n            fcn.0042297d(lpNewFileName, var_38h, var_34h, var_30h, var_2ch);\n            var_2ch = &fcn.0044c890::var_28h;\n            var_30h = &fcn.0044c890::var_9a4h;\n            var_34h = 0x44c987;\n            fcn.00421943(var_30h, var_2ch);\n            var_34h = &fcn.0044c890::var_fc4h;\n            var_38h = &fcn.0044c890::var_9a4h;\n            var_3ch = 0x44c99a;\n            fcn.00421914(var_38h, var_34h);\n            var_3ch = &fcn.0044c890::var_bach;\n            var_40h = &fcn.0044c890::var_11cch;\n            var_44h = &fcn.0044c890::var_fc4h;\n            fcn.0042297d(&fcn.0044c890::var_dbch, &fcn.0044c890::var_28h, var_44h, var_40h, var_3ch);\n            var_2ch = &fcn.0044c890::var_11cch;\n            var_30h = &fcn.0044c890::var_9a4h;\n            var_34h = 0x44c9d5;\n            fcn.00421914(var_30h, var_2ch);\n            var_34h = &fcn.0044c890::var_bach;\n            var_38h = &fcn.0044c890::var_9a4h;\n            var_3ch = 0x44c9e8;\n            fcn.00421914(var_38h, var_34h);\n            lpNewFileName = &fcn.0044c890::var_9a4h;\ncode_r0x0044ca06:\n            var_2ch = *extraout_ECX;\n            var_30h = 0x1;\n            var_34h = 0x1;\n            var_38h = &fcn.0044c890::var_5h;\n            var_3ch = 0x44ca18;\n            fcn.0040417d(var_38h, 1, 1, var_2ch);\n            var_3ch = *extraout_ECX;\n            var_40h = 0x1;\n            var_44h = 0x4;\n            fcn.0040417d(&fcn.0044c890::var_ch, 4, 1, var_3ch);\n            var_20h = var_ch ^ 0x87bc;\n            fcn.0040417d(&fcn.0044c890::var_ch, 4, 1, *extraout_ECX);\n            fcn.0040417d(&fcn.0044c890::var_ch, 4, 1, *extraout_ECX);\n            var_24h = var_ch ^ 0xa685;\n            fcn.0040417d(&fcn.0044c890::var_38h, 4, 1, *extraout_ECX);\n            fcn.0040417d(&fcn.0044c890::var_3ch, 4, 1, *extraout_ECX);\n            fcn.0040417d(&fcn.0044c890::var_40h, 4, 1, *extraout_ECX);\n            fcn.0040417d(&fcn.0044c890::var_44h, 4, 1, *extraout_ECX);\n            fcn.0044d009(&fcn.0044c890::lpExistingFileName);\n            var_18h = fcn.00424129(&fcn.0044c890::lpExistingFileName, 0x4b3984);\n            if (var_18h == 0) {\n                in_stack_ffffff4c = 9;\n            }\n            else {\n                fcn.0044c6e4(extraout_ECX[2] + 0x2477);\n                iVar2 = 0;\n                puVar3 = extraout_ECX;\n                puVar5 = 0x1;\n                if (0 < var_20h) {\n                    do {\n                        if (var_20h < iVar2 + 0x10000) {\n                            arg_10h = var_20h - iVar2;\n                        }\n                        else {\n                            arg_10h = 0x10000;\n                        }\n                        var_34h = iVar2 + arg_10h;\n                        uStackY200 = 0x44cb17;\n                        fcn.0040417d(var_14h, 1, arg_10h, *puVar3);\n                        iVar2 = var_14h;\n                        var_30h = NULL;\n                        if (0 < arg_10h) {\n                            iVar4 = 0;\n                            do {\n                                uVar1 = fcn.0044c81a();\n                                *(iVar2 + iVar4) = *(iVar2 + iVar4) ^ uVar1;\n                                iVar4 = iVar4 + 1;\n                                puVar3 = var_2ch;\n                            } while (iVar4 < arg_10h);\n                        }\n                        fcn.0044c07d(var_14h, arg_10h);\n                        uStackY200 = 0x44cb64;\n                        fcn.0042373e(var_14h, 1, arg_10h, var_18h);\n                        iVar2 = var_34h;\n                        puVar5 = var_1ch;\n                    } while (var_34h < var_20h);\n                }\n                in_stack_ffffff4c = 0;\n                fcn.00424274(var_18h);\n                if (var_24h == puVar5) {\n                    if (var_5h == '\\x01') {\n                        var_488h._0_2_ = 0;\n                        var_27eh._0_2_ = 0;\n                        var_4ach = 0;\n                        var_4a8h = 0;\n                        var_4a4h = 0;\n                        var_4a0h = 0;\n                        var_49ch = 0;\n                        var_490h = 0;\n                        var_48ch = 0;\n                        var_498h = 0;\n                        var_494h = 0;\n                        fcn.0044d10c(&fcn.0044c890::lpExistingFileName);\n                        fcn.0044d134(lpNewFileName);\n                        iVar2 = fcn.0044c251();\n                        if (iVar2 != 0) {\n                            (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                            in_stack_ffffff4c = 0xb;\n                            goto code_r0x0044cc71;\n                        }\n                    }\n                    else {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_CopyFileW)();\n                        if (iVar2 == 0) {\n                            (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                            in_stack_ffffff4c = 7;\n                            goto code_r0x0044cc71;\n                        }\n                    }\n                    (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                    fcn.0044cfc8(lpNewFileName, &fcn.0044c890::var_3ch, &fcn.0044c890::var_44h);\n                }\n                else {\n                    (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                    in_stack_ffffff4c = 10;\n                }\n            }\n            goto code_r0x0044cc71;\n        }\n    }\n    else {\n        var_2ch = 0x44c9f8;\n        iVar2 = fcn.0044ce59(arg_8h, var_24h);\n        if (iVar2 == 0) goto code_r0x0044ca06;\n    }\n    var_2ch = 0x6;\ncode_r0x0044cc71:\n    fcn.00404fd2();\n    return in_stack_ffffff4c;\n}\n",
        "token_count": 3009
    },
    "0044cc82": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044cc82(uint arg_8h, uint *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint *in_ECX;\n    uint32_t arg_8h_01;\n    uint in_stack_fffff8d4;\n    uint var_68ch;\n    uint var_47ch;\n    uint var_478h;\n    uint var_474h;\n    uint var_470h;\n    uint var_46ch;\n    uint var_468h;\n    uint var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_458h;\n    uint var_24eh;\n    uint var_28h;\n    uint32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    var_47ch = 0;\n    var_478h = 0;\n    var_474h = 0;\n    var_470h = 0;\n    var_46ch = 0;\n    var_468h = 0;\n    var_464h = 0;\n    var_460h = 0;\n    var_45ch = 0;\n    var_28h = 0;\n    var_458h._0_2_ = 0;\n    var_24eh._0_2_ = 0;\n    var_14h = 1;\n    var_10h = in_ECX;\n    fcn.004041a7(*in_ECX, in_ECX[1], 0);\n    iVar1 = fcn.0044ce59(arg_8h, &var_68ch);\n    if (iVar1 == 0) {\n        fcn.0040417d(&var_5h, 1, 1, *in_ECX);\n        fcn.0040417d(&var_ch, 4, 1, *in_ECX);\n        arg_8h_01 = var_ch ^ 0x87bc;\n        fcn.0040417d(&var_ch, 4, 1, *in_ECX);\n        uVar2 = *in_ECX;\n        *arg_10h = var_ch ^ 0x87bc;\n        fcn.0040417d(&var_ch, 4, 1, uVar2);\n        fcn.004041a7(*var_10h, 0x10, 1);\n        arg_8h_00 = fcn.004245ec(*arg_10h);\n        uVar2 = fcn.004245ec(arg_8h_01);\n        fcn.0040417d(uVar2, arg_8h_01, 1, *var_10h);\n        fcn.0044c846(uVar2, arg_8h_01, var_10h[2] + 0x2477);\n        fcn.0044c07d(uVar2, arg_8h_01);\n        if ((var_ch ^ 0xa685) == var_14h) {\n            if (var_5h == '\\x01') {\n                var_458h._0_2_ = 0;\n                var_24eh._0_2_ = 0;\n                var_474h = 0;\n                var_470h = 0;\n                var_46ch = 0;\n                var_460h = 0;\n                var_45ch = 0;\n                var_28h = 0;\n                var_468h = 1;\n                var_464h = 1;\n                var_47ch = arg_8h_00;\n                var_478h = uVar2;\n                fcn.0044c251();\n                fcn.004228ca(uVar2);\n                uVar2 = arg_8h_00;\n            }\n            else {\n                fcn.004228ca(arg_8h_00);\n            }\n            *arg_ch = uVar2;\n            in_stack_fffff8d4 = 0;\n        }\n        else {\n            fcn.004228ca(arg_8h_00);\n            fcn.004228ca(uVar2);\n            in_stack_fffff8d4 = 10;\n        }\n    }\n    return in_stack_fffff8d4;\n}\n",
        "token_count": 972
    },
    "0044ce59": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044ce59(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_14h;\n    int32_t iVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_228h;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    iVar2 = 0;\n    var_1h._0_1_ = '\\x01';\n    do {\n        fcn.0040417d(&var_10h, 1, 4, *in_ECX);\n        fcn.0044c846(&var_10h, 4, 0x18ee);\n        var_ch._0_1_ = 0;\n        iVar1 = fcn.00424560(&var_10h, \"FILE\");\n        if (iVar1 == 0) {\n            var_14h = iVar2 + 1;\n            fcn.0040417d(&var_8h, 4, 1, *in_ECX);\n            uVar3 = var_8h ^ 0xadbc;\n            iVar2 = uVar3 * 2;\n            fcn.0040417d(&var_228h, 1, iVar2, *in_ECX);\n            fcn.0044c846(&var_228h, iVar2, uVar3 + 0xb33f);\n            arg_14h = *in_ECX;\n            *(&var_228h + iVar2) = 0;\n            fcn.0040417d(&var_8h, 4, 1, arg_14h);\n            uVar3 = var_8h ^ 0xf820;\n            iVar2 = uVar3 * 2;\n            fcn.0040417d(arg_ch, 1, iVar2, *in_ECX);\n            fcn.0044c846(arg_ch, iVar2, uVar3 + 0xf479);\n            *(iVar2 + arg_ch) = 0;\n            iVar2 = fcn.00422203(&var_228h, arg_8h);\n            if ((iVar2 == 0) ||\n               ((iVar1 = fcn.00422203(arg_8h, 0x4b3980),  iVar2 = var_14h,  iVar1 == 0 && (var_14h == 0)))) {\n                return 0;\n            }\n            fcn.004041a7(*in_ECX, 1, 1);\n            fcn.0040417d(&var_18h, 4, 1, *in_ECX);\n            var_18h = var_18h ^ 0x87bc;\n            fcn.004041a7(*in_ECX, var_18h + 0x18, 1);\n        }\n        else {\n            var_1h._0_1_ = '\\0';\n        }\n        if (var_1h != '\\x01') {\n            return 6;\n        }\n    } while( true );\n}\n",
        "token_count": 726
    },
    "0044dd25": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044dd25(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t unaff_EBX;\n    uint uVar6;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar7;\n    uint32_t uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack32;\n    int32_t iStack28;\n    \n    uVar7 = uStack84;\n    uStack72 = *(arg_8h + 8);\n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    fcn.0040caee(**(iVar1 + 8));\n    uVar6 = 0;\n    uStack84 = uStack84 & 0xffffff00;\n    uStack80 = CONCAT31(uStack80._1_3_, 1);\n    uStack68 = 0;\n    uStack64 = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack52 = 0;\n    uStack48 = 0;\n    uVar4 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    if (iStack28 != 0) {\n        cVar2 = fcn.00447c0c();\n        if (cVar2 != '\\0') {\n            fcn.004471f1();\n            if (1 < uStack80) {\n                uVar5 = fcn.0040cdb4();\n                if ((uVar5 & 1) != 0) {\n                    unaff_EBX = CONCAT31(unaff_EBX >> 8, 1);\n                }\n                uVar3 = fcn.0040cdb4();\n                uStack84 = uVar7 & 0xffffff00 | ~-((uVar3 & 2) != 0) & 0xffffff01;\n            }\n            uVar7 = unaff_EBX;\n            cVar2 = fcn.004524a9(uStack32, &uStack72, &uStack64, &uStack56, unaff_EBX, uStack84);\n            if (cVar2 == '\\0') {\n                uVar6 = 0xffffffff;\n            }\n            else if (unaff_EBX == '\\0') {\n                fcn.00412570();\n                *arg_ch = unaff_EDI;\n                arg_ch[3] = 2;\n                arg_ch[1] = unaff_ESI;\n            }\n            else {\n                fcn.00403320(arg_ch, 1);\n                uStack64 = 0;\n                uStack60 = 2;\n                fcn.00412320(arg_ch, &uStack72, 1);\n                fcn.00412570();\n                uStack68 = uStack84;\n                uStack64 = 0;\n                uStack60 = 2;\n                uStack72 = uVar7;\n                fcn.00412320(arg_ch, &uStack72, 1);\n                fcn.00412570();\n                uStack72 = uStack80;\n                uStack68 = uStack76;\n                uStack60 = 2;\n                uStack64 = 0;\n                fcn.00412320(arg_ch, &uStack72, 1);\n                fcn.00412570();\n            }\n            goto code_r0x0044df14;\n        }\n    }\n    fcn.00412570();\n    *arg_ch = 0xffffffff;\n    arg_ch[3] = 1;\n    fcn.0044d7e4(1, 0);\ncode_r0x0044df14:\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar4);\n    fcn.00405cd3();\n    return uVar6;\n}\n",
        "token_count": 917
    },
    "0044dffe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044dffe(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t arg_8h_00;\n    int32_t iVar5;\n    uchar *arg_8h_01;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint arg_ch_00;\n    int32_t iStack284;\n    uchar *puStack280;\n    int32_t *apiStack276 [2];\n    uint uStack268;\n    uint uStack264;\n    uchar auStack236 [232];\n    \n    arg_ch_00 = 0x49dbf0;\n    piVar6 = NULL;\n    fcn.0040ca8e(0x49dbf0);\n    iVar5 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar5 + 8);\n    uVar4 = *puVar1;\n    iStack284 = puVar1[1];\n    puStack280 = puVar1[2];\n    apiStack276[0] = puVar1[3];\n    *apiStack276[0] = *apiStack276[0] + 1;\n    fcn.0040b8a7();\n    iVar5 = iStack284;\n    (*_sym.imp.USER32.dll_CharLowerBuffW)(uVar4, iStack284);\n    cVar2 = fcn.0041f885();\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.0041f885();\n        if (cVar2 != '\\0') {\n            iVar7 = 5;\n            goto code_r0x0044e105;\n        }\n        cVar2 = fcn.0041f885();\n        if (cVar2 != '\\0') {\n            iVar7 = 2;\n            goto code_r0x0044e105;\n        }\n        cVar2 = fcn.0041f885();\n        if (cVar2 != '\\0') {\n            iVar7 = 3;\n            goto code_r0x0044e105;\n        }\n        cVar2 = fcn.0041f885();\n        if (cVar2 != '\\0') {\n            iVar7 = 4;\n            goto code_r0x0044e105;\n        }\n        cVar2 = fcn.0041f885();\n        if (cVar2 != '\\0') {\n            iVar7 = 6;\n            goto code_r0x0044e105;\n        }\n        cVar2 = fcn.0041f885();\n        if (cVar2 != '\\0') {\n            iVar7 = 0;\n            goto code_r0x0044e105;\n        }\n    }\n    else {\n        iVar7 = 99;\ncode_r0x0044e105:\n        puStack280 = auStack236;\n        arg_8h_00 = 0x61;\n        do {\n            fcn.00448b50(arg_8h_00);\n            fcn.004039e8(0x4b3ae4);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(iVar5);\n            if ((iVar3 == iVar7) || ((iVar7 == 99 && (iVar3 != 1)))) {\n                fcn.0041e617(0x49dc88);\n                fcn.00421943(iStack284, arg_ch_00);\n                piVar6 = piVar6 + 1;\n                iStack284 = iStack284 + 8;\n            }\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < 0x7b);\n        if (0 < piVar6) {\n            iVar5 = 1;\n            fcn.00403320(arg_ch, 1);\n            uStack268 = 0;\n            uStack264 = 1;\n            apiStack276[0] = piVar6;\n            fcn.00412320(arg_ch, apiStack276, 1);\n            fcn.00412570();\n            if (0 < piVar6) {\n                arg_8h_01 = auStack236;\n                do {\n                    uVar4 = fcn.0040caee(arg_8h_01);\n                    fcn.00408182(uVar4);\n                    fcn.00412320(arg_ch, &iStack284, 1);\n                    fcn.00412570();\n                    fcn.00405cd3();\n                    iVar5 = iVar5 + 1;\n                    arg_8h_01 = arg_8h_01 + 8;\n                } while (iVar5 <= piVar6);\n            }\n            goto code_r0x0044e214;\n        }\n    }\n    fcn.0044d7e4(1, 0);\ncode_r0x0044e214:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1099
    },
    "0044e44c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044e5eb)\n// WARNING: Removing unreachable block (ram,0x0044e600)\n// WARNING: Removing unreachable block (ram,0x0044e60d)\n// WARNING: Removing unreachable block (ram,0x0044e67d)\n// WARNING: Removing unreachable block (ram,0x0044e676)\n// WARNING: Removing unreachable block (ram,0x0044e66f)\n// WARNING: Removing unreachable block (ram,0x0044e668)\n// WARNING: Removing unreachable block (ram,0x0044e661)\n// WARNING: Removing unreachable block (ram,0x0044e65a)\n// WARNING: Removing unreachable block (ram,0x0044e653)\n// WARNING: Removing unreachable block (ram,0x0044e64c)\n// WARNING: Removing unreachable block (ram,0x0044e645)\n// WARNING: Removing unreachable block (ram,0x0044e63e)\n// WARNING: Removing unreachable block (ram,0x0044e637)\n// WARNING: Removing unreachable block (ram,0x0044e630)\n// WARNING: Removing unreachable block (ram,0x0044e629)\n// WARNING: Removing unreachable block (ram,0x0044e622)\n// WARNING: Removing unreachable block (ram,0x0044e61b)\n// WARNING: Removing unreachable block (ram,0x0044e614)\n// WARNING: Removing unreachable block (ram,0x0044e5a7)\n// WARNING: Removing unreachable block (ram,0x0044e5e2)\n// WARNING: Removing unreachable block (ram,0x0044e5ac)\n// WARNING: Removing unreachable block (ram,0x0044e5bc)\n// WARNING: Removing unreachable block (ram,0x0044e5d0)\n// WARNING: Removing unreachable block (ram,0x0044e5d8)\n// WARNING: Recovered jumptable eliminated as dead code\n\nuint __cdecl fcn.0044e44c(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint in_ECX;\n    char16_t *arg_8h_00;\n    uchar auStack36 [4];\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t *piStack20;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    fcn.0040ca8e(0x49dbf0);\n    if (1 < *(arg_8h + 8)) {\n        fcn.0040cdb4();\n    }\n    iVar4 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar4 + 8);\n    uStack32 = *puVar1;\n    uStack28 = puVar1[1];\n    uStack24 = puVar1[2];\n    piStack20 = puVar1[3];\n    *piStack20 = *piStack20 + 1;\n    fcn.0040caee(0x4b3b90);\n    cVar2 = fcn.0040d18c();\n    if (cVar2 == '\\0') {\n        fcn.004471f1();\n        fcn.00407b4b(auStack36);\n        fcn.0041e617(0x49dc88);\n    }\n    else {\n        fcn.004039e8(L\"PhysicalDrive\");\n        iVar4 = **(arg_8h + 4);\n        fcn.004084a6();\n        fcn.00407b4b(*(iVar4 + 8));\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(in_ECX);\n    if (iVar4 == 1) {\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        if (iVar4 == 2) {\n            arg_8h_00 = L\"Removable\";\n        }\n        else if (iVar4 == 3) {\n            arg_8h_00 = L\"Fixed\";\n        }\n        else if (iVar4 == 4) {\n            arg_8h_00 = L\"Network\";\n        }\n        else if (iVar4 == 5) {\n            arg_8h_00 = L\"CDROM\";\n        }\n        else if (iVar4 == 6) {\n            arg_8h_00 = L\"RAMDisk\";\n        }\n        else {\n            arg_8h_00 = L\"Unknown\";\n        }\n        fcn.0040ca8e(arg_8h_00);\n    }\n    fcn.00405cd3();\n    fcn.00405cd3();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar3);\n    return 0;\n}\n",
        "token_count": 1082
    },
    "0044f841": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f841(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_20ch;\n    \n    if (1 < *(arg_8h + 8)) {\n        iVar2 = fcn.0040cdb4();\n        if (iVar2 == 1) {\n            fcn.004084a6();\n            fcn.004031b8();\n            goto code_r0x0044f89d;\n        }\n    }\n    fcn.004084a6();\ncode_r0x0044f89d:\n    cVar1 = fcn.00403a67();\n    if (cVar1 == '\\x01') {\n        fcn.0040ca8e(&var_20ch);\n    }\n    else {\n        iVar2 = **(arg_8h + 4);\n        fcn.004084a6();\n        fcn.0040ca8e(**(iVar2 + 8));\n        fcn.0044d7e4(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 244
    },
    "0044f967": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f967(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint in_stack_fffffdcc;\n    uint var_20ch;\n    \n    if ((*(arg_8h + 8) < 2) || (iVar1 = fcn.0040cdb4(),  iVar1 != 1)) {\n        iVar1 = **(arg_8h + 4);\n        fcn.004084a6();\n        puVar2 = **(iVar1 + 8);\n    }\n    else {\n        fcn.004084a6();\n        fcn.004031b8();\n        puVar2 = &var_20ch;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetShortPathNameW)(puVar2, &var_20ch, 0x104);\n    if (iVar1 == 0) {\n        fcn.0044d7e4(1, 0);\n        iVar1 = **(arg_8h + 4);\n        fcn.004084a6();\n        in_stack_fffffdcc = **(iVar1 + 8);\n    }\n    fcn.0040ca8e(in_stack_fffffdcc);\n    return 0;\n}\n",
        "token_count": 286
    },
    "0044fdd2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044fdd2(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t unaff_EBX;\n    uint unaff_EDI;\n    int32_t iVar4;\n    uchar *puStack756;\n    uchar *puStack752;\n    uchar *puVar5;\n    uchar *puVar6;\n    uint16_t uVar7;\n    uchar auStack712 [12];\n    uchar auStack700 [8];\n    uchar auStack692 [8];\n    uchar auStack684 [4];\n    uchar auStack680 [4];\n    uchar auStack676 [4];\n    uchar auStack672 [4];\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uint uStack656;\n    uint uStack652;\n    uint uStack648;\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    \n    uVar7 = unaff_EDI >> 0x10;\n    iVar2 = **(arg_8h + 4);\n    iVar4 = 0;\n    fcn.004084a6();\n    uVar1 = **(iVar2 + 8);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n    if (iVar2 == -1) {\n        fcn.0040ca8e(0x49dbf0);\n        puStack752 = 0x450134;\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        uStack660 = uStack604;\n        uStack656 = uStack600;\n        uStack652 = uStack596;\n        uStack648 = uStack592;\n        uStack668 = uStack588;\n        uStack664 = uStack584;\n        (*_sym.imp.KERNEL32.dll_FindClose)();\n        if (1 < *(arg_8h + 8)) {\n            iVar4 = fcn.0040cdb4();\n        }\n        if (iVar4 == 1) {\n            puVar5 = &stack0xfffffd68;\n            puStack752 = 0x44feb0;\n            puVar6 = puVar5;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            puStack756 = &stack0xfffffd60;\n        }\n        else if (iVar4 == 2) {\n            puVar5 = &stack0xfffffd70;\n            puStack752 = 0x44fe99;\n            puVar6 = puVar5;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            puStack756 = &stack0xfffffd68;\n        }\n        else {\n            puVar5 = &stack0xfffffd60;\n            puStack752 = 0x44fe82;\n            puVar6 = puVar5;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            puStack756 = &stack0xfffffd58;\n        }\n        puStack752 = &stack0xfffffd38;\n        (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)();\n        if ((*(arg_8h + 8) < 3) || (iVar2 = fcn.0040cdb4(),  iVar2 != 1)) {\n            fcn.00403320(arg_ch, 1);\n            fcn.0042234b(&stack0xfffffd6c, 0x4b3a4c, unaff_EBX & 0xffff);\n            uVar3 = fcn.0040caee(&stack0xfffffd6c);\n            fcn.00408182(uVar3);\n            fcn.00412320(arg_ch, &stack0xfffffd14, 1);\n            fcn.00412570();\n            fcn.00405cd3();\n            fcn.0042234b(&stack0xfffffd64, L\"%02d\", uVar7);\n            uVar3 = fcn.0040caee(&stack0xfffffd64);\n            fcn.00408182(uVar3);\n            fcn.00412320(arg_ch, &stack0xfffffd0c, 1);\n            fcn.00412570();\n            fcn.00405cd3();\n            fcn.0042234b(&stack0xfffffd5c, L\"%02d\", &stack0xfffffda8 >> 0x10);\n            uVar3 = fcn.0040caee(&stack0xfffffd5c);\n            fcn.00408182(uVar3);\n            fcn.00412320(arg_ch, &stack0xfffffd04, 1);\n            fcn.00412570();\n            fcn.00405cd3();\n            fcn.0042234b(&stack0xfffffd54, L\"%02d\", uVar1 & 0xffff);\n            uVar3 = fcn.0040caee(&stack0xfffffd54);\n            fcn.00408182(uVar3);\n            fcn.00412320(arg_ch, &stack0xfffffcfc, 1);\n            fcn.00412570();\n            fcn.00405cd3();\n            fcn.0042234b(&stack0xfffffd4c, L\"%02d\", puVar6 >> 0x10);\n            uVar3 = fcn.0040caee(&stack0xfffffd4c);\n            fcn.00408182(uVar3);\n            fcn.00412320(arg_ch, &stack0xfffffcf4, 1);\n            fcn.00412570();\n            fcn.00405cd3();\n            fcn.0042234b(&stack0xfffffd44, L\"%02d\", puVar5 & 0xffff);\n            uVar3 = fcn.0040caee(&stack0xfffffd44);\n            fcn.00408182(uVar3);\n            fcn.00412320(arg_ch, &stack0xfffffcec, 1);\n            fcn.00412570();\n            fcn.00405cd3();\n        }\n        else {\n            fcn.0042234b(&stack0xfffffd6c, L\"%4d%02d%02d%02d%02d%02d\", unaff_EBX & 0xffff);\n            fcn.0040ca8e(&stack0xfffffd6c);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1413
    },
    "0045013f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045013f(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    char16_t *arg_8h_01;\n    uint var_408h;\n    uint var_4h;\n    \n    if (*(arg_8h + 8) == 1) {\n        arg_8h_00 = 0x49dc88;\n    }\n    else {\n        iVar2 = *(*(arg_8h + 4) + 4);\n        fcn.004084a6();\n        arg_8h_00 = **(iVar2 + 8);\n    }\n    fcn.004084a6();\n    cVar1 = fcn.004476db(arg_8h_00);\n    if (cVar1 == '\\x01') {\n        fcn.0040ca8e(&var_408h);\n    }\n    else {\n        iVar2 = fcn.00422203(arg_8h_00, 0x49dc88);\n        if (iVar2 == 0) {\n            arg_8h_01 = L\"0.0.0.0\";\n        }\n        else {\n            arg_8h_01 = 0x49dbf0;\n        }\n        fcn.0040ca8e(arg_8h_01);\n        fcn.0044d7e4(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 328
    },
    "00450e41": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00450e41(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int16_t *piVar2;\n    uint *puVar3;\n    code *pcVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    uint *arg_8h_00;\n    uint uStack2676;\n    uint32_t uStack2672;\n    uint uStack2668;\n    uint uStack2664;\n    int32_t *piStack2660;\n    uchar auStack2652 [12];\n    uchar auStack2640 [508];\n    uchar auStack2132 [12];\n    uchar auStack2120 [520];\n    uchar auStack1600 [8];\n    uchar auStack1592 [528];\n    uchar auStack1064 [520];\n    uchar auStack544 [540];\n    \n    uVar1 = *(arg_8h + 8);\n    iVar6 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    piVar2 = **(iVar6 + 8);\n    uStack2676 = 0;\n    if (((2 < uVar1) && (iVar6 = fcn.0040cdb4(),  -1 < iVar6)) && (iVar6 = fcn.0040cdb4(),  iVar6 < 3)) {\n        uStack2676 = fcn.0040cdb4();\n    }\n    if ((uVar1 < 4) || (iVar6 = fcn.0040cdb4(),  iVar6 != 1)) {\n        uVar7 = 0;\n    }\n    else {\n        uVar7 = 1;\n    }\n    uStack2672 = uStack2672 & 0xffffff00 | uVar7;\n    if (*piVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)();\n    }\n    else {\n        cVar5 = fcn.004486ae(1, 0);\n        if (cVar5 == '\\0') {\n            fcn.00412570();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            return 0;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)();\n    arg_8h_00 = &uStack2676;\n    (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)();\n    iVar6 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar3 = *(iVar6 + 8);\n    uStack2672 = *puVar3;\n    uStack2668 = puVar3[1];\n    uStack2664 = puVar3[2];\n    piStack2660 = puVar3[3];\n    *piStack2660 = *piStack2660 + 1;\n    fcn.004478ad();\n    fcn.0042297d(uStack2672, auStack1592, auStack544, auStack2640, auStack1064);\n    fcn.00421914(auStack1592, auStack544);\n    fcn.00421914(auStack2640, auStack1064);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, auStack2120);\n    pcVar4 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n    iVar6 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(auStack1600);\n    if (iVar6 == 0) {\ncode_r0x00451000:\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        cVar5 = fcn.00447c0c();\n        if (cVar5 == '\\0') {\ncode_r0x00451032:\n            cVar5 = fcn.0045219f(auStack2652, &stack0xfffff578, arg_8h_00, &uStack2676);\n            if (cVar5 == '\\0') {\n                fcn.00412570();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n            }\n        }\n        else {\n            cVar5 = fcn.00447606(arg_8h_00);\n            if (cVar5 == '\\0') {\n                (*pcVar4)(auStack2132);\n                goto code_r0x00451000;\n            }\n            if (uVar7 != 0) {\n                (*pcVar4)(auStack2652);\n                fcn.00421943(auStack2652, 0x4b3a60);\n                goto code_r0x00451032;\n            }\n        }\n        (*pcVar4)(auStack2132);\n    }\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1074
    },
    "00452acc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452acc(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint item;\n    uchar auStack12 [8];\n    \n    uVar1 = *(arg_8h + 8);\n    item = 0xffffffff;\n    if (uVar1 != 0) {\n        item = fcn.0040cdb4();\n    }\n    if ((uVar1 < 2) || (iVar2 = fcn.0040cdb4(),  iVar2 != 1)) {\n        iVar2 = 0;\n    }\n    iVar2 = fcn.0046a8dc(item, auStack12, iVar2);\n    if ((unaff_EDI < 1) && (iVar2 != 0)) {\n        fcn.0040ca8e(iVar2);\n        fcn.0042017e(iVar2);\n    }\n    else {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = unaff_EDI;\n    }\n    return 0;\n}\n",
        "token_count": 255
    },
    "00453133": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453133(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_20h;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044be63();\n    }\n    arg_20h = fcn.0040cdb4();\n    uVar1 = fcn.0041a599(0, 0xffffffff, 0, 0xffffffff, uVar1, 0xffffffff, arg_20h);\n    fcn.00412570();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 162
    },
    "00453188": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453188(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_1ch;\n    uint uVar1;\n    uint arg_20h;\n    \n    uVar1 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044be63();\n    }\n    arg_20h = 0xffffffff;\n    arg_1ch = fcn.0040cdb4();\n    uVar1 = fcn.0041a599(0, 0xffffffff, 0, 0xffffffff, uVar1, arg_1ch, arg_20h);\n    fcn.00412570();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 180
    },
    "00453562": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453562(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    \n    uVar1 = 0xffffffff;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040cdb4();\n    }\n    arg_8h_00 = fcn.0040cdb4();\n    uVar1 = fcn.0046c467(arg_8h_00, uVar1);\n    fcn.00412570();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 151
    },
    "0045389c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045389c(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040d3d2();\n    if ((*0x4c181c == '\\x01') || (cVar2 = fcn.0046d93b(&var_24h),  cVar2 == '\\0')) {\n        var_24h = 0;\n        fcn.00407e53(0x49dbf0);\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        var_4h = 0;\n    }\n    uVar1 = var_4h;\n    if (*0x4c181c == '\\x01') {\n        fcn.0044d7e4(1, 0);\n    }\n    if ((*(arg_8h + 8) == 0) || (iVar3 = fcn.0040cdb4(),  iVar3 != 1)) {\n        fcn.00412570();\n        *arg_ch = var_24h;\n    }\n    else {\n        fcn.00403320(arg_ch, 1);\n        puVar4 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar4[3] = 1;\n        *puVar4 = var_24h;\n        puVar4 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar4[3] = 7;\n        *puVar4 = var_10h;\n        puVar4 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar4[3] = 7;\n        *puVar4 = var_ch;\n        puVar4 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar4[3] = 1;\n        *puVar4 = var_8h;\n        arg_ch = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        *arg_ch = uVar1;\n    }\n    arg_ch[3] = 1;\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 589
    },
    "00453df2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453df2(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_10h;\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = 0;\n    uVar1 = *(arg_8h + 8);\n    arg_8h = 2;\n    if (uVar1 != 0) {\n        arg_8h = fcn.0040cdb4();\n    }\n    if (1 < uVar1) {\n        arg_ch = fcn.0040cdb4();\n    }\n    if (uVar1 < 3) {\n        arg_10h = 0;\n    }\n    else {\n        arg_10h = fcn.0044be63();\n    }\n    fcn.0046db90(arg_8h, arg_ch, arg_10h);\n    return 0;\n}\n",
        "token_count": 197
    },
    "00453e56": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00453e56(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    float10 fVar5;\n    uint var_18h;\n    double dStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    uVar1 = *(arg_8h + 8);\n    fcn.0040d3d2();\n    var_8h = 0xffffffff;\n    var_4h = 2;\n    arg_8h = 0;\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (5 < uVar1) {\n        var_4h = fcn.0040cdb4();\n    }\n    if (4 < uVar1) {\n        cVar3 = fcn.0040d2c0(7);\n        if (cVar3 == '\\0') goto code_r0x00453f5a;\n        arg_8h = fcn.0044be63();\n    }\n    if (3 < uVar1) {\n        iVar2 = *(*(iVar2 + 4) + 0xc);\n        cVar3 = fcn.0040d2c0(4);\n        if (cVar3 == '\\0') goto code_r0x00453f5a;\n        fcn.004084a6();\n        fcn.0040c935(*(iVar2 + 8));\n    }\n    if (2 < uVar1) {\n        dStack24 = CONCAT44(0x453f0b, dStack24._0_4_);\n        var_8h = fcn.0040cdb4();\n    }\n    if (uVar1 < 2) {\n        uVar4 = 0xffffffff;\n    }\n    else {\n        dStack24 = CONCAT44(0x453f1e, dStack24._0_4_);\n        uVar4 = fcn.0040cdb4();\n    }\n    dStack24 = CONCAT44(0x453f2f, dStack24._0_4_);\n    fVar5 = fcn.00412620();\n    dStack24 = fVar5;\n    var_18h = arg_8h;\n    uVar4 = fcn.0046dbe3(uVar4, &var_18h, var_8h, var_4h, arg_8h);\n    fcn.00412570();\n    arg_ch[3] = 1;\n    *arg_ch = uVar4;\ncode_r0x00453f5a:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 638
    },
    "00453f6b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453f6b(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar2 = fcn.0044be63();\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    uVar2 = fcn.0041a599(**(iVar1 + 8), 0xffffffff, 0, 0xffffffff, uVar2, 0xffffffff, 0xffffffff);\n    fcn.00412570();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 177
    },
    "00453fc5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453fc5(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_14h;\n    \n    arg_14h = 0xffffffff;\n    uVar2 = 0;\n    if (2 < *(arg_8h + 8)) {\n        uVar2 = fcn.0044be63();\n    }\n    if (1 < *(arg_8h + 8)) {\n        arg_14h = fcn.0040cdb4();\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    uVar2 = fcn.0041a599(0, 0xffffffff, **(iVar1 + 8), arg_14h, uVar2, 0xffffffff, 0xffffffff);\n    fcn.00412570();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 225
    },
    "00454037": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454037(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    uint dwNewLong;\n    \n    dwNewLong = 0xffffffff;\n    uVar1 = 0;\n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044be63();\n    }\n    if (1 < *(arg_8h + 8)) {\n        dwNewLong = fcn.0040cdb4();\n    }\n    arg_8h_00 = fcn.0040cdb4();\n    uVar1 = fcn.0046dc79(arg_8h_00, dwNewLong, uVar1);\n    fcn.00412570();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 199
    },
    "004540e6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004540e6(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040cdb4();\n    }\n    arg_8h_00 = fcn.0044be63();\n    uVar1 = fcn.0046dd52(arg_8h_00, uVar1);\n    fcn.00412570();\n    *arg_ch = uVar1;\n    arg_ch[3] = 7;\n    return 0;\n}\n",
        "token_count": 152
    },
    "00454b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00454b20(uint arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint arg_10h;\n    int32_t iVar4;\n    uint var_7ch;\n    int32_t var_ch;\n    \n    fcn.00454782();\n    cVar1 = fcn.004557d7(*(in_ECX + 0x20), &var_7ch);\n    if (cVar1 == '\\0') {\n        arg_10h = 1;\n    }\n    else if ((var_ch == 3) || (var_ch == 1)) {\n        cVar1 = fcn.004553f6(var_ch);\n        if (cVar1 == '\\0') {\n            arg_10h = 0xdeadbeef;\n            in_stack_ffffff5c = 3;\n        }\n        else {\n            if (var_ch == 1) {\n                iVar4 = in_ECX + 0x8c;\n                uVar3 = fcn.004554a5(iVar4);\n                uVar2 = fcn.0045497b(&var_7ch, uVar3 & 0xff, iVar4);\n                goto code_r0x00454bd1;\n            }\n            if (var_ch == 3) {\n                iVar4 = in_ECX + 0x58;\n                uVar3 = fcn.004554a5(iVar4);\n                uVar2 = fcn.00454c23(&var_7ch, uVar3 & 0xff, iVar4);\n                goto code_r0x00454bd1;\n            }\n            arg_10h = 0xdeadbeef;\n            in_stack_ffffff5c = 4;\n        }\n    }\n    else {\n        arg_10h = 2;\n    }\n    uVar2 = fcn.004556a9(in_stack_ffffff58, in_stack_ffffff5c, arg_10h);\ncode_r0x00454bd1:\n    uVar3 = fcn.0045480c();\n    return uVar3 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 501
    },
    "00455235": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00455235(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_10h;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    \n    if (*(arg_8h + 8) < 2) {\n        arg_10h = 0;\n    }\n    else {\n        arg_10h = fcn.0040cdb4();\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    arg_8h_00 = **(iVar1 + 8);\n    iVar1 = in_ECX + 0x10;\n    fcn.004546b0(iVar1);\n    fcn.004545cf(arg_8h_00, 0x49dbf0, arg_10h, 0, iVar1);\n    fcn.004558e3(0);\n    fcn.00412570();\n    arg_ch[1] = uStack356;\n    arg_ch[3] = 2;\n    *arg_ch = uStack360;\n    fcn.0044d7e4(uStack352, 0);\n    fcn.00407ba9(uStack356, 0);\n    fcn.004547d7();\n    return 0;\n}\n",
        "token_count": 313
    },
    "00455703": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455703(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint *puVar1;\n    uint *puVar2;\n    \n    puVar1 = in_ECX + 0x90;\n    if (*(arg_ch + 0x70) != 1) {\n        puVar1 = in_ECX + 0x5c;\n    }\n    puVar2 = in_ECX + 0xa0;\n    if (*(arg_ch + 0x70) != 1) {\n        puVar2 = in_ECX + 0x6c;\n    }\n    if (puVar1[1] != 0) {\n        (*_sym.imp.WININET.dll_InternetSetOptionW)(arg_8h, 0x2b, *puVar1, puVar1[1] + 1);\n        (*_sym.imp.WININET.dll_InternetSetOptionW)(arg_8h, 0x2c, *puVar2, puVar2[1] + 1);\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "004560f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004560f3(int32_t arg_8h, ulong *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    iVar2 = *(iVar2 + 8);\n    cVar1 = fcn.0041bcea(0x10);\n    if (cVar1 == '\\0') {\n        fcn.0044d7e4(1, 0);\n    }\n    if (*(arg_8h + 8) < 2) {\n        if (*(iVar2 + 4) < 9) {\n            fcn.00412570();\n            *(arg_ch + 0xc) = 1;\n            *arg_ch = var_8h;\n        }\n        else {\n            fcn.00412570();\n            *arg_ch = var_8h;\n            *(arg_ch + 0xc) = 2;\n            *(arg_ch + 4) = var_4h;\n        }\n    }\n    else {\n        iVar2 = fcn.0040cdb4();\n        if (((iVar2 != 1) && (iVar2 != 2)) && (iVar2 == 3)) {\n            fcn.00456927(&var_18h, var_8h, var_4h, 2);\n            _var_8h = fcn.0040d00b();\n            fcn.00412570();\n            fcn.00412570();\n            *arg_ch = _var_8h;\n            *(arg_ch + 0xc) = 3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 398
    },
    "0045640b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045640b(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    float10 fVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = **(arg_8h + 4);\n    cVar2 = fcn.0040d16a();\n    if (cVar2 != '\\0') {\n        if ((*(iVar1 + 0xc) != 1) && (*(iVar1 + 0xc) != 2)) {\n            fcn.00412620();\n            _var_8h = fcn.00471e16();\n            fVar3 = fcn.00412620();\n            if (_var_8h != fVar3) {\n                return 0;\n            }\n        }\n        fcn.00412570();\n        *arg_ch = 1;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 255
    },
    "004566d7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004566d7(int32_t arg_8h, double *arg_ch)\n\n{\n    double dVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    float10 fVar6;\n    float10 fVar7;\n    float10 fVar8;\n    uint var_1h;\n    \n    bVar2 = false;\n    if ((*(arg_8h + 8) == 3) && (iVar4 = fcn.0040cdb4(),  iVar4 == 1)) {\n        bVar2 = true;\n    }\n    fcn.00412570();\n    *arg_ch = 0;\n    *(arg_ch + 0xc) = 1;\n    iVar4 = *(arg_8h + 8);\n    if (iVar4 == 0) {\n        fVar6 = fcn.0044bf19();\n        dVar1 = fVar6;\n        fcn.00412570();\ncode_r0x00456853:\n        *arg_ch = dVar1;\n        *(arg_ch + 0xc) = 3;\n    }\n    else {\n        if (iVar4 == 1) {\n            fVar6 = fcn.00412620();\n            if (0 < fVar6) {\n                fVar7 = fcn.0044bf19();\n                dVar1 = fVar7 * fVar6;\n                fcn.00412570();\n                goto code_r0x00456853;\n            }\n        }\n        else {\n            if (1 < iVar4 - 2U) {\n                return 0;\n            }\n            cVar3 = fcn.0040d2c0(5);\n            if ((cVar3 == '\\0') && (cVar3 = fcn.0040d2c0(5),  cVar3 == '\\0')) {\n                if (bVar2) {\n                    iVar4 = fcn.0040cdb4();\n                    iVar5 = fcn.0040cdb4();\n                    arg_8h = iVar4 - iVar5;\n                    if ((iVar5 < iVar4) && (0 < arg_8h)) {\n                        if (arg_8h < 0x7ffffff) {\n                            arg_8h = arg_8h + 1;\n                        }\n                        iVar4 = fcn.0044bed4();\n                        fcn.00412570();\n                        *(arg_ch + 0xc) = 1;\n                        *arg_ch = iVar5 + iVar4 % arg_8h;\n                        return 0;\n                    }\n                }\n                else {\n                    fVar6 = fcn.00412620();\n                    fVar7 = fcn.00412620();\n                    if (fVar7 < fVar6) {\n                        fVar8 = fcn.0044bf19();\n                        dVar1 = fVar8 * (fVar6 - fVar7) + fVar7;\n                        fcn.00412570();\n                        goto code_r0x00456853;\n                    }\n                }\n            }\n        }\n        fcn.0044d7e4(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 706
    },
    "00456a38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00456a38(uint arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h, uint noname_4, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uStack44;\n    uchar auStack28 [24];\n    \n    fcn.00412570();\n    uVar4 = 0;\n    arg_10h[3] = 1;\n    *arg_10h = 0;\n    fcn.0040109f(0);\n    fcn.0040d3d2();\n    cVar1 = fcn.00456b60(arg_8h, arg_ch, auStack28, arg_14h);\n    if (cVar1 == '\\0') goto code_r0x00456afb;\n    fcn.0040ace0(0, uStack44, &stack0xffffffc4);\n    if (arg_14h < 2) {\ncode_r0x00456af0:\n        uVar4 = 1;\n    }\n    else {\n        arg_8h_00 = fcn.0040124c();\n        iVar2 = fcn.00413680(0, &stack0xffffffb8, &stack0xffffffb4, arg_10h, arg_1ch);\n        if (-1 < iVar2) {\n            if (arg_8h_00 != 0) {\n                fcn.00401ac0(arg_8h_00);\n            }\n            goto code_r0x00456af0;\n        }\n        if (arg_8h_00 != 0) {\n            fcn.00401ac0(arg_8h_00);\n        }\n    }\n    fcn.00405800();\ncode_r0x00456afb:\n    fcn.00405cd3();\n    uVar3 = fcn.00401188();\n    return uVar3 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 462
    },
    "00456fee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456fee(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = *(arg_8h + 8);\n    arg_8h = 500;\n    uVar2 = 1000;\n    if (uVar1 != 0) {\n        arg_8h = fcn.0040cdb4();\n    }\n    if (1 < uVar1) {\n        uVar2 = fcn.0040cdb4();\n    }\n    (*_sym.imp.KERNEL32.dll_Beep)(arg_8h, uVar2);\n    return 0;\n}\n",
        "token_count": 146
    },
    "0045757d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045757d(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack24 = 0x49dd90;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    iVar1 = **(arg_8h + 4);\n    *0x4c10b6 = 1;\n    fcn.004084a6();\n    iVar1 = fcn.0040ace0(0, **(iVar1 + 8), &uStack24);\n    if ((-1 < iVar1) && (1 < uStack28)) {\n        iVar1 = fcn.0040fa40(&stack0xffffffdc, &stack0xffffffd8, arg_ch, 0xffffffff);\n        if (-1 < iVar1) {\n            *0x4c10b6 = 0;\n            goto code_r0x0045761a;\n        }\n    }\n    *0x4c10b6 = 0;\n    fcn.0044d7e4(1, 0);\n    fcn.0040ca8e(0x49dbf0);\ncode_r0x0045761a:\n    fcn.00405800();\n    return 0;\n}\n",
        "token_count": 318
    },
    "004576bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004576bb(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint noname_0;\n    uint arg_8h_00;\n    int32_t iStack116;\n    uint uStack100;\n    uint uStack96;\n    uchar auStack56 [52];\n    \n    iVar6 = *(arg_8h + 8);\n    fcn.0043f7aa();\n    iStack116 = 0;\n    uVar1 = iVar6 - 2;\n    if (uVar1 < 9) {\n    // switch table (9 cases) at 0x457a6f\n        iVar6 = in_ECX;\n        switch(*(uVar1 * 4 + 0x457a6f)) {\n        case 0x4576f8:\n            iStack116 = fcn.0044be63();\n        case 0x457707:\n            cVar3 = fcn.0041d5f6(0x29);\n            if (cVar3 == '\\0') {\n                fcn.0040cdb4();\n            }\n        case 0x457740:\n            cVar3 = fcn.0041d5f6(0x29);\n            if (cVar3 == '\\0') {\n                fcn.0040cdb4();\n            }\n        case 0x457768:\n            cVar3 = fcn.0041d5f6(0x29);\n            if (cVar3 == '\\0') {\n                uStack96 = fcn.0040cdb4();\n            }\n        case 0x45778d:\n            iVar4 = fcn.0040cdb4();\n            if ((-1 < iVar4) && (cVar3 = fcn.0041d5f6(0x29),  cVar3 == '\\0')) {\n                fcn.0040cdb4();\n            }\n        case 0x4577c1:\n            iVar4 = fcn.0040cdb4();\n            if ((-1 < iVar4) && (cVar3 = fcn.0041d5f6(0x29),  cVar3 == '\\0')) {\n                fcn.0040cdb4();\n            }\n        case 0x4577f5:\n            iVar4 = *(*(arg_8h + 4) + 0xc);\n            cVar3 = fcn.0041d5f6(0x29);\n            if ((cVar3 == '\\0') && (fcn.004084a6(),  ***(iVar4 + 8) != 0)) {\n                fcn.0041dd62();\n                iVar4 = 1;\n                while( true ) {\n                    iVar5 = *(*(arg_8h + 4) + 0xc);\n                    fcn.004084a6();\n                    uVar2 = *(**(iVar5 + 8) + iVar4 * 2);\n                    if (uVar2 == 0) break;\n                    if (uVar2 < 0x30) {\ncode_r0x00457927:\n                        uStack100 = 0;\n                        arg_8h_00 = 3;\n                        goto code_r0x00457930;\n                    }\n                    if (uVar2 < 0x3a) {\n                        fcn.004084a6();\n                        while( true ) {\n                            iVar6 = *(*(arg_8h + 4) + 0xc);\n                            fcn.004084a6();\n                            iVar5 = fcn.00422952(*(**(iVar6 + 8) + 2 + iVar4 * 2));\n                            iVar6 = iStack116;\n                            if (iVar5 == 0) break;\n                            iVar4 = iVar4 + 1;\n                            fcn.004084a6();\n                        }\n                    }\n                    else if ((uVar2 != 0x4d) && (uVar2 != 0x6d)) goto code_r0x00457927;\n                    iVar4 = iVar4 + 1;\n                }\n            }\n        case 0x45780f:\n            iVar4 = *(*(arg_8h + 4) + 8);\n            cVar3 = fcn.0041d5f6(0x29);\n            if (cVar3 == '\\0') {\n                fcn.004084a6();\n                fcn.0040c935(*(iVar4 + 8));\n            }\n            else {\n                fcn.0040c4cd();\n            }\n        }\n        iVar4 = *(*(arg_8h + 4) + 4);\n        cVar3 = fcn.0041d5f6(0x29);\n        if (cVar3 == '\\0') {\n            fcn.004084a6();\n            fcn.0040c935(*(iVar4 + 8));\n        }\n        else {\n            fcn.0040c4cd();\n        }\n        iVar4 = **(arg_8h + 4);\n        cVar3 = fcn.0041d5f6(0x29);\n        if (cVar3 == '\\0') {\n            fcn.004084a6();\n            iVar6 = *(iVar4 + 8);\n        }\n        else {\n            iVar6 = iVar6 + 0xb8;\n        }\n        fcn.0040c935(iVar6);\n        arg_8h_00 = 0x4579e0;\n        iVar6 = fcn.00447cd7(uStack100, uStack96);\n        if (iVar6 != 0) {\n            iVar6 = fcn.0043f82d(noname_0, in_ECX);\n            if (iVar6 == 1) {\n                fcn.00407bef(&stack0xffffffc8);\n                goto code_r0x00457a5b;\n            }\n            uStack100 = 0;\n            if (iVar6 == 2) {\n                arg_8h_00 = 1;\n            }\n            else if (iVar6 == 3) {\n                arg_8h_00 = 2;\n            }\n            else {\n                arg_8h_00 = 3;\n            }\n        }\ncode_r0x00457930:\n        fcn.0044d7e4(arg_8h_00, uStack100);\n        fcn.0040ca8e(0x49dbf0);\n    }\n    else {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.0044d7e4(5, 0);\n    }\ncode_r0x00457a5b:\n    fcn.00456a1c();\n    return 0;\n}\n",
        "token_count": 1506
    },
    "00458878": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00458878(int32_t arg_8h, double *arg_ch)\n\n{\n    double *pdVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    float10 fVar5;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    double dStack20;\n    int32_t var_8h;\n    uint var_4h;\n    \n    pdVar1 = arg_ch;\n    fcn.00412570();\n    iVar4 = arg_8h;\n    *(pdVar1 + 0xc) = 1;\n    *pdVar1 = 0;\n    var_8h = 0;\n    if (6 < *(arg_8h + 8)) {\n        var_8h = fcn.0040cdb4();\n    }\n    arg_ch = 0x1;\n    if (4 < *(iVar4 + 8)) {\n        iVar2 = fcn.0040cdb4();\n        if (1 < iVar2) {\n            arg_ch = fcn.0040cdb4();\n        }\n    }\n    if (5 < *(iVar4 + 8)) {\n        uVar3 = fcn.0044be63();\n        iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar3);\n        if (iVar4 != 0) {\n            var_4h = fcn.0044be63();\n            goto code_r0x00458907;\n        }\n    }\n    var_4h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x00458907:\n    iVar4 = fcn.0040cdb4();\n    var_20h = iVar4;\n    var_1ch = fcn.0040cdb4();\n    iVar2 = fcn.0040cdb4();\n    var_18h = iVar2;\n    var_14h = fcn.0040cdb4();\n    iVar4 = fcn.00422626(iVar2 - iVar4);\n    iVar2 = fcn.0045a268(var_4h, &var_20h, &arg_8h);\n    if (iVar2 != 0) {\n        if (var_8h == 1) {\n            fVar5 = fcn.0045a1cd(iVar2, arg_8h, iVar4 + 1, arg_ch);\n        }\n        else {\n            fVar5 = fcn.0045a0fb(iVar2, arg_8h, iVar4 + 1, arg_ch);\n        }\n        dStack20 = fVar5;\n        fcn.00412570();\n        *pdVar1 = dStack20;\n        *(pdVar1 + 0xc) = 3;\n        fcn.0042017e(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 649
    },
    "00458e5b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458e5b(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    uVar2 = 1;\n    uVar1 = fcn.0040cdb4();\n    fcn.0044d7e4(uVar1, uVar2);\n    if (1 < *(arg_8h + 8)) {\n        uVar2 = 1;\n        uVar1 = fcn.0040cdb4();\n        fcn.00407ba9(uVar1, uVar2);\n    }\n    if (2 < *(arg_8h + 8)) {\n        fcn.0040d89e(*(*(arg_8h + 4) + 8));\n    }\n    return 0;\n}\n",
        "token_count": 177
    },
    "00458eba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458eba(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 1;\n    arg_8h_00 = fcn.0040cdb4();\n    fcn.00407ba9(arg_8h_00, arg_ch_00);\n    if (1 < *(arg_8h + 8)) {\n        fcn.0040d89e(*(*(arg_8h + 4) + 4));\n    }\n    return 0;\n}\n",
        "token_count": 131
    },
    "00458ef9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458ef9(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*(arg_8h + 8) == 2) {\n        iVar1 = fcn.0040cdb4();\n        if (iVar1 == 1) {\n            fcn.004084a6();\n            goto code_r0x00458f38;\n        }\n    }\n    fcn.004084a6();\ncode_r0x00458f38:\n    fcn.004483d6();\n    return 0;\n}\n",
        "token_count": 123
    },
    "0045a3f7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a3f7(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    uint nEscapement;\n    uint var_2ch;\n    int32_t lpRect;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t dwExStyle;\n    int32_t var_8h;\n    uint32_t dwStyle;\n    \n    var_8h = -1;\n    iVar9 = -1;\n    dwStyle = 0x88c00000;\n    dwExStyle = 8;\n    fcn.0040d3d2();\n    if (*0x4c10d4 != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0x4c10d4);\n        *0x4c10d4 = 0;\n    }\n    if (arg_10h != 1) {\n        iVar5 = -1;\n        if (2 < arg_ch) {\n            iVar5 = *(*(arg_8h + 4) + 8);\n            fcn.004084a6();\n            fcn.0040c935(*(iVar5 + 8));\n            iVar5 = var_8h;\n        }\n        if (3 < arg_ch) {\n            iVar5 = fcn.0040cdb4();\n            var_8h = iVar5;\n        }\n        if (4 < arg_ch) {\n            iVar9 = fcn.0040cdb4();\n        }\n        if (5 < arg_ch) {\n            uVar6 = fcn.0040cdb4();\n            if ((uVar6 & 1) != 0) {\n                dwStyle = 0x88000000;\n            }\n            uVar4 = fcn.0040cdb4();\n            dwExStyle = ~-((uVar4 & 2) != 0) & 8;\n            uVar6 = fcn.0040cdb4();\n            if ((uVar6 & 0x10) != 0) {\n                dwStyle = dwStyle ^ 0x8000000;\n            }\n        }\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &lpRect, 0);\n        if (iVar5 == -1) {\n            var_8h = (var_14h + -300) / 2;\n        }\n        if (iVar9 == -1) {\n            iVar9 = (var_10h + -100) / 2;\n        }\n        (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, 0, 300, 100);\n        (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&lpRect, dwStyle, 0, dwExStyle);\n        iVar5 = **(arg_8h + 4);\n        fcn.004084a6();\n        pcVar1 = _sym.imp.USER32.dll_CreateWindowExW;\n        *0x4c10d4 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                              (dwExStyle, 0x49daa8, **(iVar5 + 8), dwStyle, var_8h, iVar9, var_14h - lpRect, \n                               var_10h - var_18h, *0x4c10e8, 0, 0, 0);\n        (*_sym.imp.USER32.dll_GetClientRect)(*0x4c10d4, &lpRect);\n        iVar9 = *(*(arg_8h + 4) + 4);\n        fcn.004084a6();\n        *0x4c10cc = (*pcVar1)(0, 0x4b184c, **(iVar9 + 8), 0x50000000, (var_14h - lpRect) + -0x119, 4, 0x500, 0x18, \n                              *0x4c10d4, 0, 0, 0);\n        uVar7 = (*_sym.imp.GDI32.dll_CreateDCW)(L\"DISPLAY\", 0, 0, 0);\n        pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n        uVar8 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar7, uVar8);\n        (*_sym.imp.GDI32.dll_GetTextFaceW)(uVar7, 0x40, &nEscapement);\n        iVar9 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar7, 0x5a);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar7);\n        uVar7 = (*_sym.imp.GDI32.dll_CreateFontW)\n                          ((iVar9 * -10) / 0x48, 0, 0, 0, 600, 0, 0, 0, 1, 4, 0, 2, 0, &nEscapement);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        (*_sym.imp.USER32.dll_SendMessageW)(*0x4c10cc, 0x30, uVar7, 1);\n        pcVar3 = _sym.imp.USER32.dll_CreateWindowExW;\n        *0x4c10d0 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                              (0x200, L\"msctls_progress32\", 0, 0x50000001, ((var_14h - lpRect) + -0x104) / 2, 0x1e, \n                               0x104, 0x14, *0x4c10d4, 0, 0, 0);\n        (*pcVar2)(*0x4c10d0, 0x401, 0, 0x640000);\n        (*pcVar2)(*0x4c10d0, 0x404, 1, 0);\n        *0x4c10c8 = (*pcVar3)(0, 0x4b184c, var_2ch, 0x50000000, (var_14h - lpRect) + -0x118, 0x37, 0x500, 0x32, \n                              *0x4c10d4, 0, 0, 0);\n        uVar7 = (*pcVar1)(0x11, 1);\n        (*pcVar2)(*0x4c10c8, 0x30, uVar7);\n        (*_sym.imp.USER32.dll_ShowWindow)(*0x4c10d4, 4);\n    }\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1561
    },
    "0045af26": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045af26(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint arg_ch_00;\n    bool bVar5;\n    uint uVar6;\n    int32_t iStack76;\n    ushort auStack64 [2];\n    uint uStack60;\n    int32_t iStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack28;\n    \n    uStack60 = 0;\n    fcn.00412570();\n    arg_ch[3] = 1;\n    *arg_ch = 0;\n    iVar2 = (*_sym.imp.ole32.dll_CoInitialize)(0);\n    if (iVar2 == 1) {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&uStack60);\n    iStack56 = 0;\n    uStack52 = 0;\n    auStack64[0] = 9;\n    iVar2 = *(arg_8h + 8);\n    if (iVar2 == 1) {\n        iVar2 = fcn.0042010a(0x3c);\n        if (iVar2 == 0) {\n            iStack56 = 0;\n        }\n        else {\n            iVar2 = **(arg_8h + 4);\n            fcn.004084a6();\n            iStack56 = fcn.00441050(**(iVar2 + 8), 0, 0);\n        }\n        iVar2 = *(iStack56 + 4);\n        bVar5 = iVar2 < 0;\n        if (bVar5) {\n            uStack40 = 0;\n            uStack36 = 1;\n            iStack48 = iVar2;\n            fcn.00412570();\n        }\n        else {\n            uVar4 = fcn.0044a6f6(auStack64);\n            uStack28 = 0;\n            fcn.004113a0(uVar4);\n            iVar2 = iStack76;\n        }\n        cVar1 = !bVar5;\n        iStack76 = iVar2;\ncode_r0x0045b219:\n        if (cVar1 != '\\0') {\n            fcn.00412570();\n        }\ncode_r0x0045b224:\n        if (iStack76 < 0) {\n            fcn.0045c235(iStack76, 0, 0, 0);\n        }\n    }\n    else {\n        if (iVar2 == 2) {\n            iVar2 = *(*(arg_8h + 4) + 4);\n            fcn.004084a6();\n            arg_ch_00 = **(iVar2 + 8);\n            iVar2 = **(arg_8h + 4);\n            fcn.004084a6();\n            uVar4 = 0;\n            uVar6 = 0;\n        }\n        else {\n            if (iVar2 == 3) {\n                iVar2 = *(*(arg_8h + 4) + 8);\n                cVar1 = fcn.0040d18c();\n                if (cVar1 != '\\0') {\n                    iVar2 = fcn.0040cdb4();\n                    if ((0 < iVar2) && (iVar2 = *(in_ECX + 0x1ac),  iVar3 = fcn.0040cdb4(),  iVar3 <= iVar2)) {\n                        fcn.0040cdb4();\n                    }\n                    iVar2 = fcn.0042010a(0x3c);\n                    if (iVar2 == 0) {\n                        iStack56 = 0;\n                    }\n                    else {\n                        iVar2 = *(*(arg_8h + 4) + 4);\n                        cVar1 = fcn.0041d5f6(0x29);\n                        if (cVar1 == '\\0') {\n                            fcn.004084a6();\n                            uVar4 = **(iVar2 + 8);\n                        }\n                        else {\n                            uVar4 = 0;\n                        }\n                        iVar2 = **(arg_8h + 4);\n                        fcn.004084a6();\n                        iStack56 = fcn.00441050(**(iVar2 + 8), uVar4, iStack76);\n                    }\n                    iVar2 = *(iStack56 + 4);\n                    if (iVar2 < 0) {\n                        uStack40 = 0;\n                        uStack36 = 1;\n                        cVar1 = '\\0';\n                        iStack48 = iVar2;\n                        fcn.00412570();\n                        iStack76 = iVar2;\n                    }\n                    else {\n                        cVar1 = '\\x04';\n                        uVar4 = fcn.0044a6f6(auStack64);\n                        uStack28 = 0;\n                        fcn.004113a0(uVar4);\n                    }\n                    goto code_r0x0045b219;\n                }\n                fcn.004084a6();\n                uVar4 = **(iVar2 + 8);\n                iVar2 = *(*(arg_8h + 4) + 4);\n                fcn.004084a6();\n                uVar6 = **(iVar2 + 8);\n                iVar2 = **(arg_8h + 4);\n                fcn.004084a6();\n                fcn.0045c604(**(iVar2 + 8), uVar6, uVar4, 0, arg_ch);\n                goto code_r0x0045b224;\n            }\n            if (iVar2 != 4) goto code_r0x0045b23a;\n            iVar2 = *(*(arg_8h + 4) + 0xc);\n            fcn.004084a6();\n            uVar4 = **(iVar2 + 8);\n            iVar2 = *(*(arg_8h + 4) + 8);\n            fcn.004084a6();\n            uVar6 = **(iVar2 + 8);\n            iVar2 = *(*(arg_8h + 4) + 4);\n            fcn.004084a6();\n            arg_ch_00 = **(iVar2 + 8);\n            iVar2 = **(arg_8h + 4);\n            fcn.004084a6();\n        }\n        fcn.0045c604(**(iVar2 + 8), arg_ch_00, uVar6, uVar4, arg_ch);\n    }\ncode_r0x0045b23a:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack64);\n    return 0;\n}\n",
        "token_count": 1484
    },
    "0045b74b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045b7de)\n// WARNING: Removing unreachable block (ram,0x0045b807)\n// WARNING: Removing unreachable block (ram,0x0045b870)\n// WARNING: Removing unreachable block (ram,0x0045b883)\n// WARNING: Removing unreachable block (ram,0x0045b88f)\n// WARNING: Removing unreachable block (ram,0x0045b8a0)\n\nuint __cdecl fcn.0045b74b(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *unaff_EBX;\n    uint uVar5;\n    int32_t *unaff_EDI;\n    int32_t *piVar6;\n    int32_t iStack164;\n    int32_t *piStack160;\n    int32_t *piVar7;\n    int32_t *arg_10h;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    uint uStack108;\n    int32_t iStack104;\n    int32_t aiStack100 [2];\n    int32_t iStack92;\n    uint32_t uStack88;\n    uint uStack84;\n    int32_t *piStack80;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t *piStack48;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack88 = *(arg_8h + 8);\n    uStack24 = *0x48d93c;\n    uStack20 = *0x48d940;\n    uStack16 = *0x48d944;\n    uStack12 = *0x48d948;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    uVar5 = 0;\n    piVar11 = 0x49dbf0;\n    iStack52 = 0;\n    piStack48 = NULL;\n    uStack84 = 0;\n    piStack80 = 0x1;\n    fcn.0040ca8e(0x49dbf0);\n    iVar3 = (*_sym.imp.ole32.dll_CoInitialize)();\n    if (iVar3 == 1) {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    piVar10 = 0x29;\n    piVar9 = 0x45b7c5;\n    cVar2 = fcn.0041d5f6(0x29);\n    if (cVar2 != '\\0') {\n        piVar9 = 0x49dbf0;\n        fcn.0040ca8e(0x49dbf0);\n    }\n    iVar3 = **(arg_8h + 4);\n    fcn.004084a6();\n    piVar8 = *(iVar3 + 8);\n    iStack92 = *piVar8;\n    iStack56 = piVar8[1];\n    iStack52 = piVar8[2];\n    piStack48 = piVar8[3];\n    *piStack48 = *piStack48 + 1;\n    iStack60 = iStack92;\n    cVar2 = fcn.0041f885();\n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    if (cVar2 == '\\0') {\n        piVar8 = 0x1;\n        uVar4 = (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n        arg_10h = &stack0xffffffa4;\n        uStack108 = 1;\n        iStack92 = 0x48d91c;\n        piStack160 = 0x2;\n        iStack164 = 0x15;\n        uStack88 = 0;\n        uStack84 = 0;\n        iVar3 = (*_sym.imp.ole32.dll_CoGetInstanceFromFile)(0, -(iStack104 != 0) & &stack0xffffffd0, 0);\n        if (iVar3 < 0) {\n            unaff_EDI = NULL;\n            iVar3 = (*_sym.imp.ole32.dll_CoGetObject)(piVar11, 0, 0x48d91c, &stack0xffffff74);\n            if (iVar3 < 0) {\n                uVar5 = fcn.0045c235(iVar3, 0, 0, 0);\n                (*pcVar1)(uVar4);\n                goto code_r0x0045bac7;\n            }\n        }\n        piStack160 = unaff_EDI;\n        (*pcVar1)(uVar4);\ncode_r0x0045ba4b:\n        if (piVar10 != NULL) {\n            if (unaff_EBX != NULL) {\n                iStack164 = iStack52;\n                piStack160 = piStack48;\n                iVar3 = fcn.0043ac4b(iStack56);\n                if (iVar3 == 0) {\n                    piStack160 = 0x45ba80;\n                    (**(*piVar10 + 8))();\n                    piVar8 = NULL;\n                    arg_10h = NULL;\n                    uStack108 = 0;\n                    uVar5 = 0x80028ca0;\n                    goto code_r0x0045b8dd;\n                }\n            }\n            uStack88 = uStack88 & 0xffff0000 | 9;\n            piStack160 = 0x45baa6;\n            piStack80 = piVar10;\n            fcn.0044a6f6(&stack0xffffffa8);\n            goto code_r0x0045bac7;\n        }\n        uVar5 = 0;\n        iStack164 = 0;\n    }\n    else {\n        uStack108 = 0;\n        arg_10h = unaff_EBX;\n        iVar3 = (*_sym.imp.ole32.dll_GetRunningObjectTable)();\n        if (-1 < iVar3) {\n            piVar8 = &stack0xffffff9c;\n            piVar6 = arg_10h;\n            iVar3 = (**(*arg_10h + 0x24))();\n            if (-1 < iVar3) {\n                aiStack100[0] = 1;\n                (**(_pe_dos_header + 0x14))();\ncode_r0x0045b907:\n                piVar7 = NULL;\n                piStack160 = &stack0xffffff80;\n                iStack164 = 1;\n                piVar12 = piVar6;\n                iVar3 = (**(*piVar6 + 0xc))();\n                if ((iVar3 != 0) || (piVar8 == NULL)) goto code_r0x0045b9bb;\n                iVar3 = (**(*piVar9 + 0x18))(piVar9, piVar8, &stack0xffffff78);\n                if ((iVar3 < 0) || (iVar3 = (***arg_10h)(arg_10h, 0x48d91c, &stack0xffffff5c),  iVar3 < 0))\n                goto code_r0x0045b9a2;\n                (**(*arg_10h + 8))(arg_10h);\n                iVar3 = fcn.0043ac4b(uStack88);\n                if (iVar3 == 1) {\n                    if (piVar10 == arg_10h) {\n                        (**(*piStack160 + 8))(piStack160);\ncode_r0x0045b9bb:\n                        (**(*piVar11 + 8))(piVar11);\n                        (**(*piVar8 + 8))(piVar8);\n                        unaff_EBX = NULL;\n                        goto code_r0x0045ba4b;\n                    }\n                    piVar10 = piVar10 + 1;\n                }\n                (**(*piVar6 + 8))(piVar6);\n                iStack164 = 0;\ncode_r0x0045b9a2:\n                (**(*piVar7 + 8))(piVar7);\n                piVar6 = piVar12;\n                goto code_r0x0045b907;\n            }\n            (**(*unaff_EDI + 8))();\n        }\n        piVar8 = NULL;\n        arg_10h = NULL;\n        uStack108 = 0;\n        uVar5 = 0x80004005;\n    }\ncode_r0x0045b8dd:\n    piStack160 = 0x45b8e6;\n    uVar5 = fcn.0045c235(uVar5, uStack108, arg_10h, piVar8);\ncode_r0x0045bac7:\n    piStack160 = 0x45bad0;\n    fcn.00405cd3();\n    piStack160 = &stack0xffffffa4;\n    iStack164 = 0x45badb;\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n    return uVar5;\n}\n",
        "token_count": 1994
    },
    "00460a19": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ndouble __cdecl fcn.00460a19(int32_t arg_8h)\n\n{\n    uchar uVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    float10 fVar3;\n    double dVar4;\n    int32_t iVar5;\n    int32_t iStack36;\n    int32_t aiStack32 [2];\n    uint uStack24;\n    uint uStack20;\n    \n    uVar1 = *0x4c1491;\n    if (*0x4c1444 == 1) {\n        dVar4 = 0.0;\n    }\n    else {\n        *0x4c10b7 = 1;\n        aiStack32[0] = CONCAT13(*0x4c1491, aiStack32[0]);\n        aiStack32[0] = fcn.0041cf79(**(arg_8h + 4));\n        *0x4c1491 = *(aiStack32[0] + 0x20);\n        fcn.0040109f(*(aiStack32[0] + 0x10));\n        aiStack32[0] = 0;\n        uStack24 = 0;\n        uStack20 = 1;\n        iVar2 = 0;\n        if (0 < *(arg_8h + 0x1c)) {\n            arg_8h_00 = arg_8h + 0x40;\n            do {\n                iVar5 = arg_8h_00;\n                fcn.00460300(arg_8h_00, aiStack32);\n                uVar1 = iVar5 >> 0x18;\n                fcn.0040d380(*(*(arg_8h + 4) + 4 + iVar2 * 4), &stack0xffffffd8, 0x200, 1);\n                iVar2 = iVar2 + 1;\n                arg_8h_00 = arg_8h_00 + 0x18;\n            } while (iVar2 < *(arg_8h + 0x1c));\n        }\n        fcn.00401000(*(iStack36 + 0x10) + 1, 0, aiStack32);\n        fcn.00401188();\n        if ((*(arg_8h + 0x30) == 9) || (*(arg_8h + 0x30) == 10)) {\n            fVar3 = fcn.00412620();\n            *0x4c17e8 = fVar3;\n            dVar4 = *0x4c17e8;\n        }\n        else {\n            dVar4 = fcn.0040d00b();\n        }\n        *0x4c10b7 = 0;\n        *0x4c1491 = uVar1;\n        fcn.00412570();\n    }\n    return dVar4;\n}\n",
        "token_count": 636
    },
    "0046117f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046117f(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint arg_10h;\n    uint arg_14h;\n    uint arg_18h;\n    int32_t *arg_1ch;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_ch_00;\n    uint *puVar4;\n    int32_t in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    \n    iVar3 = arg_8h;\n    arg_ch_00 = 0;\n    if (1 < *(arg_8h + 8)) {\n        iVar2 = fcn.0044be63();\n        puVar4 = arg_ch;\n        if (iVar2 == 0) {\n            fcn.00412570();\n            *puVar4 = 0;\n            goto code_r0x00461211;\n        }\n        arg_ch_00 = fcn.0044be63();\n    }\n    arg_8h = 0;\n    iVar3 = **(iVar3 + 4);\n    fcn.004084a6();\n    puVar4 = arg_ch;\n    puVar1 = *(iVar3 + 8);\n    arg_10h = *puVar1;\n    arg_14h = puVar1[1];\n    arg_18h = puVar1[2];\n    arg_1ch = puVar1[3];\n    *arg_1ch = *arg_1ch + 1;\n    iVar3 = fcn.0044ad79(&arg_8h, arg_ch_00, arg_10h, arg_14h, arg_18h, arg_1ch);\n    if (iVar3 != 0) {\n        return 0;\n    }\n    fcn.00412570();\n    *puVar4 = 0;\n    in_stack_ffffffd4 = 0;\n    in_stack_ffffffd0 = arg_8h;\ncode_r0x00461211:\n    puVar4[3] = 1;\n    fcn.0044d7e4(in_stack_ffffffd0, in_stack_ffffffd4);\n    return 0;\n}\n",
        "token_count": 482
    },
    "00462073": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462073(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint arg_8h_00;\n    \n    if (1 < *(arg_8h + 8)) {\n        fcn.0040cdb4();\n    }\n    fcn.0040cdb4();\n    arg_ch_00 = fcn.004482d0();\n    if (arg_ch_00 == 0) {\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.0044d7e4(arg_8h_00, arg_ch_00);\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 179
    },
    "00464476": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464476(uint arg_8h, uint arg_ch)\n\n{\n    uchar *arg_8h_00;\n    int32_t iVar1;\n    uint noname_1;\n    uint unaff_EBX;\n    int32_t iVar2;\n    ulong uVar3;\n    uint arg_8h_01;\n    int32_t arg_8h_02;\n    int32_t iStack44;\n    uchar auStack40 [36];\n    \n    arg_8h_00 = fcn.0044be47();\n    uVar3 = fcn.0044be8a();\n    arg_8h_02 = uVar3;\n    if (arg_8h_02 == 0) {\n        fcn.0040ca8e(0x49dbf0);\n        arg_8h_01 = 1;\n    }\n    else {\n        if (*((uVar3 >> 0x20) + 8) < 2) {\n            iVar1 = 1;\n        }\n        else {\n            iVar1 = fcn.0040cdb4();\n        }\n        if ((iVar1 < 1) || (4 < iVar1)) {\n            iVar1 = 1;\n        }\n        if (((iVar1 != 2) && (iVar1 != 3)) || (arg_8h_02 % 2 == 0)) {\n            if ((iVar1 != 1) && (iVar1 != 4)) {\n                if (iVar1 == 2) {\n                    fcn.00407b6e(arg_8h_02 / 2);\n                    fcn.004080ea(arg_8h_00, 0, arg_8h_02 / 2);\n                    fcn.00407bef(auStack40);\n                }\n                else {\n                    iStack44 = fcn.0042010a(arg_8h_02);\n                    iVar1 = 0;\n                    if (0 < arg_8h_02) {\n                        iVar2 = iStack44 - arg_8h_00;\n                        do {\n                            arg_8h_00[iVar2] = arg_8h_00[1];\n                            *(iStack44 + 1 + iVar1) = *arg_8h_00;\n                            iVar1 = iVar1 + 2;\n                            arg_8h_00 = arg_8h_00 + 2;\n                        } while (iVar1 < arg_8h_02);\n                    }\n                    fcn.00407b6e(arg_8h_02 / 2);\n                    fcn.004080ea(unaff_EBX, 0, arg_8h_02 / 2);\n                    fcn.00407bef(auStack40);\n                    fcn.0042017e(unaff_EBX);\n                }\n                fcn.00405cd3();\n                return 0;\n            }\n            fcn.0044a65e(arg_8h_02);\n            fcn.0041f2d0(arg_8h_00, noname_1, arg_8h_02);\n            fcn.00407b6e(arg_8h_02);\n            if (iVar1 == 1) {\n                fcn.0040c610(&iStack44, &stack0xffffffc4);\n            }\n            else {\n                fcn.00446765(&iStack44, &stack0xffffffc4);\n            }\n            fcn.00407bef(&stack0xffffffbc);\n            fcn.00405cd3();\n            fcn.00405cd3();\n            return 0;\n        }\n        fcn.0040ca8e(0x49dbf0);\n        arg_8h_02 = 0;\n        arg_8h_01 = 2;\n    }\n    fcn.0044d7e4(arg_8h_01, arg_8h_02);\n    return 0;\n}\n",
        "token_count": 843
    },
    "004646a3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004646a3(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.004084a6();\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    uVar2 = *(iVar1 + 8);\n    iVar1 = 0;\n    if (2 < *(arg_8h + 8)) {\n        iVar1 = fcn.0040cdb4();\n        if ((iVar1 < 0) || (3 < iVar1)) {\n            iVar1 = 0;\n        }\n        if (iVar1 == 1) {\n            uVar2 = fcn.0040b933(uVar2);\n            goto code_r0x00464701;\n        }\n    }\n    uVar2 = fcn.0041dfb6(uVar2, iVar1);\ncode_r0x00464701:\n    fcn.00412570();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 248
    },
    "0046471f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046471f(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0040ca8e(0x49dbf0);\n    cVar1 = fcn.0040d2c0(5);\n    if (cVar1 == '\\0') {\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        if (*(arg_8h + 8) < 3) {\n            uVar3 = fcn.0040218e(1);\n        }\n        else {\n            uVar3 = fcn.0040cdb4();\n        }\n        if (uVar3 == 0xffffffff) {\n            uVar3 = fcn.0040218e(1);\n        }\n        uVar4 = fcn.0040218e(1);\n        if (uVar4 < uVar3) {\n            uVar3 = fcn.0040218e(1);\n        }\n        if (*(arg_8h + 8) < 2) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0040cdb4();\n        }\n        if (uVar4 <= uVar3) {\n            if (*(arg_8h + 8) < 4) {\n                iVar5 = 0;\n            }\n            else {\n                iVar5 = fcn.0040cdb4();\n            }\n            if ((iVar5 == 1) || (iVar5 == 2)) {\n                var_8h = uVar3 - uVar4;\n                var_4h = fcn.0042010a(var_8h + 1);\n                iVar7 = 0;\n                if (uVar4 < uVar3) {\n                    var_ch = var_4h - uVar4;\n                    do {\n                        fcn.004114a0(**(arg_8h + 4), 0, 1);\n                        uVar2 = fcn.0040cdb4();\n                        *(var_ch + uVar4) = uVar2;\n                        uVar4 = uVar4 + 1;\n                        iVar7 = var_8h;\n                    } while (uVar4 < uVar3);\n                }\n                *(iVar7 + var_4h) = 0;\n                if (iVar5 == 1) {\n                    uVar6 = fcn.00448553();\n                }\n                else {\n                    uVar6 = fcn.00448993();\n                }\n                fcn.0040ca8e(uVar6);\n                fcn.0042017e(var_4h);\n                fcn.0042017e(uVar6);\n            }\n            else {\n                fcn.0040d3d2();\n                for (; uVar4 < uVar3; uVar4 = uVar4 + 1) {\n                    fcn.004114a0(**(arg_8h + 4), 0, 1);\n                    uVar6 = fcn.0040cdb4();\n                    fcn.0040bd2f(uVar6);\n                }\n                fcn.00407bef(&var_1ch);\n                fcn.00405cd3();\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 785
    },
    "004650cd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004650cd(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack136;\n    uint uStack132;\n    uchar auStack128 [8];\n    uchar auStack120 [16];\n    uchar auStack104 [100];\n    \n    iVar3 = **(arg_8h + 4);\n    fcn.004084a6();\n    iVar3 = *(iVar3 + 8);\n    fcn.00407b6e(*(iVar3 + 4));\n    if ((*(arg_8h + 8) < 2) || (iVar1 = fcn.0040cdb4(),  iVar1 != 1)) {\n        fcn.00407d70();\n        fcn.0040caee(0x4b472c);\n        fcn.00405be9(auStack104);\n        fcn.00405cd3();\n        fcn.00407e36(iVar3);\n        iVar3 = 0x49dbf4;\n        uStack136 = 0;\n        uStack132 = 0;\n        fcn.0040d3d2();\n        iVar1 = 0;\n        while (iVar2 = fcn.0041de96(&stack0xffffff6c, 1),  iVar2 != 0) {\n            fcn.00442d53(0, auStack120);\n            fcn.00405b47(auStack128);\n        }\n        while (iVar3 = iVar3 + -1,  -1 < iVar3) {\n            fcn.00407b4b(*(iVar1 + iVar3 * 4));\n        }\n        fcn.00405cd3();\n        fcn.00407da8();\n        fcn.00405cbb();\n    }\n    else {\n        fcn.0040c935(iVar3);\n        fcn.0046580c();\n    }\n    fcn.00407bef(&uStack136);\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 457
    },
    "004652e3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004652e3(int32_t arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t arg_ch_00;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    uint16_t *puVar7;\n    uint8_t *puVar8;\n    int32_t unaff_ESI;\n    uint32_t arg_8h_00;\n    uint32_t unaff_EDI;\n    uint32_t uVar9;\n    \n    fcn.0040ca8e(0x49dbf0);\n    iVar5 = **(arg_8h + 4);\n    fcn.004084a6();\n    iVar5 = *(iVar5 + 8);\n    if ((*(arg_8h + 8) < 3) || (iVar5 = unaff_ESI,  cVar3 = fcn.0041d5f6(0x29),  cVar3 != '\\0')) {\n        uVar4 = *(iVar5 + 4);\n    }\n    else {\n        uVar4 = fcn.0040cdb4();\n    }\n    if (*(iVar5 + 4) <= uVar4 && uVar4 != *(iVar5 + 4)) {\n        uVar4 = *(iVar5 + 4);\n    }\n    if ((*(arg_8h + 8) < 2) || (cVar3 = fcn.0041d5f6(0x29),  cVar3 != '\\0')) {\n        arg_ch_00 = 0;\n    }\n    else {\n        arg_ch_00 = fcn.0040cdb4();\n    }\n    if (arg_ch_00 <= uVar4) {\n        if (arg_ch_00 == uVar4) {\n            uVar4 = uVar4 + 1;\n        }\n        uVar4 = uVar4 - arg_ch_00;\n        uVar9 = uVar4;\n        fcn.00407b6e(uVar4);\n        fcn.00407f40(unaff_EDI, arg_ch_00, uVar4);\n        if (*(arg_8h + 8) < 4) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = fcn.0040cdb4();\n        }\n        if ((iVar5 == 1) || (iVar5 == 2)) {\n            fcn.0040a6d4();\n            if (iVar5 == 1) {\n                fcn.0045ae79(&stack0xffffffd0, &stack0xffffffc0);\n            }\n            else {\n                fcn.004466f8(&stack0xffffffd0, &stack0xffffffc0);\n            }\n            fcn.00403320(arg_ch, 1);\n            uVar4 = 0;\n            if (uVar9 != 0) {\n                do {\n                    puVar6 = fcn.004114a0(arg_ch, 0, 1);\n                    puVar8 = fcn.00464399(uVar4);\n                    uVar1 = *puVar8;\n                    fcn.00412570();\n                    *puVar6 = uVar1;\n                    uVar4 = unaff_EDI + 1;\n                    puVar6[3] = 1;\n                    unaff_EDI = uVar4;\n                } while (uVar4 < uVar9);\n            }\n            fcn.00405cd3();\n        }\n        else {\n            uVar9 = uVar4;\n            fcn.00403320(arg_ch, 1);\n            arg_8h_00 = 0;\n            if (uVar4 != 0) {\n                do {\n                    puVar6 = fcn.004114a0(arg_ch, 0, 1);\n                    puVar7 = fcn.0040a4f6(arg_8h_00);\n                    uVar2 = *puVar7;\n                    fcn.00412570(arg_8h_00, uVar9);\n                    *puVar6 = uVar2;\n                    arg_8h_00 = arg_ch_00 + 1;\n                    puVar6[3] = 1;\n                    arg_ch_00 = arg_8h_00;\n                } while (arg_8h_00 < uVar4);\n            }\n        }\n        fcn.00405cd3();\n    }\n    return 0;\n}\n",
        "token_count": 981
    },
    "004654ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004654ac(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *lpWideCharStr;\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint32_t uVar5;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar3 = **(arg_8h + 4);\n    fcn.004084a6();\n    lpWideCharStr = *(iVar3 + 8);\n    iVar3 = lpWideCharStr[1];\n    if (iVar3 == 0) {\n        fcn.0044ad14(0);\n    }\n    else {\n        if (*(arg_8h + 8) < 2) {\n            iVar1 = 1;\n        }\n        else {\n            iVar1 = fcn.0040cdb4();\n        }\n        if ((iVar1 < 1) || (4 < iVar1)) {\n            iVar1 = 1;\n        }\n        if ((iVar1 == 1) || (iVar1 == 4)) {\n            fcn.0040a6d4();\n            if (iVar1 == 1) {\n                fcn.0045ae79(lpWideCharStr, &var_10h);\n            }\n            else {\n                fcn.004466f8(lpWideCharStr, &var_10h);\n            }\n            uVar2 = fcn.0044ad14(var_ch);\n            fcn.0041faa0(uVar2, var_10h, var_ch);\n            fcn.00405cd3();\n        }\n        else if (iVar1 == 2) {\n            uVar2 = fcn.0044ad14(iVar3 * 2);\n            fcn.0041faa0(uVar2, *lpWideCharStr, iVar3 * 2);\n        }\n        else {\n            arg_8h_00 = iVar3 * 2;\n            iVar3 = fcn.0044ad14(arg_8h_00);\n            puVar4 = *lpWideCharStr;\n            uVar5 = 0;\n            if (arg_8h_00 != 0) {\n                iVar1 = iVar3 - puVar4;\n                do {\n                    puVar4[iVar1] = puVar4[1];\n                    *(iVar3 + 1 + uVar5) = *puVar4;\n                    uVar5 = uVar5 + 2;\n                    puVar4 = puVar4 + 2;\n                } while (uVar5 < arg_8h_00);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 584
    },
    "0046585e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046585e(uint noname_0, uint *arg_ch)\n\n{\n    char cVar1;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.0040d3d2();\n    if (*0x4c1990 != '\\x01') {\n        cVar1 = fcn.004456dc(&var_14h);\n        if (cVar1 != '\\0') goto code_r0x0046589b;\n    }\n    var_14h = 0;\n    fcn.00407e53(0x49dbf0);\ncode_r0x0046589b:\n    if (*0x4c1990 == '\\x01') {\n        fcn.0044d7e4(1, 0);\n    }\n    fcn.00412570();\n    arg_ch[3] = 1;\n    *arg_ch = var_14h;\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 219
    },
    "00465bd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465bd4(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(arg_8h + 8);\n    *0x4c1900 = 0;\n    fcn.00407e53(0x49dbf0);\n    if (uVar1 != 0) {\n        iVar2 = **(arg_8h + 4);\n        fcn.004084a6();\n        fcn.0040c935(*(iVar2 + 8));\n    }\n    if (1 < uVar1) {\n        fcn.0040cdb4();\n        *0x4c1900 = fcn.00447b84();\n    }\n    fcn.00403598();\n    return 0;\n}\n",
        "token_count": 181
    },
    "00465d45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465d45(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(arg_8h + 8);\n    *0x4c1904 = 0;\n    fcn.00407e53(0x49dbf0);\n    if (uVar1 != 0) {\n        iVar2 = **(arg_8h + 4);\n        fcn.004084a6();\n        fcn.0040c935(*(iVar2 + 8));\n    }\n    if (1 < uVar1) {\n        fcn.0040cdb4();\n        *0x4c1904 = fcn.00447b84();\n    }\n    fcn.0044632e();\n    return 0;\n}\n",
        "token_count": 182
    },
    "00465e61": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465e61(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint arg_18h;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack24 = 0;\n    uVar1 = *(arg_ch + 8);\n    uStack20 = 0xffffffff;\n    if (uVar1 != 0) {\n        fcn.004084a6();\n        uStack24 = fcn.00403bcf();\n    }\n    uVar2 = 0xffffffff;\n    if (1 < uVar1) {\n        uVar2 = fcn.0040cdb4();\n    }\n    if (2 < uVar1) {\n        uStack20 = fcn.0040cdb4();\n    }\n    if (uVar1 < 4) {\n        arg_18h = 0xffffffff;\n    }\n    else {\n        arg_18h = fcn.0040cdb4();\n    }\n    if (arg_8h == 0) {\n        arg_8h_00 = 0;\n    }\n    else {\n        if (arg_8h != 1) goto code_r0x00465f26;\n        arg_18h = 0;\n        arg_8h_00 = 1;\n    }\n    uVar2 = fcn.004454e0(arg_8h_00, uStack24, uVar2, uStack20, arg_18h);\n    fcn.00412570();\n    *arg_10h = uVar2;\n    arg_10h[3] = 1;\ncode_r0x00465f26:\n    iVar3 = fcn.0040cdb4();\n    if (iVar3 == 0) {\n        fcn.0044d7e4(1, 0);\n    }\n    fcn.0042017e(uStack24);\n    return 0;\n}\n",
        "token_count": 453
    },
    "004667cd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004667cd(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t aiStack36 [2];\n    uint uStack28;\n    uint uStack24;\n    \n    cVar1 = fcn.00465f56(arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n    }\n    else {\n        cVar1 = fcn.0043e278(&iStack44, 1);\n        if (cVar1 == '\\x01') {\n            fcn.00403320(arg_ch, 1);\n            uStack28 = 0;\n            uStack24 = 1;\n            fcn.00412320(arg_ch, aiStack36, 1);\n            fcn.00412570();\n            uStack28 = 0;\n            uStack24 = 1;\n            fcn.00412320(arg_ch, aiStack36, 1);\n            fcn.00412570();\n            aiStack36[0] = iStack44 - unaff_ESI;\n            uStack28 = 0;\n            uStack24 = 1;\n            fcn.00412320(arg_ch, aiStack36, 1);\n            fcn.00412570();\n            aiStack36[0] = iStack40 - unaff_EBX;\n            uStack28 = 0;\n            uStack24 = 1;\n            fcn.00412320(arg_ch, aiStack36, 1);\n            fcn.00412570();\n            return 0;\n        }\n        fcn.00412570();\n    }\n    arg_ch[3] = 1;\n    *arg_ch = 0;\n    fcn.0044d7e4(1, 0);\n    return 0;\n}\n",
        "token_count": 426
    },
    "004679d6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004679d6(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    fcn.004019ee(arg_8h);\n    iVar3 = fcn.00401dce(1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.0044d7e4(-iVar3, 0);\n        }\n    }\n    else {\n        cVar2 = fcn.0040193b(**(in_ECX + 0x1f8));\n        if (cVar2 == '\\0') {\n            uVar1 = *(arg_8h + 8);\n            iVar3 = 4;\n            if (2 < uVar1) {\n                iVar3 = fcn.0040cdb4();\n            }\n            if (3 < uVar1) {\n                fcn.0040cdb4();\n            }\n            if (iVar3 * 2 + -2 < 2) {\n                return 0;\n            }\n            iVar3 = iVar3 * 2 + -3;\n            do {\n                (*_sym.imp.USER32.dll_FlashWindow)(**(in_ECX + 0x1f8), 1);\n                fcn.00448355();\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            return 0;\n        }\n    }\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 362
    },
    "0046812c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046812c(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    uint unaff_EDI;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = fcn.0042010a(0x10000);\n    fcn.00404bce(uVar1);\n    uVar1 = 0x4b3a80;\n    fcn.0040ca8e(0x4b3a80);\n    fcn.00407e53(0x49dbf0);\n    if (*(arg_8h + 8) == 0) {\n        *(in_ECX + 0x2f4) = 4;\n    }\n    else {\n        iVar2 = **(arg_8h + 4);\n        fcn.004084a6();\n        fcn.00407bef(*(iVar2 + 8));\n        if (1 < *(arg_8h + 8)) {\n            iVar2 = *(*(arg_8h + 4) + 4);\n            fcn.004084a6();\n            fcn.0040c935(*(iVar2 + 8));\n        }\n    }\n    iVar2 = fcn.00401dce(0);\n    if (iVar2 < 0) {\n        fcn.0044d7e4(-iVar2, 0);\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        iVar2 = *(in_ECX + 0x308);\n        *(in_ECX + 0x2f4) = uVar1;\n        iVar6 = iVar2;\n        fcn.00403320(arg_ch, 2);\n        piVar3 = fcn.004114a0(arg_ch, 0, 2);\n        fcn.00412570();\n        piVar3[3] = 1;\n        *piVar3 = iVar2;\n        iVar5 = 1;\n        if (0 < iVar2) {\n            do {\n                iVar2 = iVar5;\n                (*_sym.imp.USER32.dll_GetWindowTextW)(**(*(in_ECX + 0x304) + -4 + iVar5 * 4), unaff_EDI, 0x7fff);\n                fcn.004114a0(arg_ch, 0, 2);\n                fcn.0044a6be(&stack0xffffffdc);\n                puVar4 = fcn.004114a0(arg_ch, 0, 2);\n                uVar1 = **(*(in_ECX + 0x304) + -4 + iVar5 * 4);\n                fcn.00412570();\n                *puVar4 = uVar1;\n                iVar5 = iVar2 + 1;\n                puVar4[3] = 7;\n            } while (iVar5 <= iVar6);\n        }\n    }\n    fcn.00404fd2();\n    return 0;\n}\n",
        "token_count": 688
    },
    "00468dd5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468dd5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(***(*0x4c1884 + arg_8h * 4), 0xf0, 0, 0);\n    if ((iVar4 != 0) || (arg_ch != 0)) {\n        iVar4 = arg_8h;\n        if (2 < arg_8h) {\n            do {\n                puVar1 = **(*0x4c1884 + iVar4 * 4);\n                if ((puVar1 == NULL) || (*(puVar1 + 0x24) != '\\x1a')) break;\n                uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(*puVar1, 0xfffffff0);\n                iVar6 = arg_8h;\n                if ((uVar5 & 0x20000) != 0) goto code_r0x00468e6a;\n                iVar4 = iVar4 + -1;\n            } while (2 < iVar4);\n        }\n        iVar4 = iVar4 + 1;\n        iVar6 = arg_8h;\ncode_r0x00468e6a:\n        do {\n            iVar2 = iVar6;\n            iVar6 = iVar2 + 1;\n            iVar3 = iVar4;\n            if (((*0x4c1894 < iVar6) || (puVar1 = **(*0x4c1884 + iVar6 * 4),  puVar1 == NULL)) ||\n               (*(puVar1 + 0x24) != '\\x1a')) break;\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(*puVar1, 0xfffffff0);\n        } while ((uVar5 & 0x20000) == 0);\n        for (; iVar3 <= iVar2; iVar3 = iVar3 + 1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(***(*0x4c1884 + iVar3 * 4), 0xf1, 0, 0);\n        }\n        if (arg_ch == 1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(***(*0x4c1884 + arg_8h * 4), 0xf1, 1, 0);\n        }\n        else {\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(***(*0x4c1884 + iVar4 * 4), 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(***(*0x4c1884 + iVar4 * 4), 0xfffffff0, uVar5 | 0x10000);\n        }\n    }\n    return;\n}\n",
        "token_count": 654
    },
    "004019ee": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004019ee(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040d89e(**(arg_8h + 4));\n    if (*(arg_8h + 8) < 2) {\n        fcn.00407e53(0x49dbf0);\n    }\n    else {\n        iVar1 = *(*(arg_8h + 4) + 4);\n        fcn.004084a6();\n        fcn.0040c935(*(iVar1 + 8));\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00407cca": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407cca(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_10h;\n    uint var_10h;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    arg_10h = -1;\n    iVar1 = *(*(iVar2 + 8) + 4);\n    iVar2 = fcn.0040cdb4();\n    iVar2 = iVar2 + -1;\n    if (2 < *(arg_8h + 8)) {\n        arg_10h = fcn.0040cdb4();\n    }\n    fcn.0040d3d2();\n    if ((iVar1 < iVar2) || (iVar2 < 0)) {\n        iVar2 = iVar1;\n    }\n    if ((arg_10h < 0) || (iVar1 - iVar2 < arg_10h)) {\n        arg_10h = iVar1 - iVar2;\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    fcn.00407f40(*(iVar1 + 8), iVar2, arg_10h);\n    fcn.00407bef(&var_10h);\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 306
    },
    "0040a51a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a51a(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t unaff_EDI;\n    uint uVar5;\n    uchar *arg_8h_00;\n    int32_t iVar6;\n    int32_t iStack36;\n    uint uStack32;\n    \n    uStack32 = 0;\n    fcn.0040ca8e(0x49dbf0);\n    if (*(arg_8h + 8) == 2) {\n        iStack36 = fcn.0040cdb4();\n        if (iStack36 == -1) {\n            iStack36 = 0x7fffffff;\n        }\n        else if (iStack36 < 1) goto code_r0x00476a17;\n    }\n    iVar6 = 4;\n    uVar5 = **(arg_8h + 4);\n    cVar2 = fcn.0040d2c0(4);\n    if (cVar2 == '\\0') {\n        arg_8h_00 = &stack0xffffffdc;\n        cVar2 = fcn.0041f0f3(arg_8h_00, uVar5, 0);\n        if (cVar2 == '\\0') goto code_r0x00476a17;\n        iVar4 = *(**(*(in_ECX + 0x198) + unaff_EDI * 4) + 4);\n    }\n    else {\n        iVar4 = fcn.0042010a(0x38);\n        if (iVar4 == 0) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = fcn.00405080();\n        }\n        iVar1 = **(arg_8h + 4);\n        fcn.004084a6();\n        arg_8h_00 = 0x40a5b3;\n        cVar2 = fcn.00404bf9(*(iVar1 + 8), 0x2000);\n        if (cVar2 == '\\0') {\n            if (iVar4 != 0) {\n                fcn.00404592(extraout_ECX);\n            }\ncode_r0x00476a17:\n            fcn.0044d7e4(1, 0);\n            return 0;\n        }\n    }\n    uVar5 = 0;\n    fcn.00407b6e(0x400);\n    if (iVar6 == 0) {\n        cVar2 = fcn.0040a666(&stack0xffffffd0);\n        if (cVar2 == '\\0') {\n            fcn.0044d7e4(0xffffffff, 0);\n            cVar2 = '\\x01';\n            goto code_r0x0040a610;\n        }\n    }\n    else {\n        fcn.00404dd9();\n        if (0 < iVar6) {\n            do {\n                cVar3 = fcn.0040a666(&stack0xffffffc8);\n                cVar2 = uVar5 >> 0x18;\n                if (cVar3 == '\\0') {\n                    if (iVar6 == 0x7fffffff) break;\n                    fcn.0044d7e4(0xffffffff, 0);\n                }\n                cVar2 = uVar5 >> 0x18;\n                arg_8h_00 = arg_8h_00 + 1;\n            } while (arg_8h_00 < iVar6);\ncode_r0x0040a610:\n            if (cVar2 != '\\0') goto code_r0x0040a621;\n        }\n    }\n    fcn.00407bef(&stack0xffffffc4);\ncode_r0x0040a621:\n    cVar2 = fcn.0040d2c0(4);\n    if (cVar2 != '\\0') {\n        fcn.004050ec();\n        *(iVar4 + 0x2c) = 0;\n        *(iVar4 + 0x30) = 0;\n        fcn.00404592(extraout_ECX_00);\n    }\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 956
    },
    "0040b875": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b875(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t extraout_ECX;\n    uint32_t extraout_EDX;\n    \n    if (*(arg_8h + 8) != 0) {\n        iVar2 = *(arg_8h + 4);\n        cVar3 = fcn.0040b911();\n        if (cVar3 == '\\0') {\n            if (*(extraout_ECX + 8) != 5) {\n                return 0xffffffff;\n            }\n            if (extraout_EDX < 3) {\n                return 0xffffffff;\n            }\n            iVar1 = *(*(iVar2 + -8 + extraout_EDX * 4) + 8);\n            iVar4 = *(*(iVar2 + -0xc + extraout_EDX * 4) + 8);\n            if (((iVar1 == 0x49) || (iVar1 == 0x4a)) || (iVar1 == 0x4c)) {\n                if (extraout_EDX < 4) {\n                    return 0xffffffff;\n                }\n                if ((iVar4 != 0) && (iVar4 != 0x30)) {\n                    return 0xffffffff;\n                }\n                iVar4 = *(*(iVar2 + -0x10 + extraout_EDX * 4) + 8);\n            }\n            else if ((iVar1 != 0) && (iVar1 != 0x30)) {\n                return 0xffffffff;\n            }\n            if ((iVar4 != 0) && (iVar4 != 0x30)) {\n                return 0xffffffff;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 389
    },
    "0040ccef": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ccef(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar2;\n    uint arg_10h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = 0xffffffff;\n    uVar2 = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_ch = 0xffffffff;\n    var_8h = 0xffffffff;\n    var_4h = 0xffffffff;\n    iVar1 = fcn.0040cdb4();\n    if (iVar1 < 1) {\n        fcn.00412570();\n        *arg_ch = 0;\n    }\n    else {\n        if (7 < *(arg_8h + 8)) {\n            var_4h = fcn.0040cdb4();\n        }\n        if (6 < *(arg_8h + 8)) {\n            var_8h = fcn.0040cdb4();\n        }\n        if (5 < *(arg_8h + 8)) {\n            var_ch = fcn.0040cdb4();\n        }\n        if (4 < *(arg_8h + 8)) {\n            var_10h = fcn.0040cdb4();\n        }\n        if (3 < *(arg_8h + 8)) {\n            uVar2 = fcn.0040cdb4();\n        }\n        if (2 < *(arg_8h + 8)) {\n            arg_10h = fcn.0040cdb4();\n        }\n        arg_ch_00 = fcn.0040cdb4();\n        arg_8h_00 = fcn.0040cdb4();\n        uVar2 = fcn.0040ce0e(arg_8h_00, arg_ch_00, arg_10h, uVar2, var_10h, var_ch, var_8h, var_4h);\n        fcn.00412570();\n        *arg_ch = uVar2;\n    }\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 488
    },
    "0041ce7b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ce7b(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint *puVar4;\n    uint uVar5;\n    uint var_34h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(*(arg_8h + 4) + 4);\n    uVar5 = 0;\n    cVar1 = fcn.0040d2c0(0xe);\n    if (cVar1 != '\\0') {\n        puVar4 = fcn.0044afce(&var_34h);\n    }\n    else {\n        fcn.004084a6();\n        puVar4 = *(var_4h + 8);\n        var_24h = *puVar4;\n        var_20h = puVar4[1];\n        var_1ch = puVar4[2];\n        var_18h = puVar4[3];\n        *var_18h = *var_18h + 1;\n        puVar4 = &var_24h;\n    }\n    var_14h = *puVar4;\n    var_10h = puVar4[1];\n    var_ch = puVar4[2];\n    var_8h = puVar4[3];\n    *var_8h = *var_8h + 1;\n    if (cVar1 != '\\0') {\n        fcn.00405cd3();\n    }\n    else {\n        fcn.00405cd3();\n    }\n    iVar2 = fcn.0041cf79(&var_14h);\n    if (iVar2 == 0) {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.0044d7e4(1, 0);\n        uVar5 = 0xffffffff;\n    }\n    else {\n        uVar3 = 0;\n        if (2 < *(arg_8h + 8)) {\n            uVar3 = fcn.0044be63();\n        }\n        puVar4 = &var_14h;\n        arg_8h_00 = fcn.0040cdb4();\n        uVar3 = fcn.0041cfad(arg_8h_00, puVar4, uVar3);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = uVar3;\n    }\n    fcn.00405cd3();\n    return uVar5;\n}\n",
        "token_count": 640
    },
    "0041d7c7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d7c7(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_10h;\n    uint uVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    uint16_t *puVar7;\n    uint32_t uVar8;\n    uchar *arg_8h_00;\n    int32_t unaff_EDI;\n    float10 fVar9;\n    uchar *arg_8h_01;\n    char16_t *pcVar10;\n    uchar *puStack164;\n    int32_t **ppiStack160;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uchar *puStack140;\n    int32_t iStack136;\n    int32_t iStack128;\n    int32_t iStack120;\n    \n    iStack136 = *(arg_8h + 8);\n    fcn.00407b6e(0x400);\n    uVar4 = fcn.0042010a(0x20000);\n    fcn.00404bce(uVar4);\n    uVar4 = fcn.0042010a(0x20000);\n    fcn.00404bce(uVar4);\n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    iVar2 = *(iVar2 + 8);\n    fcn.0040d3d2();\n    fcn.00407d70();\n    pcVar10 = L\"\\\\\\\\[\\\\\\\\nrt]|%%|%[-+ 0#]?([0-9]*|\\\\*)?(\\\\.[0-9]*|\\\\.\\\\*)?[hlL]?[diouxXeEfgGs]\";\n    fcn.0040caee(L\"\\\\\\\\[\\\\\\\\nrt]|%%|%[-+ 0#]?([0-9]*|\\\\*)?(\\\\.[0-9]*|\\\\.\\\\*)?[hlL]?[diouxXeEfgGs]\");\n    arg_8h_01 = &stack0xffffff70;\n    fcn.00405be9(arg_8h_01);\n    fcn.00405cd3();\n    fcn.00407e36(iVar2);\n    arg_8h_00 = NULL;\n    iStack136 = iStack136 + -1;\n    uStack152 = 0x49dc3c;\n    uStack148 = 0;\n    uStack144 = 0;\n    puStack140 = NULL;\n    if (0 < *(iVar2 + 4)) {\n        do {\n            iVar5 = fcn.0041ddb6(arg_8h_00, &stack0xffffff68);\n            if (iVar5 < 1) break;\n            iVar3 = **ppiStack160;\n            fcn.0040bbd9(iVar2, arg_8h_00, iVar3 - arg_8h_00);\n            arg_8h_00 = arg_8h_01 + iVar3;\n            iVar5 = iVar3;\n            piVar6 = fcn.0041db6f(iVar3);\n            if (*piVar6 == 0x25) {\n                iVar5 = iVar3 + 1;\n                piVar6 = fcn.0041db6f(iVar5);\n                if (*piVar6 != 0x25) goto code_r0x0041d8f5;\n                uVar4 = 0x25;\ncode_r0x0047d28c:\n                fcn.0040bd2f(uVar4);\n            }\n            else {\ncode_r0x0041d8f5:\n                piVar6 = fcn.0041db6f(iVar3);\n                arg_8h_01 = 0x5c;\n                if (*piVar6 == 0x5c) {\n                    piVar6 = fcn.0041db6f(0x47d2a5);\n                    iVar1 = *piVar6;\n                    uVar4 = 0x5c;\n                    if (iVar1 != 0x5c) {\n                        if (iVar1 == 0x6e) {\n                            uVar4 = 10;\n                        }\n                        else if (iVar1 == 0x72) {\n                            uVar4 = 0xd;\n                        }\n                        else {\n                            if (iVar1 != 0x74) goto code_r0x0041d9a4;\n                            uVar4 = 9;\n                        }\n                    }\n                    goto code_r0x0047d28c;\n                }\n                if (unaff_EDI != iStack128) {\n                    unaff_EDI = unaff_EDI + 1;\n                    arg_8h_01 = puStack164;\n                    fcn.00407f40(iVar2, iVar3, puStack164);\n                    puVar7 = fcn.0040a4f6(iStack128 + -1);\n                    uVar8 = *puVar7;\n                    if (uVar8 < 0x6a) {\n                        if (uVar8 == 0x69) {\ncode_r0x0047d2e5:\n                            uVar4 = fcn.0040cdb4();\n                            fcn.0042234b(iVar5, iStack136, uVar4);\n                        }\n                        else {\n                            if ((uVar8 != 0x45) && (uVar8 != 0x47)) {\n                                if ((uVar8 == 0x58) || (uVar8 == 100)) goto code_r0x0047d2e5;\n                                if (2 < uVar8 - 0x65) goto code_r0x0041d997;\n                            }\n                            fVar9 = fcn.00412620();\n                            fcn.0042234b(iVar5, iStack136, SUB84(fVar9, 0));\n                        }\n                    }\n                    else {\n                        if (uVar8 == 0x6f) goto code_r0x0047d2e5;\n                        if (uVar8 == 0x73) {\n                            iVar3 = *(*(arg_8h + 4) + pcVar10 * 4);\n                            fcn.004084a6();\n                            arg_10h = iStack120;\n                            fcn.00422c1d(iStack120, **(iVar3 + 8), 0xffff);\n                            *(arg_10h + 0x1fffe) = 0;\n                            fcn.0042234b(iVar5, iStack136, arg_10h);\n                            arg_8h_00 = puStack140;\n                        }\n                        else if ((uVar8 == 0x75) || (uVar8 == 0x78)) goto code_r0x0047d2e5;\n                    }\ncode_r0x0041d997:\n                    fcn.004039e8(iVar5);\n                }\n            }\ncode_r0x0041d9a4:\n        } while (arg_8h_00 < *(iVar2 + 4));\n        if (arg_8h_00 < *(iVar2 + 4)) {\n            fcn.0040bbd9(iVar2, arg_8h_00, 0xffffffff);\n        }\n    }\n    fcn.00407bef(&stack0xffffff58);\n    fcn.004404e2();\n    fcn.00405cbb();\n    fcn.00405cd3();\n    fcn.00404fd2();\n    fcn.00404fd2();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1671
    },
    "0041ef0d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ef0d(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint var_18h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0040ca8e(0x49dbf0);\n    uVar4 = **(arg_8h + 4);\n    cVar1 = fcn.0040d2c0(4);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0041f0f3(&fcn.0041ef0d::var_8h, uVar4, 0);\n        if (cVar1 == '\\0') {\ncode_r0x00476947:\n            fcn.0044d7e4(1, 0);\n            return 0;\n        }\n        iVar2 = *(**(*(in_ECX + 0x198) + var_8h * 4) + 4);\n    }\n    else {\n        iVar2 = fcn.0042010a(0x38);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.00405080();\n        }\n        iVar3 = **(arg_8h + 4);\n        fcn.004084a6();\n        cVar1 = fcn.00404bf9(*(iVar3 + 8), 0x2000);\n        if (cVar1 == '\\0') {\n            if (iVar2 != 0) {\n                fcn.00404592(extraout_ECX_00);\n            }\n            goto code_r0x00476947;\n        }\n    }\n    if ((*(arg_8h + 8) < 2) || (iVar3 = fcn.0040cdb4(),  iVar3 < 0)) {\n        var_4h = fcn.0041f03e();\n    }\n    else {\n        var_4h = fcn.0040cdb4();\n    }\n    if ((*(iVar2 + 0x28) & 0x10) == 0) {\n        fcn.0040d3d2();\n        cVar1 = fcn.0041f04e(&fcn.0041ef0d::var_18h, &fcn.0041ef0d::var_4h);\n        if (cVar1 == '\\0') {\n            fcn.0044d7e4(0xffffffff, 0);\n        }\n        else {\n            fcn.00407bef(&fcn.0041ef0d::var_18h);\n            fcn.00407ba9(var_4h, 0);\n        }\n        fcn.00405cd3();\n    }\n    else {\n        var_8h = fcn.0042010a(var_4h);\n        if ((var_4h == 0) || (cVar1 = fcn.00403d65(var_8h, &fcn.0041ef0d::var_4h),  cVar1 != '\\0')) {\n            uVar4 = fcn.0044ad14(var_4h);\n            fcn.0041faa0(uVar4, var_8h, var_4h);\n            fcn.00407ba9(0x4769df, 0);\n        }\n        else {\n            fcn.0044d7e4(0xffffffff, 0);\n        }\n        fcn.0042017e(var_8h);\n    }\n    cVar1 = fcn.0040d2c0(4);\n    if (cVar1 != '\\0') {\n        fcn.004050ec();\n        *(iVar2 + 0x2c) = 0;\n        *(iVar2 + 0x30) = 0;\n        fcn.00404592(extraout_ECX);\n    }\n    return 0;\n}\n",
        "token_count": 908
    },
    "00436a28": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00436a28(uint *arg_8h, uint32_t *arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint uVar12;\n    int32_t *piVar13;\n    uint8_t uVar14;\n    int32_t iVar15;\n    bool bVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    int32_t hObject;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint8_t var_3h;\n    uint var_2h;\n    \n    bVar16 = (arg_14h & 0x80) == 0;\n    var_20h = 0;\n    var_2h._0_1_ = 0;\n    var_38h = 0xc;\n    var_34h = 0;\n    if (bVar16) {\n        var_2h._1_1_ = 0;\n    }\n    else {\n        var_2h._1_1_ = 0x10;\n    }\n    var_30h = bVar16;\n    iVar7 = fcn.004233cb(&var_20h);\n    if (iVar7 != 0) {\n        fcn.00427ab0(0, 0, 0, 0, 0);\n        pcVar2 = swi(3);\n        uVar12 = (*pcVar2)();\n        return uVar12;\n    }\n    if (((arg_14h & 0x8000) == 0) && (((arg_14h & 0x74000) != 0 || (var_20h != 0x8000)))) {\n        var_2h._1_1_ = var_2h._1_1_ | 0x80;\n    }\n    uVar8 = arg_14h & 3;\n    if (uVar8 == 0) {\n        var_8h = 0x80000000;\n    }\n    else if (uVar8 == 1) {\n        if (((arg_14h & 8) == 0) || ((arg_14h & 0x70000) == 0)) {\n            var_8h = 0x40000000;\n        }\n        else {\n            var_8h = 0xc0000000;\n        }\n    }\n    else {\n        if (uVar8 != 2) {\n            puVar9 = fcn.0042886a();\n            *puVar9 = 0;\n            *arg_ch = 0xffffffff;\n            puVar9 = fcn.0042889e();\n            *puVar9 = 0x16;\n            fcn.00427aa0();\n            return 0x16;\n        }\n        var_8h = 0xc0000000;\n    }\n    uVar8 = 2;\n    var_28h = 2;\n    if (arg_18h == 0x10) {\n        var_ch = 0;\n    }\n    else if (arg_18h == 0x20) {\n        var_ch = 1;\n    }\n    else if (arg_18h == 0x30) {\n        var_ch = 2;\n    }\n    else if (arg_18h == 0x40) {\n        var_ch = 3;\n    }\n    else {\n        if (arg_18h != 0x80) goto code_r0x00436b7f;\n        var_ch = var_8h == 0x80000000;\n    }\n    uVar10 = arg_14h & 0x700;\n    if (uVar10 < 0x401) {\n        if ((uVar10 == 0x400) || (uVar10 == 0)) {\n            uVar8 = 3;\n        }\n        else if (uVar10 == 0x100) {\n            uVar8 = 4;\n        }\n        else {\n            if (uVar10 == 0x200) goto code_r0x00436ba0;\n            if (uVar10 != 0x300) goto code_r0x00436b7f;\n        }\n    }\n    else {\n        if (uVar10 != 0x500) {\n            if (uVar10 == 0x600) {\ncode_r0x00436ba0:\n                uVar8 = 5;\n                goto code_r0x00436ba7;\n            }\n            if (uVar10 != 0x700) {\ncode_r0x00436b7f:\n                puVar9 = fcn.0042886a();\n                *puVar9 = 0;\n                *arg_ch = 0xffffffff;\n                puVar9 = fcn.0042889e();\n                *puVar9 = 0x16;\n                fcn.00427aa0();\n                return 0x16;\n            }\n        }\n        uVar8 = 1;\n    }\ncode_r0x00436ba7:\n    uVar10 = 0x80;\n    var_18h = 0x80;\n    var_10h = 0;\n    if (((arg_14h & 0x100) != 0) && (-1 < (~*0x4c0100 & arg_1ch))) {\n        uVar10 = 1;\n        var_18h = 1;\n    }\n    uVar11 = 0;\n    if ((arg_14h & 0x40) != 0) {\n        var_8h = var_8h | 0x10000;\n        var_ch = var_ch | 4;\n        uVar11 = 0x4000000;\n        var_10h = 0x4000000;\n    }\n    if ((arg_14h & 0x1000) != 0) {\n        var_18h = uVar10 | 0x100;\n    }\n    if ((arg_14h & 0x2000) != 0) {\n        uVar11 = uVar11 | 0x2000000;\n        var_10h = uVar11;\n    }\n    if ((arg_14h & 0x20) == 0) {\n        if ((arg_14h & 0x10) != 0) {\n            var_10h = uVar11 | 0x10000000;\n        }\n    }\n    else {\n        var_10h = uVar11 | 0x8000000;\n    }\n    uVar10 = fcn.0042b72c();\n    *arg_ch = uVar10;\n    if (uVar10 == 0xffffffff) {\n        puVar9 = fcn.0042886a();\n        *puVar9 = 0;\n        *arg_ch = 0xffffffff;\n        puVar9 = fcn.0042889e();\n        *puVar9 = 0x18;\n        puVar9 = fcn.0042889e();\n        return *puVar9;\n    }\n    *arg_8h = 1;\n    hObject = fcn.004368d0(arg_10h, var_8h, var_ch, &var_38h, uVar8, var_18h, var_10h);\n    if (hObject == -1) {\n        if (((var_8h & 0xc0000000) == 0xc0000000) && ((arg_14h & 1) != 0)) {\n            var_8h = var_8h & 0x7fffffff;\n            hObject = fcn.004368d0(arg_10h, var_8h, var_ch, &var_38h, uVar8, var_18h, var_10h);\n            if (hObject != -1) goto code_r0x00436cf6;\n        }\n        puVar1 = *((*arg_ch >> 5) * 4 + 0x4c0940) + 4 + (*arg_ch & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n        uVar12 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.0042887d(uVar12);\n        uVar17 = CONCAT44(var_14h, var_2ch);\n        goto code_r0x00436cea;\n    }\ncode_r0x00436cf6:\n    iVar7 = (*_sym.imp.KERNEL32.dll_GetFileType)(hObject);\n    if (iVar7 == 0) {\n        puVar1 = *((*arg_ch >> 5) * 4 + 0x4c0940) + 4 + (*arg_ch & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n        iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.0042887d(iVar7);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        uVar17 = CONCAT44(var_14h, var_2ch);\n        if (iVar7 == 0) {\n            puVar9 = fcn.0042889e();\n            uVar17 = CONCAT44(var_14h, var_2ch);\n            *puVar9 = 0xd;\n        }\n        goto code_r0x00436cea;\n    }\n    if (iVar7 == 2) {\n        var_2h._1_1_ = var_2h._1_1_ | 0x40;\n    }\n    else if (iVar7 == 3) {\n        var_2h._1_1_ = var_2h._1_1_ | 8;\n    }\n    fcn.0042b9be(*arg_ch, hObject);\n    uVar14 = var_2h._1_1_ | 1;\n    *(*((*arg_ch >> 5) * 4 + 0x4c0940) + 4 + (*arg_ch & 0x1f) * 0x40) = uVar14;\n    puVar1 = *((*arg_ch >> 5) * 4 + 0x4c0940) + 0x24 + (*arg_ch & 0x1f) * 0x40;\n    *puVar1 = *puVar1 & 0x80;\n    var_3h = var_2h._1_1_ & 0x48;\n    var_2h._1_1_ = uVar14;\n    uVar17 = CONCAT44(var_14h, var_2ch);\n    if (var_3h == 0) {\n        uVar17 = CONCAT44(var_14h, var_2ch);\n        if (-1 < uVar14) goto code_r0x00437067;\n        if ((arg_14h & 2) == 0) goto code_r0x00436e43;\n        uVar17 = fcn.004305df(*arg_ch, 0xffffffff, 0xffffffff, 2);\n        if (uVar17 == 0xffffffffffffffff) {\n            piVar13 = fcn.0042886a();\n            var_14h = uVar17 >> 0x20;\n            var_2ch = uVar17;\n            if (*piVar13 == 0x83) goto code_r0x00436e43;\n        }\n        else {\n            var_24h = 0;\n            iVar7 = fcn.0042fbbf(*arg_ch, &var_24h, 1);\n            var_14h = uVar17 >> 0x20;\n            var_2ch = uVar17;\n            if ((iVar7 == 0) && (var_24h == 0x1a)) {\n                iVar7 = fcn.00437cf0(*arg_ch, var_2ch, var_14h);\n                var_14h = uVar17 >> 0x20;\n                var_2ch = uVar17;\n                if (iVar7 == -1) goto code_r0x00436dea;\n            }\n            iVar18 = fcn.004305df(*arg_ch, 0, 0, 0);\n            var_14h = uVar17 >> 0x20;\n            var_2ch = uVar17;\n            if (iVar18 != -1) goto code_r0x00436e43;\n        }\ncode_r0x00436dea:\n        fcn.0042f84c(*arg_ch);\n        var_14h = uVar17 >> 0x20;\n        var_2ch = uVar17;\n    }\n    else {\ncode_r0x00436e43:\n        var_2ch = uVar17;\n        if (var_2h._1_1_ < '\\0') {\n            if ((arg_14h & 0x74000) == 0) {\n                if ((var_20h & 0x74000) == 0) {\n                    arg_14h = arg_14h | 0x4000;\n                }\n                else {\n                    arg_14h = arg_14h | var_20h & 0x74000;\n                }\n            }\n            uVar10 = arg_14h & 0x74000;\n            if (uVar10 == 0x4000) {\n                var_2h._0_1_ = 0;\n            }\n            else if ((uVar10 == 0x10000) || (uVar10 == 0x14000)) {\n                if ((arg_14h & 0x301) == 0x301) goto code_r0x00436eb6;\n            }\n            else if ((uVar10 == 0x20000) || (uVar10 == 0x24000)) {\ncode_r0x00436eb6:\n                var_2h._0_1_ = 2;\n            }\n            else if ((uVar10 == 0x40000) || (uVar10 == 0x44000)) {\n                var_2h._0_1_ = 1;\n            }\n            if ((arg_14h & 0x70000) != 0) {\n                var_14h = 0;\n                uVar6 = uVar17 & 0xffffffff;\n                uVar5 = uVar17 & 0xffffffff;\n                uVar4 = uVar17 & 0xffffffff;\n                uVar3 = uVar17 & 0xffffffff;\n                uVar17 = uVar17 & 0xffffffff;\n                if ((var_2h._1_1_ & 0x40) == 0) {\n                    uVar10 = var_8h & 0xc0000000;\n                    if (uVar10 == 0x40000000) {\n                        uVar17 = uVar5;\n                        if (uVar8 != 0) {\n                            if (2 < uVar8) {\n                                if (uVar8 < 5) {\n                                    iVar18 = fcn.004305df(*arg_ch, 0, 0, 2);\n                                    if (iVar18 != 0) goto code_r0x00437002;\n                                }\n                                else {\ncode_r0x00436f13:\n                                    uVar17 = uVar6;\n                                    if (uVar8 != 5) goto code_r0x00437067;\n                                }\n                            }\ncode_r0x0043701e:\n                            iVar7 = 0;\n                            if (var_2h == 1) {\n                                iVar15 = 3;\n                                var_14h = 0xbfbbef;\n                                var_28h = 3;\n                            }\n                            else {\n                                uVar17 = CONCAT44(var_14h, var_2ch);\n                                if (var_2h != 2) goto code_r0x00437067;\n                                var_14h = 0xfeff;\n                                iVar15 = 2;\n                            }\n                            do {\n                                iVar15 = fcn.0042bd14(*arg_ch, &var_14h + iVar7, iVar15 - iVar7);\n                                uVar17 = CONCAT44(var_14h, var_2ch);\n                                if (iVar15 == -1) goto code_r0x00436dea;\n                                iVar7 = iVar7 + iVar15;\n                                iVar15 = var_28h;\n                            } while (iVar7 < var_28h);\n                        }\n                    }\n                    else if (uVar10 == 0x80000000) {\ncode_r0x00436f4e:\n                        iVar7 = fcn.0042fbbf(*arg_ch, &var_14h, 3);\n                        uVar17 = CONCAT44(var_14h, var_2ch);\n                        if (iVar7 == -1) goto code_r0x00436dea;\n                        if (iVar7 == 2) {\ncode_r0x00436f8b:\n                            if ((var_14h & 0xffff) == 0xfffe) {\n                                fcn.0042f84c(*arg_ch);\n                                puVar9 = fcn.0042889e();\n                                *puVar9 = 0x16;\n                                return 0x16;\n                            }\n                            if ((var_14h & 0xffff) == 0xfeff) {\n                                iVar18 = fcn.004305df(*arg_ch, 2, 0, 0);\n                                uVar17 = CONCAT44(var_14h, var_2ch);\n                                if (iVar18 == -1) goto code_r0x00436dea;\n                                var_2h._0_1_ = 2;\n                                goto code_r0x00437067;\n                            }\n                        }\n                        else if (iVar7 == 3) {\n                            if (var_14h == 0xbfbbef) {\n                                var_2h._0_1_ = 1;\n                                goto code_r0x00437067;\n                            }\n                            goto code_r0x00436f8b;\n                        }\ncode_r0x00437002:\n                        iVar18 = fcn.004305df(*arg_ch, 0, 0, 0);\n                        uVar17 = CONCAT44(var_14h, var_2ch);\n                        if (iVar18 == -1) goto code_r0x00436dea;\n                    }\n                    else {\n                        uVar17 = uVar3;\n                        if ((uVar10 == 0xc0000000) && (uVar17 = uVar4,  uVar8 != 0)) {\n                            if (2 < uVar8) {\n                                if (4 < uVar8) goto code_r0x00436f13;\n                                iVar18 = fcn.004305df(*arg_ch, 0, 0, 2);\n                                if (iVar18 != 0) {\n                                    iVar18 = fcn.004305df(*arg_ch, 0, 0, 0);\n                                    uVar17 = CONCAT44(var_14h, var_2ch);\n                                    if (iVar18 == -1) goto code_r0x00436dea;\n                                    goto code_r0x00436f4e;\n                                }\n                            }\n                            goto code_r0x0043701e;\n                        }\n                    }\n                }\n            }\n        }\ncode_r0x00437067:\n        uVar8 = var_8h;\n        iVar7 = *((*arg_ch >> 5) * 4 + 0x4c0940);\n        iVar15 = (*arg_ch & 0x1f) * 0x40;\n        puVar1 = iVar7 + 0x24 + iVar15;\n        *puVar1 = *puVar1 ^ (*(iVar7 + 0x24 + iVar15) ^ var_2h) & 0x7f;\n        iVar7 = *((*arg_ch >> 5) * 4 + 0x4c0940);\n        iVar15 = (*arg_ch & 0x1f) * 0x40;\n        *(iVar7 + 0x24 + iVar15) = (arg_14h >> 0x10) << 7 | *(iVar7 + 0x24 + iVar15) & 0x7f;\n        if ((var_3h == 0) && ((arg_14h & 8) != 0)) {\n            puVar1 = *((*arg_ch >> 5) * 4 + 0x4c0940) + 4 + (*arg_ch & 0x1f) * 0x40;\n            *puVar1 = *puVar1 | 0x20;\n        }\n        if ((var_8h & 0xc0000000) != 0xc0000000) {\n            return 0;\n        }\n        if ((arg_14h & 1) == 0) {\n            return 0;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        var_14h = uVar17 >> 0x20;\n        var_2ch = uVar17;\n        iVar7 = fcn.004368d0(arg_10h, uVar8 & 0x7fffffff, var_ch, &var_38h, 3, var_18h, var_10h);\n        var_14h = uVar17 >> 0x20;\n        var_2ch = uVar17;\n        if (iVar7 != -1) {\n            *((*arg_ch & 0x1f) * 0x40 + *((*arg_ch >> 5) * 4 + 0x4c0940)) = iVar7;\n            return 0;\n        }\n        uVar12 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        var_14h = uVar17 >> 0x20;\n        var_2ch = uVar17;\n        fcn.0042887d(uVar12);\n        var_14h = uVar17 >> 0x20;\n        var_2ch = uVar17;\n        puVar1 = *((*arg_ch >> 5) * 4 + 0x4c0940) + 4 + (*arg_ch & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n        fcn.0042b8d1(*arg_ch);\n        var_14h = uVar17 >> 0x20;\n        var_2ch = uVar17;\n    }\ncode_r0x00436cea:\n    puVar9 = fcn.0042889e();\n    var_14h = uVar17 >> 0x20;\n    var_2ch = uVar17;\n    return *puVar9;\n}\n",
        "token_count": 5158
    },
    "0043b593": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043b593(uint hObj, uint32_t pDestinationSid, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint32_t uVar5;\n    uint in_ECX;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint32_t pAclInformation;\n    uint var_2ch;\n    uint lpbDaclDefaulted;\n    int32_t pAceList;\n    int32_t lpbDaclPresent;\n    uint var_18h;\n    uint pSIRequested;\n    uint pSecurityDescriptor;\n    uint32_t var_ch;\n    uint pSID;\n    int32_t pDacl;\n    \n    uVar7 = 0;\n    pSecurityDescriptor = 0;\n    pSID = 0;\n    var_ch = 0;\n    pSIRequested = 4;\n    cVar1 = fcn.0043b8e7(&pSecurityDescriptor, in_ECX, &var_18h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0043b982(var_18h);\n        if (cVar1 != '\\0') {\n            pDacl = 0;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_GetSecurityDescriptorDacl)\n                              (pSecurityDescriptor, &lpbDaclPresent, &pDacl, &lpbDaclDefaulted);\n            if (iVar2 != 0) {\n                fcn.00421970(&pAclInformation, 0, 0xc);\n                var_2ch = 8;\n                if (pDacl != 0) {\n                    iVar2 = (*_sym.imp.ADVAPI32.dll_GetAclInformation)(pDacl, &pAclInformation, 0xc, 2);\n                    if (iVar2 == 0) goto code_r0x0043b767;\n                }\n                (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid);\n                cVar1 = fcn.0043b94e(var_2ch);\n                uVar5 = var_ch;\n                if (cVar1 != '\\0') {\n                    if ((lpbDaclPresent != 0) && (pAclInformation != 0)) {\n                        var_ch = 0;\n                        do {\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_GetAce)(pDacl, var_ch, &pAceList);\n                            if (iVar2 == 0) goto code_r0x0043b767;\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_AddAce)(uVar5, 2, 0xffffffff, pAceList, *(pAceList + 2));\n                            if (iVar2 == 0) goto code_r0x0043b767;\n                            var_ch = var_ch + 1;\n                        } while (var_ch < pAclInformation);\n                    }\n                    pAceList = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid);\n                    pAceList = pAceList + 8;\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, pAceList);\n                    puVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar3);\n                    if (puVar4 != NULL) {\n                        *(puVar4 + 2) = pAceList;\n                        uVar3 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid, puVar4 + 8, pDestinationSid);\n                        iVar2 = (*_sym.imp.ADVAPI32.dll_CopySid)(uVar3);\n                        if (iVar2 != 0) {\n                            puVar6 = arg_10h + 4;\n                            pDestinationSid = 0;\n                            do {\n                                *puVar4 = *(puVar6 + -1);\n                                puVar4[1] = *(puVar6 + -3);\n                                *(puVar4 + 4) = *puVar6;\n                                iVar2 = (*_sym.imp.ADVAPI32.dll_AddAce)(uVar5, 2, 0xffffffff, puVar4, *(puVar4 + 2));\n                                if (iVar2 == 0) goto code_r0x0043b767;\n                                pDestinationSid = pDestinationSid + 1;\n                                puVar6 = puVar6 + 3;\n                            } while (pDestinationSid < 2);\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(pSID, 1, uVar5, 0);\n                            if (iVar2 != 0) {\n                                iVar2 = (*_sym.imp.USER32.dll_SetUserObjectSecurity)(hObj, &pSIRequested, pSID);\n                                if (iVar2 != 0) {\n                                    uVar7 = 1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0043b767:\n    fcn.0043b850();\n    fcn.0043b850();\n    fcn.0043b850();\n    uVar5 = fcn.0043b850();\n    return uVar5 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 1148
    },
    "0044649b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044649b(ushort *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if ((*(in_ECX + 0x2c) & 2) == 0) {\n        iVar1 = fcn.00404ca0(arg_8h, 2);\n        if (iVar1 == 2) {\n            return 1;\n        }\n    }\n    else {\n        var_4h = in_ECX;\n        iVar1 = fcn.00404ca0(&var_4h, 2);\n        if (iVar1 == 2) {\n            *arg_8h = CONCAT31(var_4h, var_4h._1_1_);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 187
    },
    "00446d6d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nchar fcn.00446d6d(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_8h;\n    ushort *puVar4;\n    uint lpPathName;\n    \n    fcn.00403b1e(0x104);\n    iVar2 = fcn.004218fb(&lpPathName);\n    if ((iVar2 != 0) && (*(&stack0xfffffdee + iVar2 * 2) == 0x5c)) {\n        *(&stack0xfffffdee + iVar2 * 2) = 0;\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(&lpPathName);\n    if (uVar3 == 0xffffffff) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 == 2) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(&lpPathName, 0);\n            if (iVar2 != 0) {\n                return '\\x01';\n            }\n        }\n        else if (iVar2 != 3) {\n            return '\\0';\n        }\n        arg_8h = fcn.00403bcf();\n        puVar4 = fcn.00423174(arg_8h, 0x5c);\n        if (puVar4 != NULL) {\n            *puVar4 = 0;\n            cVar1 = fcn.00446d6d();\n            fcn.0042017e(arg_8h);\n            if (cVar1 != '\\0') {\n                iVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(&lpPathName, 0);\n                cVar1 = iVar2 != 0;\n            }\n            return cVar1;\n        }\n        fcn.0042017e(arg_8h);\n    }\n    else if ((uVar3 & 0x10) != 0) {\n        return '\\x01';\n    }\n    return '\\0';\n}\n",
        "token_count": 444
    },
    "0044a955": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a955(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    double *in_ECX;\n    float10 fVar6;\n    ulong uVar7;\n    uint var_4h;\n    \n    iVar5 = *(in_ECX + 0xc);\n    if (iVar5 == 1) {\n        if (arg_8h[3] == 1) {\n            iVar5 = *in_ECX - *arg_8h;\n            uVar1 = *arg_8h;\n            uVar2 = *in_ECX;\n            iVar4 = ((uVar2 >> 0x1f) - (uVar1 >> 0x1f)) - (uVar2 < uVar1);\n            if ((iVar5 == uVar2 - uVar1) && (iVar5 >> 0x1f == iVar4)) {\n                *in_ECX = iVar5;\n            }\n            else {\n                *(in_ECX + 0xc) = 2;\n                *in_ECX = uVar2 - uVar1;\n                *(in_ECX + 4) = iVar4;\n            }\n            goto code_r0x0044aa47;\n        }\n        if (arg_8h[3] == 2) {\n            uVar1 = *in_ECX;\n            uVar2 = *arg_8h;\n            uVar3 = arg_8h[1];\n            *in_ECX = uVar1 - *arg_8h;\n            *(in_ECX + 4) = ((uVar1 >> 0x1f) - uVar3) - (uVar1 < uVar2);\n            *(in_ECX + 0xc) = 2;\n            goto code_r0x0044aa47;\n        }\ncode_r0x0044aa37:\n        fcn.0041df8a();\n    }\n    else {\n        if (iVar5 == 2) {\n            if ((arg_8h[3] == 1) || (arg_8h[3] == 2)) {\n                uVar7 = fcn.0040d00b();\n                uVar1 = *in_ECX;\n                *in_ECX = *in_ECX - uVar7;\n                *(in_ECX + 4) = (*(in_ECX + 4) - (uVar7 >> 0x20)) - (uVar1 < uVar7);\n                goto code_r0x0044aa47;\n            }\n            goto code_r0x0044aa37;\n        }\n        if (iVar5 != 3) {\n            if (iVar5 != 4) {\n                if (iVar5 == 7) {\n                    iVar5 = *in_ECX;\n                    if (arg_8h[3] == 1) {\n                        iVar4 = fcn.0040cdb4();\n                    }\n                    else {\n                        iVar4 = fcn.0040d00b();\n                    }\n                    *in_ECX = iVar5 - iVar4;\n                    goto code_r0x0044aa47;\n                }\n                if ((iVar5 < 9) || (0xb < iVar5)) goto code_r0x0044aa47;\n            }\n            fcn.0041df8a();\n        }\n    }\n    fVar6 = fcn.00412620();\n    *in_ECX = *in_ECX - fVar6;\ncode_r0x0044aa47:\n    fcn.0044b00a();\n    return;\n}\n",
        "token_count": 794
    },
    "0044aa57": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044aa57(uint arg_8h)\n\n{\n    int32_t iVar1;\n    double *in_ECX;\n    float10 fVar2;\n    \n    iVar1 = *(in_ECX + 0xc);\n    if (iVar1 < 1) goto code_r0x0044aa8e;\n    if (iVar1 < 3) {\ncode_r0x0044aa7d:\n        fcn.0041df8a();\n    }\n    else if (iVar1 != 3) {\n        if (((iVar1 != 4) && (iVar1 != 9)) && (iVar1 != 0xb)) goto code_r0x0044aa8e;\n        goto code_r0x0044aa7d;\n    }\n    fVar2 = fcn.00412620();\n    *in_ECX = *in_ECX / fVar2;\ncode_r0x0044aa8e:\n    fcn.0044b00a();\n    return;\n}\n",
        "token_count": 218
    },
    "0044dfa5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044dfa5(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    \n    if (1 < *(arg_8h + 8)) {\n        fcn.0040cdb4();\n    }\n    fcn.004084a6();\n    cVar1 = fcn.00448245();\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 124
    },
    "0044e704": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044e704(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *arg_8h_00;\n    uint uVar4;\n    uint uVar5;\n    uint var_238h;\n    uint var_38h;\n    int32_t var_34h;\n    int16_t *var_28h;\n    uint var_24h;\n    uint var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_10h = *(arg_8h + 8);\n    var_8h = 0x100;\n    var_4h = 0;\n    fcn.004084a6();\n    piVar1 = fcn.00403bcf();\n    var_18h = piVar1;\n    fcn.004084a6();\n    var_14h = fcn.00403bcf();\n    if (2 < var_10h) {\n        var_4h = fcn.0040cdb4();\n    }\n    uVar3 = var_4h;\n    iVar2 = fcn.0042247b(piVar1, 0x4b3a78, 3);\n    var_34h = 2 - (iVar2 != 0);\n    var_24h = var_14h;\n    var_1ch = 0;\n    if ((*piVar1 == 0) || (var_28h = piVar1,  *piVar1 == 0x2a)) {\n        var_28h = NULL;\n    }\n    if (*piVar1 == 0x2a) {\n        uVar3 = uVar3 | 0x80;\n        var_4h = uVar3;\n    }\n    if (var_10h < 4) {\n        uVar5 = 0;\n        uVar4 = 0;\n    }\n    else {\n        iVar2 = *(*(arg_8h + 4) + 0xc);\n        if (var_10h == 4) {\n            fcn.004084a6();\n            uVar5 = **(iVar2 + 8);\n            uVar4 = 0;\n            uVar3 = var_4h;\n        }\n        else {\n            fcn.004084a6();\n            uVar5 = **(iVar2 + 8);\n            iVar2 = *(*(arg_8h + 4) + 0x10);\n            fcn.004084a6();\n            uVar4 = **(iVar2 + 8);\n            uVar3 = var_4h;\n        }\n    }\n    iVar2 = (*_sym.imp.MPR.dll_WNetUseConnectionW)(0, &var_38h, uVar4, uVar5, uVar3, &var_238h, &var_8h, &var_ch);\n    if (iVar2 != 0) {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        if (iVar2 == 5) {\n            uVar5 = 2;\n        }\n        else if ((iVar2 == 0x55) || (iVar2 == 0x4b2)) {\n            uVar5 = 3;\n        }\n        else if (iVar2 == 0x4b0) {\n            uVar5 = 4;\n        }\n        else if (iVar2 == 0x43) {\n            uVar5 = 5;\n        }\n        else {\n            if (iVar2 != 0x56) {\n                fcn.0044d7e4(1, 0);\n                fcn.00407ba9(iVar2, 0);\n                goto code_r0x0044e8d1;\n            }\n            uVar5 = 6;\n        }\n        fcn.0044d7e4(uVar5, 0);\n    }\ncode_r0x0044e8d1:\n    piVar1 = var_18h;\n    if (*var_18h == 0x2a) {\n        if ((var_ch & 0x100) == 0) {\n            arg_8h_00 = 0x49dbf0;\n        }\n        else {\n            arg_8h_00 = &var_238h;\n        }\n        fcn.0040ca8e(arg_8h_00);\n    }\n    fcn.0042017e(piVar1);\n    fcn.0042017e(var_14h);\n    return 0;\n}\n",
        "token_count": 1049
    },
    "0044f736": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f736(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint32_t uVar5;\n    int32_t var_4h;\n    \n    uVar4 = **(arg_8h + 4);\n    var_4h = in_ECX;\n    cVar1 = fcn.0040d2c0(4);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0041f0f3(&var_4h, uVar4, 0);\n        if (cVar1 != '\\0') {\n            iVar2 = *(**(*(in_ECX + 0x198) + var_4h * 4) + 4);\n            goto code_r0x0044f7f2;\n        }\n    }\n    else {\n        iVar2 = fcn.0042010a(0x38);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.00405080();\n        }\n        uVar5 = 0x4000;\n        if (1 < *(arg_8h + 8)) {\n            iVar3 = fcn.0040cdb4();\n            uVar5 = -(iVar3 != 2) & 0x4000;\n        }\n        iVar3 = **(arg_8h + 4);\n        fcn.004084a6();\n        cVar1 = fcn.00404bf9(*(iVar3 + 8), uVar5 | 0x2000);\n        if (cVar1 != '\\0') {\ncode_r0x0044f7f2:\n            uVar4 = fcn.004465ba();\n            fcn.00412570();\n            arg_ch[3] = 1;\n            *arg_ch = uVar4;\n            cVar1 = fcn.0040d2c0(4);\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            fcn.004050ec();\n            *(iVar2 + 0x2c) = 0;\n            *(iVar2 + 0x30) = 0;\n            fcn.00404592(extraout_ECX_00);\n            return 0;\n        }\n        if (iVar2 != 0) {\n            fcn.00404592(extraout_ECX);\n        }\n    }\n    fcn.00412570();\n    *arg_ch = 0xffffffff;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 608
    },
    "004510a8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004510a8(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uStack28;\n    uint uStack24;\n    \n    fcn.0040d3d2();\n    fcn.004084a6();\n    fcn.004478ad();\n    cVar2 = fcn.00446f4b();\n    if (cVar2 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0;\n    }\n    else {\n        if (*(arg_8h + 8) == 2) {\ncode_r0x0045113d:\n            iVar3 = *(*(arg_8h + 4) + 4);\n            fcn.004084a6();\n            uVar4 = 0;\n        }\n        else {\n            if (*(arg_8h + 8) == 3) {\n                cVar2 = fcn.0041d5f6(0x29);\n                if (cVar2 != '\\0') goto code_r0x0045113d;\n            }\n            iVar3 = *(*(arg_8h + 4) + 8);\n            fcn.004084a6();\n            uVar4 = **(iVar3 + 8);\n            iVar3 = *(*(arg_8h + 4) + 4);\n            fcn.004084a6();\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_WritePrivateProfileStringW;\n        iVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(**(iVar3 + 8), uVar4, 0, uStack28);\n        if (iVar3 != 0) {\n            (*pcVar1)(0, 0, 0, uStack24);\n            goto code_r0x00451181;\n        }\n        fcn.00412570();\n        *arg_ch = 0;\n    }\n    arg_ch[3] = 1;\ncode_r0x00451181:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 474
    },
    "00452b52": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00452b52(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h_00;\n    uint wParam;\n    uint Msg;\n    uint arg_8h_01;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort uStackY8228;\n    uint uStackY84;\n    uint var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00430650();\n    uVar1 = *(arg_8h + 8);\n    iVar3 = 0;\n    arg_8h = 0;\n    if (3 < uVar1) {\n        var_10h = 0x452b82;\n        iVar3 = fcn.0040cdb4();\n    }\n    wParam = arg_8h;\n    if (2 < uVar1) {\n        var_10h = 0x452b97;\n        wParam = fcn.0040cdb4();\n    }\n    var_10h = &stack0xffffdfdc;\n    var_14h = &fcn.00452b52::var_18h;\n    var_18h = &fcn.00452b52::arg_8h;\n    var_1ch = &fcn.00452b52::var_14h;\n    uStackY8228 = 0xfff;\n    iVar2 = iVar3;\n    Msg = fcn.0040cdb4();\n    arg_8h_01 = fcn.0040cdb4();\n    iVar2 = fcn.0046afee(arg_8h_01, Msg, wParam, iVar2, &fcn.00452b52::var_1ch, var_1ch, var_18h, var_14h, var_10h);\n    arg_8h_00 = arg_ch;\n    if (iVar2 == 0) {\n        fcn.00412570();\n        *arg_8h_00 = 0;\n        arg_8h_00[3] = 1;\n        fcn.0044d7e4(1, 0);\n    }\n    else if (iVar3 == 1) {\n        fcn.0040ca8e(&stack0xffffdfdc);\n    }\n    else {\n        fcn.00403320(arg_ch, 1);\n        var_10h = var_1ch;\n        uStackY84 = 0x452c48;\n        fcn.00412320(arg_8h_00, &fcn.00452b52::var_10h, 1);\n        fcn.00412570();\n        var_10h = var_14h;\n        fcn.00412320(arg_8h_00, &fcn.00452b52::var_10h, 1);\n        fcn.00412570();\n        if (iVar3 == 2) {\n            var_10h = arg_8h;\n            fcn.00412320(arg_8h_00, &fcn.00452b52::var_10h, 1);\n            fcn.00412570();\n            var_10h = var_18h;\n            fcn.00412320(arg_8h_00, &fcn.00452b52::var_10h, 1);\n            fcn.00412570();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 894
    },
    "004530af": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004530af(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint item;\n    uint uVar2;\n    uint unaff_ESI;\n    \n    fcn.0040d3d2();\n    if (2 < *(arg_8h + 8)) {\n        iVar1 = *(*(arg_8h + 4) + 8);\n        fcn.004084a6();\n        fcn.0040c935(*(iVar1 + 8));\n    }\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    uVar2 = **(iVar1 + 8);\n    item = fcn.0040cdb4();\n    uVar2 = fcn.0046b4d4(item, uVar2, unaff_ESI);\n    fcn.00412570();\n    arg_ch[3] = 1;\n    *arg_ch = uVar2;\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 237
    },
    "004531dd": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004531dd(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    fcn.0040d3d2();\n    var_8h = 0xffffffff;\n    var_4h = 2;\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (5 < uVar1) {\n        var_4h = fcn.0040cdb4();\n    }\n    if (4 < uVar1) {\n        iVar2 = *(*(arg_8h + 4) + 0x10);\n        cVar3 = fcn.0040d2c0(4);\n        if (cVar3 == '\\0') goto code_r0x004532bc;\n        fcn.004084a6();\n        fcn.0040c935(*(iVar2 + 8));\n    }\n    if (3 < uVar1) {\n        var_8h = fcn.0040cdb4();\n    }\n    if (uVar1 < 3) {\n        uVar4 = 0xffffffff;\n    }\n    else {\n        uVar4 = fcn.0040cdb4();\n    }\n    fcn.00412620();\n    arg_8h_00 = fcn.0040cdb4();\n    uVar4 = fcn.0046ba61(arg_8h_00, uVar4, var_18h, var_8h, var_4h);\n    fcn.00412570();\n    arg_ch[3] = 1;\n    *arg_ch = uVar4;\ncode_r0x004532bc:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 448
    },
    "004532cd": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004532cd(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    uint lpszFile;\n    uchar *arg_8h_01;\n    uchar auStack28 [4];\n    uint uStack24;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack16 = 0;\n    uVar3 = 0xffffffff;\n    uVar1 = *(arg_8h + 8);\n    uStack24 = 0xffffffff;\n    uStack12 = 1;\n    if (3 < uVar1) {\n        uVar3 = fcn.0040cdb4();\n    }\n    if (2 < uVar1) {\n        fcn.0040d89e(*(*(arg_8h + 4) + 8));\n    }\n    arg_8h_01 = auStack28;\n    fcn.004113a0(arg_8h_01);\n    iVar2 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    lpszFile = **(iVar2 + 8);\n    arg_8h_00 = fcn.0040cdb4();\n    uVar3 = fcn.0046bb3e(arg_8h_00, lpszFile, uVar3, arg_8h_01);\n    fcn.00412570();\n    arg_ch[3] = 1;\n    *arg_ch = uVar3;\n    fcn.00412570();\n    return 0;\n}\n",
        "token_count": 364
    },
    "00453379": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453379(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    uVar1 = 0;\n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040cdb4();\n    }\n    arg_ch_00 = fcn.0040cdb4();\n    arg_8h_00 = fcn.0040cdb4();\n    uVar1 = fcn.0046c1ee(arg_8h_00, arg_ch_00, uVar1);\n    fcn.00412570();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 177
    },
    "004534d8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004534d8(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint X;\n    uint hWnd;\n    uint arg_10h;\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = 0xffffffff;\n    var_4h = 0xffffffff;\n    arg_10h = 0xffffffff;\n    if (4 < *(arg_8h + 8)) {\n        var_4h = fcn.0040cdb4();\n    }\n    if (3 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040cdb4();\n    }\n    if (2 < *(arg_8h + 8)) {\n        arg_10h = fcn.0040cdb4();\n    }\n    X = fcn.0040cdb4();\n    hWnd = fcn.0040cdb4();\n    uVar1 = fcn.0046c2e7(hWnd, X, arg_10h, uVar1, var_4h);\n    fcn.00412570();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 262
    },
    "004535ec": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004535ec(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    uVar1 = 0xffffffff;\n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040cdb4();\n    }\n    arg_ch_00 = fcn.0040cdb4();\n    arg_8h_00 = fcn.0040cdb4();\n    uVar1 = fcn.0046cb07(arg_8h_00, arg_ch_00, uVar1);\n    fcn.00412570();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 177
    },
    "00453d69": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453d69(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_18h;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar2;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = 0xffffffff;\n    arg_8h = 0xffffffff;\n    if (2 < uVar1) {\n        uVar2 = fcn.0040cdb4();\n    }\n    if (3 < uVar1) {\n        arg_8h = fcn.0040cdb4();\n    }\n    if (uVar1 < 5) {\n        arg_18h = 0;\n    }\n    else {\n        arg_18h = fcn.0044be63();\n    }\n    arg_ch_00 = fcn.0040cdb4();\n    arg_8h_00 = fcn.0040cdb4();\n    uVar2 = fcn.0046db30(arg_8h_00, arg_ch_00, uVar2, arg_8h, arg_18h);\n    fcn.00412570();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 289
    },
    "00454e63": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454e63(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint uVar3;\n    char cVar4;\n    int32_t iVar5;\n    \n    if (2 < *(arg_8h + 8)) {\n        fcn.0040cdb4();\n    }\n    if (3 < *(arg_8h + 8)) {\n        fcn.0041e3ee();\n    }\n    iVar5 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    uVar2 = **(iVar5 + 8);\n    iVar5 = **(arg_8h + 4);\n    fcn.004084a6();\n    uVar3 = **(iVar5 + 8);\n    iVar5 = in_ECX + 0x10;\n    fcn.004546b0(iVar5);\n    uVar2 = fcn.004545cf(uVar3, uVar2, unaff_EBX, in_ECX + 4, iVar5);\n    fcn.00455a3a(uVar2);\n    cVar4 = uVar2;\n    fcn.004547d7();\n    piVar1 = *(in_ECX + 8);\n    fcn.004558e3(1);\n    uVar2 = 0;\n    fcn.0044d7e4(*(*piVar1 + 0x18), 0);\n    fcn.00407ba9(*(*piVar1 + 0x1c), 0);\n    iVar5 = *piVar1;\n    if (cVar4 == '\\0') {\n        uVar3 = *(iVar5 + 8);\n        uVar2 = *(iVar5 + 0xc);\n    }\n    else {\n        uVar3 = *(iVar5 + 0xd8);\n    }\n    fcn.00412570();\n    arg_ch[3] = 2;\n    *arg_ch = uVar3;\n    arg_ch[1] = uVar2;\n    if (cVar4 == '\\0') {\n        fcn.00455a0f();\n    }\n    return 0;\n}\n",
        "token_count": 506
    },
    "00455d13": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00455d13(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    ulong uVar11;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar8 = 0;\n    uVar10 = 0x10;\n    iVar7 = arg_8h;\n    if (*(arg_8h + 8) < 3) goto code_r0x00455dcb;\n    iVar3 = *(*(arg_8h + 4) + 8);\n    if (*(iVar3 + 0xc) == 10) {\n        uVar11 = fcn.0044be39();\n        iVar7 = uVar11 >> 0x20;\n        if (uVar11 == 0x29) goto code_r0x00455dcb;\n    }\n    fcn.004084a6();\n    iVar7 = arg_8h;\n    if (**(iVar3 + 8) == 0) goto code_r0x00455dcb;\n    iVar7 = *(*(arg_8h + 4) + 8);\n    fcn.004084a6();\n    iVar1 = ***(iVar7 + 8);\n    if (iVar1 == 0x42) {\ncode_r0x00455dc2:\n        uVar10 = 8;\n        iVar7 = arg_8h;\n    }\n    else {\n        if (iVar1 != 0x44) {\n            iVar7 = arg_8h;\n            if (iVar1 == 0x57) goto code_r0x00455dcb;\n            if (iVar1 == 0x62) goto code_r0x00455dc2;\n            if (iVar1 != 100) {\n                if (iVar1 != 0x77) {\n                    fcn.00412570();\n                    arg_ch[3] = 1;\n                    *arg_ch = 0;\n                    fcn.0044d7e4(1, 0);\n                    return 0xffffffff;\n                }\n                goto code_r0x00455dcb;\n            }\n        }\n        uVar10 = 0x20;\n        iVar7 = arg_8h;\n    }\ncode_r0x00455dcb:\n    iVar3 = 1;\n    if (1 < *(iVar7 + 8)) {\n        iVar3 = fcn.0040cdb4();\n    }\n    uVar4 = fcn.0040cdb4();\n    uVar5 = uVar10;\n    if (uVar10 < 0x20) {\n        uVar8 = -1 << (uVar5 & 0x1f);\n    }\n    for (; iVar3 < 0; iVar3 = iVar3 + uVar10) {\n    }\n    for (; uVar10 <= iVar3; iVar3 = iVar3 - uVar10) {\n    }\n    if (iVar3 == 0) {\n        fcn.00412570();\n    }\n    else {\n        uVar2 = iVar3;\n        uVar6 = uVar5 - uVar2;\n        uVar9 = (1 << (uVar6 & 0x1f)) - 1;\n        if (uVar10 < 0x20) {\n            arg_8h = (uVar9 & uVar4) << (uVar2 & 0x1f) & (1 << (uVar5 & 0x1f)) - 1U;\n            uVar9 = ((1 << (uVar5 & 0x1f)) - uVar9) - 1;\n        }\n        else {\n            arg_8h = (uVar9 & uVar4) << (uVar2 & 0x1f);\n            uVar9 = ~uVar9;\n        }\n        arg_8h = uVar8 & uVar4 | arg_8h;\n        fcn.00412570();\n        uVar4 = 0x7fffffff >> (uVar6 - 1 & 0x1f) & (uVar9 & uVar4) >> (uVar6 & 0x1f) | arg_8h;\n    }\n    *arg_ch = uVar4;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 1010
    },
    "0045741e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045741e(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*(arg_8h + 8) < 2) {\n        iVar2 = **(arg_8h + 4);\n        fcn.004084a6();\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (*(arg_8h + 4))[1];\n        fcn.004084a6();\n        uVar1 = **(iVar2 + 8);\n        iVar2 = **(arg_8h + 4);\n        fcn.004084a6();\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(**(iVar2 + 8), uVar1);\n    fcn.00412570();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 215
    },
    "00457ddb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457ddb(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint unaff_EBX;\n    int32_t arg_10h;\n    uint uStack28;\n    \n    arg_10h = -1;\n    fcn.004084a6();\n    iVar1 = fcn.00447d1c();\n    if (iVar1 == 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        arg_8h_00 = fcn.0040cdb4();\n        arg_ch_00 = fcn.0040cdb4();\n        fcn.0040cdb4();\n        fcn.0040cdb4();\n        if (5 < *(arg_8h + 8)) {\n            arg_10h = fcn.0040cdb4();\n        }\n        fcn.00459fec(arg_8h_00, arg_ch_00, arg_10h, 1);\n        if ((arg_10h < 2) && (arg_10h != -1)) {\n            arg_10h = 2;\n        }\n        fcn.004084a6();\n        fcn.00447dd5();\n        fcn.00448355();\n        fcn.00459fec(uStack28, unaff_EBX, arg_10h, 1);\n        fcn.00448355();\n        fcn.004084a6();\n        fcn.00447e01();\n        fcn.00448355();\n    }\n    return 0;\n}\n",
        "token_count": 373
    },
    "004581f3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004581f3(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    if (((*(arg_8h + 8) < 2) || (iVar3 = fcn.0040cdb4(),  0 < iVar3)) && (iVar2 = 0,  0 < iVar3)) {\n        do {\n            fcn.004084a6();\n            cVar1 = fcn.00447e2d();\n            if (cVar1 == '\\0') {\n                fcn.00412570();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                return 0;\n            }\n            fcn.00448355();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar3);\n    }\n    return 0;\n}\n",
        "token_count": 218
    },
    "00458df8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458df8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(arg_8h + 8) == 2) {\n        iVar1 = fcn.0040cdb4();\n        iVar2 = **(arg_8h + 4);\n        if (iVar1 != 0) {\n            fcn.004084a6();\n            fcn.00443c7f(*(iVar2 + 8), 0);\n            return 0;\n        }\n    }\n    else {\n        iVar2 = **(arg_8h + 4);\n    }\n    fcn.004084a6();\n    fcn.00443abb(*(iVar2 + 8), 0);\n    return 0;\n}\n",
        "token_count": 175
    },
    "004591dc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004591dc(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_14h;\n    uint var_4h;\n    \n    var_4h = 5;\n    if (2 < *(arg_8h + 8)) {\n        var_4h = fcn.0040cdb4();\n    }\n    iVar3 = **(arg_8h + 4);\n    fcn.004084a6();\n    uVar5 = *(iVar3 + 8);\n    uVar2 = fcn.0040cdb4();\n    cVar1 = fcn.0045acd3(&var_14h, uVar5, uVar2);\n    if (cVar1 != '\\0') {\n        iVar3 = (*_sym.imp.WSOCK32.dll_socket)(2, 1, 6);\n        if (iVar3 == -1) {\n            uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n            fcn.0044d7e4(uVar2, uVar5);\n        }\n        else {\n            iVar4 = (*_sym.imp.WSOCK32.dll_bind)(iVar3, &var_14h, 0x10);\n            if (iVar4 != -1) {\n                iVar4 = (*_sym.imp.WSOCK32.dll_listen)(iVar3, var_4h);\n                if (iVar4 == 0) {\n                    fcn.00412570();\n                    *arg_ch = iVar3;\n                    goto code_r0x004592b0;\n                }\n            }\n            uVar2 = 0;\n            uVar5 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            fcn.0044d7e4(uVar5, uVar2);\n            (*_sym.imp.WSOCK32.dll_closesocket)(iVar3);\n        }\n    }\n    fcn.00412570();\n    *arg_ch = -1;\ncode_r0x004592b0:\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 485
    },
    "00459923": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459923(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint arg_ch_00;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403320(arg_ch, 1);\n    iVar1 = (*_sym.imp.WSOCK32.dll_socket)(2, 2, 0x11);\n    if (iVar1 == -1) {\ncode_r0x00459953:\n        arg_ch_00 = 0;\n        arg_8h_00 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.0044d7e4(arg_8h_00, arg_ch_00);\n        puVar2 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar2[3] = 1;\n        *puVar2 = 0xffffffff;\n    }\n    else {\n        if (2 < *(arg_8h + 8)) {\n            uVar3 = fcn.0040cdb4();\n            if ((uVar3 & 1) != 0) {\n                var_4h = 1;\n                iVar4 = (*_sym.imp.WSOCK32.dll_setsockopt)(iVar1, 0xffff, 0x20, &var_4h, 4);\n                if (iVar4 != 0) goto code_r0x00459953;\n            }\n        }\n        puVar2 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar2[3] = 1;\n        *puVar2 = 0x2b594d1;\n        piVar5 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        piVar5[3] = 1;\n        *piVar5 = iVar1;\n        fcn.004114a0(arg_ch, 0, 1);\n        iVar1 = **(arg_8h + 4);\n        fcn.004084a6();\n        fcn.00407bef(*(iVar1 + 8));\n        fcn.004114a0(arg_ch, 0, 1);\n        iVar1 = *(*(arg_8h + 4) + 4);\n        fcn.004084a6();\n        fcn.00407bef(*(iVar1 + 8));\n    }\n    return 0;\n}\n",
        "token_count": 591
    },
    "00461341": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461341(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    ppiVar1 = *(arg_8h + 4);\n    piVar2 = *ppiVar1;\n    cVar3 = fcn.0040d2c0(0xc);\n    if (cVar3 == '\\0') {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.0044d7e4(1, 0);\n    }\n    else if (*(arg_8h + 8) < 2) {\n        if (piVar2[3] == 0xc) {\n            iVar4 = *piVar2;\n        }\n        else {\n            iVar4 = 0;\n        }\n        iVar4 = *(iVar4 + 8);\n        fcn.00412570();\n        arg_ch[3] = 7;\n        *arg_ch = iVar4;\n    }\n    else {\n        var_ch = 0;\n        var_4h = 0;\n        var_14h = 0;\n        fcn.004113a0(ppiVar1[1]);\n        cVar3 = fcn.0040d2c0(4);\n        if (cVar3 == '\\0') {\n            var_1ch = fcn.0040cdb4();\n            var_1ch = var_1ch + -1;\n            fcn.00412570();\n            var_10h = 1;\n        }\n        iVar4 = fcn.00449228(&var_1ch, &var_ch, &var_4h);\n        if (iVar4 == 0) {\n            fcn.00412570();\n            arg_ch[3] = 1;\n            *arg_ch = 0;\n            fcn.0044d7e4(var_4h, 0);\n        }\n        else {\n            fcn.00412570();\n            arg_ch[3] = 7;\n            *arg_ch = iVar4;\n        }\n        fcn.00412570();\n    }\n    return 0;\n}\n",
        "token_count": 538
    },
    "00462346": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462346(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    cVar1 = fcn.0040d16a();\n    if ((cVar1 != '\\0') && (iVar2 = fcn.0040cdb4(),  iVar2 == 0)) {\n        return 0;\n    }\n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    fcn.0040c935(*(iVar2 + 8));\n    if (arg_ch == 2) {\n        iVar2 = fcn.0040cdb4();\n        *(in_ECX + 0x468) = iVar2 * 1000;\n    }\n    else {\n        *(in_ECX + 0x468) = 0;\n    }\n    uVar3 = (*_sym.imp.WINMM.dll_timeGetTime)();\n    *(in_ECX + 0x46c) = uVar3;\n    return 1;\n}\n",
        "token_count": 246
    },
    "00463d7b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463d7b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    \n    fcn.0040c4cd();\n    fcn.0040c4cd();\n    fcn.0040c4cd();\n    if (1 < arg_18h) {\n        piVar1 = fcn.0040a4f6(0);\n        if (*piVar1 == 0x5c) {\n            piVar1 = fcn.0040a4f6(1);\n            if (*piVar1 == 0x5c) {\n                fcn.0040a2fb(0, 2);\n                uVar2 = fcn.00452628(0x49dc88);\n                if (uVar2 == 0xffffffff) {\n                    uVar2 = arg_18h;\n                }\n                fcn.00407f40(&arg_14h, 0, uVar2);\n                fcn.0040a2fb(0, uVar2 + 1);\n                goto code_r0x00463e09;\n            }\n        }\n    }\n    fcn.0040c4cd();\ncode_r0x00463e09:\n    uVar2 = fcn.00452628(0x49dc88);\n    if (uVar2 == 0xffffffff) {\n        uVar2 = arg_18h;\n    }\n    fcn.00407f40(&arg_14h, 0, uVar2);\n    fcn.00407f40(&arg_14h, uVar2 + 1, (arg_18h - uVar2) + -1);\n    fcn.0041e617(0x49dc88);\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 423
    },
    "004643f3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004643f3(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t arg_8h_00;\n    uint var_4h;\n    \n    iVar1 = fcn.0044be47();\n    iVar2 = fcn.0044be8a();\n    arg_8h_00 = -1;\n    iVar3 = fcn.0040cdb4();\n    iVar3 = iVar3 + -1;\n    if (2 < *(arg_8h + 8)) {\n        arg_8h_00 = fcn.0040cdb4();\n    }\n    if ((iVar2 < iVar3) || (iVar3 < 0)) {\n        iVar3 = iVar2;\n    }\n    if ((arg_8h_00 < 0) || (iVar2 - iVar3 < arg_8h_00)) {\n        arg_8h_00 = iVar2 - iVar3;\n    }\n    uVar4 = fcn.0044ad14(arg_8h_00);\n    fcn.0041faa0(uVar4, iVar1 + iVar3, arg_8h_00);\n    return 0;\n}\n",
        "token_count": 284
    },
    "004672fc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004672fc(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    int32_t arg_8h_01;\n    char16_t *pcVar3;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar auStack52 [4];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack28 = 1;\n    uStack44 = 1;\n    pcVar3 = L\"msctls_statusbar321\";\n    iVar2 = 0;\n    uStack40 = 0;\n    uStack32 = 0;\n    uStack72 = 0x49dc40;\n    uStack68 = 0;\n    uStack64 = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack48 = 0;\n    fcn.0040ca8e(L\"msctls_statusbar321\");\n    fcn.0040ca8e(0x49dbf0);\n    fcn.0040ca8e(0x49dbf0);\n    arg_8h_01 = **(arg_8h + 4);\n    fcn.0041baef(arg_8h_01);\n    if (pcVar3 < 0x2) {\n        arg_8h_00 = &uStack72;\n    }\n    else {\n        arg_8h_00 = *(*(arg_8h + 4) + 4);\n    }\n    fcn.0041baef(arg_8h_00);\n    fcn.0041baef(&uStack60);\n    cVar1 = fcn.00465f56(&stack0xffffffa0);\n    if (cVar1 == '\\0') {\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        if (arg_8h_01 == 3) {\n            iVar2 = fcn.0040cdb4();\n            iVar2 = iVar2 + -1;\n        }\n        fcn.0040d3d2();\n        cVar1 = fcn.0043cd4f(iVar2, auStack52);\n        if (cVar1 == '\\0') {\n            fcn.0044d7e4(1, 0);\n        }\n        else {\n            fcn.00407bef(&uStack60);\n        }\n        fcn.00405cd3();\n    }\n    fcn.00412570();\n    fcn.004404c9();\n    fcn.00412570();\n    return 0;\n}\n",
        "token_count": 617
    },
    "0046cb07": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046cb07(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint *hWnd;\n    uint uVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    cVar2 = fcn.0040cf2c(arg_8h, &var_ch, &var_8h);\n    if (cVar2 == '\\0') {\n        return false;\n    }\n    arg_8h_00 = **(*0x4c1870 + var_ch * 4);\n    hWnd = **(*0x4c1884 + var_8h * 4);\n    uVar1 = *hWnd;\n    if (arg_ch == 0xffffffff) goto code_r0x0046cbcc;\n    cVar2 = *(hWnd + 0x24);\n    if (cVar2 == '\\x02') {\n        arg_ch = arg_ch | 4;\ncode_r0x0046cb9b:\n        bVar3 = (arg_ch & 0x800) == 0;\n        if (bVar3) {\n            arg_ch = arg_ch | 0x10000;\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0xcf, !bVar3, 0);\n    }\n    else {\n        if (cVar2 == '\\x03') goto code_r0x0046cb9b;\n        if (cVar2 == '\\x06') {\n            arg_ch = arg_ch | 0xe;\n        }\n        else if (cVar2 == '\\a') {\n            arg_ch = arg_ch | 3;\n        }\n        else if (cVar2 == '\\n') {\n            arg_ch = arg_ch | 0x4000000;\n        }\n        else if (cVar2 == '\\x16') {\n            return false;\n        }\n    }\n    var_4h = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xfffffff0, arg_ch | 0x50000000);\ncode_r0x0046cbcc:\n    if ((arg_10h != -1) &&\n       (var_4h = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xffffffec, arg_10h), \n       *(**(*0x4c1884 + var_8h * 4) + 0x90) == '\\x13')) {\n        var_4h = (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x1036, 0, arg_10h);\n    }\n    if ((*(hWnd + 0x93) == 0xff) || (*(hWnd + 0x93) == *(arg_8h_00 + 400))) {\n        fcn.0046ddee(arg_8h_00, hWnd, 1);\n    }\n    else {\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar1, 0);\n    }\n    if (((*(hWnd + 0x24) == '\\x02') || (*(hWnd + 0x24) == '\\x03')) || (arg_10h != -1)) {\n        (*_sym.imp.USER32.dll_SetWindowPos)(*hWnd, 0, 0, 0, 0, 0, 0x27);\n    }\n    return var_4h != 0;\n}\n",
        "token_count": 796
    },
    "0046e896": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e896(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint Y;\n    uint X;\n    uint nXEnd;\n    uint nYEnd;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_10h = 0;\n    var_4h = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar4 = 0;\n            if (0 < *(arg_ch + 0xc)) {\n                puVar2 = arg_ch + 0x14;\n                puVar3 = arg_ch + 0x10;\n                do {\n                    Y = *puVar2;\n                    X = *puVar3;\n                    uVar1 = *(arg_ch + 0x810 + iVar4);\n                    nYEnd = var_10h;\n                    nXEnd = var_8h;\n                    if (1 < uVar1) {\n                        if (uVar1 < 8) {\n                            fcn.0046e9c8(arg_8h, X, Y, var_4h);\n                            nYEnd = Y;\n                            nXEnd = X;\n                            if ((*(arg_ch + 0x810 + iVar4) & 0xfe) == 4) {\n                                fcn.0046e83c(arg_8h, X, Y, var_8h, var_10h, var_4h);\n                                fcn.0046e9c8(arg_8h, puVar3[2], puVar2[2], var_4h);\n                                nXEnd = puVar3[2];\n                                nYEnd = puVar2[2];\n                                puVar2 = puVar2 + 4;\n                                puVar3 = puVar3 + 4;\n                                iVar4 = iVar4 + 2;\n                                fcn.0046e83c(arg_8h, *puVar3, *puVar2, nXEnd, nYEnd, var_4h);\n                                fcn.0046e9c8(arg_8h, *puVar3, *puVar2, var_4h);\n                            }\n                        }\n                        else if (uVar1 == 0x14) {\n                            var_4h = X;\n                        }\n                    }\n                    var_8h = nXEnd;\n                    var_10h = nYEnd;\n                    iVar4 = iVar4 + 1;\n                    puVar2 = puVar2 + 2;\n                    puVar3 = puVar3 + 2;\n                } while (iVar4 < *(arg_ch + 0xc));\n            }\n            arg_ch = *(arg_ch + 4);\n        } while (arg_ch != 0);\n    }\n    fcn.0041b517(arg_8h, 0xffffffff);\n    return;\n}\n",
        "token_count": 674
    },
    "0046f122": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f122(uint hDlg, int32_t hDrop)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uStack684;\n    int32_t iStack680;\n    int32_t iStack676;\n    uint uStack672;\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uchar *puStack656;\n    uchar *puStack652;\n    uchar auStack608 [16];\n    uint uStack592;\n    uchar auStack584 [16];\n    uchar auStack568 [4];\n    uint uStack564;\n    uint uStack560;\n    uchar auStack556 [552];\n    \n    fcn.0041af7d(hDlg);\n    (*_sym.imp.SHELL32.dll_DragQueryPoint)();\n    puStack652 = 0x46f163;\n    iVar2 = fcn.0046d5ee(&stack0xfffffd94, uStack564, uStack560);\n    uStack592 = **(*0x4c1870 + &stack0xfffffdd4 * 4);\n    if ((iVar2 == -1) || (puVar1 = **(*0x4c1884 + iVar2 * 4),  (*(puVar1 + 0x92) & 8) == 0)) {\n        puStack652 = NULL;\n        puStack656 = hDrop;\n        uStack660 = 0x233;\n        uStack664 = hDlg;\n        uStack668 = 0x46f373;\n        (*_sym.imp.USER32.dll_DefDlgProcW)();\n    }\n    else {\n        uStack664 = *puVar1;\n        puStack652 = &stack0xfffffdc8;\n        puStack656 = &stack0xfffffdb8;\n        uStack660 = 0xb0;\n        iVar4 = 0;\n        uStack668 = 0x46f1ba;\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        uStack668 = 0;\n        uStack672 = 0;\n        iStack676 = 0xffffffff;\n        iStack680 = hDrop;\n        uStack684 = 0x46f1c5;\n        iVar3 = (*_sym.imp.SHELL32.dll_DragQueryFileW)();\n        if (0 < iVar3) {\n            do {\n                uStack684 = 0x104;\n                (*_sym.imp.SHELL32.dll_DragQueryFileW)();\n                if (iVar4 < hDrop) {\n                    if (*(**(*0x4c1884 + iVar2 * 4) + 0x90) == '\\x02') {\n                        uVar6 = 0x4b38ec;\n                    }\n                    else {\n                        uVar6 = 0x4b2b04;\n                    }\n                    fcn.00421914(&stack0xfffffda0, uVar6);\n                }\n                uVar6 = 0xc2;\n                iVar5 = iStack680;\n                (*_sym.imp.USER32.dll_SendMessageW)();\n                (*_sym.imp.USER32.dll_SendMessageW)(hDrop);\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar5, 0xb1, uVar6, uVar6);\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar3);\n        }\n        uStack684 = uStack660;\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        (*_sym.imp.SHELL32.dll_DragFinish)();\n        iStack676 = 0;\n        uStack668 = 0;\n        uStack664 = 1;\n        fcn.00412570();\n        uStack664 = 1;\n        iStack676 = iVar2;\n        fcn.0040caee(L\"@GUI_DROPID\");\n        uVar6 = 2;\n        fcn.0040d380(&stack0xfffffd68, &stack0xfffffd58, 1, 2);\n        fcn.00405cd3();\n        fcn.00412570();\n        uStack684 = 1;\n        fcn.0040caee(L\"@GUI_DRAGID\");\n        fcn.0040d380(&stack0xfffffd54, &stack0xfffffd44, 1, 2);\n        fcn.00405cd3();\n        fcn.0040ca8e(&stack0xfffffd74);\n        fcn.0040caee(L\"@GUI_DRAGFILE\");\n        fcn.0040d380(&stack0xfffffd3c, &stack0xfffffd2c, 1, 2);\n        fcn.00405cd3();\n        fcn.00468c6b(0xfffffff3, uVar6, 0, 0);\n        fcn.00412570();\n    }\n    return;\n}\n",
        "token_count": 1063
    },
    "0041df8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041df8a(double *param_1)\n\n{\n    float10 fVar1;\n    \n    if (*(param_1 + 0xc) != 3) {\n        fVar1 = fcn.00412620();\n        fcn.00412570();\n        *param_1 = fVar1;\n        *(param_1 + 0xc) = 3;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0041ba31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ba31(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    iVar2 = *(arg_8h + 4);\n    iVar4 = 0;\n    do {\n        piVar3 = *(iVar2 + *arg_ch * 4);\n        iVar1 = *(piVar3 + 2);\n        if (iVar1 == 0x47) {\n            iVar4 = iVar4 + 1;\n        }\n        else {\n            if ((iVar1 == 0x48) && (iVar4 = iVar4 + -1,  iVar4 < 0)) {\n                return 0;\n            }\n            if (iVar1 == 0x7f) {\n                return -(iVar4 != 0);\n            }\n        }\n        if (iVar4 == 0) {\n            if (iVar1 == 0) {\n                if (*piVar3 != 3) {\n                    if (*piVar3 < 0x27) {\n                        return 0;\n                    }\n                    if (0x2a < *piVar3) {\n                        return 0;\n                    }\n                }\n            }\n            else if (iVar1 == 0x40) {\n                return 0;\n            }\n        }\n        *arg_ch = *arg_ch + 1;\n    } while( true );\n}\n",
        "token_count": 318
    },
    "004337dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004337dc(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.004291d0();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "0043a8c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043a8c8(uint lpString2, uint noname_1, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    int16_t iVar6;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t *piVar7;\n    uint *puVar8;\n    uint *puVar9;\n    uint16_t uVar10;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t lpString1;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    puVar8 = arg_10h;\n    arg_10h[3] = 0;\n    iVar5 = *in_ECX;\n    *arg_10h = 0;\n    var_4h = NULL;\n    iVar5 = (**(iVar5 + 0x10))();\n    if (iVar5 < 0) goto code_r0x0043abe4;\n    cVar3 = fcn.0043a761(0);\n    if (cVar3 != '\\0') {\n        iVar5 = -0x7fffbfff;\n        goto code_r0x0043abe4;\n    }\n    var_8h = NULL;\n    iVar5 = (**(*var_4h + 0xc))(var_4h, &var_ch);\n    if (iVar5 < 0) goto code_r0x0043abe4;\n    if ((*(var_ch + 0x28) == 3) && ((*(var_ch + 0x36) & 0x40) != 0)) {\n        (**(*var_4h + 0x4c))(var_4h, var_ch);\n        iVar5 = (**(*var_4h + 0x20))(var_4h, 0xffffffff, &var_18h);\n        if (-1 < iVar5) {\n            lpString1 = 0;\n            iVar5 = (**(*var_4h + 0x38))(var_4h, var_18h, &lpString1);\n            if (iVar5 < 0) {\n                iVar5 = -0x7fffbffb;\n            }\n            else {\n                fcn.0043a728(&lpString1);\n                iVar5 = (**(*var_4h + 0xc))(var_4h, &var_ch);\n                if (-1 < iVar5) {\n                    fcn.0043a71b();\n                    goto code_r0x0043a9b2;\n                }\n            }\n            fcn.0043a71b();\n            goto code_r0x0043abe4;\n        }\n    }\n    else {\ncode_r0x0043a9b2:\n        var_14h = -1;\n        iVar5 = (**(*var_4h + 0x28))(var_4h, &lpString2, 1, &var_14h);\n        if (iVar5 < 0) {\n            lpString1 = 0;\n            iVar5 = (**(*var_4h + 0x1c))(var_4h);\n            pcVar2 = _sym.imp.OLEAUT32.dll_SysStringLen;\n            if (-1 < iVar5) {\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(lpString1);\n                var_14h = in_EDX;\n                goto code_r0x0043a9f9;\n            }\n            uVar10 = 0;\n            if (*(var_ch + 0x2c) != 0) {\n                do {\n                    iVar5 = (**(*var_4h + 0x14))(var_4h, uVar10, &var_8h);\n                    if (iVar5 < 0) goto code_r0x0043ab0a;\n                    (**(*var_4h + 0x30))(var_4h, *var_8h, &lpString1, 0, 0, 0);\n                    if (((*(var_8h + 4) & 3) != 0) &&\n                       (iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(lpString1, lpString2),  iVar5 == 0)) {\n                        (*pcVar2)(lpString1);\n                        puVar8 = arg_10h;\n                        break;\n                    }\n                    (*pcVar2)(lpString1);\n                    (**(*var_4h + 0x50))(var_4h, var_8h);\n                    var_8h = NULL;\n                    uVar10 = uVar10 + 1;\n                    puVar8 = arg_10h;\n                } while (uVar10 < *(var_ch + 0x2c));\n            }\n        }\n        else {\ncode_r0x0043a9f9:\n            uVar10 = 0;\n            if (*(var_ch + 0x2c) != 0) {\n                do {\n                    iVar5 = (**(*var_4h + 0x14))(var_4h, uVar10, &var_8h);\n                    if (iVar5 < 0) goto code_r0x0043ab0a;\n                    if (((*(var_8h + 4) & 3) != 0) && (*var_8h == var_14h)) break;\n                    (**(*var_4h + 0x50))(var_4h, var_8h);\n                    var_8h = NULL;\n                    uVar10 = uVar10 + 1;\n                } while (uVar10 < *(var_ch + 0x2c));\n            }\n        }\n        (**(*var_4h + 0x4c))(var_4h, var_ch);\n        if (var_8h != NULL) {\n            iVar6 = *(var_8h + 6);\n            if (iVar6 < 0x21) {\n                lpString1 = 0;\n                *puVar8 = 1;\n                piVar7 = var_8h;\n                if (0 < iVar6) {\n                    iVar5 = 0;\n                    puVar9 = puVar8 + 4;\n                    do {\n                        iVar1 = piVar7[2];\n                        iVar6 = *(iVar1 + 4 + iVar5);\n                        *puVar9 = iVar6;\n                        if (iVar6 == 0x1a) {\n                            *puVar9 = *(*(iVar1 + iVar5) + 4) | 0x4000;\n                        }\n                        if (*puVar9 == 0x1b) {\n                            *puVar9 = *(*(iVar1 + iVar5) + 4) | 0x2000;\n                        }\n                        if (*puVar9 == 0x1d) {\n                            uVar4 = fcn.0043a78a();\n                            *puVar9 = uVar4;\n                            piVar7 = var_8h;\n                        }\n                        *(puVar9 + 2) = *(piVar7[2] + 0xc + iVar5);\n                        lpString1 = lpString1 + 1;\n                        iVar5 = iVar5 + 0x10;\n                        puVar9 = puVar9 + 1;\n                        puVar8 = arg_10h;\n                    } while (lpString1 < *(piVar7 + 6));\n                }\n                iVar6 = *(piVar7 + 9);\n                if (iVar6 == 0x16) {\n                    iVar6 = 3;\n                }\n                else if (iVar6 == 0x17) {\n                    iVar6 = 0x13;\n                }\n                else if (iVar6 == 0x18) {\n                    iVar6 = 0;\n                }\n                else if (iVar6 == 0x19) {\n                    iVar6 = 10;\n                }\n                puVar8[1] = piVar7[4];\n                puVar8[2] = piVar7[5];\n                *(puVar8 + 0xe) = *(piVar7 + 6);\n                *(puVar8 + 3) = iVar6;\n                (**(*var_4h + 0x50))(var_4h, piVar7);\n                iVar5 = 0;\n                goto code_r0x0043abe4;\n            }\n            (**(*var_4h + 0x50))(var_4h, var_8h);\n        }\n    }\n    iVar5 = -0x7fffbffb;\ncode_r0x0043abe4:\n    fcn.0043a71b();\n    return iVar5;\ncode_r0x0043ab0a:\n    (**(*var_4h + 0x4c))(var_4h, var_ch);\n    goto code_r0x0043abe4;\n}\n",
        "token_count": 1945
    },
    "00445b75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445b75(int32_t hmenu, uint *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    if (((hmenu != 5) && (hmenu != 6)) &&\n       ((hmenu == 3 || ((hmenu == 4 || (cVar2 = fcn.00445d2c(hmenu, &var_4h),  hmenu = var_4h,  cVar2 != '\\0')))))) {\n        piVar1 = *(hmenu * 4 + 0x4c1aa4);\n        *arg_10h = 0;\n        if (piVar1 != NULL) {\n            iVar3 = *piVar1;\n            var_34h = 0x30;\n            fcn.00421970(&var_30h, 0, 0x2c);\n            if (iVar3 != 0) {\n                var_10h = fcn.0042010a(0x208);\n                *arg_ch = var_10h;\n                var_30h = 0x11;\n                var_ch = 0x104;\n                iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar3, hmenu, 0, &var_34h);\n                if ((iVar3 != 0) && ((var_2ch & 0x800) == 0)) {\n                    if ((var_28h & 3) == 0) {\n                        *arg_10h = *arg_10h | 0x40;\n                    }\n                    else {\n                        *arg_10h = *arg_10h | 0x80;\n                    }\n                    if ((var_28h & 0x8080) != 0) {\n                        *arg_10h = *arg_10h | 0x100;\n                    }\n                    if ((var_28h & 8) == 0) {\n                        *arg_10h = *arg_10h | 4;\n                    }\n                    else {\n                        *arg_10h = *arg_10h | 1;\n                    }\n                    if ((var_28h & 0x1000) != 0) {\n                        *arg_10h = *arg_10h | 0x200;\n                    }\n                    return 1;\n                }\n                fcn.0042017e(*arg_ch);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 612
    },
    "0044af66": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044af66(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = *(in_ECX + 0xc);\n    if (iVar1 < 1) {\n        return;\n    }\n    if (3 < iVar1) {\n        if (iVar1 == 4) goto code_r0x0044afa7;\n        if (iVar1 != 7) {\n            if (iVar1 < 9) {\n                return;\n            }\n            if (10 < iVar1) {\n                if (iVar1 != 0xb) {\n                    return;\n                }\n                if (*(arg_8h + 0xc) == 0xb) {\n                    fcn.00414265(arg_8h);\n                    return;\n                }\n            }\n        }\n    }\n    fcn.0041f833();\ncode_r0x0044afa7:\n    fcn.004084a6();\n    fcn.00407b4b(*(arg_8h + 8));\n    return;\n}\n",
        "token_count": 232
    },
    "0044c1c9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.0044c1c9(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0044c12d(2);\n    iVar2 = iVar1;\n    iVar3 = 0;\n    if ((iVar1 == 3) && (iVar2 = fcn.0044c12d(3),  iVar3 = iVar1,  iVar2 == 7)) {\n        iVar3 = 10;\n        iVar2 = fcn.0044c12d(5);\n        if (iVar2 == 0x1f) {\n            iVar3 = 0x29;\n            iVar2 = fcn.0044c12d(8);\n            if (iVar2 == 0xff) {\n                iVar3 = 0x128;\n                while (iVar2 = fcn.0044c12d(8),  iVar2 == 0xff) {\n                    iVar3 = iVar3 + 0xff;\n                }\n            }\n        }\n    }\n    return iVar2 + iVar3 + 3;\n}\n",
        "token_count": 243
    },
    "0044dc73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044dc73(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX & 0xffffff00;\n    if (2 < *(arg_8h + 8)) {\n        iVar2 = fcn.0040cdb4();\n        if (iVar2 != 0) {\n            var_4h = CONCAT31(in_ECX >> 8, 1);\n        }\n    }\n    fcn.004084a6();\n    fcn.004084a6();\n    cVar1 = fcn.004469f9(var_4h);\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 220
    },
    "0044df2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044df2f(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX & 0xffffff00;\n    if (2 < *(arg_8h + 8)) {\n        iVar2 = fcn.0040cdb4();\n        if (iVar2 != 0) {\n            var_4h = CONCAT31(in_ECX >> 8, 1);\n        }\n    }\n    fcn.004084a6();\n    fcn.004084a6();\n    cVar1 = fcn.00447e6f(var_4h);\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 222
    },
    "0044ec11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ec11(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char16_t *pcVar7;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    iVar5 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar5 + 8);\n    uVar2 = *puVar1;\n    iVar5 = puVar1[1];\n    *puVar1[3] = *puVar1[3] + 1;\n    fcn.004471f1();\n    iVar6 = 0;\n    if (iVar5 == 3) {\n        piVar4 = fcn.0040a4f6(1);\n        if (*piVar4 != 0x3a) goto code_r0x0044eca8;\n        piVar4 = fcn.0040a4f6(2);\n        if (*piVar4 != 0x5c) goto code_r0x0044eca8;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceW)(uVar2, &var_ch, &var_8h, &var_4h, &arg_8h);\n        if (iVar5 == 0) {\n            iVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n    }\n    else {\ncode_r0x0044eca8:\n        iVar6 = 3;\n    }\n    if (iVar6 == 0) {\n        pcVar7 = L\"READY\";\ncode_r0x0044ece9:\n        fcn.0040ca8e(pcVar7);\n        if (iVar6 == 0) goto code_r0x0044ed02;\n    }\n    else {\n        if (iVar6 == 3) {\n            pcVar7 = L\"INVALID\";\n        }\n        else if (iVar6 == 0x13) {\n            pcVar7 = L\"READONLY\";\n        }\n        else {\n            if (iVar6 != 0x15) {\n                pcVar7 = L\"UNKNOWN\";\n                goto code_r0x0044ece9;\n            }\n            pcVar7 = L\"NOTREADY\";\n        }\n        fcn.0040ca8e(pcVar7);\n    }\n    fcn.0044d7e4(1, 0);\ncode_r0x0044ed02:\n    fcn.00405cd3();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar3);\n    return 0;\n}\n",
        "token_count": 649
    },
    "00450b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00450b20(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    code *pcVar3;\n    char cVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint unaff_EBX;\n    uint32_t unaff_ESI;\n    int16_t *piVar8;\n    uint32_t unaff_EDI;\n    uchar *puVar9;\n    char acStack2652 [4];\n    uint uStack2648;\n    uint uStack2644;\n    uint uStack2640;\n    int32_t *apiStack2636 [2];\n    uint uStack2628;\n    uchar auStack2624 [492];\n    uchar auStack2132 [28];\n    uchar auStack2104 [520];\n    uchar auStack1584 [8];\n    uchar auStack1576 [528];\n    uchar auStack1048 [520];\n    uchar auStack528 [524];\n    \n    iVar6 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    piVar8 = **(iVar6 + 8);\n    uStack2628 = 1;\n    if ((*(arg_8h + 8) < 3) || (iVar6 = fcn.0040cdb4(),  iVar6 != 1)) {\n        cVar5 = '\\0';\n    }\n    else {\n        cVar5 = '\\x01';\n    }\n    iVar1 = *piVar8;\n    while (acStack2652[0] = cVar5,  iVar1 != 0) {\n        if (*piVar8 == 0x2b) {\n            piVar8 = piVar8 + 1;\n        }\n        else if (*piVar8 == 0x2d) {\n            piVar8 = piVar8 + 1;\n        }\n        iVar1 = *piVar8;\n        if (((((iVar1 != 0x52) && (iVar1 != 0x72)) && (iVar1 != 0x41)) &&\n            ((((iVar1 != 0x61 && (iVar1 != 0x53)) && ((iVar1 != 0x73 && ((iVar1 != 0x48 && (iVar1 != 0x68)))))) &&\n             (iVar1 != 0x4e)))) &&\n           ((((iVar1 != 0x6e && (iVar1 != 0x4f)) && (iVar1 != 0x6f)) && ((iVar1 != 0x54 && (iVar1 != 0x74)))))) {\n            fcn.00412570();\n            arg_ch[3] = 1;\n            *arg_ch = 0;\n            return 0;\n        }\n        piVar8 = piVar8 + 1;\n        iVar1 = *piVar8;\n    }\n    iVar6 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar2 = *(iVar6 + 8);\n    uStack2648 = *puVar2;\n    uStack2644 = puVar2[1];\n    uStack2640 = puVar2[2];\n    apiStack2636[0] = puVar2[3];\n    *apiStack2636[0] = *apiStack2636[0] + 1;\n    fcn.004478ad();\n    fcn.0042297d(uStack2648, auStack1576, auStack1048, auStack2624, auStack528);\n    fcn.00421914(auStack1576, auStack1048);\n    fcn.00421914(auStack2624, auStack528);\n    puVar9 = auStack2104;\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, puVar9);\n    pcVar3 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n    iVar6 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(auStack1584);\n    if (iVar6 == 0) {\ncode_r0x00450d2c:\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        cVar4 = fcn.00447c0c();\n        if (cVar4 == '\\0') {\ncode_r0x00450d7c:\n            cVar5 = fcn.00452044(apiStack2636, unaff_ESI, unaff_EDI, unaff_EBX);\n            if (cVar5 == '\\0') {\n                fcn.00412570();\n                arg_ch[3] = 1;\n                *arg_ch = 0;\n            }\n        }\n        else {\n            unaff_ESI = unaff_EDI;\n            uVar7 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(apiStack2636);\n            unaff_EDI = unaff_ESI;\n            iVar6 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(&uStack2640, (uVar7 | unaff_ESI) & ~puVar9);\n            if (iVar6 == 0) {\n                (*pcVar3)(auStack2132);\n                goto code_r0x00450d2c;\n            }\n            if (cVar5 != '\\0') {\n                (*pcVar3)(acStack2652);\n                fcn.00421943(apiStack2636, 0x4b3a60);\n                goto code_r0x00450d7c;\n            }\n        }\n        (*pcVar3)(auStack2132);\n    }\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1257
    },
    "00453641": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453641(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    char cVar5;\n    uint8_t uVar6;\n    uint arg_8h_00;\n    uint uVar7;\n    uint arg_ch_00;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = var_4h;\n    uVar3 = arg_8h;\n    uVar7 = 0;\n    uVar1 = *(arg_8h + 8);\n    var_8h = 0;\n    var_4h = var_4h & 0xffffff00;\n    arg_8h = arg_8h & 0xffffff00;\n    if (2 < uVar1) {\n        iVar2 = *(*(uVar3 + 4) + 8);\n        cVar5 = fcn.0041d5f6(0x29);\n        if (cVar5 == '\\0') {\n            fcn.004084a6();\n            uVar7 = **(iVar2 + 8);\n        }\n    }\n    if (3 < uVar1) {\n        cVar5 = fcn.0041d5f6(0x29);\n        if (cVar5 == '\\0') {\n            var_8h = fcn.0040cdb4();\n        }\n    }\n    if (4 < uVar1) {\n        cVar5 = fcn.0041d5f6(0x29);\n        if (cVar5 == '\\0') {\n            uVar6 = fcn.0040cdb4();\n            var_4h = uVar4 & 0xffffff00 | uVar6 & 0xffffff01;\n            uVar6 = fcn.0040cdb4();\n            arg_8h = uVar3 & 0xffffff00 | uVar6 >> 1 & 0xffffff01;\n        }\n    }\n    iVar2 = *(*(uVar3 + 4) + 4);\n    fcn.004084a6();\n    arg_ch_00 = **(iVar2 + 8);\n    arg_8h_00 = fcn.0040cdb4();\n    uVar7 = fcn.0046cc68(arg_8h_00, arg_ch_00, uVar7, var_8h, var_4h, arg_8h);\n    fcn.00412570();\n    *arg_ch = uVar7;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 590
    },
    "0045633c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045633c(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    float10 fVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = **(arg_8h + 4);\n    cVar2 = fcn.0040d16a();\n    if ((cVar2 != '\\0') && (*(iVar1 + 0xc) == 3)) {\n        fcn.00412620();\n        _var_8h = fcn.00471e16();\n        fVar3 = fcn.00412620();\n        if (_var_8h != fVar3) {\n            fcn.00412570();\n            arg_ch[3] = 1;\n            *arg_ch = 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 232
    },
    "00456df1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00456df1(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint extraout_ECX;\n    uint arg_14h;\n    uint *puVar6;\n    uint uVar7;\n    uint uVar8;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar1 = arg_8h;\n    var_8h = 0;\n    var_ch = 0;\n    var_1h._0_1_ = 1;\n    iVar4 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar6 = *(iVar4 + 8);\n    var_1ch = *puVar6;\n    var_18h = puVar6[1];\n    var_14h = puVar6[2];\n    var_10h = puVar6[3];\n    *var_10h = *var_10h + 1;\n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(var_1ch, var_18h);\n    piVar3 = fcn.0040a4f6(0);\n    if (*piVar3 != 0x40) {\n        uVar7 = 0x4b3e20;\n        uVar8 = extraout_ECX;\n        iVar4 = fcn.0043e19e(0x4b3e20);\n        if (iVar4 == -1) {\n            arg_14h = var_8h;\n            if (*(iVar1 + 8) == 3) {\n                uVar5 = fcn.0040cdb4(uVar7, uVar8);\n                arg_14h = var_8h;\n                if ((uVar5 & 1) != 0) {\n                    arg_14h = 1;\n                }\n                uVar5 = fcn.0040cdb4(uVar7, uVar8);\n                if ((uVar5 & 2) != 0) {\n                    arg_14h = 2;\n                }\n                uVar2 = fcn.0040cdb4(uVar7, uVar8);\n                var_1h._0_1_ = var_1h & ~-((uVar2 & 4) != 0);\n            }\n            fcn.0040d2d2(&var_1ch, &arg_8h, &var_ch, arg_14h);\n            if (arg_8h == 0) {\n                if (var_1h != 0) {\n                    fcn.0040d380(&var_1ch, *(*(iVar1 + 4) + 4), 0, arg_14h);\n                    goto code_r0x00456f6c;\n                }\n                fcn.0044d7e4(2, 0);\n                puVar6 = arg_ch;\n                fcn.00412570();\n                puVar6[3] = 1;\n            }\n            else {\n                if ((var_ch & 0x100) == 0) {\n                    fcn.0040d89e(*(*(iVar1 + 4) + 4));\n                    goto code_r0x00456f6c;\n                }\n                fcn.0044d7e4(1, 0);\n                puVar6 = arg_ch;\n                fcn.00412570();\n                puVar6[3] = 1;\n            }\n            *puVar6 = 0;\n            goto code_r0x00456f6c;\n        }\n    }\n    puVar6 = arg_ch;\n    fcn.00412570();\n    *puVar6 = 0;\n    puVar6[3] = 1;\n    fcn.0044d7e4(1, 0);\ncode_r0x00456f6c:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 961
    },
    "00458171": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458171(int32_t arg_8h)\n\n{\n    uint arg_10h;\n    uint arg_ch;\n    uint arg_8h_00;\n    uint arg_14h;\n    \n    arg_10h = 0xffffffff;\n    if (*(arg_8h + 8) == 3) {\n        arg_10h = fcn.0040cdb4();\n    }\n    arg_14h = 0;\n    arg_ch = fcn.0040cdb4();\n    arg_8h_00 = fcn.0040cdb4();\n    fcn.00459fec(arg_8h_00, arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 160
    },
    "004589ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004589ad(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.0044be63();\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n        if (iVar2 != 0) {\n            uVar1 = fcn.0044be63();\n            goto code_r0x004589eb;\n        }\n    }\n    uVar1 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x004589eb:\n    iVar2 = fcn.0040cdb4();\n    iVar3 = fcn.0040cdb4();\n    fcn.00456b19(*(var_4h + 0x108), &var_ch, uVar1);\n    uVar1 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar4 = (*_sym.imp.GDI32.dll_GetPixel)(uVar1, iVar2 + var_ch, iVar3 + var_8h);\n    fcn.00412570();\n    arg_ch[3] = 1;\n    *arg_ch = uVar4 >> 0x10 & 0xffU | (uVar4 & 0xff) << 0x10 | uVar4 & 0xff00;\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar1);\n    return 0;\n}\n",
        "token_count": 373
    },
    "0045936f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045936f(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint *arg_ch_00;\n    uint var_138h;\n    int32_t var_134h;\n    uint var_34h;\n    uint var_24h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0040cdb4();\n    var_ch = iVar1;\n    iVar2 = fcn.0040cdb4();\n    fcn.0040ca8e(0x49dbf0);\n    if (iVar1 == -1) {\n        arg_ch_00 = NULL;\ncode_r0x004593b1:\n        fcn.0044d7e4(iVar1, arg_ch_00);\n        return 0;\n    }\n    var_4h = 1000;\n    var_14h = *(in_ECX + 0x498) / 1000;\n    var_138h = 1;\n    var_10h = (*(in_ECX + 0x498) % 1000) * 1000;\n    arg_ch_00 = &var_14h;\n    var_134h = iVar1;\n    iVar3 = (*_sym.imp.WSOCK32.dll_select)(0, &var_138h, 0, 0);\n    if (iVar3 == -1) {\n        iVar1 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n        goto code_r0x004593b1;\n    }\n    uVar4 = fcn.0042010a(iVar2 + 1);\n    fcn.00404bce(uVar4);\n    iVar1 = (*_sym.imp.WSOCK32.dll___WSAFDIsSet)(iVar1, &var_138h);\n    uVar4 = 0;\n    if (iVar1 == 0) {\ncode_r0x004594d6:\n        uVar4 = 0;\n        arg_8h_00 = 0xffffffff;\n    }\n    else {\n        iVar1 = (*_sym.imp.WSOCK32.dll_recv)(var_ch, var_8h, iVar2);\n        if (iVar1 != -1) {\n            if (iVar1 != 0) {\n                if ((*(arg_8h + 8) < 3) || (iVar2 = fcn.0040cdb4(),  iVar2 == 0)) {\n                    *(var_8h + iVar1) = 0;\n                    iVar2 = fcn.004223f0(var_8h);\n                    if (iVar2 == iVar1) {\n                        fcn.0043e0f5(var_8h);\n                        uVar4 = fcn.0045ae5a(&var_34h);\n                        fcn.00407bef(uVar4);\n                        fcn.00405cd3();\n                        fcn.00405cd3();\n                        goto code_r0x004594e4;\n                    }\n                }\n                iVar2 = iVar1;\n                uVar4 = fcn.0044ad14(iVar1);\n                fcn.0041faa0(uVar4, iVar1, var_8h, iVar2);\n                goto code_r0x004594e4;\n            }\n            goto code_r0x004594d6;\n        }\n        arg_8h_00 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n    }\n    fcn.0044d7e4(arg_8h_00, uVar4);\ncode_r0x004594e4:\n    fcn.00404fd2();\n    return 0;\n}\n",
        "token_count": 865
    },
    "004595fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004595fd(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uStack960;\n    uint uStack956;\n    uint uStack952;\n    uint uStack948;\n    uchar auStack672 [510];\n    ushort uStack162;\n    int32_t iStack160;\n    uchar auStack156 [126];\n    ushort uStack30;\n    uint uStack28;\n    \n    uStack956 = *0x4c10e8;\n    uStack960 = 0x3a8;\n    uStack948 = 0x10;\n    uStack952 = 1;\n    iVar1 = **(arg_8h + 4);\n    uVar2 = *(arg_8h + 8);\n    fcn.004084a6();\n    fcn.00422c1d(auStack156, **(iVar1 + 8), 0x3f);\n    uStack30 = 0;\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    fcn.00422c1d(auStack672, **(iVar1 + 8), 0xff);\n    uStack162 = 0;\n    iStack160 = fcn.0040cdb4();\n    iStack160 = iStack160 * 1000;\n    if (uVar2 < 4) {\n        uStack28 = 0;\n    }\n    else {\n        uStack28 = fcn.0040cdb4();\n    }\n    (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &uStack960);\n    return 0;\n}\n",
        "token_count": 373
    },
    "0046122d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046122d(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint in_stack_ffffffc8;\n    uint uVar3;\n    \n    uVar3 = 0xc;\n    cVar1 = fcn.0040d2c0(0xc);\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        uVar3 = 1;\n    }\n    else {\n        if (((*(arg_8h + 8) < 3) || (cVar1 = fcn.0041d5f6(0x29),  cVar1 != '\\0')) ||\n           (iVar2 = fcn.0040cdb4(),  -1 < iVar2 + -1)) {\n            fcn.004113a0(*(*(arg_8h + 4) + 4));\n            cVar1 = fcn.0040d2c0(4);\n            if (cVar1 == '\\0') {\n                fcn.0040cdb4();\n                fcn.00412570();\n            }\n            uVar3 = fcn.004492f4(&stack0xffffffd8, arg_ch, uVar3);\n            fcn.0044d7e4(uVar3, arg_ch);\n            fcn.00412570();\n            return 0;\n        }\n        fcn.00412570();\n        uVar3 = 0;\n        arg_ch[3] = 1;\n        in_stack_ffffffc8 = 5;\n    }\n    *arg_ch = 0;\n    fcn.0044d7e4(in_stack_ffffffc8, uVar3);\n    return 0;\n}\n",
        "token_count": 393
    },
    "004648bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004648bb(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t arg_ch_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = -1;\n    var_4h = -1;\n    iVar1 = **(arg_8h + 4);\n    var_ch = 1;\n    arg_ch_00 = 0;\n    fcn.004084a6();\n    iVar1 = *(iVar1 + 8);\n    iVar3 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    puVar2 = *(iVar3 + 8);\n    iVar3 = *(arg_8h + 8);\n    if (iVar3 != 2) {\n        if (iVar3 != 3) {\n            if (iVar3 != 4) {\n                if (iVar3 != 5) {\n                    if (iVar3 != 6) {\n                        iVar3 = 0;\n                        goto code_r0x004649be;\n                    }\n                    var_4h = fcn.0040cdb4();\n                    if (var_4h < 1) goto code_r0x00464937;\n                }\n                var_8h = fcn.0040cdb4();\n                var_8h = var_8h + -1;\n                if (var_8h < 0) goto code_r0x00464937;\n            }\n            var_ch = fcn.0040cdb4();\n            if (var_ch == 0) {\ncode_r0x00464937:\n                fcn.00412570();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                fcn.0044d7e4(1, 0);\n                return 0;\n            }\n        }\n        arg_ch_00 = fcn.0040cdb4();\n        if ((arg_ch_00 < 0) || (3 < arg_ch_00)) {\n            arg_ch_00 = 0;\n        }\n    }\n    iVar3 = fcn.0045267a(*puVar2, arg_ch_00, var_ch, puVar2[1], var_8h, var_4h);\ncode_r0x004649be:\n    if (iVar3 == *(iVar1 + 4)) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = iVar3 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 637
    },
    "00464e5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464e5b(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_10h;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t unaff_EDI;\n    int32_t arg_ch_00;\n    uint arg_8h_00;\n    int32_t in_stack_ffffff90;\n    int32_t in_stack_ffffff94;\n    int32_t in_stack_ffffff9c;\n    int32_t in_stack_ffffffa4;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iStack56;\n    \n    fcn.0040d3d2();\n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    iVar1 = *(iVar1 + 8);\n    fcn.00407b6e(*(iVar1 + 4));\n    iVar4 = *(*(arg_8h + 4) + 8);\n    fcn.004084a6();\n    iVar4 = *(iVar4 + 8);\n    iVar3 = *(*(arg_8h + 4) + 4);\n    cVar2 = fcn.0040d16a();\n    if (cVar2 == '\\0') {\n        fcn.004084a6();\n        iStack56 = **(iVar3 + 8);\n        iVar4 = *(*(arg_8h + 4) + 4);\n        fcn.004084a6();\n        iVar4 = *(*(iVar4 + 8) + 4);\n        if (iVar4 == 0) goto code_r0x00464f57;\n        iVar3 = 0;\n        if (3 < *(arg_8h + 8)) {\n            iVar3 = fcn.0040cdb4();\n        }\n        iVar8 = 0;\n        if ((4 < *(arg_8h + 8)) && ((iVar8 = fcn.0040cdb4(),  iVar8 < 0 || (3 < iVar8)))) {\n            iVar8 = 0;\n        }\n        if (iVar3 < 0) {\n            in_stack_ffffffa4 = -1;\n            in_stack_ffffff90 = 0x464fd7;\n            in_stack_ffffff94 = iStack56;\n            in_stack_ffffff9c = iVar3;\n            iVar4 = fcn.0045267a(iStack56, iVar8, iVar3, iVar4, 0xffffffff, 0x7fffffff);\n            if (iVar4 < 0) {\n                iVar3 = -iVar4;\n                iVar4 = 0;\n            }\n            else {\n                in_stack_ffffff90 = iVar4;\n                fcn.00407f40(iVar1, 0, iVar4);\n            }\n            iVar3 = -iVar3;\n        }\n        else {\n            iVar4 = 0;\n        }\n        do {\n            arg_ch_00 = in_stack_ffffff90;\n            arg_8h_00 = 1;\n            iVar8 = in_stack_ffffff94;\n            iVar7 = in_stack_ffffffa4;\n            iVar4 = fcn.0045267a(in_stack_ffffffa4, in_stack_ffffff94, 1, in_stack_ffffff9c, iVar4, 0xffffffff);\n            if (iVar4 == *(iVar1 + 4)) {\n                arg_10h = iVar4 - arg_ch_00;\n                break;\n            }\n            arg_10h = iVar4 - arg_ch_00;\n            in_stack_ffffff90 = arg_ch_00;\n            fcn.00407f40(iVar1, arg_ch_00, arg_10h);\n            fcn.00407b4b(&stack0xffffff9c);\n            fcn.00407b4b(in_stack_ffffffa4);\n            iVar4 = iVar4 + in_stack_ffffffa4;\n            iVar5 = in_stack_ffffff94 + 1;\n            in_stack_ffffff94 = iVar8;\n            in_stack_ffffffa4 = iVar7;\n        } while ((iVar3 == 0) || (iVar5 != iVar3));\n        fcn.00407f40(iVar1, arg_ch_00, arg_10h);\n        fcn.00407b4b(&stack0xffffff9c);\n        fcn.00407ba9(arg_8h_00, 0);\n    }\n    else {\n        iVar3 = fcn.0040cdb4();\n        iVar3 = iVar3 + -1;\n        if ((iVar3 < 0) || (uVar6 = *(iVar4 + 4) + iVar3,  *(iVar1 + 4) <= uVar6 && uVar6 != *(iVar1 + 4))) {\ncode_r0x00464f57:\n            fcn.0040ca8e(0x49dbf0);\n            fcn.0044d7e4(1, 0);\n            goto code_r0x004650b0;\n        }\n        fcn.00407f40(iVar1, 0, iVar3);\n        fcn.00407b4b(unaff_EDI);\n        fcn.00407f40(iVar1, *(unaff_EDI + 4) + iVar3, (*(iVar1 + 4) - *(unaff_EDI + 4)) - iVar3);\n        fcn.00407b4b(&stack0xffffffc8);\n    }\n    fcn.00407bef(&stack0xffffff80);\ncode_r0x004650b0:\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1258
    },
    "00468aa7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468aa7(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    fcn.004019ee(arg_8h);\n    if (*(arg_8h + 8) == 3) {\n        iVar1 = fcn.0040cdb4();\n        *(in_ECX + 0x310) = iVar1 * 1000;\n    }\n    else {\n        *(in_ECX + 0x310) = 0;\n    }\n    uVar2 = (*_sym.imp.WINMM.dll_timeGetTime)();\n    *(in_ECX + 0x318) = uVar2;\n    return;\n}\n",
        "token_count": 160
    },
    "0046a698": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046a698(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint noname_10;\n    \n    uVar4 = arg_18h;\n    if (arg_18h == 0xffffffff) {\n        uVar4 = 4;\n    }\n    if ((uVar4 & 0xc) == 0) {\n        uVar4 = uVar4 | 4;\n    }\n    uVar5 = fcn.0046e0fb(uVar4 | 2);\n    iVar6 = fcn.0041c619(arg_8h, 0, L\"msctls_updown32\", 0, uVar5, 0, 0, 0, 0, arg_10h, noname_10, 0);\n    if (iVar6 != 0) {\n        fcn.00422d13(arg_14h);\n        uVar5 = fcn.00471de0();\n        cVar3 = fcn.0040cf2c(uVar5, &arg_18h, &arg_10h);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        if (((cVar3 != '\\0') && (*arg_8h == ***(*0x4c1870 + arg_18h * 4))) &&\n           (*(**(*0x4c1884 + arg_10h * 4) + 0x90) == '\\x03')) {\n            *arg_ch = iVar6;\n            iVar1 = ***(*0x4c1884 + arg_10h * 4);\n            arg_ch[0xd] = iVar1;\n            (*pcVar2)(iVar6, 0x469, iVar1, 0);\n            (*pcVar2)(iVar6, 0x465, 0, 0x80017fff);\n            return 1;\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(iVar6);\n    }\n    return 0;\n}\n",
        "token_count": 501
    },
    "0046c2e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c2e7(uint hWnd, int32_t X, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint *arg_8h;\n    int32_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *arg_ch;\n    int32_t iVar6;\n    int32_t lpRect;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    cVar3 = fcn.0040cf2c(hWnd, &var_4h, &var_ch);\n    if (cVar3 == '\\0') {\n        uVar4 = 0;\n    }\n    else {\n        arg_8h = **(*0x4c1870 + var_4h * 4);\n        arg_ch = **(*0x4c1884 + var_ch * 4);\n        if ((((X != -1) || (arg_10h != -1)) || (arg_14h != -1)) || (arg_18h != -1)) {\n            iVar1 = *arg_ch;\n            var_ch = arg_ch;\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar1, &lpRect);\n            if (arg_14h == -1) {\n                arg_14h = var_14h - lpRect;\n            }\n            if (arg_18h == -1) {\n                arg_18h = var_10h - var_18h;\n            }\n            lpPoint = lpRect;\n            var_4h = var_18h;\n            (*_sym.imp.USER32.dll_ScreenToClient)(*arg_8h, &lpPoint);\n            if (X == -1) {\n                X = lpPoint;\n            }\n            if (arg_10h == -1) {\n                arg_10h = var_4h;\n            }\n            arg_8h[0x16] = X;\n            arg_8h[0x17] = arg_10h;\n            arg_8h[0x18] = arg_14h;\n            arg_8h[0x19] = arg_18h;\n            if (((*(arg_ch + 0x22) != X) || (*(arg_ch + 0x8a) != arg_10h)) ||\n               ((*(arg_ch + 0x23) != arg_14h || (*(arg_ch + 0x8e) != arg_18h)))) {\n                (*_sym.imp.USER32.dll_MoveWindow)(iVar1, X, arg_10h, arg_14h, arg_18h, 1);\n                fcn.0041c697(arg_8h, arg_ch, 1);\n                if ((*(arg_ch + 0x24) == '\\x03') && (iVar6 = 3,  iVar5 = *0x4c1894,  2 < *0x4c1894)) {\n                    do {\n                        puVar2 = **(*0x4c1884 + iVar6 * 4);\n                        if ((puVar2 != NULL) &&\n                           (((puVar2[1] == arg_8h[1] && (*(puVar2 + 0x24) == '\\x16')) && (puVar2[0xd] == iVar1)))) {\n                            (*_sym.imp.USER32.dll_SendMessageW)(*puVar2, 0x469, iVar1, 0);\n                            iVar5 = *0x4c1894;\n                        }\n                        iVar6 = iVar6 + 1;\n                        arg_ch = var_ch;\n                    } while (iVar6 <= iVar5);\n                }\n                fcn.0046ddee(arg_8h, arg_ch, 1);\n            }\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 885
    },
    "00470597": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00470597(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t in_ECX;\n    uint in_EDX;\n    bool bVar6;\n    \n    uVar4 = *((*(in_ECX / 0x80 + 0x4ac470) * 0x80 + in_ECX % 0x80) * 2 + 0x49e5d0);\n    // switch table (9 cases) at 0x47070b\n    switch(in_EDX) {\n    case 1:\n        cVar1 = *(uVar4 * 8 + 0x4ab0d1);\n        if ((cVar1 == '\\t') || (cVar1 == '\\x05')) goto code_r0x004705e4;\n        bVar6 = cVar1 == '\\b';\ncode_r0x004705de:\n        if (bVar6) goto code_r0x004705e4;\n        uVar4 = 0;\n        goto code_r0x004705e7;\n    case 2:\n        uVar4 = arg_8h == *(*(uVar4 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8);\n        break;\n    case 3:\n        uVar2 = *(uVar4 * 8 + 0x4ab0d1);\n        goto code_r0x0047061a;\n    case 4:\n        uVar2 = *(uVar4 * 8 + 0x4ab0d0);\ncode_r0x0047061a:\n        uVar4 = arg_8h == uVar2;\n        goto code_r0x004705e7;\n    case 5:\n        iVar3 = *(*(uVar4 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8);\n        uVar4 = 1;\n        if (iVar3 != 1) {\n            bVar6 = iVar3 == 3;\ncode_r0x00470647:\n            uVar4 = 1;\n            if (!bVar6) {\n                uVar4 = 0;\n            }\n        }\n        break;\n    case 6:\n        if ((*(*(uVar4 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8) != 6) && (in_ECX != 9)) {\n            bVar6 = in_ECX == 10;\ncode_r0x00470667:\n            if ((!bVar6) && (in_ECX != 0xc)) {\n                bVar6 = in_ECX == 0xd;\n                goto code_r0x004705de;\n            }\n        }\n        goto code_r0x004705e4;\n    case 7:\n        if (((*(*(uVar4 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8) != 6) && (in_ECX != 9)) && (in_ECX != 10)) {\n            bVar6 = in_ECX == 0xb;\n            goto code_r0x00470667;\n        }\ncode_r0x004705e4:\n        uVar4 = 1;\ncode_r0x004705e7:\n        bVar6 = uVar4 == arg_ch;\n        goto code_r0x004705ec;\n    case 8:\n        iVar3 = *(*(uVar4 * 8 + 0x4ab0d1) * 4 + 0x4b5ce8);\n        uVar4 = 1;\n        if ((iVar3 != 1) && (iVar3 != 3)) {\n            bVar6 = in_ECX == 0x5f;\n            goto code_r0x00470647;\n        }\n        break;\n    case 9:\n        puVar5 = *(uVar4 * 8 + 0x4ab0d3) * 4 + 0x4ae670;\n        while (uVar4 = *puVar5,  uVar4 <= in_ECX) {\n            puVar5 = puVar5 + 1;\n            if (in_ECX == uVar4) {\n                return arg_ch;\n            }\n        }\n        bVar6 = arg_ch == 0;\n        goto code_r0x004705ec;\n    default:\n        return 0;\n    }\n    bVar6 = uVar4 == arg_ch;\ncode_r0x004705ec:\n    return bVar6;\n}\n",
        "token_count": 1039
    },
    "0040131c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040131c(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint var_3ch;\n    uint var_1ch;\n    uint var_4h;\n    \n    *0x4c1348 = 0x4b1838;\n    fcn.0040182d();\n    fcn.00401624(extraout_ECX);\n    *(*(*0x4c1348 + 4) + 0x4c1348) = 0x4b182c;\n    *(*(*0x4c1348 + 4) + 0x4c1344) = *(*0x4c1348 + 4) + -0x4b4;\n    fcn.004016db();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    *0x4c1468 = 0;\n    *0x4c146c = 0;\n    *0x4c1470 = 0;\n    *0x4c1474 = 0;\n    *0x4c1478 = 0;\n    *0x4c147c = 0;\n    *0x4c1480 = 0;\n    *0x4c1484 = 0;\n    *0x4c1488 = 0;\n    *0x4c148c = 0;\n    fcn.0040d3d2();\n    *0x4c14a8 = 0;\n    *0x4c14ac = 0;\n    *0x4c14b0 = 0;\n    *0x4c14b4 = 0;\n    *0x4c14b8 = 0;\n    *0x4c14bc = 0;\n    *0x4c14c0 = 0x49dd94;\n    *0x4c14c4 = 0;\n    *0x4c14c8 = 0;\n    *0x4c14cc = 0;\n    *0x4c14d0 = 0;\n    *0x4c14d4 = 0;\n    *0x4c14d8 = 0;\n    *0x4c14dc = 0x4b1828;\n    *0x4c14e0 = 0;\n    *0x4c14e4 = 0;\n    *0x4c14e8 = 0;\n    *0x4c14ec = 0x49dd94;\n    *0x4c14f0 = 0;\n    *0x4c14f4 = 0;\n    *0x4c14f8 = 0;\n    *0x4c14fc = 0x49dd94;\n    *0x4c1500 = 0;\n    *0x4c1504 = 0;\n    *0x4c1508 = 0;\n    *0x4c150c = 0x4b1828;\n    *0x4c1510 = 0;\n    *0x4c1514 = 0;\n    *0x4c1518 = 0;\n    *0x4c1520 = 0;\n    *0x4c1528 = 0;\n    *0x4c152c = 1;\n    fcn.0040d3d2();\n    fcn.00401673();\n    *0x4c1648 = 0x4b1828;\n    *0x4c164c = 0;\n    *0x4c1650 = 0;\n    *0x4c1654 = 0;\n    fcn.004016f2();\n    fcn.0040d3d2();\n    *0x4c17c0 = 0;\n    *0x4c17c4 = 0;\n    *0x4c17c8 = 0;\n    *0x4c17d0 = 0;\n    *0x4c17d4 = 0;\n    *0x4c17d8 = 0;\n    fcn.00414700(0);\n    arg_8h = fcn.00401842();\n    fcn.0040175e(arg_8h);\n    fcn.00412570();\n    fcn.00412570();\n    *0x4c1448 = 0;\n    *0x4c1444 = 0;\n    *0x4c1434 = 0;\n    *0x4c1438 = 0;\n    *0x4c1430 = 0;\n    *0x4c1440 = 0;\n    *0x4c143c = 0;\n    *0x4c1494 = 0;\n    *0x4c17cc = 0;\n    *0x4c17f4 = 0;\n    *0x4c1491 = 0;\n    *0x4c17bc = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n    if ((iVar1 == 0) || (iVar1 == -1)) {\n        *0x4c17dc = 0;\n    }\n    else {\n        *0x4c17dc = fcn.00449bd1();\n        fcn.0044a2f6();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    *0x4c144c = 1;\n    *0x4c1450 = 1;\n    *0x4c1454 = 1;\n    *0x4c1449 = 0;\n    *0x4c144b = 0;\n    *0x4c1464 = 0;\n    *0x4c17e0 = 100;\n    *0x4c1644 = 0;\n    *0x4c163c = 1;\n    *0x4c1640 = 1;\n    *0x4c165c = 0xfa;\n    *0x4c1458 = 10;\n    *0x4c145c = 10;\n    *0x4c1460 = 0xfa;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    return 0x4c1348;\n}\n",
        "token_count": 1425
    },
    "0040318a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040318a(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *0x4c10b8;\n    if (arg_10h == -1) {\n        iVar2 = 0;\n    }\n    else {\n        *0x4c1100 = 0;\n        *0x4c10fc = 0x10;\n        *0x4c10f8 = 0x10;\n        *0x4c10f4 = arg_10h;\n        (*_sym.imp.KERNEL32.dll_EnumResourceNamesW)(0, 0xe, fcn.00447212, 99);\n        iVar2 = *0x4c1100;\n        if (*0x4c1100 != 0) {\n            return;\n        }\n    }\n    (*_sym.imp.USER32.dll_LoadImageW)(uVar1, 99, 1, 0x10, 0x10, iVar2);\n    return;\n}\n",
        "token_count": 243
    },
    "00404b88": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404b88(uint *lpFileName, uint32_t arg_ch)\n\n{\n    uint32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = 0;\n    *in_ECX = 0xffffffff;\n    if ((arg_ch & 0x2000) == 0) {\n        if ((arg_ch & 1) == 0) {\n            if ((arg_ch & 2) == 0) goto code_r0x00404bc6;\n            uVar3 = 2;\n            uVar2 = 0xc0000000;\n            goto code_r0x00404bb1;\n        }\n        in_EAX = (*_sym.imp.KERNEL32.dll_CreateFileW)(*lpFileName, 0xc0000000, 7, 0, 4, 0x80, 0);\n        *in_ECX = in_EAX;\n        if (in_EAX == 0xffffffff) goto code_r0x00404bc6;\n        in_EAX = fcn.00404ee9(0, 0, 2);\n    }\n    else {\n        uVar3 = 3;\n        uVar2 = 0x80000000;\ncode_r0x00404bb1:\n        in_EAX = (*_sym.imp.KERNEL32.dll_CreateFileW)(*lpFileName, uVar2, 7, 0, uVar3, 0x80, 0);\n        *in_ECX = in_EAX;\n    }\n    if (*in_ECX != 0xffffffff) {\n        uVar1 = 1;\n    }\ncode_r0x00404bc6:\n    return in_EAX & 0xffffff00 | uVar1;\n}\n",
        "token_count": 399
    },
    "004050ec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004050ec(int32_t *param_1)\n\n{\n    if ((*param_1 != 0) && (*param_1 != -1)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n        *param_1 = 0;\n    }\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    return;\n}\n",
        "token_count": 114
    },
    "00407f40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f40(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    if ((arg_10h != 0) && (arg_ch < arg_8h[1])) {\n        if ((arg_10h == -1) || (arg_8h[1] <= arg_ch + arg_10h && arg_ch + arg_10h != arg_8h[1])) {\n            arg_10h = arg_8h[1] - arg_ch;\n        }\n        cVar1 = fcn.00408176();\n        if (cVar1 == '\\0') {\n            fcn.00407eda(arg_10h);\n        }\n        else {\n            *in_ECX[3] = *in_ECX[3] + -1;\n            fcn.0040a6f8();\n            uVar2 = fcn.0040c91c(arg_10h + 1);\n            in_ECX[2] = uVar2;\n            iVar3 = fcn.0042010a(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            *in_ECX = iVar3;\n        }\n        in_ECX[1] = arg_10h;\n        fcn.0041faa0(*in_ECX, *arg_8h + arg_ch * 2, arg_10h * 2);\n        *(arg_10h * 2 + *in_ECX) = 0;\n        return;\n    }\n    fcn.0040a2fb(0, 0xffffffff);\n    return;\n}\n",
        "token_count": 395
    },
    "004080ea": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004080ea(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    if (((arg_10h == 0) || (arg_10h == -1)) || (arg_8h == 0)) {\n        fcn.0040a2fb(0, 0xffffffff);\n    }\n    else {\n        cVar1 = fcn.00408176();\n        if (cVar1 == '\\0') {\n            fcn.00407eda(arg_10h);\n        }\n        else {\n            *in_ECX[3] = *in_ECX[3] + -1;\n            fcn.0040a6f8();\n            uVar2 = fcn.0040c91c(arg_10h + 1);\n            in_ECX[2] = uVar2;\n            iVar3 = fcn.0042010a(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            *in_ECX = iVar3;\n        }\n        in_ECX[1] = arg_10h;\n        fcn.0041faa0(*in_ECX, arg_8h + arg_ch * 2, arg_10h * 2);\n        *(arg_10h * 2 + *in_ECX) = 0;\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "0040a2fb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a2fb(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    if ((arg_ch != 0) && (arg_8h < in_ECX[1])) {\n        if ((arg_ch == -1) || (in_ECX[1] <= arg_8h + arg_ch && arg_8h + arg_ch != in_ECX[1])) {\n            arg_ch = in_ECX[1] - arg_8h;\n        }\n        fcn.0040b8a7();\n        fcn.0041faa0(*in_ECX + arg_8h * 2, *in_ECX + (arg_8h + arg_ch) * 2, ((in_ECX[1] - arg_8h) - arg_ch) * 2 + 2);\n        in_ECX[1] = in_ECX[1] - arg_ch;\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0040bbd9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bbd9(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    \n    if ((arg_10h != 0) && (arg_ch < arg_8h[1])) {\n        if ((arg_10h == -1) || (arg_8h[1] <= arg_ch + arg_10h && arg_ch + arg_10h != arg_8h[1])) {\n            arg_10h = arg_8h[1] - arg_ch;\n        }\n        iVar2 = *in_ECX[3];\n        if (iVar2 < 2) {\n            fcn.0040bd71(in_ECX[1] + arg_10h);\n        }\n        else {\n            *in_ECX[3] = iVar2 + -1;\n            puVar1 = fcn.0042010a(4);\n            if (puVar1 == NULL) {\n                puVar1 = NULL;\n            }\n            else {\n                *puVar1 = 1;\n            }\n            in_ECX[3] = puVar1;\n            iVar2 = in_ECX[1] + 1 + arg_10h;\n            in_ECX[2] = iVar2;\n            if (iVar2 == 0) {\n                uVar3 = 8;\n            }\n            else {\n                uVar3 = iVar2 + 7U & 0xfffffff8;\n            }\n            in_ECX[2] = uVar3;\n            iVar2 = fcn.0042010a(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n            fcn.0041faa0(iVar2, *in_ECX, in_ECX[1] * 2 + 2);\n            *in_ECX = iVar2;\n        }\n        fcn.0041faa0(*in_ECX + in_ECX[1] * 2, *arg_8h + arg_ch * 2, arg_10h * 2);\n        in_ECX[1] = in_ECX[1] + arg_10h;\n        *(*in_ECX + in_ECX[1] * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 529
    },
    "0040ceb6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ceb6(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    for (puVar3 = *(arg_8h + 0x80); puVar3[1] != 0; puVar3 = puVar3[1]) {\n    }\n    puVar2 = puVar3;\n    if (0xff < puVar3[3] + arg_18h) {\n        puVar2 = fcn.0042010a(0x910);\n        puVar2[3] = 0;\n        puVar2[1] = 0;\n        *puVar2 = 0;\n        puVar3[1] = puVar2;\n    }\n    iVar1 = puVar2[3];\n    *(iVar1 + 0x810 + puVar2) = arg_ch;\n    if (arg_ch == 8) {\n        if (arg_10h != -1) {\n            fcn.0041a63d();\n        }\n        if (arg_14h != -1) {\n            fcn.0041a63d();\n        }\n    }\n    puVar2[iVar1 * 2 + 4] = arg_10h;\n    puVar2[iVar1 * 2 + 5] = arg_14h;\n    puVar2[3] = iVar1 + 1;\n    return;\n}\n",
        "token_count": 347
    },
    "0041ad1f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ad1f(int32_t arg_8h, uint hdc)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    \n    iVar1 = **(*0x4c1870 + arg_8h * 4);\n    arg_8h_00 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n    if (*(iVar1 + 0x4c) != -1) {\n        arg_8h_00 = *(iVar1 + 0x4c);\n    }\n    (*_sym.imp.GDI32.dll_SetBkColor)(hdc, arg_8h_00);\n    fcn.0041b650(arg_8h_00, 0);\n    return;\n}\n",
        "token_count": 167
    },
    "0041b18c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b18c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint hdc;\n    int32_t iVar3;\n    int32_t arg_ch;\n    uint *puVar4;\n    uint *eSweepAngle;\n    uint uVar5;\n    uint *puVar6;\n    uchar auStack84 [8];\n    uint auStack76 [18];\n    \n    iVar2 = fcn.0041af7d(arg_8h);\n    puVar4 = **(*0x4c1870 + iVar2 * 4);\n    puVar6 = &stack0xffffffb4;\n    eSweepAngle = puVar4[0x72];\n    uVar5 = *puVar4;\n    hdc = (*_sym.imp.USER32.dll_BeginPaint)(uVar5, puVar6);\n    for (; eSweepAngle != NULL; eSweepAngle = *eSweepAngle) {\n        iVar2 = eSweepAngle[2];\n        if ((((*(iVar2 + 0x92) & 0x10) != 0) && (*(iVar2 + 0x93) == -1)) || (*(iVar2 + 0x93) == puVar4[100])) {\n            *0x4c18c8 = 0;\n            *0x4c18c4 = 0;\n            *0x4c18d4 = 0xffffffff;\n            *0x4c18d8 = 0xffffffff;\n            *0x4c18cc = 0;\n            *0x4c18d0 = 1;\n            (*_sym.imp.USER32.dll_GetWindowRect)(*eSweepAngle[2], &stack0xffffff9c);\n            (*_sym.imp.USER32.dll_ScreenToClient)(*puVar4, &stack0xffffff8c);\n            (*_sym.imp.GDI32.dll_SetViewportOrgEx)(hdc, uVar5, puVar6, 0);\n            iVar2 = *(eSweepAngle[2] + 0x48);\n            arg_ch = *(eSweepAngle[2] + 0x4c);\n            iVar3 = arg_ch;\n            if (((-1 < iVar2) && (iVar3 = iVar2,  arg_ch != -1)) || ((arg_ch = iVar3,  iVar3 != -1 || (-1 < iVar2)))) {\n                fcn.0041b58b(hdc, arg_ch, iVar2, 0, 1);\n                (*_sym.imp.GDI32.dll_Rectangle)(hdc, 0, 0, *(eSweepAngle[2] + 0x8c), *(eSweepAngle[2] + 0x8e));\n                fcn.0041b517(hdc, iVar2);\n            }\n            cVar1 = fcn.0041b40f(hdc, eSweepAngle);\n            puVar6 = 0x41b287;\n            uVar5 = hdc;\n            puVar4 = eSweepAngle;\n            fcn.0041b2c2(hdc, eSweepAngle);\n            if (cVar1 != '\\0') {\n                uVar5 = hdc;\n                puVar6 = eSweepAngle;\n                fcn.0046e896(hdc, eSweepAngle);\n            }\n        }\n    }\n    (*_sym.imp.USER32.dll_EndPaint)(*puVar4, &stack0xffffffac);\n    return;\n}\n",
        "token_count": 752
    },
    "0041b2c2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b2c2(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    int32_t var_10h;\n    uint8_t *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = -2;\n    var_10h = 1;\n    (*_sym.imp.GDI32.dll_BeginPath)(arg_8h);\n    *0x4c18cc = 1;\n    for (; arg_ch != 0; arg_ch = *(arg_ch + 4)) {\n        puVar5 = NULL;\n        fcn.0041b58b(arg_8h, var_8h, var_4h, 0, var_10h);\n        if (0 < *(arg_ch + 0xc)) {\n            piVar4 = arg_ch + 0x10;\n            iVar3 = -arg_ch;\n            var_ch = arg_ch + 0x810;\n            do {\n                if (7 < *var_ch) {\n                    if (puVar5 != var_ch + iVar3 + -0x810) {\n                        (*_sym.imp.GDI32.dll_PolyDraw)\n                                  (arg_8h, arg_ch + (puVar5 + 2) * 8, puVar5 + arg_ch + 0x810, \n                                   (var_ch + iVar3 + -0x810) - puVar5);\n                    }\n                    uVar1 = *var_ch;\n                    puVar5 = var_ch + iVar3 + -0x80f;\n                    if (uVar1 != 0x14) {\n                        if (uVar1 == 8) {\n                            if (var_8h != -1) {\n                                fcn.0041b517(arg_8h, var_4h);\n                            }\n                            if (*piVar4 != -1) {\n                                var_8h = *piVar4;\n                            }\n                            if (piVar4[1] != -1) {\n                                var_4h = piVar4[1];\n                            }\n                            fcn.0041b58b(arg_8h, var_8h, var_4h, 0, var_10h);\n                        }\n                        else if (uVar1 == 0x18) {\n                            var_10h = *piVar4;\n                        }\n                    }\n                }\n                piVar4 = piVar4 + 2;\n                puVar2 = var_ch + iVar3 + -0x80f;\n                var_ch = var_ch + 1;\n            } while (puVar2 < *(arg_ch + 0xc));\n        }\n        if (puVar5 != *(arg_ch + 0xc)) {\n            (*_sym.imp.GDI32.dll_PolyDraw)\n                      (arg_8h, arg_ch + (puVar5 + 2) * 8, puVar5 + arg_ch + 0x810, *(arg_ch + 0xc) - puVar5);\n        }\n    }\n    fcn.0041b517(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 724
    },
    "0041bcea": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bcea(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint32_t *in_EDX;\n    ulong uVar5;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.004218fb(in_ECX);\n    *in_EDX = 0;\n    in_EDX[1] = 0;\n    var_8h = 0;\n    iVar3 = iVar3 + -1;\n    if (0 < arg_8h) {\n        while (-1 < iVar3) {\n            uVar1 = *(in_ECX + iVar3 * 2);\n            if ((((0x39 < uVar1) || (uVar1 < 0x30)) && ((uVar1 < 0x41 || (0x46 < uVar1)))) &&\n               ((uVar1 < 0x61 || (0x66 < uVar1)))) goto code_r0x0041bd84;\n            uVar5 = fcn.00434ba0();\n            uVar2 = *in_EDX;\n            *in_EDX = *in_EDX + uVar5;\n            in_EDX[1] = in_EDX[1] + (uVar5 >> 0x20) + CARRY4(uVar2, uVar5);\n            iVar3 = iVar3 + -1;\n            var_8h = var_8h + 1;\n            if (arg_8h <= var_8h) break;\n        }\n    }\n    if (iVar3 == -1) {\n        uVar4 = 1;\n    }\n    else {\ncode_r0x0041bd84:\n        *in_EDX = 0;\n        in_EDX[1] = 0;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 443
    },
    "0041c525": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041c525(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, int32_t arg_20h\n            , int32_t arg_24h, uint32_t arg_28h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t **ppiVar4;\n    \n    if (arg_24h == -1) {\n        arg_24h = 0x100;\n    }\n    if (arg_1ch == -1) {\n        arg_1ch = 0x96;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    iVar1 = fcn.0041c619(arg_8h, -(arg_28h != 0xffffffff) & arg_28h, 0x4b184c, 0x49dbf0, arg_24h, arg_14h, arg_18h, \n                         arg_1ch, arg_20h, arg_10h, arg_24h, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        arg_ch[0x13] = -1;\n        *(arg_ch + 0x22) = arg_14h;\n        *(arg_ch + 0x8a) = arg_18h;\n        *(arg_ch + 0x23) = arg_1ch;\n        *(arg_ch + 0x8e) = arg_20h;\n        piVar2 = fcn.0042010a(0x910);\n        piVar2[3] = 0;\n        piVar2[1] = 0;\n        arg_ch[0x20] = piVar2;\n        piVar2[2] = arg_ch;\n        *piVar2 = 0;\n        ppiVar4 = *(arg_8h + 0x1c8);\n        if (ppiVar4 == NULL) {\n            *(arg_8h + 0x1c8) = piVar2;\n        }\n        else {\n            for (; *ppiVar4 != NULL; ppiVar4 = *ppiVar4) {\n            }\n            *ppiVar4 = piVar2;\n        }\n        *(arg_ch + 0x86) = *(arg_ch + 0x86) | 0x300;\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 586
    },
    "0041d6e5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d6e5(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t **arg_8h_00;\n    uint16_t *puVar5;\n    uint32_t arg_8h_01;\n    uint32_t unaff_EDI;\n    uint32_t uVar6;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    int32_t *piStack28;\n    uchar auStack24 [20];\n    \n    uVar3 = fcn.0040cdb4();\n    iVar4 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar4 + 8);\n    uStack32 = puVar1[2];\n    uStack40 = *puVar1;\n    arg_8h_01 = puVar1[1];\n    piStack28 = puVar1[3];\n    *piStack28 = *piStack28 + 1;\n    uStack36 = arg_8h_01;\n    fcn.00407b6e(arg_8h_01);\n    if (uVar3 == 8) {\n        uVar3 = 0;\n        if (arg_8h_01 != 0) {\n            do {\n                fcn.0040a4f6(uVar3);\n                iVar4 = fcn.0041dd62();\n                if (iVar4 == 0) {\n                    puVar5 = fcn.0040a4f6(uVar3);\n                    fcn.0040bd2f(*puVar5);\n                }\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < arg_8h_01);\n        }\n        arg_8h_00 = &piStack28;\n    }\n    else {\n        if (((uVar3 & 1) != 0) && (arg_8h_01 != 0)) {\n            uVar6 = 0;\n            if (arg_8h_01 != 0) {\n                do {\n                    fcn.0040a4f6(uVar6);\n                    iVar4 = fcn.0041dd62();\n                    if (iVar4 == 0) break;\n                    uVar6 = uVar6 + 1;\n                } while (uVar6 < arg_8h_01);\n            }\n            fcn.00407f40(&stack0xffffffd4, uVar6, arg_8h_01 - uVar6);\n            arg_8h_01 = unaff_EDI;\n            fcn.0040c935(&uStack40);\n        }\n        if (((uVar3 & 2) != 0) && (arg_8h_01 != 0)) {\n            do {\n                uVar6 = arg_8h_01;\n                arg_8h_01 = uVar6 - 1;\n                if (arg_8h_01 == 0xffffffff) break;\n                fcn.0040a4f6(arg_8h_01);\n                iVar4 = fcn.0041dd62();\n            } while (iVar4 != 0);\n            fcn.00407f40(&piStack28, 0, uVar6);\n            fcn.0040c935(auStack24);\n            arg_8h_01 = uStack40;\n        }\n        if (((uVar3 & 4) != 0) && (arg_8h_01 != 0)) {\n            fcn.0040a2fb(0, 0xffffffff);\n            bVar2 = false;\n            uVar3 = 0;\n            if (arg_8h_01 != 0) {\n                do {\n                    fcn.0040a4f6(uVar3);\n                    iVar4 = fcn.0041dd62();\n                    if (iVar4 == 0) {\n                        bVar2 = false;\ncode_r0x0047dac8:\n                        puVar5 = fcn.0040a4f6(uVar3);\n                        fcn.0040bd2f(*puVar5);\n                    }\n                    else if (!bVar2) {\n                        bVar2 = true;\n                        goto code_r0x0047dac8;\n                    }\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 < arg_8h_01);\n            }\n            fcn.0040c935(auStack24);\n        }\n        arg_8h_00 = &stack0xffffffd4;\n    }\n    fcn.00407bef(arg_8h_00);\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1060
    },
    "0041dd84": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.0041dd84(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041dd92();\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 56
    },
    "0041dd92": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar * __fastcall fcn.0041dd92(uint param_1)\n\n{\n    uchar *puVar1;\n    uchar auStack604 [600];\n    \n    puVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    if (puVar1 == 0xffffffff) {\n        puVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(param_1);\n        if (puVar1 != 0xffffffff) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(puVar1);\n            puVar1 = auStack604;\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 138
    },
    "0041e5f8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e5f8(uint param_1)\n\n{\n    uint arg_ch;\n    \n    arg_ch = fcn.0041e673(param_1);\n    fcn.0040a2fb(0, arg_ch);\n    return;\n}\n",
        "token_count": 59
    },
    "0041e617": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e617(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041e63e(arg_8h);\n    if (iVar1 == -1) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = iVar1 + 1;\n    }\n    fcn.0040a2fb(iVar1, 0xffffffff);\n    return;\n}\n",
        "token_count": 98
    },
    "0041f0f3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f0f3(int32_t *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    iVar3 = fcn.0040cdb4();\n    iVar3 = iVar3 + -1;\n    *arg_8h = iVar3;\n    if ((((-1 < iVar3) && (cVar2 = fcn.0040d16a(),  cVar2 != '\\0')) && (iVar3 < *(in_ECX + 0x19c))) &&\n       ((piVar1 = **(*(in_ECX + 0x198) + iVar3 * 4),  piVar1 != NULL && ((arg_10h == -1 || (*piVar1 == arg_10h)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 212
    },
    "00428667": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428667(int32_t arg_8h)\n\n{\n    if (*0x4ba8b0 != -1) {\n        if (arg_8h == 0) {\n            arg_8h = fcn.00428b3a(*0x4ba8b0);\n        }\n        fcn.00428b59(*0x4ba8b0, 0);\n        fcn.00428530(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00429af3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00429af3(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    uint32_t arg_8h_01;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    \n    arg_8h_00 = arg_ch;\n    arg_8h_01 = fcn.004235c3(arg_ch);\n    uVar1 = arg_8h_00[3];\n    if ((uVar1 & 0x82) == 0) {\n        puVar3 = fcn.0042889e();\n        *puVar3 = 9;\ncode_r0x00429b17:\n        arg_8h_00[3] = arg_8h_00[3] | 0x20;\n        return 0xffffffff;\n    }\n    if ((uVar1 & 0x40) != 0) {\n        puVar3 = fcn.0042889e();\n        *puVar3 = 0x22;\n        goto code_r0x00429b17;\n    }\n    iVar5 = 0;\n    if ((uVar1 & 1) != 0) {\n        arg_8h_00[1] = 0;\n        if ((uVar1 & 0x10) == 0) {\n            arg_8h_00[3] = uVar1 | 0x20;\n            return 0xffffffff;\n        }\n        *arg_8h_00 = arg_8h_00[2];\n        arg_8h_00[3] = uVar1 & 0xfffffffe;\n    }\n    uVar1 = arg_8h_00[3];\n    arg_8h_00[3] = uVar1 & 0xffffffef | 2;\n    arg_8h_00[1] = 0;\n    if (((uVar1 & 0x10c) == 0) &&\n       (((iVar4 = fcn.00425a99(),  arg_8h_00 != iVar4 + 0x20 && (iVar4 = fcn.00425a99(),  arg_8h_00 != iVar4 + 0x40)) ||\n        (iVar4 = fcn.004349a2(arg_8h_01),  iVar4 == 0)))) {\n        fcn.00434bd4(arg_8h_00);\n    }\n    if ((arg_8h_00[3] & 0x108U) == 0) {\n        arg_ch = 0x1;\n        iVar5 = fcn.0042bd14(arg_8h_01, &arg_8h, 1);\n    }\n    else {\n        iVar4 = arg_8h_00[2];\n        iVar2 = *arg_8h_00;\n        *arg_8h_00 = iVar4 + 1;\n        arg_ch = iVar2 - iVar4;\n        arg_8h_00[1] = arg_8h_00[6] + -1;\n        if (arg_ch < 1) {\n            if ((arg_8h_01 == 0xffffffff) || (arg_8h_01 == 0xfffffffe)) {\n                iVar4 = 0x4badd0;\n            }\n            else {\n                iVar4 = (arg_8h_01 & 0x1f) * 0x40 + *((arg_8h_01 >> 5) * 4 + 0x4c0940);\n            }\n            if (((*(iVar4 + 4) & 0x20) != 0) && (iVar6 = fcn.004304e3(arg_8h_01, 0, 0, 2),  iVar6 == -1))\n            goto code_r0x00429c2e;\n        }\n        else {\n            iVar5 = fcn.0042bd14(arg_8h_01, iVar4, arg_ch);\n        }\n        *arg_8h_00[2] = arg_8h;\n    }\n    if (iVar5 == arg_ch) {\n        return arg_8h & 0xff;\n    }\ncode_r0x00429c2e:\n    arg_8h_00[3] = arg_8h_00[3] | 0x20;\n    return 0xffffffff;\n}\n",
        "token_count": 994
    },
    "0043c577": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043c577(uint *lParam, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint uVar3;\n    uint extraout_ECX_00;\n    uint *puVar4;\n    uint var_10h;\n    \n    fcn.0040caee(L\"ComboBox\");\n    puVar4 = &var_10h;\n    uVar3 = extraout_ECX;\n    cVar1 = fcn.0043e3b2(puVar4);\n    fcn.00405cd3(puVar4, uVar3);\n    if (cVar1 == '\\0') {\n        fcn.0040caee(L\"ListBox\");\n        puVar4 = &var_10h;\n        uVar3 = extraout_ECX_00;\n        cVar1 = fcn.0043e3b2(puVar4);\n        uVar2 = fcn.00405cd3(puVar4, uVar3);\n        if (cVar1 == '\\0') {\n            return uVar2 & 0xffffff00;\n        }\n        uVar3 = 0x1a2;\n    }\n    else {\n        uVar3 = 0x158;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar3, 0xffffffff, *lParam);\n    *arg_ch = uVar2;\n    return uVar2 & 0xffffff00 | uVar2 != 0xffffffff;\n}\n",
        "token_count": 353
    },
    "0043c600": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043c600(uint arg_8h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint *puVar7;\n    uint var_1ch;\n    uint32_t wParam;\n    uint Msg;\n    \n    fcn.0040caee(L\"ComboBox\");\n    puVar7 = &var_1ch;\n    uVar5 = extraout_ECX;\n    cVar2 = fcn.0043e3b2(puVar7);\n    fcn.00405cd3(puVar7, uVar5);\n    if (cVar2 == '\\0') {\n        fcn.0040caee(L\"ListBox\");\n        puVar7 = &var_1ch;\n        uVar5 = extraout_ECX_00;\n        cVar2 = fcn.0043e3b2(puVar7);\n        uVar4 = fcn.00405cd3(puVar7, uVar5);\n        if (cVar2 == '\\0') goto code_r0x0043c6f4;\n        uVar3 = 0x188;\n        Msg = 0x189;\n        uVar5 = 0x18a;\n    }\n    else {\n        uVar3 = 0x147;\n        Msg = 0x148;\n        uVar5 = 0x149;\n    }\n    uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar3, 0, 0);\n    if ((uVar4 != 0xffffffff) &&\n       (wParam = uVar4,  uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar5, uVar4, 0),  uVar4 != 0xffffffff)) {\n        iVar1 = (uVar4 + 0x101) * 2;\n        uVar5 = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, Msg, wParam, uVar5);\n        if (iVar6 != -1) {\n            fcn.00407e53(uVar5);\n        }\n        else {\n            fcn.00407e53(0x49dbf0);\n        }\n        uVar4 = fcn.0042017e(uVar5);\n        return uVar4 & 0xffffff00 | iVar6 != -1;\n    }\ncode_r0x0043c6f4:\n    return uVar4 & 0xffffff00;\n}\n",
        "token_count": 617
    },
    "0043c6fd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c6fd(uint *arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint uVar6;\n    uint extraout_ECX_00;\n    uint *puVar7;\n    uint var_1ch;\n    uint *hWnd;\n    int32_t var_8h;\n    \n    hWnd = in_ECX;\n    fcn.0040caee(L\"ComboBox\");\n    puVar7 = &var_1ch;\n    uVar6 = extraout_ECX;\n    cVar3 = fcn.0043e3b2(puVar7);\n    fcn.00405cd3(puVar7, uVar6);\n    if (cVar3 == '\\0') {\n        fcn.0040caee(L\"ListBox\");\n        puVar7 = &var_1ch;\n        uVar6 = extraout_ECX_00;\n        cVar3 = fcn.0043e3b2(puVar7);\n        fcn.00405cd3(puVar7, uVar6);\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n        uVar6 = 0x18c;\n        var_8h = 2;\n    }\n    else {\n        uVar6 = 0x14d;\n        var_8h = 9;\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar6, 0xffffffff, *arg_8h);\n    if (iVar4 == -1) {\n        return 0;\n    }\n    uVar5 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*in_ECX, *in_ECX);\n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    uVar6 = (*_sym.imp.USER32.dll_GetParent)(*in_ECX, 0x111, uVar5 & 0xffff | 0x10000);\n    (*pcVar2)(uVar6);\n    uVar5 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*hWnd, *hWnd);\n    uVar6 = (*pcVar1)(*hWnd, 0x111, uVar5 & 0xffff | var_8h << 0x10);\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar6);\n    return 1;\n}\n",
        "token_count": 572
    },
    "0043c7e6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c7e6(uint arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint *puVar7;\n    uint var_1ch;\n    uint *hWnd;\n    int32_t var_8h;\n    \n    hWnd = in_ECX;\n    fcn.0040caee(L\"ComboBox\");\n    puVar7 = &var_1ch;\n    uVar4 = extraout_ECX;\n    cVar3 = fcn.0043e3b2(puVar7);\n    fcn.00405cd3(puVar7, uVar4);\n    if (cVar3 == '\\0') {\n        fcn.0040caee(L\"ListBox\");\n        puVar7 = &var_1ch;\n        uVar4 = extraout_ECX_00;\n        cVar3 = fcn.0043e3b2(puVar7);\n        fcn.00405cd3(puVar7, uVar4);\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n        uVar4 = 0x186;\n        var_8h = 2;\n    }\n    else {\n        uVar4 = 0x14e;\n        var_8h = 9;\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar4, arg_8h, 0);\n    if (iVar5 == -1) {\n        return 0;\n    }\n    uVar6 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*in_ECX, *in_ECX);\n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    uVar4 = (*_sym.imp.USER32.dll_GetParent)(*in_ECX, 0x111, uVar6 & 0xffff | 0x10000);\n    (*pcVar2)(uVar4);\n    uVar6 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*hWnd, *hWnd);\n    uVar4 = (*pcVar1)(*hWnd, 0x111, uVar6 & 0xffff | var_8h << 0x10);\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar4);\n    return 1;\n}\n",
        "token_count": 569
    },
    "0043cc25": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043cc25(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint var_bch;\n    uint var_38h;\n    uint32_t var_2ch;\n    uint var_28h;\n    \n    fcn.0040181b();\n    var_2ch = -(arg_8h != '\\0') & 2;\n    var_28h = 2;\n    arg_ch_00 = fcn.00444c65(0x34, *in_ECX);\n    fcn.00444d41(&var_38h, arg_ch_00, 0x34);\n    if (arg_ch == -1) {\n        (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x102b, 0xffffffff, arg_ch_00);\n    }\n    else {\n        for (; arg_ch <= arg_10h; arg_ch = arg_ch + 1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x102b, arg_ch, arg_ch_00);\n        }\n    }\n    fcn.00402e39();\n    return 1;\n}\n",
        "token_count": 276
    },
    "0043ce8a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ce8a(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x130b, 0, 0);\n    *arg_8h = iVar1;\n    if (iVar1 == -1) {\n        uVar2 = 0xffffff00;\n    }\n    else {\n        *arg_8h = iVar1 + 1;\n        uVar2 = CONCAT31(iVar1 + 1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 151
    },
    "0043d936": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d936(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0040d3d2();\n    if (*(in_ECX + 4) <= arg_ch && arg_ch != *(in_ECX + 4)) {\n        arg_ch = *(in_ECX + 4);\n    }\n    if ((arg_10h == 0xffffffff) || (*(in_ECX + 4) - arg_ch < arg_10h)) {\n        arg_10h = *(in_ECX + 4) - arg_ch;\n    }\n    fcn.00407f40(in_ECX, arg_ch, arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 171
    },
    "0043e3b2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043e3b2(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint extraout_ECX;\n    uint arg_8h_00;\n    uint uVar3;\n    uint var_10h;\n    \n    fcn.0040d3d2();\n    fcn.0043e1f1(&var_10h);\n    arg_8h_00 = *arg_8h;\n    uVar3 = extraout_ECX;\n    iVar1 = fcn.0043e19e(arg_8h_00);\n    uVar2 = fcn.00405cd3(arg_8h_00, uVar3);\n    return uVar2 & 0xffffff00 | iVar1 != -1;\n}\n",
        "token_count": 179
    },
    "004436f9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004436f9(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    piVar1 = arg_ch;\n    iVar7 = *(arg_8h + 4);\n    *arg_ch = 0;\n    iVar7 = iVar7 + -1;\n    iVar6 = 1;\n    arg_ch = NULL;\n    while (-1 < iVar7) {\n        puVar2 = fcn.0041db6f(iVar7);\n        uVar3 = *puVar2;\n        if ((*puVar2 < 0x30) || (0x39 < uVar3)) {\n            if ((uVar3 < 0x41) || (0x46 < uVar3)) {\n                if ((uVar3 < 0x61) || (0x66 < uVar3)) goto code_r0x00443775;\n                iVar4 = uVar3 - 0x57;\n            }\n            else {\n                iVar4 = uVar3 - 0x37;\n            }\n        }\n        else {\n            iVar4 = uVar3 - 0x30;\n        }\n        *piVar1 = *piVar1 + iVar4 * iVar6;\n        iVar7 = iVar7 + -1;\n        iVar6 = iVar6 << 4;\n        arg_ch = arg_ch + 1;\n        if (7 < arg_ch) break;\n    }\n    if (iVar7 == -1) {\n        uVar5 = 1;\n    }\n    else {\ncode_r0x00443775:\n        *piVar1 = 0;\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 415
    },
    "00446f4b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00446f4b(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041dd92();\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 57
    },
    "0044702f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044702f(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_3ch;\n    uint var_20h;\n    uint lpInBuffer;\n    uint var_10h;\n    uint var_ch;\n    int32_t hObject;\n    uint var_4h;\n    \n    *param_2 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(param_1, 0x80, 3, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        puVar3 = &var_3ch;\n        hObject = iVar1;\n        for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        lpInBuffer = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_4h = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)(iVar1, 0x2d1400, &lpInBuffer, 0xc, &var_3ch, 0x28, &var_4h, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        if (iVar1 != 0) {\n            *param_2 = var_20h;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 356
    },
    "00447c0c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00447c0c(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    if ((uVar1 != 0xffffffff) && ((uVar1 & 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 89
    },
    "00448553": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00448553(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    if (param_1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        if (param_2 == 0xffffffff) {\n            iVar1 = fcn.004223f0(param_1);\n            param_2 = iVar1 + 1;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, param_1, param_2, 0, 0);\n        uVar3 = uVar2;\n        if (uVar2 != 0) {\n            uVar3 = param_2;\n            if (param_2 <= uVar2) {\n                uVar3 = uVar2;\n            }\n            uVar3 = fcn.0042010a(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, param_1, param_2, uVar3, uVar2);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 297
    },
    "004488a2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004488a2(int16_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.004218fb(param_1);\n    *param_2 = 0;\n    iVar5 = 1;\n    iVar1 = iVar1 + -1;\n    iVar6 = 0;\n    do {\n        if (iVar1 < 0) break;\n        uVar2 = param_1[iVar1];\n        if ((param_1[iVar1] < 0x30) || (0x39 < uVar2)) {\n            if ((uVar2 < 0x41) || (0x46 < uVar2)) {\n                if ((uVar2 < 0x61) || (0x66 < uVar2)) goto code_r0x0044892b;\n                iVar3 = uVar2 - 0x57;\n            }\n            else {\n                iVar3 = uVar2 - 0x37;\n            }\n        }\n        else {\n            iVar3 = uVar2 - 0x30;\n        }\n        *param_2 = *param_2 + iVar3 * iVar5;\n        iVar1 = iVar1 + -1;\n        iVar5 = iVar5 << 4;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 8);\n    if (iVar1 == -1) {\ncode_r0x00448924:\n        uVar4 = 1;\n    }\n    else {\n        if ((param_1[1] == 0x78) || (param_1[1] == 0x58)) {\n            if (*param_1 == 0x30) goto code_r0x00448924;\n        }\ncode_r0x0044892b:\n        *param_2 = 0;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 460
    },
    "00448932": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00448932(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (param_1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        if (param_2 == -1) {\n            param_2 = fcn.004218fb(param_1);\n            param_2 = param_2 + 1;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, param_2, 0, 0, 0, 0);\n        iVar2 = iVar1;\n        if (iVar1 != 0) {\n            if (iVar1 < param_2) {\n                iVar2 = param_2;\n            }\n            iVar2 = fcn.0042010a(iVar2);\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, param_2, iVar2, iVar1, 0, 0);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 260
    },
    "00449310": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00449310(uint arg_8h, uint arg_ch, double *arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint32_t arg_ch_00;\n    float fVar1;\n    char cVar2;\n    uchar uVar3;\n    ushort uVar4;\n    double *arg_10h_00;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    float fVar8;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar9;\n    float10 fVar10;\n    ulong uVar11;\n    int32_t var_ch;\n    double dStack20;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg_10h_00 = fcn.00449228(arg_8h, &var_ch, &var_4h);\n    uVar6 = var_4h;\n    if (arg_10h_00 != NULL) {\n        iVar7 = *(in_ECX + 4);\n        var_ch = var_ch * 0x20;\n        iVar5 = *(var_ch + iVar7);\n        iVar9 = *(var_ch + 0x1c + iVar7);\n        arg_ch_00 = *(var_ch + 8 + iVar7);\n        iVar7 = *(var_ch + 4 + iVar7);\n        if (arg_18h != -1) {\n            arg_18h = arg_18h * iVar7;\n            iVar5 = iVar5 + arg_18h;\n            arg_10h_00 = arg_10h_00 + arg_18h;\n        }\n        if (iVar5 < iVar9) {\n            if ((arg_ch_00 & 0x21) != 0) {\n                uVar6 = fcn.00449569(arg_ch, arg_ch_00, arg_10h_00, iVar9, iVar5, arg_18h, arg_14h, arg_10h);\n                return uVar6;\n            }\n            cVar2 = arg_14h;\n            if (((arg_ch_00 & 4) != 0) && (arg_18h == -1)) {\n                iVar9 = iVar9 - iVar5;\n                if (cVar2 == '\\0') {\n                    iVar5 = iVar9;\n                    if ((arg_ch_00 & 0x10) != 0) goto code_r0x004493f9;\n                }\n                else if ((arg_ch_00 & 0x10) != 0) {\n                    fcn.0044be47();\n                    iVar7 = fcn.0044be8a();\n                    if (iVar9 < iVar7) {\n                        iVar7 = iVar9;\n                    }\n                    uVar6 = fcn.0044be47(extraout_ECX, iVar7);\n                    fcn.0041faa0(arg_10h_00, uVar6);\n                    iVar5 = iVar7;\n                    arg_10h_00 = fcn.0044be47(extraout_ECX_00, iVar7);\n                    iVar9 = iVar7;\ncode_r0x004493f9:\n                    uVar6 = fcn.0044ad14(iVar9);\n                    fcn.0041faa0(uVar6, iVar9, arg_10h_00, iVar5);\n                    return 0;\n                }\n            }\n            if ((arg_ch_00 & 0x40) == 0) {\n                if ((arg_ch_00 & 8) != 0) {\n                    if (iVar7 == 4) {\n                        if (cVar2 != '\\0') {\n                            fVar10 = fcn.00412620();\n                            *arg_10h_00 = fVar10;\n                        }\n                        dStack20 = *arg_10h_00;\n                    }\n                    else {\n                        if (iVar7 != 8) {\n                            return 0;\n                        }\n                        if (cVar2 != '\\0') {\n                            fVar10 = fcn.00412620();\n                            *arg_10h_00 = fVar10;\n                        }\n                        dStack20 = *arg_10h_00;\n                    }\n                    fcn.00412570();\n                    *arg_10h = dStack20;\n                    *(arg_10h + 0xc) = 4.203895e-45;\n                    return 0;\n                }\n                if (iVar7 == 1) {\n                    if (cVar2 != '\\0') {\n                        uVar3 = fcn.0040d00b();\n                        *arg_10h_00 = uVar3;\n                    }\n                    if ((arg_ch_00 & 2) == 0) {\n                        fVar8 = *arg_10h_00;\n                    }\n                    else {\n                        fVar8 = *arg_10h_00;\n                    }\n                }\n                else {\n                    if (iVar7 != 2) {\n                        if (iVar7 == 4) {\n                            if (cVar2 != '\\0') {\n                                fVar8 = fcn.0040d00b();\n                                *arg_10h_00 = fVar8;\n                            }\n                            fVar8 = *arg_10h_00;\n                            fcn.00412570();\n                            *arg_10h = fVar8;\n                            if ((arg_ch_00 & 2) != 0) {\n                                *(arg_10h + 4) = 0.0;\n                                *(arg_10h + 0xc) = 2.802597e-45;\n                                return 0;\n                            }\n                            *(arg_10h + 0xc) = 1.401298e-45;\n                            return 0;\n                        }\n                        if (iVar7 != 8) {\n                            return 0;\n                        }\n                        if (cVar2 != '\\0') {\n                            uVar11 = fcn.0040d00b();\n                            *arg_10h_00 = uVar11;\n                            *(arg_10h_00 + 4) = uVar11 >> 0x20;\n                        }\n                        fVar8 = *arg_10h_00;\n                        fVar1 = *(arg_10h_00 + 4);\n                        fcn.00412570();\n                        *(arg_10h + 0xc) = 2.802597e-45;\n                        *(arg_10h + 4) = fVar1;\n                        goto code_r0x0044955e;\n                    }\n                    if (cVar2 != '\\0') {\n                        uVar4 = fcn.0040d00b();\n                        *arg_10h_00 = uVar4;\n                    }\n                    if ((arg_ch_00 & 2) == 0) {\n                        fVar8 = *arg_10h_00;\n                    }\n                    else {\n                        fVar8 = *arg_10h_00;\n                    }\n                }\n                fcn.00412570();\n                *(arg_10h + 0xc) = 1.401298e-45;\n            }\n            else {\n                if (cVar2 != '\\0') {\n                    fVar8 = fcn.0044be63();\n                    *arg_10h_00 = fVar8;\n                }\n                fVar8 = *arg_10h_00;\n                fcn.00412570();\n                *(arg_10h + 0xc) = 9.809089e-45;\n            }\ncode_r0x0044955e:\n            *arg_10h = fVar8;\n            return 0;\n        }\n        uVar6 = 3;\n    }\n    fcn.00412570();\n    *arg_10h = 0.0;\n    *(arg_10h + 0xc) = 1.401298e-45;\n    return uVar6;\n}\n",
        "token_count": 1723
    },
    "00449e65": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00449e65(uint32_t arg_8h, uint nStdHandle, int32_t *arg_10h, uint hReadPipe)\n\n{\n    int32_t iVar1;\n    uint32_t *in_ECX;\n    uint lpSecurityAttributes;\n    uint var_8h;\n    uint var_4h;\n    \n    lpSecurityAttributes = 0xc;\n    var_4h = 0;\n    var_8h = 0;\n    if ((*in_ECX & 0x10) == 0) {\n        if ((arg_8h & *in_ECX) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(nStdHandle);\n            *arg_10h = iVar1;\n            if ((iVar1 != 0) && (iVar1 != -1)) goto code_r0x00449edc;\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x4b38f4, 0x40000000, 2, &lpSecurityAttributes, 3, 0x80, 0);\n            *arg_10h = iVar1;\n            if ((iVar1 == -1) || (iVar1 == 0)) goto code_r0x00449e95;\n        }\n        else {\n            if (*arg_10h != 0) {\n                return *arg_10h;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreatePipe)(hReadPipe, arg_10h, &lpSecurityAttributes, 0);\n            if (iVar1 == 0) {\n                return -1;\n            }\n        }\n        fcn.00449d25(1);\n        fcn.00449cce();\n        *arg_10h = arg_10h;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(nStdHandle);\n        *arg_10h = iVar1;\n        if (iVar1 == -1) {\ncode_r0x00449e95:\n            *arg_10h = 0;\n            goto code_r0x00449e97;\n        }\ncode_r0x00449edc:\n        fcn.00449d25(1);\n    }\ncode_r0x00449e97:\n    return *arg_10h;\n}\n",
        "token_count": 510
    },
    "00449f31": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00449f31(uint noname_0, uint noname_1, int32_t *arg_10h, uint hWritePipe)\n\n{\n    int32_t iVar1;\n    uint32_t *in_ECX;\n    uint lpSecurityAttributes;\n    uint var_8h;\n    uint var_4h;\n    \n    lpSecurityAttributes = 0xc;\n    var_4h = 0;\n    var_8h = 0;\n    if ((*in_ECX & 0x10) == 0) {\n        if ((*in_ECX & 1) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n            *arg_10h = iVar1;\n            if ((iVar1 != 0) && (iVar1 != -1)) goto code_r0x00449fa5;\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x4b38f4, 0x80000000, 1, &lpSecurityAttributes, 3, 0x80, 0);\n            *arg_10h = iVar1;\n            if ((iVar1 == -1) || (iVar1 == 0)) goto code_r0x00449f60;\n        }\n        else {\n            if (*arg_10h != 0) {\n                return *arg_10h;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreatePipe)(arg_10h, hWritePipe, &lpSecurityAttributes, 0);\n            if (iVar1 == 0) {\n                return -1;\n            }\n        }\n        fcn.00449d25(1);\n        fcn.00449cce();\n        *arg_10h = arg_10h;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n        *arg_10h = iVar1;\n        if (iVar1 == -1) {\ncode_r0x00449f60:\n            *arg_10h = 0;\n            goto code_r0x00449f62;\n        }\ncode_r0x00449fa5:\n        fcn.00449d25(1);\n    }\ncode_r0x00449f62:\n    return *arg_10h;\n}\n",
        "token_count": 508
    },
    "0044cfc8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044cfc8(uint lpFileName, uint lpCreationTime, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x40000000, 1, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar1, lpCreationTime, 0, arg_10h);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0044d712": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d712(uint arg_8h, int32_t arg_ch)\n\n{\n    ushort uStackY8196;\n    uint uStackY44;\n    \n    fcn.00430650();\n    uStackY8196 = 0;\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    (*_sym.imp.KERNEL32.dll_FormatMessageW)();\n    uStackY44 = 0x44d766;\n    fcn.0040caee(&stack0xffffdffc);\n    return arg_8h;\n}\n",
        "token_count": 131
    },
    "0044d950": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0044d950(uint lpFileName, uint lpPathName, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint lpBuffer;\n    uint lpInBuffer;\n    uint var_820h;\n    uint var_81ah;\n    uint var_814h;\n    int16_t aiStack532 [2];\n    uint var_20ch;\n    uint lpFilePart;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(lpFileName, 0x104, &lpBuffer, &lpFilePart);\n    if (iVar2 != 0) {\n        fcn.0042234b(&var_20ch, L\"\\\\??\\\\%s\", &lpBuffer);\n        iVar2 = fcn.004218fb(&var_20ch);\n        if ((aiStack532[iVar2 + 1] == 0x5c) && (aiStack532[iVar2] != 0x3a)) {\n            aiStack532[iVar2 + 1] = 0;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(lpPathName, 0);\n        if ((iVar3 != 0) || (arg_10h != '\\0')) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpPathName, 0x40000000, 0, 0, 3, 0x2200000, 0);\n            if (iVar3 != -1) {\n                fcn.00421970(&lpInBuffer, 0, 0x618);\n                iVar1 = iVar2 * 2;\n                var_81ah = CONCAT22(iVar1 + 2, iVar1);\n                lpInBuffer = 0xa0000003;\n                fcn.00422c1d(&var_814h, &var_20ch, 0x104);\n                var_820h._0_2_ = var_81ah + 0xc;\n                iVar2 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)\n                                  (iVar3, 0x900a4, &lpInBuffer, var_820h + 8, 0, 0, &lpFileName, 0);\n                if (iVar2 != 0) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n                    return 1;\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            }\n            (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)(lpPathName);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 592
    },
    "0044f608": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f608(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    fcn.0040d3d2();\n    fcn.004084a6();\n    uVar1 = fcn.0041dd92();\n    if (uVar1 == 0xffffffff) {\n        fcn.0040ca8e(0x49dbf0);\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        if ((uVar1 & 1) != 0) {\n            fcn.004039e8(L\"RANOCTG>tY2\");\n        }\n        if ((uVar1 & 0x20) != 0) {\n            fcn.004039e8(L\"ANOCTG>tY2\");\n        }\n        if ((uVar1 & 4) != 0) {\n            fcn.004039e8(0x4b28e4);\n        }\n        if ((uVar1 & 2) != 0) {\n            fcn.004039e8(0x4b2bcc);\n        }\n        if (uVar1 < '\\0') {\n            fcn.004039e8(L\"NOCTG>tY2\");\n        }\n        if ((uVar1 & 0x10) != 0) {\n            fcn.004039e8(0x4b28e8);\n        }\n        if ((uVar1 & 0x1000) != 0) {\n            fcn.004039e8(L\"OCTG>tY2\");\n        }\n        if ((uVar1 & 0x800) != 0) {\n            fcn.004039e8(L\"CTG>tY2\");\n        }\n        if ((uVar1 & 0x100) != 0) {\n            fcn.004039e8(L\"TG>tY2\");\n        }\n    }\n    fcn.00407bef(&stack0xffffffdc);\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 454
    },
    "0044fd47": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044fd47(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uchar auStack600 [16];\n    uint uStack584;\n    uint uStack580;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(**(iVar1 + 8), auStack600);\n    if (iVar1 == -1) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        fcn.00412570();\n        arg_ch[3] = 2;\n        *arg_ch = uStack580;\n        arg_ch[1] = uStack584;\n    }\n    return 0;\n}\n",
        "token_count": 222
    },
    "00456927": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.00456927(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    *arg_8h = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 1;\n    if (arg_14h == 0) {\n        if (arg_10h + (0x7fffffff < arg_ch) == 0) {\n            fcn.00412570();\n            arg_8h[3] = 1;\n        }\n        else {\n            fcn.00412570();\n            arg_8h[3] = 2;\n            arg_8h[1] = arg_10h;\n        }\n        *arg_8h = arg_ch;\n    }\n    else if (arg_14h == 1) {\n        fcn.00412570();\n        arg_8h[3] = 1;\n        *arg_8h = arg_ch;\n    }\n    else {\n        fcn.00412570();\n        *arg_8h = arg_ch;\n        arg_8h[3] = 2;\n        arg_8h[1] = arg_10h;\n    }\n    return arg_8h;\n}\n",
        "token_count": 288
    },
    "00458272": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458272(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t in_ECX;\n    uint uVar10;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    iVar6 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    puVar2 = *(iVar6 + 8);\n    uVar9 = *puVar2;\n    piVar3 = puVar2[3];\n    *piVar3 = *piVar3 + 1;\n    iVar6 = *(*(arg_8h + 4) + 8);\n    fcn.004084a6();\n    puVar2 = *(iVar6 + 8);\n    uVar10 = 0;\n    uVar8 = *puVar2;\n    uVar4 = puVar2[1];\n    *puVar2[3] = *puVar2[3] + 1;\n    iVar6 = fcn.0040cdb4();\n    if ((iVar6 == -1) || (cVar5 = fcn.0041d5f6(0x29),  cVar5 != '\\0')) {\n        uVar7 = 0;\n    }\n    else {\n        uVar7 = fcn.0040cdb4();\n        uVar7 = uVar7 | 0x10000;\n    }\n    cVar5 = fcn.0041d5f6(0x29);\n    if (cVar5 != '\\0') {\n        fcn.0040c935(in_ECX + 0xb8);\n    }\n    if (0x4000 < uVar4) {\n        fcn.0040a2fb(0x4000, 0xffffffff);\n    }\n    if (4 < uVar1) {\n        uVar10 = fcn.0044be63();\n    }\n    if ((*(arg_8h + 8) < 4) || (cVar5 = fcn.0041d5f6(0x29),  cVar5 != '\\0')) {\n        uVar9 = (*_sym.imp.USER32.dll_MessageBoxW)(uVar10, uVar8, uVar9, uVar7);\n    }\n    else {\n        fcn.00412620();\n        uVar8 = fcn.00471de0();\n        uVar9 = fcn.00447c45(uVar9, uVar7, uVar8);\n    }\n    fcn.00412570();\n    *arg_ch = uVar9;\n    arg_ch[3] = 1;\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 743
    },
    "00458694": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458694(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    uint32_t uVar4;\n    uint32_t unaff_EDI;\n    uint arg_8h_00;\n    uint32_t uVar5;\n    uchar *arg_ch_00;\n    int32_t iStack472;\n    uchar *puStack468;\n    uint uStack444;\n    uint uStack440;\n    uchar auStack432 [24];\n    uchar auStack408 [404];\n    \n    uVar5 = *(arg_8h + 8);\n    puStack468 = 0x4586bd;\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (1 < uVar5) {\n        puStack468 = 0x4586d8;\n        iVar1 = fcn.0040cdb4();\n        if (0 < iVar1) {\n            puStack468 = 0x4586e7;\n            fcn.0040cdb4();\n        }\n    }\n    puStack468 = &stack0xfffffe68;\n    iStack472 = 0x101;\n    iVar1 = (*_sym.imp.WSOCK32.dll_WSAStartup)();\n    if (iVar1 != 0) {\n        fcn.0044d7e4(4, 0);\n        return 0;\n    }\n    fcn.0040a6d4();\n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    arg_ch_00 = &stack0xfffffe50;\n    uVar5 = *(iVar1 + 8);\n    fcn.0041f26b(uVar5, arg_ch_00);\n    iVar1 = (*_sym.imp.WSOCK32.dll_inet_addr)(uStack440);\n    iVar2 = (*_sym.imp.WSOCK32.dll_gethostbyname)(uStack444);\n    if ((iVar2 == 0) || (iStack472 = (*_sym.imp.IPHLPAPI.DLL_IcmpCreateFile)(),  iStack472 == -1)) {\n        fcn.0044d7e4(4, 0);\n        goto code_r0x00458864;\n    }\n    puStack468 = str.Ping._0_4_;\n    uVar4 = unaff_EDI & 0xffffff00 | str.Ping[4];\n    uVar3 = fcn.0042010a(0x29);\n    fcn.00404bce(uVar3);\n    if (iVar1 == -1) {\n        uVar3 = 0;\n        iVar1 = (*_sym.imp.IPHLPAPI.DLL_IcmpSendEcho)(arg_ch_00, ***(unaff_EBX + 0xc), &stack0xfffffe28, 5, 0, uVar4);\n    }\n    else {\n        uVar3 = 0;\n        iVar1 = (*_sym.imp.IPHLPAPI.DLL_IcmpSendEcho)(arg_ch_00, iVar1, &stack0xfffffe28, 5, 0, uVar4, 0x29);\n        uVar4 = uVar5;\n    }\n    if (iVar1 == 0) {\ncode_r0x00458819:\n        arg_8h_00 = 2;\ncode_r0x0045881d:\n        fcn.0044d7e4(arg_8h_00, 0);\n    }\n    else {\n        uVar5 = *(uVar4 + 4);\n        if (uVar5 != 0) {\n            if (uVar5 < 0x2afa) {\ncode_r0x0045882b:\n                arg_8h_00 = 4;\n            }\n            else {\n                if (uVar5 < 0x2afe) goto code_r0x00458819;\n                if (uVar5 == 0x2b02) {\n                    arg_8h_00 = 1;\n                }\n                else {\n                    if (uVar5 != 0x2b0a) goto code_r0x0045882b;\n                    arg_8h_00 = 3;\n                }\n            }\n            goto code_r0x0045881d;\n        }\n        iVar1 = *(uVar4 + 8);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        if (iVar1 == 0) {\n            *arg_ch = 1;\n        }\n        else {\n            *arg_ch = iVar1;\n        }\n    }\n    (*_sym.imp.IPHLPAPI.DLL_IcmpCloseHandle)(uVar3);\n    (*_sym.imp.WSOCK32.dll_WSACleanup)();\n    fcn.00404fd2();\ncode_r0x00458864:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1091
    },
    "00459122": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459122(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_10h;\n    \n    iVar3 = **(arg_8h + 4);\n    fcn.004084a6();\n    uVar5 = *(iVar3 + 8);\n    uVar2 = fcn.0040cdb4();\n    cVar1 = fcn.0045acd3(&var_10h, uVar5, uVar2);\n    if (cVar1 != '\\0') {\n        iVar3 = (*_sym.imp.WSOCK32.dll_socket)(2, 1, 6);\n        if (iVar3 == -1) {\n            uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n            fcn.0044d7e4(uVar2, uVar5);\n        }\n        else {\n            iVar4 = (*_sym.imp.WSOCK32.dll_connect)(iVar3, &var_10h, 0x10);\n            if (iVar4 == 0) {\n                fcn.00412570();\n                *arg_ch = iVar3;\n                goto code_r0x004591cc;\n            }\n            uVar2 = 0;\n            uVar5 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            fcn.0044d7e4(uVar5, uVar2);\n            (*_sym.imp.WSOCK32.dll_closesocket)(iVar3);\n        }\n    }\n    fcn.00412570();\n    *arg_ch = -1;\ncode_r0x004591cc:\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 401
    },
    "00459500": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459500(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint arg_ch_00;\n    \n    uVar1 = fcn.0040cdb4();\n    fcn.0044be47();\n    uVar3 = fcn.0044be8a();\n    iVar2 = (*_sym.imp.WSOCK32.dll_send)(uVar1, uVar3 >> 0x20, uVar3, 0);\n    fcn.00412570();\n    arg_ch[3] = 1;\n    if (iVar2 == -1) {\n        *arg_ch = 0;\n        arg_ch_00 = 0;\n        uVar1 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.0044d7e4(uVar1, arg_ch_00);\n    }\n    else {\n        *arg_ch = iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 226
    },
    "004596e2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004596e2(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar3 = **(arg_8h + 4);\n    fcn.004084a6();\n    uVar4 = *(iVar3 + 8);\n    uVar2 = fcn.0040cdb4();\n    cVar1 = fcn.0045acd3(&var_14h, uVar4, uVar2);\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0xffffffff;\n        arg_ch[3] = 1;\n    }\n    else {\n        iVar3 = (*_sym.imp.WSOCK32.dll_socket)(2, 2, 0x11);\n        var_4h = iVar3;\n        fcn.00403320(arg_ch, 1);\n        if (iVar3 == -1) {\n            uVar2 = 0;\n            uVar4 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            fcn.0044d7e4(uVar4, uVar2);\n        }\n        else {\n            iVar3 = (*_sym.imp.WSOCK32.dll_bind)(iVar3, &var_14h, 0x10);\n            uVar4 = 0;\n            if (iVar3 != -1) {\n                puVar5 = fcn.004114a0(arg_ch, 0, 1);\n                fcn.00412570();\n                puVar5[3] = 1;\n                *puVar5 = 0x2b594d1;\n                piVar6 = fcn.004114a0(arg_ch, 0, 1);\n                fcn.00412570();\n                piVar6[3] = 1;\n                *piVar6 = var_4h;\n                fcn.004114a0(arg_ch, 0, 1);\n                iVar3 = **(arg_8h + 4);\n                fcn.004084a6();\n                fcn.00407bef(*(iVar3 + 8));\n                fcn.004114a0(arg_ch, 0, 1);\n                iVar3 = *(*(arg_8h + 4) + 4);\n                fcn.004084a6();\n                fcn.00407bef(*(iVar3 + 8));\n                return 0;\n            }\n            uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            fcn.0044d7e4(uVar2, uVar4);\n            (*_sym.imp.WSOCK32.dll_closesocket)(var_4h);\n        }\n        puVar5 = fcn.004114a0(arg_ch, 0, 1);\n        fcn.00412570();\n        puVar5[3] = 1;\n        *puVar5 = 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 695
    },
    "00459d3e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459d3e(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_10h;\n    \n    iVar2 = fcn.004114a0(**(arg_8h + 4), 1, 1);\n    if (iVar2 == 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        uVar5 = 0;\n        arg_ch[3] = 1;\n        uVar4 = 0xffffffff;\n    }\n    else {\n        iVar2 = fcn.0040cdb4();\n        if (iVar2 == 0x2b594d1) {\n            uVar5 = **(arg_8h + 4);\n            iVar2 = fcn.004114a0(uVar5, 1, 1);\n            fcn.004084a6();\n            uVar4 = *(iVar2 + 8);\n            fcn.004114a0(uVar5, 1, 1);\n            uVar5 = fcn.0040cdb4();\n            cVar1 = fcn.0045acd3(&var_10h, uVar4, uVar5);\n            if (cVar1 == '\\0') {\n                fcn.00412570();\n                *arg_ch = -1;\n            }\n            else {\n                fcn.004114a0(**(arg_8h + 4), 1, 1);\n                uVar4 = fcn.0040cdb4();\n                fcn.0044be47();\n                uVar3 = fcn.0044be8a();\n                iVar2 = (*_sym.imp.WSOCK32.dll_sendto)(uVar4, uVar3 >> 0x20, uVar3, 0, &var_10h, 0x10);\n                fcn.00412570();\n                if (iVar2 == -1) {\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                    uVar4 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n                    goto code_r0x00459e66;\n                }\n                *arg_ch = iVar2;\n            }\n            arg_ch[3] = 1;\n            return 0;\n        }\n        fcn.00412570();\n        *arg_ch = 0;\n        uVar5 = 0;\n        arg_ch[3] = 1;\n        uVar4 = 0xfffffffe;\n    }\ncode_r0x00459e66:\n    fcn.0044d7e4(uVar4, uVar5);\n    return 0;\n}\n",
        "token_count": 609
    },
    "0045acd3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045acd3(ushort *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    uint var_10h;\n    \n    *arg_8h = 2;\n    puVar3 = fcn.0045ae3b(&var_10h);\n    iVar4 = (*_sym.imp.WSOCK32.dll_inet_addr)(*puVar3);\n    fcn.00405cd3();\n    if ((iVar4 == -1) && (cVar1 = fcn.0043d614(),  cVar1 != '\\0')) {\n        arg_8h_00 = 1;\n    }\n    else {\n        *(arg_8h + 2) = iVar4;\n        if (arg_10h - 1U < 0xffff) {\n            uVar2 = (*_sym.imp.WSOCK32.dll_htons)(arg_10h);\n            arg_8h[1] = uVar2;\n            return 1;\n        }\n        arg_8h_00 = 2;\n    }\n    fcn.0044d7e4(arg_8h_00, 0);\n    return 0;\n}\n",
        "token_count": 294
    },
    "0045c604": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045c604(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint *arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    char16_t *arg_10h_00;\n    uint Clsid;\n    uint var_ach;\n    uint var_9ch;\n    uint var_98h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_7ch;\n    int32_t *var_74h;\n    uint pServerInfo;\n    uint pv;\n    uint *var_64h;\n    uint var_5ch;\n    uint var_58h;\n    uint dwAuthnSvc;\n    uint dwAuthzSvc;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint pResults;\n    int32_t *var_ch;\n    int32_t var_8h;\n    \n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    uVar3 = 0;\n    dwAuthnSvc = 0;\n    puVar4 = &dwAuthzSvc;\n    for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.00412570();\n    arg_18h[3] = 1;\n    *arg_18h = 0;\n    iVar2 = fcn.0043a857(0);\n    if (iVar2 < 0) {\n        uVar3 = 0;\n        arg_10h_00 = NULL;\n    }\n    else {\n        var_7ch._0_2_ = 9;\n        iVar2 = fcn.0043aee5(&Clsid, arg_10h, arg_14h);\n        if (-1 < iVar2) {\n            (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0, 2, 3, 0, 0, 0);\n            fcn.00421970(&pServerInfo, 0, 0x10);\n            fcn.0043b289();\n            if (arg_10h == 0) {\n                var_64h = NULL;\n            }\n            else {\n                var_18h = 1;\n                fcn.00407e53(arg_10h);\n                iVar2 = fcn.00452628(0x49dc88);\n                if (iVar2 == -1) {\n                    var_30h = var_5ch;\n                    var_28h = 0;\n                    var_24h = 0;\n                }\n                else {\n                    uVar1 = fcn.0045d029(&var_ach, iVar2);\n                    fcn.0040c935(uVar1);\n                    fcn.00405cd3();\n                    var_28h = var_9ch;\n                    var_24h = var_98h;\n                    uVar1 = fcn.0043d936(&var_ach, iVar2 + 1, 0xffffffff);\n                    fcn.0040c935(uVar1);\n                    fcn.00405cd3();\n                    var_30h = var_8ch;\n                }\n                if (arg_14h == 0) {\n                    var_20h = 0;\n                    var_1ch = 0;\n                }\n                else {\n                    var_20h = arg_14h;\n                    var_1ch = fcn.004218fb(arg_14h);\n                }\n                var_38h = &var_30h;\n                var_64h = &dwAuthnSvc;\n                var_40h = 2;\n                dwAuthnSvc = 9;\n                dwAuthzSvc = 0;\n                var_34h = 0;\n                var_3ch = 3;\n                var_44h = 0;\n            }\n            var_74h = NULL;\n            fcn.00421970(&pResults, 0, 0xc);\n            var_ch = var_74h;\n            pResults = 0x48d91c;\n            var_8h = 0;\n            iVar2 = (*_sym.imp.ole32.dll_CoCreateInstanceEx)(&Clsid, 0, 0x15, &pServerInfo, 1, &pResults);\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\n            if ((-1 < iVar2) && (iVar2 = var_8h,  -1 < var_8h)) {\n                if ((var_64h != NULL) && (var_ch != NULL)) {\n                    iVar2 = (*_sym.imp.ole32.dll_CoSetProxyBlanket)\n                                      (var_ch, dwAuthnSvc, dwAuthzSvc, var_44h, var_40h, var_3ch, &var_30h, 0x800);\n                }\n                var_7ch._0_2_ = 9;\n                var_74h = var_ch;\n                if (var_ch == NULL) {\n                    uVar3 = 1;\n                    arg_10h_00 = L\"NULL Pointer assignment\";\n                    iVar2 = 1;\n                    goto code_r0x0045c889;\n                }\n                if (-1 < iVar2) {\n                    fcn.0044a6f6(&var_7ch);\n                    (**(*var_74h + 8))(var_74h);\n                    goto code_r0x0045c890;\n                }\n            }\n        }\n        uVar3 = 0;\n        arg_10h_00 = NULL;\n    }\ncode_r0x0045c889:\n    uVar3 = fcn.0045c235(iVar2, 0, arg_10h_00, uVar3);\ncode_r0x0045c890:\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return uVar3;\n}\n",
        "token_count": 1452
    },
    "004682db": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004682db(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = fcn.0042010a(0x10000);\n    fcn.00404bce(uVar2);\n    var_14h = 0;\n    fcn.004019ee(arg_8h);\n    iVar3 = fcn.00401dce(1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.0044d7e4(-iVar3, 0);\n        }\n    }\n    else {\n        uVar2 = **(in_ECX + 0x1f8);\n        var_8h = (*_sym.imp.USER32.dll_GetMenu)(uVar2);\n        if (var_8h != 0) {\n            var_ch = 3;\n            if (2 < uVar1) {\n                do {\n                    iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(var_8h);\n                    if (iVar3 == 0) goto code_r0x0046843d;\n                    var_4h = 0;\n                    while( true ) {\n                        (*_sym.imp.USER32.dll_GetMenuStringW)(var_8h, var_4h, var_24h, 0x7fff, 0x400);\n                        iVar5 = *(*(arg_8h + 4) + -4 + var_ch * 4);\n                        fcn.004084a6();\n                        uVar4 = **(iVar5 + 8);\n                        iVar5 = *(*(arg_8h + 4) + -4 + var_ch * 4);\n                        fcn.004084a6();\n                        arg_8h_00 = **(iVar5 + 8);\n                        uVar4 = fcn.004218fb(uVar4);\n                        iVar5 = fcn.00422315(arg_8h_00, var_24h, uVar4);\n                        if (iVar5 == 0) break;\n                        var_4h = var_4h + 1;\n                        if (iVar3 - 1U < var_4h) goto code_r0x0046843d;\n                    }\n                    if (var_ch == uVar1) {\n                        var_14h = (*_sym.imp.USER32.dll_GetMenuItemID)(var_8h);\n                    }\n                    else {\n                        var_8h = (*_sym.imp.USER32.dll_GetSubMenu)(var_8h, var_4h);\n                        if (var_8h == 0) goto code_r0x0046843d;\n                    }\n                    var_ch = var_ch + 1;\n                } while (var_ch <= uVar1);\n                if (var_14h == -1) {\ncode_r0x0046843d:\n                    fcn.00412570();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                    goto code_r0x00468484;\n                }\n            }\n            fcn.004469c9();\n            (*_sym.imp.USER32.dll_PostMessageW)(uVar2, 0x111, var_14h, 0);\n            fcn.004469c9();\n            fcn.00448355();\n            goto code_r0x00468484;\n        }\n    }\n    fcn.00412570();\n    arg_ch[3] = 1;\n    *arg_ch = 0;\ncode_r0x00468484:\n    fcn.00404fd2();\n    return 0;\n}\n",
        "token_count": 899
    },
    "004684fd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004684fd(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint32_t Y;\n    int32_t iVar5;\n    uint Y_00;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint32_t uStack36;\n    \n    uVar4 = *(arg_8h + 8);\n    uStack36 = uVar4;\n    fcn.004019ee(arg_8h);\n    uVar7 = 1;\n    iVar2 = fcn.00401dce(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            fcn.0044d7e4(-iVar2, 0);\n        }\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        return 0;\n    }\n    uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n    uVar3 = (uVar3 & 0x40000000) != 0;\n    uVar6 = 0x468581;\n    fcn.0043e278(&stack0xffffffd8, uVar3);\n    if (uVar4 < 5) {\ncode_r0x004685a4:\n        unaff_ESI = iStack44 - unaff_ESI;\n    }\n    else {\n        uVar6 = 0x29;\n        cVar1 = fcn.0041d5f6(0x29);\n        if (cVar1 != '\\0') goto code_r0x004685a4;\n        unaff_ESI = fcn.0040cdb4();\n    }\n    if ((uVar7 < 6) || (cVar1 = fcn.0041d5f6(0x29),  cVar1 != '\\0')) {\n        iStack40 = iStack40 - unaff_EBX;\n    }\n    else {\n        iStack40 = fcn.0040cdb4();\n    }\n    Y_00 = 0x29;\n    uVar4 = *(*(arg_8h + 4) + 8);\n    cVar1 = fcn.0041d5f6(0x29);\n    uVar7 = uVar4;\n    if (cVar1 == '\\0') {\n        uVar4 = fcn.0040cdb4();\n    }\n    uVar8 = *(*(arg_8h + 4) + 0xc);\n    cVar1 = fcn.0041d5f6(0x29);\n    uVar9 = uVar7;\n    if (cVar1 == '\\0') {\n        uVar7 = fcn.0040cdb4();\n    }\n    Y = uVar7;\n    if (6 < uVar4) {\n        iVar5 = 0x46864c;\n        iVar2 = fcn.0040cdb4();\n        Y = uVar7;\n        if (iVar2 != -1) {\n            if ((iVar2 < 1) || (100 < iVar2)) {\n                iVar5 = 10;\n                iVar2 = 10;\n            }\n            if ((uVar3 != uVar8) || (uVar3 = uVar8,  Y = uVar9,  uVar7 != uVar9)) {\n                while (cVar1 = fcn.00448190(iVar2, 1, &stack0xffffffac, &stack0xffffffa8),  cVar1 != '\\0') {\n                    fcn.0043e40f(uVar6, Y_00, unaff_ESI, iStack40);\n                    iVar2 = iVar5;\n                    fcn.00448355();\n                    iVar5 = iVar2;\n                }\n                goto code_r0x004686e0;\n            }\n        }\n    }\n    fcn.0043e40f(uVar3, Y, unaff_ESI, iStack40);\ncode_r0x004686e0:\n    uVar6 = **(in_ECX + 0x1f8);\n    fcn.00412570();\n    arg_ch[3] = 7;\n    *arg_ch = uVar6;\n    return 0;\n}\n",
        "token_count": 1006
    },
    "00469fc4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00469fc4(uint *arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint X, uint Y, int32_t nWidth, int32_t nHeight\n            , uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar1 = arg_28h;\n    if (arg_28h == 0xffffffff) {\n        uVar1 = 0x100;\n    }\n    uVar2 = fcn.0046e0fb(uVar1 | 0xe);\n    uVar1 = -(arg_2ch != 0xffffffff) & arg_2ch;\n    iVar3 = fcn.0041c619(arg_8h, uVar1, 0x4b184c, 0, uVar2, X, Y, 0, 0, arg_10h, uVar1, 0);\n    *arg_ch = iVar3;\n    if (iVar3 != 0) {\n        if (nWidth == -1) {\n            nWidth = 0x96;\n        }\n        if (nHeight == -1) {\n            nHeight = 0x96;\n        }\n        if (*0x4c1818 == 0) {\n            *(arg_ch + 0x86) = 0x300;\n        }\n        iVar3 = fcn.0046e541(arg_ch, arg_14h, &nWidth, &nHeight);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_MoveWindow)(*arg_ch, X, Y, nWidth, nHeight, 0);\n            uVar2 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(0);\n            uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch, 0x173, 0, 0);\n            (*_sym.imp.GDI32.dll_SelectObject)(uVar2, uVar4);\n            uVar4 = (*_sym.imp.GDI32.dll_GetPixel)(uVar2, 0, 0);\n            (*_sym.imp.GDI32.dll_DeleteDC)(uVar2);\n            uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_8h, 0xffffffec);\n            if ((uVar1 & 0x80000) != 0) {\n                (*_sym.imp.USER32.dll_SetLayeredWindowAttributes)(*arg_8h, uVar4, 0, 1);\n            }\n            return 1;\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n    }\n    return 0;\n}\n",
        "token_count": 608
    },
    "0046d852": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0046d852(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    \n    iVar1 = *0x4c187c;\n    if (arg_8h != 0) {\n        iVar1 = fcn.0041af7d(arg_8h);\n    }\n    if (iVar1 != -1) {\n        arg_8h_00 = **(*0x4c1870 + iVar1 * 4);\n        if ((arg_8h == 0) && (iVar1 = (*_sym.imp.USER32.dll_GetActiveWindow)(),  *arg_8h_00 != iVar1)) {\n            return 0;\n        }\n        fcn.0041b736(arg_8h_00, 0xffffffff);\n        *arg_ch = arg_8h_00[0x5d];\n        *arg_10h = arg_8h_00[0x5e];\n        *arg_14h = arg_8h_00[0x5f];\n        *0x4c18ac = 0;\n        *0x4c18b0 = 0x7fffffff;\n        *arg_18h = arg_8h_00[0x60];\n        *0x4c18b4 = arg_8h_00[0x5b];\n        *0x4c18b8 = arg_8h_00[0x5c];\n        (*_sym.imp.USER32.dll_EnumChildWindows)(*arg_8h_00, fcn.0046d56f, 0);\n        iVar1 = *0x4c18ac;\n        *arg_1ch = -1;\n        if ((iVar1 != 0) && (iVar1 != *arg_8h_00)) {\n            iVar1 = fcn.0041b155(iVar1);\n            *arg_1ch = iVar1;\n            if (iVar1 != -1) {\n                return 1;\n            }\n        }\n        *arg_1ch = 0;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 515
    },
    "0046dd52": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046dd52(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    if (*0x4c187c == -1) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = ***(*0x4c1870 + *0x4c187c * 4);\n    }\n    arg_8h = fcn.0041af7d(arg_8h);\n    if (arg_8h != -1) {\n        if (arg_ch == -1) {\n            *0x4c187c = arg_8h;\n            return uVar4;\n        }\n        *0x4c187c = arg_8h;\n        cVar3 = fcn.0040cf2c(arg_ch, &arg_8h, &var_4h);\n        if (cVar3 != '\\0') {\n            iVar1 = **(*0x4c1870 + arg_8h * 4);\n            iVar2 = **(*0x4c1884 + var_4h * 4);\n            if (*(iVar2 + 0x90) == '\\v') {\n                *(iVar1 + 0x198) = 1;\n                *(iVar1 + 400) = *(iVar2 + 0x93);\n                return uVar4;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 340
    },
    "0046e769": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e769(uint arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041b155(arg_8h);\n    if (iVar1 == -1) {\n    // WARNING: Could not recover jumptable at 0x0046e78a. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.USER32.dll_DefDlgProcW)();\n        return;\n    }\n    if (arg_ch == 0x20) {\n        fcn.0046e7d3(arg_8h, arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n    }\n    else {\n        (*_sym.imp.USER32.dll_CallWindowProcW)(*(**(*0x4c1884 + iVar1 * 4) + 8), arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0046efa8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046efa8(int32_t arg_8h, int32_t wParam, uint32_t arg_10h, int32_t lParam)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint lpPoint;\n    uint var_4h;\n    \n    iVar4 = fcn.0041af7d(arg_8h);\n    piVar2 = **(*0x4c1870 + iVar4 * 4);\n    if (wParam == arg_8h) {\n        if (piVar2[0x68] != 0) {\n            (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n            iVar4 = piVar2[0x68];\ncode_r0x0046eff7:\n            (*_sym.imp.USER32.dll_TrackPopupMenuEx)(iVar4, 0, lpPoint, var_4h, arg_8h, 0);\n            return;\n        }\n    }\n    else {\n        iVar4 = fcn.0041b155(wParam);\n        if (iVar4 != -1) {\n            iVar3 = **(*0x4c1884 + iVar4 * 4);\n            cVar1 = *(iVar3 + 0x90);\n            if ((((cVar1 != '\\x0e') && (cVar1 != '\\x0f')) && (cVar1 != '\\x13')) &&\n               ((cVar1 != '\\x10' && (*(iVar3 + 0xc) != 0)))) {\n                (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n                arg_8h = *piVar2;\n                iVar4 = *(**(*0x4c1884 + iVar4 * 4) + 0xc);\n                goto code_r0x0046eff7;\n            }\n        }\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x7b, wParam, arg_10h & 0xffff | lParam << 0x10);\n    return;\n}\n",
        "token_count": 457
    },
    "0046f0a1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f0a1(uint hDlg, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0041af7d(hDlg);\n    puVar1 = **(*0x4c1870 + iVar2 * 4);\n    if (*arg_ch == 4) {\n        iVar2 = fcn.0041b155(arg_ch[5]);\n        if (iVar2 != -1) {\n            fcn.0046d095(arg_ch, **(*0x4c1884 + iVar2 * 4));\n            if ((*(arg_ch + 4) & 0x10) == 0) {\n                puVar1[0x71] = 0;\n            }\n            else {\n                (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0x401, iVar2, 0);\n            }\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x2b, arg_ch[1], arg_ch);\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "004704aa": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004704aa(uint arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    iVar3 = *arg_10h;\n    while (iVar3 != -1) {\n        iVar5 = 0;\n        iVar1 = iVar3;\n        piVar2 = arg_10h;\n        if (iVar3 != arg_14h) {\n            while( true ) {\n                if (piVar2[1] != iVar1 + 1) break;\n                iVar5 = iVar5 + 1;\n                iVar1 = iVar1 + 1;\n                piVar2 = piVar2 + 1;\n            }\n            iVar3 = fcn.004076f5(arg_8h, arg_ch, iVar3, arg_10h[iVar5]);\n            iVar4 = iVar4 + iVar3;\n        }\n        arg_10h = arg_10h + iVar5 + 1;\n        iVar3 = *arg_10h;\n    }\n    return iVar4;\n}\n",
        "token_count": 289
    },
    "0047050a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0047050a(uint32_t arg_8h, uint arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (*arg_10h != 0) {\n        iVar4 = fcn.004076f5(arg_8h, arg_ch, 0, *arg_10h - 1);\n    }\n    while (uVar2 = *arg_10h,  puVar5 = arg_10h,  uVar2 != 0xffffffff) {\n        while (puVar1 = puVar5 + 1,  *puVar1 == uVar2 + 1) {\n            puVar5 = puVar1;\n            uVar2 = *puVar1;\n        }\n        arg_10h = puVar5 + 1;\n        uVar2 = *arg_10h;\n        if (uVar2 == 0xffffffff) {\n            uVar2 = -((arg_8h >> 0xb & 1) != 0) & 0x110000;\n        }\n        iVar3 = fcn.004076f5(arg_8h, arg_ch, *puVar5 + 1, uVar2 - 1);\n        iVar4 = iVar4 + iVar3;\n    }\n    return iVar4;\n}\n",
        "token_count": 344
    },
    "00403320": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403320(int32_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if (arg_8h[3] == 0x5) {\n        fcn.004143a0();\n    }\n    else {\n        fcn.0040342c();\n    }\n    iVar6 = arg_ch;\n    if ((arg_ch != 0) && (fcn.0040346e(),  0 < iVar6)) {\n        puVar3 = &arg_ch;\n        do {\n            puVar1 = puVar3 + 1;\n            puVar3 = puVar3 + 1;\n            fcn.00403489(*puVar1);\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n    }\n    iVar6 = 0;\n    (*arg_8h)[0x83] = (*arg_8h)[0x84];\n    (*arg_8h)[2] = 1;\n    piVar4 = *arg_8h;\n    if (0 < piVar4[0x83]) {\n        iVar5 = 0xc;\n        do {\n            *(iVar5 + piVar4) = *(iVar5 + 0x100 + piVar4);\n            piVar4 = *arg_8h;\n            uVar2 = *(iVar5 + piVar4) * piVar4[2];\n            piVar4[2] = uVar2;\n            piVar4 = *arg_8h;\n            if (0x1000000 < piVar4[2]) {\n                return uVar2 & 0xffffff00;\n            }\n            iVar6 = iVar6 + 1;\n            iVar5 = iVar5 + 4;\n        } while (iVar6 < piVar4[0x83]);\n    }\n    iVar6 = fcn.0042010a(-((*arg_8h)[2] * 4 >> 0x20 != 0) | (*arg_8h)[2] * 4);\n    **arg_8h = iVar6;\n    puVar3 = fcn.0042010a(4);\n    if (puVar3 == NULL) {\n        puVar3 = NULL;\n    }\n    else {\n        *puVar3 = 1;\n    }\n    (*arg_8h)[1] = puVar3;\n    piVar4 = *arg_8h;\n    iVar6 = 0;\n    if (0 < piVar4[2]) {\n        do {\n            iVar6 = iVar6 + 1;\n            *(*piVar4 + -4 + iVar6 * 4) = 0;\n            piVar4 = *arg_8h;\n        } while (iVar6 < piVar4[2]);\n    }\n    return CONCAT31(iVar6 >> 8, 1);\n}\n",
        "token_count": 660
    },
    "0040342c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040342c(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1[3] != 5) {\n        fcn.00412570();\n        puVar1 = fcn.0042010a(0x214);\n        *param_1 = puVar1;\n        *puVar1 = 0;\n        *(*param_1 + 4) = 0;\n        *(*param_1 + 8) = 0;\n        *(*param_1 + 0x20c) = 0;\n        *(*param_1 + 0x210) = 0;\n        param_1[3] = 5;\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0040346e": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040346e(int32_t *param_1)\n\n{\n    if (param_1[3] != 5) {\n        fcn.0040342c();\n    }\n    *(*param_1 + 0x210) = 0;\n    return;\n}\n",
        "token_count": 64
    },
    "00403489": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403489(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint in_EAX;\n    unkuint3 Var3;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    Var3 = in_EAX >> 8;\n    if (in_ECX[3] == 5) {\n        iVar2 = *(*in_ECX + 0x210);\n        if (iVar2 < 0x40) {\n            *(*in_ECX + 0x10c + iVar2 * 4) = arg_8h;\n            iVar2 = *in_ECX;\n            piVar1 = iVar2 + 0x210;\n            *piVar1 = *piVar1 + 1;\n            iVar2 = CONCAT31(iVar2 >> 8, 1);\n        }\n        else {\n            iVar2 = Var3 << 8;\n        }\n    }\n    else {\n        iVar2 = Var3 << 8;\n    }\n    return iVar2;\n}\n",
        "token_count": 225
    },
    "0040785a": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint16_t * __fastcall fcn.0040785a(uint16_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    do {\n        uVar1 = *param_1;\n        if (uVar1 < 4) {\n            return param_1;\n        }\n        if (uVar1 < 6) {\n            if (param_2 == 0) {\n                return param_1;\n            }\n        }\n        else if (uVar1 != 0x70) {\n            if (uVar1 < 0x78) {\n                return param_1;\n            }\n            if (uVar1 < 0x7b) {\n                if (param_2 == 0) {\n                    return param_1;\n                }\n                do {\n                    param_1 = param_1 + param_1[1];\n                } while (*param_1 == 0x71);\n                uVar1 = *param_1;\n            }\n            else {\n                if (uVar1 < 0x87) {\n                    return param_1;\n                }\n                if (0x8b < uVar1) {\n                    return param_1;\n                }\n            }\n        }\n        param_1 = param_1 + *(uVar1 + 0x49e530);\n    } while( true );\n}\n",
        "token_count": 291
    },
    "00412320": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412320(int32_t **arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    if (arg_8h[3] != 0x5) {\n        return 0;\n    }\n    if ((arg_10h != 0) && ((*arg_8h)[0x84] = 0,  0 < arg_10h)) {\n        piVar4 = &arg_10h;\n        iVar3 = arg_10h;\n        do {\n            piVar4 = piVar4 + 1;\n            if (arg_8h[3] == 0x5) {\n                iVar5 = (*arg_8h)[0x84];\n                if (iVar5 < 0x40) {\n                    (*arg_8h)[iVar5 + 0x43] = *piVar4;\n                    (*arg_8h)[0x84] = (*arg_8h)[0x84] + 1;\n                }\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if (arg_8h[3] == 0x5) {\n        piVar4 = *arg_8h;\n        iVar3 = piVar4[0x83];\n        if (iVar3 == piVar4[0x84]) {\n            iVar5 = 0;\n            if (0 < iVar3) {\n                piVar1 = piVar4 + 0x43;\n                do {\n                    if (*piVar1 < 0) {\n                        return 0;\n                    }\n                    if (piVar1[-0x40] <= *piVar1) {\n                        return 0;\n                    }\n                    iVar5 = iVar5 + 1;\n                    piVar1 = piVar1 + 1;\n                } while (iVar5 < iVar3);\n            }\n            iVar5 = 0;\n            if (0 < iVar3) {\n                iVar2 = piVar4[2];\n                piVar1 = piVar4 + 0x43;\n                do {\n                    if (piVar1[-0x40] == 0x3ea) {\n                        iVar2 = iVar2 / 0x3ea;\n                    }\n                    else {\n                        iVar2 = iVar2 / piVar1[-0x40];\n                    }\n                    iVar5 = iVar5 + *piVar1 * iVar2;\n                    iVar3 = iVar3 + -1;\n                    piVar1 = piVar1 + 1;\n                } while (iVar3 != 0);\n                if (iVar5 < 0) {\n                    return 0;\n                }\n            }\n            if (*(*piVar4 + iVar5 * 4) != 0) {\n                fcn.0040d89e(arg_ch);\n                return *(**arg_8h + iVar5 * 4);\n            }\n            iVar3 = fcn.0042010a(0x10);\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                *(iVar3 + 8) = 0;\n                fcn.004113a0(arg_ch);\n            }\n            *(**arg_8h + iVar5 * 4) = iVar3;\n            return *(**arg_8h + iVar5 * 4);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 772
    },
    "004143a0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004143a0(int32_t **param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0x5) {\n        piVar2 = (*param_1)[1];\n        if ((piVar2 != NULL) && (*piVar2 = *piVar2 + -1,  *piVar2 == 0)) {\n            piVar2 = *param_1;\n            iVar3 = 0;\n            if (0 < piVar2[2]) {\n                do {\n                    iVar1 = *(*piVar2 + iVar3 * 4);\n                    if (iVar1 != 0) {\n                        fcn.00414430();\n                        fcn.0042017e(iVar1);\n                    }\n                    piVar2 = *param_1;\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < piVar2[2]);\n            }\n            fcn.0042017e(**param_1);\n            fcn.0042017e((*param_1)[1]);\n        }\n        **param_1 = 0;\n        (*param_1)[1] = 0;\n        (*param_1)[2] = 0;\n        (*param_1)[0x83] = 0;\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0041e3cc": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e3cc(uint *param_1)\n\n{\n    if (param_1[3] == 5) {\n        fcn.004143a0();\n        fcn.0042017e(*param_1);\n        *param_1 = 0;\n        param_1[3] = 1;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0042ed17": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ed17(uint param_1, int32_t param_2)\n\n{\n    float10 fVar1;\n    char cVar2;\n    uint8_t uVar3;\n    ushort uVar4;\n    int32_t unaff_EBP;\n    float10 in_ST0;\n    float10 in_ST1;\n    uint var_a2h;\n    uint var_94h;\n    uint var_90h;\n    \n    if (*(param_2 + 0xe) == '\\x05') {\n        uVar4 = CONCAT31(*(unaff_EBP + -0xa4) >> 8 & 0xfe | 2, 0x3f);\n    }\n    else {\n        uVar4 = 0x133f;\n    }\n    *(unaff_EBP + -0xa2) = uVar4;\n    fVar1 = 0;\n    *(unaff_EBP + -0x94) = param_2;\n    *(unaff_EBP + -0xa0) = (in_ST0 < fVar1) << 9 | (in_ST0 != fVar1) << 10 | (in_ST0 == fVar1) << 0xe;\n    *(unaff_EBP + -0x90) = 0;\n    fVar1 = 0;\n    *(unaff_EBP + -0xa0) = (in_ST1 < fVar1) << 9 | (in_ST1 != fVar1) << 10 | (in_ST1 == fVar1) << 0xe;\n    uVar3 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    cVar2 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    // WARNING: Could not recover jumptable at 0x0042eda1. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(param_2 + (*(((cVar2 << 1 | cVar2 < '\\0') & 0xf) + 0x4928ec) |\n                  *(((uVar3 & 7) << 1 | uVar3 < '\\0') + 0x4928ec) << 2) + 0x10))();\n    return;\n}\n",
        "token_count": 503
    },
    "0044ac07": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044ac07(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if ((param_1[3] == 5) && (cVar2 = fcn.0044aadf(),  cVar2 != '\\0')) {\n        iVar1 = *param_1;\n        iVar5 = *(iVar1 + 0x20c);\n        iVar3 = *(iVar1 + 8);\n        iVar6 = 0;\n        if (0 < iVar5) {\n            piVar4 = iVar1 + 0x10c;\n            do {\n                iVar3 = iVar3 / piVar4[-0x40];\n                iVar1 = *piVar4;\n                piVar4 = piVar4 + 1;\n                iVar6 = iVar6 + iVar1 * iVar3;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        return iVar6;\n    }\n    return -1;\n}\n",
        "token_count": 253
    },
    "0044daad": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044daad(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    code *pcVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uStack60;\n    uchar auStack36 [12];\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    \n    iVar6 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar6 + 8);\n    uStack20 = puVar1[1];\n    uVar2 = *puVar1;\n    uStack16 = puVar1[2];\n    piStack12 = puVar1[3];\n    *piStack12 = *piStack12 + 1;\n    iVar6 = *(*(arg_8h + 4) + 4);\n    uStack24 = uVar2;\n    fcn.004084a6();\n    puVar1 = *(iVar6 + 8);\n    uVar7 = *puVar1;\n    uVar3 = puVar1[1];\n    *puVar1[3] = *puVar1[3] + 1;\n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharLowerBuffW)(uVar7, uVar3);\n    cVar5 = fcn.0041f885();\n    if (cVar5 != '\\0') {\n        fcn.00407e53(L\"closed\");\n    }\n    cVar5 = fcn.0041f885();\n    if (cVar5 == '\\0') {\n        cVar5 = fcn.0041f885();\n        if (cVar5 != '\\0') goto code_r0x0044db72;\n    }\n    else {\ncode_r0x0044db72:\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(uVar2);\n        if (iVar6 == 5) {\n            fcn.0040caee(L\"open \");\n            fcn.00407b4b(auStack36);\n            fcn.004039e8(L\" type cdaudio alias cd wait\");\n            pcVar4 = _sym.imp.WINMM.dll_mciSendStringW;\n            iVar6 = (*_sym.imp.WINMM.dll_mciSendStringW)(uStack60, 0, 0, 0);\n            if (iVar6 == 0) {\n                fcn.00407e53(L\"set cd door \");\n                fcn.00407b4b(&stack0xffffffbc);\n                fcn.004039e8(L\" wait\");\n                iVar6 = (*pcVar4)(uStack60, 0, 0, 0);\n                if (iVar6 != 0) {\n                    fcn.00412570();\n                    arg_ch[3] = 1;\n                    *arg_ch = 0;\n                }\n                fcn.00407e53(L\"close cd wait\");\n                (*pcVar4)(uVar7, 0, 0, 0);\n            }\n            else {\n                fcn.00412570();\n                arg_ch[3] = 1;\n                *arg_ch = 0;\n            }\n            fcn.00405cd3();\n            goto code_r0x0044dc56;\n        }\n    }\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\ncode_r0x0044dc56:\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 818
    },
    "0045cdb5": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045cdb5(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint arg_8h_00;\n    int32_t iVar8;\n    int32_t var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    ushort var_10h;\n    int32_t var_eh;\n    uint32_t var_8h;\n    \n    piVar2 = arg_ch;\n    iVar4 = *(arg_8h + 4);\n    var_24h = NULL;\n    var_20h = 0;\n    var_1ch = 0;\n    var_3ch = 0;\n    var_34h = 0;\n    var_8h = 0;\n    iVar6 = *arg_ch;\n    var_28h = 0x49dd90;\n    var_30h = 1;\n    var_eh._0_2_ = 0;\n    *NULL = *(*(iVar4 + iVar6 * 4) + 10);\n    iVar5 = iVar6 + 1;\n    iVar8 = *(iVar4 + iVar5 * 4);\n    *arg_ch = iVar5;\n    var_10h = 0xffff;\n    if (*(iVar8 + 8) == 0x47) {\n        *arg_ch = iVar6 + 2;\n        iVar6 = 0;\n        iVar4 = 0x47;\n        do {\n            iVar8 = *(*(arg_8h + 4) + *piVar2 * 4);\n            iVar1 = *(iVar8 + 8);\n            if (iVar1 == 0x47) {\n                iVar6 = iVar6 + 1;\n            }\n            else if (iVar1 == 0x48) {\n                if (iVar6 == 0) {\n                    *piVar2 = *piVar2 + 1;\n                    var_eh._0_2_ = stack0xfffffff0;\n                    var_10h = 0x7f;\n                    fcn.0040b6d0(&var_18h);\n                    arg_ch = NULL;\n                    iVar6 = *var_24h;\n                    goto code_r0x0045ceaa;\n                }\n                iVar6 = iVar6 + -1;\n            }\n            else if (iVar1 == 0x7f) goto code_r0x0045ce50;\n            fcn.0040b6d0(iVar8);\n            *piVar2 = *piVar2 + 1;\n            iVar4 = iVar8;\n        } while( true );\n    }\n    iVar4 = *(*(iVar4 + -4 + iVar5 * 4) + 10);\n    arg_8h_00 = 0x6f;\ncode_r0x0045ce21:\n    uVar7 = 0xffffffff;\n    fcn.0044d520(arg_8h_00, iVar4);\ncode_r0x0045cfd7:\n    fcn.00412570();\n    fcn.0044a46f();\n    fcn.00405800();\n    return uVar7;\ncode_r0x0045ceaa:\n    if (*(iVar6 + 8) == 0x7f) goto code_r0x0045cfd5;\n    piVar2 = arg_ch;\n    if ((((*(var_24h[arg_ch] + 2) == 0x33) &&\n         (cVar3 = fcn.0040d2d2(*var_24h[arg_ch], &arg_8h, &var_8h, 0),  piVar2 = arg_ch,  cVar3 != '\\0')) &&\n        ((var_8h & 0x100) == 0)) && ((*(arg_8h + 0xc) != 8 || (*(var_24h[arg_ch + 1] + 8) != 0x35)))) {\n        arg_ch = arg_ch + 1;\n        if ((*(arg_8h + 0xc) == 5) &&\n           ((*(var_24h[arg_ch] + 8) == 0x4e && (iVar6 = fcn.0045f211(&var_28h, &arg_ch, &arg_8h, 1),  iVar6 < 0))))\n        goto code_r0x0045ce67;\n        iVar6 = arg_8h;\n        fcn.00412570();\n        var_30h = 6;\n        var_3ch = iVar6;\n        if ((*(var_24h[arg_ch] + 8) != 0x40) && (*(var_24h[arg_ch] + 8) != 0x7f)) goto code_r0x0045cf72;\n    }\n    else {\ncode_r0x0045cf72:\n        arg_ch = piVar2;\n        uVar7 = 0xffffffff;\n        iVar6 = fcn.0040fa40(&var_28h, &arg_ch, &var_3ch, 0xffffffff);\n        if (iVar6 < 0) goto code_r0x0045cfd7;\n    }\n    fcn.0041baef(&var_3ch);\n    if (*(var_24h[arg_ch] + 8) == 0x40) {\n        if (*(var_24h[arg_ch + 1] + 8) == 0x7f) {\n            arg_8h_00 = 0x6e;\n            goto code_r0x0045ce21;\n        }\n        arg_ch = arg_ch + 1;\n    }\n    iVar6 = var_24h[arg_ch];\n    goto code_r0x0045ceaa;\ncode_r0x0045cfd5:\n    uVar7 = 0;\n    goto code_r0x0045cfd7;\ncode_r0x0045ce50:\n    fcn.0044d520(0x6f, *(*(*(arg_8h + 4) + -4 + *piVar2 * 4) + 10));\ncode_r0x0045ce67:\n    uVar7 = 0xffffffff;\n    goto code_r0x0045cfd7;\n}\n",
        "token_count": 1451
    },
    "0045d342": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d342(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    ulong uVar5;\n    uint uVar6;\n    int32_t var_34h;\n    int32_t var_2ch;\n    uint var_24h;\n    uint var_14h;\n    \n    iVar2 = *(arg_8h + 4);\n    *arg_ch = *arg_ch + 1;\n    iVar2 = *(iVar2 + *arg_ch * 4);\n    if (*(iVar2 + 8) == 0x7f) {\n        while (*(in_ECX + 0x160) != 0) {\n            uVar6 = fcn.004053b6();\n            fcn.00404b40(uVar6);\n            if ((var_34h == 4) || (var_34h == 5)) {\n                fcn.00412570();\n                fcn.00412570();\n                if (*(in_ECX + 0x160) != 0) {\n                    do {\n                        while( true ) {\n                            do {\n                                iVar2 = *arg_10h;\n                                *arg_10h = iVar2 + 1;\n                                uVar5 = fcn.00405554(iVar2);\n                                arg_10h = uVar5 >> 0x20;\n                                if (uVar5 == 0) {\n                                    return;\n                                }\n                                piVar3 = **(uVar5 + 4);\n                            } while ((*(piVar3 + 2) != 0) || (iVar4 = *piVar3,  iVar4 == 0x14));\n                            if (iVar4 != 0x15) break;\n                            if (extraout_ECX == 0) {\n                                return;\n                            }\n                        }\n                    } while (((iVar4 != 0x16) && ((iVar4 == 0x17 || (iVar4 != 0x18)))) || (extraout_ECX != 0));\n                    *arg_10h = iVar2;\n                    return;\n                }\n                break;\n            }\n            *arg_10h = var_2ch + 1;\n            fcn.0040d9f2();\n            fcn.00412570();\n            fcn.00412570();\n        }\n        iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n        uVar6 = 0xb5;\n    }\n    else {\n        iVar1 = *(iVar2 + 10);\n        uVar6 = 0x72;\n    }\n    fcn.0044d520(uVar6, iVar1);\n    return;\n}\n",
        "token_count": 632
    },
    "00461620": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00461620(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint extraout_ECX;\n    uint arg_ch_00;\n    uint var_14h;\n    uint var_1h;\n    \n    var_1h._0_1_ = '\\0';\n    fcn.004084a6();\n    cVar1 = fcn.00446f5b(&var_1h);\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.0044d7e4(4, 0);\n    }\n    else if (var_1h == '\\0') {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        arg_ch_00 = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, arg_8h);\n        if (iVar2 == 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar3 == 5) {\n                fcn.00446937(L\"SeDebugPrivilege\");\n                cVar1 = fcn.0043bec3(extraout_ECX);\n                if (cVar1 == '\\0') {\n                    arg_8h = 0;\n                    fcn.00407ba9(5, 0);\n                    fcn.0044d7e4(2, 0);\n                    fcn.00412570();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0);\n                }\n                fcn.0043b8b0();\n            }\n            else {\n                fcn.00407ba9(iVar3, 0);\n                arg_8h = 0;\n                fcn.0044d7e4(1, 0);\n                fcn.00412570();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n            }\n            arg_ch_00 = arg_8h;\n            if (iVar2 == 0) {\n                return 0;\n            }\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar2, 0);\n        if (iVar3 == 0) {\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n            fcn.00407ba9(arg_8h_00, arg_ch_00);\n            fcn.0044d7e4(3, 0);\n            fcn.00412570();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 705
    },
    "0046609e": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046609e(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar2 = fcn.00465f56(arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        uVar1 = *(arg_8h + 8);\n        arg_8h_00 = 1;\n        var_8h = 1;\n        var_4h = 0xffffffff;\n        arg_8h = 0xffffffff;\n        if (6 < uVar1) {\n            arg_8h = fcn.0040cdb4();\n        }\n        if (5 < uVar1) {\n            var_4h = fcn.0040cdb4();\n        }\n        if (4 < uVar1) {\n            var_8h = fcn.0040cdb4();\n        }\n        iVar3 = arg_8h_00;\n        if (3 < uVar1) {\n            fcn.004084a6();\n            iVar3 = fcn.00447d1c();\n        }\n        if (iVar3 == 1) {\n            arg_8h_00 = 0;\n        }\n        else if (iVar3 == 2) {\n            arg_8h_00 = 2;\n        }\n        else if (iVar3 != 3) {\n            fcn.00412570();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            return 0;\n        }\n        fcn.0043c145(arg_8h_00, var_8h, var_4h, arg_8h);\n        fcn.00448355();\n    }\n    return 0;\n}\n",
        "token_count": 450
    },
    "00466189": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466189(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    int32_t **arg_ch_00;\n    uint arg_8h_00;\n    int32_t *piStack52;\n    uchar auStack48 [16];\n    uchar auStack32 [8];\n    uint uStack24;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack24 = 0;\n    uStack16 = 0;\n    uStack12 = 1;\n    fcn.0040d3d2();\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    cVar3 = fcn.00465f56(arg_8h);\n    if (cVar3 == '\\0') {\n        fcn.0044d7e4(1, 0);\n        goto code_r0x0046660b;\n    }\n    fcn.0040ca8e(0x49dbf0);\n    while (*(arg_8h + 8) < 5) {\n        fcn.0041baef(auStack32);\n    }\n    iVar1 = *(*(arg_8h + 4) + 0xc);\n    fcn.004084a6();\n    puVar2 = *(iVar1 + 8);\n    uVar4 = *puVar2;\n    arg_8h_00 = puVar2[1];\n    piStack52 = puVar2[3];\n    *piStack52 = *piStack52 + 1;\n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar4);\n    uVar4 = *(in_ECX + 0x31c);\n    cVar3 = fcn.0041f885();\n    if (cVar3 == '\\0') {\n        cVar3 = fcn.0041f885();\n        if (cVar3 != '\\0') {\n            cVar3 = fcn.0043e3f3();\n            goto code_r0x0046626e;\n        }\n        cVar3 = fcn.0041f885();\n        if ((cVar3 != '\\0') || (cVar3 = fcn.0041f885(),  cVar3 != '\\0')) {\n            fcn.0043cde6(arg_8h_00);\n            goto code_r0x00466602;\n        }\n        cVar3 = fcn.0041f885();\n        if (cVar3 != '\\0') {\n            cVar3 = fcn.0043ce8a(&stack0xffffffb4);\ncode_r0x004663c5:\n            if (cVar3 == '\\0') {\ncode_r0x004665f2:\n                fcn.0044d7e4(1, 1);\n                goto code_r0x00466602;\n            }\ncode_r0x0046653e:\n            fcn.00412570();\n            arg_ch[3] = 1;\n            goto code_r0x00466550;\n        }\n        cVar3 = fcn.0041f885();\n        if (cVar3 == '\\0') {\n            cVar3 = fcn.0041f885();\n            if (cVar3 != '\\0') {\n                uVar4 = 0;\n                goto code_r0x00466310;\n            }\n            cVar3 = fcn.0041f885();\n            if (cVar3 != '\\0') {\n                iVar1 = *(*(arg_8h + 4) + 0x10);\n                fcn.004084a6();\n                cVar3 = fcn.0043c473(*(iVar1 + 8));\n                goto code_r0x004665ee;\n            }\n            cVar3 = fcn.0041f885();\n            if (cVar3 != '\\0') {\n                uVar4 = fcn.0040cdb4();\n                cVar3 = fcn.0043c4f6(uVar4);\n                goto code_r0x004665ee;\n            }\n            cVar3 = fcn.0041f885();\n            if (cVar3 != '\\0') {\n                iVar1 = *(*(arg_8h + 4) + 0x10);\n                fcn.004084a6();\n                cVar3 = fcn.0043c577(*(iVar1 + 8), &stack0xffffffb4);\n                goto code_r0x004663c5;\n            }\n            cVar3 = fcn.0041f885();\n            if (cVar3 != '\\0') {\n                uVar4 = fcn.0040cdb4();\n                cVar3 = fcn.0043c7e6(uVar4);\n                goto code_r0x004665ee;\n            }\n            cVar3 = fcn.0041f885();\n            if (cVar3 == '\\0') {\n                cVar3 = fcn.0041f885();\n                if (cVar3 != '\\0') {\n                    iVar1 = *(*(arg_8h + 4) + 0x10);\n                    fcn.004084a6();\n                    cVar3 = fcn.0043c6fd(*(iVar1 + 8));\n                    goto code_r0x004665ee;\n                }\n                cVar3 = fcn.0041f885();\n                if (cVar3 != '\\0') {\n                    cVar3 = fcn.0043c12c();\n                    goto code_r0x0046626e;\n                }\n                cVar3 = fcn.0041f885();\n                if ((cVar3 == '\\0') && (cVar3 = fcn.0041f885(),  cVar3 == '\\0')) {\n                    cVar3 = fcn.0041f885();\n                    if (cVar3 == '\\0') {\n                        cVar3 = fcn.0041f885();\n                        if (cVar3 == '\\0') {\n                            cVar3 = fcn.0041f885();\n                            if (cVar3 == '\\0') {\n                                cVar3 = fcn.0041f885();\n                                if (cVar3 == '\\0') {\n                                    cVar3 = fcn.0041f885();\n                                    if (cVar3 != '\\0') {\n                                        iVar1 = *(*(arg_8h + 4) + 0x10);\n                                        fcn.004084a6();\n                                        fcn.0043c44d(*(iVar1 + 8));\n                                        goto code_r0x00466602;\n                                    }\n                                    cVar3 = fcn.0041f885();\n                                    if (cVar3 != '\\0') {\n                                        arg_ch_00 = &piStack52;\n                                        uVar4 = fcn.0040cdb4();\n                                        cVar3 = fcn.0043c30d(uVar4, arg_ch_00);\n                                        goto code_r0x004665b4;\n                                    }\n                                    cVar3 = fcn.0041f885();\n                                    if (cVar3 != '\\0') {\n                                        uVar4 = fcn.0040cdb4();\n                                        cVar3 = fcn.0043cd02(uVar4);\n                                        goto code_r0x004665ee;\n                                    }\n                                    goto code_r0x004665f2;\n                                }\n                                fcn.0043c265(&stack0xffffffb4);\n                            }\n                            else {\n                                fcn.0043c2ed(&stack0xffffffb4);\n                            }\n                        }\n                        else {\n                            fcn.0043c37e(&stack0xffffffb4);\n                        }\n                        goto code_r0x0046653e;\n                    }\n                    cVar3 = fcn.0043c39d(&piStack52);\n                    goto code_r0x004665b4;\n                }\n                fcn.0043c0fd(arg_8h_00);\n            }\n            else {\n                cVar3 = fcn.0043c600(&piStack52);\ncode_r0x004665b4:\n                if (cVar3 == '\\0') goto code_r0x004665f2;\n                fcn.00407bef(auStack48);\n            }\n        }\n        else {\n            uVar4 = 1;\ncode_r0x00466310:\n            cVar3 = fcn.0043c239(uVar4);\ncode_r0x004665ee:\n            if (cVar3 == '\\0') goto code_r0x004665f2;\n        }\n    }\n    else {\n        cVar3 = fcn.0043e401();\ncode_r0x0046626e:\n        if (cVar3 == '\\0') {\n            fcn.00412570();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        else {\n            fcn.00412570();\n            uVar4 = 1;\n            arg_ch[3] = 1;\ncode_r0x00466550:\n            *arg_ch = uVar4;\n        }\n    }\ncode_r0x00466602:\n    fcn.00405cd3();\ncode_r0x0046660b:\n    fcn.00405cd3();\n    fcn.00412570();\n    return 0;\n}\n",
        "token_count": 2050
    },
    "00466e27": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466e27(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    cVar2 = fcn.00465f56(arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else if ((*(arg_8h + 8) < 5) || (iVar3 = fcn.0040cdb4(),  iVar3 == 0)) {\n        uVar1 = **(in_ECX + 0x31c);\n        iVar3 = *(*(arg_8h + 4) + 0xc);\n        fcn.004084a6();\n        fcn.00443abb(*(iVar3 + 8), uVar1);\n    }\n    else {\n        uVar1 = **(in_ECX + 0x31c);\n        iVar3 = *(*(arg_8h + 4) + 0xc);\n        fcn.004084a6();\n        fcn.00443c7f(*(iVar3 + 8), uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 288
    },
    "0040d00b": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nulong * __fastcall fcn.0040d00b(ulong *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    ulong *puVar3;\n    uint arg_8h;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    ulong *var_8h;\n    ulong *var_4h;\n    \n    iVar1 = *(param_1 + 0xc);\n    if (iVar1 != 1) {\n        if (iVar1 == 2) {\n            return *param_1;\n        }\n        var_8h = param_1;\n        var_4h = param_1;\n        if (iVar1 == 3) {\n            puVar3 = fcn.0040cb5c(in_stack_ffffffe0, in_stack_ffffffe4, *param_1, *param_1 >> 0x20);\n            return puVar3;\n        }\n        if (iVar1 == 4) {\n            cVar2 = fcn.0040d075();\n            if (cVar2 != '\\0') {\n                fcn.0041bcea(0x10);\n                return var_8h;\n            }\n            puVar3 = fcn.0042224a(arg_8h);\n            return puVar3;\n        }\n        if (iVar1 != 7) {\n            if (iVar1 == 9) {\n                if (*param_1 == '\\0') {\n                    return NULL;\n                }\n                return iVar1 + -8;\n            }\n            if (iVar1 == 0xb) {\n                if (**param_1 < 5) {\n                    fcn.0044863c(&var_8h);\n                    return var_8h;\n                }\n                if (**param_1 < 9) {\n                    fcn.0044863c(&var_8h);\n                    return var_8h;\n                }\n            }\n            return NULL;\n        }\n    }\n    return *param_1;\n}\n",
        "token_count": 430
    },
    "00446963": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446963(int32_t param_1)\n\n{\n    uint32_t arg_8h;\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    uint32_t arg_8h_00;\n    uint var_10h;\n    \n    arg_8h = *(param_1 + 4);\n    fcn.00407b6e(arg_8h);\n    arg_8h_00 = 0;\n    if (arg_8h != 0) {\n        do {\n            piVar1 = fcn.0040a4f6(arg_8h_00);\n            if (*piVar1 == 10) {\n                fcn.0040bd2f(0xd);\n            }\n            puVar2 = fcn.0040a4f6(arg_8h_00);\n            fcn.0040bd2f(*puVar2);\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < arg_8h);\n    }\n    fcn.0040c935(&var_10h);\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 263
    },
    "00447a28": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447a28(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t arg_8h_00;\n    uint in_ECX;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int32_t var_14h;\n    uint hdc;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00403bcf();\n    fcn.00404bce(uVar1);\n    arg_8h[1] = 0;\n    *arg_8h = 0;\n    var_8h = 1;\n    uVar4 = 0;\n    iVar2 = fcn.004218fb(var_14h);\n    if (iVar2 != 0) {\n        var_8h = 1;\n        do {\n            if (*(var_14h + uVar4 * 2) == 10) {\n                var_8h = var_8h + 1;\n            }\n            uVar4 = uVar4 + 1;\n            uVar3 = fcn.004218fb(var_14h);\n        } while (uVar4 < uVar3);\n    }\n    arg_8h_00 = fcn.00423318(var_14h, 0x4b38ec);\n    iVar2 = 0;\n    while (arg_8h_00 != 0) {\n        piVar5 = arg_8h;\n        uVar1 = fcn.004218fb(arg_8h_00);\n        (*_sym.imp.GDI32.dll_GetTextExtentPoint32W)(in_ECX, arg_8h_00, uVar1, piVar5);\n        if (*arg_8h != iVar2 && iVar2 <= *arg_8h) {\n            iVar2 = *arg_8h;\n        }\n        arg_8h_00 = fcn.00423318(0, 0x4b38ec);\n    }\n    *arg_8h = iVar2;\n    arg_8h[1] = arg_8h[1] * var_8h;\n    fcn.00404fd2();\n    return;\n}\n",
        "token_count": 501
    },
    "0044be39": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044be39(uint *param_1)\n\n{\n    if (param_1[3] == 10) {\n        return **param_1;\n    }\n    return 0;\n}\n",
        "token_count": 47
    },
    "0046a7e0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046a7e0(uint item, uint *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar3 = fcn.0040cf2c(item, &var_8h, &var_4h);\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    puVar2 = **(*0x4c1884 + var_4h * 4);\n    uVar1 = *(puVar2 + 0x24);\n    if (uVar1 < 0x11) {\n        if ((uVar1 != 0x10) && (10 < uVar1)) {\n            if (uVar1 != 0xc) {\n                if (uVar1 != 0xe) {\n                    return 0;\n                }\n                var_38h = 0x30;\n                var_34h = 4;\n                iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(puVar2[3], item, 0, &var_38h);\n                if (iVar4 != 0) {\n                    *arg_ch = var_24h;\n                    return 1;\n                }\n                return 0;\n            }\n            uVar5 = puVar2[3];\n            goto code_r0x0046a884;\n        }\n    }\n    else {\n        if (uVar1 == 0x11) {\n            uVar5 = puVar2[4];\n            goto code_r0x0046a884;\n        }\n        if (uVar1 < 0x12) {\n            return 0;\n        }\n        if (0x13 < uVar1) {\n            if (uVar1 < 0x16) {\n                return 0;\n            }\n            if (0x1c < uVar1) {\n                return 0;\n            }\n        }\n    }\n    uVar5 = *puVar2;\ncode_r0x0046a884:\n    *arg_ch = uVar5;\n    return 1;\n}\n",
        "token_count": 504
    },
    "00401b72": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401b72(uint noname_0, uint arg_ch)\n\n{\n    double dStack192;\n    uint uStack184;\n    uint uStack180;\n    double dStack176;\n    uint uStack168;\n    uint uStack164;\n    double dStack160;\n    uint uStack152;\n    uint uStack148;\n    double dStack144;\n    uint uStack136;\n    uint uStack132;\n    double dStack128;\n    uint uStack120;\n    uint uStack116;\n    double dStack112;\n    uint uStack104;\n    uint uStack100;\n    double dStack96;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack76;\n    int64_t iStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    iStack76 = 0x40;\n    (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(&iStack76);\n    fcn.00403320(arg_ch, 1);\n    dStack128 = iStack76;\n    if (iStack76 < 0) {\n        dStack128 = dStack128 + *0x4b6568;\n    }\n    uStack120 = 0;\n    uStack116 = 3;\n    fcn.00412320(arg_ch, &dStack128, 1);\n    fcn.00412570();\n    uStack152 = 0;\n    dStack160 = iStack72 * *0x4b2728;\n    uStack148 = 3;\n    fcn.00412320(arg_ch, &dStack160, 1);\n    fcn.00412570();\n    uStack88 = 0;\n    dStack96 = iStack64 * *0x4b2728;\n    uStack84 = 3;\n    fcn.00412320(arg_ch, &dStack96, 1);\n    fcn.00412570();\n    uStack184 = 0;\n    dStack192 = iStack56 * *0x4b2728;\n    uStack180 = 3;\n    fcn.00412320(arg_ch, &dStack192, 1);\n    fcn.00412570();\n    uStack168 = 0;\n    dStack176 = iStack48 * *0x4b2728;\n    uStack164 = 3;\n    fcn.00412320(arg_ch, &dStack176, 1);\n    fcn.00412570();\n    dStack144 = iStack40 * *0x4b2728;\n    uStack136 = 0;\n    uStack132 = 3;\n    fcn.00412320(arg_ch, &dStack144, 1);\n    fcn.00412570();\n    uStack104 = 0;\n    dStack112 = iStack32 * *0x4b2728;\n    uStack100 = 3;\n    fcn.00412320(arg_ch, &dStack112, 1);\n    fcn.00412570();\n    return 0;\n}\n",
        "token_count": 702
    },
    "0041bf5c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bf5c(uint32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t arg_ch_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint *arg_8h_00;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint auStack48 [2];\n    uint uStack40;\n    uint uStack36;\n    \n    arg_ch_00 = *(arg_ch + 8);\n    uStack40 = 0;\n    uVar2 = 0xffffffff;\n    uStack64 = 0xffffffff;\n    uStack60 = 0xffffffff;\n    uStack68 = 0xffffffff;\n    uStack72 = 0xffffffff;\n    auStack48[0] = 0xffffffff;\n    uStack36 = 1;\n    if (arg_8h == 0x15) {\n        if (arg_ch_00 != 0) {\n            fcn.00412570();\n            *arg_10h = 0;\n            arg_10h[3] = 1;\n            fcn.0044d7e4(2, 0);\n            uVar2 = 0xffffffff;\n            goto code_r0x0041c0bd;\n        }\n    }\n    else if (0x1d < arg_8h) {\n        if (6 < arg_ch_00) {\n            uStack72 = fcn.0040cdb4();\n        }\n        if (5 < arg_ch_00) {\n            uStack68 = fcn.0040cdb4();\n        }\n        if (4 < arg_ch_00) {\n            uStack64 = fcn.0040cdb4();\n        }\n        if (3 < arg_ch_00) {\n            uVar2 = fcn.0040cdb4();\n        }\n        if (2 < arg_ch_00) {\n            uStack60 = fcn.0040cdb4();\n        }\n        if (1 < arg_ch_00) {\n            fcn.0040cdb4();\n        }\n        arg_8h_00 = auStack48;\n        fcn.004113a0(arg_8h_00);\n        uVar2 = fcn.0041c13e(arg_8h, arg_ch_00, uStack60, uStack64, uVar2, uStack68, uStack72, 0, 0, arg_8h_00);\n        fcn.00412570();\n        arg_10h[3] = 1;\n        *arg_10h = uVar2;\n        iVar1 = fcn.0040cdb4();\n        if (iVar1 == 0) {\n            fcn.0044d7e4(1, 0);\n        }\n        if (arg_8h != 0x1d) {\n            fcn.0042017e(arg_ch_00);\n        }\n        uVar2 = 0;\ncode_r0x0041c0bd:\n        fcn.00412570();\n        return uVar2;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bfbc. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x41c0ec\n    uVar2 = (**(*(arg_8h + 0x41c120) * 4 + 0x41c0ec))();\n    return uVar2;\n}\n",
        "token_count": 769
    },
    "004403e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004403e0(uint arg_8h, int32_t *arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t *var_4h;\n    \n    *in_ECX = 0x4b2fc4;\n    iVar4 = 0;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    ppiVar1 = in_ECX + 8;\n    *ppiVar1 = NULL;\n    in_ECX[9] = 1;\n    in_ECX[10] = *arg_ch;\n    in_ECX[0xb] = arg_ch[1];\n    in_ECX[0xc] = arg_ch[2];\n    piVar2 = arg_ch[3];\n    in_ECX[0xd] = piVar2;\n    *piVar2 = *piVar2 + 1;\n    in_ECX[0xe] = arg_18h;\n    in_ECX[0xf] = arg_14h;\n    in_ECX[0x12] = 0;\n    var_4h = in_ECX;\n    fcn.004113a0(arg_8h);\n    if (in_ECX[0x13] == 8) {\n        iVar4 = in_ECX[0x10];\n    }\n    puVar3 = *(iVar4 + 8);\n    if (puVar3 == NULL) {\n        in_ECX[1] = -0x7fffbffd;\n    }\n    else {\n        iVar4 = (***puVar3)(puVar3, 0x48d97c, &var_4h);\n        if (iVar4 < 0) {\n            in_ECX[1] = iVar4;\n        }\n        else {\n            iVar4 = fcn.0043b064(in_ECX + 3, in_ECX + 4);\n            if (-1 < iVar4) {\n                (**(*in_ECX[3] + 4))(in_ECX[3]);\n                iVar4 = (**(*var_4h + 0x10))(var_4h, in_ECX + 4, ppiVar1);\n                if (-1 < iVar4) {\n                    (**(**ppiVar1 + 4))(*ppiVar1);\n                    iVar4 = (**(**ppiVar1 + 0x14))(*ppiVar1);\n                }\n            }\n            in_ECX[1] = iVar4;\n            (**(*var_4h + 8))(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 623
    },
    "004404fb": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004404fb(uint *param_1)\n\n{\n    int32_t *piVar1;\n    uint unaff_ESI;\n    \n    *param_1 = 0x4b2fc4;\n    fcn.00440e20();\n    piVar1 = param_1[3];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    fcn.00412570();\n    *param_1[0xd] = *param_1[0xd] + -1;\n    if (*param_1[0xd] == 0) {\n        fcn.0042017e(param_1[10], unaff_ESI);\n        fcn.0042017e(param_1[0xd]);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00454782": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00454782(uint param_1)\n\n{\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    return param_1;\n}\n",
        "token_count": 100
    },
    "0045480c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045480c(uint *param_1)\n\n{\n    uint unaff_ESI;\n    \n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    *param_1[3] = *param_1[3] + -1;\n    if (*param_1[3] == 0) {\n        fcn.0042017e(*param_1, unaff_ESI);\n        fcn.0042017e(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "004557d7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004557d7(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.00421970(&var_48h, 0, 0x38);\n    var_2ch = 1;\n    var_38h = 1;\n    var_44h = 1;\n    var_14h = 1;\n    var_1ch = 1;\n    var_24h = 1;\n    puVar4 = &var_4ch;\n    uVar3 = 0;\n    var_4ch = 0x7c;\n    uVar1 = fcn.004218fb(arg_8h);\n    iVar2 = (*_sym.imp.WININET.dll_InternetCrackUrlW)(arg_8h, uVar1, uVar3, puVar4);\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.004080ea(var_48h, 0, var_44h);\n        fcn.004080ea(var_3ch, 0, var_38h);\n        fcn.004080ea(var_30h, 0, var_2ch);\n        fcn.004080ea(var_28h, 0, var_24h);\n        fcn.004080ea(var_20h, 0, var_1ch);\n        fcn.004080ea(var_18h, 0, var_14h);\n        uVar1 = fcn.0043c0a2(&var_10h, arg_ch + 0x50);\n        fcn.0040c935(uVar1);\n        fcn.00405cd3();\n        *(arg_ch + 0x78) = var_34h;\n        *(arg_ch + 0x74) = var_40h;\n        iVar2 = var_40h + -1;\n        if (iVar2 == 0) {\n            *(arg_ch + 0x70) = 1;\n        }\n        else {\n            iVar2 = var_40h + -2;\n            if (iVar2 == 0) {\n                *(arg_ch + 0x70) = 2;\n            }\n            else {\n                *(arg_ch + 0x70) = 3;\n            }\n        }\n        uVar1 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 683
    },
    "00457384": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457384(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    \n    fcn.00425a99();\n    uVar1 = fcn.0041f1c4();\n    fcn.00412570();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 86
    },
    "00402d47": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d47(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((arg_8h & 2) == 0) {\n        fcn.00405800();\n        if ((arg_8h & 1) != 0) {\n            fcn.0042017e();\n        }\n    }\n    else {\n        fcn.004057d8(*(in_ECX + -4), fcn.00405800);\n        if ((arg_8h & 1) != 0) {\n            fcn.0042017e(in_ECX + -4);\n        }\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00404df0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404df0(int32_t param_1)\n\n{\n    uint arg_8h;\n    uint arg_ch;\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint arg_8h_00;\n    char *var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = *(param_1 + 0x28);\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    if (((uVar3 & 0x2000) == 0) && ((uVar3 & 1) == 0)) {\n        return;\n    }\n    if ((uVar3 & 0x10) != 0) {\n        return;\n    }\n    if ((uVar3 & 0x180) == 0) {\n        if ((uVar3 & 0x20) == 0) {\n            if ((uVar3 & 0x40) != 0) {\n                *(param_1 + 0x2c) = 2;\n            }\n        }\n        else {\n            *(param_1 + 0x2c) = 1;\n        }\n    }\n    else {\n        *(param_1 + 0x2c) = 4;\n    }\n    arg_8h = *(param_1 + 0x10);\n    arg_ch = *(param_1 + 0x14);\n    fcn.00404ee9(0, 0, 0);\n    uVar2 = fcn.0042010a(0x10000);\n    fcn.00404bce(uVar2);\n    uVar3 = fcn.00404ca0(var_10h, 0x10000);\n    if (1 < uVar3) {\n        if ((*var_10h == -1) && (var_10h[1] == -2)) {\n            *(param_1 + 0x2c) = 1;\n        }\n        else {\n            if ((*var_10h != -2) || (var_10h[1] != -1)) goto code_r0x00404e80;\n            *(param_1 + 0x2c) = 2;\n        }\n        *(param_1 + 0x30) = 2;\n        goto code_r0x00404eaf;\n    }\ncode_r0x00404e80:\n    if ((((uVar3 < 3) || (*var_10h != -0x11)) || (var_10h[1] != -0x45)) || (var_10h[2] != -0x41)) {\n        if ((uVar3 == 0) || (*(param_1 + 0x2c) != 0)) goto code_r0x00404eaf;\n        if ((uVar3 == 0x10000) && ((*(param_1 + 0x28) & 0x4000) != 0)) {\n            fcn.00404ee9(0, 0, 0);\n            uVar2 = fcn.0041f0b5();\n            arg_8h_00 = fcn.0042010a(uVar2);\n            uVar2 = fcn.00404ca0(arg_8h_00, uVar2);\n            cVar1 = fcn.00405010(arg_8h_00, uVar2);\n            if (cVar1 != '\\0') {\n                *(param_1 + 0x30) = 0;\n                *(param_1 + 0x2c) = 4;\n            }\n            fcn.0042017e(arg_8h_00);\n            goto code_r0x00404eaf;\n        }\n        cVar1 = fcn.00405010(var_10h, uVar3);\n        if (cVar1 == '\\0') goto code_r0x00404eaf;\n        *(param_1 + 0x30) = 0;\n    }\n    else {\n        *(param_1 + 0x30) = 3;\n    }\n    *(param_1 + 0x2c) = 4;\ncode_r0x00404eaf:\n    fcn.00404ee9(arg_8h, arg_ch, 0);\n    fcn.00404fd2();\n    return;\n}\n",
        "token_count": 975
    },
    "00404fef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404fef(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x28);\n    if ((((uVar1 & 3) != 0) && ((uVar1 & 0x10) == 0)) &&\n       (((uVar1 & 1) == 0 || ((*(param_1 + 0x10) | *(param_1 + 0x14)) == 0)))) {\n        if ((uVar1 & 0x20) == 0) {\n            if ((uVar1 & 0x40) == 0) {\n                if (uVar1 < '\\0') {\n                    fcn.00446852(0x49e448, 3);\n                    *(param_1 + 0x30) = 3;\n                }\n                else {\n                    if ((uVar1 & 0x100) == 0) {\n                        return;\n                    }\n                    *(param_1 + 0x30) = 0;\n                }\n                *(param_1 + 0x2c) = 4;\n                return;\n            }\n            fcn.00446852(0x49e44c, 2);\n            *(param_1 + 0x2c) = 2;\n        }\n        else {\n            fcn.00446852(0x49e450, 2);\n            *(param_1 + 0x2c) = 1;\n        }\n        *(param_1 + 0x30) = 2;\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "004076f5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004076f5(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint *in_EDX;\n    uint32_t uVar5;\n    ushort *puVar6;\n    uint32_t arg_8h_00;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    ulong uVar9;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    arg_8h_00 = arg_8h;\n    uVar7 = arg_10h;\n    uVar8 = arg_14h;\n    uVar5 = arg_8h;\n    if ((arg_8h & 1) != 0) {\n        uVar5 = arg_10h;\n        if ((arg_8h & 0x800) == 0) {\n            for (; (uVar5 <= arg_14h && (uVar5 < 0x100)); uVar5 = uVar5 + 1) {\n                uVar2 = *(*(arg_ch + 4) + uVar5);\n                puVar1 = (uVar2 >> 3) + in_ECX;\n                *puVar1 = *puVar1 | '\\x01' << (uVar2 & 7);\n                var_4h = var_4h + 1;\n            }\n        }\n        else {\n            arg_8h_00 = arg_8h & 0xfffffffe;\n            uVar3 = arg_14h;\ncode_r0x0047f59a:\n            while (uVar8 = uVar3,  uVar7 = uVar5,  iVar4 = fcn.004713fa(&arg_14h, &arg_8h),  uVar5 = arg_8h,  -1 < iVar4\n                  ) {\n                uVar3 = uVar8;\n                if (0 < iVar4) {\n                    iVar4 = fcn.004704aa(arg_8h_00, arg_ch, iVar4 * 4 + 0x4ae670, arg_14h);\n                    goto code_r0x0047f60d;\n                }\n                if (arg_14h < uVar7) goto code_r0x0047f5f1;\n                uVar5 = uVar7;\n                if (uVar8 < arg_8h) goto code_r0x0047f5e2;\n            }\n        }\n    }\n    arg_8h = uVar5;\n    if (((arg_8h_00 & 0x800) == 0) && (0xffff < uVar8)) {\n        uVar8 = 0xffff;\n    }\n    if (uVar8 < 0x100) {\n        if (uVar8 < uVar7) {\n            return var_4h;\n        }\n        iVar4 = uVar8 - uVar7;\n        do {\n            puVar1 = (uVar7 >> 3) + in_ECX;\n            *puVar1 = *puVar1 | '\\x01' << (uVar7 & 7);\n            uVar7 = uVar7 + 1;\n        } while (uVar7 <= uVar8);\n        return var_4h + 1 + iVar4;\n    }\n    puVar6 = *in_EDX;\n    if ((arg_8h_00 & 0x800) == 0) {\n        if (uVar7 < uVar8) {\n            *puVar6 = 2;\n            puVar6[1] = uVar7;\n            puVar6 = puVar6 + 2;\n            *puVar6 = uVar8;\n        }\n        else {\n            if (uVar7 != uVar8) goto code_r0x0047f6bd;\n            *puVar6 = 1;\n            puVar6 = puVar6 + 1;\n            *puVar6 = uVar7;\n        }\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        if (uVar7 < uVar8) {\n            *puVar6 = 2;\n            fcn.00471a0c();\n        }\n        else {\n            if (uVar7 != uVar8) goto code_r0x0047f6bd;\n            *puVar6 = 1;\n        }\n        uVar9 = fcn.00471a0c();\n        puVar6 = (uVar9 >> 0x20) + uVar9 * 2;\n    }\ncode_r0x0047f6bd:\n    *in_EDX = puVar6;\n    return var_4h;\ncode_r0x0047f5f1:\n    uVar5 = arg_14h;\n    if (arg_8h < uVar7 - 1) {\ncode_r0x0047f5e2:\n        if ((arg_8h <= uVar8) || (uVar5 = uVar7,  uVar3 = arg_8h,  uVar8 + 1 < arg_14h)) {\n            iVar4 = fcn.004076f5(arg_8h_00, arg_ch, arg_14h, arg_8h);\ncode_r0x0047f60d:\n            var_4h = var_4h + iVar4;\n            uVar5 = uVar7;\n            uVar3 = uVar8;\n        }\n    }\n    goto code_r0x0047f59a;\n}\n",
        "token_count": 1274
    },
    "00414700": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00414700(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    if ((*0x4c235c & 1) == 0) {\n        *0x4c235c = *0x4c235c | 1;\n        *0x4bbf74 = fcn.0041eb3a;\n        *0x4bbf78 = 0;\n        *0x4bbf7c = 0;\n        *0x4bbf80 = 1;\n        *0x4bbf84 = 1;\n        *0x4bbf8c = L\"ACOS\";\n        *0x4bbf98 = fcn.00455b5e;\n        *0x4bbf9c = 0;\n        *0x4bbfa0 = 0;\n        *0x4bbfa4 = 1;\n        *0x4bbfa8 = 1;\n        *0x4bbfb0 = L\"ADLIBREGISTER\";\n        *0x4bbfbc = fcn.0041c9d6;\n        *0x4bbfc0 = 0;\n        *0x4bbfc4 = 0;\n        *0x4bbfc8 = 1;\n        *0x4bbfcc = 2;\n        *0x4bbfd4 = L\"ADLIBUNREGISTER\";\n        *0x4bbfe0 = fcn.00456c64;\n        *0x4bbfe4 = 0;\n        *0x4bbfe8 = 0;\n        *0x4bbfec = 0;\n        *0x4bbff0 = 1;\n        *0x4bbff8 = 0x49e418;\n        *0x4bc004 = fcn.00455bde;\n        *0x4bc008 = 0;\n        *0x4bc00c = 0;\n        *0x4bc010 = 1;\n        *0x4bc014 = 1;\n        *0x4bc01c = L\"ASCW\";\n        *0x4bc028 = fcn.00455c38;\n        *0x4bc02c = 0;\n        *0x4bc030 = 0;\n        *0x4bc034 = 1;\n        *0x4bc038 = 1;\n        *0x4bc040 = L\"ASIN\";\n        *0x4bc04c = fcn.00455b9e;\n        *0x4bc050 = 0;\n        *0x4bc054 = 0;\n        *0x4bc058 = 1;\n        *0x4bc05c = 1;\n        *0x4bc064 = L\"ASSIGN\";\n        *0x4bc070 = fcn.00456df1;\n        *0x4bc074 = 0;\n        *0x4bc078 = 0;\n        *0x4bc07c = 2;\n        *0x4bc080 = 3;\n        *0x4bc088 = L\"ATAN\";\n        *0x4bc094 = fcn.0041f8c2;\n        *0x4bc098 = 0;\n        *0x4bc09c = 0;\n        *0x4bc0a0 = 1;\n        *0x4bc0a4 = 1;\n        *0x4bc0ac = L\"AUTOITSETOPTION\";\n        *0x4bc0b8 = fcn.0041d00f;\n        *0x4bc0bc = 0;\n        *0x4bc0c0 = 0;\n        *0x4bc0c4 = 1;\n        *0x4bc0c8 = 2;\n        *0x4bc0d0 = L\"AUTOITWINGETTITLE\";\n        *0x4bc0dc = fcn.00456f7d;\n        *0x4bc0e0 = 0;\n        *0x4bc0e4 = 0;\n        *0x4bc0e8 = 0;\n        *0x4bc0ec = 0;\n        *0x4bc0f4 = L\"AUTOITWINSETTITLE\";\n        *0x4bc100 = fcn.00456fc3;\n        *0x4bc104 = 0;\n        *0x4bc108 = 0;\n        *0x4bc10c = 1;\n        *0x4bc110 = 1;\n        *0x4bc118 = L\"BEEP\";\n        *0x4bc124 = fcn.00456fee;\n        *0x4bc128 = 0;\n        *0x4bc12c = 0;\n        *0x4bc130 = 0;\n        *0x4bc134 = 2;\n        *0x4bc13c = L\"BINARY\";\n        *0x4bc148 = fcn.00455c6f;\n        *0x4bc14c = 0;\n        *0x4bc150 = 0;\n        *0x4bc154 = 1;\n        *0x4bc158 = 1;\n        *0x4bc160 = L\"BINARYLEN\";\n        *0x4bc16c = fcn.004643ba;\n        *0x4bc170 = 0;\n        *0x4bc174 = 0;\n        *0x4bc178 = 1;\n        *0x4bc17c = 1;\n        *0x4bc184 = L\"BINARYMID\";\n        *0x4bc190 = fcn.004643f3;\n        *0x4bc194 = 0;\n        *0x4bc198 = 0;\n        *0x4bc19c = 2;\n        *0x4bc1a0 = 3;\n        *0x4bc1a8 = L\"BINARYTOSTRING\";\n        *0x4bc1b4 = fcn.00464476;\n        *0x4bc1b8 = 0;\n        *0x4bc1bc = 0;\n        *0x4bc1c0 = 1;\n        *0x4bc1c4 = 2;\n        *0x4bc1cc = L\"BITAND\";\n        *0x4bc1d8 = fcn.00455c90;\n        *0x4bc1dc = 0;\n        *0x4bc1e0 = 0;\n        *0x4bc1e4 = 2;\n        *0x4bc1e8 = 0xff;\n        *0x4bc1f0 = L\"BITNOT\";\n        *0x4bc1fc = fcn.00455ce2;\n        *0x4bc200 = 0;\n        *0x4bc204 = 0;\n        *0x4bc208 = 1;\n        *0x4bc20c = 1;\n        *0x4bc214 = L\"BITOR\";\n        *0x4bc220 = fcn.0041f5da;\n        *0x4bc224 = 0;\n        *0x4bc228 = 0;\n        *0x4bc22c = 2;\n        *0x4bc230 = 0xff;\n        *0x4bc238 = L\"BITROTATE\";\n        *0x4bc244 = fcn.00455d13;\n        *0x4bc248 = 0;\n        *0x4bc24c = 0;\n        *0x4bc250 = 1;\n        *0x4bc254 = 3;\n        *0x4bc25c = L\"BITSHIFT\";\n        *0x4bc268 = fcn.00455ea2;\n        *0x4bc26c = 0;\n        *0x4bc270 = 0;\n        *0x4bc274 = 2;\n        *0x4bc278 = 2;\n        *0x4bc280 = L\"BITXOR\";\n        *0x4bc28c = fcn.00455f08;\n        *0x4bc290 = 0;\n        *0x4bc294 = 0;\n        *0x4bc298 = 2;\n        *0x4bc29c = 0xff;\n        *0x4bc2a4 = L\"BLOCKINPUT\";\n        *0x4bc2b0 = fcn.0045703c;\n        *0x4bc2b4 = 0;\n        *0x4bc2b8 = 0;\n        *0x4bc2bc = 1;\n        *0x4bc2c0 = 1;\n        *0x4bc2c8 = L\"BREAK\";\n        *0x4bc2d4 = fcn.0045707a;\n        *0x4bc2d8 = 0;\n        *0x4bc2dc = 0;\n        *0x4bc2e0 = 1;\n        *0x4bc2e4 = 1;\n        *0x4bc2ec = L\"CALL\";\n        *0x4bc2f8 = method.tK.virtual_60;\n        *0x4bc2fc = 0;\n        *0x4bc300 = 0;\n        *0x4bc304 = 1;\n        *0x4bc308 = 0xff;\n        *0x4bc310 = L\"CDTRAY\";\n        *0x4bc31c = fcn.0044daad;\n        *0x4bc320 = 0;\n        *0x4bc324 = 0;\n        *0x4bc328 = 2;\n        *0x4bc32c = 2;\n        *0x4bc334 = L\"CEILING\";\n        *0x4bc340 = fcn.00455f5a;\n        *0x4bc344 = 0;\n        *0x4bc348 = 0;\n        *0x4bc34c = 1;\n        *0x4bc350 = 1;\n        *0x4bc358 = 0x4af180;\n        *0x4bc364 = fcn.00455fbf;\n        *0x4bc368 = 0;\n        *0x4bc36c = 0;\n        *0x4bc370 = 1;\n        *0x4bc374 = 1;\n        *0x4bc37c = L\"CHRW\";\n        *0x4bc388 = fcn.00456071;\n        *0x4bc38c = 0;\n        *0x4bc390 = 0;\n        *0x4bc394 = 1;\n        *0x4bc398 = 1;\n        *0x4bc3a0 = L\"CLIPGET\";\n        *0x4bc3ac = fcn.00457099;\n        *0x4bc3b0 = 0;\n        *0x4bc3b4 = 0;\n        *0x4bc3b8 = 0;\n        *0x4bc3bc = 0;\n        *0x4bc3c4 = L\"CLIPPUT\";\n        *0x4bc3d0 = fcn.00457294;\n        *0x4bc3d4 = 0;\n        *0x4bc3d8 = 0;\n        *0x4bc3dc = 1;\n        *0x4bc3e0 = 1;\n        *0x4bc3e8 = L\"CONSOLEREAD\";\n        *0x4bc3f4 = fcn.00463e8c;\n        *0x4bc3f8 = 0;\n        *0x4bc3fc = 0;\n        *0x4bc400 = 0;\n        *0x4bc404 = 2;\n        *0x4bc40c = L\"CONSOLEWRITE\";\n        *0x4bc418 = fcn.0041f189;\n        *0x4bc41c = 0;\n        *0x4bc420 = 0;\n        *0x4bc424 = 1;\n        *0x4bc428 = 1;\n        *0x4bc430 = L\"CONSOLEWRITEERROR\";\n        *0x4bc43c = fcn.00457384;\n        *0x4bc440 = 0;\n        *0x4bc444 = 0;\n        *0x4bc448 = 1;\n        *0x4bc44c = 1;\n        *0x4bc454 = L\"CONTROLCLICK\";\n        *0x4bc460 = fcn.0046609e;\n        *0x4bc464 = 0;\n        *0x4bc468 = 0;\n        *0x4bc46c = 3;\n        *0x4bc470 = 7;\n        *0x4bc478 = L\"CONTROLCOMMAND\";\n        *0x4bc484 = fcn.00466189;\n        *0x4bc488 = 0;\n        *0x4bc48c = 0;\n        *0x4bc490 = 4;\n        *0x4bc494 = 5;\n        *0x4bc49c = L\"CONTROLDISABLE\";\n        *0x4bc4a8 = fcn.00466628;\n        *0x4bc4ac = 0;\n        *0x4bc4b0 = 0;\n        *0x4bc4b4 = 3;\n        *0x4bc4b8 = 3;\n        *0x4bc4c0 = L\"CONTROLENABLE\";\n        *0x4bc4cc = fcn.00466664;\n        *0x4bc4d0 = 0;\n        *0x4bc4d4 = 0;\n        *0x4bc4d8 = 3;\n        *0x4bc4dc = 3;\n        *0x4bc4e4 = L\"CONTROLFOCUS\";\n        *0x4bc4f0 = fcn.004666a0;\n        *0x4bc4f4 = 0;\n        *0x4bc4f8 = 0;\n        *0x4bc4fc = 3;\n        *0x4bc500 = 3;\n        *0x4bc508 = L\"CONTROLGETFOCUS\";\n        *0x4bc514 = fcn.004666dc;\n        *0x4bc518 = 0;\n        *0x4bc51c = 0;\n        *0x4bc520 = 1;\n        *0x4bc524 = 2;\n        *0x4bc52c = L\"CONTROLGETHANDLE\";\n        *0x4bc538 = fcn.00466778;\n        *0x4bc53c = 0;\n        *0x4bc540 = 0;\n        *0x4bc544 = 3;\n        *0x4bc548 = 3;\n        *0x4bc550 = L\"CONTROLGETPOS\";\n        *0x4bc55c = fcn.004667cd;\n        *0x4bc560 = 0;\n        *0x4bc564 = 0;\n        *0x4bc568 = 3;\n        *0x4bc56c = 3;\n        *0x4bc574 = L\"CONTROLGETTEXT\";\n        *0x4bc580 = fcn.00466902;\n        *0x4bc584 = 0;\n        *0x4bc588 = 0;\n        *0x4bc58c = 3;\n        *0x4bc590 = 3;\n        *0x4bc598 = L\"CONTROLHIDE\";\n        *0x4bc5a4 = fcn.00466989;\n        *0x4bc5a8 = 0;\n        *0x4bc5ac = 0;\n        *0x4bc5b0 = 3;\n        *0x4bc5b4 = 3;\n        *0x4bc5bc = L\"CONTROLLISTVIEW\";\n        *0x4bc5c8 = fcn.004669c5;\n        *0x4bc5cc = 0;\n        *0x4bc5d0 = 0;\n        *0x4bc5d4 = 4;\n        *0x4bc5d8 = 6;\n        *0x4bc5e0 = L\"CONTROLMOVE\";\n        *0x4bc5ec = fcn.00466d40;\n        *0x4bc5f0 = 0;\n        *0x4bc5f4 = 0;\n        *0x4bc5f8 = 5;\n        *0x4bc5fc = 7;\n        *0x4bc604 = L\"CONTROLSEND\";\n        *0x4bc610 = fcn.00466e27;\n        *0x4bc614 = 0;\n        *0x4bc618 = 0;\n        *0x4bc61c = 4;\n        *0x4bc620 = 5;\n        *0x4bc628 = L\"CONTROLSETTEXT\";\n        *0x4bc634 = fcn.00466eba;\n        *0x4bc638 = 0;\n        *0x4bc63c = 0;\n        *0x4bc640 = 4;\n        *0x4bc644 = 5;\n        *0x4bc64c = L\"CONTROLSHOW\";\n        *0x4bc658 = fcn.00466f2a;\n        *0x4bc65c = 0;\n        *0x4bc660 = 0;\n        *0x4bc664 = 3;\n        *0x4bc668 = 3;\n        *0x4bc670 = L\"CONTROLTREEVIEW\";\n        *0x4bc67c = fcn.00466f67;\n        *0x4bc680 = 0;\n        *0x4bc684 = 0;\n        *0x4bc688 = 4;\n        *0x4bc68c = 5;\n        *0x4bc694 = 0x4af3e0;\n        *0x4bc6a0 = fcn.0041bb84;\n        *0x4bc6a4 = 0;\n        *0x4bc6a8 = 0;\n        *0x4bc6ac = 1;\n        *0x4bc6b0 = 1;\n        *0x4bc6b8 = 0x4af3e8;\n        *0x4bc6c4 = fcn.004560f3;\n        *0x4bc6c8 = 0;\n        *0x4bc6cc = 0;\n        *0x4bc6d0 = 1;\n        *0x4bc6d4 = 2;\n        *0x4bc6dc = L\"DIRCOPY\";\n        *0x4bc6e8 = fcn.0044dc73;\n        *0x4bc6ec = 0;\n        *0x4bc6f0 = 0;\n        *0x4bc6f4 = 2;\n        *0x4bc6f8 = 3;\n        *0x4bc700 = L\"DIRCREATE\";\n        *0x4bc70c = fcn.0044dce9;\n        *0x4bc710 = 0;\n        *0x4bc714 = 0;\n        *0x4bc718 = 1;\n        *0x4bc71c = 1;\n        *0x4bc724 = L\"DIRGETSIZE\";\n        *0x4bc730 = fcn.0044dd25;\n        *0x4bc734 = 0;\n        *0x4bc738 = 0;\n        *0x4bc73c = 1;\n        *0x4bc740 = 2;\n        *0x4bc748 = L\"DIRMOVE\";\n        *0x4bc754 = fcn.0044df2f;\n        *0x4bc758 = 0;\n        *0x4bc75c = 0;\n        *0x4bc760 = 2;\n        *0x4bc764 = 3;\n        *0x4bc76c = L\"DIRREMOVE\";\n        *0x4bc778 = fcn.0044dfa5;\n        *0x4bc77c = 0;\n        *0x4bc780 = 0;\n        *0x4bc784 = 1;\n        *0x4bc788 = 2;\n        *0x4bc790 = L\"DLLCALL\";\n        *0x4bc79c = fcn.00460bfa;\n        *0x4bc7a0 = 0;\n        *0x4bc7a4 = 0;\n        *0x4bc7a8 = 3;\n        *0x4bc7ac = 0x43;\n        *0x4bc7b4 = L\"DLLCALLADDRESS\";\n        *0x4bc7c0 = fcn.00460c0e;\n        *0x4bc7c4 = 0;\n        *0x4bc7c8 = 0;\n        *0x4bc7cc = 2;\n        *0x4bc7d0 = 0x42;\n        *0x4bc7d8 = L\"DLLCALLBACKFREE\";\n        *0x4bc7e4 = fcn.00460c22;\n        *0x4bc7e8 = 0;\n        *0x4bc7ec = 0;\n        *0x4bc7f0 = 1;\n        *0x4bc7f4 = 1;\n        *0x4bc7fc = L\"DLLCALLBACKGETPTR\";\n        *0x4bc808 = fcn.00460ca1;\n        *0x4bc80c = 0;\n        *0x4bc810 = 0;\n        *0x4bc814 = 1;\n        *0x4bc818 = 1;\n        *0x4bc820 = L\"DLLCALLBACKREGISTER\";\n        *0x4bc82c = fcn.00460d01;\n        *0x4bc830 = 0;\n        *0x4bc834 = 0;\n        *0x4bc838 = 3;\n        *0x4bc83c = 3;\n        *0x4bc844 = L\"DLLCLOSE\";\n        *0x4bc850 = fcn.00461084;\n        *0x4bc854 = 0;\n        *0x4bc858 = 0;\n        *0x4bc85c = 1;\n        *0x4bc860 = 1;\n        *0x4bc868 = L\"DLLOPEN\";\n        *0x4bc874 = fcn.004610e5;\n        *0x4bc878 = 0;\n        *0x4bc87c = 0;\n        *0x4bc880 = 1;\n        *0x4bc884 = 1;\n        *0x4bc88c = L\"DLLSTRUCTCREATE\";\n        *0x4bc898 = fcn.0046117f;\n        *0x4bc89c = 0;\n        *0x4bc8a0 = 0;\n        *0x4bc8a4 = 1;\n        *0x4bc8a8 = 2;\n        *0x4bc8b0 = L\"DLLSTRUCTGETDATA\";\n        *0x4bc8bc = fcn.0046122d;\n        *0x4bc8c0 = 0;\n        *0x4bc8c4 = 0;\n        *0x4bc8c8 = 2;\n        *0x4bc8cc = 3;\n        *0x4bc8d4 = L\"DLLSTRUCTGETPTR\";\n        *0x4bc8e0 = fcn.00461341;\n        *0x4bc8e4 = 0;\n        *0x4bc8e8 = 0;\n        *0x4bc8ec = 1;\n        *0x4bc8f0 = 2;\n        *0x4bc8f8 = L\"DLLSTRUCTGETSIZE\";\n        *0x4bc904 = fcn.0046146c;\n        *0x4bc908 = 0;\n        *0x4bc90c = 0;\n        *0x4bc910 = 1;\n        *0x4bc914 = 1;\n        *0x4bc91c = L\"DLLSTRUCTSETDATA\";\n        *0x4bc928 = fcn.004614d6;\n        *0x4bc92c = 0;\n        *0x4bc930 = 0;\n        *0x4bc934 = 3;\n        *0x4bc938 = 4;\n        *0x4bc940 = L\"DRIVEGETDRIVE\";\n        *0x4bc94c = fcn.0044dffe;\n        *0x4bc950 = 0;\n        *0x4bc954 = 0;\n        *0x4bc958 = 1;\n        *0x4bc95c = 1;\n        *0x4bc964 = L\"DRIVEGETFILESYSTEM\";\n        *0x4bc970 = fcn.0044e228;\n        *0x4bc974 = 0;\n        *0x4bc978 = 0;\n        *0x4bc97c = 1;\n        *0x4bc980 = 1;\n        *0x4bc988 = L\"DRIVEGETLABEL\";\n        *0x4bc994 = fcn.0044e2d5;\n        *0x4bc998 = 0;\n        *0x4bc99c = 0;\n        *0x4bc9a0 = 1;\n        *0x4bc9a4 = 1;\n        *0x4bc9ac = L\"DRIVEGETSERIAL\";\n        *0x4bc9b8 = fcn.0044e382;\n        *0x4bc9bc = 0;\n        *0x4bc9c0 = 0;\n        *0x4bc9c4 = 1;\n        *0x4bc9c8 = 1;\n        *0x4bc9d0 = L\"DRIVEGETTYPE\";\n        *0x4bc9dc = fcn.0044e44c;\n        *0x4bc9e0 = 0;\n        *0x4bc9e4 = 0;\n        *0x4bc9e8 = 1;\n        *0x4bc9ec = 2;\n        *0x4bc9f4 = L\"DRIVEMAPADD\";\n        *0x4bca00 = fcn.0044e704;\n        *0x4bca04 = 0;\n        *0x4bca08 = 0;\n        *0x4bca0c = 2;\n        *0x4bca10 = 5;\n        *0x4bca18 = L\"DRIVEMAPDEL\";\n        *0x4bca24 = fcn.0044e913;\n        *0x4bca28 = 0;\n        *0x4bca2c = 0;\n        *0x4bca30 = 1;\n        *0x4bca34 = 1;\n        *0x4bca3c = L\"DRIVEMAPGET\";\n        *0x4bca48 = fcn.0044e973;\n        *0x4bca4c = 0;\n        *0x4bca50 = 0;\n        *0x4bca54 = 1;\n        *0x4bca58 = 1;\n        *0x4bca60 = L\"DRIVESETLABEL\";\n        *0x4bca6c = fcn.0044e9f4;\n        *0x4bca70 = 0;\n        *0x4bca74 = 0;\n        *0x4bca78 = 2;\n        *0x4bca7c = 2;\n        *0x4bca84 = L\"DRIVESPACEFREE\";\n        *0x4bca90 = fcn.0044ea85;\n        *0x4bca94 = 0;\n        *0x4bca98 = 0;\n        *0x4bca9c = 1;\n        *0x4bcaa0 = 1;\n        *0x4bcaa8 = L\"DRIVESPACETOTAL\";\n        *0x4bcab4 = fcn.0044eb4b;\n        *0x4bcab8 = 0;\n        *0x4bcabc = 0;\n        *0x4bcac0 = 1;\n        *0x4bcac4 = 1;\n        *0x4bcacc = L\"DRIVESTATUS\";\n        *0x4bcad8 = fcn.0044ec11;\n        *0x4bcadc = 0;\n        *0x4bcae0 = 0;\n        *0x4bcae4 = 1;\n        *0x4bcae8 = 1;\n        *0x4bcaf0 = L\"DUMMYSPEEDTEST\";\n        *0x4bcafc = method.tK.virtual_60;\n        *0x4bcb00 = 0;\n        *0x4bcb04 = 0;\n        *0x4bcb08 = 0;\n        *0x4bcb0c = 8;\n        *0x4bcb14 = L\"ENVGET\";\n        *0x4bcb20 = fcn.004573bf;\n        *0x4bcb24 = 0;\n        *0x4bcb28 = 0;\n        *0x4bcb2c = 1;\n        *0x4bcb30 = 1;\n        *0x4bcb38 = L\"ENVSET\";\n        *0x4bcb44 = fcn.0045741e;\n        *0x4bcb48 = 0;\n        *0x4bcb4c = 0;\n        *0x4bcb50 = 1;\n        *0x4bcb54 = 2;\n        *0x4bcb5c = L\"ENVUPDATE\";\n        *0x4bcb68 = fcn.00457482;\n        *0x4bcb6c = 0;\n        *0x4bcb70 = 0;\n        *0x4bcb74 = 0;\n        *0x4bcb78 = 0;\n        *0x4bcb80 = L\"EVAL\";\n        *0x4bcb8c = fcn.004574d8;\n        *0x4bcb90 = 0;\n        *0x4bcb94 = 0;\n        *0x4bcb98 = 1;\n        *0x4bcb9c = 1;\n        *0x4bcba4 = L\"EXECUTE\";\n        *0x4bcbb0 = fcn.0045757d;\n        *0x4bcbb4 = 0;\n        *0x4bcbb8 = 0;\n        *0x4bcbbc = 1;\n        *0x4bcbc0 = 1;\n        *0x4bcbc8 = 0x4af784;\n        *0x4bcbd4 = fcn.004561c7;\n        *0x4bcbd8 = 0;\n        *0x4bcbdc = 0;\n        *0x4bcbe0 = 1;\n        *0x4bcbe4 = 1;\n        *0x4bcbec = L\"FILECHANGEDIR\";\n        *0x4bcbf8 = fcn.0044ed1a;\n        *0x4bcbfc = 0;\n        *0x4bcc00 = 0;\n        *0x4bcc04 = 1;\n        *0x4bcc08 = 1;\n        *0x4bcc10 = L\"FILECLOSE\";\n        *0x4bcc1c = fcn.0041eea2;\n        *0x4bcc20 = 0;\n        *0x4bcc24 = 0;\n        *0x4bcc28 = 1;\n        *0x4bcc2c = 1;\n        *0x4bcc34 = L\"FILECOPY\";\n        *0x4bcc40 = fcn.0044ed57;\n        *0x4bcc44 = 0;\n        *0x4bcc48 = 0;\n        *0x4bcc4c = 2;\n        *0x4bcc50 = 3;\n        *0x4bcc58 = L\"FILECREATENTFSLINK\";\n        *0x4bcc64 = fcn.0044ee88;\n        *0x4bcc68 = 0;\n        *0x4bcc6c = 0;\n        *0x4bcc70 = 2;\n        *0x4bcc74 = 3;\n        *0x4bcc7c = L\"FILECREATESHORTCUT\";\n        *0x4bcc88 = fcn.0044efcd;\n        *0x4bcc8c = 0;\n        *0x4bcc90 = 0;\n        *0x4bcc94 = 2;\n        *0x4bcc98 = 9;\n        *0x4bcca0 = L\"FILEDELETE\";\n        *0x4bccac = fcn.0044f2bf;\n        *0x4bccb0 = 0;\n        *0x4bccb4 = 0;\n        *0x4bccb8 = 1;\n        *0x4bccbc = 1;\n        *0x4bccc4 = L\"FILEEXISTS\";\n        *0x4bccd0 = fcn.0044f314;\n        *0x4bccd4 = 0;\n        *0x4bccd8 = 0;\n        *0x4bccdc = 1;\n        *0x4bcce0 = 1;\n        *0x4bcce8 = L\"FILEFINDFIRSTFILE\";\n        *0x4bccf4 = fcn.0044f350;\n        *0x4bccf8 = 0;\n        *0x4bccfc = 0;\n        *0x4bcd00 = 1;\n        *0x4bcd04 = 1;\n        *0x4bcd0c = L\"FILEFINDNEXTFILE\";\n        *0x4bcd18 = fcn.0044f4ca;\n        *0x4bcd1c = 0;\n        *0x4bcd20 = 0;\n        *0x4bcd24 = 1;\n        *0x4bcd28 = 1;\n        *0x4bcd30 = L\"FILEFLUSH\";\n        *0x4bcd3c = fcn.0044f5ba;\n        *0x4bcd40 = 0;\n        *0x4bcd44 = 0;\n        *0x4bcd48 = 1;\n        *0x4bcd4c = 1;\n        *0x4bcd54 = L\"FILEGETATTRIB\";\n        *0x4bcd60 = fcn.0044f608;\n        *0x4bcd64 = 0;\n        *0x4bcd68 = 0;\n        *0x4bcd6c = 1;\n        *0x4bcd70 = 1;\n        *0x4bcd78 = L\"FILEGETENCODING\";\n        *0x4bcd84 = fcn.0044f736;\n        *0x4bcd88 = 0;\n        *0x4bcd8c = 0;\n        *0x4bcd90 = 1;\n        *0x4bcd94 = 2;\n        *0x4bcd9c = L\"FILEGETLONGNAME\";\n        *0x4bcda8 = fcn.0044f841;\n        *0x4bcdac = 0;\n        *0x4bcdb0 = 0;\n        *0x4bcdb4 = 1;\n        *0x4bcdb8 = 2;\n        *0x4bcdc0 = L\"FILEGETPOS\";\n        *0x4bcdcc = fcn.0044f8ef;\n        *0x4bcdd0 = 0;\n        *0x4bcdd4 = 0;\n        *0x4bcdd8 = 1;\n        *0x4bcddc = 1;\n        *0x4bcde4 = L\"FILEGETSHORTCUT\";\n        *0x4bcdf0 = fcn.0044fa15;\n        *0x4bcdf4 = 0;\n        *0x4bcdf8 = 0;\n        *0x4bcdfc = 1;\n        *0x4bce00 = 1;\n        *0x4bce08 = L\"FILEGETSHORTNAME\";\n        *0x4bce14 = fcn.0044f967;\n        *0x4bce18 = 0;\n        *0x4bce1c = 0;\n        *0x4bce20 = 1;\n        *0x4bce24 = 2;\n        *0x4bce2c = L\"FILEGETSIZE\";\n        *0x4bce38 = fcn.0044fd47;\n        *0x4bce3c = 0;\n        *0x4bce40 = 0;\n        *0x4bce44 = 1;\n        *0x4bce48 = 1;\n        *0x4bce50 = L\"FILEGETTIME\";\n        *0x4bce5c = fcn.0044fdd2;\n        *0x4bce60 = 0;\n        *0x4bce64 = 0;\n        *0x4bce68 = 1;\n        *0x4bce6c = 3;\n        *0x4bce74 = L\"FILEGETVERSION\";\n        *0x4bce80 = fcn.0045013f;\n        *0x4bce84 = 0;\n        *0x4bce88 = 0;\n        *0x4bce8c = 1;\n        *0x4bce90 = 2;\n        *0x4bce98 = L\"FILEINSTALL\";\n        *0x4bcea4 = fcn.004501e4;\n        *0x4bcea8 = 0;\n        *0x4bceac = 0;\n        *0x4bceb0 = 2;\n        *0x4bceb4 = 3;\n        *0x4bcebc = L\"FILEMOVE\";\n        *0x4bcec8 = fcn.004504f1;\n        *0x4bcecc = 0;\n        *0x4bced0 = 0;\n        *0x4bced4 = 2;\n        *0x4bced8 = 3;\n        *0x4bcee0 = L\"FILEOPEN\";\n        *0x4bceec = fcn.0041f461;\n        *0x4bcef0 = 0;\n        *0x4bcef4 = 0;\n        *0x4bcef8 = 1;\n        *0x4bcefc = 2;\n        *0x4bcf04 = L\"FILEOPENDIALOG\";\n        *0x4bcf10 = fcn.00450652;\n        *0x4bcf14 = 0;\n        *0x4bcf18 = 0;\n        *0x4bcf1c = 3;\n        *0x4bcf20 = 6;\n        *0x4bcf28 = L\"FILEREAD\";\n        *0x4bcf34 = fcn.0041ef0d;\n        *0x4bcf38 = 0;\n        *0x4bcf3c = 0;\n        *0x4bcf40 = 1;\n        *0x4bcf44 = 2;\n        *0x4bcf4c = L\"FILEREADLINE\";\n        *0x4bcf58 = fcn.0040a51a;\n        *0x4bcf5c = 0;\n        *0x4bcf60 = 0;\n        *0x4bcf64 = 1;\n        *0x4bcf68 = 2;\n        *0x4bcf70 = L\"FILEREADTOARRAY\";\n        *0x4bcf7c = fcn.0045066a;\n        *0x4bcf80 = 0;\n        *0x4bcf84 = 0;\n        *0x4bcf88 = 1;\n        *0x4bcf8c = 1;\n        *0x4bcf94 = L\"FILERECYCLE\";\n        *0x4bcfa0 = fcn.004507e6;\n        *0x4bcfa4 = 0;\n        *0x4bcfa8 = 0;\n        *0x4bcfac = 1;\n        *0x4bcfb0 = 1;\n        *0x4bcfb8 = L\"FILERECYCLEEMPTY\";\n        *0x4bcfc4 = fcn.00450878;\n        *0x4bcfc8 = 0;\n        *0x4bcfcc = 0;\n        *0x4bcfd0 = 0;\n        *0x4bcfd4 = 1;\n        *0x4bcfdc = L\"FILESAVEDIALOG\";\n        *0x4bcfe8 = fcn.004508c1;\n        *0x4bcfec = 0;\n        *0x4bcff0 = 0;\n        *0x4bcff4 = 3;\n        *0x4bcff8 = 6;\n        *0x4bd000 = L\"FILESELECTFOLDER\";\n        *0x4bd00c = fcn.004508d9;\n        *0x4bd010 = 0;\n        *0x4bd014 = 0;\n        *0x4bd018 = 2;\n        *0x4bd01c = 5;\n        *0x4bd024 = L\"FILESETATTRIB\";\n        *0x4bd030 = fcn.00450b20;\n        *0x4bd034 = 0;\n        *0x4bd038 = 0;\n        *0x4bd03c = 2;\n        *0x4bd040 = 3;\n        *0x4bd048 = L\"FILESETPOS\";\n        *0x4bd054 = fcn.00450dca;\n        *0x4bd058 = 0;\n        *0x4bd05c = 0;\n        *0x4bd060 = 3;\n        *0x4bd064 = 3;\n        *0x4bd06c = L\"FILESETTIME\";\n        *0x4bd078 = fcn.00450e41;\n        *0x4bd07c = 0;\n        *0x4bd080 = 0;\n        *0x4bd084 = 2;\n        *0x4bd088 = 4;\n        *0x4bd090 = L\"FILEWRITE\";\n        *0x4bd09c = fcn.00451080;\n        *0x4bd0a0 = 0;\n        *0x4bd0a4 = 0;\n        *0x4bd0a8 = 2;\n        *0x4bd0ac = 2;\n        *0x4bd0b4 = L\"FILEWRITELINE\";\n        *0x4bd0c0 = fcn.00451094;\n        *0x4bd0c4 = 0;\n        *0x4bd0c8 = 0;\n        *0x4bd0cc = 2;\n        *0x4bd0d0 = 2;\n        *0x4bd0d8 = L\"FLOOR\";\n        *0x4bd0e4 = fcn.00456207;\n        *0x4bd0e8 = 0;\n        *0x4bd0ec = 0;\n        *0x4bd0f0 = 1;\n        *0x4bd0f4 = 1;\n        *0x4bd0fc = L\"FTPSETPROXY\";\n        *0x4bd108 = fcn.00454b0c;\n        *0x4bd10c = 0;\n        *0x4bd110 = 0;\n        *0x4bd114 = 1;\n        *0x4bd118 = 4;\n        *0x4bd120 = L\"FUNCNAME\";\n        *0x4bd12c = fcn.0045762e;\n        *0x4bd130 = 0;\n        *0x4bd134 = 0;\n        *0x4bd138 = 1;\n        *0x4bd13c = 1;\n        *0x4bd144 = L\"GUICREATE\";\n        *0x4bd150 = fcn.0041a665;\n        *0x4bd154 = 0;\n        *0x4bd158 = 0;\n        *0x4bd15c = 1;\n        *0x4bd160 = 8;\n        *0x4bd168 = L\"GUICTRLCREATEAVI\";\n        *0x4bd174 = fcn.0045281a;\n        *0x4bd178 = 0;\n        *0x4bd17c = 0;\n        *0x4bd180 = 4;\n        *0x4bd184 = 8;\n        *0x4bd18c = L\"GUICTRLCREATEBUTTON\";\n        *0x4bd198 = fcn.0045282e;\n        *0x4bd19c = 0;\n        *0x4bd1a0 = 0;\n        *0x4bd1a4 = 3;\n        *0x4bd1a8 = 7;\n        *0x4bd1b0 = L\"GUICTRLCREATECHECKBOX\";\n        *0x4bd1bc = fcn.00452842;\n        *0x4bd1c0 = 0;\n        *0x4bd1c4 = 0;\n        *0x4bd1c8 = 3;\n        *0x4bd1cc = 7;\n        *0x4bd1d4 = L\"GUICTRLCREATECOMBO\";\n        *0x4bd1e0 = fcn.00452856;\n        *0x4bd1e4 = 0;\n        *0x4bd1e8 = 0;\n        *0x4bd1ec = 3;\n        *0x4bd1f0 = 7;\n        *0x4bd1f8 = L\"GUICTRLCREATECONTEXTMENU\";\n        *0x4bd204 = fcn.0045286a;\n        *0x4bd208 = 0;\n        *0x4bd20c = 0;\n        *0x4bd210 = 0;\n        *0x4bd214 = 1;\n        *0x4bd21c = L\"GUICTRLCREATEDATE\";\n        *0x4bd228 = fcn.0045287e;\n        *0x4bd22c = 0;\n        *0x4bd230 = 0;\n        *0x4bd234 = 3;\n        *0x4bd238 = 7;\n        *0x4bd240 = L\"GUICTRLCREATEDUMMY\";\n        *0x4bd24c = fcn.00452892;\n        *0x4bd250 = 0;\n        *0x4bd254 = 0;\n        *0x4bd258 = 0;\n        *0x4bd25c = 0;\n        *0x4bd264 = L\"GUICTRLCREATEEDIT\";\n        *0x4bd270 = fcn.004528a6;\n        *0x4bd274 = 0;\n        *0x4bd278 = 0;\n        *0x4bd27c = 3;\n        *0x4bd280 = 7;\n        *0x4bd288 = L\"GUICTRLCREATEGRAPHIC\";\n        *0x4bd294 = fcn.0041bf48;\n        *0x4bd298 = 0;\n        *0x4bd29c = 0;\n        *0x4bd2a0 = 2;\n        *0x4bd2a4 = 5;\n        *0x4bd2ac = L\"GUICTRLCREATEGROUP\";\n        *0x4bd2b8 = fcn.004528ba;\n        *0x4bd2bc = 0;\n        *0x4bd2c0 = 0;\n        *0x4bd2c4 = 3;\n        *0x4bd2c8 = 7;\n        *0x4bd2d0 = L\"GUICTRLCREATEICON\";\n        *0x4bd2dc = fcn.004528ce;\n        *0x4bd2e0 = 0;\n        *0x4bd2e4 = 0;\n        *0x4bd2e8 = 4;\n        *0x4bd2ec = 8;\n        *0x4bd2f4 = L\"GUICTRLCREATEINPUT\";\n        *0x4bd300 = fcn.004528e2;\n        *0x4bd304 = 0;\n        *0x4bd308 = 0;\n        *0x4bd30c = 3;\n        *0x4bd310 = 7;\n        *0x4bd318 = L\"GUICTRLCREATELABEL\";\n        *0x4bd324 = fcn.004528f6;\n        *0x4bd328 = 0;\n        *0x4bd32c = 0;\n        *0x4bd330 = 3;\n        *0x4bd334 = 7;\n        *0x4bd33c = L\"GUICTRLCREATELIST\";\n        *0x4bd348 = fcn.0045290a;\n        *0x4bd34c = 0;\n        *0x4bd350 = 0;\n        *0x4bd354 = 3;\n        *0x4bd358 = 7;\n        *0x4bd360 = L\"GUICTRLCREATELISTVIEW\";\n        *0x4bd36c = fcn.0045291e;\n        *0x4bd370 = 0;\n        *0x4bd374 = 0;\n        *0x4bd378 = 3;\n        *0x4bd37c = 7;\n        *0x4bd384 = L\"GUICTRLCREATELISTVIEWITEM\";\n        *0x4bd390 = fcn.00452932;\n        *0x4bd394 = 0;\n        *0x4bd398 = 0;\n        *0x4bd39c = 2;\n        *0x4bd3a0 = 2;\n        *0x4bd3a8 = L\"GUICTRLCREATEMENU\";\n        *0x4bd3b4 = fcn.00452946;\n        *0x4bd3b8 = 0;\n        *0x4bd3bc = 0;\n        *0x4bd3c0 = 1;\n        *0x4bd3c4 = 3;\n        *0x4bd3cc = L\"GUICTRLCREATEMENUITEM\";\n        *0x4bd3d8 = fcn.0045295a;\n        *0x4bd3dc = 0;\n        *0x4bd3e0 = 0;\n        *0x4bd3e4 = 2;\n        *0x4bd3e8 = 4;\n        *0x4bd3f0 = L\"GUICTRLCREATEMONTHCAL\";\n        *0x4bd3fc = fcn.0045296e;\n        *0x4bd400 = 0;\n        *0x4bd404 = 0;\n        *0x4bd408 = 3;\n        *0x4bd40c = 7;\n        *0x4bd414 = L\"GUICTRLCREATEOBJ\";\n        *0x4bd420 = fcn.00452982;\n        *0x4bd424 = 0;\n        *0x4bd428 = 0;\n        *0x4bd42c = 3;\n        *0x4bd430 = 7;\n        *0x4bd438 = L\"GUICTRLCREATEPIC\";\n        *0x4bd444 = fcn.00452996;\n        *0x4bd448 = 0;\n        *0x4bd44c = 0;\n        *0x4bd450 = 3;\n        *0x4bd454 = 7;\n        *0x4bd45c = L\"GUICTRLCREATEPROGRESS\";\n        *0x4bd468 = fcn.004529aa;\n        *0x4bd46c = 0;\n        *0x4bd470 = 0;\n        *0x4bd474 = 2;\n        *0x4bd478 = 6;\n        *0x4bd480 = L\"GUICTRLCREATERADIO\";\n        *0x4bd48c = fcn.004529be;\n        *0x4bd490 = 0;\n        *0x4bd494 = 0;\n        *0x4bd498 = 3;\n        *0x4bd49c = 7;\n        *0x4bd4a4 = L\"GUICTRLCREATESLIDER\";\n        *0x4bd4b0 = fcn.004529d2;\n        *0x4bd4b4 = 0;\n        *0x4bd4b8 = 0;\n        *0x4bd4bc = 2;\n        *0x4bd4c0 = 6;\n        *0x4bd4c8 = L\"GUICTRLCREATETAB\";\n        *0x4bd4d4 = fcn.004529e6;\n        *0x4bd4d8 = 0;\n        *0x4bd4dc = 0;\n        *0x4bd4e0 = 2;\n        *0x4bd4e4 = 6;\n        *0x4bd4ec = L\"GUICTRLCREATETABITEM\";\n        *0x4bd4f8 = fcn.004529fa;\n        *0x4bd4fc = 0;\n        *0x4bd500 = 0;\n        *0x4bd504 = 1;\n        *0x4bd508 = 1;\n        *0x4bd510 = L\"GUICTRLCREATETREEVIEW\";\n        *0x4bd51c = fcn.00452a0e;\n        *0x4bd520 = 0;\n        *0x4bd524 = 0;\n        *0x4bd528 = 2;\n        *0x4bd52c = 6;\n        *0x4bd534 = L\"GUICTRLCREATETREEVIEWITEM\";\n        *0x4bd540 = fcn.00452a22;\n        *0x4bd544 = 0;\n        *0x4bd548 = 0;\n        *0x4bd54c = 2;\n        *0x4bd550 = 2;\n        *0x4bd558 = L\"GUICTRLCREATEUPDOWN\";\n        *0x4bd564 = fcn.00452a36;\n        *0x4bd568 = 0;\n        *0x4bd56c = 0;\n        *0x4bd570 = 1;\n        *0x4bd574 = 2;\n        *0x4bd57c = L\"GUICTRLDELETE\";\n        *0x4bd588 = fcn.0040488e;\n        *0x4bd58c = 0;\n        *0x4bd590 = 0;\n        *0x4bd594 = 1;\n        *0x4bd598 = 1;\n        *0x4bd5a0 = L\"GUICTRLGETHANDLE\";\n        *0x4bd5ac = fcn.00452a4a;\n        *0x4bd5b0 = 0;\n        *0x4bd5b4 = 0;\n        *0x4bd5b8 = 1;\n        *0x4bd5bc = 1;\n        *0x4bd5c4 = L\"GUICTRLGETSTATE\";\n        *0x4bd5d0 = fcn.00452a97;\n        *0x4bd5d4 = 0;\n        *0x4bd5d8 = 0;\n        *0x4bd5dc = 1;\n        *0x4bd5e0 = 1;\n        *0x4bd5e8 = L\"GUICTRLREAD\";\n        *0x4bd5f4 = fcn.00452acc;\n        *0x4bd5f8 = 0;\n        *0x4bd5fc = 0;\n        *0x4bd600 = 1;\n        *0x4bd604 = 2;\n        *0x4bd60c = L\"GUICTRLRECVMSG\";\n        *0x4bd618 = fcn.00452b52;\n        *0x4bd61c = 0;\n        *0x4bd620 = 0;\n        *0x4bd624 = 2;\n        *0x4bd628 = 4;\n        *0x4bd630 = L\"GUICTRLREGISTERLISTVIEWSORT\";\n        *0x4bd63c = fcn.00452ccf;\n        *0x4bd640 = 0;\n        *0x4bd644 = 0;\n        *0x4bd648 = 2;\n        *0x4bd64c = 2;\n        *0x4bd654 = L\"GUICTRLSENDMSG\";\n        *0x4bd660 = fcn.00452e0a;\n        *0x4bd664 = 0;\n        *0x4bd668 = 0;\n        *0x4bd66c = 4;\n        *0x4bd670 = 4;\n        *0x4bd678 = L\"GUICTRLSENDTODUMMY\";\n        *0x4bd684 = fcn.00452f47;\n        *0x4bd688 = 0;\n        *0x4bd68c = 0;\n        *0x4bd690 = 1;\n        *0x4bd694 = 2;\n        *0x4bd69c = L\"GUICTRLSETBKCOLOR\";\n        *0x4bd6a8 = fcn.00452fb7;\n        *0x4bd6ac = 0;\n        *0x4bd6b0 = 0;\n        *0x4bd6b4 = 2;\n        *0x4bd6b8 = 2;\n        *0x4bd6c0 = L\"GUICTRLSETCOLOR\";\n        *0x4bd6cc = fcn.00453013;\n        *0x4bd6d0 = 0;\n        *0x4bd6d4 = 0;\n        *0x4bd6d8 = 2;\n        *0x4bd6dc = 2;\n        *0x4bd6e4 = L\"GUICTRLSETCURSOR\";\n        *0x4bd6f0 = fcn.0045306f;\n        *0x4bd6f4 = 0;\n        *0x4bd6f8 = 0;\n        *0x4bd6fc = 2;\n        *0x4bd700 = 2;\n        *0x4bd708 = L\"GUICTRLSETDATA\";\n        *0x4bd714 = fcn.004530af;\n        *0x4bd718 = 0;\n        *0x4bd71c = 0;\n        *0x4bd720 = 2;\n        *0x4bd724 = 3;\n        *0x4bd72c = L\"GUICTRLSETDEFBKCOLOR\";\n        *0x4bd738 = fcn.00453133;\n        *0x4bd73c = 0;\n        *0x4bd740 = 0;\n        *0x4bd744 = 1;\n        *0x4bd748 = 2;\n        *0x4bd750 = L\"GUICTRLSETDEFCOLOR\";\n        *0x4bd75c = fcn.00453188;\n        *0x4bd760 = 0;\n        *0x4bd764 = 0;\n        *0x4bd768 = 1;\n        *0x4bd76c = 2;\n        *0x4bd774 = L\"GUICTRLSETFONT\";\n        *0x4bd780 = fcn.004531dd;\n        *0x4bd784 = 0;\n        *0x4bd788 = 0;\n        *0x4bd78c = 2;\n        *0x4bd790 = 6;\n        *0x4bd798 = L\"GUICTRLSETGRAPHIC\";\n        *0x4bd7a4 = fcn.0040ccef;\n        *0x4bd7a8 = 0;\n        *0x4bd7ac = 0;\n        *0x4bd7b0 = 2;\n        *0x4bd7b4 = 8;\n        *0x4bd7bc = L\"GUICTRLSETIMAGE\";\n        *0x4bd7c8 = fcn.004532cd;\n        *0x4bd7cc = 0;\n        *0x4bd7d0 = 0;\n        *0x4bd7d4 = 2;\n        *0x4bd7d8 = 4;\n        *0x4bd7e0 = L\"GUICTRLSETLIMIT\";\n        *0x4bd7ec = fcn.00453379;\n        *0x4bd7f0 = 0;\n        *0x4bd7f4 = 0;\n        *0x4bd7f8 = 2;\n        *0x4bd7fc = 3;\n        *0x4bd804 = L\"GUICTRLSETONEVENT\";\n        *0x4bd810 = fcn.004533cd;\n        *0x4bd814 = 0;\n        *0x4bd818 = 0;\n        *0x4bd81c = 2;\n        *0x4bd820 = 2;\n        *0x4bd828 = L\"GUICTRLSETPOS\";\n        *0x4bd834 = fcn.004534d8;\n        *0x4bd838 = 0;\n        *0x4bd83c = 0;\n        *0x4bd840 = 2;\n        *0x4bd844 = 5;\n        *0x4bd84c = L\"GUICTRLSETRESIZING\";\n        *0x4bd858 = fcn.00453562;\n        *0x4bd85c = 0;\n        *0x4bd860 = 0;\n        *0x4bd864 = 2;\n        *0x4bd868 = 2;\n        *0x4bd870 = L\"GUICTRLSETSTATE\";\n        *0x4bd87c = fcn.004535ac;\n        *0x4bd880 = 0;\n        *0x4bd884 = 0;\n        *0x4bd888 = 2;\n        *0x4bd88c = 2;\n        *0x4bd894 = L\"GUICTRLSETSTYLE\";\n        *0x4bd8a0 = fcn.004535ec;\n        *0x4bd8a4 = 0;\n        *0x4bd8a8 = 0;\n        *0x4bd8ac = 2;\n        *0x4bd8b0 = 3;\n        *0x4bd8b8 = L\"GUICTRLSETTIP\";\n        *0x4bd8c4 = fcn.00453641;\n        *0x4bd8c8 = 0;\n        *0x4bd8cc = 0;\n        *0x4bd8d0 = 2;\n        *0x4bd8d4 = 5;\n        *0x4bd8dc = L\"GUIDELETE\";\n        *0x4bd8e8 = fcn.0045372c;\n        *0x4bd8ec = 0;\n        *0x4bd8f0 = 0;\n        *0x4bd8f4 = 0;\n        *0x4bd8f8 = 1;\n        *0x4bd900 = L\"GUIGETCURSORINFO\";\n        *0x4bd90c = fcn.00453768;\n        *0x4bd910 = 0;\n        *0x4bd914 = 0;\n        *0x4bd918 = 0;\n        *0x4bd91c = 1;\n        *0x4bd924 = L\"GUIGETMSG\";\n        *0x4bd930 = fcn.0045389c;\n        *0x4bd934 = 0;\n        *0x4bd938 = 0;\n        *0x4bd93c = 0;\n        *0x4bd940 = 1;\n        *0x4bd948 = L\"GUIGETSTYLE\";\n        *0x4bd954 = fcn.00453a00;\n        *0x4bd958 = 0;\n        *0x4bd95c = 0;\n        *0x4bd960 = 0;\n        *0x4bd964 = 1;\n        *0x4bd96c = L\"GUIREGISTERMSG\";\n        *0x4bd978 = fcn.00453ab6;\n        *0x4bd97c = 0;\n        *0x4bd980 = 0;\n        *0x4bd984 = 2;\n        *0x4bd988 = 2;\n        *0x4bd990 = L\"GUISETACCELERATORS\";\n        *0x4bd99c = fcn.00453bc5;\n        *0x4bd9a0 = 0;\n        *0x4bd9a4 = 0;\n        *0x4bd9a8 = 1;\n        *0x4bd9ac = 2;\n        *0x4bd9b4 = L\"GUISETBKCOLOR\";\n        *0x4bd9c0 = fcn.0041a54d;\n        *0x4bd9c4 = 0;\n        *0x4bd9c8 = 0;\n        *0x4bd9cc = 1;\n        *0x4bd9d0 = 2;\n        *0x4bd9d8 = L\"GUISETCOORD\";\n        *0x4bd9e4 = fcn.00453d69;\n        *0x4bd9e8 = 0;\n        *0x4bd9ec = 0;\n        *0x4bd9f0 = 2;\n        *0x4bd9f4 = 5;\n        *0x4bd9fc = L\"GUISETCURSOR\";\n        *0x4bda08 = fcn.00453df2;\n        *0x4bda0c = 0;\n        *0x4bda10 = 0;\n        *0x4bda14 = 0;\n        *0x4bda18 = 3;\n        *0x4bda20 = L\"GUISETFONT\";\n        *0x4bda2c = fcn.00453e56;\n        *0x4bda30 = 0;\n        *0x4bda34 = 0;\n        *0x4bda38 = 1;\n        *0x4bda3c = 6;\n        *0x4bda44 = L\"GUISETHELP\";\n        *0x4bda50 = fcn.00453f6b;\n        *0x4bda54 = 0;\n        *0x4bda58 = 0;\n        *0x4bda5c = 1;\n        *0x4bda60 = 2;\n        *0x4bda68 = L\"GUISETICON\";\n        *0x4bda74 = fcn.00453fc5;\n        *0x4bda78 = 0;\n        *0x4bda7c = 0;\n        *0x4bda80 = 1;\n        *0x4bda84 = 3;\n        *0x4bda8c = L\"GUISETONEVENT\";\n        *0x4bda98 = fcn.0041ce7b;\n        *0x4bda9c = 0;\n        *0x4bdaa0 = 0;\n        *0x4bdaa4 = 2;\n        *0x4bdaa8 = 3;\n        *0x4bdab0 = L\"GUISETSTATE\";\n        *0x4bdabc = fcn.0041f66e;\n        *0x4bdac0 = 0;\n        *0x4bdac4 = 0;\n        *0x4bdac8 = 0;\n        *0x4bdacc = 2;\n        *0x4bdad4 = L\"GUISETSTYLE\";\n        *0x4bdae0 = fcn.00454037;\n        *0x4bdae4 = 0;\n        *0x4bdae8 = 0;\n        *0x4bdaec = 1;\n        *0x4bdaf0 = 3;\n        *0x4bdaf8 = L\"GUISTARTGROUP\";\n        *0x4bdb04 = fcn.0045409b;\n        *0x4bdb08 = 0;\n        *0x4bdb0c = 0;\n        *0x4bdb10 = 0;\n        *0x4bdb14 = 1;\n        *0x4bdb1c = L\"GUISWITCH\";\n        *0x4bdb28 = fcn.004540e6;\n        *0x4bdb2c = 0;\n        *0x4bdb30 = 0;\n        *0x4bdb34 = 1;\n        *0x4bdb38 = 2;\n        *0x4bdb40 = 0x4b0550;\n        *0x4bdb4c = fcn.0040d1b3;\n        *0x4bdb50 = 0;\n        *0x4bdb54 = 0;\n        *0x4bdb58 = 1;\n        *0x4bdb5c = 2;\n        *0x4bdb64 = L\"HOTKEYSET\";\n        *0x4bdb70 = fcn.0041cc12;\n        *0x4bdb74 = 0;\n        *0x4bdb78 = 0;\n        *0x4bdb7c = 1;\n        *0x4bdb80 = 2;\n        *0x4bdb88 = L\"HTTPSETPROXY\";\n        *0x4bdb94 = fcn.00454d74;\n        *0x4bdb98 = 0;\n        *0x4bdb9c = 0;\n        *0x4bdba0 = 1;\n        *0x4bdba4 = 4;\n        *0x4bdbac = L\"HTTPSETUSERAGENT\";\n        *0x4bdbb8 = fcn.00454d88;\n        *0x4bdbbc = 0;\n        *0x4bdbc0 = 0;\n        *0x4bdbc4 = 1;\n        *0x4bdbc8 = 1;\n        *0x4bdbd0 = L\"HWND\";\n        *0x4bdbdc = fcn.0045626c;\n        *0x4bdbe0 = 0;\n        *0x4bdbe4 = 0;\n        *0x4bdbe8 = 1;\n        *0x4bdbec = 1;\n        *0x4bdbf4 = L\"INETCLOSE\";\n        *0x4bdc00 = fcn.00454de4;\n        *0x4bdc04 = 0;\n        *0x4bdc08 = 0;\n        *0x4bdc0c = 1;\n        *0x4bdc10 = 1;\n        *0x4bdc18 = L\"INETGET\";\n        *0x4bdc24 = fcn.00454e63;\n        *0x4bdc28 = 0;\n        *0x4bdc2c = 0;\n        *0x4bdc30 = 2;\n        *0x4bdc34 = 4;\n        *0x4bdc3c = L\"INETGETINFO\";\n        *0x4bdc48 = fcn.00454f9e;\n        *0x4bdc4c = 0;\n        *0x4bdc50 = 0;\n        *0x4bdc54 = 0;\n        *0x4bdc58 = 2;\n        *0x4bdc60 = L\"INETGETSIZE\";\n        *0x4bdc6c = fcn.00455235;\n        *0x4bdc70 = 0;\n        *0x4bdc74 = 0;\n        *0x4bdc78 = 1;\n        *0x4bdc7c = 2;\n        *0x4bdc84 = L\"INETREAD\";\n        *0x4bdc90 = fcn.004552fd;\n        *0x4bdc94 = 0;\n        *0x4bdc98 = 0;\n        *0x4bdc9c = 1;\n        *0x4bdca0 = 2;\n        *0x4bdca8 = L\"INIDELETE\";\n        *0x4bdcb4 = fcn.004510a8;\n        *0x4bdcb8 = 0;\n        *0x4bdcbc = 0;\n        *0x4bdcc0 = 2;\n        *0x4bdcc4 = 3;\n        *0x4bdccc = L\"INIREAD\";\n        *0x4bdcd8 = fcn.00451195;\n        *0x4bdcdc = 0;\n        *0x4bdce0 = 0;\n        *0x4bdce4 = 4;\n        *0x4bdce8 = 4;\n        *0x4bdcf0 = L\"INIREADSECTION\";\n        *0x4bdcfc = fcn.00451244;\n        *0x4bdd00 = 0;\n        *0x4bdd04 = 0;\n        *0x4bdd08 = 2;\n        *0x4bdd0c = 2;\n        *0x4bdd14 = L\"INIREADSECTIONNAMES\";\n        *0x4bdd20 = fcn.00451543;\n        *0x4bdd24 = 0;\n        *0x4bdd28 = 0;\n        *0x4bdd2c = 1;\n        *0x4bdd30 = 1;\n        *0x4bdd38 = L\"INIRENAMESECTION\";\n        *0x4bdd44 = fcn.00451726;\n        *0x4bdd48 = 0;\n        *0x4bdd4c = 0;\n        *0x4bdd50 = 3;\n        *0x4bdd54 = 4;\n        *0x4bdd5c = L\"INIWRITE\";\n        *0x4bdd68 = fcn.00451893;\n        *0x4bdd6c = 0;\n        *0x4bdd70 = 0;\n        *0x4bdd74 = 4;\n        *0x4bdd78 = 4;\n        *0x4bdd80 = L\"INIWRITESECTION\";\n        *0x4bdd8c = fcn.00451939;\n        *0x4bdd90 = 0;\n        *0x4bdd94 = 0;\n        *0x4bdd98 = 3;\n        *0x4bdd9c = 4;\n        *0x4bdda4 = L\"INPUTBOX\";\n        *0x4bddb0 = fcn.004576bb;\n        *0x4bddb4 = 0;\n        *0x4bddb8 = 0;\n        *0x4bddbc = 2;\n        *0x4bddc0 = 10;\n        *0x4bddc8 = 0x4b06f8;\n        *0x4bddd4 = fcn.0040d0ba;\n        *0x4bddd8 = 0;\n        *0x4bdddc = 0;\n        *0x4bdde0 = 1;\n        *0x4bdde4 = 2;\n        *0x4bddec = L\"ISADMIN\";\n        *0x4bddf8 = fcn.00457a93;\n        *0x4bddfc = 0;\n        *0x4bde00 = 0;\n        *0x4bde04 = 0;\n        *0x4bde08 = 0;\n        *0x4bde10 = L\"ISARRAY\";\n        *0x4bde1c = fcn.004562d8;\n        *0x4bde20 = 0;\n        *0x4bde24 = 0;\n        *0x4bde28 = 1;\n        *0x4bde2c = 1;\n        *0x4bde34 = L\"ISBINARY\";\n        *0x4bde40 = fcn.0045630a;\n        *0x4bde44 = 0;\n        *0x4bde48 = 0;\n        *0x4bde4c = 1;\n        *0x4bde50 = 1;\n        *0x4bde58 = L\"ISBOOL\";\n        *0x4bde64 = fcn.00457abb;\n        *0x4bde68 = 0;\n        *0x4bde6c = 0;\n        *0x4bde70 = 1;\n        *0x4bde74 = 1;\n        *0x4bde7c = L\"ISDECLARED\";\n        *0x4bde88 = fcn.00457aed;\n        *0x4bde8c = 0;\n        *0x4bde90 = 0;\n        *0x4bde94 = 1;\n        *0x4bde98 = 1;\n        *0x4bdea0 = L\"ISDLLSTRUCT\";\n        *0x4bdeac = fcn.004615ee;\n        *0x4bdeb0 = 0;\n        *0x4bdeb4 = 0;\n        *0x4bdeb8 = 1;\n        *0x4bdebc = 1;\n        *0x4bdec4 = L\"ISFLOAT\";\n        *0x4bded0 = fcn.0045633c;\n        *0x4bded4 = 0;\n        *0x4bded8 = 0;\n        *0x4bdedc = 1;\n        *0x4bdee0 = 1;\n        *0x4bdee8 = L\"ISFUNC\";\n        *0x4bdef4 = fcn.00457b62;\n        *0x4bdef8 = 0;\n        *0x4bdefc = 0;\n        *0x4bdf00 = 1;\n        *0x4bdf04 = 1;\n        *0x4bdf0c = L\"ISHWND\";\n        *0x4bdf18 = fcn.004563bd;\n        *0x4bdf1c = 0;\n        *0x4bdf20 = 0;\n        *0x4bdf24 = 1;\n        *0x4bdf28 = 1;\n        *0x4bdf30 = L\"ISINT\";\n        *0x4bdf3c = fcn.0045640b;\n        *0x4bdf40 = 0;\n        *0x4bdf44 = 0;\n        *0x4bdf48 = 1;\n        *0x4bdf4c = 1;\n        *0x4bdf54 = L\"ISKEYWORD\";\n        *0x4bdf60 = fcn.00457bc4;\n        *0x4bdf64 = 0;\n        *0x4bdf68 = 0;\n        *0x4bdf6c = 1;\n        *0x4bdf70 = 1;\n        *0x4bdf78 = L\"ISNUMBER\";\n        *0x4bdf84 = fcn.00456492;\n        *0x4bdf88 = 0;\n        *0x4bdf8c = 0;\n        *0x4bdf90 = 1;\n        *0x4bdf94 = 1;\n        *0x4bdf9c = L\"ISOBJ\";\n        *0x4bdfa8 = fcn.0045aef6;\n        *0x4bdfac = 0;\n        *0x4bdfb0 = 0;\n        *0x4bdfb4 = 1;\n        *0x4bdfb8 = 1;\n        *0x4bdfc0 = L\"ISPTR\";\n        *0x4bdfcc = fcn.004564c2;\n        *0x4bdfd0 = 0;\n        *0x4bdfd4 = 0;\n        *0x4bdfd8 = 1;\n        *0x4bdfdc = 1;\n        *0x4bdfe4 = L\"ISSTRING\";\n        *0x4bdff0 = fcn.004564f4;\n        *0x4bdff4 = 0;\n        *0x4bdff8 = 0;\n        *0x4bdffc = 1;\n        *0x4be000 = 1;\n        *0x4be008 = L\"ISTABLE\";\n        *0x4be014 = fcn.00456526;\n        *0x4be018 = 0;\n        *0x4be01c = 0;\n        *0x4be020 = 1;\n        *0x4be024 = 1;\n        *0x4be02c = 0x4b0814;\n        *0x4be038 = fcn.00456558;\n        *0x4be03c = 0;\n        *0x4be040 = 0;\n        *0x4be044 = 1;\n        *0x4be048 = 1;\n        *0x4be050 = L\"MEMGETSTATS\";\n        *0x4be05c = fcn.00401b72;\n        *0x4be060 = 0;\n        *0x4be064 = 0;\n        *0x4be068 = 0;\n        *0x4be06c = 0;\n        *0x4be074 = 0x4b0834;\n        *0x4be080 = fcn.00456598;\n        *0x4be084 = 0;\n        *0x4be088 = 0;\n        *0x4be08c = 2;\n        *0x4be090 = 2;\n        *0x4be098 = L\"MOUSECLICK\";\n        *0x4be0a4 = fcn.00457c26;\n        *0x4be0a8 = 0;\n        *0x4be0ac = 0;\n        *0x4be0b0 = 1;\n        *0x4be0b4 = 5;\n        *0x4be0bc = L\"MOUSECLICKDRAG\";\n        *0x4be0c8 = fcn.00457ddb;\n        *0x4be0cc = 0;\n        *0x4be0d0 = 0;\n        *0x4be0d4 = 5;\n        *0x4be0d8 = 6;\n        *0x4be0e0 = L\"MOUSEDOWN\";\n        *0x4be0ec = fcn.00457f01;\n        *0x4be0f0 = 0;\n        *0x4be0f4 = 0;\n        *0x4be0f8 = 1;\n        *0x4be0fc = 1;\n        *0x4be104 = L\"MOUSEGETCURSOR\";\n        *0x4be110 = fcn.00457f3d;\n        *0x4be114 = 0;\n        *0x4be118 = 0;\n        *0x4be11c = 0;\n        *0x4be120 = 0;\n        *0x4be128 = L\"MOUSEGETPOS\";\n        *0x4be134 = fcn.00458065;\n        *0x4be138 = 0;\n        *0x4be13c = 0;\n        *0x4be140 = 0;\n        *0x4be144 = 1;\n        *0x4be14c = L\"MOUSEMOVE\";\n        *0x4be158 = fcn.00458171;\n        *0x4be15c = 0;\n        *0x4be160 = 0;\n        *0x4be164 = 2;\n        *0x4be168 = 3;\n        *0x4be170 = L\"MOUSEUP\";\n        *0x4be17c = fcn.004581b7;\n        *0x4be180 = 0;\n        *0x4be184 = 0;\n        *0x4be188 = 1;\n        *0x4be18c = 1;\n        *0x4be194 = L\"MOUSEWHEEL\";\n        *0x4be1a0 = fcn.004581f3;\n        *0x4be1a4 = 0;\n        *0x4be1a8 = 0;\n        *0x4be1ac = 1;\n        *0x4be1b0 = 2;\n        *0x4be1b8 = L\"MSGBOX\";\n        *0x4be1c4 = fcn.00458272;\n        *0x4be1c8 = 0;\n        *0x4be1cc = 0;\n        *0x4be1d0 = 3;\n        *0x4be1d4 = 5;\n        *0x4be1dc = 0x49dc2c;\n        *0x4be1e8 = fcn.0040d0f6;\n        *0x4be1ec = 0;\n        *0x4be1f0 = 0;\n        *0x4be1f4 = 1;\n        *0x4be1f8 = 2;\n        *0x4be200 = L\"OBJCREATE\";\n        *0x4be20c = fcn.0045af26;\n        *0x4be210 = 0;\n        *0x4be214 = 0;\n        *0x4be218 = 1;\n        *0x4be21c = 4;\n        *0x4be224 = L\"OBJCREATEINTERFACE\";\n        *0x4be230 = fcn.0045b250;\n        *0x4be234 = 0;\n        *0x4be238 = 0;\n        *0x4be23c = 2;\n        *0x4be240 = 4;\n        *0x4be248 = L\"OBJEVENT\";\n        *0x4be254 = fcn.0045b482;\n        *0x4be258 = 0;\n        *0x4be25c = 0;\n        *0x4be260 = 1;\n        *0x4be264 = 3;\n        *0x4be26c = L\"OBJGET\";\n        *0x4be278 = fcn.0045b74b;\n        *0x4be27c = 0;\n        *0x4be280 = 0;\n        *0x4be284 = 1;\n        *0x4be288 = 3;\n        *0x4be290 = L\"OBJNAME\";\n        *0x4be29c = fcn.0045bae6;\n        *0x4be2a0 = 0;\n        *0x4be2a4 = 0;\n        *0x4be2a8 = 1;\n        *0x4be2ac = 2;\n        *0x4be2b4 = L\"ONAUTOITEXITREGISTER\";\n        *0x4be2c0 = fcn.004583fc;\n        *0x4be2c4 = 0;\n        *0x4be2c8 = 0;\n        *0x4be2cc = 1;\n        *0x4be2d0 = 1;\n        *0x4be2d8 = L\"ONAUTOITEXITUNREGISTER\";\n        *0x4be2e4 = fcn.00458550;\n        *0x4be2e8 = 0;\n        *0x4be2ec = 0;\n        *0x4be2f0 = 1;\n        *0x4be2f4 = 1;\n        *0x4be2fc = 0x4b09d8;\n        *0x4be308 = fcn.0041d00f;\n        *0x4be30c = 0;\n        *0x4be310 = 0;\n        *0x4be314 = 1;\n        *0x4be318 = 2;\n        *0x4be320 = L\"PING\";\n        *0x4be32c = fcn.00458694;\n        *0x4be330 = 0;\n        *0x4be334 = 0;\n        *0x4be338 = 1;\n        *0x4be33c = 2;\n        *0x4be344 = L\"PIXELCHECKSUM\";\n        *0x4be350 = fcn.00458878;\n        *0x4be354 = 0;\n        *0x4be358 = 0;\n        *0x4be35c = 4;\n        *0x4be360 = 7;\n        *0x4be368 = L\"PIXELGETCOLOR\";\n        *0x4be374 = fcn.004589ad;\n        *0x4be378 = 0;\n        *0x4be37c = 0;\n        *0x4be380 = 2;\n        *0x4be384 = 3;\n        *0x4be38c = L\"PIXELSEARCH\";\n        *0x4be398 = fcn.00458a77;\n        *0x4be39c = 0;\n        *0x4be3a0 = 0;\n        *0x4be3a4 = 5;\n        *0x4be3a8 = 8;\n        *0x4be3b0 = L\"PROCESSCLOSE\";\n        *0x4be3bc = fcn.00461620;\n        *0x4be3c0 = 0;\n        *0x4be3c4 = 0;\n        *0x4be3c8 = 1;\n        *0x4be3cc = 1;\n        *0x4be3d4 = L\"PROCESSEXISTS\";\n        *0x4be3e0 = fcn.004617aa;\n        *0x4be3e4 = 0;\n        *0x4be3e8 = 0;\n        *0x4be3ec = 1;\n        *0x4be3f0 = 1;\n        *0x4be3f8 = L\"PROCESSGETSTATS\";\n        *0x4be404 = fcn.00461836;\n        *0x4be408 = 0;\n        *0x4be40c = 0;\n        *0x4be410 = 0;\n        *0x4be414 = 2;\n        *0x4be41c = L\"PROCESSLIST\";\n        *0x4be428 = fcn.00461ad0;\n        *0x4be42c = 0;\n        *0x4be430 = 0;\n        *0x4be434 = 0;\n        *0x4be438 = 1;\n        *0x4be440 = L\"PROCESSSETPRIORITY\";\n        *0x4be44c = fcn.00461cc7;\n        *0x4be450 = 0;\n        *0x4be454 = 0;\n        *0x4be458 = 2;\n        *0x4be45c = 2;\n        *0x4be464 = L\"PROCESSWAIT\";\n        *0x4be470 = fcn.00461daf;\n        *0x4be474 = 0;\n        *0x4be478 = 0;\n        *0x4be47c = 1;\n        *0x4be480 = 2;\n        *0x4be488 = L\"PROCESSWAITCLOSE\";\n        *0x4be494 = fcn.00461e35;\n        *0x4be498 = 0;\n        *0x4be49c = 0;\n        *0x4be4a0 = 1;\n        *0x4be4a4 = 2;\n        *0x4be4ac = L\"PROGRESSOFF\";\n        *0x4be4b8 = fcn.00458d07;\n        *0x4be4bc = 0;\n        *0x4be4c0 = 0;\n        *0x4be4c4 = 0;\n        *0x4be4c8 = 0;\n        *0x4be4d0 = L\"PROGRESSON\";\n        *0x4be4dc = fcn.00458d1c;\n        *0x4be4e0 = 0;\n        *0x4be4e4 = 0;\n        *0x4be4e8 = 2;\n        *0x4be4ec = 6;\n        *0x4be4f4 = L\"PROGRESSSET\";\n        *0x4be500 = fcn.00458d31;\n        *0x4be504 = 0;\n        *0x4be508 = 0;\n        *0x4be50c = 1;\n        *0x4be510 = 3;\n        *0x4be518 = 0x4b0b58;\n        *0x4be524 = fcn.004566a8;\n        *0x4be528 = 0;\n        *0x4be52c = 0;\n        *0x4be530 = 1;\n        *0x4be534 = 1;\n        *0x4be53c = L\"RANDOM\";\n        *0x4be548 = fcn.004566d7;\n        *0x4be54c = 0;\n        *0x4be550 = 0;\n        *0x4be554 = 0;\n        *0x4be558 = 3;\n        *0x4be560 = L\"REGDELETE\";\n        *0x4be56c = fcn.00462a0a;\n        *0x4be570 = 0;\n        *0x4be574 = 0;\n        *0x4be578 = 1;\n        *0x4be57c = 2;\n        *0x4be584 = L\"REGENUMKEY\";\n        *0x4be590 = fcn.00462d1a;\n        *0x4be594 = 0;\n        *0x4be598 = 0;\n        *0x4be59c = 2;\n        *0x4be5a0 = 2;\n        *0x4be5a8 = L\"REGENUMVAL\";\n        *0x4be5b4 = fcn.00462ec7;\n        *0x4be5b8 = 0;\n        *0x4be5bc = 0;\n        *0x4be5c0 = 2;\n        *0x4be5c4 = 2;\n        *0x4be5cc = L\"REGREAD\";\n        *0x4be5d8 = fcn.004630ad;\n        *0x4be5dc = 0;\n        *0x4be5e0 = 0;\n        *0x4be5e4 = 2;\n        *0x4be5e8 = 2;\n        *0x4be5f0 = L\"REGWRITE\";\n        *0x4be5fc = fcn.0046352a;\n        *0x4be600 = 0;\n        *0x4be604 = 0;\n        *0x4be608 = 1;\n        *0x4be60c = 4;\n        *0x4be614 = L\"ROUND\";\n        *0x4be620 = fcn.0041e850;\n        *0x4be624 = 0;\n        *0x4be628 = 0;\n        *0x4be62c = 1;\n        *0x4be630 = 2;\n        *0x4be638 = 0x4b0be4;\n        *0x4be644 = fcn.00461f19;\n        *0x4be648 = 0;\n        *0x4be64c = 0;\n        *0x4be650 = 1;\n        *0x4be654 = 4;\n        *0x4be65c = L\"RUNAS\";\n        *0x4be668 = fcn.00461f2f;\n        *0x4be66c = 0;\n        *0x4be670 = 0;\n        *0x4be674 = 5;\n        *0x4be678 = 8;\n        *0x4be680 = L\"RUNASWAIT\";\n        *0x4be68c = fcn.00461f45;\n        *0x4be690 = 0;\n        *0x4be694 = 0;\n        *0x4be698 = 5;\n        *0x4be69c = 8;\n        *0x4be6a4 = L\"RUNWAIT\";\n        *0x4be6b0 = fcn.00461fa1;\n        *0x4be6b4 = 0;\n        *0x4be6b8 = 0;\n        *0x4be6bc = 1;\n        *0x4be6c0 = 4;\n        *0x4be6c8 = L\"SEND\";\n        *0x4be6d4 = fcn.00458df8;\n        *0x4be6d8 = 0;\n        *0x4be6dc = 0;\n        *0x4be6e0 = 1;\n        *0x4be6e4 = 2;\n        *0x4be6ec = L\"SENDKEEPACTIVE\";\n        *0x4be6f8 = fcn.0046728b;\n        *0x4be6fc = 0;\n        *0x4be700 = 0;\n        *0x4be704 = 1;\n        *0x4be708 = 2;\n        *0x4be710 = L\"SETERROR\";\n        *0x4be71c = fcn.00458e5b;\n        *0x4be720 = 0;\n        *0x4be724 = 0;\n        *0x4be728 = 1;\n        *0x4be72c = 3;\n        *0x4be734 = L\"SETEXTENDED\";\n        *0x4be740 = fcn.00458eba;\n        *0x4be744 = 0;\n        *0x4be748 = 0;\n        *0x4be74c = 1;\n        *0x4be750 = 2;\n        *0x4be758 = L\"SHELLEXECUTE\";\n        *0x4be764 = fcn.00461ffd;\n        *0x4be768 = 0;\n        *0x4be76c = 0;\n        *0x4be770 = 1;\n        *0x4be774 = 5;\n        *0x4be77c = L\"SHELLEXECUTEWAIT\";\n        *0x4be788 = fcn.00462015;\n        *0x4be78c = 0;\n        *0x4be790 = 0;\n        *0x4be794 = 1;\n        *0x4be798 = 5;\n        *0x4be7a0 = L\"SHUTDOWN\";\n        *0x4be7ac = fcn.00462073;\n        *0x4be7b0 = 0;\n        *0x4be7b4 = 0;\n        *0x4be7b8 = 1;\n        *0x4be7bc = 2;\n        *0x4be7c4 = 0x4b0cc8;\n        *0x4be7d0 = fcn.0041bbc4;\n        *0x4be7d4 = 0;\n        *0x4be7d8 = 0;\n        *0x4be7dc = 1;\n        *0x4be7e0 = 1;\n        *0x4be7e8 = L\"SLEEP\";\n        *0x4be7f4 = fcn.0041f55e;\n        *0x4be7f8 = 0;\n        *0x4be7fc = 0;\n        *0x4be800 = 1;\n        *0x4be804 = 1;\n        *0x4be80c = L\"SOUNDPLAY\";\n        *0x4be818 = fcn.00458ef9;\n        *0x4be81c = 0;\n        *0x4be820 = 0;\n        *0x4be824 = 1;\n        *0x4be828 = 2;\n        *0x4be830 = L\"SOUNDSETWAVEVOLUME\";\n        *0x4be83c = fcn.00458f4b;\n        *0x4be840 = 0;\n        *0x4be844 = 0;\n        *0x4be848 = 1;\n        *0x4be84c = 1;\n        *0x4be854 = L\"SPLASHIMAGEON\";\n        *0x4be860 = fcn.00458fae;\n        *0x4be864 = 0;\n        *0x4be868 = 0;\n        *0x4be86c = 2;\n        *0x4be870 = 7;\n        *0x4be878 = L\"SPLASHOFF\";\n        *0x4be884 = fcn.00458fc3;\n        *0x4be888 = 0;\n        *0x4be88c = 0;\n        *0x4be890 = 0;\n        *0x4be894 = 0;\n        *0x4be89c = L\"SPLASHTEXTON\";\n        *0x4be8a8 = fcn.00458fd8;\n        *0x4be8ac = 0;\n        *0x4be8b0 = 0;\n        *0x4be8b4 = 2;\n        *0x4be8b8 = 10;\n        *0x4be8c0 = L\"SQRT\";\n        *0x4be8cc = fcn.00456882;\n        *0x4be8d0 = 0;\n        *0x4be8d4 = 0;\n        *0x4be8d8 = 1;\n        *0x4be8dc = 1;\n        *0x4be8e4 = L\"SRANDOM\";\n        *0x4be8f0 = fcn.00456865;\n        *0x4be8f4 = 0;\n        *0x4be8f8 = 0;\n        *0x4be8fc = 1;\n        *0x4be900 = 1;\n        *0x4be908 = L\"STATUSBARGETTEXT\";\n        *0x4be914 = fcn.004672fc;\n        *0x4be918 = 0;\n        *0x4be91c = 0;\n        *0x4be920 = 1;\n        *0x4be924 = 3;\n        *0x4be92c = L\"STDERRREAD\";\n        *0x4be938 = fcn.00463fa4;\n        *0x4be93c = 0;\n        *0x4be940 = 0;\n        *0x4be944 = 1;\n        *0x4be948 = 3;\n        *0x4be950 = L\"STDINWRITE\";\n        *0x4be95c = fcn.00463fc5;\n        *0x4be960 = 0;\n        *0x4be964 = 0;\n        *0x4be968 = 1;\n        *0x4be96c = 2;\n        *0x4be974 = L\"STDIOCLOSE\";\n        *0x4be980 = fcn.0046410e;\n        *0x4be984 = 0;\n        *0x4be988 = 0;\n        *0x4be98c = 1;\n        *0x4be990 = 1;\n        *0x4be998 = L\"STDOUTREAD\";\n        *0x4be9a4 = fcn.0046416a;\n        *0x4be9a8 = 0;\n        *0x4be9ac = 0;\n        *0x4be9b0 = 1;\n        *0x4be9b4 = 3;\n        *0x4be9bc = L\"STRING\";\n        *0x4be9c8 = fcn.004568c2;\n        *0x4be9cc = 0;\n        *0x4be9d0 = 0;\n        *0x4be9d4 = 1;\n        *0x4be9d8 = 1;\n        *0x4be9e0 = L\"STRINGADDCR\";\n        *0x4be9ec = fcn.00464642;\n        *0x4be9f0 = 0;\n        *0x4be9f4 = 0;\n        *0x4be9f8 = 1;\n        *0x4be9fc = 1;\n        *0x4bea04 = L\"STRINGCOMPARE\";\n        *0x4bea10 = fcn.004646a3;\n        *0x4bea14 = 0;\n        *0x4bea18 = 0;\n        *0x4bea1c = 2;\n        *0x4bea20 = 3;\n        *0x4bea28 = L\"STRINGFORMAT\";\n        *0x4bea34 = fcn.0041d7c7;\n        *0x4bea38 = 0;\n        *0x4bea3c = 0;\n        *0x4bea40 = 1;\n        *0x4bea44 = 0x21;\n        *0x4bea4c = L\"STRINGFROMASCIIARRAY\";\n        *0x4bea58 = fcn.0046471f;\n        *0x4bea5c = 0;\n        *0x4bea60 = 0;\n        *0x4bea64 = 1;\n        *0x4bea68 = 4;\n        *0x4bea70 = L\"STRINGINSTR\";\n        *0x4bea7c = fcn.004648bb;\n        *0x4bea80 = 0;\n        *0x4bea84 = 0;\n        *0x4bea88 = 2;\n        *0x4bea8c = 6;\n        *0x4bea94 = L\"STRINGISALNUM\";\n        *0x4beaa0 = fcn.00464a51;\n        *0x4beaa4 = 0;\n        *0x4beaa8 = 0;\n        *0x4beaac = 1;\n        *0x4beab0 = 1;\n        *0x4beab8 = L\"STRINGISALPHA\";\n        *0x4beac4 = fcn.00464ab1;\n        *0x4beac8 = 0;\n        *0x4beacc = 0;\n        *0x4bead0 = 1;\n        *0x4bead4 = 1;\n        *0x4beadc = L\"STRINGISASCII\";\n        *0x4beae8 = fcn.004649f1;\n        *0x4beaec = 0;\n        *0x4beaf0 = 0;\n        *0x4beaf4 = 1;\n        *0x4beaf8 = 1;\n        *0x4beb00 = L\"STRINGISDIGIT\";\n        *0x4beb0c = fcn.00464b11;\n        *0x4beb10 = 0;\n        *0x4beb14 = 0;\n        *0x4beb18 = 1;\n        *0x4beb1c = 1;\n        *0x4beb24 = L\"STRINGISFLOAT\";\n        *0x4beb30 = fcn.00464b71;\n        *0x4beb34 = 0;\n        *0x4beb38 = 0;\n        *0x4beb3c = 1;\n        *0x4beb40 = 1;\n        *0x4beb48 = L\"STRINGISINT\";\n        *0x4beb54 = fcn.00464ba1;\n        *0x4beb58 = 0;\n        *0x4beb5c = 0;\n        *0x4beb60 = 1;\n        *0x4beb64 = 1;\n        *0x4beb6c = L\"STRINGISLOWER\";\n        *0x4beb78 = fcn.00464bd1;\n        *0x4beb7c = 0;\n        *0x4beb80 = 0;\n        *0x4beb84 = 1;\n        *0x4beb88 = 1;\n        *0x4beb90 = L\"STRINGISSPACE\";\n        *0x4beb9c = fcn.00464c31;\n        *0x4beba0 = 0;\n        *0x4beba4 = 0;\n        *0x4beba8 = 1;\n        *0x4bebac = 1;\n        *0x4bebb4 = L\"STRINGISUPPER\";\n        *0x4bebc0 = fcn.00464c91;\n        *0x4bebc4 = 0;\n        *0x4bebc8 = 0;\n        *0x4bebcc = 1;\n        *0x4bebd0 = 1;\n        *0x4bebd8 = L\"STRINGISXDIGIT\";\n        *0x4bebe4 = fcn.00464cf1;\n        *0x4bebe8 = 0;\n        *0x4bebec = 0;\n        *0x4bebf0 = 1;\n        *0x4bebf4 = 1;\n        *0x4bebfc = L\"STRINGLEFT\";\n        *0x4bec08 = fcn.00464d51;\n        *0x4bec0c = 0;\n        *0x4bec10 = 0;\n        *0x4bec14 = 2;\n        *0x4bec18 = 2;\n        *0x4bec20 = L\"STRINGLEN\";\n        *0x4bec2c = fcn.00464dc5;\n        *0x4bec30 = 0;\n        *0x4bec34 = 0;\n        *0x4bec38 = 1;\n        *0x4bec3c = 1;\n        *0x4bec44 = L\"STRINGLOWER\";\n        *0x4bec50 = fcn.00464dfa;\n        *0x4bec54 = 0;\n        *0x4bec58 = 0;\n        *0x4bec5c = 1;\n        *0x4bec60 = 1;\n        *0x4bec68 = L\"STRINGMID\";\n        *0x4bec74 = fcn.00407cca;\n        *0x4bec78 = 0;\n        *0x4bec7c = 0;\n        *0x4bec80 = 2;\n        *0x4bec84 = 3;\n        *0x4bec8c = L\"STRINGREGEXP\";\n        *0x4bec98 = fcn.00408800;\n        *0x4bec9c = 0;\n        *0x4beca0 = 0;\n        *0x4beca4 = 2;\n        *0x4beca8 = 4;\n        *0x4becb0 = L\"STRINGREGEXPREPLACE\";\n        *0x4becbc = fcn.00407fba;\n        *0x4becc0 = 0;\n        *0x4becc4 = 0;\n        *0x4becc8 = 3;\n        *0x4beccc = 4;\n        *0x4becd4 = L\"STRINGREPLACE\";\n        *0x4bece0 = fcn.00464e5b;\n        *0x4bece4 = 0;\n        *0x4bece8 = 0;\n        *0x4becec = 3;\n        *0x4becf0 = 5;\n        *0x4becf8 = L\"STRINGREVERSE\";\n        *0x4bed04 = fcn.004650cd;\n        *0x4bed08 = 0;\n        *0x4bed0c = 0;\n        *0x4bed10 = 1;\n        *0x4bed14 = 2;\n        *0x4bed1c = L\"STRINGRIGHT\";\n        *0x4bed28 = fcn.0046520a;\n        *0x4bed2c = 0;\n        *0x4bed30 = 0;\n        *0x4bed34 = 2;\n        *0x4bed38 = 2;\n        *0x4bed40 = L\"STRINGSPLIT\";\n        *0x4bed4c = fcn.004081c6;\n        *0x4bed50 = 0;\n        *0x4bed54 = 0;\n        *0x4bed58 = 2;\n        *0x4bed5c = 3;\n        *0x4bed64 = L\"STRINGSTRIPCR\";\n        *0x4bed70 = fcn.00465282;\n        *0x4bed74 = 0;\n        *0x4bed78 = 0;\n        *0x4bed7c = 1;\n        *0x4bed80 = 1;\n        *0x4bed88 = L\"STRINGSTRIPWS\";\n        *0x4bed94 = fcn.0041d6e5;\n        *0x4bed98 = 0;\n        *0x4bed9c = 0;\n        *0x4beda0 = 2;\n        *0x4beda4 = 2;\n        *0x4bedac = L\"STRINGTOASCIIARRAY\";\n        *0x4bedb8 = fcn.004652e3;\n        *0x4bedbc = 0;\n        *0x4bedc0 = 0;\n        *0x4bedc4 = 1;\n        *0x4bedc8 = 4;\n        *0x4bedd0 = L\"STRINGTOBINARY\";\n        *0x4beddc = fcn.004654ac;\n        *0x4bede0 = 0;\n        *0x4bede4 = 0;\n        *0x4bede8 = 1;\n        *0x4bedec = 2;\n        *0x4bedf4 = L\"STRINGTRIMLEFT\";\n        *0x4bee00 = fcn.00407c4b;\n        *0x4bee04 = 0;\n        *0x4bee08 = 0;\n        *0x4bee0c = 2;\n        *0x4bee10 = 2;\n        *0x4bee18 = L\"STRINGTRIMRIGHT\";\n        *0x4bee24 = fcn.004655ab;\n        *0x4bee28 = 0;\n        *0x4bee2c = 0;\n        *0x4bee30 = 2;\n        *0x4bee34 = 2;\n        *0x4bee3c = L\"STRINGUPPER\";\n        *0x4bee48 = fcn.00465622;\n        *0x4bee4c = 0;\n        *0x4bee50 = 0;\n        *0x4bee54 = 1;\n        *0x4bee58 = 1;\n        *0x4bee60 = 0x4b1190;\n        *0x4bee6c = fcn.004568e7;\n        *0x4bee70 = 0;\n        *0x4bee74 = 0;\n        *0x4bee78 = 1;\n        *0x4bee7c = 1;\n        *0x4bee84 = L\"TCPACCEPT\";\n        *0x4bee90 = fcn.0045900c;\n        *0x4bee94 = 0;\n        *0x4bee98 = 0;\n        *0x4bee9c = 1;\n        *0x4beea0 = 1;\n        *0x4beea8 = L\"TCPCLOSESOCKET\";\n        *0x4beeb4 = fcn.004590d3;\n        *0x4beeb8 = 0;\n        *0x4beebc = 0;\n        *0x4beec0 = 1;\n        *0x4beec4 = 1;\n        *0x4beecc = L\"TCPCONNECT\";\n        *0x4beed8 = fcn.00459122;\n        *0x4beedc = 0;\n        *0x4beee0 = 0;\n        *0x4beee4 = 2;\n        *0x4beee8 = 2;\n        *0x4beef0 = L\"TCPLISTEN\";\n        *0x4beefc = fcn.004591dc;\n        *0x4bef00 = 0;\n        *0x4bef04 = 0;\n        *0x4bef08 = 2;\n        *0x4bef0c = 3;\n        *0x4bef14 = L\"TCPNAMETOIP\";\n        *0x4bef20 = fcn.004592c0;\n        *0x4bef24 = 0;\n        *0x4bef28 = 0;\n        *0x4bef2c = 1;\n        *0x4bef30 = 1;\n        *0x4bef38 = L\"TCPRECV\";\n        *0x4bef44 = fcn.0045936f;\n        *0x4bef48 = 0;\n        *0x4bef4c = 0;\n        *0x4bef50 = 2;\n        *0x4bef54 = 3;\n        *0x4bef5c = L\"TCPSEND\";\n        *0x4bef68 = fcn.00459500;\n        *0x4bef6c = 0;\n        *0x4bef70 = 0;\n        *0x4bef74 = 2;\n        *0x4bef78 = 2;\n        *0x4bef80 = L\"TCPSHUTDOWN\";\n        *0x4bef8c = fcn.00459577;\n        *0x4bef90 = 0;\n        *0x4bef94 = 0;\n        *0x4bef98 = 0;\n        *0x4bef9c = 0;\n        *0x4befa4 = L\"TCPSTARTUP\";\n        *0x4befb0 = fcn.004595af;\n        *0x4befb4 = 0;\n        *0x4befb8 = 0;\n        *0x4befbc = 0;\n        *0x4befc0 = 0;\n        *0x4befc8 = L\"TIMERDIFF\";\n        *0x4befd4 = fcn.0041eb7a;\n        *0x4befd8 = 0;\n        *0x4befdc = 0;\n        *0x4befe0 = 1;\n        *0x4befe4 = 1;\n        *0x4befec = L\"TIMERINIT\";\n        *0x4beff8 = fcn.0041f149;\n        *0x4beffc = 0;\n        *0x4bf000 = 0;\n        *0x4bf004 = 0;\n        *0x4bf008 = 0;\n        *0x4bf010 = L\"TOOLTIP\";\n        *0x4bf01c = fcn.0046744c;\n        *0x4bf020 = 0;\n        *0x4bf024 = 0;\n        *0x4bf028 = 1;\n        *0x4bf02c = 6;\n        *0x4bf034 = L\"TRAYCREATEITEM\";\n        *0x4bf040 = fcn.00465836;\n        *0x4bf044 = 0;\n        *0x4bf048 = 0;\n        *0x4bf04c = 1;\n        *0x4bf050 = 4;\n        *0x4bf058 = L\"TRAYCREATEMENU\";\n        *0x4bf064 = fcn.0046584a;\n        *0x4bf068 = 0;\n        *0x4bf06c = 0;\n        *0x4bf070 = 1;\n        *0x4bf074 = 4;\n        *0x4bf07c = L\"TRAYGETMSG\";\n        *0x4bf088 = fcn.0046585e;\n        *0x4bf08c = 0;\n        *0x4bf090 = 0;\n        *0x4bf094 = 0;\n        *0x4bf098 = 1;\n        *0x4bf0a0 = L\"TRAYITEMDELETE\";\n        *0x4bf0ac = fcn.004658d9;\n        *0x4bf0b0 = 0;\n        *0x4bf0b4 = 0;\n        *0x4bf0b8 = 1;\n        *0x4bf0bc = 1;\n        *0x4bf0c4 = L\"TRAYITEMGETHANDLE\";\n        *0x4bf0d0 = fcn.00465913;\n        *0x4bf0d4 = 0;\n        *0x4bf0d8 = 0;\n        *0x4bf0dc = 1;\n        *0x4bf0e0 = 1;\n        *0x4bf0e8 = L\"TRAYITEMGETSTATE\";\n        *0x4bf0f4 = fcn.00465960;\n        *0x4bf0f8 = 0;\n        *0x4bf0fc = 0;\n        *0x4bf100 = 1;\n        *0x4bf104 = 1;\n        *0x4bf10c = L\"TRAYITEMGETTEXT\";\n        *0x4bf118 = fcn.004659aa;\n        *0x4bf11c = 0;\n        *0x4bf120 = 0;\n        *0x4bf124 = 1;\n        *0x4bf128 = 1;\n        *0x4bf130 = L\"TRAYITEMSETONEVENT\";\n        *0x4bf13c = fcn.00465a0a;\n        *0x4bf140 = 0;\n        *0x4bf144 = 0;\n        *0x4bf148 = 2;\n        *0x4bf14c = 2;\n        *0x4bf154 = L\"TRAYITEMSETSTATE\";\n        *0x4bf160 = fcn.00465b15;\n        *0x4bf164 = 0;\n        *0x4bf168 = 0;\n        *0x4bf16c = 2;\n        *0x4bf170 = 2;\n        *0x4bf178 = L\"TRAYITEMSETTEXT\";\n        *0x4bf184 = fcn.00465b5a;\n        *0x4bf188 = 0;\n        *0x4bf18c = 0;\n        *0x4bf190 = 2;\n        *0x4bf194 = 2;\n        *0x4bf19c = L\"TRAYSETCLICK\";\n        *0x4bf1a8 = fcn.00465ba4;\n        *0x4bf1ac = 0;\n        *0x4bf1b0 = 0;\n        *0x4bf1b4 = 0;\n        *0x4bf1b8 = 1;\n        *0x4bf1c0 = L\"TRAYSETICON\";\n        *0x4bf1cc = fcn.00465bd4;\n        *0x4bf1d0 = 0;\n        *0x4bf1d4 = 0;\n        *0x4bf1d8 = 0;\n        *0x4bf1dc = 2;\n        *0x4bf1e4 = L\"TRAYSETONEVENT\";\n        *0x4bf1f0 = fcn.00465c42;\n        *0x4bf1f4 = 0;\n        *0x4bf1f8 = 0;\n        *0x4bf1fc = 2;\n        *0x4bf200 = 2;\n        *0x4bf208 = L\"TRAYSETPAUSEICON\";\n        *0x4bf214 = fcn.00465d45;\n        *0x4bf218 = 0;\n        *0x4bf21c = 0;\n        *0x4bf220 = 0;\n        *0x4bf224 = 2;\n        *0x4bf22c = L\"TRAYSETSTATE\";\n        *0x4bf238 = fcn.00465db3;\n        *0x4bf23c = 0;\n        *0x4bf240 = 0;\n        *0x4bf244 = 0;\n        *0x4bf248 = 1;\n        *0x4bf250 = L\"TRAYSETTOOLTIP\";\n        *0x4bf25c = fcn.00465dd8;\n        *0x4bf260 = 0;\n        *0x4bf264 = 0;\n        *0x4bf268 = 0;\n        *0x4bf26c = 1;\n        *0x4bf274 = L\"TRAYTIP\";\n        *0x4bf280 = fcn.004595fd;\n        *0x4bf284 = 0;\n        *0x4bf288 = 0;\n        *0x4bf28c = 3;\n        *0x4bf290 = 4;\n        *0x4bf298 = L\"UBOUND\";\n        *0x4bf2a4 = fcn.00401d74;\n        *0x4bf2a8 = 0;\n        *0x4bf2ac = 0;\n        *0x4bf2b0 = 1;\n        *0x4bf2b4 = 2;\n        *0x4bf2bc = L\"UDPBIND\";\n        *0x4bf2c8 = fcn.004596e2;\n        *0x4bf2cc = 0;\n        *0x4bf2d0 = 0;\n        *0x4bf2d4 = 2;\n        *0x4bf2d8 = 2;\n        *0x4bf2e0 = L\"UDPCLOSESOCKET\";\n        *0x4bf2ec = fcn.0045986a;\n        *0x4bf2f0 = 0;\n        *0x4bf2f4 = 0;\n        *0x4bf2f8 = 1;\n        *0x4bf2fc = 1;\n        *0x4bf304 = L\"UDPOPEN\";\n        *0x4bf310 = fcn.00459923;\n        *0x4bf314 = 0;\n        *0x4bf318 = 0;\n        *0x4bf31c = 2;\n        *0x4bf320 = 3;\n        *0x4bf328 = L\"UDPRECV\";\n        *0x4bf334 = fcn.00459a66;\n        *0x4bf338 = 0;\n        *0x4bf33c = 0;\n        *0x4bf340 = 2;\n        *0x4bf344 = 3;\n        *0x4bf34c = L\"UDPSEND\";\n        *0x4bf358 = fcn.00459d3e;\n        *0x4bf35c = 0;\n        *0x4bf360 = 0;\n        *0x4bf364 = 2;\n        *0x4bf368 = 2;\n        *0x4bf370 = L\"UDPSHUTDOWN\";\n        *0x4bf37c = fcn.00459577;\n        *0x4bf380 = 0;\n        *0x4bf384 = 0;\n        *0x4bf388 = 0;\n        *0x4bf38c = 0;\n        *0x4bf394 = L\"UDPSTARTUP\";\n        *0x4bf3a0 = fcn.004595af;\n        *0x4bf3a4 = 0;\n        *0x4bf3a8 = 0;\n        *0x4bf3ac = 0;\n        *0x4bf3b0 = 0;\n        *0x4bf3b8 = L\"VARGETTYPE\";\n        *0x4bf3c4 = fcn.00459e86;\n        *0x4bf3c8 = 0;\n        *0x4bf3cc = 0;\n        *0x4bf3d0 = 1;\n        *0x4bf3d4 = 1;\n        *0x4bf3dc = L\"WINACTIVATE\";\n        *0x4bf3e8 = fcn.004677fc;\n        *0x4bf3ec = 0;\n        *0x4bf3f0 = 0;\n        *0x4bf3f4 = 1;\n        *0x4bf3f8 = 2;\n        *0x4bf400 = L\"WINACTIVE\";\n        *0x4bf40c = fcn.004678c6;\n        *0x4bf410 = 0;\n        *0x4bf414 = 0;\n        *0x4bf418 = 1;\n        *0x4bf41c = 2;\n        *0x4bf424 = L\"WINCLOSE\";\n        *0x4bf430 = fcn.0046792c;\n        *0x4bf434 = 0;\n        *0x4bf438 = 0;\n        *0x4bf43c = 1;\n        *0x4bf440 = 2;\n        *0x4bf448 = L\"WINEXISTS\";\n        *0x4bf454 = fcn.0046798d;\n        *0x4bf458 = 0;\n        *0x4bf45c = 0;\n        *0x4bf460 = 1;\n        *0x4bf464 = 2;\n        *0x4bf46c = L\"WINFLASH\";\n        *0x4bf478 = fcn.004679d6;\n        *0x4bf47c = 0;\n        *0x4bf480 = 0;\n        *0x4bf484 = 1;\n        *0x4bf488 = 4;\n        *0x4bf490 = L\"WINGETCARETPOS\";\n        *0x4bf49c = fcn.00467aa2;\n        *0x4bf4a0 = 0;\n        *0x4bf4a4 = 0;\n        *0x4bf4a8 = 0;\n        *0x4bf4ac = 0;\n        *0x4bf4b4 = L\"WINGETCLASSLIST\";\n        *0x4bf4c0 = fcn.00467b93;\n        *0x4bf4c4 = 0;\n        *0x4bf4c8 = 0;\n        *0x4bf4cc = 1;\n        *0x4bf4d0 = 2;\n        *0x4bf4d8 = L\"WINGETCLIENTSIZE\";\n        *0x4bf4e4 = fcn.00467c13;\n        *0x4bf4e8 = 0;\n        *0x4bf4ec = 0;\n        *0x4bf4f0 = 1;\n        *0x4bf4f4 = 2;\n        *0x4bf4fc = L\"WINGETHANDLE\";\n        *0x4bf508 = fcn.00467cf3;\n        *0x4bf50c = 0;\n        *0x4bf510 = 0;\n        *0x4bf514 = 1;\n        *0x4bf518 = 2;\n        *0x4bf520 = L\"WINGETPOS\";\n        *0x4bf52c = fcn.00467d58;\n        *0x4bf530 = 0;\n        *0x4bf534 = 0;\n        *0x4bf538 = 1;\n        *0x4bf53c = 2;\n        *0x4bf544 = L\"WINGETPROCESS\";\n        *0x4bf550 = fcn.00467e86;\n        *0x4bf554 = 0;\n        *0x4bf558 = 0;\n        *0x4bf55c = 1;\n        *0x4bf560 = 2;\n        *0x4bf568 = L\"WINGETSTATE\";\n        *0x4bf574 = fcn.00467f0e;\n        *0x4bf578 = 0;\n        *0x4bf57c = 0;\n        *0x4bf580 = 1;\n        *0x4bf584 = 2;\n        *0x4bf58c = L\"WINGETTEXT\";\n        *0x4bf598 = fcn.00467fb9;\n        *0x4bf59c = 0;\n        *0x4bf5a0 = 0;\n        *0x4bf5a4 = 1;\n        *0x4bf5a8 = 2;\n        *0x4bf5b0 = L\"WINGETTITLE\";\n        *0x4bf5bc = fcn.0046804e;\n        *0x4bf5c0 = 0;\n        *0x4bf5c4 = 0;\n        *0x4bf5c8 = 1;\n        *0x4bf5cc = 2;\n        *0x4bf5d4 = L\"WINKILL\";\n        *0x4bf5e0 = fcn.004680c9;\n        *0x4bf5e4 = 0;\n        *0x4bf5e8 = 0;\n        *0x4bf5ec = 1;\n        *0x4bf5f0 = 2;\n        *0x4bf5f8 = L\"WINLIST\";\n        *0x4bf604 = fcn.0046812c;\n        *0x4bf608 = 0;\n        *0x4bf60c = 0;\n        *0x4bf610 = 0;\n        *0x4bf614 = 2;\n        *0x4bf61c = L\"WINMENUSELECTITEM\";\n        *0x4bf628 = fcn.004682db;\n        *0x4bf62c = 0;\n        *0x4bf630 = 0;\n        *0x4bf634 = 3;\n        *0x4bf638 = 9;\n        *0x4bf640 = L\"WINMINIMIZEALL\";\n        *0x4bf64c = 0x468495;\n        *0x4bf650 = 0;\n        *0x4bf654 = 0;\n        *0x4bf658 = 0;\n        *0x4bf65c = 0;\n        *0x4bf664 = L\"WINMINIMIZEALLUNDO\";\n        *0x4bf670 = 0x4684c9;\n        *0x4bf674 = 0;\n        *0x4bf678 = 0;\n        *0x4bf67c = 0;\n        *0x4bf680 = 0;\n        *0x4bf688 = L\"WINMOVE\";\n        *0x4bf694 = fcn.004684fd;\n        *0x4bf698 = 0;\n        *0x4bf69c = 0;\n        *0x4bf6a0 = 4;\n        *0x4bf6a4 = 7;\n        *0x4bf6ac = L\"WINSETONTOP\";\n        *0x4bf6b8 = fcn.00468706;\n        *0x4bf6bc = 0;\n        *0x4bf6c0 = 0;\n        *0x4bf6c4 = 3;\n        *0x4bf6c8 = 3;\n        *0x4bf6d0 = L\"WINSETSTATE\";\n        *0x4bf6dc = fcn.004687a5;\n        *0x4bf6e0 = 0;\n        *0x4bf6e4 = 0;\n        *0x4bf6e8 = 3;\n        *0x4bf6ec = 3;\n        *0x4bf6f4 = L\"WINSETTITLE\";\n        *0x4bf700 = fcn.00401a33;\n        *0x4bf704 = 0;\n        *0x4bf708 = 0;\n        *0x4bf70c = 3;\n        *0x4bf710 = 3;\n        *0x4bf718 = L\"WINSETTRANS\";\n        *0x4bf724 = fcn.00468834;\n        *0x4bf728 = 0;\n        *0x4bf72c = 0;\n        *0x4bf730 = 3;\n        *0x4bf734 = 3;\n        *0x4bf73c = L\"WINWAIT\";\n        *0x4bf748 = fcn.004688e8;\n        *0x4bf74c = 0;\n        *0x4bf750 = 0;\n        *0x4bf754 = 1;\n        *0x4bf758 = 3;\n        *0x4bf760 = L\"WINWAITACTIVE\";\n        *0x4bf76c = fcn.00468940;\n        *0x4bf770 = 0;\n        *0x4bf774 = 0;\n        *0x4bf778 = 1;\n        *0x4bf77c = 3;\n        *0x4bf784 = L\"WINWAITCLOSE\";\n        *0x4bf790 = fcn.00468998;\n        *0x4bf794 = 0;\n        *0x4bf798 = 0;\n        *0x4bf79c = 1;\n        *0x4bf7a0 = 3;\n        *0x4bf7a8 = L\"WINWAITNOTACTIVE\";\n        *0x4bf7b4 = fcn.004689f0;\n        *0x4bf7b8 = 0;\n        *0x4bf7bc = 0;\n        *0x4bf7c0 = 1;\n        *0x4bf7c4 = 3;\n    }\n    if ((*0x4c235c & 2) != 0) {\n        return arg_8h * 0x24 + 0x4bbf68;\n    }\n    *0x4c235c = *0x4c235c | 2;\n    *in_ECX = 0x191;\n    *0x4c2358 = 0x191;\n    return arg_8h * 0x24 + 0x4bbf68;\n}\n",
        "token_count": 31937
    },
    "0041e74b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.0041e74b(void)\n\n{\n    if ((*0x4c10a8 & 1) == 0) {\n        *0x4c10a8 = *0x4c10a8 | 1;\n        fcn.00421b2a(0x471f4a);\n    }\n    return 0x4c10a4;\n}\n",
        "token_count": 85
    },
    "0041e8f6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nfloat10 __thiscall fcn.0041e8f6(uint32_t param_1, double param_2)\n\n{\n    uint32_t uVar1;\n    float10 fVar2;\n    float10 fVar3;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    fVar2 = param_2;\n    fVar3 = 1;\n    while( true ) {\n        if ((uVar1 & 1) != 0) {\n            fVar3 = fVar3 * fVar2;\n        }\n        uVar1 = uVar1 >> 1;\n        if (uVar1 == 0) break;\n        fVar2 = fVar2 * fVar2;\n    }\n    if (-1 < param_1) {\n        return fVar3;\n    }\n    return 1 / fVar3;\n}\n",
        "token_count": 203
    },
    "0041ebde": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nfloat10 fcn.0041ebde(void)\n\n{\n    if ((*0x4c23c0 & 1) == 0) {\n        *0x4c23c0 = *0x4c23c0 | 1;\n        fcn.0041ec02();\n    }\n    return *0x4c23c8;\n}\n",
        "token_count": 77
    },
    "0042bd14": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042bd14(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00427750(0x4b69b0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.0042886a();\n        *puVar1 = 0;\n        puVar1 = fcn.0042889e();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4c241c)) {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x4c0940) + 4 + iVar3) & 1) != 0) {\n                fcn.0042b6a0(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x4c0940) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.0042889e();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0042886a();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.0042bdf6(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0042bdcd();\n                goto code_r0x0042bdf0;\n            }\n        }\n        puVar1 = fcn.0042886a();\n        *puVar1 = 0;\n        puVar1 = fcn.0042889e();\n        *puVar1 = 9;\n        fcn.00427aa0();\n    }\ncode_r0x0042bdf0:\n    fcn.00427795();\n    return;\n}\n",
        "token_count": 611
    },
    "0042d292": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042d292(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00427750(0x4b69d0, 0x14);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.0042889e();\n        *puVar1 = 9;\n        goto code_r0x0042d372;\n    }\n    if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4c241c)) {\n        *(unaff_EBP + -0x20) = arg_8h_00 >> 5;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n        if ((*(iVar4 + 4 + *((arg_8h_00 >> 5) * 4 + 0x4c0940)) & 1) != 0) {\n            fcn.0042b6a0(arg_8h_00);\n            iVar5 = 0;\n            *(unaff_EBP + -4) = 0;\n            if ((*(iVar4 + 4 + *(*(unaff_EBP + -0x20) * 4 + 0x4c0940)) & 1) == 0) {\ncode_r0x0042d330:\n                puVar1 = fcn.0042889e();\n                *puVar1 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.0042b957(arg_8h_00);\n                iVar4 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar2);\n                if (iVar4 == 0) {\n                    iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                }\n                *(unaff_EBP + -0x1c) = iVar5;\n                if (iVar5 != 0) {\n                    piVar3 = fcn.0042886a();\n                    *piVar3 = iVar5;\n                    goto code_r0x0042d330;\n                }\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0042d357();\n            goto code_r0x0042d372;\n        }\n    }\n    puVar1 = fcn.0042889e();\n    *puVar1 = 9;\n    fcn.00427aa0();\ncode_r0x0042d372:\n    fcn.00427795();\n    return;\n}\n",
        "token_count": 679
    },
    "0042f782": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042f782(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00427750(0x4b6a30, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.0042886a();\n        *puVar1 = 0;\n        puVar1 = fcn.0042889e();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4c241c)) {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x4c0940) + 4 + iVar3) & 1) != 0) {\n                fcn.0042b6a0(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x4c0940) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.0042889e();\n                    *puVar1 = 9;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.0042f84c(arg_8h_00);\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0042f823();\n                goto code_r0x0042f846;\n            }\n        }\n        puVar1 = fcn.0042886a();\n        *puVar1 = 0;\n        puVar1 = fcn.0042889e();\n        *puVar1 = 9;\n        fcn.00427aa0();\n    }\ncode_r0x0042f846:\n    fcn.00427795();\n    return;\n}\n",
        "token_count": 556
    },
    "0042fab6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042fab6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00427750(0x4b6a50, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.0042886a();\n        *puVar1 = 0;\n        puVar1 = fcn.0042889e();\n        *puVar1 = 9;\n        goto code_r0x0042fbb8;\n    }\n    if ((arg_8h_00 < 0) || (*0x4c241c <= arg_8h_00)) {\ncode_r0x0042fb9d:\n        puVar1 = fcn.0042886a();\n        *puVar1 = 0;\n        puVar1 = fcn.0042889e();\n        *puVar1 = 9;\n    }\n    else {\n        iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n        if ((*(*((arg_8h_00 >> 5) * 4 + 0x4c0940) + 4 + iVar3) & 1) == 0) goto code_r0x0042fb9d;\n        if (*(unaff_EBP + 0x10) < 0x80000000) {\n            fcn.0042b6a0(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x4c0940) + 4 + iVar3) & 1) == 0) {\n                puVar1 = fcn.0042889e();\n                *puVar1 = 9;\n                puVar1 = fcn.0042886a();\n                *puVar1 = 0;\n                uVar2 = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.0042fbbf(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n            }\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0042fb95();\n            goto code_r0x0042fbb8;\n        }\n        puVar1 = fcn.0042886a();\n        *puVar1 = 0;\n        puVar1 = fcn.0042889e();\n        *puVar1 = 0x16;\n    }\n    fcn.00427aa0();\ncode_r0x0042fbb8:\n    fcn.00427795();\n    return;\n}\n",
        "token_count": 710
    },
    "0043038f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043038f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00427750(0x4b6a70, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.0042886a();\n        *puVar1 = 0;\n        puVar1 = fcn.0042889e();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4c241c)) {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x4c0940) + 4 + iVar3) & 1) != 0) {\n                fcn.0042b6a0(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x4c0940) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.0042889e();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0042886a();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.00430471(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00430448();\n                goto code_r0x0043046b;\n            }\n        }\n        puVar1 = fcn.0042886a();\n        *puVar1 = 0;\n        puVar1 = fcn.0042889e();\n        *puVar1 = 9;\n        fcn.00427aa0();\n    }\ncode_r0x0043046b:\n    fcn.00427795();\n    return;\n}\n",
        "token_count": 606
    },
    "004346d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004346d0(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    code *var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    pcVar6 = *0x4ba000;\n    var_4h = *0x4badc0 ^ &stack0xfffffffc;\n    var_1ch = arg_8h;\n    iVar7 = 0;\n    arg_8h_00 = 0;\n    var_20h = arg_ch;\n    pcVar1 = (**0x4ba000)();\n    var_18h = pcVar1;\n    var_14h = fcn.00428b9c();\n    if (*0x4c1048 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0x800);\n        if (((iVar2 == 0) &&\n            ((iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0x57 ||\n             (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"USER32.DLL\"),  iVar2 == 0)))) ||\n           (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x49ba50),  iVar3 == 0)) goto code_r0x004348a3;\n        *0x4c1048 = (*pcVar6)(iVar3);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x49ba5c);\n        *0x4c104c = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetLastActivePopup\");\n        *0x4c1050 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetUserObjectInformationW\");\n        *0x4c1058 = (*pcVar6)(uVar4);\n        pcVar1 = var_18h;\n        if (*0x4c1058 != NULL) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x49ba9c);\n            *0x4c1054 = (*pcVar6)(uVar4);\n            pcVar1 = var_18h;\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 == 0) {\n        if (var_14h != NULL) {\n            (**0x4ba004)(*0x4c1048);\n            goto code_r0x004348a3;\n        }\n    }\n    else {\n        if (var_1ch != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(var_1ch);\n        }\n        if (var_14h != NULL) goto code_r0x004348a3;\n    }\n    pcVar6 = *0x4ba004;\n    if ((*0x4c1054 == pcVar1) || (*0x4c1058 == pcVar1)) {\ncode_r0x00434859:\n        if ((((*0x4c104c != pcVar1) && (pcVar5 = (*pcVar6)(*0x4c104c),  pcVar5 != NULL)) &&\n            (iVar7 = (*pcVar5)(),  iVar7 != 0)) &&\n           ((*0x4c1050 != pcVar1 && (pcVar1 = (*pcVar6)(*0x4c1050),  pcVar1 != NULL)))) {\n            iVar7 = (*pcVar1)(iVar7);\n        }\n    }\n    else {\n        var_14h = (**0x4ba004)(*0x4c1054);\n        var_18h = (*pcVar6)(*0x4c1058);\n        if (((var_14h == NULL) || (var_18h == NULL)) ||\n           (((iVar2 = (*var_14h)(),  iVar2 != 0 && (iVar2 = (*var_18h)(iVar2, 1, &var_10h, 0xc, &var_24h),  iVar2 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x00434859;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x4c1048);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(iVar7, var_1ch, var_20h, arg_10h);\n    }\ncode_r0x004348a3:\n    fcn.0042b4bf(arg_8h_00);\n    return;\n}\n",
        "token_count": 1188
    },
    "00439f7c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439f7c(int32_t *arg_8h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ushort *in_ECX;\n    int32_t arg_8h_00;\n    float10 fVar5;\n    ulong uVar6;\n    uint var_2ch;\n    uint pvargDest;\n    uint var_8h;\n    \n    arg_8h_00 = 0;\n    var_8h = 0;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    *(in_ECX + 4) = 0;\n    *(in_ECX + 6) = 0;\n    iVar3 = arg_8h[3];\n    if (0xe < iVar3 - 1U) {\n        return;\n    }\n    // switch table (15 cases) at 0x43a1ac\n    switch(*((iVar3 - 1U) * 4 + 0x43a1ac)) {\n    case 0x439fb2:\n        *in_ECX = 0xb;\n        cVar1 = fcn.0041e3ee();\n        if (cVar1 == '\\0') {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffff;\n        }\n        in_ECX[4] = uVar2;\n        break;\n    case 0x439fd3:\n        *in_ECX = 3;\n        uVar4 = fcn.0040cdb4();\n        goto code_r0x0043a0dc;\n    case 0x439fe5:\n        *in_ECX = 5;\n        fVar5 = fcn.00412620();\n        *(in_ECX + 4) = fVar5;\n        break;\n    case 0x439ffa:\n        *in_ECX = 0x14;\n        uVar6 = fcn.0040d00b();\n        *(in_ECX + 4) = uVar6;\n        *(in_ECX + 6) = uVar6 >> 0x20;\n        break;\n    case 0x43a012:\n        *in_ECX = 0x13;\n        uVar4 = fcn.0044be63();\n        goto code_r0x0043a0dc;\n    case 0x43a024:\n        *in_ECX = 8;\n        fcn.004084a6();\n        uVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*arg_8h[2]);\n        goto code_r0x0043a0dc;\n    case 0x43a041:\n        *in_ECX = 0x200c;\n        uVar4 = fcn.0043a28d(arg_8h);\n        goto code_r0x0043a0dc;\n    case 0x43a054:\n        if (iVar3 == 8) {\n            arg_8h_00 = *arg_8h;\n        }\n        if (arg_8h_00 != 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopyInd)();\n        }\n        break;\n    case 0x43a070:\n        if (iVar3 == 6) {\n            arg_8h_00 = *arg_8h;\n        }\n        uVar4 = fcn.00439f7c(arg_8h_00);\n        fcn.0043a23f(uVar4);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n        break;\n    case 0x43a097:\n        cVar1 = fcn.0041d5f6(0x29);\n        if (cVar1 != '\\0') {\n            *in_ECX = 10;\n            *(in_ECX + 4) = 0x80020004;\n            return;\n        }\n        cVar1 = fcn.0041d5f6(0x2a);\n        if (cVar1 != '\\0') {\n            *in_ECX = 1;\n            return;\n        }\n    case 0x43a0ce:\n        *in_ECX = 0x2011;\n        uVar4 = fcn.0043a3d5(arg_8h);\ncode_r0x0043a0dc:\n        *(in_ECX + 4) = uVar4;\n        break;\n    case 0x43a0e4:\n        *in_ECX = 0x24;\n        *(in_ECX + 4) = 0;\n        iVar3 = fcn.0042010a(0x28);\n        if (iVar3 != 0) {\n            if (arg_8h[3] == 0xc) {\n                arg_8h_00 = *arg_8h;\n            }\n            arg_8h_00 = fcn.0043a4ad(arg_8h_00);\n        }\n        goto code_r0x0043a15a;\n    case 0x43a10b:\n        *in_ECX = 0x24;\n        *(in_ECX + 4) = 0;\n        iVar3 = fcn.0042010a(0x28);\n        if (iVar3 != 0) {\n            if (arg_8h[3] == 0xf) {\n                arg_8h_00 = *arg_8h;\n            }\n            arg_8h_00 = fcn.0043a4f8(arg_8h_00);\n        }\ncode_r0x0043a15a:\n        *(in_ECX + 6) = arg_8h_00;\n        break;\n    case 0x43a132:\n        *in_ECX = 0x24;\n        *(in_ECX + 4) = 0;\n        iVar3 = fcn.0042010a(0x28);\n        if (iVar3 != 0) {\n            uVar4 = fcn.0044afbf();\n            arg_8h_00 = fcn.0043a476(uVar4);\n        }\n        goto code_r0x0043a15a;\n    case 0x43a15f:\n        *in_ECX = 0x24;\n        *(in_ECX + 4) = 0;\n        iVar3 = fcn.0042010a(0x28);\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0044afce(&var_2ch);\n            uVar4 = fcn.0043a438(uVar4);\n        }\n        *(in_ECX + 6) = uVar4;\n        if (iVar3 != 0) {\n            fcn.00405cd3();\n        }\n    }\n    return;\n}\n",
        "token_count": 1509
    },
    "0043b379": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b379(uint32_t arg_8h)\n\n{\n    fcn.00407da8();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0043dd46": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043dea4)\n// WARNING: Removing unreachable block (ram,0x0043ded7)\n\nuint __cdecl fcn.0043dd46(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_10h;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t unaff_EBX;\n    uint32_t uVar6;\n    int32_t unaff_ESI;\n    uint32_t uVar7;\n    int32_t iStack2608;\n    int32_t iStack2604;\n    int32_t iStack2600;\n    int32_t aiStack2596 [3];\n    uchar auStack2584 [500];\n    uchar auStack2084 [8];\n    uchar auStack2076 [4];\n    uchar auStack2072 [8];\n    uchar auStack2064 [2060];\n    \n    uVar6 = 0;\n    uVar7 = 0;\n    if ((*(arg_ch + 0x88) & 8) == 0) {\n        if ((*(arg_ch + 0x88) & 0x400) != 0) {\n            iVar3 = fcn.00444c65(0x202, arg_8h);\n            if (iVar3 != 0) {\n                (*_sym.imp.USER32.dll_SendMessageTimeoutW)\n                          (arg_8h, *(arg_ch + 4), 0x101, iVar3, 2, 5000, &stack0xfffff5c8);\n                fcn.00444cc6(unaff_EBX);\n            }\n            uVar7 = 1;\n            unaff_ESI = 1;\n        }\n        if ((*(arg_ch + 0x88) & 0x10) != 0) {\n            (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2072, 0x400);\n            fcn.0040caee(auStack2064);\n            fcn.00407e36(&iStack2604);\n            fcn.00405cd3();\n            cVar1 = fcn.00442e0a();\n            uVar6 = cVar1 != '\\0';\n            uVar7 = unaff_ESI + 1;\n        }\n        uVar5 = *(arg_ch + 0x88);\n        if ((uVar5 & 0x20) == 0) {\n            if (((uVar5 & 0xc0) != 0) || ((uVar5 & 0x300) != 0)) {\n                (*_sym.imp.USER32.dll_GetWindowRect)(arg_8h, &iStack2608);\n                uVar4 = (*_sym.imp.USER32.dll_GetParent)(arg_8h, &stack0xfffff5c0);\n                (*_sym.imp.USER32.dll_ScreenToClient)(uVar4);\n                uVar5 = *(arg_ch + 0x88);\n                if ((uVar5 & 0x40) != 0) {\n                    if (*(arg_ch + 0xdc) == unaff_EBX) {\n                        uVar6 = uVar6 + 1;\n                    }\n                    uVar7 = uVar7 + 1;\n                }\n                if (uVar5 < '\\0') {\n                    if (*(arg_ch + 0xe0) == 0) {\n                        uVar6 = uVar6 + 1;\n                    }\n                    uVar7 = uVar7 + 1;\n                }\n                if ((uVar5 & 0x100) != 0) {\n                    if (*(arg_ch + 0xe4) == iStack2600 - iStack2608) {\n                        uVar6 = uVar6 + 1;\n                    }\n                    uVar7 = uVar7 + 1;\n                }\n                if ((uVar5 & 0x200) != 0) {\n                    if (*(arg_ch + 0xe8) == aiStack2596[0] - iStack2604) {\n                        uVar6 = uVar6 + 1;\n                    }\n                    uVar7 = uVar7 + 1;\n                }\n            }\n            if ((uVar5 & 1) != 0) {\n                (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2072, 0x100);\n                iVar3 = fcn.00422203(*(arg_ch + 0x8c), auStack2072);\n                if (iVar3 == 0) {\n                    uVar6 = uVar6 + 1;\n                }\n                uVar7 = uVar7 + 1;\n            }\n            if ((*(arg_ch + 0x88) & 4) != 0) {\n                (*_sym.imp.USER32.dll_GetWindowTextW)(arg_8h, auStack2072, 0x400);\n                iVar3 = fcn.00422203(*(arg_ch + 0xbc), auStack2084);\n                if (iVar3 == 0) {\n                    uVar6 = uVar6 + 1;\n                }\n                uVar7 = uVar7 + 1;\n            }\n            if ((*(arg_ch + 0x88) & 2) != 0) {\n                if ((uVar6 == uVar7) &&\n                   (*(arg_ch + 0x130) = *(arg_ch + 0x130) + 1,  *(arg_ch + 0x130) == *(arg_ch + 0xd0))) {\n                    uVar6 = uVar6 + 1;\n                }\n                uVar7 = uVar7 + 1;\n            }\n            if (uVar6 == uVar7) {\n                *(arg_ch + 0xd8) = arg_8h;\n                return 0;\n            }\n        }\n        else {\n            iVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg_8h);\n            if (*(arg_ch + 0xcc) == iVar3) {\n                *(arg_ch + 0xd8) = arg_8h;\n                return 0;\n            }\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2584, 0x100);\n        arg_10h = fcn.004218fb(aiStack2596);\n        iVar3 = arg_10h;\n        if (arg_10h != 0) {\n            while ((iVar3 = iVar3 + -1,  -1 < iVar3 && (iVar2 = fcn.004222df(*(aiStack2596 + iVar3 * 2)),  iVar2 != 0)))\n            {\n                uVar6 = uVar6 + 1;\n            }\n        }\n        if ((((arg_10h < *(arg_ch + 0x134)) && (uVar6 < *(arg_ch + 0x138))) &&\n            (arg_10h == (*(arg_ch + 0x134) - *(arg_ch + 0x138)) + uVar6)) &&\n           (iVar3 = fcn.00422315(*(arg_ch + 0x9c), aiStack2596, arg_10h),  iVar3 == 0)) {\n            *(arg_ch + 0x130) = *(arg_ch + 0x130) + 1;\n            fcn.0042234b(auStack2076, L\"%s%u\", aiStack2596);\n            iVar3 = fcn.00422203(auStack2076, *(arg_ch + 0x9c));\n            if (iVar3 == 0) {\n                *(arg_ch + 0xd8) = arg_8h;\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1705
    },
    "0043eaa7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043eaa7(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x49dc1c;\n    fcn.00403097();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0043fe7c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043fe7c(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t var_4h;\n    \n    piVar2 = arg_ch;\n    uVar6 = 0;\n    if (*arg_ch == 0) {\n        return in_EAX & 0xffffff00;\n    }\n    var_4h = 0x4c2374;\n    if ((*0x4c3ec8 & 1) == 0) {\n        *0x4c3ec8 = *0x4c3ec8 | 1;\n        fcn.0040d3d2();\n        fcn.00421b2a(0x471f83);\n    }\n    *0x4c238c = 0;\n    *0x4c2388 = 0;\n    arg_ch = 0x4c2374;\n    do {\n        iVar5 = *piVar2;\n        iVar4 = fcn.0040b933(iVar5);\n        if (iVar4 < 0) {\n            iVar5 = *(iVar5 + 0x14);\n            if (iVar5 == 0) goto code_r0x0043ff5e;\n            cVar3 = fcn.0043fd7d();\n            if (cVar3 != '\\0') {\n                *(*piVar2 + 0x14) = *(iVar5 + 0x18);\n                *(iVar5 + 0x18) = *piVar2;\n                *piVar2 = iVar5;\n                if (*(iVar5 + 0x14) == 0) goto code_r0x0043ff5e;\n            }\n            *(var_4h + 0x14) = *piVar2;\n            var_4h = *piVar2;\n            iVar5 = *(var_4h + 0x14);\n        }\n        else {\n            if (iVar4 < 1) {\n                uVar6 = 1;\ncode_r0x0043ff5e:\n                uVar1 = *(*piVar2 + 0x14);\n                *(arg_ch + 0x18) = uVar1;\n                *(var_4h + 0x14) = *(*piVar2 + 0x18);\n                *(*piVar2 + 0x14) = *0x4c238c;\n                *(*piVar2 + 0x18) = *0x4c2388;\n                return uVar1 & 0xffffff00 | uVar6;\n            }\n            iVar5 = *(iVar5 + 0x18);\n            if (iVar5 == 0) goto code_r0x0043ff5e;\n            cVar3 = fcn.0043fd7d();\n            if (cVar3 != '\\0') {\n                *(*piVar2 + 0x18) = *(iVar5 + 0x14);\n                *(iVar5 + 0x14) = *piVar2;\n                *piVar2 = iVar5;\n                if (*(iVar5 + 0x18) == 0) goto code_r0x0043ff5e;\n            }\n            *(arg_ch + 0x18) = *piVar2;\n            arg_ch = *piVar2;\n            iVar5 = *(arg_ch + 0x18);\n        }\n        *piVar2 = iVar5;\n    } while( true );\n}\n",
        "token_count": 794
    },
    "00440106": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440106(uint32_t arg_8h)\n\n{\n    fcn.0044009f();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004405db": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004405db(uint32_t arg_8h)\n\n{\n    fcn.004404c9();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004405fa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004405fa(uint32_t arg_8h)\n\n{\n    fcn.004404e2();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00442f27": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442f27(uint32_t arg_8h)\n\n{\n    fcn.00402c64();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "004442d9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004442d9(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint8_t uVar4;\n    uint32_t dwFlags;\n    uint var_4h;\n    \n    dwFlags = arg_8h & 0xff;\n    uVar2 = (*_sym.imp.USER32.dll_GetKeyState)(dwFlags);\n    pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n    uVar4 = uVar2 & 1;\n    if (arg_ch != uVar4) {\n        uVar2 = dwFlags;\n        uVar3 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(dwFlags, 0, 0, extraout_ECX);\n        fcn.00444b52(arg_8h, uVar3, uVar2);\n        fcn.0044354e();\n        uVar3 = (*pcVar1)(dwFlags, 0, 2, extraout_ECX_00);\n        fcn.00444b52(arg_8h, uVar3, dwFlags);\n        uVar2 = fcn.00443535();\n    }\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 302
    },
    "00444ba6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444ba6(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *in_ECX;\n    \n    in_ECX[1] = 0;\n    *(in_ECX + 10) = 0;\n    *in_ECX = 0xff;\n    *(in_ECX + 2) = arg_8h;\n    if (arg_8h != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_VkKeyScanW)(arg_8h);\n        uVar3 = uVar2 & 0xffff;\n        if (uVar3 != -1) {\n            *in_ECX = uVar3;\n            uVar3 = uVar3 >> 8;\n            uVar1 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(uVar2 & 0xff, 0);\n            *(in_ECX + 7) = uVar1;\n            if ((uVar3 & 1) != 0) {\n                *(in_ECX + 1) = 1;\n            }\n            if ((uVar3 & 2) != 0) {\n                *(in_ECX + 3) = 1;\n            }\n            if ((uVar3 & 4) != 0) {\n                *(in_ECX + 1) = 1;\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 325
    },
    "00444e71": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00444e71(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if ((arg_8h < 0) || (*(*(in_ECX + 4) + 8) <= arg_8h)) {\n        *(in_ECX + 8) = 1;\n        if ((*0x4c3ed4 & 1) == 0) {\n            *0x4c3ed4 = *0x4c3ed4 | 1;\n            fcn.0041d6b4(0x49dbf0);\n            fcn.00421b2a(0x471f8d);\n        }\n        iVar1 = 0x4c2390;\n    }\n    else {\n        *(in_ECX + 8) = 0;\n        iVar1 = *(*(*(in_ECX + 4) + 4) + arg_8h * 4);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00445198();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 248
    },
    "00445198": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00445198(void)\n\n{\n    char cVar1;\n    uint arg_10h;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint var_18h;\n    uint var_10h;\n    \n    if ((*0x4c3ed8 & 1) == 0) {\n        *0x4c23a0 = 0;\n        *0x4c23a8 = 0;\n        *0x4c3ed8 = *0x4c3ed8 | 1;\n        *0x4c23ac = 1;\n        fcn.00421b2a(0x471f97);\n    }\n    cVar1 = fcn.0041d5f6(0x2a);\n    if (cVar1 == '\\0') {\n        arg_10h = 0x49dbf0;\n        fcn.0040caee(0x49dbf0);\n        fcn.004499d0(0x2a, 0, arg_10h, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0);\n        fcn.0044a689(&var_18h);\n        fcn.00405cd3();\n    }\n    return 0x4c23a0;\n}\n",
        "token_count": 302
    },
    "00445216": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00445216(void)\n\n{\n    char cVar1;\n    char16_t *arg_10h;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint var_18h;\n    uint var_10h;\n    \n    if ((*0x4c3edc & 1) == 0) {\n        *0x4c23b0 = 0;\n        *0x4c23b8 = 0;\n        *0x4c3edc = *0x4c3edc | 1;\n        *0x4c23bc = 1;\n        fcn.00421b2a(0x471fa1);\n    }\n    cVar1 = fcn.0041d5f6(0x29);\n    if (cVar1 == '\\0') {\n        arg_10h = L\"THIS\";\n        fcn.0040caee(L\"THIS\");\n        fcn.004499d0(0x29, 0, arg_10h, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0);\n        fcn.0044a689(&var_18h);\n        fcn.00405cd3();\n    }\n    return 0x4c23b0;\n}\n",
        "token_count": 295
    },
    "004467dc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004467dc(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_14h;\n    \n    if ((*(in_ECX + 0x2c) & 1) == 0) {\n        if ((*(in_ECX + 0x2c) & 2) == 0) {\n            if ((*(in_ECX + 0x2c) & 4) == 0) {\n                fcn.0040a6d4();\n                fcn.0041f26b(arg_8h, &var_14h);\n            }\n            else {\n                fcn.0040a6d4();\n                fcn.004466f8(arg_8h, &var_14h);\n            }\n            uVar1 = fcn.00446881(&var_14h);\n            uVar2 = fcn.00405cd3();\n            goto code_r0x0044684a;\n        }\n        uVar2 = fcn.004468b9(arg_8h);\n    }\n    else {\n        uVar2 = fcn.00446917(arg_8h);\n    }\n    uVar1 = uVar2;\ncode_r0x0044684a:\n    return uVar2 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 305
    },
    "00449b92": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449b92(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4b3900;\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00449bb2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449bb2(uint32_t arg_8h)\n\n{\n    fcn.00449b57();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0044a0a2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint8_t __fastcall fcn.0044a0a2(uint8_t *param_1)\n\n{\n    return *param_1 >> 3 & 1;\n}\n",
        "token_count": 38
    },
    "0044a112": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044a112(uint8_t *param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (((*param_1 & 1) != 0) && (*(param_1 + 0x18) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 83
    },
    "0044d2cd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044d2cd(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0040307a();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e(in_ECX + -0x4b4);\n    }\n    return in_ECX + -0x4b4;\n}\n",
        "token_count": 92
    },
    "0044d2ae": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d2ae(uint32_t arg_8h)\n\n{\n    fcn.00402e54();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00452ccf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452ccf(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_34h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = *(*(arg_8h + 4) + 4);\n    uVar5 = 0;\n    var_4h = 0;\n    cVar1 = fcn.0040d2c0(0xe);\n    if (cVar1 == '\\0') {\n        var_4h = 2;\n        fcn.004084a6();\n        puVar2 = *(iVar3 + 8);\n        var_24h = *puVar2;\n        var_20h = puVar2[1];\n        var_1ch = puVar2[2];\n        var_18h = puVar2[3];\n        *var_18h = *var_18h + 1;\n        puVar2 = &var_24h;\n    }\n    else {\n        var_4h = 1;\n        puVar2 = fcn.0044afce(&var_34h);\n    }\n    var_14h = *puVar2;\n    var_10h = puVar2[1];\n    var_ch = puVar2[2];\n    var_8h = puVar2[3];\n    *var_8h = *var_8h + 1;\n    if ((var_4h & 2) != 0) {\n        var_4h = var_4h & 0xfffffffd;\n        fcn.00405cd3();\n    }\n    if ((var_4h & 1) != 0) {\n        fcn.00405cd3();\n    }\n    iVar3 = fcn.0041cf79(&var_14h);\n    if (iVar3 == 0) {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.0044d7e4(2, 0);\n        uVar5 = 0xffffffff;\n    }\n    else {\n        iVar3 = *(iVar3 + 0x14);\n        if (iVar3 < 5) {\n            puVar2 = &var_14h;\n            uVar4 = fcn.0040cdb4();\n            uVar4 = fcn.0046b086(uVar4, puVar2, iVar3);\n            fcn.00412570();\n            *arg_ch = uVar4;\n        }\n        else {\n            fcn.0044d7e4(1, 0);\n            fcn.00412570();\n            *arg_ch = 0;\n        }\n        arg_ch[3] = 1;\n    }\n    fcn.00405cd3();\n    return uVar5;\n}\n",
        "token_count": 704
    },
    "004533cd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004533cd(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(*(arg_8h + 4) + 4);\n    var_8h = 0;\n    cVar1 = fcn.0040d2c0(0xe);\n    if (cVar1 == '\\0') {\n        fcn.004084a6();\n        puVar2 = *(iVar3 + 8);\n        var_28h = *puVar2;\n        var_24h = puVar2[1];\n        var_20h = puVar2[2];\n        var_1ch = puVar2[3];\n        *var_1ch = *var_1ch + 1;\n        puVar2 = &var_28h;\n    }\n    else {\n        puVar2 = fcn.0044afce(&var_38h);\n    }\n    var_18h = *puVar2;\n    var_14h = puVar2[1];\n    var_10h = puVar2[2];\n    var_ch = puVar2[3];\n    *var_ch = *var_ch + 1;\n    if (cVar1 == '\\0') {\n        fcn.00405cd3();\n    }\n    else {\n        fcn.00405cd3();\n    }\n    iVar3 = fcn.0041cf79(&var_18h);\n    if (iVar3 == 0) {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.0044d7e4(1, 0);\n        uVar4 = 0xffffffff;\n    }\n    else {\n        puVar2 = &var_18h;\n        uVar4 = fcn.0040cdb4();\n        uVar4 = fcn.0046c2a6(uVar4, puVar2);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = uVar4;\n        uVar4 = 0;\n    }\n    fcn.00405cd3();\n    return uVar4;\n}\n",
        "token_count": 583
    },
    "00453ab6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453ab6(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(*(arg_8h + 4) + 4);\n    var_8h = 0;\n    cVar1 = fcn.0040d2c0(0xe);\n    if (cVar1 == '\\0') {\n        fcn.004084a6();\n        puVar2 = *(iVar3 + 8);\n        var_28h = *puVar2;\n        var_24h = puVar2[1];\n        var_20h = puVar2[2];\n        var_1ch = puVar2[3];\n        *var_1ch = *var_1ch + 1;\n        puVar2 = &var_28h;\n    }\n    else {\n        puVar2 = fcn.0044afce(&var_38h);\n    }\n    iVar3 = puVar2[1];\n    var_18h = *puVar2;\n    var_10h = puVar2[2];\n    var_ch = puVar2[3];\n    *var_ch = *var_ch + 1;\n    var_14h = iVar3;\n    if (cVar1 == '\\0') {\n        fcn.00405cd3();\n    }\n    else {\n        fcn.00405cd3();\n    }\n    if ((iVar3 == 0) || (iVar3 = fcn.0041cf79(&var_18h),  iVar3 != 0)) {\n        puVar2 = &var_18h;\n        uVar4 = fcn.0040cdb4();\n        uVar4 = fcn.0046da07(uVar4, puVar2);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = uVar4;\n        uVar4 = 0;\n    }\n    else {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.0044d7e4(1, 0);\n        uVar4 = 0xffffffff;\n    }\n    fcn.00405cd3();\n    return uVar4;\n}\n",
        "token_count": 599
    },
    "004545cf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004545cf(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = 0;\n    in_ECX[7] = 0;\n    fcn.0040caee(arg_8h);\n    fcn.0040caee(arg_ch);\n    fcn.0045469c();\n    in_ECX[0x15] = 0;\n    fcn.004546b0(&arg_18h);\n    *(in_ECX + 0x34) = arg_14h;\n    *0x4c34e8 = *0x4c34e8 + 1;\n    in_ECX[0x35] = 0;\n    in_ECX[0x36] = *0x4c34e8;\n    *(in_ECX + 0x37) = 1;\n    *(in_ECX + 0xc) = in_ECX[0xe] == 0;\n    if ((arg_10h & 1) != 0) {\n        in_ECX[0x15] = in_ECX[0x15] | 0x80000000;\n    }\n    if ((arg_10h & 2) != 0) {\n        in_ECX[0x15] = in_ECX[0x15] | 0x3000;\n    }\n    if ((arg_10h & 4) == 0) {\ncode_r0x00454676:\n        if ((arg_10h & 8) == 0) goto code_r0x00454682;\n    }\n    else if ((arg_10h & 8) == 0) {\n        in_ECX[0x15] = in_ECX[0x15] | 1;\n        goto code_r0x00454676;\n    }\n    if ((arg_10h & 4) == 0) {\n        in_ECX[0x15] = in_ECX[0x15] | 2;\n    }\ncode_r0x00454682:\n    if ((arg_10h & 0x10) != 0) {\n        *(in_ECX + 0x37) = 0;\n    }\n    fcn.00403db0();\n    return;\n}\n",
        "token_count": 587
    },
    "00454864": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454864(uint32_t arg_8h)\n\n{\n    fcn.004547be();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00454898": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00454898(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00454847();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e(in_ECX + -0x88);\n    }\n    return in_ECX + -0x88;\n}\n",
        "token_count": 85
    },
    "004583fc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004583fc(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    int32_t *piStack32;\n    uchar auStack28 [24];\n    \n    iVar5 = **(arg_8h + 4);\n    cVar3 = fcn.0040d2c0(0xe);\n    if (cVar3 == '\\0') {\n        fcn.004084a6();\n        puVar4 = *(iVar5 + 8);\n        uStack44 = *puVar4;\n        uStack40 = puVar4[1];\n        uStack36 = puVar4[2];\n        piStack32 = puVar4[3];\n        *piStack32 = *piStack32 + 1;\n        puVar4 = &uStack44;\n    }\n    else {\n        puVar4 = fcn.0044afce(auStack28);\n    }\n    uVar1 = *puVar4;\n    uVar2 = puVar4[1];\n    *puVar4[3] = *puVar4[3] + 1;\n    if (cVar3 == '\\0') {\n        fcn.00405cd3();\n    }\n    else {\n        fcn.00405cd3();\n    }\n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar1, uVar2);\n    iVar5 = fcn.0041cf79(&stack0xffffffb8);\n    if (iVar5 == 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        while (cVar3 = fcn.00402e2a(0),  cVar3 != '\\0') {\n            cVar3 = fcn.00405b2a();\n            if (cVar3 != '\\0') {\n                fcn.00407ba9(1, 0);\n                goto code_r0x0045853c;\n            }\n            fcn.00468b5a(&stack0xffffffac);\n        }\n        fcn.0044d891(&stack0xffffffb0);\n    }\ncode_r0x0045853c:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 552
    },
    "00458550": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458550(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    int32_t *piStack32;\n    uchar auStack28 [24];\n    \n    iVar5 = **(arg_8h + 4);\n    cVar3 = fcn.0040d2c0(0xe);\n    if (cVar3 == '\\0') {\n        fcn.004084a6();\n        puVar4 = *(iVar5 + 8);\n        uStack44 = *puVar4;\n        uStack40 = puVar4[1];\n        uStack36 = puVar4[2];\n        piStack32 = puVar4[3];\n        *piStack32 = *piStack32 + 1;\n        puVar4 = &uStack44;\n    }\n    else {\n        puVar4 = fcn.0044afce(auStack28);\n    }\n    uVar1 = *puVar4;\n    uVar2 = puVar4[1];\n    *puVar4[3] = *puVar4[3] + 1;\n    if (cVar3 == '\\0') {\n        fcn.00405cd3();\n    }\n    else {\n        fcn.00405cd3();\n    }\n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar1, uVar2);\n    iVar5 = fcn.0041cf79(&stack0xffffffb8);\n    if (iVar5 != 0) {\n        while (cVar3 = fcn.00402e2a(0),  cVar3 != '\\0') {\n            cVar3 = fcn.00405b2a();\n            if (cVar3 != '\\0') {\n                fcn.0044d8e9(&stack0xffffffa8);\n                goto code_r0x00458680;\n            }\n            fcn.00468b5a(&stack0xffffffac);\n        }\n    }\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\ncode_r0x00458680:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 533
    },
    "0045f761": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f761(uint32_t arg_8h)\n\n{\n    fcn.0045f717();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0045f780": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f780(uint32_t arg_8h)\n\n{\n    fcn.0045f730();\n    if ((arg_8h & 1) != 0) {\n        fcn.0042017e();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00465a0a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465a0a(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *(*(arg_8h + 4) + 4);\n    var_8h = 0;\n    cVar1 = fcn.0040d2c0(0xe);\n    if (cVar1 == '\\0') {\n        fcn.004084a6();\n        puVar2 = *(iVar3 + 8);\n        var_28h = *puVar2;\n        var_24h = puVar2[1];\n        var_20h = puVar2[2];\n        var_1ch = puVar2[3];\n        *var_1ch = *var_1ch + 1;\n        puVar2 = &var_28h;\n    }\n    else {\n        puVar2 = fcn.0044afce(&var_38h);\n    }\n    var_18h = *puVar2;\n    var_14h = puVar2[1];\n    var_10h = puVar2[2];\n    var_ch = puVar2[3];\n    *var_ch = *var_ch + 1;\n    if (cVar1 == '\\0') {\n        fcn.00405cd3();\n    }\n    else {\n        fcn.00405cd3();\n    }\n    iVar3 = fcn.0041cf79(&var_18h);\n    if (iVar3 == 0) {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.0044d7e4(1, 0);\n        uVar4 = 0xffffffff;\n    }\n    else {\n        puVar2 = &var_18h;\n        uVar4 = fcn.0040cdb4();\n        uVar4 = fcn.00445f91(uVar4, puVar2);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = uVar4;\n        uVar4 = 0;\n    }\n    fcn.00405cd3();\n    return uVar4;\n}\n",
        "token_count": 583
    },
    "00465c42": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465c42(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_34h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar3 = *(*(arg_8h + 4) + 4);\n    cVar1 = fcn.0040d2c0(0xe);\n    if (cVar1 == '\\0') {\n        fcn.004084a6();\n        puVar2 = *(iVar3 + 8);\n        var_24h = *puVar2;\n        var_20h = puVar2[1];\n        var_1ch = puVar2[2];\n        var_18h = puVar2[3];\n        *var_18h = *var_18h + 1;\n        puVar2 = &var_24h;\n    }\n    else {\n        puVar2 = fcn.0044afce(&var_34h);\n    }\n    var_14h = *puVar2;\n    var_10h = puVar2[1];\n    var_ch = puVar2[2];\n    var_8h = puVar2[3];\n    *var_8h = *var_8h + 1;\n    if (cVar1 == '\\0') {\n        fcn.00405cd3();\n    }\n    else {\n        fcn.00405cd3();\n    }\n    iVar3 = fcn.0041cf79(&var_14h);\n    if (iVar3 == 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        puVar2 = &var_14h;\n        uVar4 = fcn.0040cdb4();\n        uVar4 = fcn.00446304(uVar4, puVar2);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = uVar4;\n    }\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 560
    },
    "004702aa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004702aa(uint hDlg, uint32_t wParam, uint32_t arg_10h, int32_t lParam)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t arg_10h_00;\n    uint arg_8h;\n    \n    iVar1 = fcn.0041af7d(hDlg);\n    iVar1 = **(*0x4c1870 + iVar1 * 4);\n    uVar2 = wParam & 0xfff0;\n    if (uVar2 == 0xf000) {\n        *(iVar1 + 0x184) = 1;\n    }\n    else {\n        if (uVar2 == 0xf020) {\n            fcn.00468c6b(0xfffffffc, iVar1, 0, 0);\n            fcn.0046d784();\n        }\n        else {\n            if (uVar2 == 0xf030) {\n                arg_10h_00 = 0;\n                arg_8h = 0xfffffffa;\n            }\n            else {\n                if (uVar2 == 0xf060) {\n                    fcn.00468c6b(0xfffffffd, iVar1, 0, 0);\n                    return;\n                }\n                arg_10h_00 = uVar2 - 0xf120;\n                if (arg_10h_00 != 0) goto code_r0x00470339;\n                arg_8h = 0xfffffffb;\n            }\n            fcn.00468c6b(arg_8h, iVar1, arg_10h_00, arg_10h_00);\n        }\n        if ((*0x4c1820 & 1) != 0) {\n            return;\n        }\n    }\ncode_r0x00470339:\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x112, wParam, arg_10h & 0xffff | lParam << 0x10);\n    return;\n}\n",
        "token_count": 437
    },
    "0043d978": {
        "rules": [
            "check for trap flag exception/d5d4160e77a5474aa5157e4631e4f1b3"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043d978(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint16_t *puVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t in_ECX;\n    uint32_t uVar9;\n    int32_t in_stack_ffffffbc;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar9 = 0;\n    *(in_ECX + 0x88) = 0;\n    *(in_ECX + 0xd8) = 0;\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    iVar4 = *(arg_ch + 4);\n    if (iVar4 != 0) {\n        in_stack_ffffffbc = 0x43d9bb;\n        piVar3 = fcn.0041db6f(0);\n        if (*piVar3 == 0x5b) {\n            in_stack_ffffffbc = iVar4 + -1;\n            piVar3 = fcn.0041db6f(in_stack_ffffffbc);\n            if (*piVar3 == 0x5d) {\n                var_4h = iVar4 + -2;\n                var_8h = 1;\ncode_r0x0043d9eb:\n                in_stack_ffffffbc = arg_ch;\n                cVar2 = fcn.0043d68d(arg_ch, &fcn.0043d978::var_18h, &fcn.0043d978::var_28h, &fcn.0043d978::var_8h, \n                                     var_4h);\n                if (cVar2 == '\\0') goto code_r0x0043dc06;\n                cVar2 = fcn.0041f885();\n                if (cVar2 == '\\0') {\n                    cVar2 = fcn.0041f885();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 8;\n                        goto code_r0x0043dbdb;\n                    }\n                    cVar2 = fcn.0041f885();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x10;\n                        fcn.00405cf6();\n                        iVar4 = fcn.00405be9(&fcn.0043d978::var_28h);\n                        if (iVar4 != 0) goto code_r0x0043dcda;\n                        goto code_r0x0043d9eb;\n                    }\n                    cVar2 = fcn.0041f885();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x20;\n                        uVar5 = fcn.00422241(var_28h);\n                        *(in_ECX + 0xcc) = uVar5;\n                        goto code_r0x0043d9eb;\n                    }\n                    cVar2 = fcn.0041f885();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x400;\n                        goto code_r0x0043dbdb;\n                    }\n                    cVar2 = fcn.0041f885();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x40;\n                        uVar5 = fcn.00422241(var_28h);\n                        *(in_ECX + 0xdc) = uVar5;\n                        goto code_r0x0043d9eb;\n                    }\n                    cVar2 = fcn.0041f885();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x80;\n                        uVar5 = fcn.00422241(var_28h);\n                        *(in_ECX + 0xe0) = uVar5;\n                        goto code_r0x0043d9eb;\n                    }\n                    cVar2 = fcn.0041f885();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x100;\n                        uVar5 = fcn.00422241(var_28h);\n                        *(in_ECX + 0xe4) = uVar5;\n                        goto code_r0x0043d9eb;\n                    }\n                    cVar2 = fcn.0041f885();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x200;\n                        uVar5 = fcn.00422241(var_28h);\n                        *(in_ECX + 0xe8) = uVar5;\n                        goto code_r0x0043d9eb;\n                    }\n                    cVar2 = fcn.0041f885();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 2;\n                        uVar5 = fcn.00422241(var_28h);\n                        *(in_ECX + 0xd0) = uVar5;\n                        goto code_r0x0043d9eb;\n                    }\n                    cVar2 = fcn.0041f885();\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.0043d614();\n                        if (cVar2 != '\\0') goto code_r0x0043dcda;\n                        goto code_r0x0043d9eb;\n                    }\n                    *(in_ECX + 0x88) = *(in_ECX + 0x88) | 4;\n                }\n                else {\n                    *(in_ECX + 0x88) = *(in_ECX + 0x88) | 1;\n                }\ncode_r0x0043dbdb:\n                fcn.0040c935(&fcn.0043d978::var_28h);\n                goto code_r0x0043d9eb;\n            }\n        }\ncode_r0x0043dc06:\n        if (*(in_ECX + 0x88) == 0) {\n            *(in_ECX + 0x88) = 8;\n            fcn.0040c935(arg_ch);\n        }\n        if ((*(in_ECX + 0x88) & 8) != 0) {\n            iVar4 = *(in_ECX + 0xa0);\n            *(in_ECX + 0x134) = iVar4;\n            *(in_ECX + 0x138) = 0;\n            if (iVar4 != 0) {\n                while (iVar4 = iVar4 + -1,  -1 < iVar4) {\n                    in_stack_ffffffbc = iVar4;\n                    puVar6 = fcn.0040a4f6(iVar4);\n                    iVar7 = fcn.004222df(*puVar6);\n                    if (iVar7 == 0) break;\n                    *(in_ECX + 0x138) = *(in_ECX + 0x138) + 1;\n                }\n            }\n        }\n        pcVar1 = _sym.imp.USER32.dll_EnumChildWindows;\n        uVar9 = 0;\n        *(in_ECX + 0x130) = 0;\n        (*pcVar1)(arg_8h, fcn.0043dd46);\n        if ((*(in_ECX + 0xd8) == 0) && ((*(in_ECX + 0x88) & 8) != 0)) {\n            *(in_ECX + 0x130) = 0;\n            *(in_ECX + 0x88) = 4;\n            fcn.0040c935(in_ECX + 0x9c);\n            (*pcVar1)(arg_8h, fcn.0043dd46);\n        }\n        if (*(in_ECX + 0xd8) == 0) goto code_r0x0043dcda;\n    }\n    fcn.0043e0c5(in_stack_ffffffbc);\n    uVar9 = 1;\ncode_r0x0043dcda:\n    fcn.00405cd3();\n    uVar8 = fcn.00405cd3();\n    return uVar8 & 0xffffff00 | uVar9;\n}\n",
        "token_count": 1967
    },
    "004485c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00448608)\n\nvoid __cdecl fcn.004485c0(int32_t arg_8h)\n\n{\n    ushort uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    ushort *puVar5;\n    uint var_2ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puVar3 = L\"0123456789ABCDEF\";\n    puVar4 = &var_2ch;\n    var_4h = in_ECX;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    *in_EDX = 0x30;\n    in_EDX[1] = 0x78;\n    iVar2 = arg_8h + -1;\n    if (-1 < iVar2) {\n        puVar5 = in_EDX + iVar2 * 2 + 2;\n        do {\n            uVar1 = *(&var_2ch + (*(iVar2 + var_4h) / 0x10) * 2);\n            puVar5[1] = *(&var_2ch + (*(iVar2 + var_4h) % 0x10) * 2);\n            *puVar5 = uVar1;\n            puVar5 = puVar5 + -2;\n            iVar2 = iVar2 + -1;\n        } while (-1 < iVar2);\n    }\n    in_EDX[arg_8h * 2 + 2] = 0;\n    return;\n}\n",
        "token_count": 413
    },
    "004476db": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004476db(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint lpdwHandle;\n    uint puLen;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    int32_t lplpBuffer;\n    uint pBlock;\n    \n    iVar2 = (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeW)();\n    if (iVar2 == 0) {\n        var_ch = 0;\n    }\n    else {\n        pBlock = fcn.0042010a(iVar2);\n        var_ch = 0;\n        (*_sym.imp.VERSION.dll_GetFileVersionInfoW)();\n        iVar2 = fcn.004218fb(arg_8h);\n        iVar1 = (iVar2 + 0x1a) * 2;\n        iVar2 = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n        fcn.00421943(iVar2, 0x49dc88);\n        iVar3 = fcn.00422203(arg_8h, 0x49dc88);\n        if (iVar3 != 0) {\n            fcn.00421914(iVar2, L\"StringFileInfo\\\\\");\n            iVar3 = fcn.00422633(arg_8h, 0x49dc88);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.VERSION.dll_VerQueryValueW)(pBlock, L\"\\\\VarFileInfo\\\\Translation\", &var_10h, &puLen);\n                if (iVar3 == 0) {\n                    fcn.00421914(iVar2, L\"04090000\");\n                }\n                else {\n                    arg_8h_00 = *var_10h;\n                    fcn.0040ca32(arg_8h_00, 0);\n                    fcn.0040ca32(arg_8h_00 >> 0x10, 0);\n                }\n                fcn.00421914(iVar2, 0x49dc88);\n                fcn.00421914(iVar2, arg_8h);\n            }\n            else {\n                fcn.00421914(iVar2, arg_8h);\n            }\n        }\n        iVar3 = fcn.00421bc7(arg_8h, L\"DefaultLangCodepage\");\n        if (iVar3 == 0) {\n            fcn.00422c1d(in_EDX, iVar2 + 0x20, 8);\n            *(in_EDX + 0x10) = 0;\n            fcn.0042017e(pBlock);\n            fcn.0042017e(iVar2);\n            var_ch = 1;\n        }\n        else {\n            iVar3 = (*_sym.imp.VERSION.dll_VerQueryValueW)(pBlock, iVar2, &lplpBuffer, &puLen);\n            if (iVar3 != 0) {\n                iVar3 = fcn.00422203(arg_8h, 0x49dc88);\n                if (iVar3 == 0) {\n                    fcn.0042234b(in_EDX, L\"%u.%u.%u.%u\", *(lplpBuffer + 8) >> 0x10);\n                }\n                else {\n                    fcn.00422c1d(in_EDX, lplpBuffer, 0x200);\n                    *(in_EDX + 0x400) = 0;\n                }\n                var_ch = CONCAT31(var_ch._1_3_, 1);\n            }\n            fcn.0042017e(pBlock);\n            fcn.0042017e(iVar2);\n            var_ch = var_ch & 0xff;\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 854
    },
    "0045a0fb": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0045a0fb(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    double dVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint32_t uVar10;\n    uint var_4h;\n    \n    puVar3 = arg_8h + arg_ch;\n    puVar1 = arg_8h + arg_10h * 4;\n    uVar5 = 1;\n    uVar10 = 0;\n    puVar9 = arg_8h;\n    if (arg_8h < puVar1) {\n        do {\n            iVar4 = 0x15ae;\n            do {\n                iVar6 = uVar5 + puVar9[2];\n                iVar7 = iVar6 + puVar9[1];\n                puVar8 = puVar9 + arg_10h * arg_14h * 4;\n                uVar5 = iVar7 + *puVar9;\n                uVar10 = uVar10 + iVar6 + iVar7 + uVar5;\n                puVar9 = puVar8;\n                if (puVar3 <= puVar8) {\n                    arg_8h = arg_8h + arg_14h * 4;\n                    puVar9 = arg_8h;\n                }\n                iVar4 = iVar4 + -3;\n            } while ((iVar4 != 0) && (arg_8h < puVar1));\n            uVar5 = (uVar5 & 0xffff) + (uVar5 >> 0x10) * 0xf;\n            uVar10 = (uVar10 & 0xffff) + (uVar10 >> 0x10) * 0xf;\n        } while (arg_8h < puVar1);\n        if (0xfff0 < uVar5) {\n            uVar5 = uVar5 - 0xfff1;\n        }\n    }\n    uVar10 = (uVar10 >> 0x10) * 0xf + (uVar10 & 0xffff);\n    if (0xfff0 < uVar10) {\n        uVar10 = uVar10 - 0xfff1;\n    }\n    uVar5 = uVar10 << 0x10 | uVar5;\n    dVar2 = uVar5;\n    if (uVar5 < 0) {\n        dVar2 = dVar2 + *0x4b6568;\n    }\n    return dVar2;\n}\n",
        "token_count": 606
    },
    "00403c98": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.00403c98(int32_t *param_1)\n\n{\n    uint16_t **ppuVar1;\n    uint16_t **ppuVar2;\n    uint16_t *puVar3;\n    int64_t iVar4;\n    bool bVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (5 < param_1[3]) {\n        iVar4 = param_1[3] * 4;\n        iVar6 = fcn.0042010a(-(iVar4 >> 0x20 != 0) | iVar4);\n        iVar8 = *param_1;\n        iVar7 = 0;\n        param_1[2] = iVar6;\n        if (0 < param_1[3]) {\n            do {\n                *(param_1[2] + iVar7 * 4) = iVar8;\n                iVar8 = *(iVar8 + 0x24);\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < param_1[3]);\n        }\n        do {\n            iVar8 = 0;\n            bVar5 = false;\n            if (param_1[3] == 1 || param_1[3] + -1 < 0) {\n                return;\n            }\n            do {\n                ppuVar1 = *(param_1[2] + 4 + iVar8 * 4);\n                ppuVar2 = *(param_1[2] + iVar8 * 4);\n                puVar9 = ppuVar1[1];\n                if (ppuVar2[1] <= puVar9 && puVar9 != ppuVar2[1]) {\n                    puVar9 = ppuVar2[1];\n                }\n                puVar11 = *ppuVar2;\n                puVar10 = *ppuVar1;\n                for (puVar3 = puVar9; puVar3 != NULL; puVar3 = puVar3 + -1) {\n                    if (*puVar10 != *puVar11) {\n                        if (*puVar11 <= *puVar10) goto code_r0x00403d32;\n                        goto code_r0x00403d4e;\n                    }\n                    puVar10 = puVar10 + 1;\n                    puVar11 = puVar11 + 1;\n                }\n                if (puVar9 < ppuVar2[1]) {\ncode_r0x00403d4e:\n                    *(param_1[2] + iVar8 * 4) = ppuVar1;\n                    bVar5 = true;\n                    *(param_1[2] + 4 + iVar8 * 4) = ppuVar2;\n                }\ncode_r0x00403d32:\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < param_1[3] + -1);\n        } while (bVar5);\n    }\n    return;\n}\n",
        "token_count": 708
    },
    "0043a78a": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043a78a(int32_t *param_1, uint param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    ushort extraout_var;\n    ushort extraout_var_00;\n    ushort uVar3;\n    int32_t *extraout_ECX;\n    uint extraout_EDX;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_1;\n    if (param_1 == NULL) {\n        var_4h = param_1;\n        fcn.0043a83b();\n        param_1 = extraout_ECX;\n        param_2 = extraout_EDX;\n    }\n    var_4h = NULL;\n    iVar1 = 0x1d;\n    iVar2 = (**(*param_1 + 0x38))(param_1, param_2, &var_4h);\n    if (iVar2 < 0) {\n        fcn.0043a716();\n        uVar3 = extraout_var;\n        goto code_r0x0043a834;\n    }\n    var_8h = NULL;\n    iVar2 = (**(*var_4h + 0xc))(var_4h, &var_8h);\n    if (iVar2 < 0) {\ncode_r0x0043a81e:\n        if (var_8h != NULL) {\n            (**(*var_4h + 0x4c))(var_4h, var_8h);\n        }\n    }\n    else if (var_8h != NULL) {\n        iVar2 = *(var_8h + 0x28);\n        if ((iVar2 == 6) || (iVar2 == 0)) {\n            iVar1 = *(var_8h + 0x40);\n            if (iVar1 == 0x1d) {\n                iVar1 = fcn.0043a78a();\n            }\n            else if (iVar2 == 0) {\n                iVar1 = 3;\n            }\n            else if (iVar2 == 3) {\n                iVar1 = 0xd;\n            }\n            else if (iVar2 == 4) {\n                iVar1 = 9;\n            }\n        }\n        goto code_r0x0043a81e;\n    }\n    fcn.0043a71b();\n    uVar3 = extraout_var_00;\ncode_r0x0043a834:\n    return CONCAT22(uVar3, iVar1);\n}\n",
        "token_count": 548
    },
    "0045d21a": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045d21a(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t iVar4;\n    int32_t *arg_8h_01;\n    uint var_20h;\n    uint var_18h;\n    uint lpsz;\n    uint cchLength;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar4 = 1;\n    if (*(arg_8h + 8) == 1) {\n        arg_8h_01 = **(arg_8h + 4);\n        cVar2 = fcn.0040d2c0(6);\n        if (cVar2 != '\\0') {\n            if (arg_8h_01[3] == 6) {\n                arg_8h_01 = *arg_8h_01;\n            }\n            else {\n                arg_8h_01 = NULL;\n            }\n        }\n        var_18h = 0;\n        fcn.004113a0(arg_8h_01);\n        cVar2 = fcn.0040d2c0(5);\n        if ((cVar2 != '\\0') && (iVar3 = fcn.0040218e(0),  iVar3 == 1)) {\n            iVar3 = fcn.004114a0(&var_20h, 1, 1);\n            fcn.004084a6();\n            puVar1 = *(iVar3 + 8);\n            lpsz = *puVar1;\n            cchLength = puVar1[1];\n            var_8h = puVar1[2];\n            var_4h = puVar1[3];\n            *var_4h = *var_4h + 1;\n            fcn.0040b8a7();\n            (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n            cVar2 = fcn.0041f885();\n            if (cVar2 != '\\0') {\n                fcn.00440fb2();\n                for (; iVar3 = fcn.0040218e(1),  iVar4 < iVar3; iVar4 = iVar4 + 1) {\n                    arg_8h_00 = fcn.004114a0(&var_20h, 0, 1);\n                    fcn.0041baef(arg_8h_00);\n                }\n                *arg_ch = *(arg_8h + 8);\n                fcn.00405cd3();\n                fcn.00412570();\n                return 0;\n            }\n            fcn.00405cd3();\n        }\n        fcn.00412570();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 623
    },
    "004669c5": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004669c5(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    int32_t arg_ch_00;\n    uint *puVar5;\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    uchar auStack40 [36];\n    \n    cVar1 = fcn.00465f56(arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.0044d7e4(1, 0);\n        return 0;\n    }\n    fcn.0040d3d2();\n    iVar3 = *(*(arg_8h + 4) + 0xc);\n    fcn.004084a6();\n    puVar5 = *(iVar3 + 8);\n    uVar4 = *puVar5;\n    uStack56 = puVar5[1];\n    uStack52 = puVar5[2];\n    piStack48 = puVar5[3];\n    *piStack48 = *piStack48 + 1;\n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar4, uStack56);\n    fcn.0041d6b4(0x49dbf0);\n    while (*(arg_8h + 8) < 6) {\n        fcn.0041baef(auStack40);\n    }\n    puVar5 = *(in_ECX + 0x31c);\n    cVar1 = fcn.0041f885();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0041f885();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.0041f885();\n            if (cVar1 != '\\0') {\n                puVar5 = &uStack56;\n                uVar4 = fcn.0040cdb4();\n                uVar2 = fcn.0040cdb4();\n                fcn.0043cb61(uVar2, uVar4, puVar5);\ncode_r0x00466c6b:\n                fcn.00407bef(&uStack52);\n                goto code_r0x00466d1a;\n            }\n            cVar1 = fcn.0041f885();\n            if (cVar1 != '\\0') {\n                uVar4 = 0x1032;\n                goto code_r0x00466b10;\n            }\n            cVar1 = fcn.0041f885();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.0040cdb4();\n                cVar1 = fcn.0043cc07(uVar4);\n                if (cVar1 == '\\0') {\n                    fcn.00412570();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                }\n                else {\n                    fcn.00412570();\n                    arg_ch[3] = 1;\n                    *arg_ch = 1;\n                }\n                goto code_r0x00466d1a;\n            }\n            cVar1 = fcn.0041f885();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.0041f885();\n                if (cVar1 == '\\0') {\n                    cVar1 = fcn.0041f885();\n                    if (cVar1 != '\\0') {\n                        arg_ch_00 = fcn.0040cdb4();\n                        iVar3 = fcn.0040cdb4();\n                        if (iVar3 == 0) {\n                            iVar3 = arg_ch_00;\n                        }\n                        goto code_r0x00466bd6;\n                    }\n                    cVar1 = fcn.0041f885();\n                    if (cVar1 != '\\0') {\n                        fcn.0043ccb6();\n                        goto code_r0x00466d1a;\n                    }\n                    cVar1 = fcn.0041f885();\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.0041f885();\n                        if (cVar1 == '\\0') {\n                            cVar1 = fcn.0041f885();\n                            if (cVar1 == '\\0') {\n                                cVar1 = fcn.0041f885();\n                                if (cVar1 == '\\0') {\n                                    fcn.00412570();\n                                    *arg_ch = 0;\n                                    arg_ch[3] = 1;\n                                    fcn.0044d7e4(1, 0);\n                                }\n                                else {\n                                    iVar3 = *(*(arg_8h + 4) + 0x10);\n                                    fcn.004084a6();\n                                    fcn.0043c8cd(*(iVar3 + 8));\n                                }\n                                goto code_r0x00466d1a;\n                            }\n                            iVar3 = *(*(arg_8h + 4) + 0x10);\n                            fcn.004084a6();\n                            uVar4 = *(iVar3 + 8);\n                            uVar2 = fcn.0040cdb4();\n                            uVar4 = fcn.0043c98d(uVar4, uVar2);\n                            goto code_r0x00466cb2;\n                        }\n                        iVar3 = fcn.0040cdb4();\n                        fcn.0043ca6d(iVar3 != 0, &uStack56);\n                        goto code_r0x00466c6b;\n                    }\n                    arg_ch_00 = fcn.0040cdb4();\n                    iVar3 = fcn.0040cdb4();\n                    if (iVar3 == 0) {\n                        iVar3 = arg_ch_00;\n                    }\n                }\n                else {\n                    arg_ch_00 = -1;\n                    iVar3 = -1;\n                }\n                uVar4 = 0;\n            }\n            else {\n                arg_ch_00 = -1;\n                iVar3 = -1;\ncode_r0x00466bd6:\n                uVar4 = 1;\n            }\n            fcn.0043cc25(uVar4, arg_ch_00, iVar3);\n            goto code_r0x00466d1a;\n        }\n        uVar4 = fcn.0043cb3f();\n    }\n    else {\n        uVar4 = 0x1004;\ncode_r0x00466b10:\n        uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar5, uVar4, 0, 0);\n    }\ncode_r0x00466cb2:\n    fcn.00412570();\n    arg_ch[3] = 1;\n    *arg_ch = uVar4;\ncode_r0x00466d1a:\n    fcn.00412570();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1554
    },
    "00466d40": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466d40(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    cVar2 = fcn.00465f56(arg_8h);\n    if ((cVar2 == '\\0') || (cVar2 = fcn.0043e278(&var_14h, 1),  cVar2 == '\\0')) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        if (uVar1 < 6) {\n            var_ch = var_ch - var_14h;\n        }\n        else {\n            var_ch = fcn.0040cdb4();\n        }\n        if (uVar1 < 7) {\n            var_8h = var_8h - var_10h;\n        }\n        else {\n            var_8h = fcn.0040cdb4();\n        }\n        cVar2 = fcn.0041d5f6(0x29);\n        if (cVar2 == '\\0') {\n            var_14h = fcn.0040cdb4();\n        }\n        cVar2 = fcn.0041d5f6(0x29);\n        if (cVar2 == '\\0') {\n            var_10h = fcn.0040cdb4();\n        }\n        fcn.0043e40f(var_14h, var_10h, var_ch, var_8h);\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "00466f67": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466f67(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint unaff_EDI;\n    uint uVar6;\n    uchar auStack64 [4];\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    uchar auStack40 [36];\n    \n    cVar2 = fcn.00465f56(arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.0044d7e4(1, 0);\n        return 0;\n    }\n    fcn.0040d3d2();\n    iVar5 = *(*(arg_8h + 4) + 0xc);\n    fcn.004084a6();\n    puVar1 = *(iVar5 + 8);\n    uStack60 = *puVar1;\n    uStack56 = puVar1[1];\n    uStack52 = puVar1[2];\n    piStack48 = puVar1[3];\n    *piStack48 = *piStack48 + 1;\n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uStack60, uStack56);\n    fcn.0041d6b4(0x49dbf0);\n    while (cVar2 = unaff_EDI >> 0x18,  *(arg_8h + 8) < 6) {\n        fcn.0041baef(auStack40);\n    }\n    puVar1 = *(in_ECX + 0x31c);\n    cVar3 = fcn.0041f885();\n    if (cVar3 != '\\0') {\n        uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0x1105, 0, 0);\n        goto code_r0x0046704c;\n    }\n    cVar3 = fcn.0041f885();\n    if (cVar3 == '\\0') {\n        cVar3 = fcn.0041f885();\n        if (cVar3 == '\\0') {\n            cVar3 = fcn.0041f885();\n            if (cVar3 == '\\0') {\n                cVar3 = fcn.0041f885();\n                if (cVar3 != '\\0') {\n                    iVar5 = *(*(arg_8h + 4) + 0x10);\n                    fcn.004084a6();\n                    uVar6 = 1;\n                    goto code_r0x004670ff;\n                }\n                cVar3 = fcn.0041f885();\n                if (cVar3 == '\\0') {\n                    cVar3 = fcn.0041f885();\n                    if (cVar3 == '\\0') {\n                        cVar3 = fcn.0041f885();\n                        if (cVar3 == '\\0') {\n                            cVar3 = fcn.0041f885();\n                            if (cVar3 == '\\0') {\n                                cVar3 = fcn.0041f885();\n                                if (cVar3 == '\\0') {\n                                    cVar3 = fcn.0041f885();\n                                    if (cVar3 != '\\0') {\n                                        iVar5 = *(*(arg_8h + 4) + 0x10);\n                                        fcn.004084a6();\n                                        uVar6 = 0;\n                                        goto code_r0x00467229;\n                                    }\n                                    fcn.00412570();\n                                    *arg_ch = 0;\n                                    arg_ch[3] = 1;\n                                }\n                                else {\n                                    iVar5 = *(*(arg_8h + 4) + 0x10);\n                                    fcn.004084a6();\n                                    cVar2 = fcn.0043d5ce(*(iVar5 + 8));\n                                }\n                                goto code_r0x0046724d;\n                            }\n                            iVar5 = *(*(arg_8h + 4) + 0x10);\n                            fcn.004084a6();\n                            uVar4 = fcn.0043d5a0(*(iVar5 + 8));\n                            goto code_r0x0046704c;\n                        }\n                        iVar5 = *(*(arg_8h + 4) + 0x10);\n                        fcn.004084a6();\n                        fcn.0043d4a7(*(iVar5 + 8), &uStack56);\n                    }\n                    else {\n                        uVar4 = fcn.0041e3ee();\n                        fcn.0043d451(&uStack56, uVar4 & 0xff);\n                    }\n                    fcn.00407bef(auStack64);\n                    goto code_r0x0046724d;\n                }\n                iVar5 = *(*(arg_8h + 4) + 0x10);\n                fcn.004084a6();\n                uVar4 = fcn.0043d1c5(*(iVar5 + 8));\n            }\n            else {\n                iVar5 = *(*(arg_8h + 4) + 0x10);\n                fcn.004084a6();\n                uVar4 = fcn.0043cf2a(*(iVar5 + 8));\n                uVar4 = uVar4 & 0xff;\n            }\ncode_r0x0046704c:\n            fcn.00412570();\n            arg_ch[3] = 1;\n            *arg_ch = uVar4;\n            goto code_r0x00467265;\n        }\n        iVar5 = *(*(arg_8h + 4) + 0x10);\n        fcn.004084a6();\n        uVar6 = 0;\ncode_r0x004670ff:\n        cVar2 = fcn.0043cf40(*(iVar5 + 8), uVar6);\n    }\n    else {\n        iVar5 = *(*(arg_8h + 4) + 0x10);\n        fcn.004084a6();\n        uVar6 = 1;\ncode_r0x00467229:\n        cVar2 = fcn.0043ceb5(*(iVar5 + 8), uVar6);\n    }\ncode_r0x0046724d:\n    if (cVar2 == '\\0') {\n        fcn.0044d7e4(1, 0);\n    }\ncode_r0x00467265:\n    fcn.00412570();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1495
    },
    "00403dcb": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00403dcb(uint arg_8h, uint32_t **arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t **ppuVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint32_t uVar6;\n    uint32_t **ppuVar7;\n    uint32_t **ppuVar8;\n    uint var_68h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    uVar6 = 0;\n    iVar2 = fcn.00403f9b(arg_8h, 1);\n    if (iVar2 == 0) {\ncode_r0x004739f9:\n        iVar2 = fcn.0044cc82(L\">>>AUTOIT SCRIPT<<<\", &arg_10h, &arg_ch);\n        if (iVar2 == 0) {\n            iVar2 = *arg_10h;\n            *(in_ECX + 0x10) = iVar2;\n            arg_ch = iVar2 + 1;\n            ppuVar7 = 0x4;\n            var_18h._0_2_ = 0xffff;\n            var_30h = 0x49dd90;\n            var_2ch = 0;\n            var_28h = 0;\n            var_24h = 0;\n            uVar3 = -(ZEXT48(arg_ch) * 0x10 >> 0x20 != 0) | ZEXT48(arg_ch) * 0x10;\n            ppuVar4 = fcn.0042010a(-(0xfffffffb < uVar3) | uVar3 + 4);\n            ppuVar8 = arg_ch;\n            if (ppuVar4 == NULL) {\n                ppuVar8 = NULL;\n            }\n            else {\n                *ppuVar4 = arg_ch;\n                arg_ch = ppuVar4 + 1;\n                fcn.0041ac65(ppuVar8, 0x41ac85);\n                ppuVar8 = arg_ch;\n            }\n            *(in_ECX + 0x44) = ppuVar8;\n            var_18h._2_2_ = 0xffff;\n            var_ch = 1;\n            if (0 < *(in_ECX + 0x10)) {\n                var_8h = 0x10;\n                do {\n                    fcn.00443460();\ncode_r0x00473ac2:\n                    do {\n                        ppuVar8 = ppuVar7 + 1;\n                        var_14h = *(arg_10h + ppuVar7);\n                        arg_ch = ppuVar8;\n                        fcn.0040b7ff(var_14h);\n                        cVar1 = fcn.0044a5be();\n                        if (cVar1 == '\\0') {\n                            cVar1 = fcn.0044a5a8();\n                            if (cVar1 == '\\0') {\n                                cVar1 = fcn.0044a592();\n                                if (cVar1 == '\\0') {\n                                    cVar1 = fcn.0041df5b();\n                                    ppuVar7 = ppuVar8;\n                                    if (cVar1 != '\\0') {\n                                        uVar5 = fcn.004430ac(arg_10h, &arg_ch);\n                                        var_10h = uVar5;\n                                        if (var_14h == 0x31) {\n                                            fcn.0040caee(uVar5);\n                                            uVar3 = (**(**(in_ECX + 4) + 4))(var_40h);\n                                            fcn.00405cd3();\n                                            uVar5 = 1;\ncode_r0x00473ba6:\n                                            fcn.0040b7ff(uVar5);\n                                            _var_20h = _var_20h & 0xffffffff00000000 | uVar3;\n                                            uVar5 = var_10h;\n                                        }\n                                        else {\n                                            if (var_14h == 0x30) {\n                                                fcn.0040caee(uVar5);\n                                                uVar3 = fcn.004434b4(&var_50h);\n                                                fcn.00405cd3();\n                                                uVar5 = 0;\n                                                goto code_r0x00473ba6;\n                                            }\n                                            if (var_14h == 0x37) {\n                                                iVar2 = fcn.00442fcd(uVar5);\n                                                if (iVar2 == 0) {\n                                                    fcn.004432b0(arg_8h, var_ch, L\"Bad directive syntax error\", 0x49dbf0\n                                                                );\n                                                    fcn.0042017e(uVar5);\n                                                    fcn.004228ca(arg_10h);\n                                                    fcn.00403e39();\n                                                    goto code_r0x00473c37;\n                                                }\n                                                fcn.0042017e(uVar5);\n                                                ppuVar7 = arg_ch;\n                                                goto code_r0x00473ac2;\n                                            }\n                                            fcn.0044a525(uVar5);\n                                        }\n                                        fcn.0042017e(uVar5);\n                                        ppuVar7 = arg_ch;\n                                    }\n                                }\n                                else {\n                                    _var_20h = *(arg_10h + ppuVar8);\n                                    ppuVar7 = ppuVar7 + 9;\n                                }\n                            }\n                            else {\n                                _var_20h = *(arg_10h + ppuVar8);\n                                ppuVar7 = ppuVar7 + 9;\n                            }\n                        }\n                        else {\n                            _var_20h = _var_20h & 0xffffffff00000000 | *(arg_10h + ppuVar8);\n                            ppuVar7 = ppuVar7 + 5;\n                        }\n                        fcn.0040b6d0(&var_20h);\n                    } while (var_14h != 0x7f);\n                    fcn.0040a870(&var_30h);\n                    var_8h = var_8h + 0x10;\n                    var_ch = var_ch + 1;\n                } while (var_ch <= *(in_ECX + 0x10));\n            }\n            fcn.004228ca(arg_10h);\n            fcn.00403e39();\n            uVar6 = 1;\ncode_r0x00473c37:\n            fcn.00405800();\n            uVar3 = fcn.0044a46f();\n            goto code_r0x00403e30;\n        }\n        fcn.00403e39();\n        uVar5 = extraout_ECX_00;\n    }\n    else {\n        iVar2 = fcn.00403f9b(arg_8h, 2);\n        if (iVar2 == 0) goto code_r0x004739f9;\n        uVar5 = extraout_ECX;\n        if (*arg_10h != 4) {\n            *arg_10h = 2;\n            uVar3 = fcn.0040bdf0(arg_8h, arg_ch, arg_8h, 0x49dbf0, 0);\n            uVar6 = uVar3 & 0xff;\n            goto code_r0x00403e30;\n        }\n    }\n    uVar3 = fcn.0044757b(uVar5, *(in_ECX + 2));\ncode_r0x00403e30:\n    return uVar3 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 1796
    },
    "00405010": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405010(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = 0;\n    bVar2 = true;\n    if (arg_ch != 0) {\n        do {\n            uVar1 = *(uVar3 + arg_8h);\n            if (uVar1 < 0x80) {\n                uVar3 = uVar3 + 1;\n            }\n            else {\n                if ((uVar1 < 0xc2) || (0xdf < uVar1)) {\n                    if ((uVar1 < 0xe0) || (0xef < uVar1)) {\n                        if ((uVar1 < 0xf0) || (0xf4 < uVar1)) {\ncode_r0x00405062:\n                            return uVar3 & 0xffffff00;\n                        }\n                        iVar4 = 3;\n                    }\n                    else {\n                        iVar4 = 2;\n                    }\n                }\n                else {\n                    iVar4 = 1;\n                }\n                uVar3 = uVar3 + 1;\n                bVar2 = false;\n                do {\n                    if (arg_ch <= uVar3) {\n                        return 1;\n                    }\n                    if ((*(uVar3 + arg_8h) < 0x80) || (0xbf < *(uVar3 + arg_8h))) goto code_r0x00405062;\n                    uVar3 = uVar3 + 1;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n        } while (uVar3 < arg_ch);\n        if (!bVar2) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 404
    },
    "00414320": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414320(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    uint in_stack_ffffffb8;\n    int32_t in_stack_ffffffbc;\n    uchar uStack33;\n    uint uStack32;\n    int32_t iStack28;\n    uint auStack24 [2];\n    uint uStack16;\n    uint uStack12;\n    \n    auStack24[0] = 0;\n    uStack16 = 0;\n    uStack12 = 1;\n    iStack28 = **(arg_8h + 4);\n    iVar1 = *(iStack28 + 8);\n    iVar3 = -1;\n    uStack32 = 0;\n    if (iVar1 == 0) {\n        fcn.0040e7e0(arg_8h, arg_ch);\ncode_r0x00414390:\n        if ((iVar3 < 0) || (iVar3 = *(*(arg_8h + 4) + unaff_EDI * 4),  *(iVar3 + 8) == 0x7f)) goto code_r0x00414373;\n        in_stack_ffffffbc = *(iVar3 + 10);\n        in_stack_ffffffb8 = 0x72;\n    }\n    else {\n        if (iVar1 == 1) {\n            iVar3 = fcn.004144e0(0, arg_8h, &uStack32, auStack24);\n            goto code_r0x00414390;\n        }\n        if (iVar1 == 0x33) {\n            fcn.0040ea00(arg_8h);\n            goto code_r0x00414373;\n        }\n        if (iVar1 == 0x34) {\n            iVar3 = fcn.00413680(0, arg_8h, &uStack32, auStack24, &uStack33);\n            goto code_r0x00414390;\n        }\n        if (iVar1 != 0x35) {\n            if (iVar1 == 0x7f) goto code_r0x00414373;\n            iVar3 = fcn.0040fa40(arg_8h, &uStack32, auStack24, 0xffffffff);\n            goto code_r0x00414390;\n        }\n        fcn.0045ea97();\n        cVar2 = fcn.0045cff8();\n        if (cVar2 != '\\0') {\n            iStack28 = fcn.0045ea97();\n            iVar3 = fcn.0045e2fb(arg_8h, &uStack32, &iStack28);\n            goto code_r0x00414390;\n        }\n    }\n    fcn.0044d520(in_stack_ffffffb8, in_stack_ffffffbc);\ncode_r0x00414373:\n    fcn.00412570();\n    return;\n}\n",
        "token_count": 651
    },
    "00455fbf": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00455fbf(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint var_10h;\n    \n    uVar1 = fcn.0040cdb4();\n    if (uVar1 == 0) {\n        fcn.0040d3d2();\n        fcn.00448b50(0);\n        fcn.00407bef(&var_10h);\n        fcn.00405cd3();\n    }\n    else if (uVar1 < 0x100) {\n        if (uVar1 < 0x80) {\n            arg_8h = uVar1 & 0xffff;\n            fcn.0040ca8e(&arg_8h);\n        }\n        else {\n            arg_8h = arg_8h & 0xffff0000 | uVar1 & 0xff;\n            arg_8h_00 = fcn.00448553();\n            fcn.0040ca8e(arg_8h_00);\n            fcn.0042017e(arg_8h_00);\n        }\n    }\n    else {\n        fcn.0040ca8e(0x49dbf0);\n        fcn.0044d7e4(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 299
    },
    "0045ebe4": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ebe4(int32_t arg_8h, int32_t *arg_ch, uchar *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    do {\n        while( true ) {\n            iVar2 = *arg_ch;\n            iVar1 = *(*(*(arg_8h + 4) + iVar2 * 4) + 8);\n            if (iVar1 != 0x35) break;\n            *arg_ch = iVar2 + 1;\n            if ((iVar3 == 0) && (arg_10h != NULL)) {\n                *arg_10h = 0;\n            }\n        }\n        if (iVar1 == 0x47) {\n            iVar3 = iVar3 + 1;\n        }\n        else if (iVar1 == 0x48) {\n            if ((iVar3 == 0) && (*(*(*(arg_8h + 4) + 4 + iVar2 * 4) + 8) != 0x35)) {\n                return;\n            }\n            iVar3 = iVar3 + -1;\n        }\n        else if (iVar1 == 0x7f) {\n            return;\n        }\n        *arg_ch = iVar2 + 1;\n    } while ((0 < iVar3) || (*(*(*(arg_8h + 4) + (iVar2 + 1) * 4) + 8) == 0x35));\n    if (iVar1 != 0x48) {\n        *arg_ch = iVar2;\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "0040a870": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a870(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    ulong *puVar7;\n    uint *puVar8;\n    int32_t in_ECX;\n    uint32_t uVar9;\n    uint var_4h;\n    \n    if (in_ECX != arg_8h) {\n        uVar9 = 0;\n        if (*(in_ECX + 8) != 0) {\n            do {\n                iVar2 = *(*(in_ECX + 4) + uVar9 * 4);\n                if (iVar2 != 0) {\n                    fcn.00442f46(iVar2);\n                }\n                uVar9 = uVar9 + 1;\n                *(*(in_ECX + 4) + -4 + uVar9 * 4) = 0;\n            } while (uVar9 < *(in_ECX + 8));\n        }\n        *(in_ECX + 8) = 0;\n        uVar9 = *(arg_8h + 8);\n        if (*(in_ECX + 0xc) < uVar9) {\n            if (uVar9 < 8) {\n                uVar9 = 8;\n            }\n            *(in_ECX + 0xc) = uVar9;\n            uVar6 = fcn.0042010a(-(uVar9 * 4 >> 0x20 != 0) | uVar9 * 4);\n            if (*(in_ECX + 4) != 0) {\n                fcn.0042017e(*(in_ECX + 4));\n            }\n            *(in_ECX + 4) = uVar6;\n        }\n        iVar2 = *(arg_8h + 8);\n        uVar9 = 0;\n        *(in_ECX + 8) = iVar2;\n        if (iVar2 != 0) {\n            do {\n                puVar7 = fcn.0042010a(0xc);\n                if (puVar7 == NULL) {\n                    puVar7 = NULL;\n                }\n                else {\n                    puVar3 = *(*(arg_8h + 4) + uVar9 * 4);\n                    *(puVar7 + 1) = *(puVar3 + 1);\n                    iVar1 = *(puVar7 + 1);\n                    *(puVar7 + 10) = *(puVar3 + 10);\n                    if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n                        puVar8 = fcn.0042010a(0x10);\n                        if (puVar8 == NULL) {\n                            *puVar7 = 0;\n                        }\n                        else {\n                            puVar4 = *puVar3;\n                            *puVar8 = *puVar4;\n                            puVar8[1] = puVar4[1];\n                            puVar8[2] = puVar4[2];\n                            piVar5 = puVar4[3];\n                            puVar8[3] = piVar5;\n                            *piVar5 = *piVar5 + 1;\n                            *puVar7 = puVar8;\n                        }\n                    }\n                    else if (iVar1 == 0x10) {\n                        *puVar7 = *puVar3;\n                        *(puVar7 + 4) = *(puVar3 + 4);\n                    }\n                    else if (iVar1 == 0x20) {\n                        *puVar7 = *puVar3;\n                    }\n                    else {\n                        *puVar7 = *puVar3;\n                    }\n                }\n                uVar9 = uVar9 + 1;\n                *(*(in_ECX + 4) + -4 + uVar9 * 4) = puVar7;\n            } while (uVar9 < *(in_ECX + 8));\n        }\n    }\n    return;\n}\n",
        "token_count": 874
    },
    "0040b6d0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b6d0(ulong *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    ulong *puVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar7 = *(in_ECX + 0xc) * 2;\n        if (uVar7 < 8) {\n            uVar7 = 8;\n        }\n        *(in_ECX + 0xc) = uVar7;\n        uVar6 = fcn.0042010a(-(uVar7 * 4 >> 0x20 != 0) | uVar7 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.0041faa0(uVar6, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0042017e(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar6;\n    }\n    puVar4 = fcn.0042010a(0xc);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        *(puVar4 + 1) = *(arg_8h + 1);\n        iVar1 = *(puVar4 + 1);\n        *(puVar4 + 10) = *(arg_8h + 10);\n        if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n            puVar5 = fcn.0042010a(0x10);\n            if (puVar5 == NULL) {\n                puVar5 = NULL;\n            }\n            else {\n                puVar2 = *arg_8h;\n                *puVar5 = *puVar2;\n                puVar5[1] = puVar2[1];\n                puVar5[2] = puVar2[2];\n                piVar3 = puVar2[3];\n                puVar5[3] = piVar3;\n                *piVar3 = *piVar3 + 1;\n            }\n            *puVar4 = puVar5;\n            *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar4;\n            *(in_ECX + 8) = *(in_ECX + 8) + 1;\n            return;\n        }\n        if (iVar1 == 0x10) {\n            *puVar4 = *arg_8h;\n            *(puVar4 + 4) = *(arg_8h + 4);\n        }\n        else {\n            if (iVar1 == 0x20) {\n                *puVar4 = *arg_8h;\n                *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar4;\n                *(in_ECX + 8) = *(in_ECX + 8) + 1;\n                return;\n            }\n            *puVar4 = *arg_8h;\n        }\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 789
    },
    "0040b99b": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b99b(int32_t arg_8h, int32_t *arg_ch, double *arg_10h, uint *arg_14h, uint arg_18h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint in_ECX;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    int32_t iVar8;\n    float10 extraout_ST0;\n    int64_t iVar9;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040c4cd();\n    iVar8 = *arg_ch;\n    if ((*(arg_8h + iVar8 * 2) == 0x30) && ((iVar2 = *(arg_8h + 2 + iVar8 * 2),  iVar2 == 0x78 || (iVar2 == 0x58)))) {\n        *arg_ch = iVar8 + 2;\n        iVar8 = 0;\n        while( true ) {\n            uVar1 = *(arg_8h + *arg_ch * 2);\n            uVar6 = uVar1;\n            if ((((uVar1 < 0x30) || (0x39 < uVar1)) && ((uVar6 < 0x61 || (0x66 < uVar6)))) &&\n               ((uVar1 < 0x41 || (0x46 < uVar6)))) break;\n            *arg_ch = *arg_ch + 1;\n            fcn.0040bd2f(uVar6);\n            iVar8 = iVar8 + 1;\n        }\n        cVar5 = fcn.0041bcea(0x10);\n        if (cVar5 == '\\0') {\n            return 0;\n        }\n        if (iVar8 < 9) {\n            arg_8h_00 = 5;\n        }\n        else {\n            arg_8h_00 = 0x10;\n        }\n        fcn.0040b7ff(arg_8h_00);\n        *arg_10h = in_ECX;\n        *(arg_10h + 4) = 0x30;\n        return 1;\n    }\n    bVar4 = false;\n    uVar7 = 0x17;\n    bVar3 = true;\n    do {\n        uVar1 = *(arg_8h + *arg_ch * 2);\n        if (uVar1 == 0x2e) {\n            if (bVar3) {\n                uVar7 = 0x25;\ncode_r0x0040bb7c:\n                bVar3 = false;\n            }\ncode_r0x0040bb7d:\n            bVar4 = true;\n        }\n        else if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n            if ((uVar7 & 8) != 0) {\n                uVar7 = 0x31;\n                bVar3 = false;\n            }\n        }\n        else {\n            if (0x2f < uVar1) {\n                if (uVar1 < 0x3a) {\n                    uVar7 = uVar7 & 0xef | 0x20;\n                    goto code_r0x0040ba09;\n                }\n                if ((uVar1 == 0x45) || (uVar1 == 0x65)) {\n                    if ((uVar7 & 0x14) == 4) {\n                        uVar7 = 0x39;\n                        goto code_r0x0040bb7c;\n                    }\n                    goto code_r0x0040bb7d;\n                }\n            }\n            if ((((0x40 < (uVar1 & 0xffdf)) && ((uVar1 & 0xffdf) < 0x5b)) || (uVar1 == 0x5f)) && ((uVar7 & 0xfd) != 0))\n            {\n                uVar7 = uVar7 | 0x10;\n                *arg_ch = iVar8;\n            }\n        }\ncode_r0x0040ba09:\n        if ((uVar7 & 0x20) == 0) {\n            if ((uVar7 & 0x10) != 0) {\n                return 0;\n            }\n            if (bVar4) {\n                cVar5 = fcn.0041f885();\n                if (cVar5 != '\\0') {\n                    *arg_ch = iVar8;\n                    return 0;\n                }\n                fcn.0040b7ff(0x20);\n                fcn.00422d13(*arg_14h);\n                *arg_10h = extraout_ST0;\n            }\n            else {\n                iVar9 = fcn.0042224a(*arg_14h);\n                uVar6 = 0x7fffffff;\n                if (arg_18h == 0x4a) {\n                    uVar6 = 0x80000000;\n                }\n                if ((iVar9 < 0x100000000) && ((iVar9 < 0 || (iVar9 <= uVar6)))) {\n                    if ((*(arg_10h + 1) < 0x40) && (0x2f < *(arg_10h + 1))) {\n                        if (*arg_10h != 0) {\n                            fcn.00401926(*arg_10h);\n                        }\n                        *arg_10h = 0;\n                    }\n                    *arg_10h = 0;\n                    *(arg_10h + 1) = 5;\n                }\n                else {\n                    fcn.0040b7ff(0x10);\n                }\n                *arg_10h = iVar9;\n                *(arg_10h + 4) = iVar9 >> 0x20;\n            }\n            return 1;\n        }\n        uVar1 = *(arg_8h + *arg_ch * 2);\n        *arg_ch = *arg_ch + 1;\n        fcn.0040bd2f(uVar1);\n        uVar7 = uVar7 & 0xdf;\n    } while( true );\n}\n",
        "token_count": 1364
    },
    "0041df5b": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041df5b(int32_t param_1)\n\n{\n    int16_t iVar1;\n    unkuint3 Var2;\n    \n    iVar1 = *(param_1 + 8);\n    Var2 = iVar1 >> 8;\n    if ((0x2f < iVar1) && (iVar1 < 0x40)) {\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 103
    },
    "00405c5b": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405c5b(uint noname_0, uint32_t *arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t iStack12;\n    \n    if ((in_ECX == NULL) || (arg_ch == NULL)) {\n        iStack12 = -2;\n    }\n    else if (*in_ECX == 0x50435245) {\n        if ((*(in_ECX + 3) & 2) == 0) {\n            iStack12 = -0x1c;\n        }\n        else {\n            *arg_ch = *(in_ECX + 0x1e);\n            iStack12 = 0;\n        }\n    }\n    else {\n        iStack12 = ((*in_ECX != 0x45524350) - 1 & 0xffffffe7) - 4;\n    }\n    return iStack12;\n}\n",
        "token_count": 196
    },
    "0041a63d": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a63d(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *param_1;\n    if (0 < uVar1) {\n        *param_1 = uVar1 >> 0x10 & 0xffU | (uVar1 & 0xff) << 0x10 | uVar1 & 0xff00;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0044bed4": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nuint32_t fcn.0044bed4(void)\n\n{\n    uint32_t uVar1;\n    \n    *0x4bf7e0 = *0x4bf7e0 + -1;\n    if (*0x4bf7e0 == 0) {\n        fcn.0044bfb8();\n    }\n    uVar1 = **0x4c34f0 ^ **0x4c34f0 >> 0xb;\n    uVar1 = uVar1 ^ (uVar1 & 0xff3a58ad) << 7;\n    uVar1 = uVar1 ^ (uVar1 & 0xffffdf8c) << 0xf;\n    *0x4c34f0 = *0x4c34f0 + 1;\n    return (uVar1 >> 0x12 ^ uVar1) >> 1;\n}\n",
        "token_count": 194
    },
    "0044bf19": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nfloat10 fcn.0044bf19(void)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    *0x4bf7e0 = *0x4bf7e0 + -1;\n    if (*0x4bf7e0 == 0) {\n        fcn.0044bfb8();\n    }\n    uVar2 = **0x4c34f0 ^ **0x4c34f0 >> 0xb;\n    uVar2 = uVar2 ^ (uVar2 & 0xff3a58ad) << 7;\n    uVar2 = uVar2 ^ (uVar2 & 0xffffdf8c) << 0xf;\n    uVar2 = uVar2 >> 0x12 ^ uVar2;\n    dVar1 = uVar2;\n    if (uVar2 < 0) {\n        dVar1 = dVar1 + *0x4b6568;\n    }\n    *0x4c34f0 = *0x4c34f0 + 1;\n    return dVar1 * *0x4b6538;\n}\n",
        "token_count": 257
    },
    "004713fa": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004713fa(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    uint32_t uVar2;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar3 = *in_ECX;\n    if (uVar3 <= in_EDX) {\n        do {\n            uVar2 = *((*(uVar3 / 0x80 + 0x4ac470) * 0x80 + uVar3 % 0x80) * 2 + 0x49e5d0);\n            uVar1 = *(uVar2 * 8 + 0x4ab0d3);\n            if (uVar1 != 0) {\n                *arg_8h = uVar3;\n                *in_ECX = uVar3 + 1;\n                return uVar1;\n            }\n            uVar1 = *(uVar2 * 8 + 0x4ab0d4) + uVar3;\n        } while ((uVar1 == uVar3) && (uVar3 = uVar3 + 1,  uVar3 <= in_EDX));\n        if (uVar3 <= in_EDX) {\n            *arg_8h = uVar1;\n            do {\n                uVar2 = uVar1;\n                uVar1 = uVar2 + 1;\n                uVar3 = uVar3 + 1;\n                if (in_EDX < uVar3) break;\n            } while (*(*((*(uVar3 / 0x80 + 0x4ac470) * 0x80 + uVar3 % 0x80) * 2 + 0x49e5d0) * 8 + 0x4ab0d4) + uVar3 ==\n                     uVar1);\n            *arg_ch = uVar2;\n            *in_ECX = uVar3;\n            return 0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 461
    },
    "0041eb05": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041eb05(uint noname_0, uint arg_ch)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    uint32_t uVar4;\n    int32_t lpData;\n    uint hKey;\n    uint32_t lpcbData;\n    \n    fcn.0040c4cd();\n    uVar4 = 0;\n    uVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000001, L\"Software\\\\AutoIt v3\\\\AutoIt\", 0, 1, &hKey);\n    if (uVar2 == 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, 0x49dc44, 0, 0, 0, &lpcbData);\n        if (iVar3 == 0) {\n            iVar1 = (lpcbData + 1) * 2;\n            arg_8h = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n            fcn.00404bce(arg_8h);\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, 0x49dc44, 0, 0, lpData, &lpcbData);\n            if (iVar3 == 0) {\n                *(lpData + (lpcbData & 0xfffffffe)) = 0;\n                lpcbData = lpcbData >> 1;\n                fcn.00407e53(lpData);\n            }\n            uVar4 = iVar3 == 0;\n            fcn.00404fd2();\n        }\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        uVar2 = uVar2 & 0xffffff00 | uVar4;\n    }\n    else {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    return uVar2;\n}\n",
        "token_count": 456
    },
    "0043aee5": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043aee5(uint pclsid, int32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    int16_t *in_EDX;\n    uint lpData;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_40h;\n    uint lpSubKey;\n    uint lpMachineName;\n    uint hKey;\n    uint32_t lpcbData;\n    uint phkResult;\n    \n    hKey = 0;\n    phkResult = 0;\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.00407e53(0x4b28ec);\n    fcn.004039e8(in_ECX);\n    fcn.004039e8(L\"\\\\CLSID\");\n    fcn.0040c4cd();\n    if (in_EDX != NULL) {\n        if ((*in_EDX != 0x5c) && (in_EDX[1] != 0x5c)) {\n            fcn.00407e53(0x4b2920);\n            fcn.004039e8(in_EDX);\n        }\n    }\n    if (arg_ch != 0) {\n        fcn.00421970(&var_60h, 0, 0x20);\n        var_5ch = 0;\n        fcn.0040c935(&lpMachineName);\n        fcn.004039e8(L\"\\\\IPC$\");\n        var_4ch = var_40h;\n        iVar3 = (*_sym.imp.MPR.dll_WNetAddConnection2W)(&var_60h, arg_10h, arg_ch, 0);\n        if (iVar3 < 0) goto code_r0x0043b045;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(lpMachineName, reloc.WSOCK32.dll_bind, &hKey);\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpSubKey, 0, 0x20019, &phkResult);\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            lpcbData = 0x1fe;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(phkResult, 0, 0, 0, &lpData, &lpcbData);\n            if (iVar3 == 0) {\n                uVar1 = lpcbData & 0xfffffffe;\n                lpcbData = lpcbData >> 1;\n                *(&lpData + uVar1) = 0;\n                iVar3 = (*_sym.imp.ole32.dll_CLSIDFromString)(&lpData, pclsid);\n            }\n            (*pcVar2)(phkResult);\n        }\n        (*pcVar2)(hKey);\n    }\ncode_r0x0043b045:\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return iVar3;\n}\n",
        "token_count": 743
    },
    "0043be95": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.0043be95(uint lpszUsername, uint lpszDomain, uint lpszPassword, uint arg_14h, uint noname_4, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_LogonUserW)\n                      (lpszUsername, lpszDomain, lpszPassword, (arg_14h & 2U | 4) >> 1, 0, arg_1ch);\n    return iVar1 != 0;\n}\n",
        "token_count": 119
    },
    "0047077a": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047077a(int32_t param_1, int16_t **param_2)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    \n    piVar4 = param_1 + 4;\n    iVar1 = *(param_1 + 2);\n    iVar2 = *piVar4;\n    do {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        if ((iVar2 == 0x5c) && (piVar4[1] == 0x5d)) {\n            piVar4 = piVar4 + 1;\n        }\n        else {\n            if (iVar2 == 0x5d) {\n                return 0;\n            }\n            if ((iVar2 == iVar1) && (piVar4[1] == 0x5d)) {\n                *param_2 = piVar4;\n                return 1;\n            }\n            if (((iVar2 == 0x5b) && (((iVar2 = piVar4[1],  iVar2 == 0x3a || (iVar2 == 0x2e)) || (iVar2 == 0x3d)))) &&\n               (iVar3 = fcn.0047077a(),  iVar3 != 0)) {\n                return 0;\n            }\n        }\n        piVar4 = piVar4 + 1;\n        iVar2 = *piVar4;\n    } while( true );\n}\n",
        "token_count": 331
    },
    "00442caa": {
        "rules": [
            "search for credit card data/ac143e9ae29c414184a69c9308e24693",
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442caa(uint lpString2)\n\n{\n    int16_t iVar1;\n    int64_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ushort extraout_var;\n    uint uVar6;\n    int32_t iVar7;\n    int16_t iVar8;\n    uint var_4h;\n    \n    iVar7 = 0;\n    iVar8 = 0;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n    iVar2 = (iVar4 + 1) * 2;\n    iVar5 = fcn.0042010a(-(iVar2 >> 0x20 != 0) | iVar2);\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(iVar5, lpString2);\n    *(iVar5 + iVar4 * 2) = 0;\n    iVar1 = *(iVar5 + -2 + iVar4 * 2);\n    if ((iVar1 == 0x2a) || (iVar1 == 0x5e)) {\n        *(iVar5 + -2 + iVar4 * 2) = 0;\n        iVar8 = 0x4000;\n    }\n    do {\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(*(iVar7 * 4 + 0x4c0070), iVar5);\n        if (iVar4 == 0) {\n            iVar8 = iVar8 + *(iVar7 * 2 + 0x4c0028);\n            bVar3 = true;\n            goto code_r0x00442d37;\n        }\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x24);\n    bVar3 = false;\ncode_r0x00442d37:\n    fcn.0042017e(iVar5);\n    if (bVar3) {\n        uVar6 = CONCAT22(extraout_var, iVar8);\n    }\n    else {\n        uVar6 = 0xffff;\n    }\n    return uVar6;\n}\n",
        "token_count": 451
    },
    "004714aa": {
        "rules": [
            "search for credit card data/ac143e9ae29c414184a69c9308e24693",
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004714aa(uint32_t *arg_8h, uint32_t *arg_ch, uint *arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t **in_ECX;\n    uint *in_EDX;\n    int32_t iVar5;\n    int16_t *piVar6;\n    uint var_48h;\n    int16_t **var_8h;\n    int32_t var_4h;\n    \n    piVar2 = *in_ECX;\n    piVar6 = piVar2 + 1;\n    iVar1 = *piVar6;\n    if (iVar1 != 0) {\n        iVar5 = 0;\n        *in_EDX = 0;\n        if (iVar1 != 0x7b) {\n            var_48h._2_2_ = 0;\n            var_48h._0_2_ = iVar1;\ncode_r0x0047151e:\n            *in_ECX = piVar6;\n            var_4h = 0x92;\n            var_8h = in_ECX;\n            do {\n                iVar3 = var_4h + iVar5 >> 1;\n                iVar4 = fcn.004718bf();\n                if (iVar4 == 0) {\n                    *arg_8h = *(iVar3 * 6 + 0x4b61ca);\n                    *arg_ch = *(iVar3 * 6 + 0x4b61cc);\n                    return 1;\n                }\n                if (0 < iVar4) {\n                    iVar5 = iVar3 + 1;\n                    iVar3 = var_4h;\n                }\n                var_4h = iVar3;\n            } while (iVar5 < var_4h);\n            *arg_10h = 0x2f;\n            *var_8h = piVar6;\n            return 0;\n        }\n        if (piVar2[2] == 0x5e) {\n            *in_EDX = 1;\n            piVar6 = piVar2 + 2;\n        }\n        iVar3 = 0;\n        do {\n            piVar6 = piVar6 + 1;\n            iVar1 = *piVar6;\n            if (iVar1 == 0) break;\n            if (iVar1 == 0x7d) {\n                *(&var_48h + iVar3 * 2) = 0;\n                goto code_r0x0047151e;\n            }\n            *(&var_48h + iVar3 * 2) = iVar1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x1f);\n    }\n    *in_ECX = piVar6;\n    *arg_10h = 0x2e;\n    return 0;\n}\n",
        "token_count": 639
    },
    "0041eda4": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint16_t * __fastcall fcn.0041eda4(uint16_t *param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *param_1;\n    do {\n        if (uVar1 == 0) {\n            return NULL;\n        }\n        uVar2 = uVar1;\n        if (uVar1 == 0x6f) {\n            return param_1;\n        }\n        if (uVar1 == 0x6c) {\n            param_1 = param_1 + param_1[1];\n        }\n        else {\n            if (uVar2 < 0x90) {\n                if (uVar2 == 0x8f) {\ncode_r0x0041ee57:\n                    param_1 = param_1 + param_1[1];\n                }\n                else {\n                    if (uVar2 < 0x55) goto code_r0x0041ee0e;\n                    if (uVar2 < 0x5b) {\ncode_r0x00483598:\n                        if ((param_1[1] == 0x10) || (param_1[1] == 0xf)) {\n                            param_1 = param_1 + 2;\n                        }\n                    }\n                    else {\n                        if (0x5d < uVar2) {\n                            if (uVar2 < 0x61) goto code_r0x00483598;\n                            if (uVar2 != 0x61) goto code_r0x0041ee0e;\n                        }\n                        if ((param_1[2] == 0x10) || (param_1[2] == 0xf)) {\n                            param_1 = param_1 + 2;\n                        }\n                    }\n                }\n            }\n            else if (((uVar2 == 0x91) || (uVar2 == 0x93)) || (uVar2 == 0x95)) goto code_r0x0041ee57;\ncode_r0x0041ee0e:\n            param_1 = param_1 + *(uVar2 + 0x49e530);\n            if (((param_2 != 0) && (uVar2 - 0x1d < 0x38)) && ((param_1[-1] & 0xfc00) == 0xd800)) {\n                param_1 = param_1 + 1;\n            }\n        }\n        uVar1 = *param_1;\n    } while( true );\n}\n",
        "token_count": 570
    },
    "0043d68d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043d68d(uint arg_8h, uint *arg_ch, uint arg_10h, uint32_t *arg_14h, uint32_t arg_18h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t in_EAX;\n    int16_t *piVar4;\n    uint16_t *puVar5;\n    \n    if (arg_18h <= *arg_14h && *arg_14h != arg_18h) {\ncode_r0x0043d7cd:\n        return in_EAX & 0xffffff00;\n    }\n    fcn.00407e53(0x49dbf0);\n    while( true ) {\n        piVar4 = fcn.0041db6f(*arg_14h);\n        iVar1 = *piVar4;\n        if ((((iVar1 == 0x3a) || (iVar1 == 0x3b)) || (iVar1 == 0x5d)) || (uVar3 = *arg_14h,  arg_18h < uVar3)) break;\n        *arg_14h = uVar3 + 1;\n        puVar5 = fcn.0041db6f(uVar3);\n        fcn.0040bd2f(*puVar5);\n    }\n    in_EAX = fcn.0041f885();\n    if (in_EAX != '\\0') goto code_r0x0043d7cd;\n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(*arg_ch, arg_ch[1]);\n    puVar5 = fcn.0041db6f(*arg_14h);\n    uVar2 = *puVar5;\n    in_EAX = uVar2;\n    if (uVar2 != 0x3a) {\n        if ((uVar2 != 0x3b) && (uVar2 != 0x5d)) goto code_r0x0043d7cd;\n        if (uVar2 != 0x3a) goto code_r0x0043d750;\n    }\n    *arg_14h = *arg_14h + 1;\ncode_r0x0043d750:\n    fcn.00407e53(0x49dbf0);\n    do {\n        if (arg_18h <= *arg_14h && *arg_14h != arg_18h) {\ncode_r0x0043d7ab:\n            while( true ) {\n                uVar3 = *arg_14h;\n                piVar4 = fcn.0041db6f(uVar3);\n                iVar1 = *piVar4;\n                if ((iVar1 != 0x20) && (iVar1 != 9)) break;\n                *arg_14h = uVar3 + 1;\n            }\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n        puVar5 = fcn.0041db6f(*arg_14h);\n        uVar2 = *puVar5;\n        uVar3 = *arg_14h;\n        piVar4 = fcn.0041db6f(uVar3 + 1);\n        if (uVar2 == 0x3b) {\n            if (*piVar4 != 0x3b) {\n                *arg_14h = *arg_14h + 1;\n                goto code_r0x0043d7ab;\n            }\n            *arg_14h = *arg_14h + 2;\n        }\n        else {\n            *arg_14h = uVar3 + 1;\n        }\n        fcn.0040bd2f(uVar2);\n    } while( true );\n}\n",
        "token_count": 833
    },
    "00442893": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00442893(int16_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    \n    puVar2 = fcn.0042010a(4);\n    if (*arg_8h == 9) {\n        *puVar2 = *(arg_8h + 4);\n        piVar1 = *(arg_8h + 4);\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 4))(piVar1);\n        }\n    }\n    else {\n        *puVar2 = 0;\n    }\n    return puVar2;\n}\n",
        "token_count": 143
    },
    "0044ae06": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044ae06(uint64_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    int32_t *piVar4;\n    int32_t extraout_EDX;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (*(param_1 + 0xc) == 0xb) {\n        return 1;\n    }\n    // switch table (10 cases) at 0x44af3e\n    switch(*(param_1 + 0xc)) {\n    case 1:\n    case 7:\n        uVar2 = *param_1;\n        goto code_r0x0044aee7;\n    case 2:\n        _var_10h = *param_1;\n        iVar5 = 8;\n        break;\n    case 3:\n        _var_10h = *param_1;\n        iVar5 = 8;\n        break;\n    case 4:\n        var_4h = *(param_1 + 1);\n        cVar1 = fcn.0040d093();\n        iVar5 = extraout_EDX;\n        if (cVar1 != '\\0') {\n            iVar5 = *(extraout_EDX + 4) + -2 >> 1;\n            puVar3 = fcn.0042010a(iVar5);\n            cVar1 = fcn.0044882c();\n            if (cVar1 != '\\0') goto code_r0x0044af18;\n            fcn.0042017e(puVar3);\n            iVar5 = var_4h;\n        }\n        iVar5 = *(iVar5 + 4);\n        if (iVar5 == 0) {\n            puVar3 = fcn.0042010a(1);\n            *puVar3 = 0;\n        }\n        else {\n            puVar3 = fcn.0042010a(iVar5);\n            fcn.0044a65e(iVar5);\n            fcn.0041f26b(var_4h, &var_20h);\n            fcn.0041faa0(puVar3, var_20h, iVar5);\n            fcn.00405cd3();\n        }\n        goto code_r0x0044af18;\n    case 5:\n        fcn.0041e3cc();\n    default:\n        iVar5 = 0;\n        puVar3 = fcn.0042010a(1);\n        *puVar3 = 0;\n        goto code_r0x0044af18;\n    case 9:\n        iVar5 = 1;\n        _var_10h = _var_10h & 0xffffffffffffff00 | *param_1;\n        break;\n    case 10:\n        uVar2 = *(*param_1 + 4);\ncode_r0x0044aee7:\n        _var_10h = _var_10h & 0xffffffff00000000 | uVar2;\n        iVar5 = 4;\n    }\n    puVar3 = fcn.0042010a(iVar5);\n    fcn.0041faa0(puVar3, &var_10h, iVar5);\ncode_r0x0044af18:\n    piVar4 = fcn.0042010a(8);\n    *param_1 = piVar4;\n    *piVar4 = iVar5;\n    *(*param_1 + 4) = puVar3;\n    fcn.0044b00a();\n    *(param_1 + 0xc) = 0xb;\n    return 1;\n}\n",
        "token_count": 809
    },
    "00465683": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00465683(int32_t arg_8h)\n\n{\n    uint16_t **ppuVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t *arg_8h_00;\n    \n    fcn.004084a6();\n    ppuVar1 = *(arg_8h + 8);\n    arg_8h_00 = *ppuVar1;\n    iVar3 = 1;\n    if ((((arg_8h_00 == NULL) || (ppuVar1 = NULL,  *arg_8h_00 == 0)) ||\n        (ppuVar1 = fcn.00422203(arg_8h_00, 0x49daa0),  ppuVar1 == NULL)) ||\n       ((ppuVar1 = fcn.00422203(arg_8h_00, 0x4b4714),  ppuVar1 == NULL ||\n        (ppuVar1 = fcn.00422203(arg_8h_00, 0x4b471c),  ppuVar1 == NULL)))) {\ncode_r0x0046575c:\n        uVar2 = ppuVar1 & 0xffffff00;\n    }\n    else {\n        if (*arg_8h_00 != 0) {\n            do {\n                if (iVar3 == 1) {\n                    uVar2 = *arg_8h_00;\n                    if ((uVar2 == 0x2b) || (uVar2 == 0x2d)) {\n                        arg_8h_00 = arg_8h_00 + 1;\n                    }\n                    else {\n                        if (uVar2 == 0x2e) goto code_r0x0046573f;\n                        ppuVar1 = uVar2 - 0x30;\n                        if (0x9 < ppuVar1) goto code_r0x0046575c;\n                    }\n                    iVar3 = 2;\n                }\n                else if (iVar3 == 2) {\n                    ppuVar1 = fcn.004222df(*arg_8h_00);\n                    if (ppuVar1 == NULL) {\n                        if (*arg_8h_00 != 0x2e) goto code_r0x0046575c;\ncode_r0x0046573f:\n                        iVar3 = 3;\n                    }\n                    else {\n                        arg_8h_00 = arg_8h_00 + 1;\n                    }\n                }\n                else if (iVar3 == 3) {\n                    arg_8h_00 = arg_8h_00 + 1;\n                    iVar3 = 4;\n                }\n                else if (iVar3 == 4) {\n                    ppuVar1 = fcn.004222df(*arg_8h_00);\n                    if (ppuVar1 == NULL) goto code_r0x0046575c;\n                    arg_8h_00 = arg_8h_00 + 1;\n                }\n            } while (*arg_8h_00 != 0);\n            if (iVar3 == 4) {\n                return 1;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 707
    },
    "0046577d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046577d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint16_t *arg_8h_00;\n    int32_t iVar4;\n    \n    fcn.004084a6();\n    arg_8h_00 = **(arg_8h + 8);\n    iVar4 = 1;\n    if ((((arg_8h_00 == NULL) || (*arg_8h_00 == 0)) || (iVar1 = fcn.00422203(arg_8h_00, 0x4b4724),  iVar1 == 0)) ||\n       (iVar1 = fcn.00422203(arg_8h_00, 0x4b4728),  iVar1 == 0)) {\ncode_r0x004657c2:\n        uVar2 = 0;\n    }\n    else {\n        while (*arg_8h_00 != 0) {\n            if (iVar4 == 1) {\n                uVar3 = *arg_8h_00;\n                if ((uVar3 == 0x2b) || (uVar3 == 0x2d)) {\n                    arg_8h_00 = arg_8h_00 + 1;\n                }\n                else if (9 < uVar3 - 0x30) goto code_r0x004657c2;\n                iVar4 = 2;\n            }\n            else if (iVar4 == 2) {\n                iVar1 = fcn.00422952(*arg_8h_00);\n                if (iVar1 == 0) goto code_r0x004657c2;\n                arg_8h_00 = arg_8h_00 + 1;\n            }\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 413
    },
    "0040b8a7": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b8a7(uint *param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_1[3];\n    if (1 < iVar4) {\n        *param_1[3] = iVar4 + -1;\n        puVar1 = fcn.0042010a(4);\n        if (puVar1 == NULL) {\n            puVar1 = NULL;\n        }\n        else {\n            *puVar1 = 1;\n        }\n        param_1[3] = puVar1;\n        iVar4 = param_1[1] + 1;\n        if (iVar4 == 0) {\n            uVar2 = 8;\n        }\n        else {\n            uVar2 = param_1[1] + 8 & 0xfffffff8;\n        }\n        param_1[2] = uVar2;\n        uVar3 = fcn.0041fa89(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n        fcn.0041faa0(uVar3, *param_1, iVar4 * 2);\n        *param_1 = uVar3;\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "0040caee": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040caee(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *in_ECX;\n    \n    iVar1 = fcn.004218fb(arg_8h);\n    in_ECX[1] = iVar1;\n    if (iVar1 + 1 == 0) {\n        uVar2 = 8;\n    }\n    else {\n        uVar2 = iVar1 + 8U & 0xfffffff8;\n    }\n    in_ECX[2] = uVar2;\n    uVar3 = fcn.0041fa89(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n    *in_ECX = uVar3;\n    fcn.0041faa0(uVar3, arg_8h, (iVar1 + 1) * 2);\n    puVar4 = fcn.0042010a(4);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        *puVar4 = 1;\n    }\n    in_ECX[3] = puVar4;\n    return;\n}\n",
        "token_count": 277
    },
    "0040cdb4": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.0040cdb4(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t **ppiVar3;\n    uint arg_8h;\n    int32_t **var_8h;\n    int32_t **ppiStack8;\n    \n    piVar1 = param_1[3];\n    var_8h = param_1;\n    ppiStack8 = param_1;\n    if (piVar1 < 8) {\n        if (((piVar1 == 0x7) || (piVar1 == 0x1)) || (piVar1 == 0x2)) {\n            return *param_1;\n        }\n        if (piVar1 == 0x3) {\n            ppiVar3 = fcn.00471de0();\n            return ppiVar3;\n        }\n        if (piVar1 != 0x4) {\n            return NULL;\n        }\n        cVar2 = fcn.0040d075();\n        if (cVar2 == '\\0') {\n            ppiVar3 = fcn.00422241(arg_8h);\n            return ppiVar3;\n        }\n        fcn.0041bcea(0x10);\n    }\n    else {\n        if (piVar1 == 0x9) {\n            return *param_1 != '\\0';\n        }\n        if (piVar1 == 0xa) {\n            return (*param_1)[1];\n        }\n        if (piVar1 != 0xb) {\n            return NULL;\n        }\n        if (8 < **param_1) {\n            return NULL;\n        }\n        fcn.0044863c(&var_8h);\n    }\n    return var_8h;\n}\n",
        "token_count": 391
    },
    "00445f91": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445f91(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    cVar1 = fcn.00445d2c(arg_8h, &var_4h);\n    if (((cVar1 == '\\0') || (var_4h < 7)) || (*0x4c22c0 < var_4h)) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.0040c935(arg_ch);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 154
    },
    "0044863c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044863c(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_EDX;\n    int32_t iVar2;\n    ulong uVar3;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = in_EDX - 1;\n    iVar2 = 0;\n    if (uVar1 < 8) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        var_8h = 1;\n        var_4h = 0;\n        if (0 < in_EDX) {\n            do {\n                uVar3 = fcn.00434ba0();\n                uVar1 = *arg_8h;\n                *arg_8h = *arg_8h + uVar3;\n                arg_8h[1] = arg_8h[1] + (uVar3 >> 0x20) + CARRY4(uVar1, uVar3);\n                uVar1 = var_4h << 8 | var_8h >> 0x18;\n                iVar2 = iVar2 + 1;\n                var_8h = var_8h << 8;\n                var_4h = uVar1;\n            } while (iVar2 < in_EDX);\n        }\n        uVar1 = CONCAT31(uVar1 >> 8, 1);\n    }\n    else {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        uVar1 = arg_8h & 0xffffff00;\n    }\n    return uVar1;\n}\n",
        "token_count": 377
    },
    "0044be63": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong * __fastcall fcn.0044be63(ulong *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    ulong *puVar3;\n    uint arg_8h;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    ulong *puStack12;\n    ulong *puStack8;\n    \n    iVar1 = *(param_1 + 0xc);\n    if (iVar1 < 1) {\n        return NULL;\n    }\n    if (4 < iVar1) {\n        if (iVar1 == 7) {\n            return *param_1;\n        }\n        if (iVar1 != 8) {\n            return NULL;\n        }\n        return *(*param_1 + 8);\n    }\n    iVar1 = *(param_1 + 0xc);\n    if (iVar1 != 1) {\n        if (iVar1 == 2) {\n            return *param_1;\n        }\n        puStack12 = param_1;\n        puStack8 = param_1;\n        if (iVar1 == 3) {\n            puVar3 = fcn.0040cb5c(in_stack_ffffffe0, in_stack_ffffffe4, *param_1, *param_1 >> 0x20);\n            return puVar3;\n        }\n        if (iVar1 == 4) {\n            cVar2 = fcn.0040d075();\n            if (cVar2 != '\\0') {\n                fcn.0041bcea(0x10);\n                return puStack12;\n            }\n            puVar3 = fcn.0042224a(arg_8h);\n            return puVar3;\n        }\n        if (iVar1 != 7) {\n            if (iVar1 == 9) {\n                if (*param_1 == '\\0') {\n                    return NULL;\n                }\n                return iVar1 + -8;\n            }\n            if (iVar1 == 0xb) {\n                if (**param_1 < 5) {\n                    fcn.0044863c(&puStack12);\n                    return puStack12;\n                }\n                if (**param_1 < 9) {\n                    fcn.0044863c(&puStack12);\n                    return puStack12;\n                }\n            }\n            return NULL;\n        }\n    }\n    return *param_1;\n}\n",
        "token_count": 505
    },
    "0044be8a": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044be8a(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iStack4;\n    \n    piVar1 = param_1[3];\n    if (piVar1 < 8) {\n        if ((piVar1 == 0x7) || (piVar1 == 0x1)) {\n            iStack4 = 4;\n        }\n        else {\n            if ((piVar1 != 0x2) && (piVar1 != 0x3)) {\n                if (piVar1 != 0x4) {\n                    return 0;\n                }\n                return param_1[2][1] * 2 + 2;\n            }\n            iStack4 = 8;\n        }\n        return iStack4;\n    }\n    if (piVar1 == 0x9) {\n        return 1;\n    }\n    if (piVar1 != 0xb) {\n        if (piVar1 != 0xc) {\n            return 0;\n        }\n        return (*param_1)[3];\n    }\n    return **param_1;\n}\n",
        "token_count": 251
    },
    "0041e975": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e975(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint noname_0;\n    int32_t iVar5;\n    uint uStack1628;\n    uchar *puStack1624;\n    ushort uStack1596;\n    uchar auStack1584 [516];\n    uchar auStack1068 [528];\n    uchar auStack540 [536];\n    \n    *0x4c22ec = arg_8h;\n    *0x4c22e8 = 0;\n    *0x4c22ea = 0;\n    *0x4c22f0 = 0;\n    *0x4c22f4 = 0;\n    *0x4c22f8 = 0;\n    *0x4c22fc = 0;\n    *0x4c2300 = 0x4b1828;\n    *0x4c2304 = 0;\n    *0x4c2308 = 0;\n    *0x4c230c = 0;\n    *0x4c2310 = 0x4b1828;\n    *0x4c2314 = 0;\n    *0x4c2318 = 0;\n    *0x4c231c = 0;\n    *0x4c2324 = 0;\n    *0x4c232c = 0;\n    *0x4c2330 = 0x49dd94;\n    *0x4c2334 = 0;\n    *0x4c2338 = 0;\n    *0x4c233c = 0;\n    *0x4c2340 = 0x66;\n    puStack1624 = 0x41ea27;\n    *0x4c2320 = fcn.0042010a(0x400);\n    puStack1624 = &stack0xfffff9d0;\n    uStack1628 = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)();\n    fcn.0042297d(&stack0xfffff9c4, &stack0xfffffde4, &stack0xfffffbd4, 0, 0);\n    fcn.00422bbc(&stack0xfffffbd4, 0x49dc44, 0x104);\n    fcn.00422bff(&stack0xfffff9c4, &stack0xfffffde4, &stack0xfffffbd4, 0, 0);\n    uVar2 = fcn.0042010a(0x20a);\n    *(*0x4c2320 + *0x4c2324 * 4) = uVar2;\n    iVar5 = *0x4c2324 * 4;\n    *0x4c2324 = *0x4c2324 + 1;\n    fcn.00421943(*(*0x4c2320 + iVar5), &stack0xfffff9c4);\n    fcn.0040d3d2();\n    cVar1 = fcn.0041eb05(noname_0, &stack0xfffff9b4);\n    if (cVar1 == '\\0') {\ncode_r0x0041eae0:\n        fcn.00405cd3();\n        return 0x4c22e8;\n    }\n    iVar5 = 0;\n    uStack1596 = 0;\n    do {\n        fcn.0040a4f6(iVar5);\n        piVar3 = fcn.0040a4f6(iVar5);\n        if (*piVar3 == 0) {\ncode_r0x00473308:\n            iVar4 = fcn.004218fb(&stack0xfffff9b8);\n            if (iVar4 != 0) {\n                iVar4 = fcn.004218fb(&stack0xfffff9b8);\n                if (*(&stack0xfffff9b6 + iVar4 * 2) != 0x5c) {\n                    fcn.00421914(&stack0xfffff9b8, 0x49dc88);\n                }\n            }\n            uVar2 = fcn.0042010a(0x20a);\n            *(*0x4c2320 + *0x4c2324 * 4) = uVar2;\n            iVar4 = *0x4c2324 * 4;\n            *0x4c2324 = *0x4c2324 + 1;\n            fcn.00422c1d(*(*0x4c2320 + iVar4), &stack0xfffff9b8, 0x104);\n            piVar3 = fcn.0040a4f6(iVar5);\n            if (*piVar3 == 0) goto code_r0x0041eae0;\n        }\n        else {\n            piVar3 = fcn.0040a4f6(iVar5);\n            if (*piVar3 == 0x3b) goto code_r0x00473308;\n            fcn.00421914(&stack0xfffff9b8, &stack0xfffff9a4);\n        }\n        iVar5 = iVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 1169
    },
    "0043cde6": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043cde6(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint uVar4;\n    uint var_4h;\n    \n    fcn.0043e138(*in_ECX, 1);\n    pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n    iVar3 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x25, 0);\n    pcVar2 = _sym.imp.USER32.dll_PostMessageW;\n    if (arg_8h < 0) {\n        (*_sym.imp.USER32.dll_PostMessageW)(*in_ECX, 0x100, 0x25);\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        iVar3 = (*pcVar1)(0x25, 0);\n        uVar4 = 0x25;\n    }\n    else {\n        (*_sym.imp.USER32.dll_PostMessageW)(*in_ECX, 0x100, 0x27, iVar3 << 0x10 | 1);\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        iVar3 = (*pcVar1)(0x25, 0);\n        uVar4 = 0x27;\n    }\n    (*pcVar2)(*in_ECX, 0x101, uVar4, iVar3 << 0x10 | 0xc0000001);\n    (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    fcn.0043e138(*in_ECX, 0);\n    return 1;\n}\n",
        "token_count": 365
    },
    "0044c07d": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c07d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        uVar2 = *in_ECX;\n        uVar3 = *(in_ECX + 2);\n        if (0 < arg_ch) {\n            iVar1 = 0;\n            do {\n                uVar2 = (*(iVar1 + arg_8h) + uVar2) % 0xfff1;\n                uVar3 = (uVar3 + uVar2) % 0xfff1;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg_ch);\n        }\n        *in_ECX = uVar3 * 0x10000 + uVar2;\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00458f4b": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458f4b(uint arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0040cdb4();\n    if (uVar1 < 0x65) {\n        uVar1 = (uVar1 * 0xffff) / 100 & 0xffff;\n        (*_sym.imp.WINMM.dll_waveOutSetVolume)(0, uVar1 << 0x10 | uVar1);\n    }\n    else {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.0044d7e4(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 165
    },
    "0046f594": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046f594(uint hDlg, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(hDlg, 0xffffffec);\n    if ((uVar1 & 0x10000) == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x84, 0, arg_ch & 0xffff | arg_10h << 0x10);\n    }\n    else {\n        uVar2 = 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 155
    },
    "0046ff04": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ff04(int32_t arg_8h, int32_t wParam, uint32_t arg_10h, int32_t lParam)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t lpRect;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    if (arg_8h == wParam) {\n        iVar1 = fcn.0041af7d(arg_8h);\n        iVar1 = **(*0x4c1870 + iVar1 * 4);\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &lpRect);\n        (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        if ((((lpRect <= lpPoint) && (lpPoint <= var_10h)) && (var_14h <= var_4h)) && (var_4h <= var_ch)) {\n            fcn.0046cfc5(*(iVar1 + 0x10));\n            return 1;\n        }\n    }\n    uVar2 = (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x20, wParam, arg_10h & 0xffff | lParam << 0x10);\n    return uVar2;\n}\n",
        "token_count": 326
    },
    "00454a41": {
        "rules": [
            "check HTTP status code/09dd97b2e76544bcbbe79d95da398605"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00454a41(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    ulong uVar4;\n    uint arg_8h_01;\n    uint *arg_ch_00;\n    uint arg_10h;\n    uint var_24h;\n    ushort var_6h;\n    uint var_4h;\n    \n    arg_8h_00 = (*_sym.imp.WININET.dll_InternetOpenUrlW)\n                          (*(in_ECX + 4), *(in_ECX + 0x20), 0, 0, *(in_ECX + 0x54) & 0x80000000, 0);\n    if (arg_8h_00 == 0) {\n        arg_10h = 0;\n        arg_ch_00 = 0xdeadbeef;\n        arg_8h_01 = 0x29;\n    }\n    else {\n        arg_10h = arg_8h;\n        fcn.00455703(arg_8h_00, arg_8h);\n        iVar1 = (*_sym.imp.WININET.dll_HttpSendRequestW)(arg_8h_00, 0, 0, 0, 0);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00454be4(arg_8h_00);\n            if (iVar1 == 200) {\n                arg_ch_00 = &arg_8h;\n                arg_8h = 0;\n                var_4h = 0x20;\n                (*_sym.imp.WININET.dll_HttpQueryInfoW)(arg_8h_00, 5, &var_24h, &var_4h);\n                var_6h = 0;\n                uVar4 = fcn.0042224a(&var_24h);\n                *(in_ECX + 0x10) = uVar4;\n                *(in_ECX + 0x14) = uVar4 >> 0x20;\n                if (arg_ch != '\\0') {\n                    uVar2 = fcn.0045550c(arg_8h_00);\n                    goto code_r0x00454af6;\n                }\n                arg_8h_01 = 0;\n                goto code_r0x00454af1;\n            }\n        }\n        arg_10h = 0;\n        arg_ch_00 = 0xdeadbeef;\n        arg_8h_01 = 0x2a;\n    }\ncode_r0x00454af1:\n    uVar2 = fcn.004556a9(arg_8h_01, arg_ch_00, arg_10h);\ncode_r0x00454af6:\n    uVar3 = uVar2;\n    if (arg_8h_00 != 0) {\n        uVar3 = (*_sym.imp.WININET.dll_InternetCloseHandle)(arg_8h_00);\n    }\n    return uVar3 & 0xffffff00 | uVar2 & 0xff;\n}\n",
        "token_count": 701
    },
    "0044ea85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044ea85(int32_t arg_8h, double *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint uStack12;\n    uint var_4h;\n    double dStack12;\n    \n    dStack12 = CONCAT44(in_ECX, uStack12);\n    uVar4 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    fcn.00412570();\n    *arg_ch = 0;\n    *(arg_ch + 0xc) = 1;\n    iVar5 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar5 + 8);\n    uVar2 = *puVar1;\n    piVar3 = puVar1[3];\n    *piVar3 = *piVar3 + 1;\n    fcn.004471f1();\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExW)(uVar2, &var_10h, &var_20h, &var_18h);\n    if (iVar5 == 0) {\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        dStack12 = _var_10h * *0x4b6540;\n        fcn.00412570();\n        *(arg_ch + 0xc) = 3;\n        *arg_ch = dStack12;\n    }\n    fcn.00405cd3();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar4);\n    return 0;\n}\n",
        "token_count": 442
    },
    "0044eb4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044eb4b(int32_t arg_8h, double *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint uStack12;\n    uint var_4h;\n    double dStack12;\n    \n    dStack12 = CONCAT44(in_ECX, uStack12);\n    uVar4 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    fcn.00412570();\n    *arg_ch = 0;\n    *(arg_ch + 0xc) = 1;\n    iVar5 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar5 + 8);\n    uVar2 = *puVar1;\n    piVar3 = puVar1[3];\n    *piVar3 = *piVar3 + 1;\n    fcn.004471f1();\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExW)(uVar2, &var_20h, &var_10h, &var_18h);\n    if (iVar5 == 0) {\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        dStack12 = _var_10h * *0x4b6540;\n        fcn.00412570();\n        *(arg_ch + 0xc) = 3;\n        *arg_ch = dStack12;\n    }\n    fcn.00405cd3();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar4);\n    return 0;\n}\n",
        "token_count": 443
    },
    "00431e7e": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00431e7e(uint param_1, uint param_2, int32_t param_3, uint param_4)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    bool bVar8;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 extraout_ST0;\n    float10 fVar9;\n    uchar in_XMM0 [16];\n    uint64_t uVar10;\n    uint unaff_retaddr;\n    \n    uVar1 = SUB162(in_XMM0 >> 0x30, 0);\n    uVar2 = (uVar1 & 0x7fff) + 0xcfd0;\n    bVar8 = uVar2 == 0x10c5;\n    if (uVar2 < 0x10c6) {\n        iVar7 = (ROUND(*0x4987e0 * SUB168(in_XMM0, 0)) + 0x1c7610U & 0x3f) * 0x20;\n        return CONCAT44(iVar7, iVar7 + 0x497fa0);\n    }\n    if (uVar2 < 0x10c6) {\n        uVar6 = uVar1 & 0x7fff;\n        pinsrw(in_XMM0, uVar6, 3);\n        return CONCAT44(param_2, uVar6);\n    }\n    uVar10 = fcn.0042ef25();\n    uVar6 = uVar10 >> 0x20 & 0xffff0000 | in_FPUControlWord;\n    if (bVar8) {\n        if (((uVar10 & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = fcn.0042ef0c();\n        }\n        if (*0x4c0938 == 0) {\n            uVar5 = fcn.0042ee97(uVar6, unaff_retaddr, param_3, param_4);\n            return CONCAT44(uVar6, uVar5);\n        }\n    }\n    else {\n        fVar9 = fcos(extraout_ST0);\n        uVar3 = uVar10 & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar9 = fVar9 - (fVar9 / *0x49290a) * *0x49290a;\n                uVar3 = uVar3 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar9);\n        }\n        if (*0x4c0938 == 0) {\n            uVar4 = uVar3 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar4 = uVar3 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar5 = fcn.0042ee97(uVar6, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(uVar6, uVar5);\n                }\n                uVar4 = uVar4 & 0xffff0020;\n            }\n            return CONCAT44(uVar6, uVar4);\n        }\n    }\n    return CONCAT44(uVar6, uVar3);\n}\n",
        "token_count": 850
    },
    "00471a0c": {
        "rules": [
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00471a0c(uint32_t param_1, uint16_t *param_2)\n\n{\n    if (param_1 < 0x10000) {\n        *param_2 = param_1;\n        return 1;\n    }\n    *param_2 = param_1 - 0x10000 >> 10 | 0xd800;\n    param_2[1] = param_1 - 0x10000 & 0x3ff | 0xdc00;\n    return 2;\n}\n",
        "token_count": 118
    },
    "00403b45": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403b45(uint lpFileName)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint lpBuffer;\n    uint lpFilePart;\n    \n    (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(lpFileName, 0x104, &lpBuffer, &lpFilePart);\n    uVar3 = 0;\n    if (*(in_ECX + 0x20) != 0) {\n        do {\n            iVar2 = fcn.00421bc7(**(*(in_ECX + 0x1c) + uVar3 * 4), &lpBuffer);\n            if (iVar2 == 0) {\n                piVar1 = *(*(in_ECX + 0x2c) + uVar3 * 4);\n                *piVar1 = *piVar1 + 1;\n                return uVar3;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(in_ECX + 0x20));\n    }\n    lpFilePart = fcn.00403bcf();\n    fcn.0040197e(&lpFilePart);\n    lpFileName = 1;\n    fcn.0040197e(&lpFileName);\n    return *(in_ECX + 0x20) - 1;\n}\n",
        "token_count": 307
    },
    "00403bff": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403bff(int16_t *arg_8h, uint arg_ch, uint noname_2, uchar *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int16_t *arg_10h;\n    uint var_58h;\n    uint var_54h;\n    char16_t *var_4ch;\n    uint var_40h;\n    int16_t *var_3ch;\n    uint var_38h;\n    char16_t *var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(in_ECX + 2) = *0x4c10c2;\n    if (*arg_8h == 0) {\n        *arg_14h = 1;\n        fcn.00421970(&var_58h, 0, 0x58);\n        var_54h = 0;\n        var_58h = 0x58;\n        var_28h = L\"Run Script:\";\n        var_3ch = arg_8h;\n        var_38h = 0x104;\n        var_4ch = L\"AutoIt script files (*.au3, *.a3x)\";\n        var_40h = 1;\n        var_24h = 0x1804;\n        var_1ch = 0x4b3480;\n        iVar2 = (*_sym.imp.COMDLG32.dll_GetOpenFileNameW)(&var_58h);\n        if (iVar2 == 0) {\n            return 0;\n        }\n    }\n    fcn.004031b8();\n    fcn.00403a67();\n    arg_10h = arg_8h;\n    uVar1 = fcn.00403b45(arg_8h);\n    uVar1 = fcn.00403dcb(arg_8h, uVar1, arg_10h);\n    return uVar1;\n}\n",
        "token_count": 434
    },
    "00407b4b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407b4b(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_14h;\n    \n    if (in_ECX == arg_8h) {\n        arg_8h_00 = fcn.0043c0a2(&var_14h, in_ECX);\n        fcn.0040c935(arg_8h_00);\n        fcn.00405cd3();\n    }\n    else {\n        fcn.0040bbd9(arg_8h, 0, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00407fba": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407fba(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_EBX;\n    int32_t iStack116;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    \n    fcn.00407d70();\n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    uVar2 = *(iVar1 + 8);\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    uStack104 = *(iVar1 + 8);\n    iVar1 = *(*(arg_8h + 4) + 8);\n    fcn.004084a6();\n    uStack100 = *(iVar1 + 8);\n    uStack108 = 0;\n    if (3 < *(arg_8h + 8)) {\n        uStack108 = fcn.0040cdb4();\n    }\n    iVar1 = fcn.00405be9(uStack104);\n    if (iVar1 == 0) {\n        fcn.00407e36(iStack116);\n        fcn.00407b6e(*(iStack116 + 4));\n        uVar2 = fcn.00408530(uVar2, unaff_EBX, &uStack108);\n        fcn.00407bef(&stack0xffffff88);\n        fcn.00407ba9(uVar2, 0);\n        fcn.00405cd3();\n    }\n    else {\n        fcn.00407bef(iStack116);\n        fcn.0044d7e4(2, 0);\n        fcn.00407ba9(iVar1 + 1, 0);\n    }\n    fcn.00405cbb();\n    return 0;\n}\n",
        "token_count": 414
    },
    "0040cb5c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040cb5c(uint noname_0, uint noname_1, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    float10 extraout_ST0;\n    float10 extraout_ST1;\n    int64_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = arg_14h;\n    uVar2 = arg_10h;\n    if ((_arg_10h != 0.0) && (*0x4b2768 != _arg_10h)) {\n        iVar6 = fcn.00471e16();\n        iVar5 = iVar6;\n        arg_14h = iVar6 >> 0x20;\n        arg_10h = SUB84(iVar6, 0);\n        if (extraout_ST0 < extraout_ST1) {\n            dVar1 = iVar6 - *0x4b2738;\n            var_8h = SUB84(dVar1, 0);\n            var_4h = dVar1 >> 0x20;\n            iVar4 = ((var_4h - arg_14h) - (var_8h < arg_10h)) - (var_8h - arg_10h < 10);\n            iVar3 = (iVar3 - arg_14h) - (uVar2 < arg_10h);\n            if ((iVar4 <= iVar3) && ((iVar4 < iVar3 || ((var_8h - arg_10h) - 10 <= uVar2 - arg_10h)))) {\n                iVar5 = iVar5 + -1;\n            }\n        }\n        else {\n            dVar1 = iVar6 + *0x4b2738;\n            var_8h = SUB84(dVar1, 0);\n            var_4h = dVar1 >> 0x20;\n            iVar4 = ((var_4h - arg_14h) - (var_8h < arg_10h)) - (var_8h - arg_10h < 10);\n            iVar3 = (iVar3 - arg_14h) - (uVar2 < arg_10h);\n            if ((iVar4 <= iVar3) && ((iVar4 < iVar3 || ((var_8h - arg_10h) - 10 <= uVar2 - arg_10h)))) {\n                iVar5 = iVar5 + 1;\n            }\n        }\n        return iVar5;\n    }\n    return 0;\n}\n",
        "token_count": 594
    },
    "0040cbf7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0040cbf7(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint arg_8h;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    char extraout_DL;\n    float10 fVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    uint var_40h;\n    uint var_30h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t *var_4h;\n    \n    uVar7 = param_1[3];\n    uVar3 = param_2[3];\n    uVar2 = *((uVar7 * 0x10 + uVar3) * 4 + 0x4bb810) - 1;\n    var_4h = param_2;\n    // switch table (15 cases) at 0x40ccb3\n    switch(uVar2) {\n    case 0:\n        uVar3 = fcn.0040cdb4();\n        uVar7 = fcn.0040cdb4();\n        goto code_r0x0040cc3c;\n    case 1:\n        iVar9 = fcn.0040d00b();\n        iVar10 = fcn.0040d00b();\n        if (iVar9 != iVar10) {\n            return 0;\n        }\n        goto code_r0x0040cca9;\n    case 2:\n        fVar8 = fcn.00412620();\n        _var_8h = fVar8;\n        fVar8 = fcn.00412620();\n        if (_var_8h != fVar8) {\n            return 0;\n        }\ncode_r0x0040cca9:\n        uVar2 = 1;\n        break;\n    case 3:\n        fcn.004084a6();\n        uVar7 = param_2[2];\n        fcn.004084a6();\n        iVar6 = fcn.0041dfb6(uVar7, 0);\ncode_r0x0040cca2:\n        uVar2 = iVar6 == 0;\n        break;\n    default:\ncode_r0x0040ccae:\n        uVar2 = uVar2 & 0xffffff00;\n        break;\n    case 6:\n        uVar3 = fcn.0044be63();\n        uVar7 = fcn.0044be63();\ncode_r0x0040cc3c:\n        uVar2 = uVar3 == uVar7;\n        goto code_r0x0040cc43;\n    case 7:\n        uVar2 = 0;\n        if (uVar7 == 8) {\n            uVar7 = *param_1;\n        }\n        else {\n            uVar7 = 0;\n        }\n        if (uVar7 != 0) {\n            if (uVar3 == 8) {\n                uVar7 = *param_2;\n            }\n            else {\n                uVar7 = 0;\n            }\n            if ((uVar7 != 0) && (uVar7 = fcn.0044a7b1(),  uVar7 != '\\0')) {\n                uVar2 = 1;\n            }\n        }\n        goto code_r0x0040cc43;\n    case 8:\n        fcn.0041e3ee();\n        uVar7 = fcn.0041e3ee();\n        uVar2 = uVar7 & 0xffffff00 | extraout_DL == uVar7;\n        break;\n    case 9:\n        fcn.0044be39();\n        uVar11 = fcn.0044be39();\n        goto code_r0x00474f84;\n    case 10:\n        if ((uVar7 == 0xb) && (uVar3 == 0xb)) {\n            fcn.0044be8a();\n            uVar11 = fcn.0044be8a();\n            uVar2 = uVar11;\n            if (uVar11 >> 0x20 != uVar2) goto code_r0x0040ccae;\n            uVar4 = fcn.0044be8a();\n            uVar5 = fcn.0044be47(extraout_ECX);\n            arg_8h = fcn.0044be47();\n            iVar6 = fcn.00420183(arg_8h, uVar5, uVar4);\n            goto code_r0x0040cca2;\n        }\n        uVar2 = 0;\n        var_18h = 0;\n        fcn.004113a0(param_1);\n        _var_8h = ZEXT48(var_4h) << 0x20;\n        fcn.004113a0(param_2);\n        fcn.0044ae06();\n        fcn.0044ae06();\n        fcn.0044be8a();\n        uVar11 = fcn.0044be8a();\n        iVar6 = uVar11 >> 0x20;\n        if (iVar6 == uVar11) {\n            uVar4 = fcn.0044be47(extraout_ECX_00);\n            uVar5 = fcn.0044be47();\n            iVar6 = fcn.00420183(uVar5, uVar4, iVar6);\n            uVar2 = 1 - (iVar6 != 0);\n        }\n        fcn.00412570();\n        uVar7 = fcn.00412570();\n        goto code_r0x0040cc43;\n    case 0xc:\n        fcn.0044afbf();\n        uVar11 = fcn.0044afbf();\ncode_r0x00474f84:\n        uVar2 = uVar11 & 0xffffff00 | 1 - (uVar11 >> 0x20 != uVar11);\n        break;\n    case 0xd:\n        fcn.0044afce(&var_40h);\n        fcn.0044afce(&var_30h);\n        uVar1 = fcn.00405b2a();\n        uVar2 = uVar1;\n        fcn.00405cd3();\n        uVar7 = fcn.00405cd3();\ncode_r0x0040cc43:\n        uVar2 = uVar7 & 0xffffff00 | uVar2;\n        break;\n    case 0xe:\n        uVar2 = 0;\n        if (uVar7 == 0xf) {\n            uVar7 = *param_1;\n        }\n        else {\n            uVar7 = 0;\n        }\n        if (uVar3 == 0xf) {\n            uVar2 = *param_2;\n        }\n        uVar2 = *(uVar7 + 0xc) == *(uVar2 + 0xc);\n    }\n    return uVar2;\n}\n",
        "token_count": 1572
    },
    "0041e3a5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041e3a5(void)\n\n{\n    (*_sym.imp.WINMM.dll_timeGetTime)();\n    return;\n}\n",
        "token_count": 31
    },
    "0041f78e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "log keystrokes",
            "find graphical window",
            "find taskbar"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f78e(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    code *pcVar8;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    if (arg_8h == iVar2) {\n        uVar3 = 1;\n    }\n    else {\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.USER32.dll_FindWindowW)(L\"Shell_TrayWnd\", 0);\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IsIconic)(arg_8h);\n        if (iVar4 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(arg_8h, 9);\n        }\n        iVar4 = (*_sym.imp.USER32.dll_SetForegroundWindow)(arg_8h);\n        pcVar8 = _sym.imp.USER32.dll_GetWindowThreadProcessId;\n        if (iVar4 == 0) {\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, 0);\n            uVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            uVar7 = (*pcVar8)(arg_8h, 0);\n            pcVar8 = _sym.imp.USER32.dll_AttachThreadInput;\n            (*_sym.imp.USER32.dll_AttachThreadInput)(uVar6, uVar7, 1);\n            (*pcVar8)(uVar6, uVar5, 1);\n            (*pcVar8)(uVar5, uVar7, 1);\n            iVar2 = (*_sym.imp.USER32.dll_SetForegroundWindow)(arg_8h);\n            pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n            if (iVar2 == 0) {\n                uVar3 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x12, 0, 0, 0);\n                pcVar8 = _sym.imp.USER32.dll_keybd_event;\n                (*_sym.imp.USER32.dll_keybd_event)(0x12, uVar3);\n                uVar3 = (*pcVar1)(0x12, 0, 2, 0);\n                (*pcVar8)(0x12, uVar3);\n                uVar3 = (*pcVar1)(0x12, 0, 0, 0);\n                (*pcVar8)(0x12, uVar3);\n                uVar3 = (*pcVar1)(0x12, 0, 2, 0);\n                (*pcVar8)(0x12, uVar3);\n                iVar2 = (*_sym.imp.USER32.dll_SetForegroundWindow)(arg_8h);\n                pcVar8 = _sym.imp.USER32.dll_AttachThreadInput;\n                if (iVar2 == 0) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 4;\n                }\n            }\n            else {\n                uVar3 = 3;\n            }\n            (*pcVar8)(uVar6, uVar7, 0);\n            (*pcVar8)(uVar6, uVar5, 0);\n            (*pcVar8)(uVar5, uVar7, 0);\n        }\n        else {\n            uVar3 = 2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 782
    },
    "0043b2d1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043b2d1(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    uVar1 = param_1[1];\n    uVar5 = 0;\n    iVar4 = uVar1 - 1;\n    if (uVar1 != 0) {\n        piVar2 = *param_1 + iVar4 * 2;\n        do {\n            iVar6 = 0;\n            iVar3 = 0x2e;\n            do {\n                if (*piVar2 == iVar3) {\n                    return iVar4;\n                }\n                iVar3 = *(iVar6 * 2 + 0x49daa2);\n                iVar6 = iVar6 + 1;\n            } while (iVar3 != 0);\n            iVar4 = iVar4 + -1;\n            piVar2 = piVar2 + -1;\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar1);\n    }\n    return -1;\n}\n",
        "token_count": 269
    },
    "0043bec3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "modify access privileges"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0043bec3(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    int32_t var_ch;\n    int32_t *var_8h;\n    \n    iVar3 = param_1[1] * 0xc + 4;\n    var_ch = iVar3;\n    piVar1 = fcn.0042010a(iVar3);\n    var_8h = piVar1;\n    iVar2 = fcn.0042010a(iVar3);\n    param_1[2] = iVar2;\n    *piVar1 = param_1[1];\n    if (param_1[1] != 0) {\n        piVar4 = piVar1 + 1;\n        uVar5 = 0;\n        do {\n            piVar4[2] = 2;\n            (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, *(*param_1 + uVar5 * 4), piVar4);\n            uVar5 = uVar5 + 1;\n            piVar4 = piVar4 + 3;\n            iVar3 = var_ch;\n            piVar1 = var_8h;\n        } while (uVar5 < param_1[1]);\n    }\n    if (param_1[2] == 0) {\n        puVar6 = &var_ch;\n    }\n    else {\n        puVar6 = NULL;\n        iVar3 = 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(param_1[3], 0, piVar1, iVar3, 0, puVar6);\n    fcn.0042017e(piVar1);\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    return iVar3 == 0;\n}\n",
        "token_count": 433
    },
    "0043c39d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get graphical window text"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043c39d(uint arg_8h)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    uint32_t uVar6;\n    uint hWnd;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0xb0, &var_8h, &var_4h);\n    if (var_8h < var_4h) {\n        uVar6 = 0;\n        uVar3 = (*pcVar2)(*in_ECX, 0xe, 0, 0);\n        if (((uVar3 == 0) || (uVar3 < var_8h)) || (uVar3 < var_4h)) {\n            var_8h = uVar3 & 0xffffff00;\n        }\n        else {\n            iVar1 = (uVar3 + 1) * 2;\n            iVar4 = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n            iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0xd, uVar3 + 1, iVar4);\n            if (iVar5 != 0) {\n                if (var_4h != uVar3) {\n                    *(iVar4 + var_4h * 2) = 0;\n                }\n                fcn.00407e53(iVar4 + var_8h * 2);\n                uVar6 = 1;\n            }\n            uVar3 = fcn.0042017e(iVar4);\n            var_8h = uVar3 & 0xffffff00 | uVar6;\n        }\n    }\n    else {\n        var_8h = var_8h & 0xffffff00;\n    }\n    return var_8h;\n}\n",
        "token_count": 463
    },
    "0043cd4f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043cd4f(int32_t wParam, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint var_888h;\n    uint var_88h;\n    uint *hWnd;\n    \n    hWnd = in_ECX;\n    fcn.0040181b();\n    uVar3 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x406, 0, 0);\n    if ((-1 < wParam) && (wParam < iVar1)) {\n        arg_8h = fcn.00444c65(0x800, *in_ECX);\n        (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x40d, wParam, arg_8h);\n        fcn.00444d0c(arg_8h, &var_888h, 0x800);\n        fcn.00407e53(&var_888h);\n        uVar3 = 1;\n    }\n    uVar2 = fcn.00402e39();\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 282
    },
    "0043cf7f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0043cf7f(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_a8h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *hWnd;\n    \n    hWnd = in_ECX;\n    fcn.0040181b();\n    var_14h = arg_8h;\n    uVar1 = fcn.00444c65(0x10, *in_ECX);\n    fcn.00444d41(&var_14h, uVar1, 0x10);\n    uVar3 = 0;\n    (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1104, 0, uVar1);\n    fcn.00444d0c(uVar1, &var_14h, 0x10);\n    iVar4 = var_14h;\n    uVar1 = *in_ECX;\n    var_20h = (var_8h - var_10h) / 2 + var_10h;\n    arg_ch[1] = var_20h;\n    uVar1 = fcn.00444c65(0x10, uVar1);\n    if (iVar4 <= var_ch) {\n        do {\n            var_24h = iVar4;\n            fcn.00444d41(&var_24h, uVar1, 0x10);\n            (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x1111, 0, uVar1);\n            fcn.00444d0c(uVar1, &var_24h, 0x10);\n            if ((var_1ch & 0x40) != 0) break;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 <= var_ch);\n        iVar5 = iVar4;\n        if (iVar4 <= var_ch) {\n            do {\n                var_24h = iVar5;\n                fcn.00444d41(&var_24h, uVar1, 0x10);\n                (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x1111, 0, uVar1);\n                fcn.00444d0c(uVar1, &var_24h, 0x10);\n                if ((var_1ch & 0x40) == 0) break;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 <= var_ch);\n            if (iVar5 <= var_ch) {\n                uVar3 = 1;\n                *arg_ch = (iVar5 - iVar4) / 2 + iVar4;\n            }\n        }\n    }\n    uVar2 = fcn.00402e39();\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 718
    },
    "004416f1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004416f1(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint lpsz;\n    uint rguid;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    if (arg_ch == 0x1f) {\n        puVar6 = NULL;\n        if (*(arg_8h + 8) != NULL) {\n            puVar6 = *(arg_8h + 8);\n        }\n    }\n    else {\n        if (arg_ch == 0x1e) {\n            uVar5 = *(arg_8h + 8);\n            uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, uVar5, 0xffffffff, 0, 0);\n            uVar3 = fcn.0042010a(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            (*pcVar1)(0, 0, uVar5, 0xffffffff, uVar3, uVar2);\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar3);\n            fcn.0042017e(uVar3);\n            return uVar5;\n        }\n        if (arg_ch == 8) {\n            uVar5 = *(arg_8h + 8);\n            uVar3 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar5);\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar5);\n            return uVar3;\n        }\n        if (arg_ch != 0x48) {\n            return 0;\n        }\n        puVar6 = *(arg_8h + 8);\n        rguid = *puVar6;\n        uStack16 = puVar6[1];\n        uStack12 = puVar6[2];\n        uStack8 = puVar6[3];\n        iVar4 = (*_sym.imp.ole32.dll_StringFromGUID2)(&rguid, &lpsz, 0x28);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar6 = &lpsz;\n    }\n    uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(puVar6);\n    return uVar5;\n}\n",
        "token_count": 581
    },
    "004417c8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004417c8(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint lpsz;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    puVar6 = NULL;\n    if (arg_ch == 0x1f) {\n        if (*(arg_8h + 8) != NULL) {\n            puVar6 = **(arg_8h + 8);\n        }\n    }\n    else {\n        if (arg_ch == 0x1e) {\n            uVar5 = **(arg_8h + 8);\n            uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, uVar5, 0xffffffff, 0, 0);\n            uVar3 = fcn.0042010a(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            (*pcVar1)(0, 0, uVar5, 0xffffffff, uVar3, uVar2);\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar3);\n            fcn.0042017e(uVar3);\n            return uVar5;\n        }\n        if (arg_ch == 8) {\n            uVar5 = **(arg_8h + 8);\n            uVar3 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar5);\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar5);\n            return uVar3;\n        }\n        if (arg_ch != 0x48) {\n            return 0;\n        }\n        iVar4 = (*_sym.imp.ole32.dll_StringFromGUID2)(*(arg_8h + 8), &lpsz, 0x28);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar6 = &lpsz;\n    }\n    uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(puVar6);\n    return uVar5;\n}\n",
        "token_count": 510
    },
    "00441a56": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl\nfcn.00441a56(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, int32_t *arg_1ch, \n            ushort *arg_20h)\n\n{\n    int32_t *piVar1;\n    ushort uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint32_t *arg_ch_00;\n    int32_t iVar7;\n    uint32_t *arg_ch_01;\n    uint32_t unaff_EBX;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint *arg_8h_00;\n    uint32_t uVar10;\n    uint *unaff_ESI;\n    int16_t *piVar11;\n    uint *puVar12;\n    ushort *pvargDest;\n    uint32_t unaff_EDI;\n    uint32_t uVar13;\n    uchar *puVar14;\n    uint *in_stack_ffffff9c;\n    uint *puVar15;\n    uint *in_stack_ffffffa4;\n    uint *puStack84;\n    uint *puStack76;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint32_t uStack56;\n    uint *puStack52;\n    uint *puStack48;\n    uint uStack44;\n    uchar auStack40 [4];\n    int32_t iStack36;\n    uint uStack32;\n    uchar auStack28 [4];\n    uchar auStack24 [4];\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    if (arg_ch == 0) {\n        if ((arg_18h & 2) == 0) {\n            return 0x80020003;\n        }\n        if (arg_1ch[2] == 0) {\n            if (arg_20h == NULL) {\n                return 0x80020010;\n            }\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg_20h);\n            *arg_20h = 0x13;\n            *(arg_20h + 4) = *(arg_8h + 0x14);\n            return NULL;\n        }\n    }\n    else {\n        uVar13 = 0;\n        if (*(arg_8h + 0x18) == 0) {\n            return 0x80004001;\n        }\n        iVar7 = arg_ch * 0x1c;\n        puVar6 = arg_1ch[2];\n        if (puVar6 == *(*(arg_8h + 0xc) + 0x30 + iVar7)) {\n            puVar8 = NULL;\n            puVar12 = puVar6;\n            arg_8h_00 = puVar6;\n            puStack76 = puVar6;\n            if (puVar6 != NULL) {\n                do {\n                    puVar12 = arg_8h_00;\n                    arg_8h_00 = puVar12;\n                    if (*(*(*(arg_8h + 0xc) + 0x20 + iVar7) + 4 + puVar8 * 8) == 0x24) {\n                        piVar11 = ((arg_1ch[2] - puVar8) + -1) * 0x10 + *arg_1ch;\n                        if (*piVar11 != 0x24) {\n                            return 0x80020008;\n                        }\n                        (*_sym.imp.OLEAUT32.dll_VariantClear)(auStack24);\n                        piVar1 = *(piVar11 + 6);\n                        uStack20 = 0;\n                        uStack16 = 0;\n                        arg_8h_00 = puVar12;\n                        (**(*piVar1 + 0x28))(piVar1, 0, 0, auStack28);\n                        if (iStack36 < 1) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack44);\n                            return 0x80020008;\n                        }\n                        puVar12 = unaff_ESI + iStack36 + -1;\n                        unaff_ESI = puVar12;\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack44);\n                        uStack16 = 0;\n                        uStack12 = 0;\n                        puVar6 = puStack76;\n                    }\n                    puVar8 = puVar8 + 1;\n                } while (puVar8 < puVar6);\n            }\n            uStack72 = fcn.0042010a(-(ZEXT48(puVar12) * 2 >> 0x20 != 0) | ZEXT48(puVar12) * 2);\n            uStack68 = fcn.0042010a(-(ZEXT48(puVar12) * 4 >> 0x20 != 0) | ZEXT48(puVar12) * 4);\n            uVar9 = -(ZEXT48(puVar12) * 0x10 >> 0x20 != 0) | ZEXT48(puVar12) * 0x10;\n            puStack84 = fcn.0042010a(-(0xfffffffb < uVar9) | uVar9 + 4);\n            puVar6 = arg_8h_00;\n            if (puStack84 == NULL) {\n                puStack84 = NULL;\n            }\n            else {\n                *puStack84 = puVar12;\n                puStack84 = puStack84 + 1;\n                fcn.0041ac65(arg_8h_00, 0x43a215);\n            }\n            puVar12 = fcn.0042010a(-(ZEXT48(arg_8h_00) * 4 >> 0x20 != 0) | ZEXT48(arg_8h_00) * 4);\n            iStack64 = fcn.0042010a(-(ZEXT48(arg_8h_00) * 4 >> 0x20 != 0) | ZEXT48(arg_8h_00) * 4);\n            puStack52 = NULL;\n            if (puStack76 != NULL) {\n                puVar8 = 0xffffffff;\n                arg_8h_00 = puVar6;\n                do {\n                    puVar8 = puVar8 + 1;\n                    *(iStack64 + puStack52 * 4) = puVar8;\n                    *(uStack72 + puVar8 * 2) = 0xffff;\n                    *(uStack68 + puVar8 * 4) = 0;\n                    puVar12[puVar8] = 0;\n                    unaff_EDI = ((arg_1ch[2] - puStack52) + -1) * 0x10 + *arg_1ch;\n                    uVar3 = *(*(*(arg_8h + 0xc) + 0x20 + iVar7) + 4 + puStack52 * 8);\n                    in_stack_ffffffa4 = uVar3;\n                    uStack56 = in_stack_ffffffa4 & 0xfff;\n                    puStack48 = in_stack_ffffffa4;\n                    if ((uVar3 == 0x24) || (uStack44 = 0x4024,  uVar3 == 0x4024)) {\n                        puStack60 = puVar8;\n                        fcn.00442adc(unaff_EDI, &puStack48, puStack84, puVar12, uStack72, uStack68, &puStack60);\n                        puVar8 = arg_8h_00;\n                        puVar6 = puStack76;\n                        arg_8h_00 = puVar8;\n                    }\n                    else {\n                        puStack60 = puStack84 + puVar8 * 4;\n                        puVar6 = in_stack_ffffffa4;\n                        iVar4 = fcn.004429cb(unaff_EDI, puStack60, uStack56);\n                        in_stack_ffffffa4 = puVar6;\n                        if (iVar4 == 0) {\n                            unaff_EDI = uStack72;\n                            if (uStack68 == 0x48) {\n                                unaff_EBX = (unaff_EBX & 0x4000) + 0x13;\n                                uVar5 = fcn.00442c80(uStack72);\n                                *(unaff_EDI + puVar8 * 4) = uVar5;\n                                in_stack_ffffffa4 = puVar6;\n                            }\n                            else {\n                                (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                                puStack60[2] = 0;\n                                puStack60[3] = 0;\n                                *puStack60 = puVar6;\n                                in_stack_ffffffa4 = puVar6;\n                            }\n                        }\n                    }\n                    if (puVar6 == 0x1f) {\n                        in_stack_ffffffa4 = 0x8;\n                        puVar6 = puVar12;\n                        uVar5 = fcn.004418c0(puStack84 + puVar8 * 4);\n                        puVar12 = in_stack_ffffff9c;\ncode_r0x00441d4a:\n                        puVar12[puVar8] = uVar5;\n                        in_stack_ffffff9c = puVar12;\n                        puVar15 = puVar6;\n                    }\n                    else {\n                        puVar15 = puVar12;\n                        if (puVar6 == 0x1e) {\n                            in_stack_ffffffa4 = 0x8;\n                            puVar6 = puVar12;\n                            uVar5 = fcn.00441898(puStack84 + puVar8 * 4);\n                            puVar12 = in_stack_ffffff9c;\n                            goto code_r0x00441d4a;\n                        }\n                    }\n                    uVar2 = SUB42(puVar6, 0);\n                    if ((puVar6 & 0x4000) != 0) {\n                        uVar9 = uStack56 & 0xffff;\n                        if (uVar9 == 8) {\n                            puVar6 = fcn.0042010a(4);\n                            *puVar6 = puStack84[puVar8 * 4 + 2];\ncode_r0x00441e5a:\n                            puVar15[puVar8] = puVar6;\n                        }\n                        else {\n                            if (uVar9 == 9) {\n                                puVar6 = fcn.00442893(puStack84 + puVar8 * 4);\n                                goto code_r0x00441e5a;\n                            }\n                            if (uVar9 == 0xc) {\n                                puVar6 = fcn.00442943(puStack84 + puVar8 * 4);\n                                goto code_r0x00441e5a;\n                            }\n                            if (uVar9 == 0x1e) {\n                                puVar6 = fcn.004428c8(puStack84 + puVar8 * 4);\n                                goto code_r0x00441e5a;\n                            }\n                            if (uVar9 == 0x1f) {\n                                puVar6 = fcn.00442978(puStack84 + puVar8 * 4);\n                                goto code_r0x00441e5a;\n                            }\n                            if (uVar9 == 0x48) {\n                                puVar6 = fcn.004427f7(puStack84 + puVar8 * 4);\n                                goto code_r0x00441e5a;\n                            }\n                            if (puVar12[puVar8] == 0) {\n                                puVar6 = fcn.0044290f(puStack84 + puVar8 * 4);\n                                goto code_r0x00441e5a;\n                            }\n                        }\n                        puVar6 = puStack84 + puVar8 * 4;\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar6);\n                        uVar2 = SUB42(in_stack_ffffffa4, 0);\n                        *puVar6 = uVar2;\n                        puVar6[2] = puVar15[puVar8];\n                    }\n                    if (*(uStack72 + puVar8 * 2) == -1) {\n                        *(uStack72 + puVar8 * 2) = uVar2;\n                    }\n                    if (*(uStack68 + puVar8 * 4) == 0) {\n                        *(uStack68 + puVar8 * 4) = puStack84 + puVar8 * 4;\n                    }\n                    puStack52 = puStack52 + 1;\n                    puVar12 = puVar15;\n                } while (puStack52 < puStack76);\n            }\n            puVar14 = auStack40;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)();\n            iStack36 = 0;\n            uStack32 = 0;\n            uVar3 = *(*(arg_8h + 0xc) + 0x36 + puStack84);\n            if (((((uVar3 & 0x4000) != 0) || (uVar3 == 0x1e)) || (uVar3 == 0x1f)) || (uVar3 == 0x48)) {\n                uVar3 = 0x15;\n            }\n            puVar6 = &uStack44;\n            arg_ch_01 = arg_ch * 4 - 4;\n            uVar9 = uStack72;\n            arg_ch_00 = (*_sym.imp.OLEAUT32.dll_VariantChangeTypeEx)\n                                  (*(arg_8h + 0x14), arg_ch_01, *(*(arg_8h + 0xc) + 0x2c + puStack84), uVar3, arg_8h_00\n                                   , puStack76);\n            if (arg_20h != NULL) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg_20h);\n                uVar3 = *(*(arg_8h + 0xc) + 0x36 + unaff_ESI);\n                arg_ch_01 = uVar3;\n                if (((uVar3 & 0x4000) == 0) || (puStack60 == NULL)) {\n                    if ((arg_ch_01 < 0x1e) || ((0x1f < arg_ch_01 && (arg_ch_01 != 0x48)))) {\n                        arg_ch_01 = &uStack68;\n                        iVar7 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg_20h);\n                        if (iVar7 < 0) {\n                            *(arg_20h + 4) = 0;\n                            *(arg_20h + 6) = 0;\n                        }\n                    }\n                    else {\n                        *arg_20h = 8;\n                        uVar5 = fcn.004416f1(&uStack68, arg_ch_01);\n                        *(arg_20h + 4) = uVar5;\n                    }\n                }\n                else {\n                    uStack68 = uStack68 & 0xffff0000 | uVar3;\n                    arg_ch_01 = arg_ch_01 & 0xfff;\n                    fcn.00442a49(&uStack68, &uStack68, arg_ch_01);\n                }\n            }\n            uVar10 = 0;\n            if (unaff_EDI != 0) {\n                do {\n                    uVar3 = *(*(puVar14 + *(arg_8h + 0xc) + 0x20) + 4 + uVar10 * 8);\n                    pvargDest = ((arg_1ch[2] - uVar10) + -1) * 0x10 + *arg_1ch;\n                    if (((uVar3 & 0x4000) == 0) || ((puVar6 + in_stack_ffffff9c[uVar10] * 4)[2] == 0)) {\n                        if ((uVar3 == 0x1f) || (uVar3 == 0x1e)) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(pvargDest);\n                            *pvargDest = 8;\n                            arg_ch_01 = arg_ch_00;\n                            uVar5 = fcn.004416f1(in_stack_ffffffa4[uVar10] * 0x10 + unaff_EDI, arg_ch_00);\n                            *(pvargDest + 4) = uVar5;\n                        }\n                    }\n                    else {\n                        fcn.00442a49(puVar6 + in_stack_ffffff9c[uVar10] * 4, pvargDest, uVar3 & 0xfff);\n                        if ((in_stack_ffffff9c == 0xc) && (iVar7 = *(unaff_EDI + uVar10 * 4),  arg_ch_01[iVar7] != 0)) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg_ch_01[iVar7]);\n                        }\n                    }\n                    uVar10 = uVar10 + 1;\n                } while (uVar10 < unaff_EDI);\n            }\n            if (uVar9 != 0) {\n                do {\n                    fcn.0042017e(arg_8h_00[uVar13]);\n                    uVar13 = uVar13 + 1;\n                } while (uVar13 < uVar9);\n            }\n            fcn.0042017e(unaff_ESI);\n            fcn.0042017e(unaff_EBX);\n            if (puVar6 != NULL) {\n                fcn.00441693(unaff_EBX);\n            }\n            fcn.0042017e(arg_8h_00);\n            fcn.0042017e(in_stack_ffffff9c);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&puStack76);\n            return puStack84;\n        }\n    }\n    return 0x8002000e;\n}\n",
        "token_count": 3944
    },
    "004427f7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.004427f7(int16_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint pvargDest;\n    int32_t var_ch;\n    uint var_8h;\n    \n    puVar2 = fcn.0042010a(0x10);\n    if (*arg_8h == 8) {\n        (*_sym.imp.ole32.dll_CLSIDFromString)(*(arg_8h + 4), puVar2);\n    }\n    else if (*arg_8h == 0x24) {\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n        var_ch = 0;\n        var_8h = 0;\n        iVar3 = (**(**(arg_8h + 6) + 0x2c))(*(arg_8h + 6), 0, 0, &pvargDest, 0);\n        if (iVar3 < 0) {\n            fcn.0042017e(puVar2);\n            puVar2 = NULL;\n        }\n        else {\n            if (pvargDest == -0x7ff4) {\n                puVar1 = *(var_ch + 8);\n                *puVar2 = *puVar1;\n                puVar2[1] = puVar1[1];\n                puVar2[2] = puVar1[2];\n                puVar2[3] = puVar1[3];\n            }\n            pvargDest._0_2_ = 0x1a;\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    }\n    else {\n        puVar1 = *(arg_8h + 4);\n        *puVar2 = *puVar1;\n        puVar2[1] = puVar1[1];\n        puVar2[2] = puVar1[2];\n        puVar2[3] = puVar1[3];\n    }\n    return puVar2;\n}\n",
        "token_count": 461
    },
    "00442adc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00442adc(int16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint pvargDest;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    \n    piVar1 = arg_20h;\n    if (*arg_8h == 0x24) {\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n        var_14h = 0;\n        var_10h = 0;\n        iVar3 = (**(**(arg_8h + 6) + 0x28))(*(arg_8h + 6), 0, 0, &pvargDest);\n        uVar2 = var_14h;\n        if (((-1 < iVar3) && (0 < var_14h)) &&\n           (iVar3 = (**(**(arg_8h + 6) + 0x2c))(*(arg_8h + 6), 0, 0, &pvargDest, 0),  piVar1 = arg_20h,  -1 < iVar3)) {\n            var_8h = var_14h;\n            if ((*arg_ch & 0x4000) == 0) {\n                var_8h = *(var_14h + 0xc) + (1 - uVar2) * 4;\n                var_ch = *(var_14h + 8);\n                arg_ch = NULL;\n                if (uVar2 != 0) {\n                    do {\n                        arg_20h = *(var_ch + arg_ch * 4);\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*piVar1 * 0x10 + arg_10h);\n                        iVar3 = *piVar1 * 0x10;\n                        *(iVar3 + arg_10h) = 0x13;\n                        if (arg_ch == uVar2 - 1) {\n                            puVar4 = arg_10h + 8 + iVar3;\n                            *puVar4 = 0;\n                            fcn.0041faa0(puVar4, &arg_20h, var_8h);\n                        }\n                        else {\n                            *(iVar3 + 8 + arg_10h) = arg_20h;\n                        }\n                        iVar3 = *piVar1;\n                        *(arg_18h + iVar3 * 2) = 0x13;\n                        *(arg_1ch + iVar3 * 4) = iVar3 * 0x10 + arg_10h;\n                        *(arg_14h + iVar3 * 4) = 0;\n                        *piVar1 = iVar3 + 1;\n                        arg_ch = arg_ch + 1;\n                    } while (arg_ch < uVar2);\n                }\n                *piVar1 = *piVar1 + -1;\n            }\n            else {\n                *arg_ch = 0x13;\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*arg_20h * 0x10 + arg_10h);\n                iVar3 = *piVar1;\n                *(arg_10h + iVar3 * 0x10) = *arg_ch;\n                *(arg_10h + 8 + iVar3 * 0x10) = *(var_8h + 8);\n            }\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    }\n    else if ((*arg_ch & 0x4000) != 0) {\n        *arg_ch = 0x13;\n        *(arg_10h + *arg_20h * 0x10) = 0x13;\n        (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(arg_8h, arg_8h, 0, 0x13);\n        *(arg_10h + 8 + *piVar1 * 0x10) = *(arg_8h + 4);\n    }\n    return;\n}\n",
        "token_count": 958
    },
    "0044757b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044757b(uint noname_0, uint arg_ch)\n\n{\n    uint uVar1;\n    uint lpText;\n    uint lpCaption;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    (*_sym.imp.USER32.dll_LoadStringW)(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0, 0x1389, &lpText, 0x100);\n    (*_sym.imp.USER32.dll_LoadStringW)(uVar1);\n    if (arg_ch == '\\0') {\n        (*_sym.imp.USER32.dll_MessageBoxW)(0, &lpText, &lpCaption, 0x11010);\n    }\n    else {\n        fcn.00422c67(L\"%s (%d) : ==> %s: \\n%s \\n%s\\n\", &lpCaption);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00448190": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00448190(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    iVar1 = *arg_10h;\n    if ((iVar1 == in_ECX) && (*arg_14h == in_EDX)) {\n        return 0;\n    }\n    if (iVar1 < in_ECX) {\n        iVar2 = (in_ECX - iVar1) / arg_8h;\n        if ((iVar2 == 0) || (iVar2 < arg_ch)) {\n            iVar2 = arg_ch;\n        }\n        if (iVar1 + iVar2 <= in_ECX) {\n            *arg_10h = iVar1 + iVar2;\n            goto code_r0x004481f9;\n        }\n    }\n    else {\n        if (iVar1 <= in_ECX) goto code_r0x004481f9;\n        iVar2 = (iVar1 - in_ECX) / arg_8h;\n        if ((iVar2 == 0) || (iVar2 < arg_ch)) {\n            iVar2 = arg_ch;\n        }\n        if (in_ECX <= iVar1 - iVar2) {\n            *arg_10h = iVar1 - iVar2;\n            goto code_r0x004481f9;\n        }\n    }\n    *arg_10h = in_ECX;\ncode_r0x004481f9:\n    iVar1 = *arg_14h;\n    if (iVar1 < in_EDX) {\n        arg_8h = (in_EDX - iVar1) / arg_8h;\n        if ((arg_8h == 0) || (arg_8h < arg_ch)) {\n            arg_8h = arg_ch;\n        }\n        if (arg_8h + iVar1 <= in_EDX) {\n            *arg_14h = arg_8h + iVar1;\n            return 1;\n        }\n    }\n    else {\n        if (iVar1 <= in_EDX) {\n            return 1;\n        }\n        arg_8h = (iVar1 - in_EDX) / arg_8h;\n        if ((arg_8h == 0) || (arg_8h < arg_ch)) {\n            arg_8h = arg_ch;\n        }\n        if (in_EDX <= iVar1 - arg_8h) {\n            *arg_14h = iVar1 - arg_8h;\n            return 1;\n        }\n    }\n    *arg_14h = in_EDX;\n    return 1;\n}\n",
        "token_count": 586
    },
    "00448355": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "delay execution"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448355(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint lpFrequency;\n    double dStack36;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t lpPerformanceCount;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (-1 < param_1) {\n        if (param_1 == 0) {\n            param_1 = 0;\n        }\n        else if ((param_1 < 0xf) &&\n                (iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&lpPerformanceCount),  iVar1 != 0)) {\n            (*_sym.imp.KERNEL32.dll_QueryPerformanceFrequency)(&lpFrequency);\n            do {\n                (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_8h);\n                var_18h = var_8h - lpPerformanceCount;\n                var_14h = (var_4h - var_ch) - (var_8h < lpPerformanceCount);\n                dStack36 = _lpFrequency;\n                uVar2 = fcn.00471e16();\n            } while (uVar2 < param_1);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(param_1);\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "0044882c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0044882c(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar1 = fcn.004218fb(param_1);\n    uVar2 = uVar1 - (uVar1 >> 0x1f);\n    uVar3 = uVar2 & 0xfffffffe;\n    if (uVar1 == uVar3) {\n        iVar4 = 0;\n        if (0 < uVar1) {\n            do {\n                uVar3 = fcn.0041bcea(8);\n                if (uVar3 == '\\0') {\n                    return uVar3 & 0xffffff00;\n                }\n                uVar3 = iVar4 / 2;\n                iVar4 = iVar4 + 2;\n                *(uVar3 + param_2) = var_14h;\n            } while (iVar4 < uVar1);\n        }\n        uVar2 = CONCAT31(uVar3 >> 8, 1);\n    }\n    else {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    return uVar2;\n}\n",
        "token_count": 302
    },
    "0044b944": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0044b944(int32_t arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_14h;\n    \n    if ((*(in_ECX + 0xc) != 8) && (*(arg_8h + 0xc) != 8)) {\n        cVar1 = fcn.0041d5f6(0x2a);\n        if ((cVar1 == '\\0') && (cVar1 = fcn.0041d5f6(0x2a),  cVar1 == '\\0')) {\n            cVar1 = fcn.0040d2c0(0xe);\n            if ((cVar1 == '\\0') && (cVar1 = fcn.0040d2c0(0xe),  cVar1 == '\\0')) {\n                fcn.004084a6();\n                fcn.004084a6();\n                uVar2 = fcn.00405b2a();\n                return uVar2;\n            }\n            cVar1 = fcn.0040d2c0(0xe);\n            if ((cVar1 != '\\0') && (cVar1 = fcn.0040d2c0(0xe),  cVar1 != '\\0')) {\n                fcn.0044afce(&var_24h);\n                fcn.0044afce(&var_14h);\n                uVar2 = fcn.00405b2a();\n                fcn.00405cd3();\n                fcn.00405cd3();\n                return uVar2;\n            }\n        }\n        else {\n            cVar1 = fcn.0041d5f6(0x2a);\n            if ((cVar1 != '\\0') && (cVar1 = fcn.0041d5f6(0x2a),  cVar1 != '\\0')) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 449
    },
    "0044c846": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c846(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint var_dch;\n    \n    fcn.0044c6a0();\n    fcn.0044c6e4(arg_10h);\n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar1 = fcn.0044c81a();\n            *(uVar2 + arg_8h) = *(uVar2 + arg_8h) ^ uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "0044d03f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044d03f(uint *param_1)\n\n{\n    uint var_160h;\n    uint var_80h;\n    uint var_44h;\n    uint var_3ch;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_14h;\n    \n    fcn.004041a7(*param_1, 0, 0);\n    fcn.0040417d(&var_80h, 0x40, 1, *param_1);\n    fcn.004041a7(*param_1, var_44h, 0);\n    fcn.004041a7(*param_1, 4, 1);\n    fcn.0040417d(&var_14h, 0x14, 1, *param_1);\n    fcn.0040417d(&var_160h, 0x60, 1, *param_1);\n    if (var_160h == 0x20b) {\n        fcn.004041a7(*param_1, 0x10, 1);\n    }\n    fcn.004041a7(*param_1, 0x80, 1);\n    fcn.004041a7(*param_1, var_14h._2_2_ * 0x28 + -0x28, 1);\n    fcn.0040417d(&var_3ch, 0x28, 1, *param_1);\n    fcn.004041a7(*param_1, var_2ch + var_28h, 0);\n    return;\n}\n",
        "token_count": 375
    },
    "0044fa15": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create shortcut via IShellLink"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.0044fa15(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint uStack776;\n    uint uStack756;\n    uint uStack736;\n    int32_t *piStack692;\n    uint uStack688;\n    uchar *puStack684;\n    int32_t *piStack680;\n    uint uStack676;\n    int32_t iStack672;\n    int32_t *piStack668;\n    uchar *puStack664;\n    uint uStack660;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    \n    iVar3 = **(arg_8h + 4);\n    fcn.004084a6();\n    iVar3 = *(iVar3 + 8);\n    iVar1 = *(iVar3 + 4);\n    piVar7 = 0xffffffff;\n    piVar6 = *(iVar3 + 0xc);\n    *piVar6 = *piVar6 + 1;\n    iVar3 = fcn.0045267a(L\".lnk\", 2, 1, 0xffffffff, 0xffffffff, 0xffffffff);\n    if (iVar3 == iVar1) {\n        fcn.004039e8(L\".lnk\");\n    }\n    fcn.0040ca8e(0x49dbf0);\n    piVar6 = 0x1;\n    uStack660 = 0x44faa0;\n    fcn.0044d7e4(1, 0);\n    uStack660 = 0x44faa9;\n    cVar2 = fcn.00446f4b();\n    if (cVar2 != '\\0') {\n        uStack660 = 0;\n        puStack664 = 0x44fab8;\n        (*_sym.imp.ole32.dll_CoInitialize)();\n        puStack664 = &stack0xfffffd78;\n        piStack668 = 0x48d8ec;\n        iStack672 = 1;\n        uStack676 = 0;\n        piStack680 = 0x48da7c;\n        puStack684 = 0x44fad0;\n        iVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)();\n        if (-1 < iVar3) {\n            puStack684 = &stack0xfffffd7c;\n            uStack688 = 0x48d94c;\n            piStack692 = piStack668;\n            iVar3 = (***piStack668)();\n            if (-1 < iVar3) {\n                iVar3 = (**(*piVar6 + 0x14))();\n                if (-1 < iVar3) {\n                    fcn.00403320(arg_ch, 1);\n                    (**(*piStack692 + 0xc))();\n                    uVar4 = fcn.0040caee(&stack0xfffffd7c);\n                    uStack736 = 0x44fb47;\n                    fcn.00408182(uVar4);\n                    uStack736 = 0;\n                    fcn.00412320(arg_ch, &stack0xfffffd34, 1);\n                    uStack736 = 0x44fb62;\n                    fcn.00412570();\n                    uStack736 = 0x44fb6b;\n                    fcn.00405cd3();\n                    uStack736 = 0x104;\n                    piVar6 = &stack0xfffffd74;\n                    (*piVar7[8])();\n                    uVar4 = fcn.0040caee(&stack0xfffffd68);\n                    uStack756 = 0x44fb93;\n                    fcn.00408182(uVar4);\n                    uStack756 = 1;\n                    fcn.00412320(arg_ch, &stack0xfffffd20, 1);\n                    uStack756 = 0x44fbae;\n                    fcn.00412570();\n                    uStack756 = 0x44fbb7;\n                    fcn.00405cd3();\n                    uStack756 = 0x104;\n                    piVar5 = &stack0xfffffd60;\n                    (**(*piVar6 + 0x28))();\n                    uVar4 = fcn.0040caee(&stack0xfffffd54);\n                    uStack776 = 0x44fbdf;\n                    fcn.00408182(uVar4);\n                    uStack776 = 2;\n                    fcn.00412320(arg_ch, &stack0xfffffd0c, 1);\n                    uStack776 = 0x44fbfa;\n                    fcn.00412570();\n                    uStack776 = 0x44fc03;\n                    fcn.00405cd3();\n                    uStack776 = 0x104;\n                    piVar6 = &stack0xfffffd4c;\n                    (**(*piVar5 + 0x18))();\n                    uVar4 = fcn.0040caee(&stack0xfffffd40);\n                    fcn.00408182(uVar4);\n                    fcn.00412320(arg_ch, &stack0xfffffcf8, 1);\n                    fcn.00412570();\n                    fcn.00405cd3();\n                    piVar5 = &stack0xfffffd38;\n                    (**(*piVar6 + 0x40))(piVar6);\n                    uVar4 = fcn.0040caee(&stack0xfffffd28);\n                    fcn.00408182(uVar4);\n                    fcn.00412320(arg_ch, &stack0xfffffce0, 1);\n                    fcn.00412570();\n                    fcn.00405cd3();\n                    fcn.00412320(arg_ch, &stack0xfffffce0, 1);\n                    fcn.00412570();\n                    (**(*piVar5 + 0x38))(piVar5, &stack0xfffffd18);\n                    piStack680 = piVar7;\n                    iStack672 = 0;\n                    piStack668 = 0x1;\n                    fcn.00412320(arg_ch, &stack0xfffffd58, 1);\n                    fcn.00412570();\n                    fcn.0044d7e4(0, 0);\n                }\n                (**(*piStack668 + 8))();\n            }\n            (**(*piStack680 + 8))();\n        }\n        puStack684 = 0x44fd33;\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    uStack660 = 0x44fd3c;\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1450
    },
    "00452f47": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452f47(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_8h = 0;\n    var_4h = 1;\n    if (1 < *(arg_8h + 8)) {\n        fcn.0040d89e(*(*(arg_8h + 4) + 4));\n    }\n    arg_8h_00 = &var_10h;\n    fcn.004113a0(arg_8h_00);\n    uVar1 = fcn.0040cdb4();\n    uVar1 = fcn.0046b0e9(uVar1, arg_8h_00);\n    fcn.00412570();\n    arg_ch[3] = 1;\n    *arg_ch = uVar1;\n    fcn.00412570();\n    return 0;\n}\n",
        "token_count": 238
    },
    "00453768": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453768(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *arg_8h_00;\n    char cVar1;\n    uint arg_8h_01;\n    uint *var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_ch;\n    arg_8h_01 = 0;\n    fcn.00403320(arg_ch, 1);\n    if (*(arg_8h + 8) != 0) {\n        arg_8h_01 = fcn.0044be63();\n    }\n    cVar1 = fcn.0046d852(arg_8h_01, &arg_ch, &arg_8h, &var_4h, &var_8h, &var_ch);\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        *arg_8h_00 = 0;\n        arg_8h_00[3] = 1;\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        var_1ch = arg_ch;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00412320(arg_8h_00, &var_1ch, 1);\n        fcn.00412570();\n        var_1ch = arg_8h;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00412320(arg_8h_00, &var_1ch, 1);\n        fcn.00412570();\n        var_1ch = var_4h;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00412320(arg_8h_00, &var_1ch, 1);\n        fcn.00412570();\n        var_1ch = var_8h;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00412320(arg_8h_00, &var_1ch, 1);\n        fcn.00412570();\n        var_1ch = var_ch;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00412320(arg_8h_00, &var_1ch, 1);\n        fcn.00412570();\n    }\n    return 0;\n}\n",
        "token_count": 575
    },
    "00453a00": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453a00(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *arg_8h_00;\n    int32_t iVar1;\n    uint arg_10h;\n    uint *var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = arg_ch;\n    arg_10h = 0;\n    fcn.00403320(arg_ch, 1);\n    if (*(arg_8h + 8) != 0) {\n        arg_10h = fcn.0044be63();\n    }\n    iVar1 = fcn.0046d9a7(&arg_ch, &arg_8h, arg_10h);\n    if (iVar1 == 0) {\n        fcn.0044d7e4(1, 0);\n        fcn.00412570();\n        *arg_8h_00 = 0;\n        arg_8h_00[3] = 1;\n    }\n    else {\n        var_10h = arg_ch;\n        var_8h = 0;\n        var_4h = 1;\n        fcn.00412320(arg_8h_00, &var_10h, 1);\n        fcn.00412570();\n        var_10h = arg_8h;\n        var_8h = 0;\n        var_4h = 1;\n        fcn.00412320(arg_8h_00, &var_10h, 1);\n        fcn.00412570();\n    }\n    return 0;\n}\n",
        "token_count": 356
    },
    "00456b60": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456b60(uint arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t arg_14h_00;\n    uint arg_8h_00;\n    uint var_a0h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0041cf79(arg_8h);\n    if (iVar1 != 0) {\n        var_ch = 0;\n        var_8h = 0;\n        var_4h = 0;\n        iVar2 = *(arg_ch + 8) - arg_14h;\n        var_10h = 0x49dc40;\n        if ((*(iVar1 + 0x18) <= iVar2) && (iVar2 <= *(iVar1 + 0x14))) {\n            fcn.0040c935(arg_8h);\n            fcn.004039e8(0x4b3a70);\n            arg_14h_00 = arg_14h;\n            if (arg_14h < *(arg_ch + 8)) {\n                do {\n                    fcn.0042592d(&var_a0h, 0x40, L\"AUTOITCALLVARIABLE%d\", arg_14h_00);\n                    fcn.0040caee(&var_a0h);\n                    fcn.0040d380(&var_20h, *(*(arg_ch + 4) + arg_14h_00 * 4), 0, 1);\n                    fcn.00405cd3();\n                    if (arg_14h_00 == arg_14h) {\n                        arg_8h_00 = 0x4b3e14;\n                    }\n                    else {\n                        arg_8h_00 = 0x4b3e18;\n                    }\n                    fcn.004039e8(arg_8h_00);\n                    fcn.004039e8(&var_a0h);\n                    arg_14h_00 = arg_14h_00 + 1;\n                } while (arg_14h_00 < *(arg_ch + 8));\n            }\n            fcn.004039e8(0x4b3a74);\n            fcn.004404c9();\n            return 1;\n        }\n        fcn.004404c9();\n    }\n    return 0;\n}\n",
        "token_count": 558
    },
    "0045a268": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "capture screenshot"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045a268(uint hgdiobj, int32_t *arg_ch, uint *arg_10h)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar7 = *arg_ch;\n    iVar9 = arg_ch[1];\n    var_1h._0_1_ = arg_ch[2] < iVar7;\n    bVar1 = arg_ch[3] < iVar9;\n    if (var_1h) {\n        *arg_ch = arg_ch[2];\n        arg_ch[2] = iVar7;\n    }\n    if (bVar1) {\n        arg_ch[1] = arg_ch[3];\n        arg_ch[3] = iVar9;\n    }\n    fcn.00456b19(*(in_ECX + 0x108), &var_1ch, hgdiobj);\n    arg_ch[2] = arg_ch[2] + var_1ch;\n    arg_ch[3] = arg_ch[3] + var_18h;\n    *arg_ch = *arg_ch + var_1ch;\n    arg_ch[1] = arg_ch[1] + var_18h;\n    var_44h = (arg_ch[2] - *arg_ch) + 1;\n    iVar9 = (arg_ch[3] - arg_ch[1]) + 1;\n    var_ch = iVar9;\n    var_8h = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar4 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(var_8h, var_44h, iVar9);\n    var_10h = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(var_8h);\n    var_14h = (*_sym.imp.GDI32.dll_SelectObject)(var_10h, uVar4);\n    iVar7 = var_ch;\n    uVar3 = var_10h;\n    if (bVar1) {\n        iVar9 = -iVar9;\n    }\n    iVar5 = var_44h;\n    if (var_1h != '\\0') {\n        iVar5 = -var_44h;\n    }\n    if (bVar1) {\n        iVar10 = arg_ch[3];\n    }\n    else {\n        iVar10 = arg_ch[1];\n    }\n    if (var_1h == '\\0') {\n        iVar8 = *arg_ch;\n    }\n    else {\n        iVar8 = arg_ch[2];\n    }\n    (*_sym.imp.GDI32.dll_StretchBlt)(var_10h, 0, 0, var_44h, var_ch, var_8h, iVar8, iVar10, iVar5, iVar9, 0xcc0020);\n    pcVar2 = _sym.imp.GDI32.dll_GetDIBits;\n    var_40h = -iVar7;\n    var_3ch._0_2_ = 1;\n    var_3ch._2_2_ = 0x20;\n    var_48h = 0x28;\n    var_38h = 0;\n    (*_sym.imp.GDI32.dll_GetDIBits)(uVar3, uVar4, 0, 0, 0, &var_48h, 0);\n    *arg_10h = var_34h;\n    uVar6 = fcn.0042010a(var_34h);\n    uVar3 = var_10h;\n    iVar7 = (*pcVar2)(var_10h, uVar4, 0, iVar7, uVar6, &var_48h, 0);\n    (*_sym.imp.GDI32.dll_SelectObject)(uVar3, var_14h);\n    (*_sym.imp.GDI32.dll_DeleteObject)(uVar4);\n    (*_sym.imp.GDI32.dll_DeleteDC)(uVar3);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, var_8h);\n    if (iVar7 == 0) {\n        fcn.0042017e(uVar6);\n        uVar6 = 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 1082
    },
    "0045e2fb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045e2fb(int32_t arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint arg_8h_00;\n    uint uVar4;\n    int16_t iVar5;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    uVar4 = 0;\n    var_5ch = 0x49dc40;\n    var_58h = 0;\n    var_54h = 0;\n    var_50h = 0;\n    var_3ch = 0;\n    var_34h = 0;\n    var_30h = 1;\n    var_4ch = 0;\n    var_44h = 0;\n    var_40h = 1;\n    var_2ch = 0;\n    var_24h = 0;\n    var_20h = 1;\n    var_8h = 0x49dbf0;\n    var_10h = 0;\n    fcn.0040d89e(*arg_10h);\n    var_ch = *arg_10h;\n    var_14h = 0x7f;\n    var_18h = 0x41;\ncode_r0x0045e366:\n    iVar3 = *(arg_8h + 4);\n    if (*(*(iVar3 + *arg_ch * 4) + 8) != 0x48) {\n        fcn.00440fb2();\n        iVar3 = *(arg_8h + 4);\n        puVar1 = *(iVar3 + *arg_ch * 4);\n        if (*(puVar1 + 2) == 0x47) {\n            *arg_ch = *arg_ch + -1;\n            var_8h = 0x49dbf0;\n        }\n        else if (*(puVar1 + 2) == 0x35) {\n            var_8h = **puVar1;\n        }\n    }\n    if (*(*(iVar3 + 4 + *arg_ch * 4) + 8) == 0x47) {\n        iVar3 = fcn.0045cdb5(arg_8h, arg_ch, &var_5ch);\n        if (iVar3 < 0) goto code_r0x0045e533;\n        var_10h = 1;\n    }\n    else if (*(*(iVar3 + *arg_ch * 4) + 8) == 0x35) {\n        *arg_ch = *arg_ch + 1;\n    }\n    iVar3 = *(arg_8h + 4);\n    var_1ch = *(*(iVar3 + *arg_ch * 4) + 8);\n    cVar2 = fcn.0044a563();\n    if (cVar2 == '\\0') {\n        if ((*(extraout_ECX + 8) != 0x4e) || (cVar2 = fcn.0040d2c0(0xf),  cVar2 == '\\0')) {\n            iVar3 = fcn.0045cd12(var_10h, &var_3ch, var_8h, &var_5ch, &var_2ch);\n            if (iVar3 < 0) goto code_r0x0045e63b;\n            cVar2 = fcn.0045cff8();\n            if (cVar2 == '\\0') {\n                if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) != 0x7f) {\n                    fcn.0044d7e4(1, 0);\n                }\ncode_r0x0045e5d9:\n                fcn.00412570();\n                fcn.00412570();\n                fcn.00412570();\n                fcn.004404c9();\n                return 0;\n            }\n            fcn.0040d89e(&var_2ch);\n            fcn.00412570();\n            var_20h = 1;\n            var_2ch = 0;\n            iVar5 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n            if (iVar5 == var_14h) goto code_r0x0045e5d9;\n            if (iVar5 == var_18h) {\n                *arg_ch = *arg_ch + -1;\n            }\n            else if (iVar5 != 0x35) {\n                fcn.0044d338(arg_8h, L\"Invalid characters behind Object assignment!\");\ncode_r0x0045e533:\n                fcn.00412570();\n                fcn.00412570();\n                fcn.00412570();\n                fcn.004404c9();\n                return 0xffffffff;\n            }\n            goto code_r0x0045e366;\n        }\n        if (*(*(iVar3 + 4 + *arg_ch * 4) + 8) == 0x4f) {\n            fcn.0041d6b4(var_8h);\n            var_ch = fcn.00444ed4(&var_6ch, 1, 0);\n            fcn.00412570();\n            fcn.0044ba33();\n            fcn.0040d89e(var_ch);\n            *arg_ch = *arg_ch + 2;\n            if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) == 0x7f) goto code_r0x0045e6ea;\n            goto code_r0x0045e366;\n        }\n        if (*(*(*(arg_8h + 4) + -4 + *arg_ch * 4) + 8) == 0x35) {\n            fcn.0041d6b4(var_8h);\n            uVar4 = fcn.00444ed4(&var_6ch, 1, 1);\n            *arg_10h = uVar4;\n            fcn.00412570();\n        }\n        else {\n            *arg_10h = var_ch;\n        }\n        uVar4 = 1;\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        iVar3 = fcn.0040fa40(arg_8h_00, arg_ch, &var_4ch, 0xffffffff);\n        if (iVar3 < 0) goto code_r0x0045e533;\n        iVar3 = *(*(arg_8h + 4) + *arg_ch * 4);\n        if (*(iVar3 + 8) == 0x7f) {\n            iVar5 = var_1ch;\n            if ((iVar5 != 0x41) && (iVar3 = fcn.0045cd12(0, &var_3ch, var_8h, &var_5ch, &var_2ch),  -1 < iVar3)) {\n                if (iVar5 == 0x52) {\n                    fcn.00414265(&var_2ch);\n                }\n                else {\n                    if (iVar5 == 0x53) {\n                        fcn.0044a955(&var_4ch);\n                    }\n                    else if (iVar5 == 0x54) {\n                        fcn.0044aa57(&var_4ch);\n                    }\n                    else {\n                        if (iVar5 == 0x55) {\n                            fcn.0044a875(&var_2ch);\n                            goto code_r0x0045e6ca;\n                        }\n                        fcn.0044af66(&var_4ch);\n                    }\n                    fcn.0040d89e(&var_2ch);\n                }\n            }\ncode_r0x0045e6ca:\n            fcn.0041baef(&var_4ch);\n            uVar4 = fcn.0045cd56(&var_3ch, var_8h, &var_5ch);\n            goto code_r0x0045e6ea;\n        }\n        fcn.0044d520(0x72, *(iVar3 + 10));\ncode_r0x0045e63b:\n        uVar4 = 0xffffffff;\n    }\ncode_r0x0045e6ea:\n    fcn.00412570();\n    fcn.00412570();\n    fcn.00412570();\n    fcn.004404c9();\n    return uVar4;\n}\n",
        "token_count": 2004
    },
    "0045e713": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045e713(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t *arg_10h_00;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint lpsz;\n    uint cchLength;\n    uint var_44h;\n    int32_t *var_40h;\n    uint var_3ch;\n    uint *var_34h;\n    uint var_30h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    piVar3 = arg_ch;\n    iVar5 = *(arg_8h + 4);\n    *arg_ch = *arg_ch + 2;\n    var_ch = 0x48;\n    if (*(*(iVar5 + *arg_ch * 4) + 8) == 0x48) {\n        fcn.0044d520(0x70, *(*(iVar5 + -8 + *arg_ch * 4) + 10));\n        return 0xffffffff;\n    }\n    fcn.0045d154(arg_8h);\n    arg_10h_00 = arg_ch;\n    iVar5 = *piVar3;\n    iVar4 = 0;\n    do {\n        iVar1 = *(*(var_24h + iVar5 * 4) + 8);\n        if (iVar1 == 0x47) {\n            iVar4 = iVar4 + 1;\n        }\n        else if (iVar1 == var_ch) {\n            iVar4 = iVar4 + -1;\n        }\n        else if ((iVar1 == 0x40) && (iVar4 == 0)) break;\n        if (iVar4 < 0) break;\n        iVar5 = iVar5 + 1;\n    } while( true );\n    var_3ch = 0;\n    var_34h = NULL;\n    var_30h = 1;\n    iVar5 = fcn.0040fa40(&var_28h, arg_ch, &var_3ch, iVar5);\n    if (iVar5 < 0) {\n        uVar6 = 0xffffffff;\n        goto code_r0x0045ea2f;\n    }\n    iVar5 = *arg_10h_00;\n    if (*(*(var_24h + iVar5 * 4) + 8) == 0x40) {\n        iVar5 = iVar5 + -1;\n    }\n    else {\n        iVar5 = iVar5 + -2;\n    }\n    *arg_10h_00 = iVar5;\n    fcn.0040b7ff(0x47);\n    arg_ch = 0xffffffff;\n    cVar2 = fcn.0040d2c0(0xd);\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.0040d2c0(0xe);\n        if (cVar2 != '\\0') {\n            fcn.0040b7ff(0x34);\n            uVar6 = fcn.0044afce(&lpsz);\n            fcn.0041df08(uVar6);\n            fcn.00405cd3();\n            piVar3 = fcn.00413680(1, &var_28h, arg_10h_00, arg_10h, &arg_ch + 3);\n            goto code_r0x0045e9c3;\n        }\n        cVar2 = fcn.0040d2c0(4);\n        if (cVar2 != '\\0') {\n            fcn.004084a6();\n            lpsz = *var_34h;\n            cchLength = var_34h[1];\n            var_44h = var_34h[2];\n            var_40h = var_34h[3];\n            *var_40h = *var_40h + 1;\n            fcn.0040b8a7();\n            (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n            var_8h = (**(**0x4c22ec + 4))(lpsz);\n            if (var_8h < 1) {\n                fcn.004084a6();\n                iVar5 = fcn.0041cf79(var_34h);\n                if (iVar5 != 0) {\n                    fcn.0040b7ff(0x34);\n                    fcn.004084a6();\n                    fcn.0041df08(var_34h);\n                    arg_ch = fcn.00413680(1, &var_28h, arg_10h_00, arg_10h, &arg_ch + 3);\n                }\n            }\n            else {\n                var_10h._0_2_ = 0xffff;\n                var_10h._2_2_ = 0;\n                fcn.0040b7ff(1);\n                var_18h = var_8h;\n                fcn.0044a485(&var_18h);\n                arg_ch = fcn.004144e0(1, &var_28h, arg_10h_00, arg_10h);\n                fcn.0044a46f();\n            }\n            fcn.00405cd3();\n            piVar3 = arg_ch;\n            goto code_r0x0045e9c3;\n        }\n    }\n    else {\n        var_10h._0_2_ = 0xffff;\n        var_10h._2_2_ = 0;\n        fcn.0040b7ff(1);\n        var_18h = fcn.0044afbf();\n        fcn.0044a485(&var_18h);\n        arg_ch = fcn.004144e0(1, &var_28h, arg_10h_00, arg_10h);\n        fcn.0044a46f();\n        piVar3 = arg_ch;\ncode_r0x0045e9c3:\n        uVar6 = 0;\n        if (-1 < piVar3) goto code_r0x0045ea2f;\n    }\n    uVar6 = 0;\n    iVar5 = 0;\n    iVar1 = *(*(var_24h + *arg_10h_00 * 4) + 8);\n    do {\n        if (iVar1 == 0x7f) goto code_r0x0045ea0b;\n        *arg_10h_00 = *arg_10h_00 + 1;\n        iVar1 = *(*(var_24h + *arg_10h_00 * 4) + 8);\n        if (iVar1 == 0x47) {\n            iVar5 = iVar5 + 1;\n        }\n        else if (iVar1 == var_ch) {\n            iVar5 = iVar5 + -1;\n        }\n    } while (-1 < iVar5);\n    *arg_10h_00 = *arg_10h_00 + 1;\ncode_r0x0045ea0b:\n    fcn.0044d7e4(0xdead, 0);\n    fcn.00407ba9(0xbeef, 0);\ncode_r0x0045ea2f:\n    fcn.00412570();\n    fcn.00405800();\n    return uVar6;\n}\n",
        "token_count": 1665
    },
    "0045ec7e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045ec7e(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar5 = 0;\n    uVar3 = *(*(arg_18h + -4 + arg_ch * 4) + 8) == 0x4e;\n    do {\n        iVar1 = *(*(arg_18h + arg_ch * 4) + 8);\n        if (iVar1 == 0x4e) {\n            if (iVar5 == 0) {\n                uVar3 = uVar3 + 1;\n            }\n            else {\ncode_r0x0045ed09:\n                if (uVar3 == 0) goto code_r0x0045edd3;\n            }\n        }\n        else if (iVar1 == 0x4f) {\n            if (iVar5 != 0) goto code_r0x0045ed09;\n            uVar3 = uVar3 - 1;\n        }\n        else {\n            if ((iVar1 == 0x41) && (uVar3 == 0)) {\n                if (*(*(arg_18h + 4 + arg_ch * 4) + 8) == 0x4e) {\n                    var_4h = 1;\n                    if (arg_10h != NULL) {\n                        *arg_10h = 1;\n                        piVar4 = arg_18h + (arg_ch + 2) * 4;\n                        iVar1 = *(*piVar4 + 8);\n                        while (iVar1 == 0x4e) {\n                            *arg_10h = *arg_10h + 1;\n                            piVar4 = piVar4 + 1;\n                            iVar1 = *(*piVar4 + 8);\n                        }\n                    }\n                    iVar6 = 1;\n                    piVar4 = arg_18h + (arg_ch + 2) * 4;\n                    iVar2 = 1;\n                    do {\n                        iVar1 = *(*piVar4 + 8);\n                        if (iVar1 == 0x4e) {\n                            if (iVar5 != 0) goto code_r0x0045edb8;\n                            iVar6 = iVar6 + 1;\n                        }\n                        else if (iVar1 == 0x4f) {\n                            if (iVar5 != 0) goto code_r0x0045edb8;\n                            iVar6 = iVar6 + -1;\n                        }\n                        else if (iVar1 == 0x47) {\n                            iVar5 = iVar5 + 1;\n                        }\n                        else if (iVar1 == 0x48) {\n                            iVar5 = iVar5 + -1;\n                        }\n                        else {\n                            if (iVar1 == 0x40) {\n                                if ((iVar6 == arg_8h + 1) && (iVar5 == 0)) {\n                                    iVar2 = iVar2 + 1;\n                                    goto code_r0x0045edbc;\n                                }\n                            }\n                            else if (iVar1 == 0x7f) break;\ncode_r0x0045edb8:\n                            if (iVar6 == 0) break;\n                        }\ncode_r0x0045edbc:\n                        if (iVar6 < arg_8h + 1) {\n                            if (var_4h < iVar2) {\n                                var_4h = iVar2;\n                            }\n                            iVar2 = 1;\n                        }\n                        piVar4 = piVar4 + 1;\n                    } while( true );\n                }\n                goto code_r0x0045edd7;\n            }\n            if (iVar1 == 0x47) {\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                if (iVar1 != 0x48) {\n                    if (iVar1 != 0x7f) goto code_r0x0045ed09;\ncode_r0x0045edd3:\n                    var_4h = -1;\ncode_r0x0045edd7:\n                    fcn.00405800();\n                    return var_4h;\n                }\n                iVar5 = iVar5 + -1;\n            }\n        }\n        arg_ch = arg_ch + 1;\n    } while( true );\n}\n",
        "token_count": 1027
    },
    "0045f211": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045f211(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_stack_fffffeb8;\n    uint auStack292 [64];\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    var_18h = 0;\n    var_14h = 1;\n    var_ch = *(*(*(arg_8h + 4) + -4 + *arg_ch * 4) + 10);\n    var_4h = 0;\n    iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n    do {\n        if (iVar1 != 0x4e) {\n            fcn.0040346e();\n            iVar2 = var_4h;\n            iVar3 = 0;\n            if (0 < var_4h) {\n                do {\n                    fcn.00403489(auStack292[iVar3]);\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < iVar2);\n            }\n            iVar2 = fcn.004114a0(*arg_10h, arg_14h, 0);\n            *arg_10h = iVar2;\n            if (iVar2 == 0) {\n                uVar4 = 0x7a;\ncode_r0x0045f31b:\n                fcn.0044d520(uVar4, in_stack_fffffeb8);\ncode_r0x0045f322:\n                uVar4 = 0xffffffff;\n            }\n            else {\n                uVar4 = 0;\n            }\n            fcn.00412570();\n            return uVar4;\n        }\n        *arg_ch = *arg_ch + 1;\n        iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n        iVar3 = fcn.0040fa40(arg_8h, arg_ch, &var_20h, 0xffffffff);\n        iVar2 = var_4h;\n        if (iVar3 < 0) goto code_r0x0045f322;\n        iVar3 = fcn.0040cdb4();\n        if (iVar3 < 0) {\ncode_r0x0045f333:\n            in_stack_fffffeb8 = iVar1;\n            uVar4 = 0x7b;\n            goto code_r0x0045f31b;\n        }\n        iVar3 = *arg_ch;\n        if (*(*(*(arg_8h + 4) + iVar3 * 4) + 8) != 0x4f) {\n            iVar1 = *(*(*(arg_8h + 4) + -4 + iVar3 * 4) + 10);\n            goto code_r0x0045f333;\n        }\n        *arg_ch = iVar3 + 1;\n        uVar4 = fcn.0040cdb4();\n        auStack292[iVar2] = uVar4;\n        var_4h = iVar2 + 1;\n        iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n        in_stack_fffffeb8 = -1;\n    } while( true );\n}\n",
        "token_count": 784
    },
    "00460719": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460719(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uchar uVar3;\n    char cVar4;\n    ushort uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t *extraout_EDX;\n    float10 fVar11;\n    ulong uVar12;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *(arg_8h + 0x18) = 0;\n    *(arg_8h + 0x1c) = 0;\n    *(arg_8h + 0x2c) = 0;\n    var_8h = 0;\n    if (0 < *(arg_8h + 0xc)) {\n        arg_10h = arg_10h << 2;\n        do {\n            iVar10 = **(arg_18h + var_8h * 4);\n            iVar9 = iVar10 * 0x18;\n            uVar7 = *(iVar9 + 0x38 + arg_8h);\n            if (uVar7 != 0x10) {\n                *((iVar10 + 2) * 0x18 + arg_8h) = 0;\n            }\n            *(iVar9 + 0x44 + arg_8h) = 0;\n            if (0x10 < uVar7) goto code_r0x0046092e;\n    // switch table (17 cases) at 0x4609d5\n            switch(*(uVar7 * 4 + 0x4609d5)) {\n            case 0x460783:\n                iVar1 = *(arg_10h + *(arg_ch + 4));\n                cVar4 = fcn.0041d5f6(0x2a);\n                if (cVar4 != '\\0') goto code_r0x00460992;\n                fcn.004084a6();\n                uVar7 = fcn.004218fb(**(iVar1 + 8));\n                if (uVar7 < 0x10000) {\n                    uVar7 = 0x10000;\n                }\n                uVar8 = fcn.004245ec(uVar7 + 1);\n                fcn.004084a6();\n                uVar6 = fcn.00448932();\n                fcn.00423220(uVar8, uVar6);\n                fcn.0042017e(uVar6);\ncode_r0x004607fc:\n                *((iVar10 + 2) * 0x18 + arg_8h) = uVar8;\n                *(iVar9 + 0x44 + arg_8h) = uVar8;\n                break;\n            case 0x460817:\n                iVar1 = *(arg_10h + *(arg_ch + 4));\n                cVar4 = fcn.0041d5f6(0x2a);\n                if (cVar4 == '\\0') {\n                    fcn.004084a6();\n                    uVar7 = fcn.004218fb(**(iVar1 + 8));\n                    if (uVar7 < 0x10000) {\n                        uVar7 = 0x10000;\n                    }\n                    uVar8 = fcn.004245ec(uVar7 * 2 + 2);\n                    iVar1 = *(arg_10h + *(arg_ch + 4));\n                    fcn.004084a6();\n                    fcn.00421943(uVar8, **(iVar1 + 8));\n                    goto code_r0x004607fc;\n                }\ncode_r0x00460992:\n                *((iVar10 + 2) * 0x18 + arg_8h) = 0;\n                break;\n            case 0x460889:\n                uVar8 = fcn.0040cdb4();\n                goto code_r0x00460925;\n            case 0x46089c:\n                uVar8 = fcn.0040d00b();\n                goto code_r0x00460925;\n            case 0x4608ac:\n                uVar5 = fcn.0040cdb4();\n                *((iVar10 + 2) * 0x18 + arg_8h) = uVar5;\n                break;\n            case 0x4608c6:\n                uVar3 = fcn.0040cdb4();\n                *((iVar10 + 2) * 0x18 + arg_8h) = uVar3;\n                break;\n            case 0x4608df:\n                fVar11 = fcn.00412620();\n                *((iVar10 + 2) * 0x18 + arg_8h) = fVar11;\n                break;\n            case 0x4608fe:\n                fVar11 = fcn.00412620();\n                *((iVar10 + 2) * 0x18 + arg_8h) = fVar11;\n                break;\n            case 0x460917:\ncode_r0x00460920:\n                uVar8 = fcn.0044be63();\n                goto code_r0x00460925;\n            case 0x460953:\n                uVar12 = fcn.0040d00b();\n                uVar8 = uVar12;\n                iVar10 = (iVar10 + 2) * 0x18;\n                *(iVar10 + 4 + arg_8h) = uVar12 >> 0x20;\n                goto code_r0x0046092b;\n            case 0x46096d:\n                cVar4 = fcn.0044be14();\n                if (cVar4 == '\\0') goto code_r0x00460992;\n                if (extraout_EDX[3] == 8) {\n                    iVar9 = *extraout_EDX;\n                }\n                else {\ncode_r0x0046098b:\n                    iVar9 = 0;\n                }\ncode_r0x0046098d:\n                uVar8 = *(iVar9 + 8);\ncode_r0x00460925:\n                iVar10 = (iVar10 + 2) * 0x18;\ncode_r0x0046092b:\n                *(iVar10 + arg_8h) = uVar8;\n                break;\n            case 0x46099e:\n                if (*(iVar9 + 0x3c + arg_8h) != 0) {\n                    *(iVar9 + 0x3c + arg_8h) = 0;\n                    piVar2 = *(arg_10h + *(arg_ch + 4));\n                    cVar4 = fcn.0040d2c0(0xc);\n                    if (cVar4 != '\\0') {\n                        if (piVar2[3] != 0xc) goto code_r0x0046098b;\n                        iVar9 = *piVar2;\n                        goto code_r0x0046098d;\n                    }\n                    goto code_r0x00460920;\n                }\n            }\ncode_r0x0046092e:\n            arg_10h = arg_10h + 8;\n            var_8h = var_8h + 1;\n        } while (var_8h < *(arg_8h + 0xc));\n    }\n    fcn.0045f717();\n    return;\n}\n",
        "token_count": 1650
    },
    "0046d56f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d56f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(arg_8h, &var_10h);\n    iVar2 = (var_4h - var_ch) * (var_8h - var_10h);\n    if ((((var_10h <= *0x4c18b4) && (*0x4c18b4 <= var_8h)) && (var_ch <= *0x4c18b8)) &&\n       ((*0x4c18b8 <= var_4h && (iVar2 - *0x4c18b0 == 0 || iVar2 < *0x4c18b0)))) {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg_8h);\n            if (iVar1 != 0) {\n                *0x4c18ac = arg_8h;\n                *0x4c18b0 = iVar2;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 307
    },
    "0046f4b2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f4b2(uint X)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t lpRect;\n    int32_t var_18h;\n    int32_t nWidth;\n    int32_t nHeight;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t Y;\n    \n    iVar3 = fcn.0041af7d(X);\n    piVar1 = **(*0x4c1870 + iVar3 * 4);\n    (*_sym.imp.USER32.dll_GetWindowRect)(*piVar1, &lpRect);\n    iVar3 = lpRect - piVar1[0xf];\n    Y = var_18h - piVar1[0x10];\n    if (piVar1[3] == -0x80000000) {\n        var_8h = 0;\n        var_ch = *0x4c1874;\n        uVar4 = 0;\n        uVar5 = *0x4c1874;\n        if (*0x4c1874 != 0) {\n            do {\n                if (*0x4c1830 <= var_8h) break;\n                puVar2 = **(*0x4c1870 + uVar4 * 4);\n                if ((puVar2 != NULL) && (var_8h = var_8h + 1,  puVar2[2] == *piVar1)) {\n                    (*_sym.imp.USER32.dll_GetWindowRect)(*puVar2, &lpRect);\n                    nWidth = nWidth - lpRect;\n                    lpRect = lpRect + iVar3;\n                    nHeight = nHeight - var_18h;\n                    var_18h = var_18h + Y;\n                    (*_sym.imp.USER32.dll_MoveWindow)(***(*0x4c1870 + uVar4 * 4), lpRect, var_18h, nWidth, nHeight, 1);\n                    uVar5 = var_ch;\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < uVar5);\n        }\n    }\n    piVar1[0xf] = piVar1[0xf] + iVar3;\n    piVar1[0x10] = piVar1[0x10] + Y;\n    return;\n}\n",
        "token_count": 538
    },
    "00470bfc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00470bfc(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = *(param_1 + 0x34);\n    iVar2 = iVar1 * 2;\n    if (0x32000 < iVar2) {\n        iVar2 = 0x32000;\n    }\n    if ((iVar1 < 0x32000) && (99 < iVar2 - iVar1)) {\n        iVar1 = (**0x4bbddc)(iVar2 * 2);\n        if (iVar1 == 0) {\n            uVar3 = 0x15;\n        }\n        else {\n            fcn.0041faa0(iVar1, *(param_1 + 0x10), *(param_1 + 0x34) * 2);\n            *(param_1 + 0x24) = iVar1 + (*(param_1 + 0x24) - *(param_1 + 0x10) >> 1) * 2;\n            if (0x800 < *(param_1 + 0x34)) {\n                (**0x4bb80c)(*(param_1 + 0x10));\n            }\n            *(param_1 + 0x10) = iVar1;\n            *(param_1 + 0x34) = iVar2;\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0x48;\n    }\n    return uVar3;\n}\n",
        "token_count": 338
    },
    "0040113c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040113c(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    for (; arg_ch != 0; arg_ch = *(arg_ch + 0x1c)) {\n        iVar1 = fcn.0042010a(0x20);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.0040d3d2();\n        }\n        *arg_8h = iVar1;\n        fcn.0040c935(arg_ch);\n        *(*arg_8h + 0x10) = *(arg_ch + 0x10);\n        *(*arg_8h + 0x14) = *(arg_ch + 0x14);\n        *(*arg_8h + 0x18) = 0;\n        *(*arg_8h + 0x1c) = 0;\n        fcn.0040113c(*arg_8h + 0x18, *(arg_ch + 0x18));\n        arg_8h = *arg_8h + 0x1c;\n    }\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 276
    },
    "0040124c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040124c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_8h;\n    uint var_38h;\n    uint var_18h;\n    \n    iVar1 = fcn.0042010a(0x58);\n    if (iVar1 == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar2 = fcn.004018cf();\n    }\n    *puVar2 = *(param_1 + 0xf4);\n    fcn.0040d89e(param_1 + 0x1d8);\n    fcn.0040c935(param_1 + 0x1e8);\n    puVar2[10] = *(param_1 + 0x98);\n    puVar2[0xb] = *(param_1 + 0x310);\n    puVar2[0xc] = **(param_1 + 0x1f8);\n    puVar2[0xd] = *(param_1 + 0x318);\n    fcn.0040c935(param_1 + 0x458);\n    puVar2[0x12] = *(param_1 + 0x468);\n    puVar2[0x13] = *(param_1 + 0x46c);\n    puVar2[0x14] = *(param_1 + 0x474);\n    puVar2[0x15] = *(param_1 + 0xfc);\n    arg_8h = fcn.00401842();\n    fcn.0040175e(arg_8h);\n    fcn.00412570();\n    fcn.00412570();\n    return puVar2;\n}\n",
        "token_count": 387
    },
    "00401a33": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401a33(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    fcn.004019ee(arg_8h);\n    iVar2 = fcn.00401dce(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            fcn.0044d7e4(-iVar2, 0);\n        }\n    }\n    else {\n        iVar2 = *(*(arg_8h + 4) + 8);\n        fcn.004084a6();\n        cVar1 = fcn.00401a85(*(iVar2 + 8), 0);\n        if (cVar1 != '\\0') {\n            return 0;\n        }\n    }\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 210
    },
    "00401d74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401d74(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = **(arg_8h + 4);\n    cVar2 = fcn.0040d2c0(5);\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.0040d2c0(0xf);\n        if (cVar2 == '\\0') {\n            fcn.00412570();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            iVar4 = 0;\n            uVar3 = 1;\n            goto code_r0x004776c1;\n        }\n        if (piVar1[3] == 0xf) {\n            iVar4 = *piVar1;\n        }\n        else {\n            iVar4 = 0;\n        }\n        uVar3 = *(*(iVar4 + 4) + 8);\n        fcn.00412570();\n        arg_ch[3] = 1;\n    }\n    else {\n        if (*(arg_8h + 8) != 1) {\n            uVar3 = fcn.0040cdb4();\n            uVar3 = fcn.0040218e(uVar3);\n            fcn.00412570();\n            arg_ch[3] = 1;\n            *arg_ch = uVar3;\n            iVar4 = fcn.0040cdb4();\n            if (iVar4 != 0) {\n                return 0;\n            }\n            uVar3 = 2;\ncode_r0x004776c1:\n            fcn.0044d7e4(uVar3, iVar4);\n            return 0;\n        }\n        uVar3 = fcn.0040218e(1);\n        fcn.00412570();\n        arg_ch[3] = 1;\n    }\n    *arg_ch = uVar3;\n    return 0;\n}\n",
        "token_count": 464
    },
    "004039e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004039e8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *in_ECX;\n    \n    cVar1 = fcn.00408176();\n    if (cVar1 != '\\0') {\n        *in_ECX[3] = *in_ECX[3] + -1;\n        fcn.0040a6f8();\n        iVar2 = fcn.004218fb(arg_8h);\n        uVar3 = fcn.0040c91c(iVar2 + in_ECX[1] + 1);\n        in_ECX[2] = uVar3;\n        uVar4 = fcn.0041fa89(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n        fcn.0041faa0(uVar4, *in_ECX, in_ECX[1] * 2 + 2);\n        *in_ECX = uVar4;\n    }\n    fcn.00403a0b(arg_8h);\n    return;\n}\n",
        "token_count": 258
    },
    "00403a0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a0b(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    \n    iVar2 = fcn.004218fb(arg_8h);\n    cVar1 = fcn.00408176();\n    if (cVar1 == '\\0') {\n        fcn.0040bd71(in_ECX[1] + iVar2);\n    }\n    else {\n        *in_ECX[3] = *in_ECX[3] + -1;\n        fcn.0040a6f8();\n        uVar3 = fcn.0040c91c(in_ECX[1] + 1 + iVar2);\n        in_ECX[2] = uVar3;\n        iVar4 = fcn.0041fa89(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n        fcn.0041faa0(iVar4, *in_ECX, in_ECX[1] * 2 + 2);\n        *in_ECX = iVar4;\n    }\n    fcn.0041faa0(*in_ECX + in_ECX[1] * 2, arg_8h, iVar2 * 2);\n    in_ECX[1] = in_ECX[1] + iVar2;\n    *(*in_ECX + in_ECX[1] * 2) = 0;\n    return;\n}\n",
        "token_count": 341
    },
    "00403b1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403b1e(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint in_EDX;\n    \n    if (arg_8h != 0) {\n        fcn.00422c1d(in_ECX, in_EDX, arg_8h + -1);\n        *(in_ECX + -2 + arg_8h * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00403bcf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403bcf(uint param_1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    \n    iVar2 = fcn.004218fb(param_1);\n    iVar1 = (iVar2 + 1) * 2;\n    arg_8h = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n    fcn.00421943(arg_8h, param_1);\n    return arg_8h;\n}\n",
        "token_count": 121
    },
    "00403d82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403d82(int32_t arg_8h)\n\n{\n    uint32_t uStack8;\n    \n    if (arg_8h == 0) {\n        uStack8 = 0x10;\n    }\n    else {\n        uStack8 = arg_8h + 0xfU & 0xfffffff0;\n    }\n    return uStack8;\n}\n",
        "token_count": 88
    },
    "004051ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004051ac(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    bVar2 = false;\n    do {\n        iVar1 = *arg_8h;\n        *arg_8h = iVar1 + 1;\n        iVar3 = 0;\n        if ((iVar1 <= *0x4c22f8) && (0 < iVar1)) {\n            iVar3 = iVar1 * 0x10 + *0x4c232c;\n        }\n        if (iVar3 == 0) {\n            return 0;\n        }\n        if ((*(**(iVar3 + 4) + 2) == 0) && (***(iVar3 + 4) == 0x21)) {\n            bVar2 = true;\n        }\n        *0x4c143c = iVar1;\n    } while (!bVar2);\n    return 0;\n}\n",
        "token_count": 213
    },
    "004053c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004053c4(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_28h;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.00404ae8();\n    iVar1 = *arg_ch;\n    var_34h = iVar1 + -1;\n    var_38h = 2;\n    while( true ) {\n        arg_8h = *arg_ch;\n        *arg_ch = arg_8h + 1;\n        iVar2 = fcn.00405554(arg_8h);\n        if ((iVar2 == 0) || (extraout_DL != '\\0')) break;\n        if ((((*(**(iVar2 + 4) + 2) == 0) && (iVar2 = ***(iVar2 + 4),  iVar2 != 0xb)) && (iVar2 == 0xc)) &&\n           (extraout_ECX == 0)) {\n            var_30h = arg_8h;\n        }\n    }\n    fcn.00404b02(&var_38h);\n    *arg_ch = iVar1;\n    fcn.00412570();\n    fcn.00412570();\n    return;\n}\n",
        "token_count": 331
    },
    "00405460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00405460(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint uVar7;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0040d3d2();\n    iVar2 = 1;\n    while( true ) {\n        do {\n            var_8h = iVar2 + 1;\n            uVar6 = fcn.00405554(iVar2);\n            iVar2 = uVar6 >> 0x20;\n            iVar3 = uVar6;\n            if (iVar3 == 0) {\n                fcn.00403c98();\n                uVar4 = 0;\n                goto code_r0x00405532;\n            }\n            *0x4c143c = iVar2 + -1;\n            piVar1 = **(iVar3 + 4);\n        } while ((*(piVar1 + 2) != 0) || ((*piVar1 != 0x20 && (*piVar1 != 0x2b))));\n        if (*piVar1 == 0x2b) {\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n        }\n        else {\n            var_4h = var_4h._1_3_ << 8;\n        }\n        uVar5 = *piVar1 == 0x2b;\n        piVar1 = (*(iVar3 + 4))[uVar5 + 1];\n        uVar4 = 0xffffffff;\n        if (*(piVar1 + 2) != 0x34) break;\n        fcn.0040c935(*piVar1);\n        uVar7 = var_1ch;\n        fcn.0040caee(var_1ch);\n        iVar2 = fcn.0040a9a0(uVar7, in_stack_ffffffbc, in_stack_ffffffc0, in_stack_ffffffc4);\n        if (iVar2 != 0) {\n            uVar7 = 0x84;\n            goto code_r0x00476736;\n        }\n        if (*(*(*(iVar3 + 4) + 8 + uVar5 * 4) + 8) != 0x47) break;\n        var_ch = uVar5 + 3;\n        iVar3 = fcn.0040589c(iVar3, &var_ch, &var_1ch, &var_8h, var_4h);\n        iVar2 = var_8h;\n        if (iVar3 < 0) {\ncode_r0x00405532:\n            fcn.00405cd3();\n            return uVar4;\n        }\n    }\n    uVar7 = 0x69;\ncode_r0x00476736:\n    fcn.0044d520(uVar7, 0xffffffff);\n    goto code_r0x00405532;\n}\n",
        "token_count": 724
    },
    "00405554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405554(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x4c22f8 < arg_8h) || (arg_8h < 1)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = arg_8h * 0x10 + *0x4c232c;\n    }\n    return iVar1;\n}\n",
        "token_count": 98
    },
    "004057d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004057d8(int32_t arg_8h, code *arg_ch)\n\n{\n    while (arg_8h = arg_8h + -1,  -1 < arg_8h) {\n        (*arg_ch)();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00405be9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405be9(uint arg_8h)\n\n{\n    uint32_t *arg_ch;\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint noname_0;\n    uint noname_0_00;\n    uint var_4h;\n    \n    fcn.00405cf6();\n    fcn.0040c935(arg_8h);\n    iVar2 = fcn.00405d32(noname_0, &var_4h, &arg_8h);\n    *(in_ECX + 0x24) = iVar2;\n    if (iVar2 != 0) {\n        arg_ch = in_ECX + 0x30;\n        fcn.00405c5b(noname_0_00, arg_ch);\n        uVar3 = (*arg_ch + 1) * 3;\n        *arg_ch = uVar3;\n        iVar1 = uVar3 * 4;\n        uVar4 = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n        *(in_ECX + 0x2c) = uVar4;\n        arg_8h = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 293
    },
    "00408489": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00408489(int32_t arg_8h)\n\n{\n    int16_t *in_ECX;\n    int16_t in_DX;\n    \n    if (arg_8h != 0) {\n        do {\n            if (*in_ECX == in_DX) {\n                return in_ECX;\n            }\n            in_ECX = in_ECX + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return NULL;\n}\n",
        "token_count": 118
    },
    "0040b96c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b96c(int32_t arg_8h)\n\n{\n    uint16_t *in_ECX;\n    uint16_t *in_EDX;\n    \n    if (arg_8h != 0) {\n        do {\n            if (*in_ECX != *in_EDX) {\n                return (-(*in_ECX < *in_EDX) & 0xfffffffe) + 1;\n            }\n            in_ECX = in_ECX + 1;\n            in_EDX = in_EDX + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 153
    },
    "0040bcb6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bcb6(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t arg_10h_00;\n    \n    fcn.0040c4cd();\n    arg_10h_00 = *arg_10h;\n    uVar2 = *(arg_ch + arg_10h_00 * 2);\n    *arg_10h = arg_10h_00 + 1;\n    iVar1 = *(arg_ch + (arg_10h_00 + 1) * 2);\n    do {\n        if (iVar1 == 0) {\n            fcn.00443110(arg_8h, 0x138a, arg_10h_00);\n            return 0xffffffff;\n        }\n        uVar3 = *(arg_ch + *arg_10h * 2);\n        if (uVar3 == uVar2) {\n            if (*(arg_ch + 2 + *arg_10h * 2) != uVar2) {\n                *arg_10h = *arg_10h + 1;\n                return 0;\n            }\n            fcn.0040bd2f(uVar3);\n            *arg_10h = *arg_10h + 2;\n        }\n        else {\n            fcn.0040bd2f(uVar3);\n            *arg_10h = *arg_10h + 1;\n        }\n        iVar1 = *(arg_ch + *arg_10h * 2);\n    } while( true );\n}\n",
        "token_count": 370
    },
    "0040c91c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c91c(int32_t arg_8h)\n\n{\n    uint32_t uStack8;\n    \n    if (arg_8h == 0) {\n        uStack8 = 8;\n    }\n    else {\n        uStack8 = arg_8h + 7U & 0xfffffff8;\n    }\n    return uStack8;\n}\n",
        "token_count": 86
    },
    "004141fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00475176)\n\nuint32_t __fastcall fcn.004141fc(int32_t param_1, int32_t param_2)\n\n{\n    uint arg_8h;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    float10 fVar4;\n    float10 fVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar2 = *((*(param_1 + 0xc) * 0x10 + *(param_2 + 0xc)) * 4 + 0x4bb810);\n    if (iVar2 == 1) {\ncode_r0x00414249:\n        iVar2 = fcn.0040cdb4();\n        uVar1 = fcn.0040cdb4();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else {\n        if (iVar2 == 2) {\n            iVar6 = fcn.0040d00b();\n            iVar7 = fcn.0040d00b();\n            if (iVar6 < iVar7) {\n                return 1;\n            }\n        }\n        else {\n            if (iVar2 != 3) {\n                if (iVar2 == 4) {\n                    fcn.004084a6();\n                    arg_8h = *(param_2 + 8);\n                    fcn.004084a6();\n                    uVar1 = fcn.0041dfb6(arg_8h, 0);\n                    return uVar1 & 0xffffff00 | uVar1 < 0;\n                }\n                if (iVar2 == 7) {\n                    uVar1 = fcn.0044be63();\n                    uVar3 = fcn.0044be63();\n                    return uVar1 < uVar3;\n                }\n                if (iVar2 - 9U != 0) {\n                    return iVar2 - 9U & 0xffffff00;\n                }\n                goto code_r0x00414249;\n            }\n            fVar4 = fcn.00412620();\n            fVar5 = fcn.00412620();\n            if (((fVar5 < fVar4) << 8 | (fVar5 == fVar4) << 0xe) == 0) {\n                return 1;\n            }\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 535
    },
    "0041ac65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ac65(int32_t arg_8h, code *arg_ch)\n\n{\n    while (arg_8h = arg_8h + -1,  -1 < arg_8h) {\n        (*arg_ch)();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0041b650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b650(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    ppiVar2 = *0x4c1898;\n    while( true ) {\n        if (ppiVar2 == NULL) {\n            var_ch = arg_8h;\n            var_8h = 1;\n            var_4h = (*_sym.imp.GDI32.dll_CreateSolidBrush)(arg_8h);\n            fcn.0041b6ab(&var_ch);\n            return var_4h;\n        }\n        if (**ppiVar2 == arg_8h) break;\n        ppiVar2 = ppiVar2[1];\n    }\n    piVar1 = *ppiVar2 + 1;\n    *piVar1 = *piVar1 + arg_ch;\n    return (*ppiVar2)[2];\n}\n",
        "token_count": 229
    },
    "0041bb84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bb84(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00412620();\n    fVar1 = fcn.00425390(fVar1);\n    fcn.00412570();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 94
    },
    "0041bbc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bbc4(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00412620();\n    fVar1 = fcn.004254c0(fVar1);\n    fcn.00412570();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 95
    },
    "0041c929": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0041c929(void)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    \n    uVar1 = fcn.0041c955(L\"SwapMouseButtons\", 4, &var_8h);\n    return uVar1 & 0xffffff00 | var_8h == 0x31;\n}\n",
        "token_count": 89
    },
    "0041cf79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cf79(uint *arg_8h)\n\n{\n    uint lpsz;\n    uint cchLength;\n    uint noname_2;\n    int32_t *arg_14h;\n    \n    lpsz = *arg_8h;\n    cchLength = arg_8h[1];\n    noname_2 = arg_8h[2];\n    arg_14h = arg_8h[3];\n    *arg_14h = *arg_14h + 1;\n    fcn.0040a9a0(lpsz, cchLength, noname_2, arg_14h);\n    return;\n}\n",
        "token_count": 143
    },
    "0041d612": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0041d612(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint32_t *in_EDX;\n    int32_t var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    var_8h = 1;\n    _auStack8 = 0;\n    if (in_ECX == 0) {\n        return 0;\n    }\n    while (iVar3 = fcn.004222f0(*(in_ECX + *in_EDX * 2)),  iVar3 != 0) {\n        *in_EDX = *in_EDX + 1;\n    }\n    uVar4 = *in_EDX;\n    iVar2 = *(in_ECX + uVar4 * 2);\n    *arg_8h = 0;\n    if (iVar2 != 0x2b) {\n        if (iVar2 != 0x2d) goto code_r0x0041d655;\n        var_8h = -1;\n    }\n    *in_EDX = uVar4 + 1;\ncode_r0x0041d655:\n    uVar4 = *in_EDX;\n    iVar2 = *(in_ECX + uVar4 * 2);\n    while ((iVar2 != 0 && (uVar4 = fcn.00422952(*(in_ECX + *in_EDX * 2)),  uVar4 != 0))) {\n        uVar1 = *in_EDX + 1;\n        *arg_8h = *arg_8h * 10 + -0x30 + *(in_ECX + *in_EDX * 2);\n        uVar4 = 0;\n        _auStack8 = 0x1000000;\n        *in_EDX = uVar1;\n        iVar2 = *(in_ECX + uVar1 * 2);\n    }\n    *arg_8h = *arg_8h * var_8h;\n    return uVar4 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 505
    },
    "0041e673": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __fastcall fcn.0041e673(int16_t **param_1)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t iVar5;\n    uint var_4h;\n    \n    piVar1 = NULL;\n    if (param_1[1] != NULL) {\n        piVar2 = *param_1;\n        do {\n            iVar4 = 0;\n            iVar3 = 0;\n            iVar5 = 0x20;\n            do {\n                if (*piVar2 == iVar5) {\n                    iVar3 = iVar3 + 1;\n                }\n                iVar5 = *(iVar4 * 2 + 0x49dc2a);\n                iVar4 = iVar4 + 1;\n            } while (iVar5 != 0);\n            if (iVar3 == 0) {\n                return piVar1;\n            }\n            piVar1 = piVar1 + 1;\n            piVar2 = piVar2 + 1;\n        } while (piVar1 < param_1[1]);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 256
    },
    "0041eb3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041eb3a(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00412620();\n    fVar1 = fcn.00423d90(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fcn.00412570();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 111
    },
    "0041eb7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041eb7a(uint arg_8h, double *arg_ch)\n\n{\n    int32_t iVar1;\n    float10 fVar2;\n    uint var_10h;\n    double dStack12;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_10h);\n    if (iVar1 == 0) {\n        fcn.00412570();\n        *arg_ch = 0.0;\n        *(arg_ch + 0xc) = 3;\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        dStack12 = _var_10h;\n        fVar2 = fcn.00412620();\n        dStack12 = dStack12 - fVar2;\n        fVar2 = fcn.0041ebde();\n        dStack12 = dStack12 / fVar2;\n        fcn.00412570();\n        *arg_ch = dStack12;\n        *(arg_ch + 0xc) = 3;\n    }\n    return 0;\n}\n",
        "token_count": 236
    },
    "0041ed7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ed7b(uint arg_8h, int32_t arg_ch, uint16_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    int16_t in_DX;\n    uint16_t *puVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    do {\n        iVar1 = fcn.0041eda4();\n        if (iVar1 == 0) {\n            return;\n        }\n        puVar3 = arg_10h;\n        if (arg_10h < *(arg_ch + 0x24)) {\n            iVar2 = *(arg_ch + 0x14);\n            do {\n                if (iVar2 + *puVar3 * 2 == iVar1 + 2) {\n                    *puVar3 = in_DX + *puVar3;\n                    break;\n                }\n                iVar2 = *(arg_ch + 0x14);\n                puVar3 = puVar3 + 1;\n            } while (puVar3 < *(arg_ch + 0x24));\n        }\n        if ((*(arg_ch + 0x24) <= puVar3) && (in_ECX <= *(arg_ch + 0x14) + *(iVar1 + 2) * 2)) {\n            *(iVar1 + 2) = in_DX + *(iVar1 + 2);\n        }\n    } while( true );\n}\n",
        "token_count": 318
    },
    "0041f149": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f149(uint noname_0, double *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_8h);\n    if (iVar1 == 0) {\n        fcn.00412570();\n        *arg_ch = 0.0;\n        *(arg_ch + 0xc) = 3;\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        fcn.00412570();\n        *(arg_ch + 0xc) = 3;\n        *arg_ch = _var_8h;\n    }\n    return 0;\n}\n",
        "token_count": 162
    },
    "0041f8c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f8c2(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00412620();\n    fVar1 = fcn.00424ea0(fVar1);\n    fcn.00412570();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 97
    },
    "00422241": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422241(uint arg_8h)\n\n{\n    fcn.00429791(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 39
    },
    "00422c67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00422c67(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00427750(0x4b6630, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.0042889e();\n        *puVar1 = 0x16;\n        fcn.00427aa0();\n    }\n    else {\n        iVar2 = fcn.00425a99();\n        fcn.00425ade(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.00425a99();\n        arg_8h_00 = fcn.0042947a(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.00425a99();\n        uVar4 = fcn.00429c40(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.00425a99();\n        fcn.00429449(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00422d00();\n    }\n    fcn.00427795();\n    return;\n}\n",
        "token_count": 446
    },
    "00422d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422d00(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00425a99();\n    fcn.00425b48(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 55
    },
    "00428944": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428944(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0x4b658c; ppcVar1 < 0x4b658c; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00430e4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004310f2)\n\nfloat10 fcn.00430e4e(double param_1)\n\n{\n    int32_t iVar1;\n    double dVar2;\n    double dVar3;\n    int32_t iVar4;\n    double dVar5;\n    double dVar6;\n    uchar auVar7 [16];\n    double dVar8;\n    double in_XMM7_Qa;\n    \n    dVar2 = in_XMM7_Qa & *0x4937c0;\n    dVar3 = in_XMM7_Qa & *0x4937c8;\n    if (*0x4938e8 <= dVar2) {\n        return *0x4938f8 + *((param_1._4_4_ >> 0x1f) * -8 + 0x4937d0);\n    }\n    if (*0x4938d8 <= dVar2) {\n        if (*0x4938d0 <= dVar2) {\n            if (*0x4938c8 <= dVar2) {\n                iVar1 = 0x300;\n                dVar3 = *0x4938b0 / dVar2;\n            }\n            else {\n                iVar4 = (dVar2 + *0x4938c0 >> 0x2c) - *0x4938a0;\n                iVar1 = iVar4 * 3;\n                dVar3 = *(iVar4 * 0x18 + 0x49bb38);\n                dVar3 = (dVar2 - dVar3) / (dVar2 * dVar3 + *0x4938b8);\n            }\n            dVar5 = dVar3 * dVar3;\n            dVar6 = dVar5 * dVar5;\n            dVar8 = dVar3 * dVar3 * dVar3 * dVar3;\n            dVar5 = (((*0x493890 * dVar6 + *0x493880) * dVar6 + *0x493870) * dVar6 + *0x493860) * dVar5;\n            auVar7 = CONCAT88(((*0x493898 * dVar8 + *0x493888) * dVar8 + *0x493878) * dVar8 + *0x493868, dVar5);\n            auVar7 = shufpd(auVar7, auVar7, 1);\n            return *(iVar1 * 8 + 0x49bb28) - (((dVar5 + SUB168(auVar7, 0)) * dVar3 - *(iVar1 * 8 + 0x49bb30)) - dVar3) |\n                   in_XMM7_Qa ^ dVar2;\n        }\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((((((*0x493850 * dVar5 + *0x493840) * dVar5 + *0x493830) * dVar5 + *0x493820) * dVar5 + *0x493810) *\n                   dVar5 + *0x493800) * dVar5 + *0x4937f0) * dVar5 + _str.RUUUUU) * dVar2;\n        auVar7 = CONCAT88(((((((*0x493858 * dVar3 + *0x493848) * dVar3 + *0x493838) * dVar3 + *0x493828) * dVar3 +\n                            *0x493818) * dVar3 + *0x493808) * dVar3 + *0x4937f8) * dVar3 + *0x4937e8, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (*0x4938e0 <= dVar2) {\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((*0x493890 * dVar5 + *0x493880) * dVar5 + *0x493870) * dVar5 + *0x493860) * dVar2;\n        auVar7 = CONCAT88(((*0x493898 * dVar3 + *0x493888) * dVar3 + *0x493878) * dVar3 + *0x493868, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (dVar2 != *0x4938a8) {\n        if (*0x4938f0 <= dVar2) {\n            return *0x4938f8 * *0x4938f8 + param_1;\n        }\n        return *0x4938f8 * *0x4938f8 + param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 1200
    },
    "00437179": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437179(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00436961(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 76
    },
    "0043a3d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043a3d5(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint var_14h;\n    uint var_ch;\n    \n    uVar1 = fcn.0044be8a();\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayCopyData)(0x11, 0, uVar1);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        fcn.004113a0(arg_8h);\n        uVar1 = fcn.0044be8a();\n        uVar1 = fcn.0044be47(extraout_ECX, uVar1);\n        fcn.0041faa0(iVar2 + 0x18, uVar1);\n        fcn.00412570();\n    }\n    return iVar2;\n}\n",
        "token_count": 207
    },
    "0043a6e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0043a6e8(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00420183(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 64
    },
    "0043a83b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a83b(int32_t param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_RaiseException)(((param_1 == -0x7ff8fff2) - 1 & 6) + 0xc0000017, 1, 0, 0);\n    return;\n}\n",
        "token_count": 74
    },
    "0043b289": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043b289(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        *param_2 = 0;\n    }\n    else {\n        iVar1 = fcn.004218fb(param_1);\n        iVar1 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)((iVar1 + 1) * 2);\n        *param_2 = iVar1;\n        if (iVar1 == 0) {\n            return 0x8007000e;\n        }\n        fcn.00421943(iVar1, param_1);\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "0043bf5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043bf5b(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint in_ECX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t *var_8h;\n    uint nDestinationSidLength;\n    \n    uVar6 = 0;\n    var_8h = NULL;\n    nDestinationSidLength = 0;\n    cVar3 = fcn.0043b78e(&var_8h, in_ECX, &nDestinationSidLength);\n    puVar2 = var_8h;\n    if ((cVar3 != '\\0') && (uVar7 = 0,  puVar1 = var_8h,  *var_8h != 0)) {\n        do {\n            if ((puVar1[2] & 0xc0000000) == 0xc0000000) {\n                nDestinationSidLength = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(var_8h[uVar7 * 2 + 1]);\n                uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, nDestinationSidLength);\n                iVar5 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar4);\n                *arg_ch = iVar5;\n                if ((iVar5 != 0) &&\n                   (iVar5 = (*_sym.imp.ADVAPI32.dll_CopySid)(nDestinationSidLength, iVar5, puVar2[uVar7 * 2 + 1]), \n                   iVar5 != 0)) {\n                    uVar6 = 1;\n                }\n                break;\n            }\n            uVar7 = uVar7 + 1;\n            puVar1 = puVar1 + 2;\n        } while (uVar7 < *var_8h);\n    }\n    uVar7 = fcn.0043b850();\n    return uVar7 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 464
    },
    "0043c0a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0043c0a2(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint *in_ECX;\n    \n    fcn.00407b6e(in_ECX[1] + arg_ch[1]);\n    fcn.0041faa0(*arg_8h, *in_ECX, in_ECX[1] * 2);\n    fcn.0041faa0(*arg_8h + in_ECX[1] * 2, *arg_ch, arg_ch[1] * 2 + 2);\n    arg_8h[1] = in_ECX[1] + arg_ch[1];\n    return arg_8h;\n}\n",
        "token_count": 160
    },
    "0043d0d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043d0d4(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int16_t *piVar2;\n    uint16_t *puVar3;\n    uint *in_ECX;\n    uint32_t arg_8h_01;\n    uint var_1ch;\n    uint *hWnd;\n    int32_t var_8h;\n    \n    arg_8h_01 = 0;\n    hWnd = in_ECX;\n    arg_8h_00 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x110a, 0, 0);\n    if (arg_8h_00 != 0) {\n        uVar1 = *(arg_8h + 4);\n        var_8h = arg_8h_00;\n        fcn.0040d3d2();\n        if (uVar1 != 0) {\n            while ((arg_8h_01 == 0 ||\n                   (arg_8h_00 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x110a, 4, arg_8h_00),  var_8h = arg_8h_00, \n                   arg_8h_00 != 0))) {\n                fcn.00407e53(0x49dbf0);\n                for (; arg_8h_01 < uVar1; arg_8h_01 = arg_8h_01 + 1) {\n                    piVar2 = fcn.0041db6f(arg_8h_01);\n                    if (*piVar2 == 0x7c) {\n                        piVar2 = fcn.0041db6f(arg_8h_01 + 1);\n                        arg_8h_00 = var_8h;\n                        if (*piVar2 != 0x7c) break;\n                        fcn.0040bd2f(0x7c);\n                        arg_8h_01 = arg_8h_01 + 2;\n                    }\n                    puVar3 = fcn.0041db6f(arg_8h_01);\n                    fcn.0040bd2f(*puVar3);\n                    arg_8h_00 = var_8h;\n                }\n                arg_8h_00 = fcn.0043d38a(arg_8h_00, &var_1ch);\n                var_8h = arg_8h_00;\n                if ((arg_8h_00 == 0) || (arg_8h_01 = arg_8h_01 + 1,  uVar1 <= arg_8h_01)) break;\n            }\n        }\n        fcn.00405cd3();\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 626
    },
    "0043d7d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d7d6(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint lpClassName;\n    \n    fcn.00407e53(0x49dbf0);\n    fcn.0043d623(arg_8h, 1);\n    iVar1 = (*_sym.imp.USER32.dll_GetFocus)();\n    *(in_ECX + 0xd8) = iVar1;\n    if ((iVar1 != 0) && (iVar1 = fcn.0043d66c(iVar1, arg_8h),  iVar1 != 0)) {\n        fcn.0043e0c5(*(in_ECX + 0xd8));\n        *(in_ECX + 0xd4) = arg_8h;\n        (*_sym.imp.USER32.dll_GetClassNameW)(*(in_ECX + 0xd8), &lpClassName, 0x100);\n        fcn.00407e53(&lpClassName);\n        *(in_ECX + 0x130) = 0;\n        (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, fcn.0043d8ba);\n        fcn.0042234b(&lpClassName, L\"%s%d\", *(in_ECX + 0x8c));\n        fcn.00407e53(&lpClassName);\n        fcn.0043d623(arg_8h, 0);\n        return 1;\n    }\n    fcn.0043d623(arg_8h, 0);\n    return 0;\n}\n",
        "token_count": 352
    },
    "0043e0f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e0f5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    \n    iVar1 = fcn.004223f0(arg_8h);\n    in_ECX[1] = iVar1;\n    uVar2 = fcn.00403d82(iVar1 + 1);\n    in_ECX[2] = uVar2;\n    uVar2 = fcn.0042010a(uVar2);\n    *in_ECX = uVar2;\n    fcn.0041faa0(uVar2, arg_8h, iVar1 + 1);\n    fcn.0040a6f8();\n    return;\n}\n",
        "token_count": 164
    },
    "0043e19e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043e19e(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar3 = 0;\n    if (*(in_ECX + 4) != 0) {\n        arg_8h_00 = fcn.004218fb(arg_8h);\n        uVar1 = *(in_ECX + 4);\n        if (uVar1 != 0) {\n            do {\n                iVar2 = fcn.0040b96c(arg_8h_00);\n                if (iVar2 == 0) {\n                    return uVar3;\n                }\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < uVar1);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 210
    },
    "0043ead5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.0043ead5(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t **arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t **in_ECX;\n    int32_t *extraout_EDX;\n    int32_t iVar6;\n    uint arg_14h_00;\n    uint var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t **var_4h;\n    \n    piVar2 = arg_10h;\n    ppiVar1 = in_ECX + 3;\n    *in_ECX = NULL;\n    *ppiVar1 = NULL;\n    in_ECX[10] = NULL;\n    in_ECX[0xc] = NULL;\n    in_ECX[0xd] = NULL;\n    *(in_ECX + 0xf) = 0;\n    in_ECX[2] = NULL;\n    if (arg_ch == NULL) {\n        return in_ECX;\n    }\n    if (arg_10h == NULL) {\n        return in_ECX;\n    }\n    if (arg_14h == NULL) {\n        return in_ECX;\n    }\n    if (arg_8h == NULL) {\n        return in_ECX;\n    }\n    *arg_14h = NULL;\n    in_ECX[4] = *(arg_10h + 0x22);\n    in_ECX[6] = *(arg_10h + 0x23) + *(arg_10h + 0x22);\n    in_ECX[5] = *(arg_10h + 0x8a);\n    in_ECX[7] = *(arg_10h + 0x8e) + *(arg_10h + 0x8a);\n    in_ECX[1] = arg_10h;\n    *in_ECX = arg_8h;\n    var_4h = in_ECX;\n    cVar3 = fcn.0044be14();\n    if (cVar3 == '\\0') {\n        iVar4 = -0x7fffbffb;\n    }\n    else {\n        if (extraout_EDX[3] == 8) {\n            iVar4 = *extraout_EDX;\n        }\n        else {\n            iVar4 = 0;\n        }\n        iVar4 = (****(iVar4 + 8))(*(iVar4 + 8), 0x48d9ec, ppiVar1);\n        if (-1 < iVar4) {\n            piVar5 = fcn.0042010a(0xc);\n            if (piVar5 == NULL) {\n                piVar5 = NULL;\n            }\n            else {\n                *piVar5 = 0x4b2e54;\n                piVar5[2] = in_ECX;\n                piVar5[1] = 1;\n            }\n            in_ECX[10] = piVar5;\n            piVar5 = fcn.0042010a(8);\n            if (piVar5 == NULL) {\n                piVar5 = NULL;\n            }\n            else {\n                *piVar5 = 0x4b2e18;\n                piVar5[1] = in_ECX;\n            }\n            in_ECX[0xc] = piVar5;\n            piVar5 = fcn.0042010a(0xc);\n            if (piVar5 == NULL) {\n                piVar5 = NULL;\n            }\n            else {\n                piVar5[2] = 0;\n                *piVar5 = 0x4b2db0;\n                piVar5[1] = in_ECX;\n            }\n            in_ECX[0xb] = piVar5;\n            piVar5 = fcn.0042010a(8);\n            if (piVar5 == NULL) {\n                piVar5 = NULL;\n            }\n            else {\n                *piVar5 = 0x4b2d50;\n                piVar5[1] = in_ECX;\n            }\n            in_ECX[0xd] = piVar5;\n            (**(**ppiVar1 + 0x14))(*ppiVar1, L\"Container\", L\"AutoIt3GUI\");\n            var_ch = *(piVar2 + 0x23);\n            var_8h = *(piVar2 + 0x8e);\n            fcn.0043ef91();\n            (**(**ppiVar1 + 0x44))(*ppiVar1, 1, &var_14h);\n            (**(**ppiVar1 + 0xc))(*ppiVar1, in_ECX[10]);\n            (**(**ppiVar1 + 0x4c))(*ppiVar1, in_ECX[0xd], in_ECX + 0xe);\n            iVar4 = (****ppiVar1)(*ppiVar1, 0x48da4c, &arg_8h);\n            if (-1 < iVar4) {\n                (**(*arg_8h + 0x1c))(arg_8h, 1, 2, in_ECX[0xd]);\n                (**(*arg_8h + 8))(arg_8h);\n            }\n            (*_sym.imp.ole32.dll_OleSetContainedObject)(*ppiVar1, 1);\n            (**(**ppiVar1 + 0x2c))(*ppiVar1, 0xffffffff, 0, in_ECX[10], 0xffffffff, (*in_ECX)[5], in_ECX + 4);\n            iVar6 = 5;\n            do {\n                iVar4 = (**(**ppiVar1 + 0x38))(*ppiVar1);\n                iVar6 = iVar6 + -1;\n                if (iVar4 == 0) break;\n            } while (iVar6 != 0);\n            if (iVar4 < 0) {\n                fcn.0043f009();\n                arg_14h_00 = 1;\n            }\n            else {\n                iVar4 = (****ppiVar1)(*ppiVar1, 0x48da2c, &arg_ch);\n                if (-1 < iVar4) {\n                    iVar4 = (**(*arg_ch + 0xc))(arg_ch, var_4h + 2);\n                    (**(*arg_ch + 8))(arg_ch);\n                    if (-1 < iVar4) {\n                        *arg_14h = var_4h[2];\n                        return var_4h;\n                    }\n                }\n                fcn.0043f009();\n                arg_14h_00 = 1;\n            }\n            goto code_r0x0043ed43;\n        }\n    }\n    arg_14h_00 = 0;\n    var_4h = in_ECX;\ncode_r0x0043ed43:\n    fcn.0045c235(iVar4, 0, 0, arg_14h_00);\n    return var_4h;\n}\n",
        "token_count": 1542
    },
    "0043ee7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ee7d(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    piVar1 = arg_8h;\n    if (*arg_8h[1] != 0) {\n        *(*arg_8h[1] + 0x18) = 0;\n    }\n    if (arg_ch == 0) {\n        iVar2 = (****(arg_8h[1] + 0xc))(*(arg_8h[1] + 0xc), 0x48da5c, &arg_8h);\n        if (iVar2 < 0) {\n            return 0x80004005;\n        }\n        (**(*arg_8h + 0xc))(arg_8h, 0, 0, 0, piVar1 + 2);\n        (**(*arg_8h + 8))(arg_8h);\n    }\n    else {\n        arg_8h[2] = arg_ch;\n    }\n    ppiVar3 = piVar1 + 2;\n    (**(**ppiVar3 + 4))(*ppiVar3);\n    iVar2 = (**(**ppiVar3 + 0xc))(*ppiVar3, *(piVar1[1] + 0x30));\n    if (iVar2 < 0) {\n        return 0x80004005;\n    }\n    (**(**ppiVar3 + 0x28))(*ppiVar3, 1);\n    (**(**ppiVar3 + 0x18))(*ppiVar3, piVar1[1] + 0x10);\n    (**(**ppiVar3 + 0x24))(*ppiVar3, 1);\n    if (*piVar1[1] != 0) {\n        *(*piVar1[1] + 0x18) = 1;\n    }\n    return 0;\n}\n",
        "token_count": 435
    },
    "0043f291": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f291(int32_t arg_8h, uint *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch)\n\n{\n    *arg_10h = 0;\n    *arg_ch = *(**(arg_8h + 4) + 0xc);\n    (*_sym.imp.USER32.dll_CopyRect)(arg_14h, *(arg_8h + 4) + 0x10);\n    (*_sym.imp.USER32.dll_CopyRect)(arg_18h, *(arg_8h + 4) + 0x10);\n    arg_1ch[1] = 0;\n    *arg_1ch = 0x14;\n    arg_1ch[2] = *(**(arg_8h + 4) + 0x14);\n    arg_1ch[3] = 0;\n    arg_1ch[4] = 0;\n    return 0;\n}\n",
        "token_count": 222
    },
    "0043f572": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f572(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar2 = arg_8h;\n    iVar3 = *(arg_8h[1] + 4);\n    *(arg_8h[1] + 0x10) = *(iVar3 + 0x88);\n    *(arg_8h[1] + 0x18) = *(iVar3 + 0x8c) + *(iVar3 + 0x88);\n    *(arg_8h[1] + 0x14) = *(iVar3 + 0x8a);\n    *(arg_8h[1] + 0x1c) = *(iVar3 + 0x8e) + *(iVar3 + 0x8a);\n    iVar3 = (****(arg_8h[1] + 0xc))(*(arg_8h[1] + 0xc), 0x48da2c, &arg_8h);\n    if (iVar3 < 0) {\n        uVar4 = 0x8000ffff;\n    }\n    else {\n        iVar3 = piVar2[1];\n        piVar1 = *(iVar3 + 0xc);\n        (**(*piVar1 + 0x48))(piVar1, 1, iVar3 + 0x20);\n        (**(*arg_8h + 0x1c))(arg_8h, arg_ch, piVar2[1] + 0x10);\n        (**(*arg_8h + 8))(arg_8h);\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 398
    },
    "0044016d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044016d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*(*(param_1 + 0x1c) + iVar1));\n        iVar1 = iVar1 + 4;\n    } while (iVar1 < 0x24);\n    return;\n}\n",
        "token_count": 92
    },
    "00440643": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440643(int32_t arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(arg_8h + 0x24);\n    return;\n}\n",
        "token_count": 46
    },
    "00440e42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440e42(uint arg_8h, uint32_t arg_ch, uint noname_2, double *pvargDest)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint16_t uVar3;\n    float fVar4;\n    int32_t iVar5;\n    float10 fVar6;\n    ulong uVar7;\n    uint pvarSrc;\n    uint var_ch;\n    int32_t *var_8h;\n    \n    if ((arg_ch & 0x4000) == 0) {\n        return;\n    }\n    iVar5 = 0;\n    var_ch = 0;\n    fcn.0040d2d2(arg_8h, &var_8h, &var_ch, 1);\n    if (0x17 < (arg_ch & 0xfff) - 2) {\n        return;\n    }\n    // switch table (24 cases) at 0x440f6e\n    switch(*(*((arg_ch & 0xfff) + 0x440f98) * 4 + 0x440f6e)) {\n    case 0x440e8f:\n        cVar1 = fcn.00405372();\n        uVar3 = -(cVar1 != '\\0');\n        goto code_r0x00440e9e;\n    case 0x440ea9:\n        if (pvargDest != NULL) {\n            fcn.004084a6();\n            (*_sym.imp.OLEAUT32.dll_SysAllocStringLen)(pvargDest, *var_8h[2]);\n        }\n        break;\n    case 0x440ecf:\n        fcn.0043a1e8(var_8h);\n        (*_sym.imp.OLEAUT32.dll_VariantChangeType)(pvargDest, &pvarSrc);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvarSrc);\n        break;\n    case 0x440ef3:\n        fVar4 = fcn.0040cdb4();\n        *pvargDest = fVar4;\n        break;\n    case 0x440f02:\n        uVar7 = fcn.0040d00b();\n        *pvargDest = uVar7;\n        *(pvargDest + 4) = uVar7 >> 0x20;\n        break;\n    case 0x440f17:\n        uVar2 = fcn.0040cdb4();\n        *pvargDest = uVar2;\n        break;\n    case 0x440f27:\n        uVar3 = fcn.0040cdb4();\n        uVar3 = uVar3 & 0xff;\ncode_r0x00440e9e:\n        *pvargDest = uVar3;\n        break;\n    case 0x440f37:\n        fVar6 = fcn.00412620();\n        *pvargDest = fVar6;\n        break;\n    case 0x440f46:\n        fVar6 = fcn.00412620();\n        *pvargDest = fVar6;\n        break;\n    case 0x440f55:\n        if (var_8h[3] == 8) {\n            iVar5 = *var_8h;\n        }\n        *pvargDest = *(iVar5 + 8);\n    }\n    return;\n}\n",
        "token_count": 727
    },
    "0044120a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044120a(int32_t arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(arg_8h + 0x38);\n    return;\n}\n",
        "token_count": 47
    },
    "004416c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004416c8(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint *puVar3;\n    \n    puVar3 = arg_8h + 0x20;\n    piVar1 = *(arg_8h + 0x18);\n    if (piVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(puVar3);\n    }\n    else {\n        uVar2 = (**(*piVar1 + 4))(piVar1);\n        *puVar3 = uVar2;\n    }\n    return *puVar3;\n}\n",
        "token_count": 144
    },
    "0044290f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044290f(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042010a(8);\n    var_8h = *(arg_8h + 8);\n    var_4h = *(arg_8h + 0xc);\n    fcn.0041faa0(uVar1, &var_8h, 8);\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "00442d53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442d53(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_8h < *(in_ECX + 0x34)) {\n        fcn.00471851(*(in_ECX + 0x34), arg_8h, &arg_8h);\n        fcn.00407e53(arg_8h);\n        (**0x4bb80c)(arg_8h);\n    }\n    else {\n        fcn.0040a2fb(0, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00442fcd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442fcd(uint arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *arg_8h_00;\n    uchar *in_ECX;\n    uint uVar3;\n    \n    iVar2 = fcn.0042247b(arg_8h, L\"#notrayicon\", 0xb);\n    if (iVar2 == 0) {\n        *in_ECX = 1;\n        return 1;\n    }\n    iVar2 = fcn.0042247b(arg_8h, L\"#requireadmin\", 0xd);\n    if (iVar2 == 0) {\n        in_ECX[1] = 1;\n        return 1;\n    }\n    iVar2 = fcn.0042247b(arg_8h, L\"#OnAutoItStartRegister\", 0x16);\n    if (iVar2 != 0) {\n        return 1;\n    }\n    arg_8h_00 = fcn.00403bcf();\n    fcn.0041dd27(arg_8h_00);\n    fcn.0041dcee(arg_8h_00);\n    iVar2 = fcn.004218fb(arg_8h_00);\n    iVar1 = arg_8h_00[iVar2 + -1];\n    if ((iVar1 == 0x22) || (iVar1 == 0x27)) {\n        if (*arg_8h_00 != iVar1) {\n            fcn.0042017e(arg_8h_00);\n            return 0;\n        }\n        arg_8h_00[iVar2 + -1] = 0;\n        (**(**(in_ECX + 4) + 8))(arg_8h_00 + 1);\n    }\n    else {\n        if ((*arg_8h_00 == 0x22) || (*arg_8h_00 == 0x27)) {\n            uVar3 = 0;\n            goto code_r0x0044309e;\n        }\n        (**(**(in_ECX + 4) + 8))(arg_8h_00);\n    }\n    uVar3 = 1;\ncode_r0x0044309e:\n    fcn.0042017e(arg_8h_00);\n    return uVar3;\n}\n",
        "token_count": 507
    },
    "004430ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004430ac(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    iVar2 = *(*arg_ch + arg_8h);\n    *arg_ch = *arg_ch + 4;\n    iVar3 = (iVar2 + 1) * 2;\n    iVar5 = fcn.0042010a(-(iVar3 >> 0x20 != 0) | iVar3);\n    iVar4 = iVar2 * 2;\n    fcn.0041faa0(iVar5, *arg_ch + arg_8h, iVar4);\n    *arg_ch = *arg_ch + iVar4;\n    iVar6 = 0;\n    *(iVar4 + iVar5) = 0;\n    if (0 < iVar2) {\n        do {\n            puVar1 = iVar5 + iVar6 * 2;\n            *puVar1 = *puVar1 ^ iVar2;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < iVar2);\n    }\n    return iVar5;\n}\n",
        "token_count": 274
    },
    "00444c4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444c4e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00422d9d(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 56
    },
    "00444cc6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444cc6(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    piVar1 = in_ECX + 4;\n    do {\n        if (*piVar1 == arg_8h) {\n            (*_sym.imp.KERNEL32.dll_VirtualFreeEx)(*(in_ECX + iVar2 * 8), *(in_ECX + 4 + iVar2 * 8), 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(in_ECX + iVar2 * 8));\n            *(in_ECX + 4 + iVar2 * 8) = 0;\n            return;\n        }\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 2;\n    } while (iVar2 < 0x10);\n    return;\n}\n",
        "token_count": 213
    },
    "00444d0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444d0c(int32_t arg_8h, uint lpBuffer, uint nSize)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    piVar2 = in_ECX + 4;\n    do {\n        if (*piVar2 == arg_8h) break;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 2;\n    } while (iVar1 < 0x10);\n    if (iVar1 != 0x10) {\n        (*_sym.imp.KERNEL32.dll_ReadProcessMemory)(*(in_ECX + iVar1 * 8), arg_8h, lpBuffer, nSize, 0);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00444d41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444d41(uint lpBuffer, int32_t arg_ch, uint nSize)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    piVar2 = in_ECX + 4;\n    do {\n        if (*piVar2 == arg_ch) break;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 2;\n    } while (iVar1 < 0x10);\n    if (iVar1 != 0x10) {\n        (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(*(in_ECX + iVar1 * 8), arg_ch, lpBuffer, nSize, 0);\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "0044542e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044542e(int32_t param_1)\n\n{\n    **(param_1 + 0x10) = **(param_1 + 0x10) + -1;\n    if (**(param_1 + 0x10) == 0) {\n        fcn.0042017e(*(param_1 + 4));\n        fcn.0042017e(*(param_1 + 0x10));\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00445436": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445436(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t *var_4h;\n    \n    piVar1 = fcn.0042010a(0x14);\n    if (piVar1 == NULL) {\n        piVar1 = NULL;\n    }\n    else {\n        fcn.0040d3d2();\n    }\n    var_4h = piVar1;\n    fcn.0040c935(*(in_ECX + 0x1b4 + arg_8h * 4) + 8);\n    *piVar1 = arg_8h;\n    fcn.00446437(&var_4h);\n    return;\n}\n",
        "token_count": 169
    },
    "0044548a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044548a(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t *var_4h;\n    \n    piVar1 = fcn.0042010a(0x14);\n    if (piVar1 == NULL) {\n        piVar1 = NULL;\n    }\n    else {\n        fcn.0040d3d2();\n    }\n    var_4h = piVar1;\n    fcn.0040c935(arg_8h * 0x10 + 0x184 + in_ECX);\n    *piVar1 = arg_8h;\n    fcn.00446437(&var_4h);\n    return;\n}\n",
        "token_count": 165
    },
    "00446304": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00446304(int32_t arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    \n    bVar1 = arg_8h + 0xeU < 0xc;\n    if (bVar1) {\n        fcn.0040c935(arg_ch);\n    }\n    return bVar1;\n}\n",
        "token_count": 77
    },
    "0044646d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044646d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = param_1[1];\n    if (iVar1 != 0) {\n        fcn.004465e2();\n        fcn.0041faa0(*param_1, *param_1 + iVar1, (param_1[1] - iVar1) + 1);\n        param_1[1] = param_1[1] - iVar1;\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "004465ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004465ba(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x2c);\n    if (iVar1 == 1) {\n        return 0x20;\n    }\n    if (iVar1 != 2) {\n        if (iVar1 != 4) {\n            return 0;\n        }\n        return (-(*(param_1 + 0x30) != 0) & 0xffffff80) + 0x100;\n    }\n    return 0x40;\n}\n",
        "token_count": 128
    },
    "004465e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004465e2(uint *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    \n    cVar2 = fcn.00408176();\n    if (cVar2 != '\\0') {\n        *param_1[3] = *param_1[3] + -1;\n        fcn.0040a6f8();\n        iVar1 = param_1[1];\n        uVar3 = fcn.00403d82(iVar1 + 1);\n        param_1[2] = uVar3;\n        uVar3 = fcn.0042010a(uVar3);\n        fcn.0041faa0(uVar3, *param_1, iVar1 + 1);\n        *param_1 = uVar3;\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00446852": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446852(uint lpBuffer, uint nNumberOfBytesToWrite)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint *lpNumberOfBytesWritten;\n    \n    lpNumberOfBytesWritten = in_ECX;\n    fcn.00446623();\n    (*_sym.imp.KERNEL32.dll_WriteFile)(*in_ECX, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n    puVar1 = in_ECX + 4;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + lpNumberOfBytesWritten;\n    in_ECX[5] = in_ECX[5] + CARRY4(uVar2, lpNumberOfBytesWritten);\n    return;\n}\n",
        "token_count": 176
    },
    "004468b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004468b9(uint *arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t lpBuffer;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_4h;\n    \n    puVar3 = *arg_8h;\n    arg_8h_00 = arg_8h[1] * 2;\n    lpBuffer = fcn.0042010a(arg_8h_00);\n    uVar1 = 0;\n    if (arg_8h_00 != 0) {\n        iVar2 = lpBuffer - puVar3;\n        do {\n            puVar3[iVar2] = puVar3[1];\n            *(lpBuffer + 1 + uVar1) = *puVar3;\n            uVar1 = uVar1 + 2;\n            puVar3 = puVar3 + 2;\n        } while (uVar1 < arg_8h_00);\n    }\n    uVar1 = fcn.00446852(lpBuffer, arg_8h_00);\n    fcn.0042017e(lpBuffer);\n    return uVar1 == arg_8h_00;\n}\n",
        "token_count": 270
    },
    "00446917": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00446917(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = arg_8h[1];\n    iVar2 = fcn.00446852(*arg_8h, iVar1 * 2);\n    return iVar2 + iVar1 * -2 == 0;\n}\n",
        "token_count": 81
    },
    "00447212": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00447212(uint arg_8h, uint noname_1, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0042234b(&var_10h, 0x4b364c, arg_10h);\n    fcn.0042234b(&var_1ch, 0x4b364c, arg_14h);\n    iVar1 = fcn.00421bc7(&var_1ch, &var_10h);\n    if (((iVar1 == 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceW)(arg_8h, arg_10h, 0xe),  iVar1 != 0)) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(arg_8h, iVar1),  iVar1 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n        arg_10h = 0;\n        if (*(iVar1 + 4) != 0) {\n            puVar5 = iVar1 + 6;\n            do {\n                iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(arg_8h, *(puVar5 + 0xc), 3);\n                if ((iVar3 == 0) || (iVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(arg_8h, iVar3),  iVar4 == 0)) {\n                    return 1;\n                }\n                var_4h = (*_sym.imp.KERNEL32.dll_SizeofResource)(arg_8h, iVar3);\n                uVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar4);\n                if (((*puVar5 == *0x4c10fc) && (puVar5[1] == *0x4c10f8)) && (*(puVar5 + 6) == *0x4c10f4)) {\n                    *0x4c1100 = (*_sym.imp.USER32.dll_CreateIconFromResourceEx)\n                                          (uVar2, var_4h, 1, 0x30000, *0x4c10fc, *0x4c10f8, 0);\n                    break;\n                }\n                arg_10h = arg_10h + 1;\n                puVar5 = puVar5 + 0xe;\n            } while (arg_10h < *(iVar1 + 4));\n        }\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 631
    },
    "004474b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004474b0(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int16_t *in_ECX;\n    int16_t iVar4;\n    uint in_EDX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar1 = false;\n    iVar6 = 0;\n    iVar5 = 0;\n    iVar2 = fcn.00423084(arg_8h, 0x2a);\n    if (iVar2 != 0) {\n        iVar4 = *arg_8h;\n        while (iVar4 != 0x2a) {\n            *(arg_ch + iVar5 * 2) = iVar4;\n            iVar5 = iVar5 + 1;\n            iVar6 = iVar6 + 1;\n            iVar4 = arg_8h[iVar6];\n        }\n        iVar4 = *in_ECX;\n        if (iVar4 != 0) {\n            iVar2 = 0;\n            do {\n                *(arg_ch + iVar5 * 2) = iVar4;\n                iVar5 = iVar5 + 1;\n                iVar2 = iVar2 + 1;\n                iVar4 = in_ECX[iVar2];\n            } while (iVar4 != 0);\n        }\n        piVar3 = arg_8h + iVar6 + 1;\n        iVar4 = *piVar3;\n        while (iVar4 != 0) {\n            if (*piVar3 != 0x2a) {\n                *(arg_ch + iVar5 * 2) = *piVar3;\n                iVar5 = iVar5 + 1;\n            }\n            piVar3 = piVar3 + 1;\n            iVar4 = *piVar3;\n        }\n        *(arg_ch + iVar5 * 2) = 0;\n        bVar1 = true;\n    }\n    fcn.00423132(in_EDX, 0x4b37b8);\n    if (!bVar1) {\n        fcn.00421943(arg_ch, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 495
    },
    "00447cd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447cd7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t lprc;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lprc = -(in_ECX != 0x80000000) & in_ECX;\n    var_ch = -(in_EDX != 0x80000000) & in_EDX;\n    var_4h = arg_ch + var_ch;\n    var_8h = arg_8h + lprc;\n    (*_sym.imp.USER32.dll_MonitorFromRect)(&lprc, 0);\n    return;\n}\n",
        "token_count": 171
    },
    "00448a89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448a89(uint32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t *in_ECX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    puVar2 = arg_8h;\n    iVar5 = 0;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    piVar1 = arg_8h[4];\n    in_ECX[4] = piVar1;\n    if (piVar1 != NULL) {\n        *piVar1 = *piVar1 + 1;\n    }\n    in_ECX[2] = arg_8h[2];\n    in_ECX[3] = arg_8h[3];\n    arg_8h_00 = *arg_8h;\n    *in_ECX = arg_8h_00;\n    if (arg_8h_00 != 0) {\n        uVar4 = -(arg_8h_00 * 0x20 >> 0x20 != 0) | arg_8h_00 * 0x20;\n        puVar3 = fcn.0042010a(-(0xfffffffb < uVar4) | uVar4 + 4);\n        if (puVar3 == NULL) {\n            puVar3 = NULL;\n        }\n        else {\n            *puVar3 = arg_8h_00;\n            puVar3 = puVar3 + 1;\n            fcn.0041ac65(arg_8h_00, 0x448b39);\n        }\n        in_ECX[1] = puVar3;\n        if (0 < *in_ECX) {\n            arg_8h = NULL;\n            do {\n                fcn.00448ba7(puVar2[1] + arg_8h);\n                iVar5 = iVar5 + 1;\n                arg_8h = arg_8h + 0x20;\n            } while (iVar5 < *in_ECX);\n        }\n    }\n    return;\n}\n",
        "token_count": 484
    },
    "00449a0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449a0a(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    iVar1 = arg_8h[8];\n    in_ECX[8] = iVar1;\n    if (iVar1 != 0) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    iVar1 = arg_8h[9];\n    in_ECX[9] = iVar1;\n    if (iVar1 != 0) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.00449d25(0);\n    fcn.00449d25(0);\n    fcn.00449d25(0);\n    fcn.00449d25(0);\n    fcn.00449d25(0);\n    fcn.00449d25(0);\n    return;\n}\n",
        "token_count": 240
    },
    "00449c73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449c73(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x14);\n    uVar1 = *(in_ECX + 0xc);\n    fcn.0044ad14(*(in_ECX + 0xc));\n    uVar2 = fcn.0044be47(*(in_ECX + 8), *(in_ECX + 0xc));\n    fcn.0041faa0(uVar2);\n    fcn.00421970(*(in_ECX + 8), 0, *(in_ECX + 0xc));\n    *(in_ECX + 0xc) = 0;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x14);\n    return uVar1;\n}\n",
        "token_count": 203
    },
    "0044a7b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044a7b1(uint16_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_10h;\n    \n    uVar1 = *param_1;\n    if (uVar1 != *param_2) {\n        return (uVar1 >> 8) << 8;\n    }\n    if ((uVar1 == 0) || (uVar1 == 1)) {\n        uVar3 = uVar1 & 0xff00 | 1;\n    }\n    else {\n        if ((uVar1 & 0x6000) == 0) {\n            if (uVar1 == 0xe) {\n                arg_10h = 0x10;\n            }\n            else {\n                arg_10h = 4;\n    // switch table (35 cases) at 0x44a829\n                switch(uVar1) {\n                case 2:\n                case 10:\n                case 0xb:\n                case 0x12:\n                    arg_10h = 2;\n                    break;\n                case 5:\n                case 6:\n                case 7:\n                case 0x14:\n                case 0x15:\n                case 0x24:\n                    arg_10h = 8;\n                    break;\n                case 0x10:\n                case 0x11:\n                    arg_10h = 1;\n                }\n                param_2 = param_2 + 4;\n                param_1 = param_1 + 4;\n            }\n            iVar2 = fcn.00420183(param_1, param_2, arg_10h);\n        }\n        else {\n            iVar2 = *(param_1 + 4) - *(param_2 + 4);\n        }\n        uVar3 = iVar2 == 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 427
    },
    "0044aadf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044aadf(int32_t **param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    piVar2 = *param_1;\n    iVar1 = piVar2[0x83];\n    if (iVar1 != piVar2[0x84]) {\n        return piVar2 & 0xffffff00;\n    }\n    iVar3 = 0;\n    if (0 < iVar1) {\n        piVar2 = piVar2 + 0x43;\n        do {\n            if ((*piVar2 < 0) || (piVar2[-0x40] <= *piVar2)) {\n                return piVar2 & 0xffffff00;\n            }\n            iVar3 = iVar3 + 1;\n            piVar2 = piVar2 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return CONCAT31(piVar2 >> 8, 1);\n}\n",
        "token_count": 218
    },
    "0044ab1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044ab1c(int32_t **arg_8h)\n\n{\n    int32_t **ppiVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t **in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    ppiVar1 = arg_8h;\n    piVar4 = *in_ECX;\n    iVar3 = piVar4[0x83];\n    if ((iVar3 != 0) && (in_EAX = *arg_8h,  iVar3 == in_EAX[0x83])) {\n        iVar5 = 0;\n        if (0 < iVar3) {\n            iVar3 = 0x10c;\n            do {\n                *(iVar3 + piVar4) = 0;\n                *(iVar3 + *arg_8h) = 0;\n                piVar4 = *in_ECX;\n                iVar5 = iVar5 + 1;\n                iVar3 = iVar3 + 4;\n            } while (iVar5 < piVar4[0x83]);\n        }\n        do {\n            iVar3 = fcn.0044ac07();\n            if (((-1 < iVar3) && (iVar3 = *(**ppiVar1 + iVar3 * 4),  iVar3 != 0)) &&\n               (iVar5 = fcn.004114a0(in_ECX, 0, 0),  iVar5 != 0)) {\n                fcn.0040d89e(iVar3);\n            }\n            arg_8h = NULL;\n            iVar3 = 0;\n            if (0 < (*in_ECX)[0x83]) {\n                iVar5 = 0x10c;\n                do {\n                    *(iVar5 + *in_ECX) = *(iVar5 + *in_ECX) + 1;\n                    *(iVar5 + *ppiVar1) = *(iVar5 + *ppiVar1) + 1;\n                    cVar2 = fcn.0044aadf();\n                    if ((cVar2 != '\\0') && (cVar2 = fcn.0044aadf(),  iVar3 = arg_8h,  cVar2 != '\\0')) break;\n                    *(iVar5 + *in_ECX) = 0;\n                    *(iVar5 + *ppiVar1) = 0;\n                    iVar3 = arg_8h + 1;\n                    iVar5 = iVar5 + 4;\n                    arg_8h = iVar3;\n                } while (iVar3 < (*in_ECX)[0x83]);\n            }\n            in_EAX = *in_ECX;\n        } while (iVar3 < in_EAX[0x83]);\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 609
    },
    "0044ad14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044ad14(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **in_ECX;\n    \n    fcn.00412570();\n    piVar1 = fcn.0042010a(8);\n    *in_ECX = piVar1;\n    *piVar1 = arg_8h;\n    if (arg_8h == 0) {\n        iVar2 = fcn.0042010a(1);\n        (*in_ECX)[1] = iVar2;\n        *(*in_ECX)[1] = 0;\n    }\n    else {\n        iVar2 = fcn.0042010a(**in_ECX);\n        (*in_ECX)[1] = iVar2;\n        fcn.00421970((*in_ECX)[1], 0, **in_ECX);\n    }\n    in_ECX[3] = 0xb;\n    return (*in_ECX)[1];\n}\n",
        "token_count": 221
    },
    "0044ba9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ndouble * __cdecl fcn.0044ba9b(double *arg_8h, uint arg_ch)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    float10 fVar5;\n    float10 fVar6;\n    ulong uVar7;\n    \n    *arg_8h = 0;\n    *(arg_8h + 1) = 0;\n    *(arg_8h + 0xc) = 1;\n    uVar2 = fcn.0044bd6a();\n    uVar3 = fcn.0044bd6a();\n    dVar1 = *0x4ba050;\n    if ((uVar2 & 0x40060) == 0) {\n        if (((uVar3 & 0x40060) == 0) || ((uVar2 & 0x701f8) == 0)) {\n            if (((uVar2 & 0x204) == 0) || ((uVar3 & 0x701f8) == 0)) {\n                if (((uVar3 & 0x204) == 0) || ((uVar2 & 0x701f8) == 0)) {\n                    if (((uVar3 & 0x10038) == 0) || ((uVar2 & 0xffff0000) == 0)) {\n                        fVar5 = fcn.00412620();\n                        fVar5 = fcn.00412620(fVar5);\n                        fVar5 = fcn.00423e50(fVar5);\n                        fcn.00412570();\n                        *(arg_8h + 0xc) = 3;\ncode_r0x0044bcf4:\n                        *arg_8h = fVar5;\n                    }\n                    else {\n                        fcn.00412620();\n                        fVar5 = fcn.00412620();\n                        fVar5 = fcn.00423d90(SUB84(fVar5, 0), fVar5 >> 0x20);\n                        fVar5 = fcn.00423e50(fVar5);\n                        fcn.00412570();\n                        *arg_8h = fVar5;\n                        *(arg_8h + 0xc) = 3;\n                        if ((uVar2 & 0x100000) != 0) {\n                            fVar5 = fcn.00412620();\n                            fVar5 = -fVar5;\n                            fcn.00412570();\n                            *(arg_8h + 0xc) = 3;\n                            goto code_r0x0044bcf4;\n                        }\n                    }\n                    uVar4 = fcn.0044bd6a();\n                    if (((((uVar4 & 0xffff0000) != 0) && ((uVar3 & 0xffff) == 0)) && (uVar2 == 0)) &&\n                       ((fVar5 = fcn.00412620(),  fVar5 < *0x4b6570 &&\n                        (fVar5 = fcn.00412620(),  ((fVar5 < *0x4b6580) << 8 | (fVar5 == *0x4b6580) << 0xe) == 0)))) {\n                        uVar7 = fcn.0040d00b();\n                        fcn.00412570();\n                        *(arg_8h + 0xc) = 2;\n                        *arg_8h = uVar7;\n                        *(arg_8h + 4) = uVar7 >> 0x20;\n                    }\n                    goto code_r0x0044bd59;\n                }\n                if (((uVar3 & 0x200) == 0) && ((uVar2 & 0x100000) != 0)) {\n                    if ((uVar2 & 0x10000) == 0) {\n                        dVar1 = -*0x4ba050;\n                        goto code_r0x0044bbd0;\n                    }\n                    fcn.00412570();\n                    *(arg_8h + 0xc) = 3;\n                    dVar1 = *0x4b2768;\n                    goto code_r0x0044bbe2;\n                }\n                uVar2 = uVar2 & 0x10038;\n            }\n            else {\n                fVar5 = fcn.00412620();\n                fVar6 = fcn.00423d90(SUB84(fVar5, 0), fVar5 >> 0x20);\n                fVar5 = 1;\n                if (((fVar5 < fVar6) << 8 | (fVar5 == fVar6) << 0xe) != 0) {\n                    if (fVar5 < fVar6) {\n                        uVar2 = uVar2 & 0x200;\n                        goto code_r0x0044bb7f;\n                    }\n                    dVar1 = *0x4ba050 * *0x4b2720;\n                    goto code_r0x0044bbd0;\n                }\n                uVar2 = uVar2 & 0x200;\n            }\n            dVar1 = *0x4ba050;\n            if (uVar2 == 0) {\ncode_r0x0044bbd0:\n                fcn.00412570();\n                *(arg_8h + 0xc) = 3;\n                goto code_r0x0044bbe2;\n            }\n        }\n        else {\n            if ((uVar2 & 0x100000) != 0) {\n                if ((uVar2 & 0x10000) == 0) {\n                    fcn.00412570();\n                    *arg_8h = 0.0;\n                    *(arg_8h + 0xc) = 3;\n                    if ((uVar3 & 0x20) == 0) goto code_r0x0044bd59;\n                    fcn.00412570();\n                    *(arg_8h + 0xc) = 3;\n                    dVar1 = *0x4b2768;\n                }\n                else {\n                    fcn.00412570();\n                    *arg_8h = dVar1;\n                    *(arg_8h + 0xc) = 3;\n                    if ((uVar3 & 0x20) == 0) goto code_r0x0044bd59;\n                    dVar1 = -*0x4ba050;\n                    fcn.00412570();\n                    *(arg_8h + 0xc) = 3;\n                }\n                goto code_r0x0044bbe2;\n            }\n            uVar2 = uVar2 & 0x10038;\ncode_r0x0044bb7f:\n            dVar1 = *0x4ba050;\n            if (uVar2 != 0) goto code_r0x0044bbd0;\n        }\n        fcn.00412570();\n        *(arg_8h + 0xc) = 3;\n        dVar1 = 0.0;\n    }\n    else {\n        fcn.00412570();\n        *(arg_8h + 0xc) = 3;\n        dVar1 = 1.0;\n    }\ncode_r0x0044bbe2:\n    *arg_8h = dVar1;\ncode_r0x0044bd59:\n    fcn.00412570();\n    return arg_8h;\n}\n",
        "token_count": 1622
    },
    "0044bf7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044bf7c(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    \n    iVar4 = 1;\n    puVar3 = 0x4c34f8;\n    *0x4c34f8 = param_1;\n    do {\n        uVar1 = *puVar3;\n        uVar2 = *puVar3;\n        puVar3 = puVar3 + 1;\n        *puVar3 = (uVar1 >> 0x1e ^ uVar2) * 0x6c078965 + iVar4;\n        iVar4 = iVar4 + 1;\n    } while (puVar3 < 0x4c3eb4);\n    *0x4bf7e0 = 1;\n    *0x4c34e4 = 1;\n    return;\n}\n",
        "token_count": 211
    },
    "0044c488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c488(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4c3ec0 < 0x1001) {\n        *0x4c3ec0 = *0x4c3ec0 + 1;\n    }\n    else {\n        *0x4c3ec0 = 0;\n        if (*(param_1 + 0x454) != NULL) {\n            iVar1 = (**(param_1 + 0x454))(*(param_1 + 0xc), *(param_1 + 8), (*(param_1 + 8) * 100) / *(param_1 + 0x10));\n            if (iVar1 == 0) {\n                *(param_1 + 0x448) = 1;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0044c5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044c5e0(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    \n    if ((*(param_1 + 0x464) == 0) || (*(param_1 + 0x464) == 0x10000)) {\n        fcn.004244ae(*(param_1 + 0x45c), 1, 0x10000, *(param_1 + 0x1c));\n        *(param_1 + 0x464) = 0;\n    }\n    uVar1 = *(*(param_1 + 0x464) + *(param_1 + 0x45c));\n    *(param_1 + 0x464) = *(param_1 + 0x464) + 1;\n    return *(param_1 + 0x45c) & 0xffffff00 | uVar1;\n}\n",
        "token_count": 201
    },
    "0044c629": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c629(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(*(in_ECX + 0x458) + *(in_ECX + 0x460)) = arg_8h;\n    *(in_ECX + 0x460) = *(in_ECX + 0x460) + 1;\n    if (*(in_ECX + 0x460) == 0x10000) {\n        fcn.0042373e(*(in_ECX + 0x458), 1, 0x10000, *(in_ECX + 0x20));\n        *(in_ECX + 0x460) = 0;\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0044c676": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c676(int32_t param_1)\n\n{\n    if (*(param_1 + 0x460) != 0) {\n        fcn.0042373e(*(param_1 + 0x458), 1, *(param_1 + 0x460), *(param_1 + 0x20));\n        *(param_1 + 0x460) = 0;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0044c6e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c6e4(uint32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *in_ECX;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    \n    arg_8h = arg_8h & 0xffff;\n    puVar1 = in_ECX + 2;\n    iVar3 = 0x11;\n    puVar2 = puVar1;\n    do {\n        arg_8h = arg_8h * -0x53a9b4fb + 1;\n        *puVar2 = arg_8h;\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *in_ECX = 0;\n    in_ECX[1] = 10;\n    fcn.0041faa0(in_ECX + 0x13, puVar1, 0x44);\n    fcn.0041faa0(in_ECX + 0x24, puVar1, 0x44);\n    iVar3 = 9;\n    do {\n        fcn.0044c74a();\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 288
    },
    "0044c74a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.0044c74a(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    double dVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = fcn.0042467e(param_1[*param_1 + 2], 9);\n    iVar4 = fcn.0042467e(param_1[param_1[1] + 2], 0xd);\n    uVar5 = iVar3 + iVar4;\n    param_1[*param_1 + 2] = uVar5;\n    *param_1 = *param_1 + -1;\n    if (*param_1 < 0) {\n        *param_1 = 0x10;\n    }\n    piVar1 = param_1 + 1;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 < 0) {\n        param_1[1] = 0x10;\n    }\n    if ((param_1[*param_1 + 2] == param_1[0x13]) &&\n       (iVar3 = fcn.00420183(param_1 + 2, param_1 + (0x24 - *param_1), 0x44),  iVar3 == 0)) {\n        return 0;\n    }\n    if (param_1[0x35] == 0) {\n        var_8h = uVar5 * 0x100000;\n        var_4h = uVar5 >> 0xc | 0x3ff00000;\n    }\n    else {\n        if (param_1[0x35] != 1) {\n            dVar2 = uVar5;\n            if (uVar5 < 0) {\n                dVar2 = dVar2 + *0x4b6568;\n            }\n            return dVar2 * *0x4b6538;\n        }\n        var_4h = uVar5 * 0x100000;\n        var_8h = uVar5 >> 0xc | 0x3ff00000;\n    }\n    return CONCAT44(var_4h, var_8h) - *0x4b2738;\n}\n",
        "token_count": 519
    },
    "0044d10c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d10c(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00422c1d(in_ECX + 0x24, arg_8h, 0x104);\n    *(in_ECX + 0x22c) = 0;\n    return;\n}\n",
        "token_count": 76
    },
    "0044d134": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d134(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00422c1d(in_ECX + 0x22e, arg_8h, 0x104);\n    *(in_ECX + 0x436) = 0;\n    return;\n}\n",
        "token_count": 75
    },
    "0044d76e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d76e(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    if ((arg_8h < 0) || (*(in_ECX + 0x49c) <= arg_8h)) {\n        fcn.0040c4cd();\n        uVar2 = 0;\n    }\n    else {\n        puVar1 = fcn.00414700(arg_8h);\n        fcn.00407e53(*puVar1);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 146
    },
    "0041ba98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ba98(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = 0;\n    iVar3 = *(in_ECX + -0x18) + -1;\n    if (-1 < iVar3) {\n        do {\n            arg_8h_00 = (iVar3 + iVar4) / 2;\n            puVar1 = fcn.00414700(arg_8h_00);\n            iVar2 = fcn.00422203(arg_8h, *puVar1);\n            if (iVar2 < 0) {\n                iVar3 = arg_8h_00 + -1;\n            }\n            else {\n                if (iVar2 < 1) break;\n                iVar4 = arg_8h_00 + 1;\n            }\n        } while (iVar4 <= iVar3);\n        if (iVar4 <= iVar3) {\n            return arg_8h_00;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 264
    },
    "0044e228": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044e228(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_218h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    iVar3 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar3 + 8);\n    var_10h = *puVar1;\n    var_ch = puVar1[1];\n    var_8h = puVar1[2];\n    var_4h = puVar1[3];\n    *var_4h = *var_4h + 1;\n    fcn.004471f1();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)(var_10h, 0, 0, 0, 0, 0, &var_218h, 0x104);\n    if (iVar3 == 0) {\n        fcn.0040ca8e(0x49dbf0);\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        fcn.0040ca8e(&var_218h);\n    }\n    fcn.00405cd3();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar2);\n    return 0;\n}\n",
        "token_count": 350
    },
    "0044e2d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044e2d5(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_218h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    iVar3 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar3 + 8);\n    var_10h = *puVar1;\n    var_ch = puVar1[1];\n    var_8h = puVar1[2];\n    var_4h = puVar1[3];\n    *var_4h = *var_4h + 1;\n    fcn.004471f1();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)(var_10h, &var_218h, 0x104, 0, 0, 0, 0, 0);\n    if (iVar3 == 0) {\n        fcn.0040ca8e(0x49dbf0);\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        fcn.0040ca8e(&var_218h);\n    }\n    fcn.00405cd3();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar2);\n    return 0;\n}\n",
        "token_count": 352
    },
    "0044e382": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044e382(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_21ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    iVar3 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar3 + 8);\n    var_14h = *puVar1;\n    var_10h = puVar1[1];\n    var_ch = puVar1[2];\n    var_8h = puVar1[3];\n    *var_8h = *var_8h + 1;\n    fcn.004471f1();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)(var_14h, &var_21ch, 0x104, &var_4h, 0, 0, 0, 0);\n    if (iVar3 == 0) {\n        fcn.0040ca8e(0x49dbf0);\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        fcn.0042234b(&var_21ch, 0x4b3d28, var_4h);\n        fcn.0040ca8e(&var_21ch);\n    }\n    fcn.00405cd3();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar2);\n    return 0;\n}\n",
        "token_count": 388
    },
    "0044e913": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044e913(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    iVar1 = (*_sym.imp.MPR.dll_WNetCancelConnection2W)(**(iVar1 + 8), 1, 1);\n    if (iVar1 != 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00407ba9(iVar1, 0);\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    return 0;\n}\n",
        "token_count": 160
    },
    "0044e973": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044e973(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_804h;\n    uint var_4h;\n    \n    var_4h = 0x400;\n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    iVar1 = (*_sym.imp.MPR.dll_WNetGetConnectionW)(**(iVar1 + 8), &var_804h, &var_4h);\n    if (iVar1 == 0) {\n        fcn.0040ca8e(&var_804h);\n    }\n    else {\n        fcn.0040ca8e(0x49dbf0);\n        fcn.0044d7e4(1, 0);\n        fcn.00407ba9(iVar1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 202
    },
    "0044f2bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f2bf(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    \n    fcn.004084a6();\n    cVar1 = fcn.00446e4a();\n    if (cVar1 == '\\0') {\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00407ba9(arg_8h_00, 0);\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 145
    },
    "0044f8ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f8ef(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *puVar4;\n    char cVar5;\n    int32_t in_ECX;\n    \n    cVar5 = fcn.0041f0f3(&arg_8h, **(arg_8h + 4), 0);\n    puVar4 = arg_ch;\n    if (cVar5 == '\\0') {\n        fcn.0044d7e4(1, 0);\n        puVar4 = arg_ch;\n        fcn.00412570();\n        puVar4[3] = 1;\n        *puVar4 = 0;\n    }\n    else {\n        iVar1 = *(**(*(in_ECX + 0x198) + arg_8h * 4) + 4);\n        uVar2 = *(iVar1 + 0x10);\n        uVar3 = *(iVar1 + 0x14);\n        fcn.00412570();\n        puVar4[3] = 2;\n        *puVar4 = uVar2;\n        puVar4[1] = uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 282
    },
    "00451939": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451939(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int16_t *piVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint *puVar10;\n    ulong uVar11;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    fcn.0040d3d2();\n    fcn.004084a6();\n    fcn.004478ad();\n    iVar8 = *(*(arg_8h + 4) + 8);\n    cVar2 = fcn.0040d2c0(5);\n    if (cVar2 != '\\0') {\n        uVar11 = fcn.0040218e(0);\n        iVar3 = uVar11 >> 0x20;\n        if (uVar11 == iVar3) {\n            uVar11 = fcn.0040218e(iVar3);\n            if (uVar11 == uVar11 >> 0x20) {\n                var_8h = 1;\n                if (3 < *(arg_8h + 8)) {\n                    var_8h = fcn.0040cdb4();\n                    if (var_8h < 0) {\n                        var_8h = 1;\n                    }\n                }\n                arg_8h_00 = *(*(arg_8h + 4) + 8);\n                iVar8 = 0;\n                while( true ) {\n                    uVar11 = fcn.0040218e(1);\n                    if (uVar11 <= uVar11 >> 0x20) break;\n                    iVar3 = fcn.004114a0(arg_8h_00, 1, 2);\n                    fcn.004084a6();\n                    iVar3 = *(*(iVar3 + 8) + 4);\n                    iVar4 = fcn.004114a0(arg_8h_00, 1, 2);\n                    fcn.004084a6();\n                    iVar8 = iVar8 + 2 + *(*(iVar4 + 8) + 4) + iVar3;\n                }\n                iVar1 = (iVar8 + 1) * 2;\n                puVar5 = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n                puVar9 = puVar5;\n                while( true ) {\n                    uVar11 = fcn.0040218e(1);\n                    if (uVar11 <= var_8h) break;\n                    iVar8 = fcn.004114a0(uVar11 >> 0x20, 1, 2);\n                    fcn.004084a6();\n                    for (piVar6 = **(iVar8 + 8); *piVar6 != 0; piVar6 = piVar6 + 1) {\n                        *puVar9 = *piVar6;\n                        puVar9 = puVar9 + 2;\n                    }\n                    *puVar9 = 0x3d;\n                    iVar8 = fcn.004114a0(arg_8h_00, 1, 2);\n                    fcn.004084a6();\n                    for (piVar6 = **(iVar8 + 8); puVar10 = puVar9 + 2,  *piVar6 != 0; piVar6 = piVar6 + 1) {\n                        *puVar10 = *piVar6;\n                        puVar9 = puVar10;\n                    }\n                    *puVar10 = 0;\n                    puVar9 = puVar9 + 1;\n                    var_8h = var_8h + 1;\n                }\n                *puVar9 = 0;\n                goto code_r0x00451b90;\n            }\n        }\n    }\n    cVar2 = fcn.0040d2c0(4);\n    if (cVar2 != '\\0') {\n        fcn.004084a6();\n        iVar1 = (*(*(iVar8 + 8) + 4) + 2) * 2;\n        puVar5 = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n        iVar8 = *(*(arg_8h + 4) + 8);\n        fcn.004084a6();\n        for (piVar6 = **(iVar8 + 8); puVar9 = puVar5,  *piVar6 == 10; piVar6 = piVar6 + 1) {\n        }\n        do {\n            iVar7 = *piVar6;\n            if (iVar7 == 10) {\n                iVar7 = 0;\n            }\n            else if (iVar7 == 0) goto code_r0x00451b8c;\n            *puVar9 = iVar7;\n            puVar9 = puVar9 + 2;\n            piVar6 = piVar6 + 1;\n        } while( true );\n    }\n    fcn.0044d7e4(1, 0);\n    goto code_r0x00451be9;\ncode_r0x00451b8c:\n    *puVar9 = 0;\ncode_r0x00451b90:\n    iVar8 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    iVar8 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileSectionW)(**(iVar8 + 8), puVar5, var_20h);\n    if (iVar8 != 0) {\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(0, 0, 0, var_20h);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    fcn.0042017e(puVar5);\ncode_r0x00451be9:\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 1392
    },
    "00452e0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452e0a(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    char cVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(arg_8h + 4) + 8);\n    cVar7 = *(iVar1 + 0xc) == 4;\n    iVar2 = *(*(arg_8h + 4) + 0xc);\n    if (*(iVar2 + 0xc) == 4) {\n        cVar7 = cVar7 + '\\x02';\n    }\n    if (cVar7 == '\\0') {\n        uVar5 = fcn.0040cdb4();\n        uVar6 = fcn.0040cdb4();\n        uVar3 = fcn.0040cdb4();\n        uVar4 = fcn.0040cdb4();\n        uVar5 = fcn.0046a773(uVar4, uVar3, uVar6, uVar5);\n    }\n    else if (cVar7 == '\\x01') {\n        fcn.004084a6();\n        uVar5 = **(iVar1 + 8);\n        uVar6 = fcn.0040cdb4();\n        uVar3 = fcn.0040cdb4();\n        uVar4 = fcn.0040cdb4();\n        uVar5 = fcn.0046a773(uVar4, uVar3, uVar5, uVar6);\n    }\n    else if (cVar7 == '\\x02') {\n        fcn.004084a6();\n        uVar5 = **(iVar2 + 8);\n        uVar6 = fcn.0040cdb4();\n        uVar3 = fcn.0040cdb4();\n        uVar4 = fcn.0040cdb4();\n        uVar5 = fcn.0046a773(uVar4, uVar3, uVar6, uVar5);\n    }\n    else {\n        if (cVar7 != '\\x03') {\n            return 0;\n        }\n        fcn.004084a6();\n        uVar5 = **(iVar2 + 8);\n        iVar1 = *(*(arg_8h + 4) + 8);\n        fcn.004084a6();\n        uVar6 = **(iVar1 + 8);\n        uVar3 = fcn.0040cdb4();\n        uVar4 = fcn.0040cdb4();\n        uVar5 = fcn.0046a773(uVar4, uVar3, uVar6, uVar5);\n    }\n    fcn.00412570();\n    *arg_ch = uVar5;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 643
    },
    "00452fb7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452fb7(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = fcn.0040cdb4();\n    arg_8h_00 = fcn.0040cdb4();\n    iVar1 = fcn.0046b14a(arg_8h_00, arg_ch_00);\n    if (iVar1 < 0) {\n        fcn.00407ba9(-iVar1, 0);\n        iVar1 = 1;\n    }\n    fcn.00412570();\n    *arg_ch = iVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 169
    },
    "00453013": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453013(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = fcn.0040cdb4();\n    arg_8h_00 = fcn.0040cdb4();\n    iVar1 = fcn.0046b354(arg_8h_00, arg_ch_00);\n    if (iVar1 < 0) {\n        fcn.00407ba9(-iVar1, 0);\n        iVar1 = 1;\n    }\n    fcn.00412570();\n    *arg_ch = iVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 167
    },
    "004548e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004548e8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t arg_8h_00;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    iVar3 = *(in_ECX + 8);\n    iVar6 = 0;\n    arg_8h_00 = 0;\n    if (iVar3 != 0) {\n        piVar4 = *(in_ECX + 4);\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n            arg_8h_00 = arg_8h_00 + *(iVar1 + 4);\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = fcn.0044ad14(arg_8h_00);\n    uVar5 = 0;\n    if (*(in_ECX + 8) != 0) {\n        do {\n            puVar2 = *(*(in_ECX + 4) + uVar5 * 4);\n            fcn.0041faa0(iVar6 + iVar3, *puVar2, puVar2[1]);\n            iVar6 = iVar6 + *(*(*(in_ECX + 4) + uVar5 * 4) + 4);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *(in_ECX + 8));\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "00454b0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454b0c(uint arg_8h)\n\n{\n    fcn.00455755();\n    return 0;\n}\n",
        "token_count": 33
    },
    "00454d74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454d74(uint arg_8h)\n\n{\n    fcn.00455755();\n    return 0;\n}\n",
        "token_count": 32
    },
    "004554a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004554a5(int16_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    uVar1 = *arg_8h - 1;\n    if (uVar1 != 0) {\n        uVar1 = *arg_8h - 2;\n        if (uVar1 == 0) {\n            uVar3 = 1;\n        }\n        else {\n            arg_8h = NULL;\n            uVar1 = (*_sym.imp.WININET.dll_InternetQueryOptionW)(0, 0x26, 0, &arg_8h);\n            if (arg_8h != NULL) {\n                iVar2 = fcn.0042010a(arg_8h);\n                fcn.00421970(iVar2, 0, arg_8h);\n                (*_sym.imp.WININET.dll_InternetQueryOptionW)(0, 0x26, iVar2, &arg_8h);\n                uVar3 = *(iVar2 + 4) != 0;\n                uVar1 = fcn.0042017e(iVar2);\n            }\n        }\n    }\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 292
    },
    "00455b5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00455b5e(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00412620();\n    fVar1 = fcn.00424fc0(fVar1);\n    fcn.00412570();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 96
    },
    "00455b9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00455b9e(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00412620();\n    fVar1 = fcn.00425110(fVar1);\n    fcn.00412570();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 95
    },
    "00455f5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00455f5a(uint arg_8h, double *arg_ch)\n\n{\n    uint uVar1;\n    float10 fVar2;\n    ulong uVar3;\n    uint var_10h;\n    double dStack12;\n    \n    fcn.00412620();\n    fVar2 = fcn.00425810();\n    dStack12 = fVar2;\n    fcn.00412570();\n    *arg_ch = dStack12;\n    *(arg_ch + 0xc) = 3;\n    uVar1 = 0;\n    uVar3 = fcn.0040d00b();\n    uVar1 = fcn.00456927(&var_10h, uVar3, uVar3 >> 0x20, uVar1);\n    fcn.0040d89e(uVar1);\n    fcn.00412570();\n    return 0;\n}\n",
        "token_count": 199
    },
    "00456071": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456071(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_10h;\n    \n    uVar1 = fcn.0040cdb4();\n    if (uVar1 == 0) {\n        fcn.0040d3d2();\n        fcn.00448b50(0);\n        fcn.00407bef(&var_10h);\n        fcn.00405cd3();\n    }\n    else if (uVar1 < 0x10000) {\n        arg_8h = uVar1 & 0xffff;\n        fcn.0040ca8e(&arg_8h);\n    }\n    else {\n        fcn.0040ca8e(0x49dbf0);\n        fcn.0044d7e4(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "004561c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004561c7(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00412620();\n    fVar1 = fcn.00424cc0(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fcn.00412570();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 110
    },
    "00456207": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456207(uint arg_8h, double *arg_ch)\n\n{\n    uint uVar1;\n    float10 fVar2;\n    ulong uVar3;\n    uint var_10h;\n    double dStack12;\n    \n    fcn.00412620();\n    fVar2 = fcn.004256e0();\n    dStack12 = fVar2;\n    fcn.00412570();\n    *arg_ch = dStack12;\n    *(arg_ch + 0xc) = 3;\n    uVar1 = 0;\n    uVar3 = fcn.0040d00b();\n    uVar1 = fcn.00456927(&var_10h, uVar3, uVar3 >> 0x20, uVar1);\n    fcn.0040d89e(uVar1);\n    fcn.00412570();\n    return 0;\n}\n",
        "token_count": 198
    },
    "0045626c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045626c(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0044be63();\n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n    if (iVar2 == 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 7;\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        uVar1 = fcn.0044be63();\n        fcn.00412570();\n        arg_ch[3] = 7;\n        *arg_ch = uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 173
    },
    "00456558": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456558(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00412620();\n    fVar1 = fcn.00424d50(fVar1);\n    fcn.00412570();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 94
    },
    "00456598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456598(uint arg_8h, double *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    float10 fVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    double dVar8;\n    \n    cVar1 = fcn.0040d2c0(1);\n    if (((cVar1 != '\\0') && (cVar1 = fcn.0040d2c0(1),  cVar1 != '\\0')) && (iVar2 = fcn.0040cdb4(),  iVar2 != 0)) {\n        iVar2 = fcn.0040cdb4();\n        iVar3 = fcn.0040cdb4();\n        fcn.00412570();\n        *(arg_ch + 0xc) = 1;\n        *arg_ch = iVar3 % iVar2;\n        return 0;\n    }\n    cVar1 = fcn.0040d18c();\n    if (((cVar1 != '\\0') && (cVar1 = fcn.0040d18c(),  cVar1 != '\\0')) && (iVar5 = fcn.0040d00b(),  iVar5 != 0)) {\n        uVar6 = fcn.0040d00b();\n        uVar7 = fcn.0040d00b();\n        uVar6 = fcn.00433210(uVar7, uVar6);\n        fcn.00412570();\n        *(arg_ch + 0xc) = 2;\n        *arg_ch = uVar6;\n        *(arg_ch + 4) = uVar6 >> 0x20;\n        return 0;\n    }\n    fVar4 = fcn.00412620();\n    dVar8 = fVar4;\n    fVar4 = fcn.00412620();\n    fVar4 = fcn.004255f0(SUB84(fVar4, 0), fVar4 >> 0x20, SUB84(dVar8, 0), dVar8 >> 0x20);\n    fcn.00412570();\n    *arg_ch = fVar4;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 501
    },
    "00456882": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456882(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00412620();\n    fVar1 = fcn.00425634(fVar1);\n    fcn.00412570();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 93
    },
    "004568e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004568e7(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00412620();\n    fVar1 = fcn.00425260(fVar1);\n    fcn.00412570();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 94
    },
    "00457099": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457099(uint noname_0, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uStack632;\n    uint uVar5;\n    uchar auStack576 [4];\n    uchar auStack572 [8];\n    uchar auStack564 [560];\n    \n    fcn.0040ca8e(0x49dbf0);\n    (*_sym.imp.USER32.dll_OpenClipboard)();\n    pcVar1 = _sym.imp.USER32.dll_IsClipboardFormatAvailable;\n    iVar2 = (*_sym.imp.USER32.dll_IsClipboardFormatAvailable)();\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_CountClipboardFormats)();\n                if (iVar2 == 0) {\n                    uVar5 = 1;\n                }\n                else {\n                    uVar5 = 2;\n                }\n                fcn.0044d7e4(uVar5, 0);\n            }\n            else {\n                iVar2 = (*_sym.imp.USER32.dll_GetClipboardData)();\n                if (iVar2 == 0) goto code_r0x004570e5;\n                iVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n                if (iVar3 == 0) goto code_r0x0045710b;\n                fcn.0040d3d2();\n                uStack632 = 0x4571cd;\n                iVar3 = (*_sym.imp.SHELL32.dll_DragQueryFileW)();\n                iVar4 = 0;\n                if (0 < iVar3 + -1) {\n                    iVar4 = 0;\n                    do {\n                        uStack632 = 0x104;\n                        (*_sym.imp.SHELL32.dll_DragQueryFileW)(iVar2, iVar4, &stack0xfffffdc4);\n                        fcn.004039e8(&stack0xfffffdcc);\n                        uStack632 = 0x457203;\n                        fcn.0040bd2f(10);\n                        iVar4 = iVar4 + 1;\n                    } while (iVar4 < iVar3 + -1);\n                }\n                uStack632 = 0x104;\n                (*_sym.imp.SHELL32.dll_DragQueryFileW)(iVar2, iVar4, &stack0xfffffdc4);\n                fcn.004039e8(&stack0xfffffdb4);\n                fcn.00407bef(&stack0xfffffd88);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar2);\n                fcn.00407ba9(1, 0);\n                fcn.00405cd3();\n            }\n        }\n        else {\n            iVar2 = (*_sym.imp.USER32.dll_GetClipboardData)();\n            if (iVar2 == 0) goto code_r0x004570e5;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            if (iVar2 == 0) goto code_r0x0045710b;\n            fcn.0043e0f5(iVar2);\n            uVar5 = fcn.0045ae5a(&stack0xfffffdc0);\n            fcn.00407bef(uVar5);\n            fcn.00405cd3();\n            uStack632 = 0x45717c;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n            fcn.00405cd3();\n        }\ncode_r0x00457283:\n        (*_sym.imp.USER32.dll_CloseClipboard)();\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_GetClipboardData)();\n        if (iVar2 == 0) {\ncode_r0x004570e5:\n            (*_sym.imp.USER32.dll_CloseClipboard)();\n            uVar5 = 3;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            if (iVar2 != 0) {\n                fcn.0040ca8e(iVar2);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n                goto code_r0x00457283;\n            }\ncode_r0x0045710b:\n            (*_sym.imp.USER32.dll_CloseClipboard)();\n            uVar5 = 4;\n        }\n        fcn.0044d7e4(uVar5, 0);\n    }\n    return 0;\n}\n",
        "token_count": 971
    },
    "00457294": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457294(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar2 + 8);\n    iVar2 = puVar1[1];\n    if (iVar2 == 0) {\n        (*_sym.imp.USER32.dll_OpenClipboard)(*0x4c10e8);\n        (*_sym.imp.USER32.dll_EmptyClipboard)();\ncode_r0x00457375:\n        (*_sym.imp.USER32.dll_CloseClipboard)();\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, iVar2 * 2 + 2);\n        if (iVar2 == 0) {\n            fcn.00412570();\n            arg_8h_01 = 3;\n        }\n        else {\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar2);\n            if (arg_8h_00 != 0) {\n                fcn.00421943(arg_8h_00, *puVar1);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar2);\n                (*_sym.imp.USER32.dll_OpenClipboard)(*0x4c10e8);\n                (*_sym.imp.USER32.dll_EmptyClipboard)();\n                iVar2 = (*_sym.imp.USER32.dll_SetClipboardData)(0xd, iVar2);\n                if (iVar2 == 0) {\n                    fcn.00412570();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                    fcn.0044d7e4(1, 0);\n                }\n                goto code_r0x00457375;\n            }\n            fcn.00412570();\n            arg_8h_01 = 4;\n        }\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.0044d7e4(arg_8h_01, 0);\n    }\n    return 0;\n}\n",
        "token_count": 484
    },
    "00457482": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457482(uint noname_0, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(0xffff, 0x1a, 0, 0x4b3d9c, 1, 15000, &var_4h);\n    if (iVar1 == 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.0044d7e4(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "004574d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004574d8(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar1 = *(iVar2 + 8);\n    var_14h = *puVar1;\n    var_10h = puVar1[1];\n    var_ch = puVar1[2];\n    var_8h = puVar1[3];\n    *var_8h = *var_8h + 1;\n    fcn.0040b8a7();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(var_14h, var_10h);\n    iVar2 = fcn.00448a2f(&var_14h);\n    if (iVar2 == 0) {\n        fcn.0044d7e4(1, 0);\n        fcn.0040ca8e(0x49dbf0);\n    }\n    else {\n        fcn.0040d2d2(&var_14h, &arg_8h, &var_4h, 0);\n        fcn.0040d89e(arg_8h);\n    }\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 342
    },
    "0045762e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045762e(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint var_10h;\n    \n    cVar1 = fcn.0040d2c0(0xe);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0040d2c0(0xd);\n        if (cVar1 == '\\0') {\n            fcn.0040ca8e(0x49dbf0);\n            fcn.0044d7e4(1, 0);\n            return 0;\n        }\n        fcn.0040d3d2();\n        puVar2 = &var_10h;\n        arg_8h_00 = fcn.0044afbf();\n        fcn.0044d76e(arg_8h_00, puVar2);\n        puVar2 = &var_10h;\n    }\n    else {\n        puVar2 = fcn.0044afce(&var_10h);\n    }\n    fcn.00407bef(puVar2);\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 271
    },
    "00457abb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457abb(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0040d2c0(9);\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 91
    },
    "0045900c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045900c(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint arg_ch_00;\n    uint var_10ch;\n    uint var_108h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = fcn.0040cdb4();\n    var_8h = *(in_ECX + 0x498) / 1000;\n    var_10ch = 1;\n    var_4h = (*(in_ECX + 0x498) % 1000) * 1000;\n    var_108h = uVar1;\n    iVar2 = (*_sym.imp.WSOCK32.dll_select)(0, &var_10ch, 0, 0, &var_8h);\n    if (0 < iVar2) {\n        iVar2 = (*_sym.imp.WSOCK32.dll___WSAFDIsSet)(uVar1, &var_10ch);\n        if (iVar2 != 0) {\n            uVar1 = (*_sym.imp.WSOCK32.dll_accept)(uVar1, 0, 0);\n            fcn.00412570();\n            *arg_ch = uVar1;\n            goto code_r0x004590c3;\n        }\n    }\n    arg_ch_00 = 0;\n    uVar1 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n    fcn.0044d7e4(uVar1, arg_ch_00);\n    fcn.00412570();\n    *arg_ch = 0xffffffff;\ncode_r0x004590c3:\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 394
    },
    "004590d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004590d3(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    \n    uVar1 = fcn.0040cdb4();\n    iVar2 = (*_sym.imp.WSOCK32.dll_closesocket)(uVar1);\n    if (iVar2 == 0) {\n        arg_8h = CONCAT31(arg_8h._1_3_, 1);\n    }\n    else {\n        uVar1 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n        fcn.0044d7e4(uVar1, unaff_ESI);\n        arg_8h = arg_8h._1_3_ << 8;\n    }\n    fcn.0041e387(arg_8h);\n    return 0;\n}\n",
        "token_count": 194
    },
    "004592c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004592c0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_24h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040a6d4();\n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    fcn.0041f26b(*(iVar1 + 8), &var_14h);\n    iVar1 = (*_sym.imp.WSOCK32.dll_gethostbyname)(var_14h);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.0044d7e4(uVar2, iVar1);\n        fcn.0040ca8e(0x49dbf0);\n    }\n    else {\n        fcn.0041faa0(&var_4h, **(iVar1 + 0xc), 4);\n        uVar2 = (*_sym.imp.WSOCK32.dll_inet_ntoa)(var_4h);\n        fcn.0045adca(uVar2);\n        uVar2 = fcn.0045ae5a(&var_24h);\n        fcn.00407bef(uVar2);\n        fcn.00405cd3();\n    }\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 324
    },
    "00459577": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459577(uint noname_0, uint arg_ch)\n\n{\n    int32_t arg_8h;\n    uint var_4h;\n    \n    arg_8h = (*_sym.imp.WSOCK32.dll_WSACleanup)();\n    fcn.0044d7e4(arg_8h, 0);\n    fcn.0041e387(arg_8h == 0);\n    return 0;\n}\n",
        "token_count": 97
    },
    "004595af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004595af(uint noname_0, uint arg_ch)\n\n{\n    int32_t arg_8h;\n    uchar auStackY512 [68];\n    uint32_t uStack428;\n    \n    arg_8h = (*_sym.imp.WSOCK32.dll_WSAStartup)(0x202);\n    fcn.0044d7e4(arg_8h, 0);\n    uStack428 = auStackY512 | arg_8h == 0;\n    fcn.0041e387(uStack428);\n    return 0;\n}\n",
        "token_count": 125
    },
    "0045986a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045986a(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    \n    iVar1 = fcn.004114a0(**(arg_8h + 4), 1, 1);\n    if (iVar1 == 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch_00 = 0;\n        arg_ch[3] = 1;\n        arg_8h_00 = 0xffffffff;\n    }\n    else {\n        iVar1 = fcn.0040cdb4();\n        if (iVar1 == 0x2b594d1) {\n            fcn.004114a0(**(arg_8h + 4), 1, 1);\n            arg_ch_00 = fcn.0040cdb4();\n            iVar1 = (*_sym.imp.WSOCK32.dll_closesocket)();\n            if (iVar1 == 0) {\n                fcn.00412570();\n                arg_ch[3] = 1;\n                *arg_ch = 1;\n                return 0;\n            }\n            fcn.00412570();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            arg_8h_00 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n        }\n        else {\n            fcn.00412570();\n            *arg_ch = 0;\n            arg_ch_00 = 0;\n            arg_ch[3] = 1;\n            arg_8h_00 = 0xfffffffe;\n        }\n    }\n    fcn.0044d7e4(arg_8h_00, arg_ch_00);\n    return 0;\n}\n",
        "token_count": 399
    },
    "0045a1cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "hash data with CRC32"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0045a1cd(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    double dVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    puVar4 = arg_8h + arg_ch;\n    puVar1 = arg_8h + arg_10h * 4;\n    uVar5 = 0xffffffff;\n    puVar6 = arg_8h;\n    do {\n        uVar5 = uVar5 >> 8 ^ *((uVar5 & 0xff ^ arg_8h[2]) * 4 + 0x4bfb70);\n        uVar2 = *arg_8h;\n        uVar5 = uVar5 >> 8 ^ *((uVar5 & 0xff ^ arg_8h[1]) * 4 + 0x4bfb70);\n        arg_8h = arg_8h + arg_10h * arg_14h * 4;\n        uVar5 = uVar5 >> 8 ^ *((uVar5 & 0xff ^ uVar2) * 4 + 0x4bfb70);\n        if (puVar4 <= arg_8h) {\n            arg_8h = puVar6 + arg_14h * 4;\n            puVar6 = arg_8h;\n        }\n    } while (puVar6 < puVar1);\n    dVar3 = ~uVar5;\n    if (-1 < uVar5) {\n        dVar3 = dVar3 + *0x4b6568;\n    }\n    return dVar3;\n}\n",
        "token_count": 401
    },
    "0045fc96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0045fc96(uint arg_8h, uint *arg_ch)\n\n{\n    int16_t *piVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint var_510h;\n    uint var_50ch;\n    uint var_508h;\n    uint var_4f0h;\n    uint var_4ech;\n    uint var_4e8h;\n    uint uStack1256;\n    char16_t cStack1252;\n    uint var_4deh;\n    uint uStack1246;\n    uint uStack1242;\n    uint uStack1238;\n    uint uStack1234;\n    ushort uStack1230;\n    uint var_4c8h;\n    uint var_4c4h;\n    uint var_4c0h;\n    uint var_4bch;\n    uint var_4b8h;\n    uint var_4a0h;\n    uint var_49ch;\n    uint var_498h;\n    uint uStack1176;\n    ushort uStack1172;\n    uint var_48eh;\n    uint uStack1166;\n    uint uStack1162;\n    uint uStack1158;\n    uint uStack1154;\n    ushort uStack1150;\n    uint var_478h;\n    uint var_474h;\n    uint var_470h;\n    uint uStack1136;\n    ushort uStack1132;\n    uint var_466h;\n    uint uStack1126;\n    uint uStack1122;\n    uint uStack1118;\n    uint uStack1114;\n    ushort uStack1110;\n    uint var_450h;\n    uint var_44ch;\n    uint var_448h;\n    uint uStack1096;\n    ushort uStack1092;\n    uint var_43eh;\n    uint uStack1086;\n    uint uStack1082;\n    uint uStack1078;\n    uint uStack1074;\n    ushort uStack1070;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uint var_414h;\n    uint uStack1044;\n    uint uStack1040;\n    uint uStack1036;\n    uint uStack1032;\n    uint var_400h;\n    uint var_3fch;\n    uint var_3f8h;\n    uint uStack1016;\n    uint uStack1012;\n    uint var_3ech;\n    uint uStack1004;\n    uint uStack1000;\n    uint uStack996;\n    uint uStack992;\n    uint var_3d8h;\n    uint var_3d4h;\n    uint var_3d0h;\n    uint uStack976;\n    uint uStack972;\n    uint var_3c4h;\n    uint uStack964;\n    uint uStack960;\n    uint uStack956;\n    uint uStack952;\n    uint var_3b0h;\n    uint var_3ach;\n    uint var_3a8h;\n    uint uStack936;\n    uint uStack932;\n    ushort uStack928;\n    uint var_39ah;\n    uint uStack922;\n    uint uStack918;\n    uint uStack914;\n    ushort uStack910;\n    uint var_388h;\n    uint var_384h;\n    uint var_380h;\n    uint uStack896;\n    ushort uStack892;\n    uint var_376h;\n    uint uStack886;\n    uint uStack882;\n    uint uStack878;\n    uint uStack874;\n    ushort uStack870;\n    uint var_360h;\n    uint var_35ch;\n    uint var_358h;\n    uint uStack856;\n    ushort uStack852;\n    uint var_34eh;\n    uint uStack846;\n    uint uStack842;\n    uint uStack838;\n    uint uStack834;\n    ushort uStack830;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    uint uStack816;\n    uint uStack812;\n    uint var_324h;\n    uint uStack804;\n    uint uStack800;\n    uint uStack796;\n    uint uStack792;\n    uint var_310h;\n    uint var_30ch;\n    uint var_308h;\n    uint uStack776;\n    uint uStack772;\n    uint uStack768;\n    uint var_2f8h;\n    uint uStack760;\n    uint uStack756;\n    uint uStack752;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint uStack736;\n    uint uStack732;\n    uint var_2d4h;\n    uint uStack724;\n    uint uStack720;\n    uint uStack716;\n    uint uStack712;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint uStack696;\n    uint uStack692;\n    char16_t cStack688;\n    uint var_2aah;\n    uint uStack682;\n    uint uStack678;\n    uint uStack674;\n    ushort uStack670;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint uStack616;\n    char16_t cStack612;\n    uint var_25eh;\n    uint uStack606;\n    uint uStack602;\n    uint uStack598;\n    uint uStack594;\n    ushort uStack590;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint uStack576;\n    uint uStack572;\n    char16_t cStack568;\n    uint var_232h;\n    uint uStack562;\n    uint uStack558;\n    uint uStack554;\n    ushort uStack550;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint uStack536;\n    uint uStack532;\n    uint uStack528;\n    uint var_208h;\n    uint uStack520;\n    uint uStack516;\n    uint uStack512;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint uStack496;\n    uint uStack492;\n    ushort uStack488;\n    uint var_1e2h;\n    uint uStack482;\n    uint uStack478;\n    uint uStack474;\n    ushort uStack470;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint uStack456;\n    uint uStack452;\n    ushort uStack448;\n    uint var_1bah;\n    uint uStack442;\n    uint uStack438;\n    uint uStack434;\n    ushort uStack430;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint uStack416;\n    uint uStack412;\n    uint var_194h;\n    uint uStack404;\n    uint uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint uStack376;\n    uint uStack372;\n    ushort uStack368;\n    uint var_16ah;\n    uint uStack362;\n    uint uStack358;\n    uint uStack354;\n    ushort uStack350;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint var_140h;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    ushort uStack284;\n    uint var_116h;\n    uint uStack278;\n    uint uStack274;\n    ushort uStack270;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    ushort uStack244;\n    uint var_eeh;\n    uint uStack238;\n    uint uStack234;\n    ushort uStack230;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_c4h;\n    uint uStack196;\n    uint uStack192;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_9ch;\n    uint uStack156;\n    uint uStack152;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_74h;\n    uint uStack116;\n    uint uStack112;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint uStack96;\n    uint uStack92;\n    ushort uStack88;\n    uint var_52h;\n    uint uStack82;\n    uint uStack78;\n    uint uStack74;\n    ushort uStack70;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    \n    var_510h = *0x4b314c;\n    var_50ch = *0x4b3150;\n    iVar5 = 6;\n    puVar2 = &var_508h;\n    for (iVar4 = iVar5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_4f0h = 6;\n    var_4ech = 4;\n    var_4e8h = str.wstr._0_4_;\n    uStack1256 = str.wstr._4_4_;\n    cStack1252 = str.wstr[4];\n    var_4deh = 0;\n    uStack1246 = 0;\n    uStack1242 = 0;\n    uStack1238 = 0;\n    uStack1234 = 0;\n    uStack1230 = 0;\n    var_4c0h = *0x4b30ec;\n    var_4bch = *0x4b30f0;\n    var_4c8h = 7;\n    var_4c4h = 4;\n    puVar2 = &var_4b8h;\n    for (iVar4 = iVar5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_4a0h = 4;\n    var_49ch = 4;\n    var_498h = *0x4b3088;\n    uStack1176 = *0x4b308c;\n    uStack1172 = *0x4b3090;\n    var_48eh = 0;\n    uStack1166 = 0;\n    uStack1162 = 0;\n    uStack1158 = 0;\n    uStack1154 = 0;\n    uStack1150 = 0;\n    var_478h = 4;\n    var_474h = 4;\n    var_470h = *0x4b30d4;\n    uStack1136 = *0x4b30d8;\n    uStack1132 = *0x4b30dc;\n    var_466h = 0;\n    uStack1126 = 0;\n    uStack1122 = 0;\n    uStack1118 = 0;\n    uStack1114 = 0;\n    uStack1110 = 0;\n    var_44ch = 4;\n    var_450h = 5;\n    var_448h = *0x4b30e0;\n    uStack1096 = *0x4b30e4;\n    uStack1092 = *0x4b30e8;\n    var_43eh = 0;\n    uStack1086 = 0;\n    uStack1082 = 0;\n    uStack1078 = 0;\n    uStack1074 = 0;\n    uStack1070 = 0;\n    var_428h = 4;\n    var_424h = 4;\n    var_420h = *0x4b30c8;\n    uStack1056 = *0x4b30cc;\n    uStack1052 = *0x4b30d0;\n    var_414h = 0;\n    uStack1044 = 0;\n    uStack1040 = 0;\n    uStack1036 = 0;\n    uStack1032 = 0;\n    var_400h = 5;\n    var_3fch = 4;\n    var_3f8h = *0x4b30bc;\n    uStack1016 = *0x4b30c0;\n    uStack1012 = *0x4b30c4;\n    var_3ech = 0;\n    uStack1004 = 0;\n    uStack1000 = 0;\n    uStack996 = 0;\n    uStack992 = 0;\n    var_3d8h = 5;\n    var_3d4h = 4;\n    var_3d0h = str.short._0_4_;\n    uStack976 = str.short._4_4_;\n    uStack972 = str.short._8_4_;\n    var_3c4h = 0;\n    uStack964 = 0;\n    uStack960 = 0;\n    uStack956 = 0;\n    uStack952 = 0;\n    var_3b0h = 2;\n    var_3ach = 4;\n    var_3a8h = *0x4b30a0;\n    uStack936 = *0x4b30a4;\n    uStack932 = *0x4b30a8;\n    uStack928 = *0x4b30ac;\n    var_39ah = 0;\n    uStack922 = 0;\n    uStack918 = 0;\n    uStack914 = 0;\n    uStack910 = 0;\n    var_384h = 4;\n    var_388h = 3;\n    var_380h = *0x4b30b0;\n    uStack896 = *0x4b30b4;\n    uStack892 = *0x4b30b8;\n    var_376h = 0;\n    uStack886 = 0;\n    uStack882 = 0;\n    uStack878 = 0;\n    uStack874 = 0;\n    uStack870 = 0;\n    var_360h = 3;\n    var_35ch = 4;\n    var_358h = *0x4b306c;\n    uStack856 = *0x4b3070;\n    uStack852 = *0x4b3074;\n    var_34eh = 0;\n    uStack846 = 0;\n    uStack842 = 0;\n    uStack838 = 0;\n    uStack834 = 0;\n    uStack830 = 0;\n    var_334h = 4;\n    var_338h = 1;\n    var_330h = *0x4b4558;\n    uStack816 = *0x4b455c;\n    uStack812 = *0x4b4560;\n    var_324h = 0;\n    uStack804 = 0;\n    uStack800 = 0;\n    uStack796 = 0;\n    uStack792 = 0;\n    var_310h = 1;\n    var_30ch = 4;\n    var_308h = *0x4b3078;\n    uStack776 = *0x4b307c;\n    uStack772 = *0x4b3080;\n    uStack768 = *0x4b3084;\n    var_2f8h = 0;\n    uStack760 = 0;\n    uStack756 = 0;\n    uStack752 = 0;\n    var_2e8h = 1;\n    var_2e4h = 4;\n    var_2e0h = str.float._0_4_;\n    uStack736 = str.float._4_4_;\n    uStack732 = str.float._8_4_;\n    var_2d4h = 0;\n    uStack724 = 0;\n    uStack720 = 0;\n    uStack716 = 0;\n    uStack712 = 0;\n    var_2bch = 4;\n    var_2c0h = 9;\n    var_2b8h = str.double._0_4_;\n    uStack696 = str.double._4_4_;\n    uStack692 = str.double._8_4_;\n    cStack688 = str.double[6];\n    var_2aah = 0;\n    uStack682 = 0;\n    uStack678 = 0;\n    uStack674 = 0;\n    uStack670 = 0;\n    var_290h = *0x4b316c;\n    var_28ch = *0x4b3170;\n    var_298h = 10;\n    var_294h = 8;\n    puVar2 = &var_288h;\n    for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_26ch = 4;\n    var_270h = 8;\n    var_268h = str.hwnd._0_4_;\n    uStack616 = str.hwnd._4_4_;\n    cStack612 = str.hwnd[4];\n    var_25eh = 0;\n    uStack606 = 0;\n    uStack602 = 0;\n    uStack598 = 0;\n    uStack594 = 0;\n    uStack590 = 0;\n    var_244h = 4;\n    var_248h = 8;\n    var_240h = str.handle._0_4_;\n    uStack576 = str.handle._4_4_;\n    uStack572 = str.handle._8_4_;\n    cStack568 = str.handle[6];\n    var_232h = 0;\n    uStack562 = 0;\n    uStack558 = 0;\n    uStack554 = 0;\n    uStack550 = 0;\n    var_21ch = 4;\n    var_220h = 8;\n    var_218h = *0x4b31b4;\n    uStack536 = *0x4b31b8;\n    uStack532 = *0x4b31bc;\n    uStack528 = *0x4b31c0;\n    var_208h = 0;\n    uStack520 = 0;\n    uStack516 = 0;\n    uStack512 = 0;\n    var_1f4h = 4;\n    var_1f8h = 0xb;\n    var_1f0h = *0x4b31c4;\n    uStack496 = *0x4b31c8;\n    uStack492 = *0x4b31cc;\n    uStack488 = *0x4b31d0;\n    var_1e2h = 0;\n    uStack482 = 0;\n    uStack478 = 0;\n    uStack474 = 0;\n    uStack470 = 0;\n    var_1cch = 4;\n    var_1d0h = 0xb;\n    var_1c8h = *0x4b3210;\n    uStack456 = *0x4b3214;\n    uStack452 = *0x4b3218;\n    uStack448 = *0x4b321c;\n    var_1bah = 0;\n    uStack442 = 0;\n    uStack438 = 0;\n    uStack434 = 0;\n    uStack430 = 0;\n    var_1a8h = 0xc;\n    var_1a4h = 4;\n    var_1a0h = *0x4b3104;\n    uStack416 = *0x4b3108;\n    uStack412 = *0x4b310c;\n    var_194h = 0;\n    uStack404 = 0;\n    uStack400 = 0;\n    uStack396 = 0;\n    uStack392 = 0;\n    var_17ch = 8;\n    var_180h = 0xd;\n    var_178h = *0x4b3110;\n    uStack376 = *0x4b3114;\n    uStack372 = *0x4b3118;\n    uStack368 = *0x4b311c;\n    var_16ah = 0;\n    uStack362 = 0;\n    uStack358 = 0;\n    uStack354 = 0;\n    uStack350 = 0;\n    var_154h = 8;\n    var_158h = 0xe;\n    var_150h = str.int_ptr._0_4_;\n    uStack336 = str.int_ptr._4_4_;\n    uStack332 = str.int_ptr._8_4_;\n    uStack328 = str.int_ptr._12_4_;\n    var_140h = 0;\n    uStack320 = 0;\n    uStack316 = 0;\n    uStack312 = 0;\n    var_130h = 0xb;\n    var_12ch = 4;\n    var_128h = *0x4b31d4;\n    uStack296 = *0x4b31d8;\n    uStack292 = *0x4b31dc;\n    uStack288 = *0x4b31e0;\n    uStack284 = *0x4b31e4;\n    var_116h = 0;\n    uStack278 = 0;\n    uStack274 = 0;\n    uStack270 = 0;\n    var_108h = 0xc;\n    var_104h = 4;\n    var_100h = *0x4b31a0;\n    uStack256 = *0x4b31a4;\n    uStack252 = *0x4b31a8;\n    uStack248 = *0x4b31ac;\n    uStack244 = *0x4b31b0;\n    var_eeh = 0;\n    uStack238 = 0;\n    uStack234 = 0;\n    uStack230 = 0;\n    var_e0h = 0xb;\n    var_dch = 4;\n    puVar2 = 0x4b31e8;\n    puVar7 = &var_d8h;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    var_c4h = 0;\n    uStack196 = 0;\n    uStack192 = 0;\n    var_b4h = 4;\n    var_b8h = 0xc;\n    puVar2 = 0x4b31fc;\n    puVar7 = &var_b0h;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    var_9ch = 0;\n    uStack156 = 0;\n    uStack152 = 0;\n    var_8ch = 4;\n    var_90h = 0xc;\n    puVar2 = L\"idispatch\";\n    puVar7 = &var_88h;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    var_74h = 0;\n    uStack116 = 0;\n    uStack112 = 0;\n    var_64h = 4;\n    var_68h = 0xf;\n    var_60h = *0x4b3244;\n    uStack96 = *0x4b3248;\n    uStack92 = *0x4b324c;\n    uStack88 = *0x4b3250;\n    var_52h = 0;\n    uStack82 = 0;\n    uStack78 = 0;\n    uStack74 = 0;\n    uStack70 = 0;\n    var_3ch = 4;\n    var_40h = 0x10;\n    var_38h._0_2_ = 0;\n    puVar2 = &var_38h + 2;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    var_18h = 0;\n    var_14h = 0;\n    iVar4 = 0;\n    fcn.0040d3d2();\n    arg_ch[3] = 0;\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[5] = 0;\n    arg_ch[2] = 4;\n    while ((piVar1 = fcn.0040a4f6(iVar4),  *piVar1 != 0 && (piVar1 = fcn.0040a4f6(iVar4),  *piVar1 != 0x3b))) {\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar4 != 0) {\n        fcn.00407f40(arg_8h, 0, iVar4);\n        piVar1 = fcn.0040a4f6(iVar4);\n        if (*piVar1 == 0x3b) {\n            iVar4 = iVar4 + 1;\n        }\n        fcn.0040a2fb(0, iVar4);\n        if (var_ch == 0) {\ncode_r0x00460288:\n            arg_ch[3] = 0;\n        }\n        else {\n            piVar1 = fcn.0040a4f6(var_ch + -1);\n            if (*piVar1 != 0x2a) goto code_r0x00460288;\n            arg_ch[3] = 1;\n            fcn.0040a2fb(var_ch + -1, 1);\n        }\n        uVar6 = 1;\n        puVar2 = &var_510h;\n        iVar4 = 0;\n        do {\n            if (*puVar2 == 0) goto code_r0x004602eb;\n            iVar5 = fcn.00421bc7(puVar2, var_10h);\n            if (iVar5 == 0) {\n                arg_ch[2] = (&var_4f0h)[iVar4 * 10];\n                if (arg_ch[3] == 1) {\n                    arg_ch[4] = 4;\n                }\n                else {\n                    arg_ch[4] = (&var_4ech)[iVar4 * 10];\n                }\n                break;\n            }\n            puVar2 = puVar2 + 10;\n            iVar4 = iVar4 + 1;\n        } while (-1 < iVar4);\n        if (-1 < iVar4) goto code_r0x004602ef;\n    }\ncode_r0x004602eb:\n    uVar6 = 0;\ncode_r0x004602ef:\n    uVar3 = fcn.00405cd3();\n    return uVar3 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 6345
    },
    "00460579": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00460579(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint uVar5;\n    uint arg_ch_00;\n    uint lpProcName;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_ch + 4) + 8);\n    fcn.004084a6();\n    puVar1 = *(iVar3 + 8);\n    var_1ch = *puVar1;\n    var_18h = puVar1[1];\n    var_14h = puVar1[2];\n    var_10h = puVar1[3];\n    *var_10h = *var_10h + 1;\n    var_8h = **(arg_ch + 4);\n    var_1h._0_1_ = '\\0';\n    cVar2 = fcn.0040d2c0(4);\n    iVar3 = var_8h;\n    if (cVar2 == '\\0') {\n        iVar3 = fcn.0040cdb4();\n        if ((iVar3 < 1) || (iVar3 = *(in_ECX + 0x1ac),  iVar4 = fcn.0040cdb4(),  iVar3 < iVar4)) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.0040cdb4();\n            iVar3 = **(*(in_ECX + 0x1a8) + (iVar3 + -1) * 4);\n        }\n    }\n    else {\n        fcn.004084a6();\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(**(iVar3 + 8));\n        var_1h._0_1_ = '\\x01';\n    }\n    if (iVar3 == 0) {\n        arg_ch_00 = 0;\n        uVar5 = 1;\n    }\n    else {\n        arg_ch_00 = 4;\n        cVar2 = fcn.0040d2c0(4);\n        if (cVar2 == '\\0') {\n            uVar5 = fcn.0040cdb4();\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, uVar5);\n            *arg_8h = iVar4;\n        }\n        else {\n            fcn.0040a6d4();\n            fcn.0041f26b(&var_1ch, &lpProcName);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, lpProcName);\n            *arg_8h = iVar4;\n            fcn.00405cd3();\n        }\n        if (*arg_8h != 0) goto code_r0x00460708;\n        cVar2 = fcn.0040d2c0(4);\n        if (cVar2 != '\\0') {\n            fcn.0040bd2f(0x41);\n            fcn.0040a6d4();\n            fcn.0041f26b(&var_1ch, &lpProcName);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, lpProcName);\n            *arg_8h = iVar4;\n            fcn.00405cd3();\n        }\n        if (*arg_8h != 0) goto code_r0x00460708;\n        if (var_1h != '\\0') {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n        }\n        uVar5 = 3;\n    }\n    fcn.0044d7e4(uVar5, arg_ch_00);\n    iVar3 = 0;\ncode_r0x00460708:\n    fcn.00405cd3();\n    return iVar3;\n}\n",
        "token_count": 929
    },
    "0046146c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046146c(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t iVar4;\n    \n    piVar1 = **(arg_8h + 4);\n    cVar3 = fcn.0040d2c0(0xc);\n    if (cVar3 == '\\0') {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        if (piVar1[3] == 0xc) {\n            iVar4 = *piVar1;\n        }\n        else {\n            iVar4 = 0;\n        }\n        uVar2 = *(iVar4 + 0xc);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 231
    },
    "004614d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004614d6(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint in_stack_ffffffc8;\n    uint uVar3;\n    \n    uVar3 = 0xc;\n    cVar1 = fcn.0040d2c0(0xc);\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        uVar3 = 1;\n    }\n    else {\n        if (((*(arg_8h + 8) < 4) || (cVar1 = fcn.0041d5f6(0x29),  cVar1 != '\\0')) ||\n           (iVar2 = fcn.0040cdb4(),  -1 < iVar2 + -1)) {\n            fcn.004113a0(*(*(arg_8h + 4) + 4));\n            cVar1 = fcn.0040d2c0(4);\n            if (cVar1 == '\\0') {\n                fcn.0040cdb4();\n                fcn.00412570();\n            }\n            uVar3 = fcn.00449310(&stack0xffffffd8, *(*(arg_8h + 4) + 8), arg_ch, 1, uVar3);\n            fcn.0044d7e4(uVar3, 0);\n            fcn.00412570();\n            return 0;\n        }\n        fcn.00412570();\n        uVar3 = 0;\n        arg_ch[3] = 1;\n        in_stack_ffffffc8 = 5;\n    }\n    *arg_ch = 0;\n    fcn.0044d7e4(in_stack_ffffffc8, uVar3);\n    return 0;\n}\n",
        "token_count": 409
    },
    "004617aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00461809)\n// WARNING: Removing unreachable block (ram,0x0046181a)\n// WARNING: Removing unreachable block (ram,0x00461820)\n\nuint __cdecl fcn.004617aa(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint var_1h;\n    \n    fcn.004084a6();\n    cVar1 = fcn.00446f5b(&var_1h);\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 218
    },
    "00461ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461ad0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t *piVar3;\n    double *pdVar4;\n    int32_t *unaff_EBX;\n    int32_t **ppiVar5;\n    int32_t iStack2220;\n    ulong uStack2216;\n    uint uStack2208;\n    uint uStack2204;\n    uint uStack2200;\n    uint uStack2196;\n    uchar auStack2172 [28];\n    uchar auStack2144 [4];\n    uint uStack2140;\n    uchar auStack2136 [8];\n    uint uStack2128;\n    uchar auStack2108 [524];\n    uchar auStack1584 [520];\n    uchar auStack1064 [520];\n    uchar auStack544 [540];\n    \n    fcn.0040d3d2();\n    ppiVar5 = 0x2;\n    uStack2208 = 0x4b4568;\n    uStack2204 = 0;\n    uStack2200 = 0;\n    uStack2196 = 0;\n    uStack2128 = 0x22c;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    (*_sym.imp.KERNEL32.dll_Process32FirstW)(uVar1, auStack2136);\n    do {\n        fcn.0042297d(auStack2108, auStack2172, auStack544, auStack1584, auStack1064);\n        fcn.00421914(auStack1584, auStack1064);\n        if (*(arg_8h + 8) == 0) {\ncode_r0x00461b8b:\n            fcn.0040caee(auStack1584);\n            arg_8h_00 = fcn.0045f6d9(uStack2140, &uStack2216 + 4);\n            fcn.00462962(arg_8h_00);\n            fcn.00405cd3();\n            fcn.00405cd3();\n        }\n        else {\n            iVar2 = **(arg_8h + 4);\n            fcn.004084a6();\n            iVar2 = fcn.00421bc7(auStack1584, **(iVar2 + 8));\n            if (iVar2 == 0) goto code_r0x00461b8b;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(uVar1, auStack2144);\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n            fcn.00403320(arg_ch, 2);\n            piVar3 = fcn.004114a0(arg_ch, 0, 2);\n            fcn.00412570();\n            piVar3[3] = 1;\n            *piVar3 = iStack2220;\n            if (iStack2220 != 0) {\n                do {\n                    fcn.004114a0(arg_ch, 0, 2);\n                    fcn.00407bef(*unaff_EBX + 4);\n                    pdVar4 = fcn.004114a0(arg_ch, 0, 2);\n                    uStack2216 = **ppiVar5;\n                    if (**ppiVar5 < 0) {\n                        uStack2216 = uStack2216 + *0x4b6568;\n                    }\n                    fcn.00412570();\n                    ppiVar5 = ppiVar5 + 1;\n                    *pdVar4 = uStack2216;\n                    *(pdVar4 + 0xc) = 3;\n                    unaff_EBX = unaff_EBX + 1;\n                    iStack2220 = iStack2220 + -1;\n                } while (iStack2220 != 0);\n            }\n            fcn.0045f730();\n            fcn.00405cd3();\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 905
    },
    "00461daf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461daf(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar3;\n    uint *puVar4;\n    \n    cVar1 = fcn.00462346(arg_8h, *(arg_8h + 8));\n    puVar4 = arg_ch;\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n        *puVar4 = 0;\n        puVar4[3] = 1;\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        puVar4 = &arg_8h;\n        arg_8h = 1;\n        uVar2 = extraout_ECX;\n        fcn.00402f0e(puVar4);\n        uVar3 = 0;\n        *(in_ECX + 0xfc) = 8;\n        fcn.0040e1f0(0);\n        uVar2 = fcn.00407be1(uVar3, puVar4, uVar2);\n        fcn.0040d89e(uVar2);\n    }\n    return 0;\n}\n",
        "token_count": 282
    },
    "00461e35": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461e35(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint *puVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    cVar1 = fcn.00462346(arg_8h, *(arg_8h + 8));\n    puVar3 = arg_ch;\n    if (cVar1 == '\\0') {\n        fcn.00412570();\n    }\n    else {\n        arg_8h = arg_8h & 0xffffff;\n        cVar1 = fcn.00446f5b(&arg_8h + 3);\n        puVar3 = arg_ch;\n        if (cVar1 != '\\0') {\n            if (arg_8h._3_1_ != '\\0') {\n                uVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x100400, 0, in_ECX);\n                *(in_ECX + 0x474) = uVar2;\n                puVar3 = &arg_8h;\n                arg_8h = 1;\n                uVar2 = extraout_ECX;\n                fcn.00402f0e(puVar3);\n                uVar4 = 0;\n                *(in_ECX + 0xfc) = 9;\n                fcn.0040e1f0(0);\n                uVar2 = fcn.00407be1(uVar4, puVar3, uVar2);\n                fcn.0040d89e(uVar2);\n                return 0;\n            }\n            fcn.00407ba9(0xcccccccc, 0);\n            return 0;\n        }\n        fcn.00412570();\n    }\n    puVar3[3] = 1;\n    *puVar3 = 0;\n    fcn.0044d7e4(1, 0);\n    return 0;\n}\n",
        "token_count": 446
    },
    "00464399": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00464399(uint32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    fcn.004465e2();\n    if (in_ECX[1] <= arg_8h) {\n        arg_8h = in_ECX[1];\n    }\n    return *in_ECX + arg_8h;\n}\n",
        "token_count": 83
    },
    "004649f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004649f1(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar3 = **(iVar2 + 8);\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    uVar1 = *puVar3;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.004222cd(uVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            puVar3 = puVar3 + 1;\n            uVar1 = *puVar3;\n        } while (uVar1 != 0);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "00464a51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464a51(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    piVar3 = **(iVar2 + 8);\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_IsCharAlphaNumericW)(iVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            piVar3 = piVar3 + 1;\n            iVar1 = *piVar3;\n        } while (iVar1 != 0);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 235
    },
    "00464ab1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464ab1(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    piVar3 = **(iVar2 + 8);\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_IsCharAlphaW)(iVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            piVar3 = piVar3 + 1;\n            iVar1 = *piVar3;\n        } while (iVar1 != 0);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "00464b11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464b11(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar3 = **(iVar2 + 8);\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    uVar1 = *puVar3;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.004222df(uVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            puVar3 = puVar3 + 1;\n            uVar1 = *puVar3;\n        } while (uVar1 != 0);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "00464bd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464bd1(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    piVar3 = **(iVar2 + 8);\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_IsCharLowerW)(iVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            piVar3 = piVar3 + 1;\n            iVar1 = *piVar3;\n        } while (iVar1 != 0);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "00464c31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464c31(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    piVar2 = **(iVar1 + 8);\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (*piVar2 != 0) {\n        do {\n            iVar1 = fcn.0041dd62();\n            if (iVar1 == 0) {\n                return 0;\n            }\n            piVar2 = piVar2 + 1;\n        } while (*piVar2 != 0);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 204
    },
    "00464c91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464c91(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    piVar3 = **(iVar2 + 8);\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_IsCharUpperW)(iVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            piVar3 = piVar3 + 1;\n            iVar1 = *piVar3;\n        } while (iVar1 != 0);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "00464cf1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464cf1(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar3 = **(iVar2 + 8);\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    uVar1 = *puVar3;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.00422301(uVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            puVar3 = puVar3 + 1;\n            uVar1 = *puVar3;\n        } while (uVar1 != 0);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "0046580c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046580c(uint *param_1)\n\n{\n    ushort uVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    \n    if (param_1[1] != 0) {\n        puVar2 = *param_1;\n        puVar3 = puVar2 + param_1[1] + -1;\n        for (; puVar2 < puVar3; puVar2 = puVar2 + 1) {\n            uVar1 = *puVar2;\n            *puVar2 = *puVar3;\n            *puVar3 = uVar1;\n            puVar3 = puVar3 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "004659aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004659aa(uint arg_8h, uint arg_ch)\n\n{\n    uint hmenu;\n    int32_t iVar1;\n    uint *arg_ch_00;\n    uint *arg_10h;\n    uint var_4h;\n    \n    arg_10h = &var_4h;\n    arg_ch_00 = &arg_8h;\n    hmenu = fcn.0040cdb4();\n    iVar1 = fcn.00445b75(hmenu, arg_ch_00, arg_10h);\n    if (iVar1 == 0) {\n        fcn.0044d7e4(1, 0);\n        fcn.0040ca8e(0x49dbf0);\n    }\n    else {\n        fcn.0040ca8e(arg_8h);\n        fcn.0042017e(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "004666dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004666dc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0040ca8e(0x49dbf0);\n    fcn.004019ee(arg_8h);\n    iVar1 = fcn.00401dce(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        else {\n            iVar1 = 1;\n        }\n        fcn.0044d7e4(iVar1, 0);\n    }\n    else {\n        fcn.004016f2();\n        fcn.0040d3d2();\n        fcn.0043d7d6(**(in_ECX + 0x1f8), &stack0xfffffe9c);\n        fcn.00407bef(&stack0xfffffe94);\n        fcn.00405cd3();\n        fcn.00404208();\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "00466778": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466778(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    cVar2 = fcn.00465f56(arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.0044d7e4(1, 0);\n        fcn.00412570();\n        *arg_ch = 0;\n    }\n    else {\n        uVar1 = **(in_ECX + 0x31c);\n        fcn.00412570();\n        *arg_ch = uVar1;\n    }\n    arg_ch[3] = 7;\n    return 0;\n}\n",
        "token_count": 160
    },
    "00466902": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466902(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    \n    fcn.0040ca8e(0x49dbf0);\n    cVar1 = fcn.00465f56(arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        fcn.0040d3d2();\n        cVar1 = fcn.0043e2e8(&stack0xffffffe0);\n        if (cVar1 == '\\0') {\n            fcn.0044d7e4(1, 0);\n        }\n        else {\n            fcn.00407bef(&stack0xffffffdc);\n        }\n        fcn.00405cd3();\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "0046728b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046728b(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    \n    *(in_ECX + 0x98) = 0;\n    cVar1 = fcn.00405372();\n    if (cVar1 != '\\0') {\n        fcn.004019ee(arg_8h_00);\n        iVar2 = fcn.00401dce(1);\n        if (iVar2 < 1) {\n            if (iVar2 < 0) {\n                fcn.0044d7e4(-iVar2, 0);\n            }\n            fcn.00412570();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        else {\n            *(in_ECX + 0x98) = **(in_ECX + 0x1f8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 225
    },
    "004677fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004677fc(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    fcn.004019ee(arg_8h);\n    iVar2 = fcn.00401dce(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            fcn.0044d7e4(-iVar2, 0);\n        }\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        iVar2 = **(in_ECX + 0x1f8);\n        iVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        if (iVar2 == iVar3) {\n            fcn.00448355();\n        }\n        iVar2 = fcn.0041f78e(**(in_ECX + 0x1f8));\n        if (iVar2 == 0) {\n            fcn.00412570();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        else {\n            uVar1 = **(in_ECX + 0x1f8);\n            fcn.00412570();\n            arg_ch[3] = 7;\n            *arg_ch = uVar1;\n            fcn.00407ba9(iVar2, 0);\n        }\n        fcn.00448355();\n    }\n    return 0;\n}\n",
        "token_count": 343
    },
    "004678c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004678c6(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.004019ee(arg_8h);\n    iVar1 = fcn.00468a48();\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.0044d7e4(-iVar1, 0);\n        }\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        fcn.00412570();\n        *arg_ch = uVar2;\n        arg_ch[3] = 7;\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "0046792c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046792c(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.004019ee(arg_8h);\n    iVar1 = fcn.00401dce(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.0044d7e4(-iVar1, 0);\n        }\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        fcn.0043e170();\n        fcn.00448355();\n    }\n    return 0;\n}\n",
        "token_count": 152
    },
    "0046798d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046798d(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.004019ee(arg_8h);\n    iVar1 = fcn.00401dce(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.0044d7e4(-iVar1, 0);\n        }\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 130
    },
    "00467aa2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467aa2(uint noname_0, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetForegroundWindow;\n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    fcn.004469c9();\n    iVar3 = (*_sym.imp.USER32.dll_GetCaretPos)(&var_ch);\n    if (iVar3 == 0) {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.0044d7e4(1, 0);\n    }\n    else {\n        (*_sym.imp.USER32.dll_ClientToScreen)(uVar2, &var_ch);\n        uVar2 = (*pcVar1)();\n        fcn.00456b19(*(in_ECX + 0x10c), &var_14h, uVar2);\n        var_ch = var_ch - var_14h;\n        var_8h = var_8h - var_10h;\n        fcn.00403320(arg_ch, 1);\n        var_24h = var_ch;\n        var_1ch = 0;\n        var_18h = 1;\n        fcn.00412320(arg_ch, &var_24h, 1);\n        fcn.00412570();\n        var_24h = var_8h;\n        var_18h = 1;\n        var_1ch = 0;\n        fcn.00412320(arg_ch, &var_24h, 1);\n        fcn.00412570();\n    }\n    fcn.004469c9();\n    return 0;\n}\n",
        "token_count": 460
    },
    "00467b93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467b93(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.004019ee(arg_8h);\n    iVar1 = fcn.00401dce(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        else {\n            iVar1 = 1;\n        }\n        fcn.0044d7e4(iVar1, 0);\n        fcn.0040ca8e(0x49dbf0);\n    }\n    else {\n        fcn.0040d3d2();\n        fcn.0044765d();\n        fcn.00407bef(&stack0xffffffe0);\n        fcn.00405cd3();\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "00467c13": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467c13(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uchar auStack32 [28];\n    \n    fcn.004019ee(arg_8h);\n    fcn.00412570();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = fcn.00401dce(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n            goto code_r0x00467cdc;\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetClientRect)(**(in_ECX + 0x1f8), auStack32);\n        if (iVar1 != 0) {\n            fcn.00403320(arg_ch, 1);\n            fcn.00412320(arg_ch, &stack0xffffffd0, 1);\n            fcn.00412570();\n            fcn.00412320(arg_ch, &stack0xffffffd0, 1);\n            fcn.00412570();\n            return 0;\n        }\n    }\n    iVar1 = 1;\ncode_r0x00467cdc:\n    fcn.0044d7e4(iVar1, 0);\n    return 0;\n}\n",
        "token_count": 300
    },
    "00467cf3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467cf3(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    fcn.004019ee(arg_8h);\n    iVar2 = fcn.00401dce(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            iVar2 = -iVar2;\n        }\n        else {\n            iVar2 = 1;\n        }\n        fcn.0044d7e4(iVar2, 0);\n        fcn.00412570();\n        *arg_ch = 0;\n    }\n    else {\n        uVar1 = **(in_ECX + 0x1f8);\n        fcn.00412570();\n        *arg_ch = uVar1;\n    }\n    arg_ch[3] = 7;\n    return 0;\n}\n",
        "token_count": 204
    },
    "00467d58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467d58(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t iStack44;\n    int32_t aiStack40 [2];\n    uint uStack32;\n    uint uStack28;\n    \n    fcn.004019ee(arg_8h);\n    iVar1 = fcn.00401dce(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        else {\n            iVar1 = 1;\n        }\n        fcn.0044d7e4(iVar1, 0);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        fcn.0043e278(&stack0xffffffd0, 0);\n        fcn.00403320(arg_ch, 1);\n        uStack32 = 0;\n        uStack28 = 1;\n        fcn.00412320(arg_ch, aiStack40, 1);\n        fcn.00412570();\n        uStack32 = 0;\n        uStack28 = 1;\n        fcn.00412320(arg_ch, aiStack40, 1);\n        fcn.00412570();\n        aiStack40[0] = unaff_EBX - unaff_EDI;\n        uStack32 = 0;\n        uStack28 = 1;\n        fcn.00412320(arg_ch, aiStack40, 1);\n        fcn.00412570();\n        aiStack40[0] = iStack44 - unaff_ESI;\n        uStack32 = 0;\n        uStack28 = 1;\n        fcn.00412320(arg_ch, aiStack40, 1);\n        fcn.00412570();\n    }\n    return 0;\n}\n",
        "token_count": 442
    },
    "00467e86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467e86(int32_t arg_8h, double *arg_ch)\n\n{\n    double dVar1;\n    double *pdVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    fcn.004019ee(arg_8h);\n    iVar3 = fcn.00401dce(1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.0044d7e4(-iVar3, 0);\n        }\n        pdVar2 = arg_ch;\n        fcn.00412570();\n        *pdVar2 = 0xffffffff;\n        *(pdVar2 + 0xc) = 1;\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(**(in_ECX + 0x1f8), &arg_8h);\n        pdVar2 = arg_ch;\n        dVar1 = arg_8h;\n        if (arg_8h < 0) {\n            dVar1 = dVar1 + *0x4b6568;\n        }\n        fcn.00412570();\n        *pdVar2 = dVar1;\n        *(pdVar2 + 0xc) = 3;\n    }\n    return 0;\n}\n",
        "token_count": 285
    },
    "00467f0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467f0e(uint arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    \n    uVar3 = 1;\n    fcn.004019ee(arg_8h);\n    iVar1 = fcn.00401dce(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        else {\n            iVar1 = 1;\n        }\n        fcn.0044d7e4(iVar1, 0);\n        fcn.00412570();\n        *arg_ch = 0;\n    }\n    else {\n        iVar1 = **(in_ECX + 0x1f8);\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(iVar1);\n        if (iVar2 != 0) {\n            uVar3 = 3;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar1);\n        if (iVar2 != 0) {\n            uVar3 = uVar3 | 4;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        if (iVar2 == iVar1) {\n            uVar3 = uVar3 | 8;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_IsIconic)(iVar1);\n        if (iVar2 != 0) {\n            uVar3 = uVar3 | 0x10;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_IsZoomed)(iVar1);\n        if (iVar1 != 0) {\n            uVar3 = uVar3 | 0x20;\n        }\n        fcn.00412570();\n        *arg_ch = uVar3;\n    }\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 430
    },
    "00467fb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467fb9(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    fcn.004019ee(arg_8h);\n    iVar2 = fcn.00401dce(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            fcn.0044d7e4(-iVar2, 0);\n        }\n        fcn.0040ca8e(0x49dbf0);\n    }\n    else {\n        cVar1 = fcn.0040193b(**(in_ECX + 0x1f8));\n        if (cVar1 == '\\0') {\n            fcn.0040d3d2();\n            fcn.00447ae0(&stack0xffffffdc);\n            fcn.00407bef(&stack0xffffffdc);\n            fcn.00405cd3();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 224
    },
    "0046804e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046804e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.004019ee(arg_8h);\n    iVar1 = fcn.00401dce(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.0044d7e4(-iVar1, 0);\n        }\n        fcn.0040ca8e(0x49dbf0);\n    }\n    else {\n        fcn.0040d3d2();\n        fcn.0043e2e8(&stack0xffffffe0);\n        fcn.00407bef(&stack0xffffffdc);\n        fcn.00405cd3();\n    }\n    return 0;\n}\n",
        "token_count": 175
    },
    "004680c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004680c9(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.004019ee(arg_8h);\n    iVar1 = fcn.00401dce(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.0044d7e4(-iVar1, 0);\n        }\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        fcn.004484f4();\n        fcn.00448355();\n    }\n    return 0;\n}\n",
        "token_count": 152
    },
    "00468706": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468706(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    \n    fcn.004019ee(arg_8h);\n    iVar3 = fcn.00401dce(1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.0044d7e4(-iVar3, 0);\n        }\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        cVar2 = fcn.0040193b(**(in_ECX + 0x1f8));\n        if (cVar2 == '\\0') {\n            uVar1 = **(in_ECX + 0x1f8);\n            iVar3 = fcn.0040cdb4();\n            if (iVar3 == 1) {\n                uVar4 = 0xffffffff;\n            }\n            else {\n                uVar4 = 0xfffffffe;\n            }\n            (*_sym.imp.USER32.dll_SetWindowPos)(uVar1, uVar4, 0, 0, 0, 0, 0x13);\n        }\n        else {\n            fcn.00412570();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 332
    },
    "004687a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004687a5(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    \n    fcn.004019ee(arg_8h);\n    iVar1 = fcn.00401dce(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.0044d7e4(-iVar1, 0);\n        }\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        iVar1 = fcn.0040cdb4();\n        if (iVar1 == 0x40) {\n            arg_8h_00 = 1;\n        }\n        else {\n            if (iVar1 != 0x41) {\n                (*_sym.imp.USER32.dll_ShowWindow)(**(in_ECX + 0x1f8), iVar1);\n                fcn.00448355();\n                return 0;\n            }\n            arg_8h_00 = 0;\n        }\n        fcn.0043e181(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 273
    },
    "00468834": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468834(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    uVar4 = arg_8h;\n    fcn.0040cdb4();\n    uVar2 = fcn.0040cdb4();\n    arg_8h = arg_8h & 0xffffff00 | uVar2;\n    fcn.004019ee(uVar4);\n    iVar3 = fcn.00401dce(1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.0044d7e4(-iVar3, 0);\n        }\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        uVar1 = **(in_ECX + 0x1f8);\n        uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar1, 0xffffffec);\n        if ((uVar2 == 0xff) && ((uVar4 & 0x80000) != 0)) {\n            (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xffffffec, uVar4 ^ 0x80000);\n        }\n        else {\n            (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xffffffec, uVar4 | 0x80000);\n            (*_sym.imp.USER32.dll_SetLayeredWindowAttributes)(uVar1, 0, arg_8h, 2);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 389
    },
    "004688e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004688e8(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar2;\n    uint *arg_8h_00;\n    \n    fcn.00468aa7(arg_8h);\n    arg_8h_00 = &arg_8h;\n    arg_8h = 1;\n    uVar1 = extraout_ECX;\n    fcn.00402f0e(arg_8h_00);\n    uVar2 = 0;\n    *(in_ECX + 0xfc) = 3;\n    fcn.0040e1f0(0);\n    uVar1 = fcn.00407be1(uVar2, arg_8h_00, uVar1);\n    fcn.0040d89e(uVar1);\n    return 0;\n}\n",
        "token_count": 203
    },
    "00468940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468940(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar2;\n    uint *arg_8h_00;\n    \n    fcn.00468aa7(arg_8h);\n    arg_8h_00 = &arg_8h;\n    arg_8h = 1;\n    uVar1 = extraout_ECX;\n    fcn.00402f0e(arg_8h_00);\n    uVar2 = 0;\n    *(in_ECX + 0xfc) = 5;\n    fcn.0040e1f0(0);\n    uVar1 = fcn.00407be1(uVar2, arg_8h_00, uVar1);\n    fcn.0040d89e(uVar1);\n    return 0;\n}\n",
        "token_count": 202
    },
    "00468998": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468998(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar2;\n    uint *arg_8h_00;\n    \n    fcn.00468aa7(arg_8h);\n    arg_8h_00 = &arg_8h;\n    arg_8h = 1;\n    uVar1 = extraout_ECX;\n    fcn.00402f0e(arg_8h_00);\n    uVar2 = 0;\n    *(in_ECX + 0xfc) = 4;\n    fcn.0040e1f0(0);\n    uVar1 = fcn.00407be1(uVar2, arg_8h_00, uVar1);\n    fcn.0040d89e(uVar1);\n    return 0;\n}\n",
        "token_count": 202
    },
    "004689f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004689f0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar2;\n    uint *arg_8h_00;\n    \n    fcn.00468aa7(arg_8h);\n    arg_8h_00 = &arg_8h;\n    arg_8h = 1;\n    uVar1 = extraout_ECX;\n    fcn.00402f0e(arg_8h_00);\n    uVar2 = 0;\n    *(in_ECX + 0xfc) = 6;\n    fcn.0040e1f0(0);\n    uVar1 = fcn.00407be1(uVar2, arg_8h_00, uVar1);\n    fcn.0040d89e(uVar1);\n    return 0;\n}\n",
        "token_count": 203
    },
    "00468a48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00468a48(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00401dce(0);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.0044d7e4(-iVar1, 0);\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        iVar3 = 1;\n        if (0 < *(param_1 + 0x308)) {\n            ppiVar2 = *(param_1 + 0x304);\n            do {\n                if (**ppiVar2 == iVar1) {\n                    return 1;\n                }\n                iVar3 = iVar3 + 1;\n                ppiVar2 = ppiVar2 + 1;\n            } while (iVar3 <= *(param_1 + 0x308));\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 236
    },
    "00468bbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468bbc(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    uint *puVar1;\n    char cVar2;\n    uint arg_8h_01;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    uint arg_18h_00;\n    int32_t var_4h;\n    \n    puVar1 = arg_ch;\n    arg_8h_00 = arg_ch[0x71];\n    var_4h = in_ECX;\n    if (0 < arg_8h_00) {\n        arg_ch[0x71] = 0;\n        puVar3 = arg_ch;\n        arg_10h_00 = arg_10h;\n        arg_14h_00 = arg_14h;\n        arg_18h_00 = arg_18h;\n        arg_8h_01 = fcn.00422626(arg_8h_00);\n        fcn.00468bbc(arg_8h_01, puVar3, arg_10h_00, arg_14h_00, arg_18h_00);\n    }\n    cVar2 = fcn.0040cf2c(arg_8h, &arg_ch, &var_4h);\n    if (cVar2 != '\\0') {\n        puVar3 = fcn.0042010a(0x24);\n        if (puVar3 == NULL) {\n            puVar3 = NULL;\n        }\n        else {\n            fcn.0040d3d2();\n        }\n        arg_ch = puVar3;\n        fcn.0040c935(**(*(in_ECX + 0x74) + var_4h * 4) + 0x14);\n        *puVar3 = arg_8h;\n        puVar3[5] = *puVar1;\n        puVar3[6] = arg_10h;\n        puVar3[7] = arg_14h;\n        puVar3[8] = arg_18h;\n        fcn.00446437(&arg_ch);\n    }\n    return;\n}\n",
        "token_count": 505
    },
    "00468c6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468c6b(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    piVar1 = fcn.0042010a(0x24);\n    if (piVar1 == NULL) {\n        piVar1 = NULL;\n    }\n    else {\n        fcn.0040d3d2();\n    }\n    var_4h = piVar1;\n    fcn.0040c935(arg_ch + arg_8h * 4 + 0x57);\n    *piVar1 = arg_8h;\n    piVar1[5] = *arg_ch;\n    piVar1[6] = 0;\n    piVar1[7] = arg_10h;\n    piVar1[8] = arg_14h;\n    fcn.00446437(&var_4h);\n    return;\n}\n",
        "token_count": 234
    },
    "0046b086": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046b086(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.0040cf2c(arg_8h, &var_8h, &var_4h);\n    if (cVar1 == '\\0') {\n        bVar2 = false;\n    }\n    else {\n        bVar2 = *(**(*0x4c1884 + var_4h * 4) + 0x90) == '\\x13';\n        if (bVar2) {\n            fcn.0040c935(arg_ch);\n            *(**(*0x4c1884 + var_4h * 4) + 0x98) = arg_10h;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 205
    },
    "0046b0e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0046b0e9(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.0040cf2c(arg_8h, &var_8h, &var_4h);\n    if ((cVar1 == '\\0') || (*(**(*0x4c1884 + var_4h * 4) + 0x90) != '\\x15')) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.0040d89e(&arg_ch);\n        uVar2 = fcn.0046de72(arg_8h, 0);\n    }\n    fcn.00412570();\n    return uVar2;\n}\n",
        "token_count": 187
    },
    "0046c2a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046c2a6(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.0040cf2c(arg_8h, &var_8h, &var_4h);\n    if (cVar1 != '\\0') {\n        fcn.0040c935(arg_ch);\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 109
    },
    "0046d71e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046d71e(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h_00;\n    \n    uVar1 = fcn.00423132(*arg_ch, arg_10h);\n    if (uVar1 == 0) {\n        uVar2 = fcn.004218fb(*arg_ch);\n        arg_10h_00 = uVar2;\n    }\n    else {\n        uVar2 = uVar1;\n        arg_10h_00 = uVar1 - *arg_ch >> 1;\n    }\n    if (arg_10h_00 < 0xfff) {\n        fcn.00422c1d(arg_8h, *arg_ch, arg_10h_00);\n        *(arg_8h + arg_10h_00 * 2) = 0;\n        if (uVar1 != 0) {\n            arg_10h_00 = arg_10h_00 + 1;\n        }\n        *arg_ch = *arg_ch + arg_10h_00 * 2;\n        uVar2 = arg_10h_00 * 2 & 0xffffff00 | arg_10h_00 != 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    return uVar2;\n}\n",
        "token_count": 326
    },
    "0046e13e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e13e(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    \n    fcn.00421970(0x4c3ee0, 0, 0x44);\n    fcn.00421970(0x4c3f24, 0, 0x10);\n    *0x4c3f0c = 1;\n    *0x4c3f10 = 1;\n    *0x4c3ee0 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, lpCommandLine, 0, 0, 0, 0x20, 0, 0, 0x4c3ee0, 0x4c3f24);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x4c3f24);\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0047072f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0047072f(uint param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    uVar2 = 5;\n    while ((param_2 != uVar2 || (iVar3 = fcn.0041ee64(param_2),  iVar3 != 0))) {\n        puVar1 = iVar4 + 0x4b4dd1;\n        uVar2 = *puVar1;\n        iVar4 = iVar4 + 1;\n        if (*puVar1 == 0) {\n            return -1;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 184
    },
    "00470f54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470f54(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    var_8h = 0;\n    var_4h = *(in_ECX + 0x18);\n    do {\n        iVar2 = fcn.00470f9f(in_EDX, arg_8h, arg_ch, arg_10h, &var_8h);\n        if (0 < iVar2) {\n            return;\n        }\n        iVar1 = *var_4h;\n        var_4h = var_4h + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 189
    },
    "00471591": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00471591(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    \n    if ((0x2f < *param_1) && (*param_1 < 0x3a)) {\n        do {\n            puVar2 = param_1;\n            param_1 = puVar2 + 1;\n            if (*param_1 < 0x30) break;\n        } while (*param_1 < 0x3a);\n        if (*param_1 == 0x7d) {\n            return true;\n        }\n        puVar2 = puVar2 + 2;\n        if (*param_1 == 0x2c) {\n            uVar1 = *puVar2;\n            if (uVar1 == 0x7d) {\n                return true;\n            }\n            if ((0x2f < uVar1) && (uVar1 < 0x3a)) {\n                do {\n                    puVar2 = puVar2 + 1;\n                    if (*puVar2 < 0x30) break;\n                } while (*puVar2 < 0x3a);\n                return *puVar2 == 0x7d;\n            }\n        }\n    }\n    return false;\n}\n",
        "token_count": 283
    },
    "00471603": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.00471603(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    uVar1 = *in_ECX;\n    iVar3 = 0;\n    if (uVar1 < 0x30) {\ncode_r0x00471654:\n        iVar2 = iVar3;\n        if (*in_ECX != 0x7d) {\n            in_ECX = in_ECX + 1;\n            uVar1 = *in_ECX;\n            iVar2 = -1;\n            if (uVar1 != 0x7d) {\n                iVar2 = 0;\n                if (0x2f < uVar1) {\n                    do {\n                        if (0x39 < uVar1) break;\n                        in_ECX = in_ECX + 1;\n                        iVar2 = iVar2 * 10 + (uVar1 - 0x30);\n                        uVar1 = *in_ECX;\n                    } while (0x2f < uVar1);\n                    if ((iVar2 < 0) || (0xffff < iVar2)) goto code_r0x00471649;\n                }\n                if (iVar2 < iVar3) {\n                    *arg_ch = 4;\n                    return in_ECX;\n                }\n            }\n        }\n        *in_EDX = iVar3;\n        *arg_8h = iVar2;\n    }\n    else {\n        do {\n            if (0x39 < uVar1) break;\n            in_ECX = in_ECX + 1;\n            iVar3 = iVar3 * 10 + (uVar1 - 0x30);\n            uVar1 = *in_ECX;\n        } while (0x2f < uVar1);\n        if ((-1 < iVar3) && (iVar3 < 0x10000)) goto code_r0x00471654;\ncode_r0x00471649:\n        *arg_ch = 5;\n    }\n    return in_ECX;\n}\n",
        "token_count": 476
    },
    "00471851": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00471851(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if ((arg_ch < 0) || (arg_8h <= arg_ch)) {\n        iVar2 = -7;\n    }\n    else {\n        iVar2 = *(in_EDX + 4 + arg_ch * 8) - *(in_EDX + arg_ch * 8);\n        iVar1 = (**0x4bbddc)(iVar2 * 2 + 2);\n        if (iVar1 == 0) {\n            iVar2 = -6;\n        }\n        else {\n            fcn.0041faa0(iVar1, in_ECX + *(in_EDX + arg_ch * 8) * 2, iVar2 * 2);\n            *(iVar1 + iVar2 * 2) = 0;\n            *arg_10h = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 252
    },
    "004718bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004718bf(uint16_t *param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    \n    while ((uVar2 = *param_1,  uVar2 != 0 || (*param_2 != 0))) {\n        uVar1 = *param_2;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n        if (uVar2 != uVar1) {\n            return (uVar1 < uVar2) * 2 + -1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 149
    },
    "004718ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004718ee(int32_t param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    \n    param_1 = param_1 - param_2;\n    while ((uVar1 = *(param_1 + param_2),  uVar1 != 0 || (*param_2 != 0))) {\n        uVar2 = *param_2;\n        param_2 = param_2 + 1;\n        if (uVar1 != uVar2) {\n            return (uVar2 < uVar1) * 2 + -1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 153
    },
    "00471a42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00471a42(int32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_ECX;\n    int32_t in_EDX;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint uVar5;\n    \n    uVar5 = 2;\n    puVar4 = in_ECX;\n    if (in_EDX < 0) {\n        uVar1 = *in_ECX;\n        puVar2 = in_ECX;\n        while (uVar1 != 0) {\n            puVar2 = puVar2 + 1;\n            uVar1 = *puVar2;\n        }\n        in_EDX = puVar2 - in_ECX >> 1;\n    }\n    do {\n        if (in_EDX < 1) {\n            return 0;\n        }\n        iVar3 = in_EDX + -1;\n        if ((*puVar4 & 0xf800) == 0xd800) {\n            if ((*puVar4 & 0x400) != 0) {\n                uVar5 = 3;\ncode_r0x00471ab2:\n                *arg_8h = puVar4 - in_ECX >> 1;\n                return uVar5;\n            }\n            if (iVar3 == 0) {\n                uVar5 = 1;\n                goto code_r0x00471ab2;\n            }\n            puVar4 = puVar4 + 1;\n            iVar3 = in_EDX + -2;\n            if ((*puVar4 & 0xfc00) != 0xdc00) goto code_r0x00471ab2;\n        }\n        in_EDX = iVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 400
    },
    "00471e16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00471e16(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 306
    },
    "004016db": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004016db(int32_t param_1)\n\n{\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    fcn.00401867();\n    return param_1;\n}\n",
        "token_count": 81
    },
    "0040179c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040179c(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 8) = 0;\n    fcn.004113a0(arg_8h);\n    *(in_ECX + 0x10) = *(arg_8h + 0x10);\n    *(in_ECX + 0x14) = *(arg_8h + 0x14);\n    *(in_ECX + 0x18) = *(arg_8h + 0x18);\n    *(in_ECX + 0x28) = 0;\n    fcn.004113a0(arg_8h + 0x20);\n    *(in_ECX + 0x30) = *(arg_8h + 0x30);\n    return;\n}\n",
        "token_count": 184
    },
    "00401842": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00401842(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[2] = 0;\n    param_1[3] = 1;\n    *(param_1 + 4) = 0;\n    param_1[5] = 0;\n    *(param_1 + 6) = 0;\n    param_1[0xb] = 1;\n    param_1[8] = 0;\n    param_1[10] = 0;\n    *(param_1 + 0xc) = 0;\n    return param_1;\n}\n",
        "token_count": 141
    },
    "00401867": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771",
            "log keystrokes"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401867(uint *param_1)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n    *param_1 = 5;\n    param_1[1] = 5;\n    *(param_1 + 2) = 1;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[3] = 4;\n    uVar2 = (*pcVar1)(0x5b, 0);\n    *(param_1 + 0x29) = uVar2;\n    uVar2 = (*pcVar1)(0x10, 0);\n    *(param_1 + 0x26) = uVar2;\n    uVar2 = (*pcVar1)(0xa0, 0);\n    *(param_1 + 0x27) = uVar2;\n    uVar2 = (*pcVar1)(0xa1, 0);\n    *(param_1 + 10) = uVar2;\n    uVar2 = (*pcVar1)(0x11, 0);\n    *(param_1 + 9) = uVar2;\n    uVar2 = (*pcVar1)(0x12, 0);\n    *(param_1 + 0x25) = uVar2;\n    return;\n}\n",
        "token_count": 334
    },
    "004018cf": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004018cf(int32_t param_1)\n\n{\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 1;\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    return param_1;\n}\n",
        "token_count": 92
    },
    "00403c70": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403c70(uint *param_1)\n\n{\n    *param_1 = 0;\n    fcn.0040d3d2();\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[5] = 0x49dbf4;\n    *(param_1 + 9) = 0;\n    return param_1;\n}\n",
        "token_count": 108
    },
    "00405176": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405176(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0040c935(arg_8h);\n    *(in_ECX + 0x10) = *(arg_8h + 0x10);\n    *(in_ECX + 0x14) = *(arg_8h + 0x14);\n    *(in_ECX + 0x18) = *(arg_8h + 0x18);\n    *(in_ECX + 0x1c) = *(arg_8h + 0x1c);\n    *(in_ECX + 0x20) = *(arg_8h + 0x20);\n    return;\n}\n",
        "token_count": 162
    },
    "0040d772": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d772(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    \n    cVar1 = fcn.0040d500(arg_8h, in_ECX);\n    if (cVar1 == '\\0') {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = *in_ECX;\n    }\n    if (iVar3 == 0) {\n        iVar3 = fcn.0042010a(0x20);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            fcn.0040d3d2();\n        }\n        if (iVar3 != arg_8h) {\n            fcn.0040d805(arg_8h);\n        }\n        *(iVar3 + 0x10) = arg_10h & 0xff00;\n        iVar2 = fcn.0042010a(0x10);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            *(iVar2 + 8) = 0;\n            fcn.004113a0(arg_ch);\n        }\n        *(iVar3 + 0x1c) = 0;\n        *(iVar3 + 0x18) = 0;\n        *(iVar3 + 0x14) = iVar2;\n        iVar3 = fcn.0040d420(iVar3, *in_ECX);\n        *in_ECX = iVar3;\n    }\n    else {\n        fcn.0040d89e(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "0041a9d6": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0041a9d6(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 2;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0xffffffff;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    fcn.0040d3d2();\n    *(param_1 + 0xe) = 0;\n    *(param_1 + 0x3a) = 1;\n    param_1[0xf] = 0;\n    param_1[0x10] = 0;\n    param_1[0x13] = 0xffffffff;\n    param_1[0x14] = 0xffffffff;\n    param_1[0x15] = 0xffffffff;\n    param_1[0x16] = 0xffffffff;\n    param_1[0x17] = 0xffffffff;\n    param_1[0x18] = 0xffffffff;\n    param_1[0x19] = 0xffffffff;\n    fcn.0040d3d2();\n    param_1[0x21] = 0;\n    param_1[0x1f] = 0x55;\n    param_1[0x20] = 400;\n    param_1[0x22] = 2;\n    fcn.0041ac65(0xe, fcn.0040d3d2);\n    param_1[0x5b] = 0;\n    param_1[0x5c] = 0;\n    param_1[0x5d] = 0;\n    param_1[0x5e] = 0;\n    param_1[0x5f] = 0;\n    param_1[0x60] = 0;\n    *(param_1 + 0x61) = 0;\n    param_1[0x62] = 0;\n    param_1[0x65] = 0;\n    *(param_1 + 0x66) = 0;\n    *(param_1 + 0x19a) = 0;\n    param_1[0x67] = 0;\n    param_1[0x68] = 0;\n    param_1[0x69] = 0;\n    param_1[0x6b] = 0;\n    param_1[0x6c] = 0;\n    param_1[0x71] = 0;\n    param_1[0x72] = 0;\n    param_1[0x73] = 0;\n    param_1[99] = 0xffffffff;\n    param_1[100] = 0xffffffff;\n    param_1[0x6f] = 0xffffffff;\n    param_1[0x70] = 0xffffffff;\n    *(param_1 + 0x6a) = 1;\n    return param_1;\n}\n",
        "token_count": 708
    },
    "0041cbc2": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cbc2(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    in_ECX[2] = arg_8h[2];\n    piVar1 = arg_8h[3];\n    in_ECX[3] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(in_ECX + 4) = *(arg_8h + 4);\n    *(in_ECX + 0x11) = *(arg_8h + 0x11);\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    return;\n}\n",
        "token_count": 192
    },
    "0043a476": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a476(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    in_ECX[3] = NULL;\n    in_ECX[4] = NULL;\n    *in_ECX = vtable.tK.0;\n    in_ECX[1] = 0x1;\n    fcn.0040d3d2();\n    in_ECX[5] = arg_8h;\n    in_ECX[2] = 0xd;\n    return;\n}\n",
        "token_count": 113
    },
    "0043ed56": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ed56(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = fcn.0042010a(0xc);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0x4b2d98;\n        puVar1[2] = 1;\n        puVar1[1] = in_ECX;\n    }\n    *in_ECX = puVar1;\n    puVar1 = fcn.0042010a(8);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0x4b2dfc;\n        puVar1[1] = in_ECX;\n    }\n    in_ECX[1] = puVar1;\n    puVar1 = fcn.0042010a(8);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0x4b2d70;\n        puVar1[1] = in_ECX;\n    }\n    in_ECX[2] = puVar1;\n    puVar1 = fcn.0042010a(0xc);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0x4b2dc0;\n        puVar1[1] = in_ECX;\n        puVar1[2] = arg_8h;\n    }\n    in_ECX[4] = 0;\n    in_ECX[3] = puVar1;\n    in_ECX[5] = arg_8h;\n    *(in_ECX + 6) = 0;\n    return;\n}\n",
        "token_count": 410
    },
    "0043f7aa": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0043f7aa(uint *param_1)\n\n{\n    ulong uVar1;\n    \n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    param_1[0x15] = 0;\n    *(param_1 + 8) = 0;\n    fcn.00407e53(0x49dbf0);\n    uVar1 = *0x4b6578;\n    *param_1 = 0xffffffff;\n    *(param_1 + 6) = uVar1;\n    param_1[1] = 0xffffffff;\n    param_1[2] = 0x80000000;\n    param_1[3] = 0x80000000;\n    param_1[0x16] = 0;\n    param_1[5] = 0;\n    param_1[4] = 0;\n    fcn.00407e53(0x49dbf0);\n    fcn.00407e53(0x49dbf0);\n    return param_1;\n}\n",
        "token_count": 255
    },
    "0043ff93": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ff93(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint *in_ECX;\n    \n    arg_8h_00 = fcn.0043fde5(arg_8h);\n    if (arg_8h_00 == 0) {\n        arg_8h_00 = fcn.0042010a(0x1c);\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0;\n        }\n        else {\n            fcn.0040d3d2();\n        }\n        fcn.0040c935(arg_8h);\n        *(arg_8h_00 + 0x10) = in_ECX[1];\n        in_ECX[1] = in_ECX[1] + 1;\n        *(arg_8h_00 + 0x18) = 0;\n        *(arg_8h_00 + 0x14) = 0;\n        uVar1 = fcn.0043fe1e(arg_8h_00, *in_ECX);\n        *in_ECX = uVar1;\n    }\n    return *(arg_8h_00 + 0x10);\n}\n",
        "token_count": 283
    },
    "0044157b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044157b(uint rclsid, int32_t *pdwRegister, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint var_4h;\n    \n    var_4h = 0;\n    piVar1 = in_ECX + 7;\n    *in_ECX = 0x4b32c4;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = 0;\n    *piVar1 = 0;\n    in_ECX[8] = 1;\n    in_ECX[9] = arg_10h;\n    if (pdwRegister != NULL) {\n        fcn.0044220c(pdwRegister);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_CreateStdDispatch)(in_ECX[4], 0x800, piVar1);\n        if ((-1 < iVar2) && (*piVar1 != 0)) {\n            fcn.004420f7();\n            iVar2 = (*_sym.imp.OLEAUT32.dll_RegisterActiveObject)(0, rclsid, *piVar1, &pdwRegister);\n            if (-1 < iVar2) {\n                in_ECX[5] = rclsid;\n                iVar2 = (***pdwRegister)(pdwRegister, 0x48d91c, &var_4h);\n                (**(*pdwRegister + 8))(pdwRegister);\n                if (-1 < iVar2) {\n                    in_ECX[6] = var_4h;\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "00449a8f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449a8f(uint32_t arg_8h)\n\n{\n    uint32_t *in_ECX;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 2) = 0;\n    if ((*in_ECX & 8) != 0) {\n        *in_ECX = *in_ECX | 6;\n    }\n    if ((*in_ECX & 0x10) != 0) {\n        *in_ECX = 0x10;\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "0044a5f1": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a5f1(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    \n    iVar1 = fcn.0044a5d3(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0042010a(0x20);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.0040d3d2();\n        }\n        fcn.0040c935(arg_8h);\n        *(iVar1 + 0x1c) = 0;\n        *(iVar1 + 0x18) = 0;\n        *(iVar1 + 0x10) = arg_10h & 0xff00 | 1;\n        *(iVar1 + 0x14) = arg_ch;\n        uVar2 = fcn.0040d420(iVar1, *in_ECX);\n        *in_ECX = uVar2;\n    }\n    else {\n        *(iVar1 + 0x14) = arg_ch;\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "0044d231": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d231(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0040d89e(arg_8h);\n    *(in_ECX + 0x10) = *(arg_8h + 0x10);\n    *(in_ECX + 0x14) = *(arg_8h + 0x14);\n    *(in_ECX + 0x18) = *(arg_8h + 0x18);\n    fcn.0040d89e(arg_8h + 0x20);\n    *(in_ECX + 0x30) = *(arg_8h + 0x30);\n    return;\n}\n",
        "token_count": 158
    },
    "0044d7e4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d7e4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407be1();\n    *(iVar1 + 0x14) = arg_8h;\n    iVar1 = fcn.00407be1();\n    *(iVar1 + 0x18) = arg_ch;\n    return;\n}\n",
        "token_count": 90
    },
    "00454507": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454507(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    in_ECX[2] = arg_8h[2];\n    in_ECX[3] = arg_8h[3];\n    in_ECX[4] = arg_8h[4];\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    in_ECX[7] = arg_8h[7];\n    in_ECX[8] = arg_8h[8];\n    in_ECX[9] = arg_8h[9];\n    in_ECX[10] = arg_8h[10];\n    piVar1 = arg_8h[0xb];\n    in_ECX[0xb] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(in_ECX + 0xc) = *(arg_8h + 0xc);\n    in_ECX[0xd] = arg_8h[0xd];\n    in_ECX[0xe] = arg_8h[0xe];\n    in_ECX[0xf] = arg_8h[0xf];\n    piVar1 = arg_8h[0x10];\n    in_ECX[0x10] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    fcn.0045447e(arg_8h + 0x11);\n    in_ECX[0x15] = arg_8h[0x15];\n    fcn.004546b0(arg_8h + 0x16);\n    *(in_ECX + 0x34) = *(arg_8h + 0x34);\n    in_ECX[0x35] = arg_8h[0x35];\n    in_ECX[0x36] = arg_8h[0x36];\n    *(in_ECX + 0x37) = *(arg_8h + 0x37);\n    return;\n}\n",
        "token_count": 494
    },
    "00454722": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454722(ushort *arg_8h)\n\n{\n    int32_t *piVar1;\n    ushort *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    *(in_ECX + 2) = *(arg_8h + 2);\n    *(in_ECX + 4) = *(arg_8h + 4);\n    *(in_ECX + 6) = *(arg_8h + 6);\n    piVar1 = *(arg_8h + 8);\n    *(in_ECX + 8) = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(in_ECX + 10) = *(arg_8h + 10);\n    *(in_ECX + 0xc) = *(arg_8h + 0xc);\n    *(in_ECX + 0xe) = *(arg_8h + 0xe);\n    piVar1 = *(arg_8h + 0x10);\n    *(in_ECX + 0x10) = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(in_ECX + 0x12) = *(arg_8h + 0x12);\n    *(in_ECX + 0x14) = *(arg_8h + 0x14);\n    *(in_ECX + 0x16) = *(arg_8h + 0x16);\n    piVar1 = *(arg_8h + 0x18);\n    *(in_ECX + 0x18) = piVar1;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 373
    },
    "00465f56": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00465f56(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint arg_ch;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    uint unaff_EDI;\n    \n    fcn.0040d89e(**(arg_8h + 4));\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    fcn.0040c935(*(iVar1 + 8));\n    uVar6 = 1;\n    uVar4 = fcn.00401dce(1);\n    if (0 < uVar4) {\n        uVar5 = **(in_ECX + 0x1f8);\n        fcn.004113a0(*(*(arg_8h + 4) + 8));\n        cVar2 = fcn.0040d2c0(7);\n        if (cVar2 == '\\0') {\n            cVar2 = fcn.0040d2c0(4);\n            if ((cVar2 == '\\0') && (cVar2 = fcn.0040d16a(),  cVar2 == '\\0')) {\n                uVar6 = 0;\n            }\n            else {\n                cVar2 = fcn.00405372();\n                if (cVar2 == '\\0') {\n                    fcn.0040d3d2();\n                    cVar2 = fcn.0043d7d6(uVar5, &stack0xffffffd0);\n                    if (cVar2 == '\\0') {\n                        fcn.0043e0c5(uVar5);\n                    }\n                    fcn.00405cd3();\n                }\n                else {\n                    cVar2 = fcn.0040d16a();\n                    if (cVar2 == '\\0') {\n                        fcn.004084a6();\n                        uVar3 = fcn.0043d978(uVar5, unaff_EDI);\n                    }\n                    else {\n                        arg_ch = fcn.0040cdb4();\n                        uVar3 = fcn.0043dcf3(uVar5, arg_ch);\n                    }\n                    uVar6 = uVar3;\n                }\n            }\n        }\n        else {\n            uVar5 = fcn.0044be63();\n            fcn.0043e0c5(uVar5);\n        }\n        uVar4 = fcn.00412570();\n        return uVar4 & 0xffffff00 | uVar6;\n    }\n    return uVar4 & 0xffffff00;\n}\n",
        "token_count": 594
    },
    "00468b20": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468b20(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    fcn.0040c935(arg_8h + 1);\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    in_ECX[7] = arg_8h[7];\n    in_ECX[8] = arg_8h[8];\n    return;\n}\n",
        "token_count": 119
    },
    "00402c7d": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402c7d(ushort *param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    uint32_t uVar4;\n    uint unaff_EDI;\n    \n    puVar2 = *(param_1 + 4);\n    while (puVar2 != NULL) {\n        puVar1 = puVar2[3];\n        fcn.0042017e(*puVar2);\n        fcn.0042017e(puVar2);\n        puVar2 = puVar1;\n    }\n    puVar2 = *(param_1 + 0x22);\n    uVar3 = 0;\n    if (puVar2 != NULL) {\n        if (puVar2[-1] == 0) {\n            fcn.0042017e(puVar2 + -1);\n        }\n        else {\n            (***puVar2)(3);\n        }\n    }\n    fcn.0042017e(*(param_1 + 10));\n    *(param_1 + 4) = 0;\n    *(param_1 + 6) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 10) = 0;\n    *(param_1 + 0x22) = 0;\n    *param_1 = 0;\n    uVar4 = 0;\n    if (*(param_1 + 0x10) != 0) {\n        do {\n            fcn.0042017e(**(*(param_1 + 0xe) + uVar4 * 4));\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + 0x10));\n    }\n    fcn.00402d1a();\n    fcn.00402d1a();\n    if (*(param_1 + 0x28) != 0) {\n        do {\n            puVar2 = **(*(param_1 + 0x26) + uVar3 * 4);\n            if (puVar2 != NULL) {\n                (***puVar2)(1);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(param_1 + 0x28));\n    }\n    uVar3 = 0;\n    if (*(param_1 + 0x28) != 0) {\n        do {\n            fcn.0042017e(*(*(param_1 + 0x26) + uVar3 * 4), unaff_EDI, unaff_ESI);\n            *(*(param_1 + 0x26) + uVar3 * 4) = 0;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(param_1 + 0x28));\n    }\n    *(param_1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 652
    },
    "00404dc1": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404dc1(int32_t param_1)\n\n{\n    ulong uVar1;\n    \n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    uVar1 = fcn.00404fb3();\n    *(param_1 + 0x10) = uVar1;\n    *(param_1 + 0x14) = uVar1 >> 0x20;\n    return;\n}\n",
        "token_count": 107
    },
    "0041c488": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0041c488(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0xffffffff;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    param_1[0xd] = 0;\n    param_1[0xe] = 0;\n    param_1[0xf] = 0;\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = 0xffffffff;\n    param_1[0x13] = 0xffffffff;\n    param_1[0x14] = 0;\n    fcn.0040d3d2();\n    param_1[0x19] = 0;\n    param_1[0x1a] = 0;\n    param_1[0x1c] = 0;\n    param_1[0x1e] = 0;\n    param_1[0x1f] = 1;\n    *(param_1 + 0x21) = 0xffff;\n    *(param_1 + 0x22) = 0xffff;\n    *(param_1 + 0x8a) = 0xffff;\n    *(param_1 + 0x23) = 0xffff;\n    *(param_1 + 0x8e) = 0xffff;\n    param_1[0x27] = 0xffffffff;\n    param_1[0x20] = 0;\n    *(param_1 + 0x26) = 0;\n    *(param_1 + 0x93) = 0xff;\n    return param_1;\n}\n",
        "token_count": 425
    },
    "00446623": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446623(uint *param_1)\n\n{\n    ulong uVar1;\n    \n    if (param_1[2] != 0) {\n        param_1[2] = 0;\n        param_1[3] = 0;\n        param_1[2] = 0;\n        param_1[3] = 0;\n        uVar1 = fcn.00404fb3();\n        (*_sym.imp.KERNEL32.dll_SetFilePointerEx)\n                  (*param_1, param_1[4] - uVar1, (param_1[5] - (uVar1 >> 0x20)) - (param_1[4] < uVar1), 0, 1);\n        uVar1 = fcn.00404fb3();\n        param_1[4] = uVar1;\n        param_1[5] = uVar1 >> 0x20;\n        return;\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "004499a0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004499a0(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    in_ECX[2] = arg_8h[2];\n    in_ECX[3] = arg_8h[3];\n    in_ECX[4] = arg_8h[4];\n    piVar1 = arg_8h[5];\n    in_ECX[5] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 150
    },
    "004499d0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004499d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch;\n    in_ECX[2] = arg_10h;\n    in_ECX[3] = arg_14h;\n    in_ECX[4] = arg_18h;\n    in_ECX[5] = arg_1ch;\n    *arg_1ch = *arg_1ch + 1;\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 160
    },
    "0044a073": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a073(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00449e00(param_1 + 0x14, param_1 + 0x10, param_1 + 0xc, param_1 + 8);\n    if (iVar1 == 0) {\n        fcn.00449e65(4, 0xfffffff4, param_1 + 0x14, param_1 + 0x10);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0044a17a": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a17a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00449e00(param_1 + 0xc, param_1 + 8, param_1 + 0x14, param_1 + 0x10);\n    if (iVar1 == 0) {\n        fcn.00449e65(2, 0xfffffff5, param_1 + 0xc, param_1 + 8);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00464642": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464642(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar2 = *(iVar1 + 8);\n    uStack24 = *puVar2;\n    uStack20 = puVar2[1];\n    uStack16 = puVar2[2];\n    piStack12 = puVar2[3];\n    *piStack12 = *piStack12 + 1;\n    fcn.00446963();\n    fcn.00407bef(&uStack24);\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 192
    },
    "00465282": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465282(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    puVar2 = *(iVar1 + 8);\n    uStack24 = *puVar2;\n    uStack20 = puVar2[1];\n    uStack16 = puVar2[2];\n    piStack12 = puVar2[3];\n    *piStack12 = *piStack12 + 1;\n    fcn.00448498();\n    fcn.00407bef(&uStack24);\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 192
    },
    "0041f55e": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f55e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040cdb4();\n    if (iVar1 < 1) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    }\n    else {\n        uVar2 = (*_sym.imp.WINMM.dll_timeGetTime)();\n        *(in_ECX + 0x318) = uVar2;\n        uVar2 = fcn.0040cdb4();\n        *(in_ECX + 0x310) = uVar2;\n        *(in_ECX + 0xfc) = 2;\n        fcn.0040e1f0(0);\n    }\n    return 0;\n}\n",
        "token_count": 179
    },
    "0043c066": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c066(uint *arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*arg_8h, 0xffffffff);\n    (*_sym.imp.USERENV.dll_UnloadUserProfile)(arg_8h[2], arg_8h[1]);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h[2]);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(*arg_8h);\n    fcn.0043b850();\n    return 0;\n}\n",
        "token_count": 120
    },
    "004449d1": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004449d1(uint32_t arg_8h)\n\n{\n    double dVar1;\n    int32_t iVar2;\n    float10 fVar3;\n    uint var_18h;\n    uint var_14h;\n    uint32_t lpPerformanceCount;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (-1 < arg_8h) {\n        if (arg_8h == 0) {\n            arg_8h = 0;\n        }\n        else if ((arg_8h < 0xf) &&\n                (iVar2 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&lpPerformanceCount),  iVar2 != 0)) {\n            dVar1 = arg_8h;\n            if (arg_8h < 0) {\n                dVar1 = dVar1 + *0x4b6568;\n            }\n            do {\n                (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_8h);\n                _var_18h = CONCAT44((var_4h - var_ch) - (var_8h < lpPerformanceCount), var_8h - lpPerformanceCount);\n                fVar3 = fcn.0041ebde();\n            } while (_var_18h / fVar3 < dVar1);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "00401dce": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401dce(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    fcn.00402d1a();\n    cVar1 = fcn.0040d2c0(7);\n    if (cVar1 == '\\0') {\n        var_4h = 0;\n        cVar1 = fcn.0040d2c0(4);\n        if (cVar1 != '\\0') {\n            fcn.004084a6();\n            var_4h = fcn.00401f04(*(in_ECX + 0x1e0), in_ECX + 0x1e8, in_ECX + 0x300, *(in_ECX + 0x2f4), \n                                  *(in_ECX + 0x2fd), *(in_ECX + 0x2fc), arg_8h);\n            if (var_4h != 0) {\n                return var_4h;\n            }\n        }\n        arg_8h_00 = fcn.0044be63();\n        arg_8h = arg_8h_00;\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(arg_8h_00);\n    }\n    else {\n        arg_8h_00 = fcn.0044be63();\n        arg_8h = arg_8h_00;\n        var_4h = (*_sym.imp.USER32.dll_IsWindow)(arg_8h_00);\n        iVar2 = var_4h;\n    }\n    if (iVar2 != 0) {\n        fcn.0040200a(arg_8h_00);\n        fcn.0040197e(&arg_8h);\n        var_4h = 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 429
    },
    "0041e63e": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041e63e(int16_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_ECX[1];\n    uVar6 = 0;\n    if (uVar1 != 0) {\n        uVar4 = uVar1;\n        do {\n            uVar4 = uVar4 - 1;\n            iVar5 = 0;\n            iVar3 = 0;\n            if (*arg_8h == 0) {\n                return uVar4;\n            }\n            iVar2 = *arg_8h;\n            do {\n                if (*(*in_ECX + uVar4 * 2) == iVar2) {\n                    iVar3 = iVar3 + 1;\n                }\n                iVar5 = iVar5 + 1;\n                iVar2 = arg_8h[iVar5];\n            } while (iVar2 != 0);\n            if (iVar3 == 0) {\n                return uVar4;\n            }\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 320
    },
    "0041ee64": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ee64(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint16_t *in_ECX;\n    uint8_t *in_EDX;\n    \n    do {\n        if (arg_8h == 0) {\n            return 0;\n        }\n        uVar2 = *in_ECX;\n        uVar1 = *in_EDX;\n        arg_8h = arg_8h + -1;\n        in_EDX = in_EDX + 1;\n        in_ECX = in_ECX + 1;\n    } while (uVar1 == uVar2);\n    return (uVar1 < uVar2) * 2 + -1;\n}\n",
        "token_count": 168
    },
    "00444b52": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00444b52(uint bVk, uint bScan, uint dwFlags)\n\n{\n    int32_t in_ECX;\n    uint pInputs;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    if ((*(in_ECX + 0xc) & 4) == 0) {\n        (*_sym.imp.USER32.dll_keybd_event)(bVk, bScan, dwFlags, 0);\n    }\n    else {\n        var_10h = 0;\n        var_ch = 0;\n        var_18h._0_2_ = bVk;\n        var_18h._2_2_ = bScan;\n        var_14h = dwFlags;\n        pInputs = 1;\n        (*_sym.imp.USER32.dll_SendInput)(1, &pInputs, 0x1c);\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "00452628": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00452628(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = 0;\n    uVar4 = 0;\n    if (in_ECX[1] != 0) {\n        iVar1 = *arg_8h;\n        do {\n            iVar2 = 0;\n            if (iVar1 != 0) {\n                iVar1 = *arg_8h;\n                do {\n                    if (*(*in_ECX + iVar3 * 2) == iVar1) {\n                        return iVar3;\n                    }\n                    iVar2 = iVar2 + 1;\n                    iVar1 = arg_8h[iVar2];\n                } while (iVar1 != 0);\n                iVar1 = *arg_8h;\n            }\n            iVar3 = iVar3 + 1;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < in_ECX[1]);\n    }\n    return -1;\n}\n",
        "token_count": 246
    },
    "0047191e": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0047191e(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint16_t *in_EDX;\n    \n    if (arg_8h != 0) {\n        iVar3 = in_ECX - in_EDX;\n        do {\n            uVar1 = *(iVar3 + in_EDX);\n            uVar2 = *in_EDX;\n            arg_8h = arg_8h + -1;\n            in_EDX = in_EDX + 1;\n            if (uVar2 != uVar1) {\n                return (uVar2 < uVar1) * 2 + -1;\n            }\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 191
    },
    "00437cd1": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00437cd1(void)\n\n{\n    *0x4bb4f0 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "0043f009": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f009(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    piVar1 = param_1[3];\n    var_8h = NULL;\n    var_4h = NULL;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x2c))(piVar1, 0xfffffffd, 0, param_1[10], 0xffffffff, *(*param_1 + 0x14), param_1 + 4);\n        if ((*(param_1 + 0x3d) != '\\0') || (*(param_1 + 0xf) != '\\0')) {\n            (***param_1[3])(param_1[3], 0x48da2c, &var_8h);\n            if (var_8h != NULL) {\n                if (*(param_1 + 0x3d) != '\\0') {\n                    (**(*var_8h + 0x18))(var_8h);\n                }\n                if (*(param_1 + 0xf) != '\\0') {\n                    (**(*var_8h + 0x14))(var_8h);\n                }\n            }\n        }\n        (*_sym.imp.ole32.dll_OleSetContainedObject)(param_1[3], 0);\n        (***param_1[3])(param_1[3], 0x48da4c, &var_4h);\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x1c))(var_4h, 1, 2, 0);\n            (**(*var_4h + 8))(var_4h);\n            var_4h = NULL;\n        }\n        (**(*param_1[3] + 0x50))(param_1[3], param_1[0xe]);\n        (**(*param_1[3] + 0xc))(param_1[3], 0);\n        (**(*param_1[3] + 0x14))(param_1[3], 0x49dbf0, 0);\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(param_1[2]);\n        if (iVar2 != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(param_1[2]);\n        }\n        (**(*param_1[3] + 8))(param_1[3]);\n        param_1[3] = 0;\n    }\n    param_1[2] = 0;\n    *(param_1 + 0xf) = 0;\n    if (param_1[0xd] != 0) {\n        fcn.0042017e(param_1[0xd]);\n        param_1[0xd] = 0;\n    }\n    if (param_1[0xb] != 0) {\n        fcn.0043ee68(param_1[0xb]);\n        param_1[0xb] = 0;\n    }\n    if (param_1[0xc] != 0) {\n        fcn.0042017e(param_1[0xc]);\n        param_1[0xc] = 0;\n    }\n    if (param_1[10] != 0) {\n        fcn.0042017e(param_1[10]);\n        param_1[10] = 0;\n    }\n    return;\n}\n",
        "token_count": 781
    },
    "0043b7ef": {
        "rules": [
            "get token privileges/64a4ac2ad8dc404e9f897e2196104caf",
            "get token privileges"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043b7ef(uint32_t *TokenInformation, uint noname_1, uint *ReturnLength)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    uVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)();\n    if (uVar1 == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (uVar1 != 0x7a) goto code_r0x0043b849;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, *ReturnLength);\n        uVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        *TokenInformation = uVar1;\n        if (uVar1 == 0) goto code_r0x0043b849;\n        uVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)();\n        if (uVar1 == 0) goto code_r0x0043b849;\n    }\n    uVar3 = 1;\ncode_r0x0043b849:\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 278
    },
    "0043bff5": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bff5(uint *hSourceProcessHandle, uint *lpThreadAttributes, uint *hSourceHandle)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0xc);\n    iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(iVar3, 0, 0, 2);\n    uVar2 = (*pcVar1)(*hSourceProcessHandle, uVar2);\n    (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    uVar2 = (*pcVar1)(iVar3 + 8, 0, 0, 2);\n    uVar2 = (*pcVar1)(*hSourceHandle, uVar2);\n    (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    *(iVar3 + 4) = *lpThreadAttributes;\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0043c066, iVar3, 0, 0);\n    return;\n}\n",
        "token_count": 288
    },
    "0044a2f6": {
        "rules": [
            "create thread",
            "create thread"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a2f6(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t lpThreadId;\n    \n    if (*(param_1 + 0x30) == 0) {\n        lpThreadId = param_1;\n        uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0044a2dc, param_1, 0, &lpThreadId);\n        *(param_1 + 0x30) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0043e2e8": {
        "rules": [
            "get graphical window text/640bf5383e7d4308bf669f3aa2649f29"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e2e8(uint arg_8h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    uint var_18h;\n    uint *hWnd;\n    \n    hWnd = in_ECX;\n    fcn.0040c4cd();\n    cVar2 = fcn.0040193b(*in_ECX);\n    if (cVar2 == '\\0') {\n        iVar3 = fcn.0043e390();\n        if (iVar3 == 0) {\n            iVar3 = 0x7fff;\n        }\n        iVar1 = (iVar3 + 1U) * 2;\n        uVar4 = fcn.0042010a(-(iVar1 >> 0x20 != 0) | iVar1);\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0xd, iVar3 + 1U, uVar4);\n        if (0 < iVar5) {\n            iVar5 = fcn.004223f0(uVar4);\n            if (iVar5 == iVar3) {\n                fcn.0043e0f5(uVar4);\n                fcn.0040c610(&var_18h, arg_8h);\n                fcn.00405cd3();\n            }\n            else {\n                fcn.00407e53(uVar4);\n            }\n        }\n        fcn.0042017e(uVar4);\n        uVar4 = 1;\n    }\n    else {\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 369
    },
    "00455f08": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00455f08(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = fcn.0040cdb4();\n    uVar4 = 1;\n    if (1 < uVar1) {\n        do {\n            uVar3 = fcn.0040cdb4();\n            uVar2 = uVar2 ^ uVar3;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uVar1);\n    }\n    fcn.00412570();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 193
    },
    "004484f4": {
        "rules": [
            "open process"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004484f4(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpdwResult;\n    uint lpdwProcessId;\n    \n    lpdwResult = param_1;\n    lpdwProcessId = param_1;\n    (*_sym.imp.USER32.dll_PostMessageW)(param_1, 0x10, 0, 0);\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(param_1, 0x10, 0, 0, 2, 500, &lpdwResult);\n    if (iVar1 == 0) {\n        (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(param_1, &lpdwProcessId);\n        uVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1f0fff, 0, lpdwProcessId);\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar2, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "0040123e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040123e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 4);\n    if (iVar1 != 0) {\n        do {\n            iVar1 = *(iVar1 + 8);\n            fcn.0043ea90();\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0040181b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040181b(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = param_1 + 4;\n    iVar2 = 0x10;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return param_1;\n}\n",
        "token_count": 108
    },
    "00402933": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402933(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + 4);\n    if (iVar2 != 0) {\n        do {\n            iVar1 = *(iVar2 + 4);\n            fcn.0042017e(iVar2);\n            iVar2 = iVar1;\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00402982": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402982(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            fcn.0042017e(*(*(param_1 + 4) + uVar1 * 4));\n            *(*(param_1 + 4) + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 147
    },
    "004029ad": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004029ad(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 4);\n        fcn.00402b56();\n    }\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 83
    },
    "00402b6e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402b6e(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            fcn.0042017e(*(*(param_1 + 4) + uVar1 * 4));\n            *(*(param_1 + 4) + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 149
    },
    "00402bf8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402bf8(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 4);\n        fcn.00468b88();\n    }\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 84
    },
    "00402d1a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d1a(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            fcn.0042017e(*(*(param_1 + 4) + uVar1 * 4));\n            *(*(param_1 + 4) + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 149
    },
    "00402e39": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402e39(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    do {\n        iVar1 = *(param_1 + 4 + iVar2 * 8);\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_VirtualFreeEx)(*(param_1 + iVar2 * 8), iVar1, 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + iVar2 * 8));\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x10);\n    return;\n}\n",
        "token_count": 160
    },
    "00402e6d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402e6d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 4);\n        fcn.00401962();\n    }\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 84
    },
    "00402e8f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402e8f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 4);\n    if (iVar1 != 0) {\n        do {\n            iVar1 = *(iVar1 + 0x10);\n            fcn.0041bdcc();\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00402f47": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402f47(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 4);\n    if (iVar1 != 0) {\n        do {\n            iVar1 = *(iVar1 + 0x30);\n            fcn.0044d28e();\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00403029": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403029(int32_t param_1)\n\n{\n    while (*(param_1 + 0x160) != 0) {\n        fcn.0040d9f2();\n    }\n    fcn.00402b6e();\n    while (*(param_1 + 0x16c) != 0) {\n        fcn.0045d058();\n    }\n    while (*(param_1 + 0x188) != 0) {\n        fcn.00440fe1();\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0040307a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040307a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.004045a7();\n    *(param_1 + 0x4b4) = 0x49dc1c;\n    iVar1 = *(param_1 + 0x4bc);\n    if (iVar1 != 0) {\n        do {\n            iVar1 = *(iVar1 + 0x38);\n            fcn.00402db5();\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00403097": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403097(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 4);\n    if (iVar1 != 0) {\n        do {\n            iVar1 = *(iVar1 + 0x38);\n            fcn.00402db5();\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0040322e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040322e(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = param_1;\n    var_4h = param_1;\n    fcn.0040325d();\n    var_4h = *(param_1 + 0x488);\n    while( true ) {\n        cVar1 = fcn.00402e2a(0);\n        if (cVar1 == '\\0') break;\n        fcn.0044a3d2();\n        fcn.00468b5a(&var_8h);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0040325d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040325d(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = *(param_1 + 4);\n    var_8h = param_1;\n    while( true ) {\n        cVar1 = fcn.00402e2a(0);\n        if (cVar1 == '\\0') break;\n        fcn.0045592d();\n        fcn.00468b5a(&var_8h);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00403282": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403282(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(*(*(param_1 + -0x88) + 4) + -0x88 + param_1) = 0x4b1840;\n    fcn.0040325d();\n    fcn.00403db0();\n    iVar1 = *(param_1 + -0x84);\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 4);\n        fcn.004548bd();\n    }\n    *(param_1 + -0x7c) = 0;\n    return;\n}\n",
        "token_count": 144
    },
    "004032c9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004032c9(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 4);\n        fcn.0044d307();\n    }\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 84
    },
    "00403d9b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403d9b(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 4);\n        fcn.00401962();\n    }\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 84
    },
    "00404208": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404208(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 != 0) {\n        fcn.00402dd4(*param_1);\n    }\n    fcn.00405cbb();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    iVar1 = 0;\n    do {\n        if (param_1[iVar1 * 2 + 3] != 0) {\n            (*_sym.imp.KERNEL32.dll_VirtualFreeEx)(param_1[iVar1 * 2 + 2], param_1[iVar1 * 2 + 3], 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[iVar1 * 2 + 2]);\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x10);\n    return;\n}\n",
        "token_count": 227
    },
    "004049ca": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004049ca(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    puVar3 = arg_8h[0x72];\n    puVar4 = arg_8h[0x72];\n    while (puVar4 != NULL) {\n        if ((arg_ch == 0) || (puVar4 == *(arg_ch + 0x80))) {\n            iVar2 = puVar4[1];\n            while (iVar2 != 0) {\n                iVar1 = *(iVar2 + 4);\n                fcn.0042017e(iVar2);\n                iVar2 = iVar1;\n            }\n            if ((puVar4 == arg_8h[0x72]) || (*puVar3 == arg_8h[0x72])) {\n                arg_8h[0x72] = *puVar4;\n            }\n            else {\n                *puVar3 = *puVar4;\n            }\n            fcn.0042017e(puVar4);\n            if (arg_ch != 0) break;\n        }\n        if (arg_ch == 0) {\n            puVar3 = arg_8h[0x72];\n            puVar4 = arg_8h[0x72];\n        }\n        else {\n            puVar3 = puVar4;\n            puVar4 = *puVar4;\n        }\n    }\n    (*_sym.imp.USER32.dll_InvalidateRect)(*arg_8h, 0, 1);\n    return;\n}\n",
        "token_count": 353
    },
    "00404c4f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00404c4f(uint arg_8h, uint32_t *arg_ch)\n\n{\n    bool bVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    fcn.0041f324();\n    puVar2 = arg_ch;\n    uVar4 = 0;\n    bVar1 = false;\n    if (*arg_ch != 0) {\n        do {\n            iVar3 = fcn.00404ca0(&arg_ch, 1);\n            if (iVar3 == 0) {\n                if (!bVar1) {\n                    return 0;\n                }\n                break;\n            }\n            bVar1 = true;\n            fcn.00404d29(arg_ch);\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *puVar2);\n    }\n    *puVar2 = uVar4;\n    return 1;\n}\n",
        "token_count": 234
    },
    "0040784a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040784a(int16_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    for (; *param_1 != 0; param_1 = param_1 + 1) {\n        iVar1 = iVar1 + 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 78
    },
    "0040a0b1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040a0b1(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    if (param_1 < 0xffffffe1) {\n        do {\n            if (*0x4c0934 == 0) {\n                fcn.00428e52();\n                fcn.00428eb2(0x1e);\n                fcn.00421d65(0xff);\n            }\n            uVar4 = param_1;\n            if (param_1 == 0) {\n                uVar4 = 1;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x4c0934, 0, uVar4);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            if (*0x4c0930 == 0) {\n                puVar3 = fcn.0042889e();\n                *puVar3 = 0xc;\n                break;\n            }\n            iVar2 = fcn.0042205a(param_1);\n        } while (iVar2 != 0);\n        puVar3 = fcn.0042889e();\n        *puVar3 = 0xc;\n    }\n    else {\n        fcn.0042205a(param_1);\n        puVar3 = fcn.0042889e();\n        *puVar3 = 0xc;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 341
    },
    "0040ca32": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ca32(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_28h;\n    uint var_4h;\n    \n    puVar3 = L\"0123456789ABCDEF\";\n    puVar4 = &var_28h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    for (iVar2 = in_EDX + -1; -1 < iVar2; iVar2 = iVar2 + -1) {\n        uVar1 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        *(in_ECX + iVar2 * 2) = *(&var_28h + uVar1 * 2);\n        arg_ch = arg_ch >> 4;\n    }\n    *(in_ECX + in_EDX * 2) = 0;\n    if ((arg_8h | arg_ch) == 0) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 335
    },
    "0041bc04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bc04(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    *arg_ch = *arg_ch + 1;\n    iVar3 = *arg_ch;\n    *arg_10h = iVar3;\n    iVar2 = *(arg_8h + 4);\n    iVar4 = 0;\n    do {\n        iVar1 = *(*(iVar2 + iVar3 * 4) + 8);\n        if (iVar1 == 0x47) {\n            iVar4 = iVar4 + 1;\n        }\n        else if (iVar1 == 0x48) {\n            if (iVar4 == 0) {\n                *arg_14h = iVar3;\n                *arg_ch = iVar3 + 1;\n                return 0;\n            }\n            iVar4 = iVar4 + -1;\n        }\n        else if (iVar1 == 0x7f) {\n            fcn.0044d520(0x6f, *(*(iVar2 + -4 + iVar3 * 4) + 10));\n            return 0xffffffff;\n        }\n        iVar3 = iVar3 + 1;\n        *arg_ch = iVar3;\n    } while( true );\n}\n",
        "token_count": 312
    },
    "0041be17": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041be17(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    *0x4c1810 = 1;\n    *0x4c1814 = 1;\n    *0x4c1818 = 0;\n    *0x4c181c = 0;\n    *0x4c1820 = 0;\n    *0x4c1828 = 1;\n    *0x4c182c = 2;\n    *0x4c1830 = 0;\n    *0x4c1834 = 0;\n    *0x4c1838 = 0xffffffff;\n    *0x4c183c = 0;\n    *0x4c1840 = 0;\n    *0x4c1844 = 0;\n    *0x4c1848 = 0;\n    fcn.0040d3d2();\n    iVar2 = 3;\n    *0x4c1824 = 0x7c;\n    *0x4c186c = 0x49dd94;\n    *0x4c1870 = 0;\n    *0x4c1874 = 0;\n    *0x4c1878 = 0;\n    *0x4c187c = 0xffffffff;\n    *0x4c1880 = 0x49dc3c;\n    *0x4c1884 = 0;\n    *0x4c1888 = 0;\n    *0x4c188c = 0;\n    *0x4c1890 = 3;\n    *0x4c1894 = 2;\n    *0x4c1898 = 0;\n    *0x4c189c = 0;\n    *0x4c18a0 = 0;\n    *0x4c18a4 = 0xffffffff;\n    *0x4c18a8 = 0xffffffff;\n    *0x4c18dc = 0;\n    *0x4c18e0 = 0;\n    *0x4c18e4 = 0;\n    *0x4c18e8 = 0xffffffff;\n    *0x4c1826 = 0;\n    cVar1 = fcn.0041c929();\n    if (cVar1 != '\\0') {\n        *0x4c1828 = 2;\n        *0x4c182c = 1;\n    }\n    var_4h = 0;\n    do {\n        fcn.0041c8b7(&var_4h);\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return 0x4c1810;\n}\n",
        "token_count": 615
    },
    "0041c38a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c38a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    if (*0x4c1890 == *0x4c1888) {\n        if (*0x4c1894 == 0xffff) {\n            return -1;\n        }\n        iVar1 = fcn.0042010a(0xa0);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = fcn.0041c488();\n        }\n        var_4h = iVar1;\n        fcn.0041c8b7(&var_4h);\n        iVar3 = *0x4c1894 + 1;\n        *0x4c1894 = iVar3;\n    }\n    else {\n        iVar3 = 3;\n        iVar1 = 0;\n        if (3 < *0x4c1888) {\n            do {\n                if (**(*0x4c1884 + iVar3 * 4) == 0) break;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < *0x4c1888);\n        }\n        iVar2 = fcn.0042010a(0xa0);\n        if (iVar2 != 0) {\n            iVar1 = fcn.0041c488();\n        }\n    }\n    *0x4c1890 = *0x4c1890 + 1;\n    **(*0x4c1884 + iVar3 * 4) = iVar1;\n    *(iVar1 + 4) = *(arg_8h + 4);\n    return iVar3;\n}\n",
        "token_count": 391
    },
    "0041dcee": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041dcee(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004218fb(arg_8h);\n    if (iVar1 != 0) {\n        do {\n            iVar1 = iVar1 + -1;\n            if (iVar1 < 0) break;\n            iVar2 = fcn.0041dd62();\n        } while (iVar2 != 0);\n        *(arg_8h + 2 + iVar1 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0041dd27": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041dd27(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    iVar3 = 0;\n    while( true ) {\n        iVar2 = fcn.0041dd62();\n        if (iVar2 == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    for (; iVar1 = *(arg_8h + iVar4 * 2),  iVar1 != 0; iVar4 = iVar4 + 1) {\n        *(arg_8h + iVar3 * 2) = iVar1;\n        iVar3 = iVar3 + 1;\n    }\n    *(arg_8h + iVar3 * 2) = 0;\n    return;\n}\n",
        "token_count": 189
    },
    "0041ec33": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ec33(int32_t param_1)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint var_28h;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_10h = 0;\n    var_18h = *0x4c10bc;\n    var_ch = 1;\n    fcn.0040caee(L\"@EXITCODE\");\n    fcn.0040d380(&var_28h, &var_18h, 1, 2);\n    fcn.00405cd3();\n    uVar1 = *0x4c10b0;\n    fcn.00412570();\n    var_ch = 1;\n    var_18h = uVar1;\n    fcn.0040caee(L\"@EXITMETHOD\");\n    fcn.0040d380(&var_28h, &var_18h, 1, 2);\n    fcn.00405cd3();\n    var_4h = *(param_1 + 0x130);\n    *(param_1 + 0xfc) = 0;\n    *0x4c10c5 = 0;\n    while( true ) {\n        puVar2 = var_4h;\n        cVar3 = fcn.00402e2a(0);\n        if (cVar3 == '\\0') break;\n        iVar4 = fcn.0041cf79(*puVar2);\n        if (iVar4 != 0) {\n            fcn.0044d80a(*(iVar4 + 0x10) + 1, 1);\n        }\n        fcn.0044d26d(&var_8h);\n    }\n    *(param_1 + 0xfc) = 1;\n    fcn.00412570();\n    return;\n}\n",
        "token_count": 435
    },
    "0041ecee": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ecee(int32_t param_1)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_4h = *(param_1 + 0x120);\n    var_8h = param_1;\n    while( true ) {\n        puVar1 = var_4h;\n        cVar2 = fcn.00402e2a(0);\n        if (cVar2 == '\\0') break;\n        iVar3 = fcn.0041cf79(*puVar1);\n        if (iVar3 != 0) {\n            fcn.0044d80a(*(iVar3 + 0x10) + 1, 1);\n        }\n        fcn.00468b5a(&var_8h);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0041ed1a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ed1a(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    uint var_4h;\n    \n    uVar6 = 0;\n    if ((*arg_8h != 0) && (uVar1 = *(in_ECX + 100),  uVar1 != 0)) {\n        do {\n            puVar2 = **(*(in_ECX + 0x60) + uVar6 * 4);\n            if (puVar2 != NULL) {\n                if ((puVar2[0x73] != 0) && (piVar3 = *(puVar2[0x73] + 0x10),  piVar3 != NULL)) {\n                    iVar5 = (**(*piVar3 + 0x14))(piVar3, arg_8h);\n                    if (iVar5 == 0) {\n                        return 1;\n                    }\n                    iVar4 = (*_sym.imp.USER32.dll_GetClassLongW)(*arg_8h, 0xffffffe0);\n                    if ((iVar4 != *0x4c10f0) && (iVar4 != *0x4c10b4)) {\n                        return 0;\n                    }\n                }\n                iVar5 = (*_sym.imp.USER32.dll_IsDialogMessageW)(*puVar2, arg_8h);\n                if (iVar5 != 0) {\n                    return 1;\n                }\n            }\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 390
    },
    "0041f04e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool __cdecl fcn.0041f04e(uint arg_8h, uint32_t *arg_ch)\n\n{\n    bool bVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t *unaff_EDI;\n    uint32_t *var_10h;\n    uint var_1h;\n    \n    if ((*(in_ECX + 0x2c) & 3) == 0) {\n        if ((*(in_ECX + 0x2c) & 4) == 0) {\n            fcn.0040a6d4();\n            cVar3 = fcn.00404c4f(&var_10h, arg_ch);\n            if (cVar3 != '\\0') {\n                fcn.0040c610(&var_10h, arg_8h);\n            }\n            fcn.00405cd3();\n            return cVar3 != '\\0';\n        }\n        fcn.0040a6d4();\n        cVar3 = fcn.00404c4f(&var_10h, arg_ch);\n        if (cVar3 != '\\0') {\n            fcn.00446765(&var_10h, arg_8h);\n        }\n        fcn.00405cd3();\n        return cVar3 != '\\0';\n    }\n    var_10h = unaff_EDI;\n    fcn.0040c4cd();\n    puVar2 = arg_ch;\n    uVar4 = 0;\n    bVar1 = false;\n    if (*arg_ch != 0) {\n        do {\n            cVar3 = fcn.0044649b(&arg_ch);\n            if (cVar3 == '\\0') {\n                if (!bVar1) {\n                    return false;\n                }\n                break;\n            }\n            var_10h = arg_ch;\n            bVar1 = true;\n            fcn.0040bd2f(arg_ch);\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *puVar2);\n    }\n    *puVar2 = uVar4;\n    return true;\n}\n",
        "token_count": 511
    },
    "0041f5da": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f5da(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = fcn.0040cdb4();\n    uVar4 = 1;\n    if (1 < uVar1) {\n        do {\n            uVar3 = fcn.0040cdb4();\n            uVar2 = uVar2 | uVar3;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uVar1);\n    }\n    fcn.00412570();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 194
    },
    "0041f8a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f8a4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 4);\n    if (iVar1 != 0) {\n        do {\n            iVar1 = *(iVar1 + 0x10);\n            fcn.004405c6();\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00433cd5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00433cd5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00427750(0x4b6b30, 0xc);\n    fcn.00428984(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4c0d1c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4c0d18;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00433d1a;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.004228ca(arg_8h_00);\ncode_r0x00433d1a:\n        fcn.004228ca(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00433d3d();\n    fcn.00427795();\n    return;\n}\n",
        "token_count": 402
    },
    "0043b865": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0043b865(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    param_1[1] = 4;\n    param_1[2] = 0;\n    fcn.0043bdf8();\n    iVar1 = fcn.0042010a(-(param_1[1] * 4 >> 0x20 != 0) | param_1[1] * 4);\n    *param_1 = iVar1;\n    if (param_1[1] != 0) {\n        do {\n            *(*param_1 + uVar2 * 4) = *(uVar2 * 4 + 0x4bf7d0);\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < param_1[1]);\n    }\n    return param_1;\n}\n",
        "token_count": 212
    },
    "0043c98d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0043c98d(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_8c8h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_8h;\n    uint lParam;\n    \n    iVar3 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1004, 0, 0);\n    fcn.0040181b();\n    lParam = fcn.00444c65(0x34, *in_ECX);\n    var_28h = fcn.00444c65(0x800, *in_ECX);\n    var_34h = arg_ch;\n    var_24h = 0x400;\n    var_8h = var_28h;\n    fcn.00444d41(&var_3ch, lParam, 0x34);\n    if (0 < iVar1) {\n        do {\n            (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1073, iVar3, lParam);\n            fcn.00444d0c(var_8h, &var_8c8h, 0x800);\n            var_c8h._0_2_ = 0;\n            iVar2 = fcn.00421bc7(&var_8c8h, *arg_8h);\n            if (iVar2 == 0) break;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    if (iVar3 == iVar1) {\n        iVar3 = -1;\n    }\n    fcn.00402e39();\n    return iVar3;\n}\n",
        "token_count": 441
    },
    "0043ccb6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043ccb6(uint *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*param_1, 0x1004, 0, 0);\n    arg_ch = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*param_1, 0x102c, arg_ch, 2);\n            fcn.0043cc25(iVar2 == 0, arg_ch, arg_ch);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < iVar1);\n    }\n    return 1;\n}\n",
        "token_count": 170
    },
    "0043d1c5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043d1c5(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar2 = fcn.0043d0d4(arg_8h);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 != 0) {\n        iVar4 = 0;\n        iVar3 = iVar2;\n        if (*(arg_8h + 4) == 0) goto code_r0x0043d1f9;\n        uVar5 = 4;\n        while( true ) {\n            iVar3 = (*pcVar1)(*in_ECX, 0x110a, uVar5, iVar3);\ncode_r0x0043d1f9:\n            iVar2 = iVar4;\n            if (iVar3 == 0) break;\n            iVar4 = iVar2 + 1;\n            uVar5 = 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 247
    },
    "0043d66c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d66c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    do {\n        arg_8h = (*_sym.imp.USER32.dll_GetParent)(arg_8h);\n        if (arg_8h == 0) {\n            return 0;\n        }\n    } while (arg_8h != arg_ch);\n    return 1;\n}\n",
        "token_count": 88
    },
    "0043e221": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043e221(uint *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint hWnd;\n    \n    hWnd = *param_1;\n    uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0);\n    while( true ) {\n        if ((uVar1 & 0x40000000) == 0) {\n            return hWnd;\n        }\n        iVar2 = fcn.0043e259(hWnd);\n        if (iVar2 == 0) break;\n        hWnd = fcn.0043e259(hWnd);\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0);\n    }\n    return hWnd;\n}\n",
        "token_count": 172
    },
    "0043e630": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e630(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    int32_t arg_8h_00;\n    uint var_14h;\n    \n    fcn.0040d3d2();\n    arg_8h_00 = 0;\n    while( true ) {\n        piVar1 = fcn.0040a4f6(arg_8h_00);\n        if (*piVar1 == 0) break;\n        piVar1 = fcn.0040a4f6(arg_8h_00);\n        if (*piVar1 == 0x3b) {\n            fcn.0040bd2f(0x3b);\n        }\n        puVar2 = fcn.0040a4f6(arg_8h_00);\n        fcn.0040bd2f(*puVar2);\n        arg_8h_00 = arg_8h_00 + 1;\n    }\n    fcn.0040c935(&var_14h);\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 250
    },
    "0043ef91": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ef91(uint *param_1, uint *param_2)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = param_2;\n    if (param_1 != NULL) goto code_r0x0043efad;\n    do {\n        puVar2 = fcn.0043a83b();\ncode_r0x0043efad:\n    } while (puVar2 == NULL);\n    uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n    pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n    uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x58);\n    uVar5 = (*pcVar1)(uVar3, 0x5a);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(0x9ec, *param_1, uVar4);\n    uVar3 = param_1[1];\n    *param_2 = uVar4;\n    uVar3 = (*pcVar1)(0x9ec, uVar3, uVar5);\n    param_2[1] = uVar3;\n    return;\n}\n",
        "token_count": 343
    },
    "0044001d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044001d(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint pvargDest;\n    uint var_ch;\n    uint var_8h;\n    \n    *in_ECX = 0x4b2f8c;\n    in_ECX[1] = 1;\n    in_ECX[4] = 0;\n    fcn.004113a0(&arg_ch);\n    in_ECX[6] = 0x4b2f88;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    in_ECX[10] = arg_8h;\n    in_ECX[0xb] = *(arg_8h + 8);\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n    var_ch = 0;\n    var_8h = 0;\n    iVar1 = 9;\n    do {\n        fcn.00440341(&pvargDest);\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    fcn.00412570();\n    return;\n}\n",
        "token_count": 296
    },
    "004400b8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004400b8(uint *param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    \n    uVar4 = param_1[0xb];\n    *param_1 = 0x4b2f8c;\n    for (; uVar4 < *(param_1[10] + 8) - 1U; uVar4 = uVar4 + 1) {\n        **(*(param_1[10] + 4) + uVar4 * 4) = **(*(param_1[10] + 4) + 4 + uVar4 * 4);\n    }\n    fcn.004041e7();\n    fcn.00440312();\n    fcn.0044009f();\n    piVar1 = param_1 + 2;\n    puVar2 = param_1[4];\n    if (puVar2 == NULL) {\n        iVar3 = param_1[5];\n    }\n    else {\n        *puVar2[3] = *puVar2[3] + -1;\n        if (*puVar2[3] == 0) {\n            fcn.0042017e(*puVar2, unaff_EDI, unaff_ESI);\n            fcn.0042017e(puVar2[3]);\n        }\n        fcn.0042017e(puVar2, unaff_EDI, unaff_ESI);\n        iVar3 = param_1[5];\n        param_1[4] = 0;\n    }\n    if (4 < iVar3) {\n        switch(iVar3) {\n        case 5:\n            fcn.0041e3cc();\n            param_1[5] = 1;\n            *piVar1 = 0;\n            return;\n        case 8:\n            if (*piVar1 != 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*piVar1);\n                fcn.0042017e(*piVar1);\n            }\n            break;\n        case 10:\n            if (*piVar1 != 0) {\n                fcn.0044aa9c(*piVar1);\n            }\n            break;\n        case 0xb:\n            fcn.0042017e(*(*piVar1 + 4), unaff_EDI, unaff_ESI);\n            fcn.0042017e(*piVar1);\n            break;\n        case 0xc:\n            if (*piVar1 != 0) {\n                fcn.0043a56f(*piVar1);\n            }\n            break;\n        case 0xd:\n        case 0xe:\n            if (*piVar1 != 0) {\n                fcn.00401926(*piVar1);\n            }\n            break;\n        case 0xf:\n            if (*piVar1 != 0) {\n                fcn.0043a599(*piVar1);\n            }\n        }\n    }\n    param_1[5] = 1;\n    *piVar1 = 0;\n    return;\n}\n",
        "token_count": 694
    },
    "0044018a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044018a(uint noname_0, uint noname_1, uint *arg_10h, uint noname_3, uint noname_4, uint32_t *arg_1ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_ch;\n    \n    if ((arg_10h != NULL) && (arg_1ch != NULL)) {\n        fcn.0040caee(*arg_10h);\n        fcn.0040b8a7();\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(var_10h, var_ch);\n        uVar2 = 0;\n        do {\n            cVar1 = fcn.0043ffef();\n            if (cVar1 != '\\0') {\n                *arg_1ch = uVar2;\n                fcn.00405cd3();\n                return 0;\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0xc);\n        fcn.00405cd3();\n    }\n    return 0x80020006;\n}\n",
        "token_count": 252
    },
    "00440312": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440312(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            iVar1 = *(*(param_1 + 4) + uVar2 * 4);\n            if (iVar1 != 0) {\n                fcn.00440125(iVar1);\n            }\n            *(*(param_1 + 4) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 173
    },
    "00440fb2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440fb2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            iVar1 = *(*(param_1 + 4) + uVar2 * 4);\n            if (iVar1 != 0) {\n                fcn.0044062e(iVar1);\n            }\n            *(*(param_1 + 4) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 175
    },
    "004418e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004418e8(uint lpString2, uint *arg_ch, int16_t *arg_10h)\n\n{\n    int16_t *piVar1;\n    int64_t iVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int16_t *lpString2_00;\n    int32_t iVar5;\n    \n    *arg_ch = 4;\n    iVar3 = fcn.00442caa(lpString2);\n    *arg_10h = iVar3;\n    if (iVar3 == -1) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n        iVar2 = (iVar4 + 1) * 2;\n        lpString2_00 = fcn.0042010a(-(iVar2 >> 0x20 != 0) | iVar2);\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpString2_00, lpString2);\n        lpString2_00[iVar4] = 0;\n        iVar4 = 0;\n        iVar3 = *lpString2_00;\n        piVar1 = lpString2_00;\n        while (iVar3 != 0) {\n            if (*piVar1 == 0x3a) {\n                iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(lpString2_00 + iVar4 + 1, 0x4b3054);\n                if (iVar5 == 0) {\n                    *arg_ch = 1;\n                }\n                lpString2_00[iVar4] = 0;\n                iVar3 = fcn.00442caa(lpString2_00);\n                *arg_10h = iVar3;\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            piVar1 = lpString2_00 + iVar4;\n            iVar3 = *piVar1;\n        }\n        fcn.0042017e(lpString2_00);\n    }\n    return;\n}\n",
        "token_count": 432
    },
    "004419a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004419a0(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *arg_8h;\n    piVar1 = arg_8h;\n    while (iVar2 != 0) {\n        if (arg_ch == 0) {\n            if (*piVar1 == 0x2e) {\n                *piVar1 = 0x2c;\n            }\n        }\n        else if (*piVar1 == 0x2c) {\n            *piVar1 = 0x2e;\n        }\n        iVar3 = iVar3 + 1;\n        piVar1 = arg_8h + iVar3;\n        iVar2 = *piVar1;\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "004433b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004433b0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((*0x4c22f0 == 0) || (*0x4c22f8 < arg_8h)) || (arg_8h < 1)) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        arg_8h = arg_8h + -1;\n        iVar1 = *0x4c22f0;\n        if (0 < arg_8h) {\n            do {\n                iVar1 = *(iVar1 + 0xc);\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n        }\n        uVar2 = *(iVar1 + 4);\n    }\n    return uVar2;\n}\n",
        "token_count": 191
    },
    "004433e2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004433e2(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((*0x4c22f0 == 0) || (*0x4c22f8 < arg_8h)) || (arg_8h < 1)) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        arg_8h = arg_8h + -1;\n        iVar1 = *0x4c22f0;\n        if (0 < arg_8h) {\n            do {\n                iVar1 = *(iVar1 + 0xc);\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n        }\n        uVar2 = *(iVar1 + 8);\n    }\n    return uVar2;\n}\n",
        "token_count": 191
    },
    "00443460": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443460(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            iVar1 = *(*(param_1 + 4) + uVar2 * 4);\n            if (iVar1 != 0) {\n                fcn.00442f46(iVar1);\n            }\n            *(*(param_1 + 4) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 174
    },
    "004434b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004434b4(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    do {\n        iVar1 = fcn.00422203(*(iVar2 * 4 + 0x4bb758), *arg_8h);\n        if (iVar1 == 0) {\n            return iVar2;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x2d);\n    return -1;\n}\n",
        "token_count": 122
    },
    "00443c15": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443c15(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    \n    fcn.004434e5();\n    fcn.00444ba6(arg_8h);\n    cVar1 = fcn.0044383c();\n    if (cVar1 != '\\0') {\n        fcn.0044388d(&var_ch + 1);\n        fcn.004445f9(in_ECX + 0x14);\n    }\n    if (arg_ch != 0) {\n        do {\n            fcn.004445dc(&var_ch);\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    if (cVar1 != '\\0') {\n        fcn.004447de(in_ECX + 0x14);\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "0044427b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044427b(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004434e5();\n    fcn.00444c14(arg_8h);\n    var_8h = 0;\n    var_4h._0_2_ = 0;\n    fcn.0044388d(&var_8h);\n    fcn.004445f9(in_ECX + 0x14);\n    if (arg_ch != 0) {\n        do {\n            fcn.004445dc(&var_14h);\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    fcn.004447de(in_ECX + 0x14);\n    return;\n}\n",
        "token_count": 208
    },
    "00446538": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00446538(uint arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.0040c4cd();\n    bVar1 = false;\n    do {\n        cVar2 = fcn.0044649b(&var_4h);\n        if (cVar2 == '\\0') {\n            if (bVar1) {\ncode_r0x0044659b:\n                uVar3 = 1;\n            }\n            else {\n                uVar3 = 0;\n            }\n            return uVar3;\n        }\n        bVar1 = true;\n        if (var_4h == 0xd) {\n            cVar2 = fcn.0044649b(&var_4h);\n            if ((cVar2 != '\\0') && (var_4h != 10)) {\n                fcn.00404ee9(0xfffffffe, 0xffffffff, 1);\n            }\n            goto code_r0x0044659b;\n        }\n        if (var_4h == 10) goto code_r0x0044659b;\n        fcn.0040bd2f(var_4h);\n    } while( true );\n}\n",
        "token_count": 286
    },
    "004479c2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004479c2(uint16_t *param_1)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    uVar2 = *param_1;\n    puVar1 = param_1;\n    while( true ) {\n        if (uVar2 == 0) {\n            uVar4 = fcn.0042224a(param_1);\n            return uVar4;\n        }\n        iVar3 = fcn.004222df(*puVar1);\n        if (iVar3 == 0) break;\n        iVar5 = iVar5 + 1;\n        puVar1 = param_1 + iVar5;\n        uVar2 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 191
    },
    "00448498": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448498(int32_t param_1)\n\n{\n    uint32_t arg_8h;\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    uint32_t arg_8h_00;\n    uint var_10h;\n    \n    arg_8h = *(param_1 + 4);\n    fcn.00407b6e(arg_8h);\n    arg_8h_00 = 0;\n    if (arg_8h != 0) {\n        do {\n            piVar1 = fcn.0040a4f6(arg_8h_00);\n            if (*piVar1 != 0xd) {\n                puVar2 = fcn.0040a4f6(arg_8h_00);\n                fcn.0040bd2f(*puVar2);\n            }\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < arg_8h);\n    }\n    fcn.0040c935(&var_10h);\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 251
    },
    "0044d15f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d15f(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    *in_ECX = 0x49dc40;\n    uVar4 = *(arg_8h + 8);\n    in_ECX[2] = uVar4;\n    if (uVar4 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        uVar3 = 8;\n        if (7 < uVar4) {\n            uVar3 = uVar4;\n        }\n        in_ECX[3] = uVar3;\n        uVar1 = fcn.0042010a(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar4 = 0;\n        in_ECX[1] = uVar1;\n        if (in_ECX[2] != 0) {\n            do {\n                iVar2 = fcn.0042010a(0x10);\n                if (iVar2 == 0) {\n                    iVar2 = 0;\n                }\n                else {\n                    uVar1 = *(*(arg_8h + 4) + uVar4 * 4);\n                    *(iVar2 + 8) = 0;\n                    fcn.004113a0(uVar1);\n                }\n                *(in_ECX[1] + uVar4 * 4) = iVar2;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "0045447e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045447e(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *in_ECX;\n    \n    *in_ECX = 0x4b3d98;\n    uVar2 = *(arg_8h + 8);\n    in_ECX[2] = uVar2;\n    if (uVar2 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        if (uVar2 < 8) {\n            uVar2 = 8;\n        }\n        in_ECX[3] = uVar2;\n        uVar3 = fcn.0042010a(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        uVar2 = 0;\n        in_ECX[1] = uVar3;\n        if (in_ECX[2] != 0) {\n            do {\n                puVar4 = fcn.0042010a(8);\n                if (puVar4 == NULL) {\n                    puVar4 = NULL;\n                }\n                else {\n                    puVar1 = *(*(arg_8h + 4) + uVar2 * 4);\n                    *puVar4 = *puVar1;\n                    puVar4[1] = puVar1[1];\n                }\n                *(in_ECX[1] + uVar2 * 4) = puVar4;\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "00454847": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454847(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00403282();\n    *(param_1 + 0x88) = 0x49dc1c;\n    iVar1 = *(param_1 + 0x90);\n    if (iVar1 != 0) {\n        do {\n            iVar1 = *(iVar1 + 0x38);\n            fcn.00402db5();\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00454de4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00454de4(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    iVar3 = fcn.0040cdb4();\n    arg_8h = *(in_ECX + 4);\n    while( true ) {\n        piVar1 = arg_8h;\n        cVar2 = fcn.00402e2a(0);\n        if (cVar2 == '\\0') break;\n        if (*(*piVar1 + 0xd8) == iVar3) {\n            fcn.00455b1e(&arg_8h);\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            fcn.0041e387(var_4h);\n        }\n        fcn.00468b5a(&var_8h);\n    }\n    arg_8h = arg_8h & 0xffffff00;\n    fcn.0041e387(arg_8h);\n    return 0;\n}\n",
        "token_count": 282
    },
    "004559e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004559e0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            iVar1 = *(*(param_1 + 4) + uVar2 * 4);\n            if (iVar1 != 0) {\n                fcn.00402b56(iVar1);\n            }\n            *(*(param_1 + 4) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 175
    },
    "00455c90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00455c90(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = fcn.0040cdb4();\n    uVar4 = 1;\n    if (1 < uVar1) {\n        do {\n            uVar3 = fcn.0040cdb4();\n            uVar2 = uVar2 & uVar3;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uVar1);\n    }\n    fcn.00412570();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 193
    },
    "00457f3d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457f3d(uint noname_0, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_LoadCursorW;\n    var_54h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f8a);\n    var_50h = (*pcVar1)(0, 0x7f00);\n    var_4ch = (*pcVar1)(0, 0x7f03);\n    var_48h = (*pcVar1)(0, 0x7f8b);\n    var_44h = (*pcVar1)(0, 0x7f01);\n    var_40h = (*pcVar1)(0, 0x7f81);\n    var_3ch = (*pcVar1)(0, 0x7f88);\n    var_38h = (*pcVar1)(0, 0x7f80);\n    var_34h = (*pcVar1)(0, 0x7f86);\n    var_30h = (*pcVar1)(0, 0x7f83);\n    var_2ch = (*pcVar1)(0, 0x7f85);\n    var_28h = (*pcVar1)(0, 0x7f82);\n    var_24h = (*pcVar1)(0, 0x7f84);\n    var_20h = (*pcVar1)(0, 0x7f04);\n    var_1ch = (*pcVar1)(0, 0x7f02);\n    var_18h = (*pcVar1)(0, 0x7f89);\n    var_14h = 0x14;\n    iVar2 = (*_sym.imp.USER32.dll_GetCursorInfo)(&var_14h);\n    if (iVar2 == 0) {\n        fcn.00412570();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        iVar2 = 0;\n        do {\n            if ((var_ch != 0) && (var_ch == (&var_54h)[iVar2])) break;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < 0x10);\n        fcn.00412570();\n        arg_ch[3] = 1;\n        if (iVar2 < 0x10) {\n            *arg_ch = iVar2 + 1;\n        }\n        else {\n            *arg_ch = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 704
    },
    "0045d154": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d154(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    *in_ECX = 0x49dd90;\n    uVar4 = *(arg_8h + 8);\n    in_ECX[2] = uVar4;\n    if (uVar4 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        uVar3 = 8;\n        if (7 < uVar4) {\n            uVar3 = uVar4;\n        }\n        in_ECX[3] = uVar3;\n        uVar1 = fcn.0042010a(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar4 = 0;\n        in_ECX[1] = uVar1;\n        if (in_ECX[2] != 0) {\n            do {\n                iVar2 = fcn.0042010a(0xc);\n                if (iVar2 == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = fcn.0044a3ee(*(*(arg_8h + 4) + uVar4 * 4));\n                }\n                *(in_ECX[1] + uVar4 * 4) = uVar1;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "0045ee52": {
        "rules": [
            "contain loop",
            "query environment variable"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ee52(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ushort uStackY8232;\n    uint lpName;\n    uint var_14h;\n    uint uStackY20;\n    \n    fcn.00430650();\n    uStackY20 = 0x45ee6a;\n    fcn.0040d3d2();\n    uStackY20 = 0x45ee72;\n    fcn.0040d3d2();\n    uStackY20 = 0x45ee80;\n    fcn.004084a6();\n    bVar3 = false;\n    puVar2 = **(arg_8h + 8);\n    uVar1 = *puVar2;\n    iVar4 = 0;\n    if (uVar1 != 0) {\n        do {\n            uStackY20 = 0x25;\n            iVar5 = iVar4 + 1;\n            if (uVar1 == 0x25) {\n                if (puVar2[iVar5] == 0x25) {\n                    bVar3 = true;\n                    var_14h = 0x45eeb1;\n                    fcn.0040bd2f(0x25);\n                    iVar5 = iVar4 + 2;\n                }\n                else {\n                    var_14h = 0x45eec4;\n                    fcn.00407e53(0x49dbf0);\n                    var_14h = 0x25;\n                    while( true ) {\n                        uVar1 = puVar2[iVar5];\n                        if ((uVar1 == 0x25) || (uVar1 == 0)) break;\n                        fcn.0040bd2f(uVar1);\n                        iVar5 = iVar5 + 1;\n                    }\n                    if (puVar2[iVar5] == 0) {\n                        bVar3 = true;\n                        fcn.004039e8(0x4b4224);\n                        uStackY20 = 0x45ef76;\n                        fcn.00407b4b(&fcn.0045ee52::lpName);\n                        break;\n                    }\n                    uStackY8232 = 0;\n                    uStackY20 = lpName;\n                    iVar5 = iVar5 + 1;\n                    var_14h = 0x45ef06;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)();\n                    if (iVar4 == 0) {\n                        bVar3 = true;\n                        fcn.004039e8(0x4b4224);\n                        fcn.00407b4b(&fcn.0045ee52::lpName);\n                        uStackY20 = 0x45ef42;\n                        fcn.004039e8(0x4b4224);\n                    }\n                    else {\n                        fcn.004039e8(&stack0xffffdfd8);\n                        bVar3 = true;\n                    }\n                }\n            }\n            else {\n                var_14h = 0x45ef4d;\n                fcn.0040bd2f(uVar1);\n            }\n            uVar1 = puVar2[iVar5];\n            iVar4 = iVar5;\n        } while (uVar1 != 0);\n        if (bVar3) {\n            var_14h = 0x45ef86;\n            fcn.00407bef(&fcn.0045ee52::var_14h);\n        }\n    }\n    uStackY20 = 0x45ef8e;\n    fcn.00405cd3();\n    uStackY20 = 0x45ef96;\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 826
    },
    "0045ef9d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.0045ef9d(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    uint32_t arg_8h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t unaff_EDI;\n    uint *var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_40h;\n    uint32_t lpsz;\n    uint32_t cchLength;\n    uint var_20h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.0040d3d2();\n    fcn.004084a6();\n    puVar2 = **(arg_8h + 8);\n    bVar3 = false;\n    var_8h = 0;\n    var_54h = NULL;\n    uVar1 = *puVar2;\n    iVar4 = 0;\n    if (uVar1 != 0) {\n        do {\n            arg_8h_00 = uVar1;\n            iVar5 = iVar4 + 1;\n            if (uVar1 == 0x24) {\n                if (puVar2[iVar5] == 0x24) {\ncode_r0x0045f00b:\n                    bVar3 = true;\n                    fcn.0040bd2f(unaff_EDI);\n                    iVar5 = iVar4 + 2;\n                    arg_8h_00 = unaff_EDI;\n                }\n                else {\n                    fcn.00407e53(0x49dbf0);\n                    while( true ) {\n                        uVar1 = puVar2[iVar5];\n                        if ((uVar1 == 0x24) || (uVar1 == 0)) break;\n                        fcn.0040bd2f(uVar1);\n                        iVar5 = iVar5 + 1;\n                    }\n                    if (puVar2[iVar5] == 0) {\n                        fcn.004039e8(0x4b3e14);\n                        fcn.00407b4b(&var_40h);\n                        goto code_r0x0045f1de;\n                    }\n                    iVar5 = iVar5 + 1;\n                    fcn.0040c935(&var_40h);\n                    fcn.0040b8a7();\n                    arg_8h_00 = lpsz;\n                    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n                    var_54h = &var_ch;\n                    fcn.0040d2d2(&lpsz, var_54h, &var_8h, 0);\n                    iVar4 = var_ch;\n                    if (var_ch == 0) {\n                        fcn.004039e8(0x4b3e14);\n                        fcn.00407b4b(&var_40h);\n                        arg_8h_00 = 0x4b3e14;\n                        goto code_r0x0045f183;\n                    }\n                    fcn.004084a6();\n                    fcn.004039e8(**(iVar4 + 8));\ncode_r0x0045f09f:\n                    bVar3 = true;\n                }\n            }\n            else if (uVar1 == 0x40) {\n                if (puVar2[iVar5] == 0x40) goto code_r0x0045f00b;\n                fcn.00407e53(0x49dbf0);\n                while( true ) {\n                    uVar1 = puVar2[iVar5];\n                    if ((uVar1 == 0x40) || (uVar1 == 0)) break;\n                    fcn.0040bd2f(uVar1);\n                    iVar5 = iVar5 + 1;\n                }\n                if (puVar2[iVar5] == 0) {\n                    bVar3 = true;\n                    fcn.004039e8(0x4b4228);\n                    fcn.00407b4b(&var_40h);\n                    break;\n                }\n                iVar5 = iVar5 + 1;\n                fcn.0040c935(&var_40h);\n                fcn.0040b8a7();\n                arg_8h_00 = cchLength;\n                (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz);\n                var_54h = &var_54h;\n                iVar4 = fcn.0041e08f(&lpsz, var_54h);\n                if (-1 < iVar4) {\n                    fcn.004084a6();\n                    fcn.00407b4b(0);\n                    goto code_r0x0045f09f;\n                }\n                fcn.004039e8(0x4b4228);\n                fcn.00407b4b(&var_40h);\n                arg_8h_00 = 0x4b4228;\ncode_r0x0045f183:\n                bVar3 = true;\n                fcn.004039e8(arg_8h_00);\n            }\n            else {\n                fcn.0040bd2f(arg_8h_00);\n            }\n            uVar1 = puVar2[iVar5];\n            iVar4 = iVar5;\n            unaff_EDI = arg_8h_00;\n        } while (uVar1 != 0);\n        if (bVar3) {\ncode_r0x0045f1de:\n            fcn.00407bef(&var_20h);\n        }\n    }\n    fcn.00412570();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    fcn.00405cd3();\n    return;\n}\n",
        "token_count": 1310
    },
    "0045f5fb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f5fb(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    *in_ECX = 0x4b4564;\n    uVar4 = *(arg_8h + 8);\n    in_ECX[2] = uVar4;\n    if (uVar4 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        uVar3 = 8;\n        if (7 < uVar4) {\n            uVar3 = uVar4;\n        }\n        in_ECX[3] = uVar3;\n        uVar1 = fcn.0042010a(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar4 = 0;\n        in_ECX[1] = uVar1;\n        if (in_ECX[2] != 0) {\n            do {\n                puVar2 = fcn.0042010a(4);\n                if (puVar2 == NULL) {\n                    puVar2 = NULL;\n                }\n                else {\n                    *puVar2 = **(*(arg_8h + 4) + uVar4 * 4);\n                }\n                *(in_ECX[1] + uVar4 * 4) = puVar2;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 368
    },
    "00462852": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462852(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            iVar1 = *(*(param_1 + 4) + uVar2 * 4);\n            if (iVar1 != 0) {\n                fcn.00468ba4(iVar1);\n            }\n            *(*(param_1 + 4) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 174
    },
    "0046418b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046418b(int32_t **arg_8h, int32_t **arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    double in_stack_0000000c;\n    uint var_ch;\n    uint var_4h;\n    double dStack12;\n    \n    piVar1 = *arg_ch;\n    while( true ) {\n        cVar3 = fcn.00402e2a(0);\n        if (cVar3 == '\\0') {\n            *arg_8h = NULL;\n            return;\n        }\n        iVar2 = *(*piVar1 + 4);\n        dStack12 = iVar2;\n        if (iVar2 < 0) {\n            dStack12 = dStack12 + *0x4b6568;\n        }\n        if (in_stack_0000000c == dStack12) break;\n        fcn.00468b5a(&var_ch);\n    }\n    *arg_8h = piVar1;\n    return;\n}\n",
        "token_count": 241
    },
    "0046cf4e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046cf4e(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint var_8h;\n    int32_t **var_4h;\n    \n    var_8h = *0x4c1898;\n    var_4h = NULL;\n    fcn.0041cbfe(&var_8h);\n    iVar2 = arg_8h;\n    while( true ) {\n        cVar3 = fcn.00402e2a(0);\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n        if (**var_4h == iVar2) break;\n        fcn.00468b5a(&arg_8h);\n    }\n    piVar1 = *var_4h + 1;\n    *piVar1 = *piVar1 + -1;\n    if ((*var_4h)[1] == 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)((*var_4h)[2]);\n        fcn.0046e6e9(&var_4h);\n    }\n    return 1;\n}\n",
        "token_count": 263
    },
    "0046de69": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0046de69(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint32_t noname_4;\n    uint uVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint auStack56 [2];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint auStack24 [2];\n    uint uStack16;\n    uint uStack12;\n    \n    iVar4 = *0x4c1444;\n    iStack60 = *0x4c1444;\n    if ((*0x4c1444 == 1) || (*0x4c10c5 != '\\0')) {\ncode_r0x004542b9:\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0;\n        noname_4 = 0;\n        *0x4c1444 = 0;\n        auStack24[0] = 0;\n        uStack16 = 0;\n        uStack12 = 1;\n        auStack56[0] = 0;\n        uStack48 = 0;\n        uStack44 = 1;\n        uStack40 = 0x49dc40;\n        uStack36 = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        iStack64 = 0;\n        if (*0x4c1860 != 0) {\n            do {\n                uVar1 = *0x4c184c;\n                if (noname_4 == 0) {\n                    fcn.00412570();\n                    auStack56[0] = uVar1;\n                    uStack44 = 1;\n                }\n                else {\n                    if (noname_4 == 1) {\n                        fcn.00412570();\n                        auStack56[0] = param_1;\n                    }\n                    else {\n                        if (noname_4 != 2) {\n                            if (noname_4 == 3) {\n                                fcn.00412570();\n                                uStack44 = 1;\n                                auStack56[0] = param_3;\n                            }\n                            goto code_r0x0045420d;\n                        }\n                        fcn.00412570();\n                        auStack56[0] = param_2;\n                    }\n                    uStack44 = 1;\n                }\ncode_r0x0045420d:\n                fcn.0041baef(auStack56);\n                noname_4 = uStack68 + 1;\n                iVar4 = iStack64;\n                uStack68 = noname_4;\n            } while (noname_4 < *0x4c1860);\n        }\n        cVar5 = '\\0';\n        uStack68 = uStack68 & 0xffffff;\n        cVar2 = fcn.00456a38(0x4c1850, &uStack40, auStack24, 0, noname_4, &uStack68 + 3);\n        if ((cVar2 != '\\0') && (*0x4c1444 != 1)) {\n            *0x4c1444 = iVar4;\n            if (cVar5 == '\\0') {\n                fcn.004404c9();\n                fcn.00412570();\n                fcn.00412570();\n                goto code_r0x004542b9;\n            }\n            uVar3 = fcn.0040cdb4();\n        }\n        fcn.004404c9();\n        fcn.00412570();\n        fcn.00412570();\n    }\n    return uVar3;\n}\n",
        "token_count": 835
    },
    "004707f5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004707f5(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t in_ECX;\n    \n    for (; (arg_8h != NULL && (in_ECX <= arg_8h[1])); arg_8h = *arg_8h) {\n        iVar1 = fcn.00470830(arg_ch, arg_10h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 123
    },
    "00470c78": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00470c78(int32_t param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = \"no error\";\n    while( true ) {\n        if (param_1 < 1) {\n            return pcVar2;\n        }\n        do {\n            cVar1 = *pcVar2;\n            pcVar2 = pcVar2 + 1;\n        } while (cVar1 != '\\0');\n        if (*pcVar2 == '\\0') break;\n        param_1 = param_1 + -1;\n    }\n    return \"Error text not found (please report)\";\n}\n",
        "token_count": 142
    },
    "00444c14": {
        "rules": [
            "log keystrokes"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00444c14(uint arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uchar *in_ECX;\n    \n    *(in_ECX + 6) = 0;\n    *(in_ECX + 1) = 0;\n    in_ECX[5] = 0;\n    in_ECX[10] = 0;\n    *in_ECX = arg_8h;\n    cVar1 = fcn.0044383c();\n    if (cVar1 != '\\0') {\n        uVar2 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(arg_8h, 0);\n        in_ECX[7] = uVar2;\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 176
    },
    "004031f2": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004031f2(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint hResData;\n    \n    ppiVar1 = param_1 + 0x10;\n    iVar2 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(0, 1, ppiVar1);\n    if ((((-1 < iVar2) &&\n         (iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceExW)(*(param_1 + 0xc), 10, 0x4aeecc, 0),  iVar2 != 0)) &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(*(param_1 + 0xc), iVar2),  iVar3 != 0)) &&\n       ((iVar2 = (*_sym.imp.KERNEL32.dll_SizeofResource)(*(param_1 + 0xc), iVar2),  iVar2 != 0 &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar3),  iVar3 != 0)))) {\n        (**(**ppiVar1 + 0x10))(*ppiVar1, iVar3, iVar2, 0);\n        (**(**ppiVar1 + 0x14))(*ppiVar1, 0, 0, 0, 0);\n        *(param_1 + 0x14) = 1;\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "0044ed1a": {
        "rules": [
            "set current directory"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ed1a(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    iVar1 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(**(iVar1 + 8));\n    if (iVar1 == 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "004479f8": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004479f8(uint param_1)\n\n{\n    uint hwndOwner;\n    \n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, param_1, 0, 0, &hwndOwner);\n    fcn.00407e53(&hwndOwner);\n    return;\n}\n",
        "token_count": 69
    },
    "0044d009": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d009(uint arg_8h)\n\n{\n    uint lpBuffer;\n    \n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &lpBuffer);\n    (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(&lpBuffer, 0x4b3978, 0, arg_8h);\n    return;\n}\n",
        "token_count": 84
    },
    "004573bf": {
        "rules": [
            "query environment variable"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004573bf(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    ushort *var_8h;\n    \n    arg_8h_00 = fcn.0042010a(0x10000);\n    fcn.00404bce(arg_8h_00);\n    *var_8h = 0;\n    iVar1 = **(arg_8h + 4);\n    fcn.004084a6();\n    (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(**(iVar1 + 8), var_8h, 0x7fff);\n    fcn.0044a6be(&var_8h);\n    fcn.00404fd2();\n    return 0;\n}\n",
        "token_count": 179
    },
    "00428b3a": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428b3a(uint arg_8h)\n\n{\n    if ((*0x4c2428 ^ *0x4badc0) != NULL) {\n        (*(*0x4c2428 ^ *0x4badc0))();\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    return;\n}\n",
        "token_count": 87
    },
    "00456f7d": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456f7d(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    uint in_ECX;\n    uint var_8h;\n    \n    arg_8h = fcn.0042010a(0x10000);\n    fcn.00404bce(arg_8h);\n    (*_sym.imp.USER32.dll_GetWindowTextW)(*0x4c10e8, in_ECX, 0x7fff);\n    fcn.0040ca8e(in_ECX);\n    fcn.00404fd2();\n    return 0;\n}\n",
        "token_count": 134
    },
    "00448245": {
        "rules": [
            "delete directory"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00448245(uint param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_22ch;\n    uint lpFileOp;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    ushort var_10h;\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    \n    fcn.004031b8();\n    uVar1 = fcn.00447c0c();\n    if (uVar1 != '\\0') {\n        if (param_2 == '\\0') {\n            uVar1 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)();\n            uVar1 = uVar1 & 0xffffff00 | uVar1 != 0;\n        }\n        else {\n            iVar2 = fcn.004218fb(&var_22ch);\n            *(&var_22ch + iVar2 * 2 + 2) = 0;\n            var_18h = &var_22ch;\n            var_14h = 0;\n            var_ah = 0;\n            var_6h = 0;\n            var_eh = 0;\n            lpFileOp = 0;\n            var_10h = 0x614;\n            var_1ch = 3;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHFileOperationW)(&lpFileOp);\n            uVar1 = -iVar2 & 0xffffff00U | 1 - (iVar2 != 0);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 357
    },
    "004482d0": {
        "rules": [
            "shutdown system"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004482d0(uint32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    uint extraout_ECX;\n    uint uVar2;\n    uint var_10h;\n    \n    fcn.00446937(L\"SeShutdownPrivilege\");\n    cVar1 = fcn.0043bec3(extraout_ECX);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (param_1 == 0x20) {\n            uVar2 = 1;\n        }\n        else {\n            if (param_1 != 0x40) {\n                if ((param_1 & 0xb) == 0) {\n                    uVar2 = (*_sym.imp.USER32.dll_ExitWindowsEx)(param_1, 0);\n                }\n                else {\n                    uVar2 = (*_sym.imp.ADVAPI32.dll_InitiateSystemShutdownExW)\n                                      (0, 0, 0, (param_1 & 0x14) != 0, (param_1 & 2) != 0, param_2);\n                }\n                goto code_r0x00448347;\n            }\n            uVar2 = 0;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_SetSystemPowerState)(uVar2, 0);\n    }\ncode_r0x00448347:\n    fcn.0043b8b0();\n    return uVar2;\n}\n",
        "token_count": 328
    },
    "00450878": {
        "rules": [
            "empty the recycle bin"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00450878(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = 0;\n    if (*(arg_8h + 8) != 0) {\n        iVar2 = **(arg_8h + 4);\n        fcn.004084a6();\n        uVar1 = **(iVar2 + 8);\n    }\n    iVar2 = (*_sym.imp.SHELL32.dll_SHEmptyRecycleBinW)(0, uVar1, 7);\n    if (iVar2 != 0) {\n        fcn.00412570();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 174
    },
    "00451195": {
        "rules": [
            "read .ini file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451195(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_18h;\n    uint var_8h;\n    \n    fcn.0040d3d2();\n    uVar3 = fcn.0042010a(0x1fffe);\n    fcn.00404bce(uVar3);\n    fcn.004084a6();\n    fcn.004478ad();\n    iVar1 = *(*(arg_8h + 4) + 0xc);\n    fcn.004084a6();\n    uVar3 = **(iVar1 + 8);\n    iVar1 = *(*(arg_8h + 4) + 8);\n    fcn.004084a6();\n    uVar2 = **(iVar1 + 8);\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.004084a6();\n    (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)(**(iVar1 + 8), uVar2, uVar3, var_8h, 0xffff, var_18h);\n    fcn.0040ca8e(var_8h);\n    fcn.00404fd2();\n    fcn.00405cd3();\n    return 0;\n}\n",
        "token_count": 306
    }
}