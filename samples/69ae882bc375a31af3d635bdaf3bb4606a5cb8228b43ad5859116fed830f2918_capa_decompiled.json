{
    "00413004": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00413084) overlaps instruction at (ram,0x00413082)\n// \n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __fastcall fcn.00413004(int32_t *param_1, int32_t *param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint16_t uVar5;\n    char *pcVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t extraout_ECX;\n    int32_t iVar10;\n    uint32_t uVar11;\n    int16_t *piVar12;\n    char unaff_BL;\n    int32_t unaff_EBP;\n    uint *puVar13;\n    uint *puVar14;\n    uint16_t in_CS;\n    bool bVar15;\n    float10 extraout_ST0;\n    ulong uVar16;\n    int32_t var_24h;\n    uint uStack28;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_1h;\n    \n    while( true ) {\n        uVar9 = param_1 + 1;\n        uVar5 = CONCAT11((uVar9 >> 8) + unaff_BL + (param_2 < param_1), uVar9);\n        pcVar6 = uVar9 & 0xffff0000 | uVar5 / *0x5e8b0001 & 0xff | uVar5 % *0x5e8b0001 << 8;\n        puVar13 = param_2 + 3;\n        while( true ) {\n            pcVar6[-1] = unaff_BL;\n            unaff_BL = pcVar6[param_2 - param_1];\n            *pcVar6 = unaff_BL;\n            *0x4 = *0x4 + 1;\n            puVar14 = puVar13 + 1;\n            pcVar6 = ((pcVar6 | 0x1e8a01ff) & 0xffffff00 | (pcVar6 | 0x1e8a01ff) - 1) + 4;\n            var_24h = var_24h + -1;\n            if (var_24h == 0) break;\n            unaff_BL = *(puVar13 + 1);\n            puVar13 = puVar14;\n        }\n        puVar7 = pcVar6 ^ 0x4230518d;\n        out(*puVar14, 4);\n        var_10h = (var_10h - 1) - puVar7;\n        uVar16 = func_0x4e4d77f6();\n        piVar12 = uVar16 >> 0x20;\n        uVar4 = in(0xe4);\n        uVar9 = uVar16 & 0xffffff00 | uVar4;\n        uVar8 = uVar9 + 0x267d8bdc;\n        bVar15 = uVar8 == 0;\n        iVar10 = extraout_ECX - 1;\n        if (iVar10 != 0 && !bVar15) {\n            uVar9 = puVar7 & puVar13;\n            while (uVar9 < 1) {\n                piVar12 = piVar12 & 0xffff0000 | CONCAT11(0xdb, piVar12);\n            }\n            *(unaff_EBP + -1) = piVar12;\n            uVar4 = *(extraout_ECX + 0x8afa4d0a);\n            *iVar10 = iVar10;\n            out(0x66, CONCAT31(uVar9 >> 8, uVar9 + -0x7d));\n    // WARNING: Could not recover jumptable at 0x004130bb. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar9 = (**(piVar12 & 0xffffff00 | uVar4))();\n            return uVar9;\n        }\n        if (0xd9827423 < uVar9 || bVar15) break;\n        uVar5 = CONCAT11(0xff, uVar16 >> 0x20);\n        param_2 = piVar12 & 0xffff0000 | uVar5;\n        param_1 = extraout_ECX - 2;\n        if (param_1 == NULL || bVar15) {\n            if (SCARRY4(uVar9, 0x267d8bdc)) {\n                in(uVar5);\n    // WARNING: Could not recover jumptable at 0x0041308d. Too many branches\n    // WARNING: Treating indirect jump as call\n                uVar9 = (**(*param_1 + 0x66))();\n                return uVar9;\n            }\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    puVar1 = uVar8 + iVar10 * 4;\n    *puVar1 = *puVar1 << 6 | *puVar1 >> 2;\n    *(extraout_ECX - 0x22) = *(extraout_ECX - 0x22) + (uVar16 >> 0x28) + ((*puVar1 & 1) != 0);\n    *puVar7 = iVar10;\n    while (bVar15 = SCARRY4(puVar7, 2),  puVar7 = puVar7 + 2,  bVar15 == puVar7 < 0) {\n        piVar2 = (uVar8 | 0x31) + 0x4c6830f + iVar10 * 4;\n        *piVar2 = *piVar2 + 1;\n    }\n    uVar8 = uVar8 & 0xffffff00 | (uVar8 | 0x31) - 0xf;\n    *(puVar13 + 3) = '\\0';\n    cVar3 = *(puVar13 + 3);\n    LOCK();\n    *piVar12 = ROUND(extraout_ST0);\n    uVar9 = extraout_ECX;\n    if ('\\0' < cVar3) {\n        return uVar8;\n    }\n    do {\n        puVar13 = uVar8 & 0xffffff00 | uVar8 | *puVar14;\n        FastExitMediaState();\n        uVar8 = puVar14 + *0x84fffb0e;\n        uVar11 = uVar9 - 1;\n        if (uVar11 == 0 || uVar8 != 0) {\n            uVar8 = uVar8 + 0x888070e;\n            if (uVar11 == 1 || uVar8 != 0) {\n                return uVar8;\n            }\n        }\n        else {\n            puVar13 = ~puVar13;\n            if (SCARRY4(puVar14, *0x84fffb0e) != uVar8 < 0) {\n                uVar9 = *(puVar13 + 0x29);\n                *(puVar13 + 0x29) = CONCAT14(uVar8 < 0x8b173956, uVar9) >> 0x10 | uVar9 << 0x11;\n                return var_10h & 0xffff0000 | CONCAT11(var_10h >> 8 & uStack28 >> 8, var_10h);\n            }\n            *(uVar8 + 0x90d500b) = *(uVar8 + 0x90d500b) | uVar11;\n        }\n        uVar8 = uVar8 - 1 | 0x202488a;\n        uVar9 = uVar9 & 0xffff0000 | in_CS;\n        puVar14 = puVar13;\n    } while( true );\n}\n",
        "token_count": 1734
    },
    "null": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid entry0(void)\n\n{\n    char cVar1;\n    uchar uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t *piVar13;\n    uint32_t unaff_EBP;\n    uint32_t *puVar14;\n    uint *puVar15;\n    int32_t *piVar16;\n    int32_t *piVar17;\n    bool bVar18;\n    bool bVar19;\n    bool bVar20;\n    uchar auStack160 [88];\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t *piStack36;\n    \n    puVar14 = 0x413000;\n    puVar15 = 0x401000;\n    do {\n        uVar11 = *puVar14;\n        bVar18 = puVar14 < 0xfffffffc;\n        puVar14 = puVar14 + 1;\n        bVar19 = CARRY4(uVar11, uVar11) || CARRY4(uVar11 * 2, bVar18);\n        uVar11 = uVar11 * 2 + bVar18;\n        do {\n            if (bVar19) {\n                uVar2 = *puVar14;\n                puVar14 = puVar14 + 1;\n                *puVar15 = uVar2;\n                puVar15 = puVar15 + 1;\n            }\n            else {\n                uVar6 = 1;\n                do {\n                    do {\n                        bVar18 = CARRY4(uVar11, uVar11);\n                        uVar12 = uVar11 * 2;\n                        if (uVar12 == 0) {\n                            uVar11 = *puVar14;\n                            bVar19 = puVar14 < 0xfffffffc;\n                            puVar14 = puVar14 + 1;\n                            bVar18 = CARRY4(uVar11, uVar11) || CARRY4(uVar11 * 2, bVar19);\n                            uVar12 = uVar11 * 2 + bVar19;\n                        }\n                        uVar6 = uVar6 * 2 + bVar18;\n                        uVar11 = uVar12 * 2;\n                    } while (!CARRY4(uVar12, uVar12));\n                    if (uVar11 != 0) break;\n                    uVar12 = *puVar14;\n                    bVar18 = puVar14 < 0xfffffffc;\n                    puVar14 = puVar14 + 1;\n                    uVar11 = uVar12 * 2 + bVar18;\n                } while (!CARRY4(uVar12, uVar12) && !CARRY4(uVar12 * 2, bVar18));\n                if (2 < uVar6) {\n                    uVar2 = *puVar14;\n                    puVar14 = puVar14 + 1;\n                    unaff_EBP = CONCAT31(uVar6 + -3, uVar2) ^ 0xffffffff;\n                    if (unaff_EBP == 0) {\n                        puVar14 = 0x401000;\n                        iVar8 = 0x7a7;\n                        goto code_r0x0041cd82;\n                    }\n                }\n                bVar18 = CARRY4(uVar11, uVar11);\n                uVar11 = uVar11 * 2;\n                if (uVar11 == 0) {\n                    uVar11 = *puVar14;\n                    bVar19 = puVar14 < 0xfffffffc;\n                    puVar14 = puVar14 + 1;\n                    bVar18 = CARRY4(uVar11, uVar11) || CARRY4(uVar11 * 2, bVar19);\n                    uVar11 = uVar11 * 2 + bVar19;\n                }\n                bVar19 = CARRY4(uVar11, uVar11);\n                uVar11 = uVar11 * 2;\n                if (uVar11 == 0) {\n                    uVar11 = *puVar14;\n                    bVar20 = puVar14 < 0xfffffffc;\n                    puVar14 = puVar14 + 1;\n                    bVar19 = CARRY4(uVar11, uVar11) || CARRY4(uVar11 * 2, bVar20);\n                    uVar11 = uVar11 * 2 + bVar20;\n                }\n                iVar8 = bVar18 * 2 + bVar19;\n                if (iVar8 == 0) {\n                    iVar8 = 1;\n                    do {\n                        do {\n                            bVar18 = CARRY4(uVar11, uVar11);\n                            uVar6 = uVar11 * 2;\n                            if (uVar6 == 0) {\n                                uVar11 = *puVar14;\n                                bVar19 = puVar14 < 0xfffffffc;\n                                puVar14 = puVar14 + 1;\n                                bVar18 = CARRY4(uVar11, uVar11) || CARRY4(uVar11 * 2, bVar19);\n                                uVar6 = uVar11 * 2 + bVar19;\n                            }\n                            iVar8 = iVar8 * 2 + bVar18;\n                            uVar11 = uVar6 * 2;\n                        } while (!CARRY4(uVar6, uVar6));\n                        if (uVar11 != 0) break;\n                        uVar6 = *puVar14;\n                        bVar18 = puVar14 < 0xfffffffc;\n                        puVar14 = puVar14 + 1;\n                        uVar11 = uVar6 * 2 + bVar18;\n                    } while (!CARRY4(uVar6, uVar6) && !CARRY4(uVar6 * 2, bVar18));\n                    iVar8 = iVar8 + 2;\n                }\n                uVar6 = iVar8 + 1 + (unaff_EBP < 0xfffff300);\n                puVar10 = puVar15 + unaff_EBP;\n                if (unaff_EBP < 0xfffffffd) {\n                    do {\n                        uVar7 = *puVar10;\n                        puVar10 = puVar10 + 1;\n                        *puVar15 = uVar7;\n                        puVar15 = puVar15 + 1;\n                        bVar18 = 3 < uVar6;\n                        uVar6 = uVar6 - 4;\n                    } while (bVar18 && uVar6 != 0);\n                    puVar15 = puVar15 + uVar6;\n                }\n                else {\n                    do {\n                        uVar2 = *puVar10;\n                        puVar10 = puVar10 + 1;\n                        *puVar15 = uVar2;\n                        puVar15 = puVar15 + 1;\n                        uVar6 = uVar6 - 1;\n                    } while (uVar6 != 0);\n                }\n            }\n            bVar19 = CARRY4(uVar11, uVar11);\n            uVar11 = uVar11 * 2;\n        } while (uVar11 != 0);\n    } while( true );\n    do {\n        for (; (1 < cVar3 + 0x18U || (*puVar14 != '\\x05')); puVar14 = puVar14 + 1) {\ncode_r0x0041cd82:\n            cVar3 = *puVar14;\n        }\n        uVar11 = *puVar14;\n        cVar3 = *(puVar14 + 1);\n        *puVar14 = (((CONCAT21(uVar11 >> 8, uVar11 >> 0x10) & 0xffff) << 8 | uVar11 >> 0x18) - puVar14) + 0x401000;\n        puVar14 = puVar14 + 5;\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    piVar17 = 0x41a000;\n    do {\n        if (*piVar17 == 0) {\ncode_r0x0041cdf6:\n            piVar13 = 0x400ffc;\n            piVar17 = piVar17 + 1;\n            while( true ) {\n                pcVar5 = _sym.imp.KERNEL32.DLL_VirtualProtect;\n                uVar4 = *piVar17;\n                piStack36 = uVar4;\n                piVar9 = piVar17 + 1;\n                if (piStack36 == NULL) break;\n                if (0xef < uVar4) {\n                    piStack36 = CONCAT12(uVar4, *piVar9) & 0xff0fffff;\n                    piVar9 = piVar17 + 3;\n                }\n                piVar13 = piVar13 + piStack36;\n                iVar8 = *piVar13;\n                uVar11 = CONCAT21(iVar8 >> 0x10, iVar8) << 8;\n                *piVar13 = (CONCAT21(uVar11 | iVar8 >> 8 & 0xff, uVar11 >> 0x10) << 8 | uVar11 >> 0x18) + 0x401000;\n                piVar17 = piVar9;\n            }\n            uStack68 = 0x400000;\n            puStack40 = &stack0xffffffdc;\n            uStack44 = 4;\n            uStack48 = 0x1000;\n            puStack56 = 0x41ce40;\n            uStack52 = uStack68;\n            (*_sym.imp.KERNEL32.DLL_VirtualProtect)();\n            *0x400207 = *0x400207 & 0x7f;\n            *0x40022f = *0x40022f & 0x7f;\n            uStack60 = uStack52;\n            uStack64 = 0x1000;\n            uStack72 = 0x41ce55;\n            puStack56 = &stack0xffffffcc;\n            (*pcVar5)();\n            do {\n            } while (&stack0xffffffe0 != &stack0xffffff60);\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        piStack36 = *piVar17 + 0x41d000;\n        piVar13 = piVar17[1] + 0x401000;\n        piVar17 = piVar17 + 2;\n        puStack40 = 0x41cdd0;\n        uVar7 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)();\n        while( true ) {\n            cVar3 = *piVar17;\n            piStack36 = piVar17 + 1;\n            piVar17 = piStack36;\n            if (cVar3 == '\\0') break;\n            piVar9 = piStack36;\n            piVar16 = piStack36;\n            do {\n                piVar17 = piVar16;\n                if (piVar9 == NULL) break;\n                piVar9 = piVar9 + -1;\n                piVar17 = piVar16 + 1;\n                cVar1 = *piVar16;\n                piVar16 = piVar17;\n            } while (cVar3 + -1 != cVar1);\n            uStack44 = 0x41cde5;\n            puStack40 = uVar7;\n            iVar8 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)();\n            if (iVar8 == 0) {\n                piStack36 = 0x41cdf6;\n                (*_sym.imp.KERNEL32.DLL_ExitProcess)();\n                goto code_r0x0041cdf6;\n            }\n            *piVar13 = iVar8;\n            piVar13 = piVar13 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 2629
    }
}