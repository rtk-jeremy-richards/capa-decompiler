{
    "00401384": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.00401384(void)\n\n{\n    ushort uVar1;\n    uchar auStack72 [40];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    sub.kernel32.dll_GetStartupInfoA(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00401d28": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00401d28(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(in_EAX + -4);\n    if ((uVar1 & 0x80000002) != 0x80000002) {\n        *0x47d5c0 = 4;\n    }\n    uVar3 = uVar1 & 0x7ffffffc;\n    puVar2 = in_EAX - uVar3;\n    if (((uVar1 ^ *puVar2) & 0xfffffffe) != 0) {\n        *0x47d5c0 = 5;\n    }\n    if ((*puVar2 & 1) != 0) {\n        uVar1 = puVar2[-1];\n        if (uVar1 != *(puVar2 + (8 - uVar1))) {\n            *0x47d5c0 = 6;\n        }\n        fcn.00401c18();\n        uVar3 = uVar3 + uVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 258
    },
    "004022f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.004022f0(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    *0x47d5c0 = 0;\n    if (*0x47d5bc == '\\0') {\n        puStack24 = 0x40230e;\n        cVar2 = fcn.00401a74();\n        if (cVar2 == '\\0') {\n            *0x47d5c0 = 8;\n            return 8;\n        }\n    }\n    uStack28 = 0x402482;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x47d049 != '\\0') {\n        uStack36 = 0x47d5c4;\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    puVar5 = in_EAX + -4;\n    uVar4 = *puVar5;\n    if ((uVar4 & 2) == 0) {\n        *0x47d5c0 = 9;\n        goto code_r0x00402459;\n    }\n    *0x47d5b0 = *0x47d5b0 + -1;\n    *0x47d5b4 = *0x47d5b4 - ((uVar4 & 0x7ffffffc) - 4);\n    if ((uVar4 & 1) != 0) {\n        uVar1 = *(in_EAX + -8);\n        if ((uVar1 < 0xc) || ((uVar1 & 0x80000003) != 0)) {\n            *0x47d5c0 = 10;\n            goto code_r0x00402459;\n        }\n        puVar5 = puVar5 - uVar1;\n        if (uVar1 != puVar5[2]) {\n            *0x47d5c0 = 10;\n            goto code_r0x00402459;\n        }\n        uVar4 = uVar4 + uVar1;\n        fcn.00401c18();\n    }\n    uVar4 = uVar4 & 0x7ffffffc;\n    puVar5 = puVar5 + uVar4;\n    if (puVar5 == *0x47d618) {\n        *0x47d618 = *0x47d618 - uVar4;\n        *0x47d614 = *0x47d614 + uVar4;\n        if (0x3c00 < *0x47d614) {\n            fcn.00401f08();\n        }\n        fcn.00403d90();\n        return 0;\n    }\n    if ((*puVar5 & 2) == 0) {\n        if (((puVar5[1] == 0) || (*puVar5 == 0)) || (puVar5[2] < 0xc)) {\n            *0x47d5c0 = 0xb;\n            goto code_r0x00402459;\n        }\n        fcn.00401c18();\n    }\n    else {\n        if ((*puVar5 & 0x7ffffffc) < 4) {\n            *0x47d5c0 = 0xb;\n            goto code_r0x00402459;\n        }\n        *puVar5 = *puVar5 | 1;\n    }\n    fcn.00401e80();\ncode_r0x00402459:\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x402489;\n    if (*0x47d049 != '\\0') {\n        uStack32 = 0x47d5c4;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n    }\n    return uVar3;\n}\n",
        "token_count": 925
    },
    "004053a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004053a4(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        in_EAX = CONCAT44(param_2, in_EAX) / param_3;\n        param_2 = 0;\n    }\n    else {\n        bVar6 = param_2 < 0;\n        if (bVar6) {\n            bVar4 = in_EAX != 0;\n            in_EAX = -in_EAX;\n            param_2 = -bVar4 - param_2;\n        }\n        if (param_4 < 0) {\n            bVar4 = param_3 != 0;\n            param_3 = -param_3;\n            param_4 = -bVar4 - param_4;\n            bVar6 = !bVar6;\n        }\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        if (bVar6) {\n            bVar6 = in_EAX != 0;\n            in_EAX = -in_EAX;\n            param_2 = -bVar6 - param_2;\n        }\n    }\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 561
    },
    "0040546c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040546c(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        uVar2 = CONCAT44(param_2, in_EAX) % param_3;\n        uVar3 = 0;\n    }\n    else {\n        bVar6 = param_2 < 0;\n        if (bVar6) {\n            bVar4 = in_EAX != 0;\n            in_EAX = -in_EAX;\n            param_2 = -bVar4 - param_2;\n        }\n        if (param_4 < 0) {\n            bVar4 = param_3 != 0;\n            param_3 = -param_3;\n            param_4 = -bVar4 - param_4;\n        }\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        if (bVar6) {\n            bVar6 = uVar2 != 0;\n            uVar2 = -uVar2;\n            uVar3 = -bVar6 - uVar3;\n        }\n    }\n    return CONCAT44(uVar3, uVar2);\n}\n",
        "token_count": 551
    },
    "00410188": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: vt\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00410188(uint16_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t in_EDX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint rgsabound;\n    int32_t aiStack520 [127];\n    int32_t cDims;\n    uint vt;\n    \n    if (((in_EDX & 1) != 0) && (in_EDX < 0x80)) {\n        cVar1 = fcn.00410358();\n        if (cVar1 != '\\0') goto code_r0x004101b9;\n    }\n    fcn.00402884();\ncode_r0x004101b9:\n    iVar3 = in_EDX + 1 >> 1;\n    if (iVar3 < 0) {\n        iVar3 = iVar3 + ((in_EDX + 1 & 1) != 0);\n    }\n    cDims = iVar3;\n    if (-1 < iVar3 + -1) {\n        piVar2 = &rgsabound;\n        do {\n            piVar2[1] = *in_EAX;\n            *piVar2 = (in_EAX[1] - piVar2[1]) + 1;\n            in_EAX = in_EAX + 2;\n            piVar2 = piVar2 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = sub.oleaut32.dll_SafeArrayCreate(vt, cDims, &rgsabound);\n    if (iVar3 == 0) {\n        fcn.00402884();\n    }\n    fcn.0040d3ac();\n    *arg_8h = vt | 0x2000;\n    *(arg_8h + 4) = iVar3;\n    return;\n}\n",
        "token_count": 441
    },
    "00417580": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00417580(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX;\n    if ((*(in_EAX + 4) & 1) == 0) {\n        uVar1 = fcn.004175b0();\n    }\n    return uVar1 & 0xffffff00 | *(in_EAX + 5);\n}\n",
        "token_count": 94
    },
    "004175b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004175b0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 != *(in_EAX + 5)) || ((*(in_EAX + 4) & 1) == 0)) {\n        *(in_EAX + 4) = *(in_EAX + 4) | 1;\n        *(in_EAX + 5) = param_2;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0041935c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041935c(int32_t arg_8h)\n\n{\n    if (((*(arg_8h + -1) & 1) == 0) && (*(arg_8h + -8) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "00419630": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00419630(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack56 = &fcn.00419630::var_1h + 1;\n    uStack60 = 0x4197f5;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x419663;\n    (**(*in_EAX + 0x24))();\n    puStack68 = 0x41966e;\n    fcn.0041a828();\n    puStack68 = 0x419679;\n    fcn.0041a828();\n    iVar1 = in_EAX[0xb];\n    iVar2 = in_EAX[7];\n    uStack72 = 0x4197d3;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack68 = &fcn.00419630::var_1h + 1;\n    if (param_2 == NULL) {\n        if ((var_1h & 1) == 0) {\n            uStack84 = 0x4196ba;\n            puStack68 = &fcn.00419630::var_1h + 1;\n            fcn.004193dc(&fcn.00419630::var_1h + 1);\n        }\n        else {\n            uStack84 = 0x4196b1;\n            puStack68 = &fcn.00419630::var_1h + 1;\n            fcn.0041958c(&fcn.00419630::var_1h + 1);\n        }\n    }\n    if (param_2 != NULL) {\n        uStack84 = 0x419791;\n        uStack88 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa8;\n        *(param_2 + 7) = *(param_2 + 7) | 1;\n        if ((var_1h & 1) == 0) {\n            fcn.004194ec(&fcn.00419630::var_1h + 1);\n        }\n        if (param_2 == NULL) {\n            *in_FS_OFFSET = uStack88;\n            fcn.00403d90();\n            *in_FS_OFFSET = uStack76;\n            puStack68 = 0x4197fc;\n            uStack72 = 0x4197f4;\n            fcn.0040432c();\n            return;\n        }\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            in_EAX[7] = param_2;\n        }\n        *(param_2 + 7) = *(param_2 + 7) | 2;\n        (**(*param_2 + 0x14))();\n        *(param_2 + 7) = *(param_2 + 7) & 0xfffd;\n        if ((var_1h & 2) != 0) {\n            fcn.0040372c();\n        }\n        if (((var_1h & 1) == 0) && ((*(param_2 + 0x1d) & 2) == 0)) {\n            fcn.0041516c();\n        }\n        else {\n            iVar3 = fcn.00415324();\n            if (iVar3 < 0) {\n                fcn.0041516c();\n            }\n        }\n        *in_FS_OFFSET = uStack88;\n    }\n    *in_FS_OFFSET = uStack76;\n    in_EAX[0xb] = iVar1;\n    in_EAX[7] = iVar2;\n    return;\n}\n",
        "token_count": 983
    },
    "0041dcb4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041dcb4(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    while (*(in_EAX + 0x10) != 0) {\n        piVar1 = fcn.004153b0();\n        if (((*(piVar1 + 0x1d) & 1) == 0) && (*0x41dd08 != (*0x41dd08 & *(in_EAX + 0x1c)))) {\n            fcn.0041dbfc();\n        }\n        else {\n            fcn.0041dc7c();\n        }\n        (**(*piVar1 + -4))();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00420a50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00420a50(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    int32_t iStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    int32_t var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    uStack92 = 0x420bd9;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack100 = 0x420a8f;\n        fcn.0041fdd4();\n        uStack104 = 0x420bb1;\n        iStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_40h = *(var_4h + 0x14);\n            var_3ch = 0;\n            var_38h = 0;\n            var_34h = 0;\n            if ((*(var_4h + 0x19) & 1) == 0) {\n                var_30h = 400;\n            }\n            else {\n                var_30h = 700;\n            }\n            var_2ch._0_1_ = (*(var_4h + 0x19) & 2) != 0;\n            var_2ch._1_1_ = (*(var_4h + 0x19) & 4) != 0;\n            var_2ch._2_1_ = (*(var_4h + 0x19) & 8) != 0;\n            var_2ch._3_1_ = *(var_4h + 0x1a);\n            puStack100 = &stack0xfffffffc;\n            fcn.00404564();\n            iVar2 = fcn.0040856c();\n            if (iVar2 == 0) {\n                fcn.00404564();\n                fcn.00408c68();\n            }\n            else {\n                fcn.00404564();\n                fcn.00408c68();\n            }\n            var_26h = 0;\n            var_28h = 0;\n            var_27h = 0;\n            cVar1 = fcn.00420d34();\n            if (cVar1 == '\\x01') {\n                var_25h = 2;\n            }\n            else if (cVar1 == '\\x02') {\n                var_25h = 1;\n            }\n            else {\n                var_25h = 0;\n            }\n            puStack112 = &fcn.00420a50::var_40h;\n            uVar3 = sub.gdi32.dll_CreateFontIndirectA();\n            *(var_4h + 8) = uVar3;\n        }\n        *in_FS_OFFSET = puStack112;\n        uStack104 = 0x420bb8;\n        iStack108 = 0x420bb0;\n        fcn.0041fde0();\n        return;\n    }\n    *in_FS_OFFSET = iStack96;\n    puStack88 = 0x420be0;\n    uStack92 = 0x420bd8;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 912
    },
    "00421c70": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421c70(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    param_2 = ~*(in_EAX + 2) & param_2;\n    if (*0x421ce0 != param_2) {\n        if ((param_2 & 1) != 0) {\n            (**(*in_EAX + 0x14))();\n            if (in_EAX[1] == 0) {\n                fcn.0040b228();\n                fcn.00403ce4();\n            }\n        }\n        if ((param_2 & 2) != 0) {\n            fcn.00421d0c();\n        }\n        if ((param_2 & 4) != 0) {\n            fcn.00421d38();\n        }\n        if ((param_2 & 8) != 0) {\n            fcn.00421d68();\n        }\n        *(in_EAX + 2) = param_2 | *(in_EAX + 2);\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0042ee1c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ee1c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00403530();\n        *(in_EAX + 0x6c) = 0;\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) & 0xffff7fff;\n    }\n    else {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | 0x8000;\n        if (*(in_EAX + 0x6c) == 0) {\n            iVar1 = fcn.0040372c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x6c) = uVar2;\n        }\n        (**(**(in_EAX + 0x6c) + 0xc))();\n        iVar1 = *(in_EAX + 0x6c);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x431a6c;\n        fcn.0040372c();\n        fcn.0041db3c();\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "0042efbc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042efbc(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = *(in_EAX + 0x5b);\n    if (param_2 != cVar1) {\n        *(in_EAX + 0x5b) = param_2;\n        fcn.0042edfc();\n        if (((*(in_EAX + 7) & 1) == 0) &&\n           (((((*(in_EAX + 7) & 0x10) == 0 || (in_EAX[0xc] != 0)) && (param_2 != '\\x06')) && (cVar1 != '\\x06')))) {\n            if ((((cVar1 - 1U < 2 == param_2 - 3U < 2) && (cVar1 != '\\0')) && (cVar1 != '\\x05')) &&\n               ((param_2 != '\\0' && (param_2 != '\\x05')))) {\n                (**(*in_EAX + 0x84))(in_EAX[0x12], in_EAX[0x13]);\n            }\n            else {\n                fcn.0040372c();\n            }\n        }\n    }\n    fcn.0040372c();\n    return;\n}\n",
        "token_count": 294
    },
    "0042f064": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f064(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    cVar1 = fcn.004311e0();\n    if ((cVar1 != '\\0') &&\n       ((((in_EDX != in_EAX[0x10] || (in_ECX != in_EAX[0x11])) || (arg_ch != in_EAX[0x12])) || (arg_8h != in_EAX[0x13]))\n       )) {\n        fcn.0042fee0();\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        fcn.0042f0fc();\n        (**(*in_EAX + 0x7c))();\n        fcn.00430c4c(0);\n        fcn.0040372c();\n        if ((*(in_EAX + 7) & 1) == 0) {\n            fcn.0040372c();\n        }\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "0042f0fc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0042f0fc(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uStack16;\n    uint uStack12;\n    \n    if ((*(in_EAX + 0x62) == '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) {\n        uVar1 = *(in_EAX + 0x61);\n        if (*0x42f214 == uVar1) {\n            *(in_EAX + 0x90) = 0;\n            *(in_EAX + 0x94) = 0;\n        }\n        else {\n            if ((uVar1 & 4) == 0) {\n                iVar3 = *(in_EAX + 0x48) >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((*(in_EAX + 0x48) & 1) != 0);\n                }\n                *(in_EAX + 0x88) = iVar3 + *(in_EAX + 0x40);\n            }\n            else if ((uVar1 & 1) == 0) {\n                *(in_EAX + 0x88) = *(in_EAX + 0x40);\n            }\n            else {\n                *(in_EAX + 0x88) = *(in_EAX + 0x48);\n            }\n            if ((uVar1 & 8) == 0) {\n                iVar3 = *(in_EAX + 0x4c) >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((*(in_EAX + 0x4c) & 1) != 0);\n                }\n                *(in_EAX + 0x8c) = iVar3 + *(in_EAX + 0x44);\n            }\n            else if ((uVar1 & 2) == 0) {\n                *(in_EAX + 0x8c) = *(in_EAX + 0x44);\n            }\n            else {\n                *(in_EAX + 0x8c) = *(in_EAX + 0x4c);\n            }\n            iVar3 = *(in_EAX + 0x30);\n            if (iVar3 != 0) {\n                if ((*(iVar3 + 0x1c) & 2) == 0) {\n                    cVar2 = fcn.004363bc();\n                    if (cVar2 == '\\0') {\n                        *(in_EAX + 0x90) = *(*(in_EAX + 0x30) + 0x48);\n                        *(in_EAX + 0x94) = *(*(in_EAX + 0x30) + 0x4c);\n                    }\n                    else {\n                        (**(**(in_EAX + 0x30) + 0x44))();\n                        *(in_EAX + 0x90) = uStack16;\n                        *(in_EAX + 0x94) = uStack12;\n                    }\n                }\n                else if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n                    *(in_EAX + 0x90) = *(iVar3 + 0x1fa);\n                    *(in_EAX + 0x94) = *(iVar3 + 0x1fe);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 765
    },
    "0042f410": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f410(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x150) = 1;\n    }\n    *(in_EAX + 0x158) = param_2;\n    return;\n}\n",
        "token_count": 91
    },
    "0042f424": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0042f424(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x150) = 0;\n    }\n    fcn.0040435c();\n    return;\n}\n",
        "token_count": 74
    },
    "0042f6b4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f6b4(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    int32_t in_stack_ffffffd4;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    \n    if (param_2 != param_1) {\n        uVar1 = *0x42f858;\n        if ((*(in_EAX + 7) & 1) != 0) {\n            uVar1 = *(in_EAX + 0x26);\n        }\n        if ((uVar1 & 1) != 0) {\n            in_stack_ffffffd4 = in_EAX[0x10];\n            in_stack_ffffffdc = param_1;\n            sub.kernel32.dll_MulDiv(in_stack_ffffffd4, param_2, param_1);\n        }\n        if ((uVar1 & 2) != 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n        }\n        if (((uVar1 & 4) == 0) || ((*(in_EAX + 0x51) & 1) != 0)) {\n            in_stack_ffffffdc = in_EAX[0x12];\n        }\n        else if ((uVar1 & 1) == 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        else {\n            sub.kernel32.dll_MulDiv(in_EAX[0x10] + in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        bVar4 = (uVar1 & 8) == 0;\n        if ((bVar4) || ((*(in_EAX + 0x51) & 2) != 0)) {\n            iStack32 = in_EAX[0x13];\n        }\n        else {\n            iStack32 = param_1;\n            if (bVar4) {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n            }\n            else {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11] + in_EAX[0x13], param_2, in_stack_ffffffd4);\n            }\n        }\n        (**(*in_EAX + 0x84))(iStack32, in_stack_ffffffdc);\n        if (*0x42f860 != (uVar1 & *0x42f85c)) {\n            iVar2 = sub.kernel32.dll_MulDiv(in_EAX[0x24], param_2, iStack32);\n            in_EAX[0x24] = iVar2;\n        }\n        if (*0x42f860 != (uVar1 & *0x42f864)) {\n            iVar2 = sub.kernel32.dll_MulDiv(in_EAX[0x25], param_2, iStack32);\n            in_EAX[0x25] = iVar2;\n        }\n        if ((*(in_EAX + 0x59) == '\\0') && ((uVar1 & 0x10) != 0)) {\n            uVar3 = fcn.00420cc0(param_2, iStack32);\n            sub.kernel32.dll_MulDiv(uVar3);\n            fcn.00420cdc();\n        }\n    }\n    *(in_EAX + 0x26) = *0x42f860;\n    return;\n}\n",
        "token_count": 807
    },
    "0042f880": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0042f880(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar *puVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42f916;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar3 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x50) & 0x20) != 0) && (uVar5 = (*(in_EAX + 0x1c) & 1) == 0,  puVar3 = &stack0xfffffffc,  uVar5)) {\n        fcn.0042fa98();\n        fcn.00404704();\n        puVar3 = puStack28;\n        if (uVar5) {\n            iVar1 = *(in_EAX + 4);\n            if (iVar1 != 0) {\n                cVar4 = fcn.004036bc();\n                if ((cVar4 != '\\0') && (puVar3 = puStack28,  (*(iVar1 + 0x1c) & 1) != 0)) goto code_r0x0042f8e2;\n            }\n            bVar2 = true;\n            goto code_r0x0042f8e8;\n        }\n    }\ncode_r0x0042f8e2:\n    puStack28 = puVar3;\n    bVar2 = false;\ncode_r0x0042f8e8:\n    fcn.0041dfc4();\n    if (bVar2) {\n        fcn.0042fac8();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42f91d;\n    uStack32 = 0x42f915;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 473
    },
    "00430140": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00430140(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint arg_8h;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    cVar1 = fcn.004036bc();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x9b) != '\\x01')) {\n        fcn.0040b228();\n        fcn.00403ce4();\n    }\n    fcn.00430c80();\n    if ((*0x47db8c == 0) || (*0x47db8c == -1)) {\n        *0x47db8c = 0;\n        if ((*(in_EAX + 0x54) & 1) != 0) {\n            sub.user32.dll_GetCursorPos(&uStack28);\n            fcn.0042f5ec();\n            uStack28 = uStack20;\n            arg_8h = fcn.0040728c(uStack24);\n            fcn.00430c4c(arg_8h);\n        }\n        if (*0x47db8c != -1) {\n            fcn.0042ddf8();\n        }\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00431584": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431584(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    if (*0x431630 == (*0x43162c & *(in_EAX + 7))) {\n        iVar1 = in_EAX[0x1d];\n        if ((*(iVar1 + 0xc) == 0) || (in_EAX[0x12] <= *(iVar1 + 0xc))) {\n            if ((*(iVar1 + 0x14) != 0) && (in_EAX[0x12] < *(iVar1 + 0x14))) {\n                *(iVar1 + 0x14) = in_EAX[0x12];\n            }\n        }\n        else {\n            *(iVar1 + 0xc) = in_EAX[0x12];\n        }\n        if ((*(iVar1 + 8) == 0) || (in_EAX[0x13] <= *(iVar1 + 8))) {\n            if ((*(iVar1 + 0x10) != 0) && (in_EAX[0x13] < *(iVar1 + 0x10))) {\n                *(iVar1 + 0x10) = in_EAX[0x13];\n            }\n        }\n        else {\n            *(iVar1 + 8) = in_EAX[0x13];\n        }\n        iVar1 = *(param_2 + 8);\n        if ((((iVar1 != 0) && (in_EAX[0x28] != 0)) && ((*(in_EAX + 0x55) & 4) == 0)) &&\n           ((((*(iVar1 + 0x18) & 1) == 0 && (*(iVar1 + 0x10) != 0)) && (*(iVar1 + 0x14) != 0)))) {\n            fcn.00430c80();\n        }\n    }\n    return;\n}\n",
        "token_count": 443
    },
    "00432320": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432320(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_ECX;\n    uint8_t in_DL;\n    int32_t iVar3;\n    uint32_t *in_FS_OFFSET;\n    uint *puStack92;\n    uint *puStack88;\n    uint *puStack84;\n    uint var_40h;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t nNumerator;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_5h;\n    \n    var_30h = *in_ECX;\n    uStack48 = in_ECX[1];\n    uStack44 = in_ECX[2];\n    uStack40 = in_ECX[3];\n    unique0x100001d7 = in_EAX;\n    if ((in_DL == 0) || (*(in_DL + 0x46f894) != *(in_EAX + 0x61))) {\n        if ((in_EAX[0x24] != 0) && (in_EAX[0x25] != 0)) {\n            var_ch = in_EAX[0x10];\n            var_10h = in_EAX[0x11];\n            var_14h = in_EAX[0x12];\n            var_18h = in_EAX[0x13];\n            puStack84 = 0x4323a4;\n            cVar2 = fcn.004363bc();\n            if (cVar2 == '\\0') {\n                puStack84 = 0x4323d8;\n                fcn.00413c30();\n            }\n            else {\n                puStack84 = 0x4323b6;\n                (**(*stack0xfffffff8[0xc] + 0x44))();\n                nNumerator = var_38h;\n                var_1ch = var_34h;\n            }\n            if ((*(stack0xfffffff8 + 0x61) & 4) == 0) {\n                if ((*(stack0xfffffff8 + 0x61) & 1) == 0) {\n                    puStack84 = stack0xfffffff8[0x24];\n                    puStack88 = nNumerator;\n                    puStack92 = stack0xfffffff8[0x22];\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar3 = var_14h >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar3;\n                }\n            }\n            else if ((*(stack0xfffffff8 + 0x61) & 1) == 0) {\n                var_ch = nNumerator - (stack0xfffffff8[0x24] - stack0xfffffff8[0x22]);\n            }\n            else {\n                var_14h = nNumerator - (stack0xfffffff8[0x24] - stack0xfffffff8[0x22]);\n            }\n            if ((*(stack0xfffffff8 + 0x61) & 8) == 0) {\n                if ((*(stack0xfffffff8 + 0x61) & 2) == 0) {\n                    puStack84 = stack0xfffffff8[0x25];\n                    puStack88 = var_1ch;\n                    puStack92 = stack0xfffffff8[0x23];\n                    var_10h = sub.kernel32.dll_MulDiv();\n                    iVar3 = var_18h >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((var_18h & 1) != 0);\n                    }\n                    var_10h = var_10h - iVar3;\n                }\n            }\n            else if ((*(stack0xfffffff8 + 0x61) & 2) == 0) {\n                var_10h = var_1ch - (stack0xfffffff8[0x25] - stack0xfffffff8[0x23]);\n            }\n            else {\n                var_18h = var_1ch - (stack0xfffffff8[0x25] - stack0xfffffff8[0x23]);\n            }\n            *(stack0xfffffff8 + 0x62) = 1;\n            puStack88 = 0x432519;\n            puStack92 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffa4;\n            puStack84 = &stack0xfffffffc;\n            (**(*stack0xfffffff8 + 0x84))(var_18h, var_14h);\n            *in_FS_OFFSET = var_18h;\n            *(stack0xfffffff8 + 0x62) = 0;\n            return;\n        }\n        if (in_DL == 0) {\n            return;\n        }\n    }\n    var_14h = *(*(arg_8h + -8) + 8) - **(arg_8h + -8);\n    if (((var_14h < 0) || (in_DL - 3 < 2)) || (in_DL == 6)) {\n        var_14h = in_EAX[0x12];\n    }\n    var_18h = *(*(arg_8h + -8) + 0xc) - *(*(arg_8h + -8) + 4);\n    if (((var_18h < 0) || (in_DL - 1 < 2)) || (in_DL == 6)) {\n        var_18h = in_EAX[0x13];\n    }\n    var_ch = **(arg_8h + -8);\n    var_10h = *(*(arg_8h + -8) + 4);\n    // switch table (7 cases) at 0x4325b6\n    switch(in_DL) {\n    case 1:\n        piVar1 = *(arg_8h + -8) + 4;\n        *piVar1 = *piVar1 + var_18h;\n        break;\n    case 2:\n        piVar1 = *(arg_8h + -8) + 0xc;\n        *piVar1 = *piVar1 - var_18h;\n        var_10h = *(*(arg_8h + -8) + 0xc);\n        break;\n    case 3:\n        **(arg_8h + -8) = **(arg_8h + -8) + var_14h;\n        break;\n    case 4:\n        piVar1 = *(arg_8h + -8) + 8;\n        *piVar1 = *piVar1 - var_14h;\n        var_ch = *(*(arg_8h + -8) + 8);\n        break;\n    case 6:\n        puStack84 = &fcn.00432320::var_10h;\n        puStack88 = &fcn.00432320::var_14h;\n        puStack92 = &fcn.00432320::var_18h;\n        (**(**(arg_8h + -4) + 0xa8))(&fcn.00432320::var_30h, *(arg_8h + -8));\n    }\n    *(stack0xfffffff8 + 0x62) = 1;\n    puStack88 = 0x43268f;\n    puStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0x84))(var_18h, var_14h);\n    *in_FS_OFFSET = var_18h;\n    *(stack0xfffffff8 + 0x62) = 0;\n    return;\n}\n",
        "token_count": 1783
    },
    "0043309c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043309c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x4331ba;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00402e14();\n    *param_2 = in_EAX[0x19];\n    param_2[1] = 0x44000000;\n    fcn.00433034();\n    if ((*(in_EAX + 0x14) & 1) != 0) {\n        param_2[1] = param_2[1] | 0x2000000;\n        param_2[2] = param_2[2] | 0x10000;\n    }\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            param_2[1] = param_2[1] | 0x8000000;\n        }\n    }\n    if (*(in_EAX + 0x69) != '\\0') {\n        param_2[1] = param_2[1] | 0x10000;\n    }\n    param_2[3] = in_EAX[0x10];\n    param_2[4] = in_EAX[0x11];\n    param_2[5] = in_EAX[0x12];\n    param_2[6] = in_EAX[0x13];\n    if (in_EAX[0xc] == 0) {\n        param_2[7] = in_EAX[100];\n    }\n    else {\n        iVar2 = fcn.004360b8();\n        param_2[7] = iVar2;\n    }\n    param_2[9] = 0xb;\n    param_2[10] = sub.user32.dll_DefWindowProcA;\n    uVar3 = 0;\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    param_2[0xf] = iVar2;\n    param_2[0x10] = 0;\n    param_2[0xd] = *0x47d714;\n    fcn.00403480();\n    fcn.00404564();\n    fcn.00408c68();\n    *in_FS_OFFSET = uVar3;\n    uStack288 = 0x4331c1;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 649
    },
    "004342e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004342e8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint var_6ch;\n    uint nWidth;\n    uint var_5ch;\n    uint nHeight;\n    uint var_4ch;\n    uint var_ch;\n    uint hgdiobj;\n    uint hdc;\n    \n    if ((*(in_EAX + 0x7e) != '\\0') && (*(param_2 + 4) == 0)) {\n        uStack128 = 0;\n        uStack132 = 0x434338;\n        uVar2 = sub.user32.dll_GetDC();\n        uStack132 = 0x434344;\n        (**(*in_EAX + 0x44))();\n        uStack136 = 0x434352;\n        (**(*in_EAX + 0x44))();\n        uStack144 = 0x43435c;\n        uStack140 = uVar2;\n        hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack148 = 0;\n        uStack152 = 0x434367;\n        uStack144 = uVar2;\n        sub.user32.dll_ReleaseDC();\n        uStack152 = 0;\n        uStack156 = 0x43436e;\n        uStack160 = sub.gdi32.dll_CreateCompatibleDC();\n        uStack156 = hgdiobj;\n        puStack164 = 0x43437e;\n        hdc = uStack160;\n        var_ch = sub.gdi32.dll_SelectObject();\n        uStack168 = 0x43443a;\n        uStack172 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff54;\n        puStack164 = &stack0xfffffffc;\n        uVar2 = fcn.004360b8(&fcn.004342e8::var_4ch);\n        uVar2 = sub.user32.dll_BeginPaint(uVar2);\n        fcn.00430c4c(hdc);\n        *(param_2 + 4) = hdc;\n        fcn.004342e8();\n        *(param_2 + 4) = 0;\n        (**(*in_EAX + 0x44))(hdc, 0, 0, 0xcc0020);\n        (**(*in_EAX + 0x44))(nHeight);\n        sub.gdi32.dll_BitBlt(uVar2, 0, 0, nWidth);\n        uVar2 = fcn.004360b8(&fcn.004342e8::var_4ch);\n        sub.user32.dll_EndPaint();\n        *in_FS_OFFSET = uVar2;\n        sub.gdi32.dll_SelectObject(hdc, var_ch, 0x434441);\n        sub.gdi32.dll_DeleteDC(hdc);\n        sub.gdi32.dll_DeleteObject(hgdiobj);\n        return;\n    }\n    if ((*(in_EAX + 0x55) & 1) == 0) {\n        uStack128 = 0x434311;\n        iVar1 = fcn.00432f40();\n        if (iVar1 == 0) {\n            uStack128 = 0x43431e;\n            (**(*in_EAX + -0x10))();\n            return;\n        }\n    }\n    uStack128 = 0x43432c;\n    fcn.00433e08();\n    return;\n}\n",
        "token_count": 826
    },
    "004346b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004346b8(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    \n    if ((*0x434704 == (*0x434700 & *(in_EAX + 7))) && (iVar2 = *(param_2 + 8),  (*(iVar2 + 0x18) & 1) == 0)) {\n        cVar3 = fcn.004311e0();\n        if (cVar3 == '\\0') {\n            puVar1 = iVar2 + 0x18;\n            *puVar1 = *puVar1 | 1;\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 182
    },
    "00434708": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00434708(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004363c8();\n    (**(*in_EAX + -0x10))();\n    fcn.00432ad0();\n    if ((*(in_EAX + 7) & 1) == 0) {\n        fcn.0040372c();\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0043518c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043518c(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    if ((*(in_EAX + 0x1a6) != '\\0') && (in_EAX = fcn.00432f40(),  piVar2 = in_EAX,  -1 < in_EAX + -1)) {\n        do {\n            piVar1 = fcn.00432f04();\n            in_EAX = piVar1;\n            if (((*(piVar1 + 0x57) != '\\0') && (in_EAX = (**(*piVar1 + 0x50))(),  in_EAX != '\\0')) &&\n               ((((*(piVar1 + 0x52) & 1) != 0 && (in_EAX = fcn.00430c4c(*(*(arg_8h + -4) + 8)),  in_EAX != NULL)) ||\n                ((in_EAX = fcn.004036bc(),  in_EAX != '\\0' && (in_EAX = fcn.0043518c(arg_8h),  in_EAX != '\\0')))))) {\n                var_5h = 1;\n                break;\n            }\n            piVar2 = piVar2 + -1;\n        } while (piVar2 != NULL);\n    }\n    return in_EAX & 0xffffff00 | var_5h;\n}\n",
        "token_count": 357
    },
    "00436ecc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436ecc(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint var_3ch;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_2;\n    if ((*(in_EAX + 0x165) == '\\0') && (in_EAX[0x5b] == 0)) {\n        uStack80 = 0x437144;\n        (**(*in_EAX + -0x10))();\n        return;\n    }\n    uStack80 = 0x436eff;\n    var_4h = in_EAX;\n    uStack80 = fcn.004360b8();\n    puStack84 = 0x436f05;\n    var_ch = sub.user32.dll_GetWindowDC();\n    uStack88 = 0x437132;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar3 = fcn.004360b8(&fcn.00436ecc::var_1ch);\n    sub.user32.dll_GetClientRect(uVar3);\n    uVar3 = fcn.004360b8(&fcn.00436ecc::var_2ch);\n    sub.user32.dll_GetWindowRect(uVar3);\n    uVar3 = fcn.004360b8(&fcn.00436ecc::var_2ch, 2);\n    sub.user32.dll_MapWindowPoints(0, uVar3);\n    sub.user32.dll_OffsetRect(&fcn.00436ecc::var_1ch, -var_2ch, -var_28h);\n    sub.gdi32.dll_ExcludeClipRect(var_ch, var_1ch, var_18h, var_14h, var_10h);\n    iVar2 = var_28h;\n    iVar1 = var_2ch;\n    sub.user32.dll_InflateRect(&fcn.00436ecc::var_1ch, var_4h[0x5b], var_4h[0x5b]);\n    var_2ch = var_1ch;\n    var_28h = var_18h;\n    var_24h = var_14h;\n    var_20h = var_10h;\n    if (*(var_4h + 0x165) != '\\0') {\n        iVar7 = 0;\n        if (*(var_4h + 0x163) != '\\0') {\n            iVar7 = var_4h[0x5a];\n        }\n        if (*(var_4h + 0x59) != '\\0') {\n            iVar7 = iVar7 + var_4h[0x5a];\n        }\n        uVar3 = fcn.004360b8(0xfffffff0);\n        uVar4 = sub.user32.dll_GetWindowLongA(uVar3);\n        if ((*(var_4h + 0x162) & 1) != 0) {\n            var_2ch = var_2ch - iVar7;\n        }\n        if ((*(var_4h + 0x162) & 2) != 0) {\n            var_28h = var_28h - iVar7;\n        }\n        if ((*(var_4h + 0x162) & 4) != 0) {\n            var_24h = var_24h + iVar7;\n        }\n        if ((uVar4 & 0x200000) != 0) {\n            iVar5 = (***0x47bf10)(0x14);\n            var_24h = var_24h + iVar5;\n        }\n        if ((*(var_4h + 0x162) & 8) != 0) {\n            var_20h = var_20h + iVar7;\n        }\n        if ((uVar4 & 0x100000) != 0) {\n            iVar7 = (***0x47bf10)(0x15);\n            var_20h = var_20h + iVar7;\n        }\n        sub.user32.dll_DrawEdge\n                  (var_ch, &fcn.00436ecc::var_2ch, \n                   *(*(var_4h + 0x163) * 4 + 0x46f958) | *(*(var_4h + 0x59) * 4 + 0x46f968), \n                   *(var_4h + 0x162) | *(*(var_4h + 0x165) * 4 + 0x46f978) | *(*(var_4h + 0x1a5) * 4 + 0x46f988) |\n                   0x2000);\n    }\n    sub.gdi32.dll_IntersectClipRect(var_ch, var_2ch, var_28h, var_24h, var_20h);\n    sub.user32.dll_OffsetRect(&fcn.00436ecc::var_2ch, -iVar1, -iVar2);\n    uVar6 = fcn.0042123c();\n    uVar3 = var_ch;\n    sub.user32.dll_FillRect(var_ch, &fcn.00436ecc::var_2ch, uVar6);\n    *in_FS_OFFSET = uVar3;\n    uVar3 = fcn.004360b8(var_ch, 0x437139);\n    sub.user32.dll_ReleaseDC(uVar3);\n    return;\n}\n",
        "token_count": 1354
    },
    "0043e6c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __fastcall fcn.0043e6c0(uint param_1, uint8_t param_2)\n\n{\n    int16_t in_AX;\n    int16_t iVar1;\n    uint var_3h;\n    \n    var_3h._2_1_ = in_AX >> 8;\n    iVar1 = 0;\n    if (var_3h._2_1_ == '\\0') {\n        if ((param_2 & 1) != 0) {\n            in_AX = in_AX + 0x2000;\n        }\n        if ((param_2 & 4) != 0) {\n            in_AX = in_AX + 0x4000;\n        }\n        iVar1 = in_AX;\n        if ((param_2 & 2) != 0) {\n            iVar1 = in_AX + -0x8000;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 222
    },
    "0043f8cc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f8cc(uint32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x440124;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar2 = &stack0xfffffffc;\n    if (*(lprc - 0x21) == '\\0') {\n        fcn.0042186c();\n        puVar2 = puStack24;\n    }\n    puStack24 = puVar2;\n    if (*(lprc - 0x2c) == 0) {\n        cVar3 = fcn.004036bc();\n        if (cVar3 == '\\0') {\n            *(lprc - 0x2d) = 0;\n        }\n        else {\n            *(lprc - 0x2d) = *(*(lprc - 0x2c) + 0x60);\n        }\n    }\n    else {\n        *(lprc - 0x2d) = 0;\n    }\n    *(lprc - 0x10) = *(lprc - 0x20) + 1;\n    iVar5 = *(lprc - 0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc - 0xc) = iVar5;\n    fcn.00404704();\n    if (bVar9) {\n        fcn.0042186c();\n        *(lprc - 0x10) = 0;\n        *(lprc - 8) = 0xfffffffc;\n        *(lprc - 0x35) = 0;\n    }\n    else {\n        if ((*(lprc - 0x3c) == 0) ||\n           (((iVar5 = *(*(lprc - 0x34) + 0x40),  iVar5 < 0 || (iVar6 = fcn.0043c8f0(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc - 0x34) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc - 0x34) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0'))))\n            )))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc - 0x3d) = uVar4;\n        if ((*(lprc - 0x3d) == '\\0') &&\n           ((piVar1 = *(*(lprc - 0x34) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0')))) {\n            if ((*(lprc - 0x3c) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc - 8) = *(lprc - 0x10);\n                *(lprc - 4) = *(lprc - 0xc);\n            }\n            else {\n                *(lprc - 8) = *(lprc - 0x10) + *(*(lprc - 0x3c) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x3c) + 0x30);\n            }\n            *(lprc - 0x35) = 0;\n        }\n        else {\n            *(lprc - 0x35) = 1;\n            if (*(lprc - 0x3d) == '\\0') {\n                *(lprc - 8) = *(lprc - 0x10) + 0x10;\n                *(lprc - 4) = *(lprc - 0xc) + 0x10;\n            }\n            else {\n                *(lprc - 8) = *(lprc - 0x10) + *(*(lprc - 0x3c) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x3c) + 0x30);\n            }\n            if (*(*(lprc - 0x34) + 0x38) != '\\0') {\n                *(lprc - 8) = *(lprc - 8) + 1;\n                *(lprc - 4) = *(lprc - 4) + 1;\n                uVar7 = fcn.00421200();\n                *(lprc - 0x44) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.00421200();\n                    *(lprc - 0x44) = uVar7;\n                    fcn.00426468();\n                    fcn.004211dc();\n                    fcn.0042186c();\n                }\n                else {\n                    fcn.00421208();\n                    fcn.0042186c();\n                }\n                fcn.00421208();\n                *(lprc - 0x10) = *(lprc - 0x10) + 1;\n                *(lprc - 0xc) = *(lprc - 0xc) + 1;\n            }\n            if (*(lprc - 0x3d) == '\\0') {\n                *(lprc - 0x58) = *(lprc - 0x10);\n                *(lprc - 0x54) = *(lprc - 0xc);\n                *(lprc - 0x50) = *(lprc - 8);\n                *(lprc - 0x4c) = *(lprc - 4);\n                iVar5 = (**(**(*(lprc - 0x34) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc - 8) - *(lprc - 0x10)) {\n                    iVar5 = (**(**(*(lprc - 0x34) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc - 8) - *(lprc - 0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0x10) = iVar5 + *(lprc - 0x10) + 1;\n                    iVar5 = (**(**(*(lprc - 0x34) + 0x4c) + 0x2c))();\n                    *(lprc - 8) = iVar5 + *(lprc - 0x10);\n                }\n                iVar5 = (**(**(*(lprc - 0x34) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc - 4) - *(lprc - 0xc)) {\n                    iVar5 = (**(**(*(lprc - 0x34) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0xc) = iVar5 + *(lprc - 0xc) + 1;\n                    iVar5 = (**(**(*(lprc - 0x34) + 0x4c) + 0x20))();\n                    *(lprc - 4) = iVar5 + *(lprc - 0xc);\n                }\n                fcn.0042197c();\n                *(lprc - 0x10) = *(lprc - 0x58);\n                *(lprc - 0xc) = *(lprc - 0x54);\n                *(lprc - 8) = *(lprc - 0x50);\n                *(lprc - 4) = *(lprc - 0x4c);\n            }\n            else {\n                iVar5 = *(*(lprc - 0x34) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.0043c8f0(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00424298();\n                    *(lprc - 0x48) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc - 0x48) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.00425460();\n                    *(lprc - 0x44) = *(*(*(lprc - 0x28) + 0xc) + 0x18);\n                    fcn.00420a3c();\n                    iVar5 = *(lprc - 0x48);\n                    iVar6 = (**(**(lprc - 0x48) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc - 0x48) + 0x2c))(iVar6 + *(lprc - 0xc) + 1);\n                    fcn.004217c0(iVar5);\n                    fcn.00420a3c();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00403530(0x43fdaf);\n                    return;\n                }\n                fcn.0043cbe0(*(lprc - 0x34) & 0xffffff00 | *(*(lprc - 0x34) + 0x39), *(*(lprc - 0x34) + 0x40), \n                             *(lprc - 0xc));\n            }\n            if (*(*(lprc - 0x34) + 0x38) != '\\0') {\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 4) = *(lprc - 4) + -1;\n            }\n        }\n    }\n    *(lprc - 0x10) = *(lprc - 0x10) + -1;\n    *(lprc - 0xc) = *(lprc - 0xc) + -1;\n    *(lprc - 8) = *(lprc - 8) + 2;\n    *(lprc - 4) = *(lprc - 4) + 2;\n    if ((*(*(lprc - 0x34) + 0x38) != '\\0') || ((*(lprc - 0x21) != '\\0' && (*(lprc - 0x35) != '\\0')))) {\n        uVar7 = fcn.00421b9c();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc - 0x21) != '\\0') {\n        if (*(lprc - 0x35) != '\\0') {\n            *(lprc - 0x20) = *(lprc - 8) + 1;\n        }\n        if ((*(lprc - 0x59) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.00421208();\n        }\n        fcn.0042186c();\n    }\n    if ((*(lprc + 8) != '\\0') && (*(lprc - 0x59) != '\\0')) {\n        if (*(lprc - 0x21) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00421b9c();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00421b9c();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc - 0x21) == '\\0') {\n            iStack32 = lprc - 0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc - 0x21) == '\\0') || (*(lprc - 0x35) == '\\0')) {\n        *(lprc - 0x20) = *(lprc - 8) + 1;\n    }\n    *(lprc - 0x20) = *(lprc - 0x20) + 2;\n    *(lprc - 0x18) = *(lprc - 0x18) + -1;\n    *(lprc - 0x60) = *(*(lprc - 0x2d) * 2 + 0x46faa8) | 0x60;\n    if ((*(lprc - 0x61) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc - 0x60) = *(lprc - 0x60) | 0x100000;\n    }\n    *(lprc - 0x58) = *(lprc - 0x20);\n    *(lprc - 0x54) = *(lprc - 0x1c);\n    *(lprc - 0x50) = *(lprc - 0x18);\n    *(lprc - 0x4c) = *(lprc - 0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.00420d08();\n    }\n    fcn.0043f67c(*(lprc - 0x60) | 0x500, lprc & 0xffffff00 | *(lprc - 0x21), lprc - 0x20);\n    uVar8 = (*(lprc - 0x4c) - *(lprc - 0x54)) - (*(lprc - 0x14) - *(lprc - 0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc - 0x20, 0, iVar5);\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x21) != '\\0')) && (*(lprc - 0x59) != '\\0')) {\n        sub.user32.dll_OffsetRect(lprc - 0x20, 1, 0);\n    }\n    fcn.0043f67c(*(lprc - 0x60), lprc & 0xffffff00 | *(lprc - 0x21), lprc - 0x20);\n    if ((*(*(lprc - 0x34) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        *(lprc - 0x20) = *(lprc - 0x18);\n        *(lprc - 0x18) = *(lprc - 0x50) + -10;\n        iVar5 = lprc - 0x20;\n        uVar8 = lprc & 0xffffff00 | *(lprc - 0x21);\n        in_stack_ffffffa4 = 2;\n        fcn.0043e74c();\n        fcn.0043f67c(in_stack_ffffffa4, uVar8, iVar5);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00404308(0x44012b);\n    return;\n}\n",
        "token_count": 3857
    },
    "00440144": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440144(uint32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4409c6;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar2 = &stack0xfffffffc;\n    if (*(lprc - 0x21) == '\\0') {\n        fcn.0042186c();\n        puVar2 = puStack24;\n    }\n    puStack24 = puVar2;\n    if (*(lprc - 0x2c) == 0) {\n        cVar3 = fcn.004036bc();\n        if (cVar3 == '\\0') {\n            *(lprc - 0x2d) = 0;\n        }\n        else {\n            *(lprc - 0x2d) = *(*(lprc - 0x2c) + 0x60);\n        }\n    }\n    else {\n        *(lprc - 0x2d) = 0;\n    }\n    *(lprc - 8) = *(lprc - 0x18) + -1;\n    iVar5 = *(lprc - 0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc - 0xc) = iVar5;\n    fcn.00404704();\n    if (bVar9) {\n        fcn.0042186c();\n        *(lprc - 0x10) = *(lprc - 8) + 2;\n        *(lprc - 8) = 0;\n        *(lprc - 0x35) = 0;\n    }\n    else {\n        if ((*(lprc - 0x3c) == 0) ||\n           (((iVar5 = *(*(lprc - 0x34) + 0x40),  iVar5 < 0 || (iVar6 = fcn.0043c8f0(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc - 0x34) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc - 0x34) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0'))))\n            )))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc - 0x3d) = uVar4;\n        if ((*(lprc - 0x3d) == '\\0') &&\n           ((piVar1 = *(*(lprc - 0x34) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0')))) {\n            if ((*(lprc - 0x3c) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc - 0x10) = *(lprc - 8);\n                *(lprc - 4) = *(lprc - 0xc);\n            }\n            else {\n                *(lprc - 0x10) = *(lprc - 8) - *(*(lprc - 0x3c) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x3c) + 0x30);\n            }\n            *(lprc - 0x35) = 0;\n        }\n        else {\n            *(lprc - 0x35) = 1;\n            if (*(lprc - 0x3d) == '\\0') {\n                *(lprc - 0x10) = *(lprc - 8) + -0x10;\n                *(lprc - 4) = *(lprc - 0xc) + 0x10;\n            }\n            else {\n                *(lprc - 0x10) = *(lprc - 8) - *(*(lprc - 0x3c) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x3c) + 0x30);\n            }\n            if (*(*(lprc - 0x34) + 0x38) != '\\0') {\n                *(lprc - 0x10) = *(lprc - 0x10) + -1;\n                *(lprc - 4) = *(lprc - 4) + 1;\n                uVar7 = fcn.00421200();\n                *(lprc - 0x44) = uVar7;\n                if (*(lprc - 0x21) == '\\0') {\n                    uVar7 = fcn.00421200();\n                    *(lprc - 0x44) = uVar7;\n                    fcn.00426468();\n                    fcn.004211dc();\n                    fcn.0042186c();\n                }\n                else {\n                    fcn.00421208();\n                    fcn.0042186c();\n                }\n                fcn.00421208();\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 0xc) = *(lprc - 0xc) + 1;\n            }\n            if (*(lprc - 0x3d) == '\\0') {\n                *(lprc - 0x58) = *(lprc - 0x10);\n                *(lprc - 0x54) = *(lprc - 0xc);\n                *(lprc - 0x50) = *(lprc - 8);\n                *(lprc - 0x4c) = *(lprc - 4);\n                iVar5 = (**(**(*(lprc - 0x34) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc - 8) - *(lprc - 0x10)) {\n                    iVar5 = (**(**(*(lprc - 0x34) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc - 8) - *(lprc - 0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 8) = (*(lprc - 8) - iVar5) + 1;\n                    iVar5 = (**(**(*(lprc - 0x34) + 0x4c) + 0x2c))();\n                    *(lprc - 0x10) = *(lprc - 8) - iVar5;\n                }\n                iVar5 = (**(**(*(lprc - 0x34) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc - 4) - *(lprc - 0xc)) {\n                    iVar5 = (**(**(*(lprc - 0x34) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0xc) = iVar5 + *(lprc - 0xc) + 1;\n                    iVar5 = (**(**(*(lprc - 0x34) + 0x4c) + 0x20))();\n                    *(lprc - 4) = iVar5 + *(lprc - 0xc);\n                }\n                fcn.0042197c();\n                *(lprc - 0x10) = *(lprc - 0x58);\n                *(lprc - 0xc) = *(lprc - 0x54);\n                *(lprc - 8) = *(lprc - 0x50);\n                *(lprc - 4) = *(lprc - 0x4c);\n            }\n            else {\n                iVar5 = *(*(lprc - 0x34) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.0043c8f0(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00424298();\n                    *(lprc - 0x48) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc - 0x48) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.00425460();\n                    *(lprc - 0x44) = *(*(*(lprc - 0x28) + 0xc) + 0x18);\n                    fcn.00420a3c();\n                    iVar5 = *(lprc - 0x48);\n                    iVar6 = (**(**(lprc - 0x48) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc - 0x48) + 0x2c))(iVar6 + *(lprc - 0xc) + 1);\n                    fcn.004217c0(iVar5);\n                    fcn.00420a3c();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00403530(0x440630);\n                    return;\n                }\n                fcn.0043cbe0(*(lprc - 0x34) & 0xffffff00 | *(*(lprc - 0x34) + 0x39), *(*(lprc - 0x34) + 0x40), \n                             *(lprc - 0xc));\n            }\n            if (*(*(lprc - 0x34) + 0x38) != '\\0') {\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 4) = *(lprc - 4) + -1;\n            }\n        }\n    }\n    *(lprc - 0x10) = *(lprc - 0x10) + -1;\n    *(lprc - 0xc) = *(lprc - 0xc) + -1;\n    *(lprc - 8) = *(lprc - 8) + 2;\n    *(lprc - 4) = *(lprc - 4) + 2;\n    if ((*(*(lprc - 0x34) + 0x38) != '\\0') || ((*(lprc - 0x21) != '\\0' && (*(lprc - 0x35) != '\\0')))) {\n        uVar7 = fcn.00421b9c();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc - 0x21) != '\\0') {\n        if (*(lprc - 0x35) != '\\0') {\n            *(lprc - 0x18) = *(lprc - 0x10) + -1;\n        }\n        if ((*(lprc - 0x59) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.00421208();\n        }\n        fcn.0042186c();\n    }\n    if ((*(lprc + 8) != '\\0') && (*(lprc - 0x59) != '\\0')) {\n        if (*(lprc - 0x21) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00421b9c();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00421b9c();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc - 0x21) == '\\0') {\n            iStack32 = lprc - 0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc - 0x21) == '\\0') || (*(lprc - 0x35) == '\\0')) {\n        *(lprc - 0x18) = *(lprc - 0x10) + -1;\n    }\n    *(lprc - 0x20) = *(lprc - 0x20) + 2;\n    *(lprc - 0x18) = *(lprc - 0x18) + -1;\n    *(lprc - 0x60) = *(*(lprc - 0x2d) * 2 + 0x46faa8) | 0x60;\n    if ((*(lprc - 0x61) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc - 0x60) = *(lprc - 0x60) | 0x100000;\n    }\n    *(lprc - 0x58) = *(lprc - 0x20);\n    *(lprc - 0x54) = *(lprc - 0x1c);\n    *(lprc - 0x50) = *(lprc - 0x18);\n    *(lprc - 0x4c) = *(lprc - 0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.00420d08();\n    }\n    fcn.0043f67c(*(lprc - 0x60) | 0x500, lprc & 0xffffff00 | *(lprc - 0x21), lprc - 0x20);\n    *(lprc - 0x20) = *(lprc - 0x58);\n    *(lprc - 0x18) = *(lprc - 0x50);\n    uVar8 = (*(lprc - 0x4c) - *(lprc - 0x54)) - (*(lprc - 0x14) - *(lprc - 0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc - 0x20, 0, iVar5);\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x21) != '\\0')) && (*(lprc - 0x59) != '\\0')) {\n        sub.user32.dll_OffsetRect(lprc - 0x20, 1, 0);\n    }\n    fcn.0043f67c(*(lprc - 0x60), lprc & 0xffffff00 | *(lprc - 0x21), lprc - 0x20);\n    if ((*(*(lprc - 0x34) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        fcn.0043e74c();\n        *(lprc - 0x20) = 10;\n        iVar5 = fcn.004219fc();\n        *(lprc - 0x18) = iVar5 + *(lprc - 0x20);\n        in_stack_ffffffa4 = 2;\n        fcn.0043f67c(2, lprc & 0xffffff00 | *(lprc - 0x21), lprc - 0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00404308(0x4409cd);\n    return;\n}\n",
        "token_count": 3886
    },
    "004409e4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004409e4(uint noname_0, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint var_61h;\n    uint var_59h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    var_20h = *in_ECX;\n    uStack32 = in_ECX[1];\n    uStack28 = in_ECX[2];\n    uStack24 = in_ECX[3];\n    iVar2 = fcn.004414e0();\n    iVar3 = fcn.00440afc();\n    if (((iVar2 == 0) || ((*(iVar2 + 0x40) == '\\0' && (iVar3 == 0)))) ||\n       ((*(in_EAX + 0x9a) == 0 && (*(in_EAX + 0x92) == 0)))) {\n        if ((iVar2 == 0) || (cVar1 = fcn.00442b1c(),  cVar1 != '\\0')) {\n            fcn.00440144(&stack0xfffffffc);\n        }\n        else {\n            fcn.0043f8cc(&stack0xfffffffc);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x34))(in_EAX & 0xffffff00 | (arg_ch & 1) != 0);\n        if (*(in_EAX + 0x9a) != 0) {\n            (*in_EAX[0x26])(&var_20h & 0xffff0000 | arg_ch & 0xffff, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "004413a8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004413a8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00403530();\n        *(in_EAX + 0x44) = 0;\n    }\n    else {\n        if (*(in_EAX + 0x44) == 0) {\n            iVar1 = fcn.0040372c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x44) = uVar2;\n        }\n        (**(**(in_EAX + 0x44) + 0xc))();\n        iVar1 = *(in_EAX + 0x44);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x44163c;\n        fcn.0040372c();\n        fcn.0041db3c();\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00442854": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442854(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint hMenu;\n    \n    iVar1 = sub.user32.dll_GetMenuItemCount();\n    puVar2 = arg_8h + -0x200;\n    iVar4 = 0;\n    while ((iVar4 < iVar1 && (puVar2 < arg_8h + -5))) {\n        fcn.00442df0(0x400, (arg_8h + -5) - puVar2, puVar2);\n        puVar2 = fcn.00408be8();\n        uVar3 = sub.user32.dll_GetMenuState();\n        if ((uVar3 & 2) != 0) {\n            *puVar2 = 0x24;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 0x40) != 0) {\n            *puVar2 = 0x40;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 1) != 0) {\n            *puVar2 = 0x23;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        *puVar2 = 0x3b;\n        puVar2 = puVar2 + 1;\n        *puVar2 = 0;\n        iVar4 = iVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "00443860": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443860(uint32_t arg_8h)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint16_t extraout_var;\n    uint16_t extraout_var_00;\n    uint16_t extraout_var_01;\n    uint16_t uVar3;\n    uint var_15h;\n    uint var_4h;\n    \n    if ((**0x47bef0 < 5) && ((**0x47bef0 != 4 || (**0x47c138 < 1)))) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.0040372c();\n    uVar2 = fcn.004036bc();\n    if (((arg_8h & 1) == 0) || ((uVar2 != 0 && ((uVar2 == 0 || (bVar1)))))) {\n        if ((bVar1) && ((arg_8h & 0x80) != 0)) {\n            fcn.00421208();\n            fcn.00420a3c();\n            uVar3 = extraout_var_00;\n        }\n        else {\n            fcn.00421208();\n            fcn.00420a3c();\n            uVar3 = extraout_var_01;\n        }\n    }\n    else {\n        fcn.00421208();\n        fcn.00420a3c();\n        uVar3 = extraout_var;\n    }\n    (**(*in_EAX + 0x30))(arg_8h & 0xff00 | uVar3 << 0x10 | uVar2, arg_8h & 0xffff | uVar3 << 0x10);\n    return;\n}\n",
        "token_count": 390
    },
    "00446588": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00446588(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *0x4465d8;\n    if ((in_EAX & 4) != 0) {\n        uVar2 = uVar2 | 1;\n    }\n    if ((in_EAX & 8) != 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 1) != 0) {\n        uVar2 = uVar2 | 8;\n    }\n    if ((in_EAX & 2) != 0) {\n        uVar2 = uVar2 | 0x10;\n    }\n    if ((in_EAX & 0x10) != 0) {\n        uVar2 = uVar2 | 0x20;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x12);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 267
    },
    "0044783c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044783c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_1 != param_2) {\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            *(*(in_EAX + 0x208) + 0x1e) = 1;\n            *(*(in_EAX + 0x20c) + 0x1e) = 1;\n        }\n        fcn.00446f84();\n        fcn.00446f84();\n        if (*(in_EAX + 0x210) == '\\0') {\n            if (*(*(in_EAX + 0x208) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x208) + 0x10), param_2, param_1);\n                fcn.004470d4();\n            }\n            if (*(*(in_EAX + 0x20c) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x20c) + 0x10), param_2, param_1);\n                fcn.004470d4();\n            }\n        }\n    }\n    *(*(in_EAX + 0x208) + 0x1e) = 0;\n    *(*(in_EAX + 0x20c) + 0x1e) = 0;\n    return;\n}\n",
        "token_count": 349
    },
    "00448a68": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448a68(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x2ec) & 1) == 0) {\n        if ((param_2 != '\\0') && (param_2 != *(in_EAX + 0x57))) {\n            fcn.00449ad4();\n        }\n        fcn.0042f9b8();\n    }\n    else {\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x2ec) = *(in_EAX + 0x2ec) & 0xfd;\n            return;\n        }\n        *(in_EAX + 0x2ec) = *(in_EAX + 0x2ec) | 2;\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00449f73": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00449f73(void)\n\n{\n    uint8_t uVar1;\n    uint in_EAX;\n    uint8_t unaff_BL;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint8_t unaff_retaddr;\n    \n    *(unaff_ESI + 4) = in_EAX;\n    uVar1 = *0x44a03c & unaff_BL;\n    *(unaff_ESI + 0x24) = 0x2808;\n    if (unaff_retaddr - 4 < 2) {\n        *(unaff_ESI + 8) = 0x80;\n        fcn.00433034();\n        uVar1 = *0x44a040 & uVar1;\n    }\n    if (unaff_retaddr < 3) {\n        if ((*(unaff_EDI + 0x22f) != '\\x01') || ((uVar1 & 1) != 0)) {\n            if ((uVar1 & 2) != 0) {\n                *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x20000;\n            }\n            if ((uVar1 & 4) != 0) {\n                *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x10000;\n            }\n        }\n        if (*(unaff_EDI + 0x22b) == '\\x01') {\n            *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x20000000;\n        }\n        else if (*(unaff_EDI + 0x22b) == '\\x02') {\n            *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x1000000;\n        }\n    }\n    else {\n        *(unaff_EDI + 0x22b) = 0;\n    }\n    if ((uVar1 & 1) != 0) {\n        *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x80000;\n    }\n    if ((uVar1 & 8) != 0) {\n        *(unaff_ESI + 8) = *(unaff_ESI + 8) | 0x400;\n    }\n    if ((*(unaff_EDI + 0x1d) & 2) != 0) {\n        *(unaff_ESI + 4) = *(unaff_ESI + 4) & 0xff3fffff;\n    }\n    if (*(unaff_EDI + 0x22f) == '\\x01') {\n        *(unaff_ESI + 0x28) = 0x406d98;\n    }\n    return;\n}\n",
        "token_count": 618
    },
    "0044a364": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a364(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44a40c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (param_2 == *(in_EAX + 0x220)) goto code_r0x0044a3f6;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 == 0) goto code_r0x0044a3cf;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX == param_2) {\ncode_r0x0044a3ae:\n        puStack24 = puVar1;\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n        puVar1 = puStack24;\n    }\n    else {\n        iVar3 = fcn.004466f4();\n        puVar1 = puStack24;\n        if (in_EAX != iVar3) goto code_r0x0044a3ae;\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            cVar2 = fcn.0040372c();\n            puVar1 = puStack24;\n            if (cVar2 == '\\0') goto code_r0x0044a3ae;\n        }\n    }\ncode_r0x0044a3cf:\n    puStack24 = puVar1;\n    *(in_EAX + 0x220) = param_2;\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        if (*(in_EAX + 0x22e) != '\\0') {\n            fcn.0044a71c();\n        }\n        fcn.0040372c();\n    }\ncode_r0x0044a3f6:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x44a413;\n    uStack28 = 0x44a40b;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 546
    },
    "0044ac38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ac38(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (((*(*(arg_8h + -4) + 0x229) != '\\0') && ((*(*(arg_8h + -4) + 0x228) & 1) != 0)) &&\n       (*(*(arg_8h + -4) + 0x22f) != '\\x01')) {\n        uVar1 = fcn.004360b8(0);\n        uVar1 = sub.user32.dll_GetSystemMenu(uVar1);\n        if (*(*(arg_8h + -4) + 0x229) == '\\x03') {\n            sub.user32.dll_DeleteMenu(uVar1, 0xf130, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 7, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 5, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf030, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf020, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf000, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf120, 0);\n        }\n        else {\n            if ((*(*(arg_8h + -4) + 0x228) & 2) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf020, 1);\n            }\n            if ((*(*(arg_8h + -4) + 0x228) & 4) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf030, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "0044b4b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b4b8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    iVar1 = *(param_2 + 8);\n    if (((*0x44b54c == (*(in_EAX + 0x1c) & *0x44b548)) && ((*(iVar1 + 0x18) & 1) == 0)) &&\n       ((*(iVar1 + 0x10) != *(in_EAX + 0x48) || (*(iVar1 + 0x14) != *(in_EAX + 0x4c))))) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    *(in_EAX + 0x22a) = uVar2;\n    uStack24 = 0x44b53b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.004346b8();\n    *in_FS_OFFSET = uStack28;\n    *(in_EAX + 0x22a) = 0;\n    return;\n}\n",
        "token_count": 313
    },
    "0044c7e4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0044c7e4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44c8bb;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.00434bb8();\n    if (iVar1 == 1) {\n        fcn.0042fa0c();\n        fcn.004043f8();\n        uVar2 = fcn.004045c0();\n        fcn.004047b8(uVar2);\n        fcn.0042fa1c();\n        iVar1 = fcn.004045c0();\n        if (0 < iVar1) {\n            iVar3 = 1;\n            do {\n                if ((*(iVar3 + -1) == '\\n') || (*(iVar3 + -1) == '\\r')) {\n                    fcn.00404944();\n                    break;\n                }\n                iVar3 = iVar3 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.0042fac8();\n    }\n    fcn.00434a24();\n    fcn.0042efbc();\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        fcn.00448a68();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44c8c2;\n    uStack32 = 0x44c8ba;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 425
    },
    "004565c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004565c8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x456628;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if (((*(in_EAX + 0x7c) == 0) && ((*(in_EAX + 0x1c) & 1) == 0)) && (param_2 != '\\0')) {\n        fcn.004065fc();\n        fcn.0040b16c();\n        in_EAX = fcn.00403ce4();\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x80) = param_2;\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x45662f;\n    uStack16 = 0x456627;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 275
    },
    "0045abcc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0045abcc(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    uint8_t uStack43;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0x24) == '\\0') {\n        fcn.0045aa6c();\n        iVar1 = fcn.00426c8c();\n        if (iVar1 != 0) {\n    // switch table (5 cases) at 0x45ac12\n            switch(param_2) {\n            case 0:\n                bVar2 = (uStack43 & 4) != 0;\n                break;\n            case 1:\n                bVar2 = (uStack43 & 8) != 0;\n                break;\n            case 2:\n                bVar2 = (uStack43 & 1) != 0;\n                break;\n            case 3:\n                bVar2 = (uStack43 & 2) != 0;\n                break;\n            case 4:\n                bVar2 = (uStack43 & 0x20) != 0;\n            }\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 269
    },
    "0045d11c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0045d11c(uint param_1, uint param_2)\n\n{\n    uint32_t unaff_ESI;\n    uint32_t uVar1;\n    uint32_t uStack20;\n    \n    uVar1 = unaff_ESI & 0xffff0000 | *0x45d1d0;\n    fcn.004360b8(param_2, param_1);\n    fcn.00426cd0();\n    if ((uStack20 & 0x100) != 0) {\n        uVar1 = uVar1 | 1;\n    }\n    if ((uStack20 & 0x200) != 0) {\n        uVar1 = uVar1 | 2;\n    }\n    if ((uStack20 & 1) != 0) {\n        uVar1 = uVar1 | 4;\n    }\n    if ((uStack20 & 0x46) == 0x46) {\n        uVar1 = uVar1 | 8;\n    }\n    else {\n        if ((uStack20 & 0x46) != 0) {\n            uVar1 = uVar1 | 8;\n        }\n        if ((uStack20 & 2) != 0) {\n            uVar1 = uVar1 | 0x20;\n        }\n        if ((uStack20 & 4) != 0) {\n            uVar1 = uVar1 | 0x80;\n        }\n        if ((uStack20 & 0x40) != 0) {\n            uVar1 = uVar1 | 0x200;\n        }\n    }\n    if ((uStack20 & 0x10) != 0) {\n        uVar1 = uVar1 | 0x10;\n    }\n    if ((uStack20 & 8) != 0) {\n        uVar1 = uVar1 | 0x40;\n    }\n    if ((uStack20 & 0x20) != 0) {\n        uVar1 = uVar1 | 0x100;\n    }\n    if ((uStack20 & 0x800) != 0) {\n        uVar1 = uVar1 | 0x400;\n    }\n    if ((uStack20 & 0x400) != 0) {\n        uVar1 = uVar1 | 0x800;\n    }\n    return uVar1;\n}\n",
        "token_count": 526
    },
    "0045d3f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045d3f8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t *in_FS_OFFSET;\n    uint *puVar7;\n    int32_t iStack216;\n    uint uStack212;\n    uchar *puStack208;\n    int32_t iStack204;\n    uint *puStack200;\n    uchar *puStack196;\n    int32_t iStack192;\n    int32_t iStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint var_98h;\n    uint var_90h;\n    uint var_8ah;\n    uint var_4eh;\n    uint var_4ah;\n    uint var_26h;\n    uint var_16h;\n    uint var_12h;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack172 = &stack0xfffffffc;\n    uStack176 = 0x45de20;\n    iStack180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff4c;\n    iVar4 = *(param_2 + 8);\n    iVar6 = *(iVar4 + 8);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (-0x195 < iVar6) {\n        if (iVar6 < -400) {\n            if (iVar6 != -0x191) {\n                if (iVar6 == -0x194) {\n                    puStack172 = &stack0xfffffffc;\n                    iVar6 = fcn.0045d3d0();\n                    puVar2 = puStack172;\n                    if ((iVar6 != 0) && ((*(iVar4 + 0xc) & 1) != 0)) {\n                        fcn.004044f8();\n                        fcn.0045aac8();\n                        puVar2 = puStack172;\n                    }\n                    goto code_r0x0045de07;\n                }\n                if (iVar6 == -0x193) {\n                    puStack172 = &stack0xfffffffc;\n                    iVar6 = fcn.0045d3d0();\n                    puVar2 = puStack172;\n                    if (iVar6 != 0) {\n                        if ((*(iVar4 + 0xc) & 1) != 0) {\n                            fcn.004047b8();\n                            fcn.00408c34();\n                        }\n                        if ((*(iVar4 + 0xc) & 2) != 0) {\n                            (**(*var_4h + 0xd4))();\n                            *(iVar4 + 0x24) = *(iVar6 + 0x14);\n                        }\n                        puVar2 = puStack172;\n                        if ((*(iVar4 + 0xc) & 0x20) != 0) {\n                            iStack204 = 0x45dd48;\n                            (**(*var_4h + 0xd8))();\n                            *(iVar4 + 0x28) = *(iVar6 + 0x18);\n                            puVar2 = puStack172;\n                        }\n                    }\n                    goto code_r0x0045de07;\n                }\n                puVar2 = &stack0xfffffffc;\n                if (iVar6 != -0x192) goto code_r0x0045de07;\ncode_r0x0045dbeb:\n                iVar4 = in_EAX[0xcc];\n                if (*(iVar4 + 0x30) == 0) {\n                    puStack172 = &stack0xfffffffc;\n                    fcn.0045d3d0();\n                    fcn.0040372c();\n                    puVar2 = puStack172;\n                }\n                else {\n                    puStack172 = &stack0xfffffffc;\n                    fcn.00429350();\n                    uVar5 = fcn.0045d3d0();\n                    *(iVar4 + 0xc) = uVar5;\n                    fcn.00429350();\n                    puVar2 = puStack172;\n                }\n                goto code_r0x0045de07;\n            }\ncode_r0x0045dbb5:\n            puStack172 = &stack0xfffffffc;\n            fcn.0045d3d0();\n            cVar3 = fcn.0040372c();\n            puVar2 = puStack172;\n            if (cVar3 == '\\0') {\n                *(var_8h + 0xc) = 1;\n            }\n            goto code_r0x0045de07;\n        }\n        if (iVar6 != -0xc) {\n            puVar2 = &stack0xfffffffc;\n            if (iVar6 == -5) {\n                in_EAX[0x90] = 0;\n                puStack172 = &stack0xfffffffc;\n                sub.user32.dll_GetCursorPos();\n                if (*(var_4h + 0x91) == '\\0') {\n                    fcn.0040728c();\n                    iStack192 = 0x45dde9;\n                    iStack192 = fcn.004360b8();\n                    puStack196 = 0xbc7b;\n                    puStack200 = 0x45ddf7;\n                    puStack200 = fcn.004360b8();\n                    iStack204 = 0x45ddfd;\n                    sub.user32.dll_PostMessageA();\n                }\n                else {\n                    fcn.0042f5ec();\n                    var_16h = fcn.0040728c();\n                    iVar4 = fcn.0045d0e4();\n                    var_4h[0x90] = iVar4;\n                    uVar5 = fcn.0040728c();\n                    iStack192 = 0x45ddbc;\n                    fcn.004360b8();\n                    iStack192 = 0x45ddcb;\n                    fcn.00430c4c(uVar5);\n                    var_4h[0x90] = 0;\n                }\n                *(var_8h + 0xc) = 1;\n                puVar2 = puStack172;\n            }\n            goto code_r0x0045de07;\n        }\n        puVar2 = &stack0xfffffffc;\n        if (in_EAX[0x83] == 0) goto code_r0x0045de07;\n        fcn.004218e0();\n        iStack192 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff40;\n        *(var_8h + 0xc) = 0;\n        if ((*(iVar4 + 0xe) & 1) != 0) {\n            puStack196 = 0x45d6df;\n            fcn.00402e14();\n            var_4ah = *(iVar4 + 0x24);\n            puStack196 = 0x45d6f0;\n            iVar6 = fcn.0045d3d0();\n            if (iVar6 != 0) {\n                iVar6 = *(iVar4 + 0xc);\n                if (iVar6 == 0x10001) {\n                    if (((*(iVar4 + 0xc) & 0x10002) != 0) && (var_4h[0xa2] + var_4h[0xa3] != 0)) {\n                        puStack196 = var_4h[0xa3];\n                        puStack200 = *(iVar4 + 0x10);\n                        iStack204 = 0x45d756;\n                        sub.gdi32.dll_SelectObject();\n                        iStack204 = var_4h[0xa2];\n                        puStack208 = 0x45d765;\n                        sub.gdi32.dll_DeleteObject();\n                        var_4h[0xa2] = 0;\n                        var_4h[0xa3] = 0;\n                    }\n                    uStack212 = 0x45d969;\n                    iStack216 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff28;\n                    puStack208 = &stack0xfffffffc;\n                    fcn.00421c1c();\n                    fcn.00421abc();\n                    fcn.00421ad8();\n                    if ((*(iVar4 + 0x28) & 1) != 0) {\n                        fcn.00420a3c();\n                        fcn.00421208();\n                    }\n                    iVar6 = var_4h[0x83];\n                    iVar1 = *(iVar6 + 0xc);\n                    *(iVar1 + 0xc) = var_4h;\n                    *(iVar1 + 8) = 0x45e7a8;\n                    iVar6 = *(iVar6 + 0x14);\n                    *(iVar6 + 0xc) = var_4h;\n                    *(iVar6 + 8) = 0x45e7a8;\n                    *(var_4h + 0x84) = 0;\n                    puVar7 = &fcn.0045d3f8::var_12h;\n                    var_12h._1_1_ = (**(*var_4h + 0xd0))(puVar7, 0);\n                    if (var_12h == '\\0') {\n                        *(var_8h + 0xc) = *(var_8h + 0xc) | 0x10000;\n                    }\n                    if (var_12h._1_1_ == '\\0') {\n                        *(var_8h + 0xc) = *(var_8h + 0xc) | 4;\n                    }\n                    else if (*(var_4h + 0x84) != '\\0') {\n                        *(var_4h + 0x84) = 0;\n                        iVar6 = var_4h[0x83];\n                        iVar1 = *(iVar6 + 0xc);\n                        *(iVar1 + 8) = 0;\n                        *(iVar1 + 0xc) = 0;\n                        iVar6 = *(iVar6 + 0x14);\n                        *(iVar6 + 8) = 0;\n                        *(iVar6 + 0xc) = 0;\n                        iVar6 = *(var_8h + 8);\n                        uVar5 = fcn.0042057c();\n                        *(iVar6 + 0x30) = uVar5;\n                        fcn.00421200();\n                        uVar5 = fcn.0042057c();\n                        *(iVar6 + 0x34) = uVar5;\n                        uVar5 = fcn.00420a50(0x3c, &fcn.0045d3f8::var_8ah);\n                        iVar6 = sub.gdi32.dll_GetObjectA(uVar5);\n                        if (iVar6 != 0) {\n                            fcn.00421c1c();\n                            iVar6 = sub.gdi32.dll_CreateFontIndirectA(&fcn.0045d3f8::var_8ah);\n                            var_4h[0xa2] = iVar6;\n                            iVar4 = sub.gdi32.dll_SelectObject(*(iVar4 + 0x10), iVar6);\n                            var_4h[0xa3] = iVar4;\n                            *(var_8h + 0xc) = *(var_8h + 0xc) | 2;\n                        }\n                    }\n                    cVar3 = (**(*var_4h + 0xdc))();\n                    if (cVar3 != '\\0') {\n                        *(var_8h + 0xc) = *(var_8h + 0xc) | 0x10;\n                    }\n                    *in_FS_OFFSET = puVar7;\n                    iStack216 = 0x45d9f2;\n                    fcn.00421c1c();\n                    return;\n                }\n                if (iVar6 == 0x10002) {\n                    puStack196 = 0x45d97f;\n                    cVar3 = (**(*var_4h + 0xdc))();\n                    if (cVar3 != '\\0') {\n                        puStack196 = 0x1;\n                        puStack200 = &fcn.0045d3f8::var_12h;\n                        iStack204 = 0x45d99a;\n                        (**(*var_4h + 0xd0))();\n                    }\n                }\n                else if (iVar6 == 0x10003) {\n                    puStack196 = 0x45d9ab;\n                    cVar3 = (**(*var_4h + 0xdc))();\n                    if (cVar3 != '\\0') {\n                        puStack196 = 0x2;\n                        puStack200 = &fcn.0045d3f8::var_12h;\n                        iStack204 = 0x45d9c6;\n                        (**(*var_4h + 0xd0))();\n                    }\n                }\n                else if (iVar6 == 0x10004) {\n                    puStack196 = 0x45d9d7;\n                    cVar3 = (**(*var_4h + 0xdc))();\n                    if (cVar3 != '\\0') {\n                        puStack196 = 0x3;\n                        puStack200 = &fcn.0045d3f8::var_12h;\n                        iStack204 = 0x45d9f2;\n                        (**(*var_4h + 0xd0))();\n                    }\n                }\n                goto code_r0x0045d9f2;\n            }\n            puStack196 = 0x45d6fb;\n            fcn.00403d90();\n            puVar2 = puStack172;\n            goto code_r0x0045de07;\n        }\n        puStack196 = 0x45d50f;\n        (**(*var_4h + 0x44))();\n        iVar4 = *(iVar4 + 0xc);\n        if (iVar4 != 1) {\n            if (iVar4 == 2) {\n                puStack196 = 0x45d65b;\n                cVar3 = (**(*var_4h + 0xdc))();\n                if (cVar3 != '\\0') {\n                    puStack196 = 0x45d673;\n                    (**(*var_4h + 0xcc))();\n                }\n            }\n            else if (iVar4 == 3) {\n                puStack196 = 0x45d687;\n                cVar3 = (**(*var_4h + 0xdc))();\n                if (cVar3 != '\\0') {\n                    puStack196 = 0x45d69f;\n                    (**(*var_4h + 0xcc))();\n                }\n            }\n            else if (iVar4 == 4) {\n                puStack196 = 0x45d6b3;\n                cVar3 = (**(*var_4h + 0xdc))();\n                if (cVar3 != '\\0') {\n                    puStack196 = 0x45d6cb;\n                    (**(*var_4h + 0xcc))();\n                }\n            }\n            goto code_r0x0045d9f2;\n        }\n        puStack196 = 0x45d53e;\n        cVar3 = (**(*var_4h + 0xdc))();\n        if (cVar3 != '\\0') {\n            puStack200 = 0x45d5c1;\n            iStack204 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff34;\n            puStack208 = 0x45d565;\n            puStack196 = &stack0xfffffffc;\n            fcn.00421c1c();\n            puStack208 = 0x45d579;\n            fcn.00421abc();\n            puStack208 = 0x45d590;\n            fcn.00421ad8();\n            puStack208 = 0x45d5a0;\n            var_12h._1_1_ = (**(*var_4h + 0xcc))();\n            *in_FS_OFFSET = iStack204;\n            puStack196 = 0x45d5c8;\n            puStack200 = 0x45d5c0;\n            fcn.00421c1c();\n            return;\n        }\n        puStack196 = 0x45d5f1;\n        cVar3 = (**(*var_4h + 0xdc))();\n        if (cVar3 == '\\0') {\n            puStack196 = 0x45d604;\n            cVar3 = (**(*var_4h + 0xdc))();\n            if (cVar3 != '\\0') goto code_r0x0045d608;\n        }\n        else {\ncode_r0x0045d608:\n            *(var_8h + 0xc) = *(var_8h + 0xc) | 0x20;\n        }\n        puStack196 = 0x45d61e;\n        cVar3 = (**(*var_4h + 0xdc))();\n        if (cVar3 != '\\0') {\n            *(var_8h + 0xc) = *(var_8h + 0xc) | 0x10;\n        }\n        puStack196 = 0x45d638;\n        cVar3 = (**(*var_4h + 0xdc))();\n        if (cVar3 != '\\0') {\n            *(var_8h + 0xc) = *(var_8h + 0xc) | 0x40;\n        }\ncode_r0x0045d9f2:\n        *in_FS_OFFSET = iStack192;\n        fcn.00421a94();\n        return;\n    }\n    if (iVar6 == -0x195) {\n        puVar2 = &stack0xfffffffc;\n        if (*(in_EAX + 0x245) == '\\0') {\n            puStack172 = &stack0xfffffffc;\n            fcn.0045d3d0();\n            if ((*(iVar4 + 0xc) == 2) && (cVar3 = fcn.0040372c(),  cVar3 == '\\0')) {\n                *(var_8h + 0xc) = 1;\n                puVar2 = puStack172;\n            }\n            else {\n                puVar2 = puStack172;\n                if ((*(iVar4 + 0xc) == 1) && (cVar3 = fcn.0040372c(),  puVar2 = puStack172,  cVar3 == '\\0')) {\n                    *(var_8h + 0xc) = 1;\n                }\n            }\n        }\n        goto code_r0x0045de07;\n    }\n    if (-0x19a < iVar6) {\n        if (iVar6 == -0x199) {\n            puStack172 = &stack0xfffffffc;\n            iVar4 = fcn.0045d3d0();\n            puVar2 = puStack172;\n            if (iVar4 != 0) {\n                *(iVar4 + 0x10) = 0;\n                fcn.00429350();\n                if (*(var_4h + 0x97) == '\\0') {\n                    fcn.0045bcfc();\n                    puVar2 = puStack172;\n                }\n                else {\n                    fcn.0045b9dc();\n                    puVar2 = puStack172;\n                }\n            }\n        }\n        else if (iVar6 == -0x197) {\n            *(in_EAX + 0x86) = 1;\n            puStack172 = &stack0xfffffffc;\n            iVar4 = fcn.0045d3d0();\n            var_4h[0x88] = iVar4;\n            puVar2 = puStack172;\n        }\n        else {\n            puVar2 = &stack0xfffffffc;\n            if ((iVar6 == -0x196) && (puVar2 = &stack0xfffffffc,  *(in_EAX + 0x245) == '\\0')) {\n                iVar4 = *(param_2 + 8);\n                puStack172 = &stack0xfffffffc;\n                fcn.0045d3d0();\n                iVar4 = *(iVar4 + 0xc);\n                if (iVar4 == 2) {\n                    fcn.0040372c();\n                    puVar2 = puStack172;\n                }\n                else {\n                    puVar2 = puStack172;\n                    if (iVar4 == 1) {\n                        fcn.0040372c();\n                        puVar2 = puStack172;\n                    }\n                }\n            }\n        }\n        goto code_r0x0045de07;\n    }\n    if (iVar6 != -0x19a) {\n        if (iVar6 == -0x1c3) goto code_r0x0045dbeb;\n        if (iVar6 != -0x1c2) {\n            puVar2 = &stack0xfffffffc;\n            if (iVar6 == -0x19b) {\n                puStack172 = &stack0xfffffffc;\n                fcn.0040372c();\n                puVar2 = puStack172;\n            }\n            goto code_r0x0045de07;\n        }\n        goto code_r0x0045dbb5;\n    }\n    puStack172 = &stack0xfffffffc;\n    cVar3 = fcn.00430208();\n    if (cVar3 == '\\0') {\n        fcn.0045d3d0();\n        cVar3 = fcn.0040372c();\n        if (cVar3 == '\\0') goto code_r0x0045da6c;\n    }\n    else {\ncode_r0x0045da6c:\n        *(var_8h + 0xc) = 1;\n    }\n    puVar2 = puStack172;\n    if (*(var_8h + 0xc) == 0) {\n        fcn.004360b8();\n        iVar4 = fcn.00426cbc();\n        var_4h[0x89] = iVar4;\n        iStack192 = 0x45daa3;\n        iVar4 = sub.user32.dll_GetWindowLongA();\n        var_4h[0x85] = iVar4;\n        iStack192 = var_4h[0x8a];\n        puStack196 = 0xfffffffc;\n        puStack200 = var_4h[0x89];\n        iStack204 = 0x45dac7;\n        sub.user32.dll_SetWindowLongA();\n        puVar2 = puStack172;\n    }\ncode_r0x0045de07:\n    puStack172 = puVar2;\n    *in_FS_OFFSET = puStack200;\n    iStack192 = 0x45de27;\n    puStack196 = 0x45de1f;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 4978
    },
    "0045e950": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e950(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x275) & 1) == 0) {\n        fcn.0045ed30();\n    }\n    else {\n        iVar1 = fcn.0045d2e0();\n        if ((param_2 != iVar1) && ((param_2 == 0 || (*(param_2 + 0x24) == '\\0')))) {\n            fcn.0045d328();\n        }\n        iVar1 = fcn.00415324();\n        if (iVar1 == -1) {\n            fcn.0045ece4();\n            return;\n        }\n        fcn.0045ecbc();\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0045e9b4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0045e9b4(void)\n\n{\n    uint32_t in_EAX;\n    \n    fcn.0045ee04((in_EAX & 0xffffff00 | (*(in_EAX + 0x275) & 1) != 0) ^ 1);\n    return;\n}\n",
        "token_count": 67
    },
    "0045e9f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e9f8(uint8_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_5h;\n    \n    puStack24 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x284) != '\\0') || ((param_1 & 8) == 0)) {\n        return;\n    }\n    uStack28 = 0x45ebd0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *(in_EAX + 0x284) = 1;\n    if ((param_1 & 1) == 0) {\n        *(in_EAX + 0x280) = 0;\n    }\n    if ((*(in_EAX + 0x274) == '\\0') || (param_2 == 0)) {\n        uVar2 = 0x45ebb0;\n        fcn.0045ed30();\n    }\n    else if ((param_1 & 1) == 0) {\n        if ((param_1 & 4) == 0) {\n            puStack24 = &stack0xfffffffc;\n            iVar3 = fcn.00415324();\n            if (iVar3 == -1) {\n                uVar2 = 0x45eba4;\n                fcn.0045ed30();\n            }\n            else {\n                uVar2 = 0x45eb78;\n                iVar3 = fcn.004152c8();\n                if (param_2 != iVar3) {\n                    fcn.00415468();\n                    uVar2 = 0x45eb98;\n                    fcn.0045ece4();\n                }\n            }\n        }\n        else {\n            uVar2 = 0x45eb53;\n            puStack24 = &stack0xfffffffc;\n            fcn.0045e950();\n        }\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        if ((*(in_EAX + 0x280) == 0) && (puStack24 = &stack0xfffffffc,  0 < *(*(in_EAX + 0x278) + 8))) {\n            puStack24 = &stack0xfffffffc;\n            uVar2 = fcn.0045ebec();\n            *(in_EAX + 0x280) = uVar2;\n        }\n        if (*(in_EAX + 0x280) == 0) {\n            iVar3 = fcn.0045c064();\n            cVar1 = fcn.0045b8c8();\n            if (cVar1 == '\\0') {\n                iVar3 = fcn.0045b2d4();\n            }\n            while (iVar3 != 0) {\n                cVar1 = fcn.0045b1e0();\n                if (cVar1 != '\\0') {\n                    *(in_EAX + 0x280) = iVar3;\n                    break;\n                }\n                iVar3 = fcn.0045b2d4();\n            }\n        }\n        if (*(in_EAX + 0x280) != 0) {\n            fcn.0045b470();\n            fcn.0045b470();\n        }\n        if ((param_1 & 4) == 0) {\n            uVar2 = 1;\n            fcn.0045ee04(1);\n        }\n        else {\n            uVar2 = 0x45eb31;\n            fcn.0045e9b4();\n        }\n    }\n    fcn.0045f080();\n    *in_FS_OFFSET = uVar2;\n    *(in_EAX + 0x284) = 0;\n    return;\n}\n",
        "token_count": 858
    },
    "0046a474": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046a474(uint param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    char cVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t *in_FS_OFFSET;\n    uchar uVar9;\n    uint *puStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint uStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack16 = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack56 = 0x46a5f8;\n    puStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_4h = param_2;\n    fcn.00404308();\n    uStack16 = uStack16 & 0xffffff;\n    iVar6 = fcn.004045c0();\n    iVar7 = 1;\n    if (0 < iVar6) {\n        do {\n            if (*(in_EAX + -1 + iVar7) == '\\x1b') {\n                iVar8 = iVar7 + 1;\n                uVar9 = iVar6 == iVar7 + 2;\n                if (iVar7 + 2 <= iVar6) {\n                    puStack60 = &fcn.0046a474::var_10h;\n                    fcn.00404818();\n                    fcn.00404704();\n                    if (uVar9) {\n                        uStack16 = CONCAT13(1, uStack16);\n                    }\n                    else {\n                        puStack60 = &fcn.0046a474::var_14h;\n                        fcn.00404818();\n                        fcn.00404704();\n                        if (uVar9) {\n                            uStack16 = uStack16 & 0xffffff;\n                        }\n                    }\n                    iVar8 = iVar7 + 3;\n                }\n            }\n            else if (uStack16._3_1_ == '\\0') {\n                fcn.004044e8();\n                fcn.004045c8();\n                iVar8 = iVar7 + 1;\n            }\n            else if (iVar6 < iVar7 + 1) {\n                iVar8 = iVar7 + 1;\n            }\n            else {\n                uVar1 = *(in_EAX + -1 + iVar7);\n                uVar2 = *(in_EAX + iVar7);\n                uStack16 = uStack16 & 0xff000000;\n                cVar5 = uVar1 - 1 >> 1;\n                if (uVar1 < 0x5f) {\n                    uVar3 = cVar5 + 0x71;\n                }\n                else {\n                    uVar3 = cVar5 + 0xb1;\n                }\n                uVar4 = uStack16 & 0xff | uVar3 << 8;\n                if ((uVar1 & 1) == 1) {\n                    if (uVar2 < 0x60) {\n                        uStack16._0_3_ = CONCAT12(uVar2 + 0x1f, uVar4);\n                        uStack16 = uStack16 | uStack16;\n                    }\n                    else {\n                        uStack16._0_3_ = CONCAT12(uVar2 + 0x20, uVar4);\n                        uStack16 = uStack16 | uStack16;\n                    }\n                }\n                else {\n                    uStack16._0_3_ = CONCAT12(uVar2 + 0x7e, uVar4);\n                    uStack16 = uStack16 | uStack16;\n                }\n                fcn.004044e8(var_8h);\n                fcn.004044e8(0);\n                puStack60 = NULL;\n                fcn.00404680();\n                iVar8 = iVar7 + 2;\n            }\n            iVar7 = iVar8;\n        } while (iVar8 <= iVar6);\n    }\n    fcn.0040435c();\n    *in_FS_OFFSET = puStack60;\n    puStack52 = 0x46a5ff;\n    uStack56 = 0x46a5ef;\n    fcn.0040432c();\n    uStack56 = 0x46a5f7;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 1038
    },
    "004013e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.004013e8(void)\n\n{\n    int32_t **ppiVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    if (*0x47d5e0 == NULL) {\n        puVar2 = sub.kernel32.dll_LocalAlloc(0, 0x644);\n        if (puVar2 == NULL) {\n            return NULL;\n        }\n        *puVar2 = *0x47d5dc;\n        iVar4 = 0;\n        *0x47d5dc = puVar2;\n        do {\n            ppiVar1 = puVar2 + iVar4 * 4 + 1;\n            *ppiVar1 = *0x47d5e0;\n            iVar4 = iVar4 + 1;\n            *0x47d5e0 = ppiVar1;\n        } while (iVar4 != 100);\n    }\n    piVar3 = *0x47d5e0;\n    *0x47d5e0 = **0x47d5e0;\n    return piVar3;\n}\n",
        "token_count": 245
    },
    "004014fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004014fc(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t iStack20;\n    \n    piVar5 = in_EAX;\n    while( true ) {\n        uVar1 = *param_2;\n        uVar3 = piVar5[2];\n        if ((uVar3 <= uVar1) && (uVar1 + param_2[1] <= uVar3 + piVar5[3])) break;\n        piVar5 = *piVar5;\n        if (in_EAX == piVar5) {\n            uVar4 = 0;\ncode_r0x00401584:\n            return CONCAT44(iStack20, uVar4);\n        }\n    }\n    if (uVar1 == uVar3) {\n        piVar5[2] = piVar5[2] + param_2[1];\n        uVar3 = param_2[1];\n        piVar5[3] = piVar5[3] - uVar3;\n        if (piVar5[3] == 0) {\n            uVar3 = fcn.00401470();\n        }\n    }\n    else if (*param_2 + param_2[1] == uVar3 + piVar5[3]) {\n        piVar5[3] = piVar5[3] - param_2[1];\n    }\n    else {\n        uVar1 = *param_2;\n        uVar2 = param_2[1];\n        iStack20 = (uVar3 + piVar5[3]) - (uVar1 + uVar2);\n        piVar5[3] = *param_2 - uVar3;\n        uVar3 = fcn.00401440(uVar1 + uVar2);\n        if (uVar3 == '\\0') {\n            uVar4 = 0;\n            goto code_r0x00401584;\n        }\n    }\n    uVar4 = CONCAT31(uVar3 >> 8, 1);\n    goto code_r0x00401584;\n}\n",
        "token_count": 496
    },
    "004015f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015f0(int32_t *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    param_1[1] = 0x100000;\n    iVar2 = sub.kernel32.dll_VirtualAlloc();\n    *param_1 = iVar2;\n    if (iVar2 == 0) {\n        param_1[1] = param_2 + 0xffffU & 0xffff0000;\n        iVar2 = sub.kernel32.dll_VirtualAlloc();\n        *param_1 = iVar2;\n    }\n    if (*param_1 != 0) {\n        cVar1 = fcn.00401440();\n        if (cVar1 == '\\0') {\n            sub.kernel32.dll_VirtualFree(*param_1, 0, 0x8000);\n            *param_1 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00401668": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401668(uint32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    \n    uStack28 = 0xffffffff;\n    uStack24 = 0;\n    puVar1 = *0x47d5e4;\n    while (puVar4 = puVar1,  puVar4 != 0x47d5e4) {\n        puVar1 = *puVar4;\n        uVar2 = puVar4[2];\n        if ((in_EAX <= uVar2) && (uVar2 + puVar4[3] <= param_2 + in_EAX)) {\n            if (uVar2 < uStack28) {\n                uStack28 = uVar2;\n            }\n            if (uStack24 < uVar2 + puVar4[3]) {\n                uStack24 = uVar2 + puVar4[3];\n            }\n            iVar3 = sub.kernel32.dll_VirtualFree(uVar2, 0, 0x8000);\n            if (iVar3 == 0) {\n                *0x47d5c0 = 1;\n            }\n            fcn.00401470();\n        }\n    }\n    *param_1 = 0;\n    if (uStack24 != 0) {\n        *param_1 = uStack28;\n        param_1[1] = uStack24 - uStack28;\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00401834": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401834(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iStack24;\n    \n    puVar1 = *0x47d5f4;\n    do {\n        for (; puVar1 != 0x47d5f4; puVar1 = *puVar1) {\n            if ((in_EAX + 0x3fffU & 0xffffc000) <= puVar1[3]) {\n                fcn.00401720();\n                if (*param_2 == 0) {\n                    return;\n                }\n                puVar1[2] = puVar1[2] + param_2[1];\n                puVar1[3] = puVar1[3] - param_2[1];\n                if (puVar1[3] != 0) {\n                    return;\n                }\n                fcn.00401470();\n                return;\n            }\n        }\n        fcn.0040158c();\n        if (*param_2 == 0) {\n            return;\n        }\n        fcn.00401488();\n        puVar1 = *0x47d5f4;\n    } while (iStack24 != 0);\n    fcn.00401668();\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 298
    },
    "004018c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004018c4(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iStack32;\n    int32_t iStack24;\n    \n    uVar2 = param_2 + 0x3fffU & 0xffffc000;\n    puVar1 = *0x47d5f4;\ncode_r0x004018ea:\n    do {\n        for (; (puVar1 != 0x47d5f4 && (in_EAX != puVar1[2])); puVar1 = *puVar1) {\n        }\n        if (in_EAX == puVar1[2]) {\n            if (uVar2 <= puVar1[3]) goto code_r0x00401997;\n            fcn.004015f0();\n            if (iStack32 != 0) {\n                fcn.00401488();\n                puVar1 = *0x47d5f4;\n                if (iStack24 == 0) {\n                    fcn.00401668();\n                    *param_1 = 0;\n                    return;\n                }\n                goto code_r0x004018ea;\n            }\n        }\n        fcn.004015f0();\n        if (iStack32 == 0) {\ncode_r0x00401997:\n            if ((in_EAX != puVar1[2]) || (puVar1[3] < uVar2)) {\n                *param_1 = 0;\n                return;\n            }\n            fcn.00401720();\n            if (*param_1 == 0) {\n                return;\n            }\n            puVar1[2] = puVar1[2] + param_1[1];\n            puVar1[3] = puVar1[3] - param_1[1];\n            if (puVar1[3] != 0) {\n                return;\n            }\n            fcn.00401470();\n            return;\n        }\n        fcn.00401488();\n        puVar1 = *0x47d5f4;\n        if (iStack24 == 0) {\n            fcn.00401668();\n            *param_1 = 0;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 508
    },
    "004019e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004019e8(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iStack28;\n    int32_t iStack20;\n    \n    if ((in_EAX + 0x3fffU & 0xffffc000) < (param_2 + in_EAX & 0xffffc000U)) {\n        fcn.004017b4();\n        fcn.00401488();\n        if (iStack28 != 0) {\n            fcn.00401668();\n            iStack28 = iStack20;\n        }\n        if (iStack28 != 0) {\n            fcn.004014fc();\n        }\n    }\n    else {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00401a74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00401a74(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x401b2a;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    sub.kernel32.dll_InitializeCriticalSection(0x47d5c4);\n    if (*0x47d049 != '\\0') {\n        sub.kernel32.dll_EnterCriticalSection(0x47d5c4);\n    }\n    fcn.00401438();\n    fcn.00401438();\n    fcn.00401438();\n    uVar2 = 0;\n    *0x47d61c = sub.kernel32.dll_LocalAlloc(0, 0xff8);\n    if (*0x47d61c != 0) {\n        iVar1 = 3;\n        do {\n            *(*0x47d61c + -0xc + iVar1 * 4) = 0;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n        *0x47d608 = 0x47d604;\n        *0x47d604 = 0x47d604;\n        *0x47d610 = 0x47d604;\n        *0x47d5bc = 1;\n    }\n    *in_FS_OFFSET = uVar2;\n    if (*0x47d049 != '\\0') {\n        sub.kernel32.dll_LeaveCriticalSection(0x47d5c4, 0x401b31);\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "00401b38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00401b38(void)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint *puVar3;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = &stack0xfffffffc;\n    if (*0x47d5bc == '\\0') {\n        return;\n    }\n    uStack16 = 0x401c0e;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puVar1 = &stack0xfffffffc;\n    if (*0x47d049 != '\\0') {\n        sub.kernel32.dll_EnterCriticalSection(0x47d5c4);\n        puVar1 = puStack12;\n    }\n    puStack12 = puVar1;\n    *0x47d5bc = 0;\n    puVar3 = *0x47d61c;\n    sub.kernel32.dll_LocalFree();\n    *0x47d61c = NULL;\n    for (puVar2 = *0x47d5e4; puVar2 != 0x47d5e4; puVar2 = *puVar2) {\n        puVar3 = puVar2[2];\n        sub.kernel32.dll_VirtualFree();\n    }\n    fcn.00401438();\n    fcn.00401438();\n    fcn.00401438();\n    while (puVar2 = *0x47d5dc,  puVar2 != NULL) {\n        *0x47d5dc = *puVar2;\n        sub.kernel32.dll_LocalFree();\n        puVar3 = puVar2;\n    }\n    *0x47d5dc = puVar2;\n    *in_FS_OFFSET = puVar3;\n    uStack20 = 0x401c15;\n    if (*0x47d049 != '\\0') {\n        sub.kernel32.dll_LeaveCriticalSection(0x47d5c4);\n    }\n    sub.kernel32.dll_DeleteCriticalSection(0x47d5c4);\n    return;\n}\n",
        "token_count": 457
    },
    "00401f08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00401f08(void)\n\n{\n    if (0 < *0x47d614) {\n        if (*0x47d614 < 0xc) {\n            *0x47d5c0 = 7;\n        }\n        else {\n            **0x47d618 = *0x47d614 | 2;\n            fcn.00401cdc();\n            *0x47d618 = NULL;\n            *0x47d614 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00401fe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00401fe0(void)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    uint uStack8;\n    \n    fcn.00401834();\n    if (iStack12 != 0) {\n        uVar1 = fcn.00401f54();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00402007;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00402007:\n    return CONCAT44(uStack8, uVar1);\n}\n",
        "token_count": 136
    },
    "0040200c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0040200c(void)\n\n{\n    uint uVar1;\n    int32_t iStack16;\n    uint uStack12;\n    \n    fcn.004018c4();\n    if (iStack16 != 0) {\n        uVar1 = fcn.00401f54();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00402038;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00402038:\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 137
    },
    "00402160": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t * fcn.00402160(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x47d5bc == '\\0') {\n        puStack28 = 0x402179;\n        cVar2 = fcn.00401a74();\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    if (0x7ffffff8 < in_EAX) {\n        return NULL;\n    }\n    uStack32 = 0x4022dc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (*0x47d049 != '\\0') {\n        uStack40 = 0x47d5c4;\n        puStack28 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    puVar4 = *0x47d618;\n    uVar5 = in_EAX + 7U & 0xfffffffc;\n    if (uVar5 < 0xc) {\n        uVar5 = 0xc;\n    }\n    if (uVar5 < 0x1001) {\n        uVar3 = uVar5;\n        if (uVar5 < 0) {\n            uVar3 = uVar5 + 3;\n        }\n        puVar1 = *(*0x47d61c + -0xc + (uVar3 >> 2) * 4);\n        if (puVar1 != NULL) {\n            *(puVar1 + uVar5) = *(puVar1 + uVar5) & 0xfffffffe;\n            puVar4 = puVar1[1];\n            if (puVar1 == puVar4) {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0x47d61c + -0xc + (uVar3 >> 2) * 4) = 0;\n            }\n            else {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0x47d61c + -0xc + (uVar3 >> 2) * 4) = puVar4;\n                uVar3 = *puVar1;\n                *(uVar3 + 4) = puVar4;\n                *puVar4 = uVar3;\n            }\n            *puVar1 = puVar1[2] | 2;\n            *0x47d5b0 = *0x47d5b0 + 1;\n            *0x47d5b4 = *0x47d5b4 + (uVar5 - 4);\n            fcn.00403d90();\n            return puVar1 + 1;\n        }\n    }\n    if (*0x47d614 < uVar5) {\n        fcn.0040206c();\n        puVar4 = NULL;\n        *in_FS_OFFSET = uStack40;\n        uStack32 = 0x4022e3;\n        if (*0x47d049 != '\\0') {\n            uStack36 = 0x47d5c4;\n            puVar4 = sub.kernel32.dll_LeaveCriticalSection();\n        }\n        return puVar4;\n    }\n    *0x47d614 = *0x47d614 - uVar5;\n    if (*0x47d614 < 0xc) {\n        uVar5 = uVar5 + *0x47d614;\n        *0x47d614 = 0;\n    }\n    *0x47d618 = *0x47d618 + uVar5;\n    *puVar4 = uVar5 | 2;\n    *0x47d5b0 = *0x47d5b0 + 1;\n    *0x47d5b4 = *0x47d5b4 + (uVar5 - 4);\n    fcn.00403d90();\n    return puVar4 + 1;\n}\n",
        "token_count": 988
    },
    "00402664": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00402664(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x47d5bc == '\\0') {\n        puStack24 = 0x40267d;\n        cVar1 = fcn.00401a74();\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n    }\n    uStack28 = 0x402715;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x47d049 != '\\0') {\n        uStack36 = 0x47d5c4;\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    cVar1 = fcn.00402494();\n    if ((cVar1 == '\\0') && (iVar2 = fcn.00402160(),  iVar2 != 0)) {\n        fcn.004028e0();\n        fcn.004022f0();\n    }\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x40271c;\n    if (*0x47d049 != '\\0') {\n        uStack32 = 0x47d5c4;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n    }\n    return uVar3;\n}\n",
        "token_count": 363
    },
    "00402884": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402884(void)\n\n{\n    uint8_t in_AL;\n    \n    if (*0x47d008 != NULL) {\n        (**0x47d008)();\n    }\n    if ((in_AL & 0x7f) == 0) {\n        fcn.00406794();\n    }\n    fcn.0040282c();\n    return;\n}\n",
        "token_count": 81
    },
    "004027b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004027b8(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00406794();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00406794();\n        return *(*piVar1 + 8);\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "004027d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004027d8(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00406794();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00406794();\n        return *(*piVar1 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "00402890": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402865)\n// WARNING: Removing unreachable block (ram,0x0040286a)\n\nvoid __fastcall fcn.00402890(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406794(param_1, param_2);\n    if (*(iVar1 + 4) != 0) {\n        if (*0x47d008 != NULL) {\n            (**0x47d008)();\n        }\n        fcn.00406794();\n        fcn.0040282c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00402954": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402954(uint param_1, ushort param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    uVar1 = *(in_EAX + 4);\n    if ((uVar1 < 0xd7b0) || (0xd7b3 < uVar1)) {\n        iVar2 = 0x66;\n    }\n    else {\n        if (uVar1 != 0xd7b0) {\n            fcn.00402c70();\n        }\n        *(in_EAX + 4) = param_2;\n        if ((*(in_EAX + 0x48) == '\\0') && (*(in_EAX + 0x18) == 0)) {\n            *(in_EAX + 0x18) = 0x402a64;\n        }\n        iVar2 = (**(in_EAX + 0x18))();\n    }\n    if (iVar2 != 0) {\n        fcn.004028b0();\n    }\n    return iVar2;\n}\n",
        "token_count": 240
    },
    "00402f98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402f98(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    while (0x40 < param_2) {\n        param_2 = param_2 + -0x40;\n        fcn.00402f44();\n        iVar2 = fcn.00406794();\n        if (*(iVar2 + 4) != 0) {\n            return in_EAX;\n        }\n    }\n    if (0 < param_2) {\n        puVar3 = 0x402fc8;\n        if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00402f00(param_2, 0x402fc8),  cVar1 != '\\0')) {\n            while( true ) {\n                puVar4 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n                iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n                if (param_2 < iVar2) break;\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n                param_2 = param_2 - iVar2;\n                for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                iVar2 = (**(in_EAX + 0x1c))();\n                if (iVar2 != 0) {\n                    fcn.004028b0();\n                    return in_EAX;\n                }\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_2;\n            for (; param_2 != 0; param_2 = param_2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n        }\n        return in_EAX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 509
    },
    "004035e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004035e4(int32_t **param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x403668;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = NULL;\n    iVar1 = fcn.00403678();\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x14) == 0) {\n            fcn.004035b4();\n            fcn.00406148();\n        }\n        else {\n            *param_1 = in_EAX + *(iVar1 + 0x14);\n            if (*param_1 != NULL) {\n                (**(**param_1 + 4))(*param_1);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40366f;\n    uStack32 = 0x403667;\n    fcn.00406130();\n    return;\n}\n",
        "token_count": 282
    },
    "0040372c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040372c(uint param_1, uint param_2)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    uchar in_ZF;\n    \n    fcn.004036fc(param_1);\n    if (!in_ZF) {\n    // WARNING: Could not recover jumptable at 0x00403739. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    if (*0x47d028 != NULL) {\n        (**0x47d028)();\n    }\n    *0x46f004 = param_2;\n    *0x46f000 = 0xd2;\n    fcn.00404194();\n    return;\n}\n",
        "token_count": 169
    },
    "00403910": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403910(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x46f014 != '\\0') {\n        auStack12[0] = param_2;\n        (**0x47d014)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00404108": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404108(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x47d048 != '\\0') {\n        if ((*0x47d21c == -0x284e) && (*0x47d224 != 0)) {\n            uStack8 = 0x404131;\n            (**0x47d234)();\n        }\n        puStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        uStack16 = 0x1e;\n        uStack20 = 0x46f054;\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x404146;\n        uStack28 = sub.kernel32.dll_GetStdHandle();\n        sub.kernel32.dll_WriteFile();\n        uVar1 = sub.kernel32.dll_GetStdHandle(0xfffffff5, 0x404190, 2, &stack0xffffffe4, 0);\n        sub.kernel32.dll_WriteFile(uVar1);\n        return;\n    }\n    if (*0x46f01c == '\\0') {\n        uStack8 = 0;\n        puStack12 = 0x46f074;\n        uStack16 = 0x46f054;\n        uStack20 = 0;\n        uStack24 = 0x404185;\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "00404194": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404194(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0x47d658 == 0) && (*0x47d044 != NULL)) {\n        do {\n            pcVar1 = *0x47d044;\n            *0x47d044 = NULL;\n            (*pcVar1)();\n        } while (*0x47d044 != NULL);\n    }\n    if (*0x46f004 != 0) {\n        fcn.0040407c();\n        fcn.00404108();\n        *0x46f004 = 0;\n    }\n    do {\n        if ((*0x47d658 == 2) && (*0x46f000 == 0)) {\n            *0x47d63c = 0;\n        }\n        fcn.00403f30();\n        if (((*0x47d658 < 2) || (*0x46f000 != 0)) && (*0x47d640 != 0)) {\n            fcn.004060c0();\n            iVar2 = *(*0x47d640 + 0x10);\n            if ((iVar2 != *(*0x47d640 + 4)) && (iVar2 != 0)) {\n                sub.kernel32.dll_FreeLibrary(iVar2);\n            }\n        }\n        fcn.00403f08();\n        if (*0x47d658 == 1) {\n            (**0x47d654)();\n        }\n        if (*0x47d658 != 0) {\n            fcn.004040d8();\n        }\n        if (*0x47d630 == NULL) {\n            if (*0x47d024 != NULL) {\n                (**0x47d024)();\n            }\n            sub.kernel32.dll_ExitProcess(*0x46f000);\n        }\n        puVar3 = *0x47d630;\n        puVar4 = 0x47d630;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 503
    },
    "00404dfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402858)\n\nvoid __fastcall fcn.00404dfc(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00404308();\n            }\n            else {\n                fcn.0040432c();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.004049f8();\n            }\n            else {\n                fcn.00404a10();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00405368();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00404dfc();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00404dc8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00406130();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x47d008 != NULL) {\n                    (**0x47d008)();\n                }\n                fcn.0040282c();\n                return;\n            }\n            do {\n                fcn.00405a78();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "00405984": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405984(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *puVar3;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = NULL;\n    if (in_EAX != 0) {\n        if (in_ECX < 0) {\n            arg_ch = arg_ch + in_ECX;\n            in_ECX = 0;\n        }\n        iVar1 = *(in_EAX + -4);\n        if (iVar1 < in_ECX) {\n            in_ECX = iVar1;\n        }\n        if (iVar1 - in_ECX < arg_ch) {\n            arg_ch = iVar1 - in_ECX;\n        }\n        if (arg_ch < 0) {\n            arg_ch = 0;\n        }\n        if (0 < arg_ch) {\n            piVar2 = *(in_EDX + *(in_EDX + 1) + 6);\n            if (piVar2 == NULL) {\n                var_10h = 0;\n            }\n            else {\n                var_10h = *piVar2;\n            }\n            puVar3 = fcn.00402728();\n            *puVar3 = 1;\n            puVar3[1] = arg_ch;\n            puVar3 = puVar3 + 2;\n            if (0 < arg_ch) {\n                if (var_10h == 0) {\n                    fcn.004028e0();\n                }\n                else {\n                    fcn.00402e14();\n                    fcn.004057ac(arg_ch);\n                }\n            }\n        }\n    }\n    fcn.004057c4();\n    *arg_8h = puVar3;\n    return;\n}\n",
        "token_count": 427
    },
    "00405b18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00405b18(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack272 [264];\n    \n    if (*(in_EAX + 0x10) == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(*(in_EAX + 4), auStack272, 0x105);\n        iVar1 = fcn.00405d54();\n        *(in_EAX + 0x10) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = *(in_EAX + 4);\n        }\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 153
    },
    "00405b9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar * __cdecl\nfcn.00405b9c(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_5ch)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    code *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint in_EDX;\n    uint *puVar6;\n    uint lpFileName;\n    uint lpFindFileData;\n    uint lpString2;\n    char *var_ch;\n    uint iMaxLength;\n    char *lpString1;\n    \n    var_ch = in_EAX;\n    iMaxLength = in_EDX;\n    lpString1 = in_EAX;\n    iVar1 = sub.kernel32.dll_GetModuleHandleA(0x405d30);\n    if (((iVar1 == 0) || (pcVar2 = sub.kernel32.dll_GetProcAddress(iVar1, 0x405d40),  pcVar2 == NULL)) ||\n       (iVar1 = (*pcVar2)(lpString1, &lpFileName, 0x105),  iVar1 == 0)) {\n        if (*lpString1 == '\\\\') {\n            if (lpString1[1] != '\\\\') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00405b88();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00405b88();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n        }\n        else {\n            pcVar3 = lpString1 + 2;\n        }\n        iVar1 = pcVar3 - lpString1;\n        puVar6 = &lpFileName;\n        sub.kernel32.dll_lstrcpynA(puVar6, lpString1, iVar1 + 1);\n        while (*pcVar3 != '\\0') {\n            pcVar4 = fcn.00405b88();\n            if (0x105 < pcVar4 + (iVar1 - pcVar3) + 1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar1, pcVar3, pcVar4 + (1 - pcVar3));\n            iVar5 = sub.kernel32.dll_FindFirstFileA(&lpFileName, &lpFindFileData);\n            if (iVar5 == -1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_FindClose(iVar5);\n            iVar5 = sub.kernel32.dll_lstrlenA(&lpString2);\n            if (0x105 < iVar5 + iVar1 + 2) {\n                return var_ch;\n            }\n            *(&lpFileName + iVar1) = 0x5c;\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar1 + 1, &lpString2, 0x104 - iVar1);\n            puVar6 = &lpString2;\n            iVar5 = sub.kernel32.dll_lstrlenA();\n            iVar1 = iVar1 + iVar5 + 1;\n            pcVar3 = pcVar4;\n        }\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength, puVar6);\n    }\n    else {\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength);\n    }\n    return var_ch;\n}\n",
        "token_count": 847
    },
    "00405d54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00405d54(void)\n\n{\n    uint noname_0;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint *in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint *noname_12;\n    uint uVar5;\n    uint noname_14;\n    uint noname_15;\n    uint noname_16;\n    uint noname_18;\n    uint *noname_19;\n    uint noname_20;\n    uint lpLibFileName;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint hKey;\n    uint lpString2;\n    \n    noname_20 = 0x105;\n    noname_19 = &fcn.00405d54::lpLibFileName;\n    noname_18 = 0;\n    sub.kernel32.dll_GetModuleFileNameA();\n    var_12h._0_1_ = '\\0';\n    puVar3 = &fcn.00405d54::hKey;\n    noname_16 = 0xf0019;\n    noname_15 = 0;\n    noname_14 = 0x405f84;\n    uVar5 = 0x80000001;\n    noname_12 = 0x405d93;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 != 0) {\n        noname_12 = &fcn.00405d54::hKey;\n        in_stack_fffffeac = 0xf0019;\n        in_stack_fffffea8 = 0;\n        in_stack_fffffea4 = 0x405f84;\n        in_stack_fffffea0 = 0x80000002;\n        in_stack_fffffe9c = 0x405db1;\n        iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n        if (iVar1 != 0) {\n            in_stack_fffffe9c = &fcn.00405d54::hKey;\n            in_stack_fffffe98 = 0xf0019;\n            in_stack_fffffe94 = 0;\n            in_stack_fffffe90 = 0x405fa0;\n            in_stack_fffffe8c = 0x80000001;\n            iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n            if (iVar1 != 0) {\n                sub.kernel32.dll_lstrcpynA();\n                uVar5 = sub.kernel32.dll_GetThreadLocale(3, &fcn.00405d54::var_eh + 1, 5);\n                sub.kernel32.dll_GetLocaleInfoA(uVar5);\n                iVar1 = 0;\n                if ((lpLibFileName != '\\0') && ((var_eh._1_1_ != '\\0' || (var_12h != '\\0')))) {\n                    iVar2 = sub.kernel32.dll_lstrlenA(&fcn.00405d54::lpLibFileName);\n                    for (puVar3 = &fcn.00405d54::lpLibFileName + iVar2;\n                        (*puVar3 != '.' && (puVar3 != &fcn.00405d54::lpLibFileName)); puVar3 = puVar3 + -1) {\n                    }\n                    if (puVar3 != &fcn.00405d54::lpLibFileName) {\n                        pcVar4 = puVar3 + 1;\n                        if (var_12h != '\\0') {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00405d54::var_12h, 0x105 - (pcVar4 - &fcn.00405d54::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00405d54::lpLibFileName, 0, 2);\n                        }\n                        if ((iVar1 == 0) && (var_eh._1_1_ != '\\0')) {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00405d54::var_eh + 1, \n                                       0x105 - (pcVar4 - &fcn.00405d54::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00405d54::lpLibFileName, 0, 2);\n                            if (iVar1 == 0) {\n                                var_eh._3_1_ = 0;\n                                sub.kernel32.dll_lstrcpynA\n                                          (pcVar4, &fcn.00405d54::var_eh + 1, \n                                           0x105 - (pcVar4 - &fcn.00405d54::lpLibFileName));\n                                iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00405d54::lpLibFileName, 0, 2);\n                            }\n                        }\n                    }\n                }\n                return iVar1;\n            }\n        }\n    }\n    noname_0 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe80;\n    var_18h = 5;\n    fcn.00405b9c(noname_0, 0x405e59, &stack0xfffffffc, in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, \n                 in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, \n                 in_stack_fffffeac, noname_12, uVar5, noname_14, noname_15, noname_16, puVar3, noname_18, noname_19, \n                 noname_20, unaff_ESI);\n    iVar1 = sub.advapi32.dll_RegQueryValueExA\n                      (hKey, &fcn.00405d54::lpLibFileName, 0, 0, &fcn.00405d54::var_12h, &fcn.00405d54::var_18h);\n    if (iVar1 != 0) {\n        in_stack_fffffe50 = hKey;\n        iVar1 = sub.advapi32.dll_RegQueryValueExA(hKey, 0x405fc0, 0, 0, &fcn.00405d54::var_12h, &fcn.00405d54::var_18h);\n        if (iVar1 != 0) {\n            var_12h._0_1_ = '\\0';\n        }\n    }\n    var_eh._0_1_ = 0;\n    *in_FS_OFFSET = in_stack_fffffe50;\n    iVar1 = sub.advapi32.dll_RegCloseKey(hKey, 0x405e60);\n    return iVar1;\n}\n",
        "token_count": 1589
    },
    "00406054": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406054(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x46f028;\n    if (*0x46f028 != NULL) {\n        do {\n            uStack32 = 0x40608f;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0040623c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040623c(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 654
    },
    "00406318": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406318(uint32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX == 0) {\n        var_10h = 0;\n    }\n    else {\n        uVar3 = 0;\n        uVar5 = 0;\n        if (in_EAX == 0) {\n            do {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) != 0) {\n                    if ((uVar2 & 0xf0) == 0xf0) {\n                        return -1;\n                    }\n                    if ((uVar2 & 0x40) == 0) {\n                        return -1;\n                    }\n                    if (arg_8h < uVar6) {\n                        return -1;\n                    }\n                    if ((*(in_ECX + uVar6) & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    if (arg_8h < uVar5 + 2) {\n                        return -1;\n                    }\n                    if (((uVar2 & 0x20) != 0) && ((*(in_ECX + uVar5 + 2) & 0xc0) != 0x80)) {\n                        return -1;\n                    }\n                    uVar6 = uVar5 + 3;\n                }\n                uVar3 = uVar3 + 1;\n                uVar5 = uVar6;\n            } while (uVar6 <= arg_8h);\n        }\n        else {\n            for (; (uVar5 < arg_8h && (uVar3 < in_EDX)); uVar3 = uVar3 + 1) {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) == 0) {\n                    *(in_EAX + uVar3 * 2) = uVar2;\n                }\n                else {\n                    uVar4 = uVar2 & 0x3f;\n                    if (arg_8h < uVar6) {\n                        return -1;\n                    }\n                    if ((uVar2 & 0x20) != 0) {\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar5 + 2;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                        if (arg_8h < uVar6) {\n                            return -1;\n                        }\n                        uVar4 = *puVar1 & 0x3f | uVar4 << 6;\n                    }\n                    puVar1 = in_ECX + uVar6;\n                    uVar6 = uVar6 + 1;\n                    if ((*puVar1 & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    *(in_EAX + uVar3 * 2) = *puVar1 & 0x3f | uVar4 << 6;\n                }\n                uVar5 = uVar6;\n            }\n            if (in_EDX <= uVar3) {\n                uVar3 = in_EDX - 1;\n            }\n            *(in_EAX + uVar3 * 2) = 0;\n        }\n        var_10h = uVar3 + 1;\n    }\n    return var_10h;\n}\n",
        "token_count": 861
    },
    "004072d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004072d8(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    iVar1 = sub.user32.dll_FindWindowA(0x407388, 0x407374);\n    uVar2 = sub.user32.dll_RegisterWindowMessageA(0x407390);\n    *in_EAX = uVar2;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x4073a0);\n    *in_EDX = iVar3;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x4073b8);\n    *in_ECX = iVar3;\n    if ((*in_EDX == 0) || (iVar1 == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_EDX, 0, 0);\n        *arg_ch = uVar2;\n    }\n    if ((*in_ECX == 0) || (iVar1 == 0)) {\n        *arg_8h = 3;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_ECX, 0, 0);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 339
    },
    "0040cb28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040cb28(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack16 = 0x40cb3f;\n    var_4h = in_EAX;\n    fcn.0040c614();\n    uStack20 = 0x40cbad;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *(var_8h + 0xc) = *(var_8h + 0xc) + -1;\n    if (*(var_8h + 0xc) == 0) {\n        puStack16 = &stack0xfffffffc;\n        fcn.0040c714();\n        iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n        if (iVar1 != *(var_4h + 0x24)) {\n            iVar1 = fcn.0040c530();\n            if (iVar1 == 0xffff) {\n                fcn.0040c8b4();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40cbb4;\n    uStack20 = 0x40cbac;\n    fcn.0040c68c();\n    return;\n}\n",
        "token_count": 323
    },
    "0040c8e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040c8e0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x40c8f1;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (*(in_EAX + 0x24) != iVar1) {\n        puStack32 = 0x40c90b;\n        fcn.0040c89c();\n        puStack32 = 0x40c922;\n        fcn.0040c614();\n        uStack36 = 0x40c968;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        if (*(var_8h + 0xc) != 0) {\n            puStack32 = &stack0xfffffffc;\n            fcn.0040c530();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x40c990;\n        uStack36 = 0x40c967;\n        uVar2 = fcn.0040c68c();\n        return uVar2;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return 1;\n}\n",
        "token_count": 345
    },
    "0040c9e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c9e0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack16 = 0x40c9f7;\n    var_4h = in_EAX;\n    fcn.0040c614();\n    uStack20 = 0x40ca76;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *(var_4h + 0x1c) = *(var_4h + 0x1c) + -1;\n    puStack16 = &stack0xfffffffc;\n    if (*(var_4h + 0x1c) == 0) {\n        *(var_4h + 0x24) = 0;\n        puStack16 = &stack0xfffffffc;\n        fcn.0040c550();\n        fcn.0040c8b4();\n        uStack28 = 0;\n        sub.kernel32.dll_Sleep_1();\n        fcn.0040c8a8();\n    }\n    if (*(var_8h + 0xc) == 0) {\n        fcn.0040c714();\n    }\n    *in_FS_OFFSET = uStack28;\n    uStack20 = 0x40ca7d;\n    uStack24 = 0x40ca75;\n    fcn.0040c68c();\n    return;\n}\n",
        "token_count": 356
    },
    "004088bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004088bc(void)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    \n    uVar1 = fcn.00402e34();\n    if (iStack20 != 0) {\n        fcn.0040834c();\n    }\n    return uVar1;\n}\n",
        "token_count": 68
    },
    "004088f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004088f8(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402e34();\n    if (param_1 != 0) {\n        uVar1 = param_2;\n    }\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 79
    },
    "00408e9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408f6b)\n\nvoid __cdecl fcn.00408e9c(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    char *in_ECX;\n    char *pcVar3;\n    char *extraout_ECX;\n    char *extraout_ECX_00;\n    char *extraout_ECX_01;\n    char *pcVar4;\n    int32_t in_EDX;\n    char *extraout_EDX;\n    char *extraout_EDX_00;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint unaff_ESI;\n    char *pcVar8;\n    uint unaff_EDI;\n    bool bVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = in_ECX + arg_10h;\ncode_r0x00408ec5:\n    pcVar4 = in_ECX;\n    if (in_EDX != 0) {\n        do {\n            if (pcVar4 == pcVar3) break;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar7 = pcVar5;\n            if (cVar1 == '%') {\n                if (pcVar5 == pcVar3) break;\n                pcVar7 = pcVar4 + 2;\n                cVar1 = *pcVar5;\n                if (cVar1 != '%') goto code_r0x00408eef;\n            }\n            *in_EAX = cVar1;\n            in_EDX = in_EDX + -1;\n            pcVar4 = pcVar7;\n            in_EAX = in_EAX + 1;\n            if (in_EDX == 0) break;\n        } while( true );\n    }\ncode_r0x004092a0:\n    fcn.00409290();\n    return;\ncode_r0x00408eef:\n    in_ECX = pcVar7;\n    if (cVar1 == '-') {\n        if (pcVar7 == pcVar3) goto code_r0x004092a0;\n        in_ECX = pcVar7 + 1;\n    }\n    cVar2 = fcn.00408f7e(unaff_EDI, unaff_ESI);\n    pcVar3 = extraout_ECX;\n    if (cVar2 != ':') goto code_r0x00408f0e;\n    if (in_ECX == extraout_ECX) goto code_r0x004092a0;\n    pcVar7 = in_ECX + 1;\n    cVar1 = *in_ECX;\n    goto code_r0x00408eef;\ncode_r0x00408f0e:\n    pcVar5 = extraout_EDX;\n    if (cVar2 == '.') {\n        if (in_ECX == extraout_ECX) goto code_r0x004092a0;\n        in_ECX = in_ECX + 1;\n        fcn.00408f7e(unaff_EDI, unaff_ESI);\n        pcVar3 = extraout_ECX_00;\n        pcVar5 = extraout_EDX_00;\n    }\n    fcn.00408fc6(pcVar5, pcVar3);\n    pcVar7 = pcVar4 + -extraout_ECX_01;\n    if (pcVar4 < extraout_ECX_01) {\n        pcVar7 = NULL;\n    }\n    pcVar4 = extraout_ECX_01;\n    pcVar8 = in_ECX;\n    if (cVar1 == '-') {\n        bVar9 = pcVar5 < extraout_ECX_01;\n        pcVar5 = pcVar5 + -extraout_ECX_01;\n        if (bVar9) {\n            pcVar4 = extraout_ECX_01 + pcVar5;\n            pcVar5 = NULL;\n        }\n        for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n            *in_EAX = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    pcVar6 = pcVar5 + -pcVar7;\n    if (pcVar5 < pcVar7) {\n        pcVar7 = pcVar7 + pcVar6;\n        pcVar6 = NULL;\n    }\n    for (; pcVar7 != NULL; pcVar7 = pcVar7 + -1) {\n        *in_EAX = ' ';\n        in_EAX = in_EAX + 1;\n    }\n    in_EDX = pcVar6 - pcVar4;\n    if (pcVar6 < pcVar4) {\n        pcVar4 = pcVar4 + in_EDX;\n        in_EDX = 0;\n    }\n    for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n        *in_EAX = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    goto code_r0x00408ec5;\n}\n",
        "token_count": 1193
    },
    "00408f7e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408f7e(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t in_AL;\n    uint8_t *in_ECX;\n    int32_t unaff_EBP;\n    uint8_t *unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_AL == 0x2a) {\n        if (*(unaff_EBP + -0xc) < *(unaff_EBP + 8) || *(unaff_EBP + -0xc) == *(unaff_EBP + 8)) {\n            *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n        }\n        if (unaff_ESI == in_ECX) {\ncode_r0x004092a0:\n            fcn.00409290();\n            return;\n        }\n    }\n    else {\n        while ((0x2f < in_AL && (in_AL < 0x3a))) {\n            if (unaff_ESI == in_ECX) goto code_r0x004092a0;\n            in_AL = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "00409448": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00409448(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char in_CL;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_2ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x13;\n    if (in_CL == '\\0') {\n        iVar1 = arg_ch;\n        if (arg_ch < 2) {\n            iVar1 = 2;\n        }\n        if (0x12 < iVar1) {\n            iVar1 = 0x12;\n        }\n    }\n    uVar2 = 9999;\n    if (1 < arg_10h) {\n        uVar2 = arg_8h;\n    }\n    fcn.00409720(uVar2, iVar1);\n    puVar5 = in_EAX;\n    if (var_2ch - 0x7fff < 2) {\n        fcn.00409547();\n        puVar4 = extraout_ECX * 3 + 0x409538;\n        for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        uVar3 = arg_10h;\n        if ((arg_10h != 1) && ((4 < arg_10h || (iVar1 < var_2ch)))) {\n            uVar3 = 0;\n        }\n        (**(uVar3 * 4 + 0x409524))();\n    }\n    return puVar5 - in_EAX;\n}\n",
        "token_count": 440
    },
    "00409547": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00409547(void)\n\n{\n    int32_t unaff_EBP;\n    uchar *unaff_EDI;\n    uint var_2ah;\n    \n    if (*(unaff_EBP + -0x2a) != '\\0') {\n        *unaff_EDI = 0x2d;\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00409720": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409720(char param_1)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        fcn.0040974d(unaff_EBX, unaff_ESI);\n    }\n    else {\n        fcn.0040986f(unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0040974d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040974d(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    float10 fVar2;\n    int16_t *piVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint8_t uVar8;\n    int32_t iVar7;\n    ushort *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t *piVar9;\n    float10 fVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(unaff_ESI + 2);\n    uVar5 = uVar6 & 0x7fff;\n    if ((uVar6 & 0x7fff) == 0) {\ncode_r0x00409778:\n        uVar6 = 0;\n    }\n    else {\n        if (uVar5 != 0x7fff) {\n            *(unaff_EBP + -8) = ((uVar5 - 0x3fff) * 0x4d10 >> 0x10) + 1;\n            fVar10 = fcn.00403088();\n            fVar10 = ROUND(fVar10);\n            fVar2 = *(*(unaff_EBP + -4) + 0x46f14c);\n            *(unaff_EBP + -10) = (fVar2 < fVar10) << 8 | (fVar2 == fVar10) << 0xe;\n            if ((*(unaff_EBP + -10) & 0x4100) != 0) {\n                fVar10 = fVar10 / *(*(unaff_EBP + -4) + 0x46f158);\n                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n            }\n            *(unaff_EBP + -0x18) = fVar10;\n            iVar7 = 9;\n            piVar9 = unaff_EBX + 3;\n            do {\n                uVar8 = *(iVar7 + -0x19 + unaff_EBP);\n                piVar3 = piVar9 + 1;\n                *piVar9 = (CONCAT11(uVar8, uVar8 >> 4) & 0xfff) + 0x3030;\n                iVar7 = iVar7 + -1;\n                piVar9 = piVar3;\n            } while (iVar7 != 0);\n            *piVar3 = 0;\n            uVar5 = *(unaff_EBP + -8) + *(unaff_EBP + 8);\n            if (uVar5 < 0) {\n                uVar5 = 0;\n                goto code_r0x00409778;\n            }\n            if (*(unaff_EBP + 0xc) <= uVar5) {\n                uVar5 = *(unaff_EBP + 0xc);\n            }\n            if (uVar5 < 0x12) {\n                if (*(unaff_EBX + uVar5 + 3) < 0x35) goto code_r0x0040983a;\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        *(unaff_EBX + 3) = 0x31;\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        break;\n                    }\n                    pcVar1 = unaff_EBX + uVar5 + 2;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (0x39 < *(unaff_EBX + iVar7));\n            }\n            else {\n                uVar5 = 0x12;\ncode_r0x0040983a:\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        uVar8 = 0;\n                        goto code_r0x0040984d;\n                    }\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (*(unaff_EBX + iVar7) == '0');\n            }\n            uVar8 = *(unaff_ESI + 2) >> 8;\ncode_r0x0040984d:\n            uVar4 = *(unaff_EBP + -8);\n            goto code_r0x00409850;\n        }\n        if (((*(unaff_ESI + 6) & 0x8000) != 0) && ((*unaff_ESI != 0 || (unaff_ESI[1] != -0x80000000)))) {\n            uVar5 = 0x8000;\n            goto code_r0x00409778;\n        }\n    }\n    uVar8 = uVar6 >> 8;\n    uVar4 = uVar5;\n    *(unaff_EBX + 3) = 0;\ncode_r0x00409850:\n    *unaff_EBX = uVar4;\n    *(unaff_EBX + 1) = uVar8 >> 7;\n    return;\n}\n",
        "token_count": 1175
    },
    "00409e90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e90(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x13) == '\\0') {\n        fcn.00409d1c(*(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x13) = 1;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00409ec8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409ec8(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x1d) == '\\0') {\n        fcn.00409a40(arg_8h + -0x1c, *(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x1d) = 1;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0040a178": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a178(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    uint8_t *in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint *in_FS_OFFSET;\n    uint uVar8;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_1dh;\n    int16_t var_18h;\n    uint16_t var_16h;\n    uint var_13h;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x40a8d7;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((in_EAX != NULL) && (*(arg_8h + -0x108) < 2)) {\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + 1;\n        uVar7 = 0x20;\n        var_4h = in_EAX;\n        while (uVar1 = *var_4h,  uVar1 != 0) {\n            var_4h = fcn.0040bc18();\n            if ((*((uVar1 >> 3) + 0x46f0f0) >> (uVar1 & 7) & 1) == 0) {\n                uVar3 = uVar1;\n                if (uVar1 + 0x9f < 0x1a) {\n                    uVar3 = uVar1 - 0x20;\n                }\n                uVar6 = uVar7;\n                if (((uVar3 + 0xbf < 0x1a) && (uVar6 = uVar3,  uVar3 == 0x4d)) && (uVar7 == 0x48)) {\n                    uVar3 = 0x4e;\n                    uVar6 = uVar3;\n                }\n                uVar7 = uVar6;\n    // switch table (16 cases) at 0x40a272\n                switch(uVar3) {\n                case 0x22:\n                case 0x27:\n                    while( true ) {\n                        uVar3 = *var_4h;\n                        if ((uVar3 == 0) || (uVar3 == uVar1)) break;\n                        if ((*((uVar3 >> 3) + 0x46f0f0) >> (uVar3 & 7) & 1) == 0) {\n                            var_4h = var_4h + 1;\n                        }\n                        else {\n                            var_4h = fcn.0040bc18();\n                        }\n                    }\n                    fcn.00409db4(arg_8h);\n                    if (*var_4h != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    break;\n                default:\n                    fcn.00409db4(arg_8h);\n                    break;\n                case 0x2f:\n                    if (*0x47d739 != '\\0') {\n                        fcn.00409db4(arg_8h);\n                    }\n                    break;\n                case 0x3a:\n                    if (*0x47d744 != '\\0') {\n                        fcn.00409db4(arg_8h);\n                    }\n                    break;\n                case 0x41:\n                    fcn.00409ec8(&stack0xfffffffc);\n                    iVar5 = fcn.00408d10();\n                    if (iVar5 == 0) {\n                        fcn.00409db4(arg_8h);\n                        var_4h = var_4h + 4;\n                    }\n                    else {\n                        iVar5 = fcn.00408d10();\n                        if (iVar5 == 0) {\n                            fcn.00409db4(arg_8h);\n                            var_4h = var_4h + 2;\n                        }\n                        else {\n                            iVar5 = fcn.00408d10();\n                            if (iVar5 == 0) {\n                                if (var_16h < 0xc) {\n                                    fcn.00409df8(arg_8h);\n                                }\n                                else {\n                                    fcn.00409df8(arg_8h);\n                                }\n                                var_4h = var_4h + 3;\n                            }\n                            else {\n                                iVar5 = fcn.00408d10();\n                                if (iVar5 == 0) {\n                                    fcn.00409e90(&stack0xfffffffc);\n                                    uVar8 = *(arg_8h + 8);\n                                    fcn.00409d3c(uVar8, *(arg_8h + 0xc));\n                                    fcn.00409df8(uVar8);\n                                    var_4h = var_4h + 3;\n                                }\n                                else {\n                                    iVar5 = fcn.00408d10();\n                                    if (iVar5 == 0) {\n                                        fcn.00409e90(&stack0xfffffffc);\n                                        uVar8 = *(arg_8h + 8);\n                                        fcn.00409d3c(uVar8, *(arg_8h + 0xc));\n                                        fcn.00409df8(uVar8);\n                                        var_4h = var_4h + 2;\n                                    }\n                                    else {\n                                        fcn.00409db4(arg_8h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 0x43:\n                    fcn.00409e64(&stack0xfffffffc);\n                    fcn.0040a178(arg_8h);\n                    fcn.00409ec8(&stack0xfffffffc);\n                    if (((var_16h != 0) || (var_18h != 0)) || (stack0xffffffe2 != 0)) {\n                        fcn.00409db4(arg_8h);\n                        fcn.0040a178(arg_8h);\n                    }\n                    break;\n                case 0x44:\n                    fcn.00409e64(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.00409e90(&stack0xfffffffc);\n                        fcn.00409e18(arg_8h);\n                    }\n                    else if (var_ch == 3) {\n                        uVar8 = *(arg_8h + 8);\n                        fcn.00409d3c(uVar8, *(arg_8h + 0xc));\n                        fcn.00409df8(uVar8);\n                    }\n                    else if (var_ch == 4) {\n                        uVar8 = *(arg_8h + 8);\n                        fcn.00409d3c(uVar8, *(arg_8h + 0xc));\n                        fcn.00409df8(uVar8);\n                    }\n                    else if (var_ch == 5) {\n                        fcn.0040a178(arg_8h);\n                    }\n                    else {\n                        fcn.0040a178(arg_8h);\n                    }\n                    break;\n                case 0x45:\n                    fcn.00409e64(&stack0xfffffffc);\n                    fcn.00409e90(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0040a070(&stack0xfffffffc);\n                    fcn.00409df8(iVar5);\n                    break;\n                case 0x47:\n                    fcn.00409e64(&stack0xfffffffc);\n                    fcn.00409e90(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.00409f08(&stack0xfffffffc);\n                    fcn.00409df8(iVar5);\n                    break;\n                case 0x48:\n                    fcn.00409e64(&stack0xfffffffc);\n                    fcn.00409ec8(&stack0xfffffffc);\n                    bVar2 = false;\n                    puVar4 = var_4h;\n                    while (uVar1 = *puVar4,  uVar1 != 0) {\n                        if ((*((uVar1 >> 3) + 0x46f0f0) >> (uVar1 & 7) & 1) == 0) {\n                            uVar1 = *puVar4;\n                            if (uVar1 < 0x49) {\n                                if (uVar1 == 0x48) break;\n                                if ((uVar1 == 0x22) || (uVar1 == 0x27)) {\n                                    bVar2 = bVar2 ^ 1;\n                                }\n                                else if (uVar1 == 0x41) goto code_r0x0040a4c8;\n                            }\n                            else if (uVar1 == 0x61) {\ncode_r0x0040a4c8:\n                                if (!bVar2) {\n                                    iVar5 = fcn.00408d10();\n                                    if ((iVar5 != 0) && (iVar5 = fcn.00408d10(),  iVar5 != 0)) {\n                                        fcn.00408d10();\n                                    }\n                                    break;\n                                }\n                            }\n                            else if (uVar1 == 0x68) break;\n                            puVar4 = puVar4 + 1;\n                        }\n                        else {\n                            puVar4 = fcn.0040bc18();\n                        }\n                    }\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.00409e18(arg_8h);\n                    break;\n                case 0x4d:\n                    fcn.00409e64(&stack0xfffffffc);\n                    fcn.00409e90(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.00409e18(arg_8h);\n                    }\n                    else if (var_ch - 1U == 2) {\n                        fcn.00409df8(arg_8h);\n                    }\n                    else {\n                        fcn.00409df8(arg_8h);\n                    }\n                    break;\n                case 0x4e:\n                    fcn.00409e64(&stack0xfffffffc);\n                    fcn.00409ec8(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.00409e18(arg_8h);\n                    break;\n                case 0x53:\n                    fcn.00409e64(&stack0xfffffffc);\n                    fcn.00409ec8(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.00409e18(arg_8h);\n                    break;\n                case 0x54:\n                    fcn.00409e64(&stack0xfffffffc);\n                    if (var_ch == 1) {\n                        fcn.0040a178(arg_8h);\n                    }\n                    else {\n                        fcn.0040a178(arg_8h);\n                    }\n                    break;\n                case 0x59:\n                    fcn.00409e64(&stack0xfffffffc);\n                    fcn.00409e90(&stack0xfffffffc);\n                    if (var_ch < 3) {\n                        fcn.00409e18(arg_8h);\n                    }\n                    else {\n                        fcn.00409e18(arg_8h);\n                    }\n                    break;\n                case 0x5a:\n                    fcn.00409e64(&stack0xfffffffc);\n                    fcn.00409ec8(&stack0xfffffffc);\n                    if (3 < var_ch) {\n                        var_ch = 3;\n                    }\n                    fcn.00409e18(arg_8h);\n                }\n            }\n            else {\n                uVar7 = 0x20;\n            }\n        }\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + -1;\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x40a8de;\n    uStack60 = 0x40a8d6;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 2708
    },
    "0040aa38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aa38(int32_t *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.0040a9c4(arg_8h);\n    if (*arg_8h == 0) {\n        fcn.004065fc();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0040ab98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ab98(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    while( true ) {\n        if (*(iVar1 * 4 + 0x47d7fc) == 0) {\n            fcn.004044f8();\n            return 1;\n        }\n        if (iVar1 == 7) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 106
    },
    "0040b0b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040b0b8(void)\n\n{\n    uint uVar1;\n    uchar *puStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint uStack1108;\n    uchar *puStack1104;\n    uint uStack1100;\n    uchar auStack1092 [48];\n    uchar auStack1044 [16];\n    uchar auStack1028 [1028];\n    \n    puStack1104 = &stack0xfffffbb8;\n    uStack1100 = 0x40b0cc;\n    fcn.0040af30(0x400);\n    if (**0x47c150 == '\\0') {\n        uStack1100 = 0x40;\n        puStack1104 = &stack0xfffffbbc;\n        uStack1108 = *(*0x47be48 + 4);\n        puStack1112 = 0x40b13a;\n        puStack1112 = fcn.00405b60();\n        uStack1116 = 0x40b140;\n        sub.user32.dll_LoadStringA_1();\n        uStack1116 = 0x2010;\n        puStack1120 = &stack0xfffffbac;\n        sub.user32.dll_MessageBoxA_1(0, &stack0xfffffbec);\n    }\n    else {\n        uStack1100 = 0x40b0e0;\n        fcn.00402c58();\n        uStack1100 = 0;\n        uStack1108 = 0x40b0f0;\n        uStack1108 = fcn.00408bd0();\n        puStack1112 = &stack0xfffffbfc;\n        uStack1116 = 0xfffffff5;\n        puStack1120 = 0x40b0fd;\n        puStack1120 = sub.kernel32.dll_GetStdHandle_1();\n        sub.kernel32.dll_WriteFile_1();\n        uVar1 = sub.kernel32.dll_GetStdHandle_1(0xfffffff5, 0x40b168, 2, &stack0xfffffba0, 0);\n        sub.kernel32.dll_WriteFile_1(uVar1);\n    }\n    return;\n}\n",
        "token_count": 477
    },
    "0040b580": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b580(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar4;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint lpFilename;\n    uint lpBuffer;\n    uint hModule;\n    int32_t var_10h;\n    uint var_4h;\n    \n    puStack384 = &stack0xfffffffc;\n    var_14ch = 0;\n    var_154h = 0;\n    var_150h = 0;\n    var_4h = 0;\n    uStack388 = 0x40b73b;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack392;\n    iVar1 = *(arg_8h + -4);\n    if (*(iVar1 + 0x14) == 0) {\n        puStack384 = &stack0xfffffffc;\n        fcn.004065fc();\n    }\n    else {\n        fcn.004065fc();\n    }\n    uVar2 = *(iVar1 + 0x18);\n    sub.kernel32.dll_VirtualQuery_1(*(iVar1 + 0xc), &lpBuffer, 0x1c);\n    if (var_10h == 0x1000) {\n        iVar3 = sub.kernel32.dll_GetModuleFileNameA_1(hModule, &lpFilename, 0x105);\n        if (iVar3 != 0) {\n            var_148h = *(iVar1 + 0xc);\n            var_144h._0_1_ = 5;\n            fcn.00404570();\n            fcn.00408b24();\n            var_140h = var_14ch;\n            var_13ch._0_1_ = 0xb;\n            var_138h = var_4h;\n            var_134h._0_1_ = 0xb;\n            var_12ch._0_1_ = 5;\n            puVar4 = &var_148h;\n            arg_8h_00 = 3;\n            var_130h = uVar2;\n            fcn.004065fc();\n            fcn.0040b1a8(arg_8h_00, puVar4);\n            goto code_r0x0040b70a;\n        }\n    }\n    var_16ch = *(iVar1 + 0xc);\n    var_168h._0_1_ = 5;\n    var_164h = var_4h;\n    var_160h._0_1_ = 0xb;\n    var_158h._0_1_ = 5;\n    puVar4 = &var_16ch;\n    arg_8h_00 = 2;\n    var_15ch = uVar2;\n    fcn.004065fc();\n    fcn.0040b1a8(arg_8h_00, puVar4);\ncode_r0x0040b70a:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00404308(0x40b742);\n    fcn.0040432c();\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 862
    },
    "0040b970": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b970(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if ((in_EAX != NULL) && (in_EAX[param_2] != 0)) {\n        if (param_2 == 0) {\n            if ((*((*in_EAX >> 3) + 0x46f0f0) >> (*in_EAX & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n        else {\n            iVar3 = param_2 + -1;\n            while ((-1 < iVar3 && ((*((in_EAX[iVar3] >> 3) + 0x46f0f0) >> (in_EAX[iVar3] & 7) & 1) != 0))) {\n                iVar3 = iVar3 + -1;\n            }\n            uVar1 = param_2 - iVar3 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 0) {\n                uVar2 = 2;\n            }\n            else if ((*((in_EAX[param_2] >> 3) + 0x46f0f0) >> (in_EAX[param_2] & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 370
    },
    "0040b9e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040b9e8(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x47d7fc != '\\0') {\n        fcn.004047b8();\n        uVar1 = fcn.0040b970();\n    }\n    return uVar1;\n}\n",
        "token_count": 74
    },
    "0040ba0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040ba0c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x47d7fc != '\\0') {\n        uVar1 = fcn.0040b970();\n    }\n    return uVar1;\n}\n",
        "token_count": 64
    },
    "0040ba4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ba4c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < param_2) {\n        iVar1 = fcn.004045c0();\n        if ((param_2 <= iVar1) && (iVar3 = param_2,  *0x47d7fc != '\\0')) {\n            iVar1 = 1;\n            iVar3 = 0;\n            if (0 < param_2) {\n                do {\n                    uVar2 = *(in_EAX + -1 + iVar1);\n                    if ((*((uVar2 >> 3) + 0x46f0f0) >> (uVar2 & 7) & 1) == 0) {\n                        iVar1 = iVar1 + 1;\n                    }\n                    else {\n                        iVar1 = fcn.0040bc5c();\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar1 <= param_2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 264
    },
    "0040bb34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040bb34(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *in_stack_ffffffec;\n    uchar *puVar3;\n    int32_t iStack16;\n    \n    puVar3 = &stack0xfffffff0;\n    iStack16 = 0;\n    iVar2 = iStack16;\n    if (0 < param_2) {\n        in_stack_ffffffec = 0x40bb4d;\n        iVar1 = fcn.004045c0();\n        iVar2 = iStack16;\n        if (((param_2 <= iVar1) && (iVar2 = param_2,  1 < param_2)) && (iVar2 = param_2,  *0x47d7fc != '\\0')) {\n            fcn.0040baa4(&stack0xfffffff0);\n            if ((iStack16 < param_2 + -1) || (iVar2 = fcn.004045c0(),  iVar2 <= puVar3)) {\n                in_stack_ffffffec = NULL;\n                iVar2 = iStack16;\n            }\n            else {\n                in_stack_ffffffec = puVar3 + 1;\n                iVar2 = iStack16;\n            }\n        }\n    }\n    iStack16 = iVar2;\n    return CONCAT44(iStack16, in_stack_ffffffec);\n}\n",
        "token_count": 310
    },
    "0040bb98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040bb98(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *in_stack_ffffffec;\n    uchar *puVar3;\n    int32_t iStack16;\n    \n    puVar3 = &stack0xfffffff0;\n    iStack16 = 0;\n    iVar1 = iStack16;\n    if (0 < param_2) {\n        in_stack_ffffffec = 0x40bbb1;\n        iVar1 = fcn.004045c0();\n        if (iVar1 < param_2) {\n            in_stack_ffffffec = 0x40bbbc;\n            param_2 = fcn.004045c0();\n        }\n        iVar1 = param_2;\n        if (*0x47d7fc != '\\0') {\n            fcn.0040baa4(&stack0xfffffff0);\n            iVar2 = fcn.004045c0();\n            in_stack_ffffffec = puVar3;\n            iVar1 = iStack16;\n            if (iVar2 < puVar3) {\n                in_stack_ffffffec = fcn.004045c0();\n                iVar1 = iStack16;\n            }\n        }\n    }\n    iStack16 = iVar1;\n    return CONCAT44(iStack16, in_stack_ffffffec);\n}\n",
        "token_count": 299
    },
    "0040bbf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040bbf8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*0x47d7fc != '\\0') {\n        iVar1 = sub.user32.dll_CharNextA_1();\n        return iVar1 - in_EAX;\n    }\n    return 1;\n}\n",
        "token_count": 76
    },
    "0040bc20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040bc20(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 1;\n    if ((*0x47d7fc != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x46f0f0) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.004047b8();\n        uVar1 = fcn.0040bbf8();\n    }\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "0040bc5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040bc5c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = param_2 + 1;\n    if ((*0x47d7fc != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x46f0f0) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.004047b8();\n        iVar1 = fcn.0040bbf8();\n        iVar1 = iVar1 + param_2;\n    }\n    return iVar1;\n}\n",
        "token_count": 173
    },
    "0040bd04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040bd04(uint param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack24;\n    uint32_t uStack20;\n    \n    iVar4 = 0;\n    if ((((in_EAX != NULL) && (*in_EAX != '\\0')) && (param_2 != NULL)) && (*param_2 != '\\0')) {\n        iStack24 = fcn.00408bd0();\n        uVar2 = fcn.00408bd0();\n        iVar4 = fcn.00408d74();\n        while ((iVar4 != 0 && (uVar2 <= iStack24 - (iVar4 - in_EAX)))) {\n            uVar1 = fcn.0040ba0c();\n            uStack20 = uStack20 & 0xffffff00 | uVar1;\n            if (uVar1 != 2) {\n                iStack24 = 0x400;\n                iVar3 = sub.kernel32.dll_CompareStringA();\n                if (iVar3 == 2) goto code_r0x0040bd9a;\n            }\n            iVar4 = fcn.00408d74();\n        }\n        iVar4 = 0;\n    }\ncode_r0x0040bd9a:\n    return CONCAT44(uStack20, iVar4);\n}\n",
        "token_count": 318
    },
    "0040c06c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0040c06c(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40c337;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040c06c::var_18h;\n    var_1ch = 0x40c08f;\n    var_ch = unaff_EBX;\n    fcn.0040bef8();\n    var_1ch = 0x40c094;\n    fcn.0040aa74();\n    if (*0x47d7fc != '\\0') {\n        var_1ch = 0x40c0a2;\n        fcn.0040ac4c();\n    }\n    var_1ch = 0x40c0a7;\n    sub.kernel32.dll_GetThreadLocale_1();\n    var_1ch = &fcn.0040c06c::var_10h;\n    var_20h = 0x40c0bb;\n    fcn.0040a9c4(var_1ch);\n    var_20h = 0x40c0c8;\n    fcn.0040435c();\n    var_20h = &fcn.0040c06c::var_14h;\n    var_24h = 0x40c0dd;\n    fcn.0040a9c4(var_20h);\n    var_24h = 0x40c0e7;\n    *0x47d734 = fcn.004088f8();\n    var_24h = &fcn.0040c06c::var_18h;\n    var_28h = 0x40c101;\n    fcn.0040a9c4(var_24h);\n    var_28h = 0x40c10b;\n    *0x47d735 = fcn.004088f8();\n    var_28h = 0x40c11e;\n    *0x47d736 = fcn.0040aa10();\n    var_28h = 0x40c131;\n    *0x47d737 = fcn.0040aa10();\n    var_28h = &fcn.0040c06c::var_1ch;\n    var_2ch = 0x40c14b;\n    fcn.0040a9c4(var_28h);\n    var_2ch = 0x40c155;\n    *0x47d738 = fcn.004088f8();\n    var_2ch = 0x40c168;\n    *0x47d739 = fcn.0040aa10();\n    var_2ch = &fcn.0040c06c::var_24h;\n    var_30h = 0x40c182;\n    fcn.0040a9c4(var_2ch);\n    var_30h = 0x40c18d;\n    fcn.0040acfc();\n    var_30h = 0x40c19a;\n    fcn.0040435c();\n    var_30h = &fcn.0040c06c::var_2ch;\n    var_34h = 0x40c1af;\n    fcn.0040a9c4(var_30h);\n    var_34h = 0x40c1ba;\n    fcn.0040acfc();\n    var_34h = 0x40c1c7;\n    fcn.0040435c();\n    var_34h = 0x40c1d5;\n    *0x47d744 = fcn.0040aa10();\n    var_34h = &fcn.0040c06c::var_30h;\n    var_38h = 0x40c1ef;\n    fcn.0040a9c4(var_34h);\n    var_38h = 0x40c1fc;\n    fcn.0040435c();\n    var_38h = &fcn.0040c06c::var_34h;\n    var_3ch = 0x40c211;\n    fcn.0040a9c4(var_38h);\n    var_3ch = 0x40c21e;\n    fcn.0040435c();\n    var_3ch = 0x40c226;\n    fcn.00404308();\n    var_3ch = 0x40c22e;\n    fcn.00404308();\n    var_3ch = &fcn.0040c06c::var_38h;\n    var_40h = 0x40c243;\n    fcn.0040a9c4(var_3ch);\n    var_40h = 0x40c24d;\n    iVar1 = fcn.004088f8();\n    if (iVar1 == 0) {\n        var_40h = 0x40c25e;\n        fcn.004043a0();\n    }\n    else {\n        var_40h = 0x40c26d;\n        fcn.004043a0();\n    }\n    var_40h = &fcn.0040c06c::var_3ch;\n    fcn.0040a9c4(var_40h);\n    iVar1 = fcn.004088f8();\n    if (iVar1 == 0) {\n        fcn.0040a9c4(&fcn.0040c06c::var_40h);\n        iVar1 = fcn.004088f8();\n        if (iVar1 == 0) {\n            fcn.004043a0();\n        }\n        else {\n            fcn.004043a0();\n        }\n    }\n    fcn.00404680(var_ch, 0x40c3d0, var_4h, var_8h);\n    fcn.00404680(var_ch, 0x40c3dc, var_4h, var_8h);\n    *0x47d7fe = fcn.0040aa10();\n    *in_FS_OFFSET = var_ch;\n    fcn.0040432c(0x40c33e);\n    return;\n}\n",
        "token_count": 1720
    },
    "0040c4b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c4b4(void)\n\n{\n    while( true ) {\n        if (*0x46f2ec == NULL) break;\n        *0x46f2ec = **0x46f2ec;\n        fcn.00402748();\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040c4d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c4d4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x40c50c);\n    if (iVar1 != 0) {\n        *0x46f114 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x40c51c);\n    }\n    if (*0x46f114 == NULL) {\n        *0x46f114 = fcn.00408b5c;\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0040c68c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c68c(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iStack20;\n    \n    iStack20 = fcn.0040c548();\n    iVar3 = fcn.0040c53c();\n    iVar2 = iStack20;\n    if (iVar3 == 0) {\n        piVar1 = &iStack20;\n        uVar4 = sub.kernel32.dll_GetTickCount();\n        while (iVar2 != 0) {\n            iVar3 = *(iVar2 + 4);\n            if (*(iVar2 + 8) == 0) {\n                if ((*(iVar2 + 0xc) <= uVar4) &&\n                   (uVar5 = uVar4 - *(iVar2 + 0xc),  uVar5 < *(in_EAX + 0x4c) || uVar5 == *(in_EAX + 0x4c)))\n                goto code_r0x0040c6f3;\n                fcn.00402748();\n                *piVar1 = iVar3;\n                iVar2 = iVar3;\n            }\n            else {\n                *(iVar2 + 8) = 0;\n                *(iVar2 + 0xc) = uVar4;\ncode_r0x0040c6f3:\n                piVar1 = iVar2 + 4;\n                iVar2 = iVar3;\n            }\n        }\n    }\n    fcn.0040c75c();\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 374
    },
    "0040c788": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040c788(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0040c548();\n    iVar2 = iVar1;\n    for (iVar3 = iVar1; (iVar3 != 0 && (*(iVar3 + 8) != 0)); iVar3 = *(iVar3 + 4)) {\n        iVar2 = iVar3;\n    }\n    if (iVar3 != 0) {\n        if (iVar1 != iVar3) {\n            *(iVar2 + 4) = *(iVar3 + 4);\n        }\n        fcn.00402e14();\n    }\n    fcn.0040c75c();\n    return iVar3;\n}\n",
        "token_count": 167
    },
    "0040d158": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040d158(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x40d1c0;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x47d840 == 0;\n    *0x47d840 = *0x47d840 + -1;\n    if (bVar1) {\n        fcn.00404030();\n        fcn.00404058();\n        if (*0x47d709 != '\\0') {\n            fcn.0040435c();\n        }\n        fcn.0040b828();\n        fcn.0040b918();\n        fcn.0040c4d4();\n        fcn.0040c06c();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 227
    },
    "0040d984": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d984(ushort param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    ushort *in_EAX;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint in_stack_ffffffd4;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40dae8;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    // switch table (21 cases) at 0x40d9b5\n    switch(param_1) {\n    case 0:\n        break;\n    default:\n        puStack28 = &stack0xfffffffc;\n        fcn.0040d394();\n        puVar1 = puStack28;\n        break;\n    case 2:\n        in_EAX[4] = *(param_2 + 8);\n        puVar1 = &stack0xfffffffc;\n        break;\n    case 3:\n        *(in_EAX + 4) = *(param_2 + 8);\n        puVar1 = &stack0xfffffffc;\n        break;\n    case 4:\n        *(in_EAX + 4) = *(param_2 + 8);\n        puVar1 = &stack0xfffffffc;\n        break;\n    case 5:\n        *(in_EAX + 4) = *(param_2 + 8);\n        puVar1 = &stack0xfffffffc;\n        break;\n    case 6:\n        *(in_EAX + 4) = ROUND(*(param_2 + 8) * *0x40daf8);\n        puVar1 = &stack0xfffffffc;\n        break;\n    case 7:\n        *(in_EAX + 4) = *(param_2 + 8);\n        puVar1 = &stack0xfffffffc;\n        break;\n    case 8:\n        uVar3 = *(param_2 + 0xc);\n        in_stack_ffffffd4 = *(param_2 + 8);\n        fcn.0040884c(in_stack_ffffffd4);\n        fcn.00404b44(in_stack_ffffffd4, uVar3);\n        fcn.0040e898();\n        puVar1 = puStack28;\n        break;\n    case 0xb:\n        bVar2 = *(param_2 + 0xc) == 0;\n        if (bVar2) {\n            bVar2 = *(param_2 + 8) == 0;\n        }\n        in_EAX[4] = -!bVar2;\n        puVar1 = &stack0xfffffffc;\n        break;\n    case 0x10:\n        *(in_EAX + 4) = *(param_2 + 8);\n        puVar1 = &stack0xfffffffc;\n        break;\n    case 0x11:\n        *(in_EAX + 4) = *(param_2 + 8);\n        puVar1 = &stack0xfffffffc;\n        break;\n    case 0x12:\n        in_EAX[4] = *(param_2 + 8);\n        puVar1 = &stack0xfffffffc;\n        break;\n    case 0x13:\n        *(in_EAX + 4) = *(param_2 + 8);\n        puVar1 = &stack0xfffffffc;\n        break;\n    case 0x14:\n        *(in_EAX + 4) = *(param_2 + 8);\n        *(in_EAX + 6) = *(param_2 + 0xc);\n        puVar1 = &stack0xfffffffc;\n    }\n    puStack28 = puVar1;\n    *in_EAX = param_1;\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x40daef;\n    fcn.00404308();\n    fcn.004049f8();\n    return;\n}\n",
        "token_count": 898
    },
    "0040ea88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ea88(int32_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    \n    fcn.0040d3ac();\n    uVar1 = *param_2;\n    if (0x10e < (uVar1 & 0xfff)) {\n        cVar2 = fcn.004110d0();\n        if (cVar2 != '\\0') {\n            (**(*param_1 + 0x20))();\n            return;\n        }\n        fcn.0040d39c();\n        return;\n    }\n    uVar3 = uVar1 & 0xffffbfff;\n    if (0x14 < uVar3) {\n        if (uVar3 == 0x100) {\n            fcn.0040e93c();\n            return;\n        }\n        if (uVar3 == 0x101) {\n            fcn.0040e9dc();\n            return;\n        }\ncode_r0x0040eb7d:\n        if ((uVar1 & 0x2000) == 0) {\n            fcn.0040d7d8();\n        }\n        else {\n            fcn.0040d4ec();\n        }\n        return;\n    }\n    if (uVar3 != 0x14) {\n        if (uVar3 - 0x10 < 3) {\n            fcn.0040db7c();\n            return;\n        }\n        if (uVar3 - 0x10 == 3) {\n            if (*(param_2 + 4) < 0x80000000) {\n                fcn.0040db7c();\n                return;\n            }\n            fcn.0040db7c();\n            return;\n        }\n        goto code_r0x0040eb7d;\n    }\n    if (*(param_2 + 6) == 0) {\n        if (0x7fffffff < *(param_2 + 4)) goto code_r0x0040eb57;\n    }\n    else if (0 < *(param_2 + 6)) goto code_r0x0040eb57;\n    if (*(param_2 + 6) == -1) {\n        if (0x7fffffff < *(param_2 + 4)) {\ncode_r0x0040eb48:\n            fcn.0040db7c();\n            return;\n        }\n    }\n    else if (-2 < *(param_2 + 6)) goto code_r0x0040eb48;\ncode_r0x0040eb57:\n    fcn.0040db7c();\n    return;\n}\n",
        "token_count": 585
    },
    "0040f058": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040f058(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_9h;\n    uint var_4h;\n    \n    var_9h._0_1_ = false;\n    iVar1 = fcn.0040dee0();\n    iVar2 = fcn.0040dee0();\n    // switch table (11 cases) at 0x40f091\n    switch(param_1) {\n    case 0:\n        var_9h._0_1_ = SCARRY4(iVar1, iVar2);\n        break;\n    case 1:\n        var_9h._0_1_ = SBORROW4(iVar1, iVar2);\n        break;\n    case 2:\n        var_9h._0_1_ = iVar1 * iVar2 != iVar1 * iVar2;\n        break;\n    case 3:\n        fcn.0040eef0();\n        break;\n    case 4:\n        break;\n    case 5:\n        break;\n    case 6:\n        break;\n    case 7:\n        break;\n    case 8:\n        break;\n    case 9:\n        break;\n    case 10:\n        break;\n    default:\n        fcn.0040eef0();\n    }\n    if (var_9h._0_1_ == false) {\n        fcn.00405308();\n    }\n    else {\n        fcn.0040efc8();\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "0040f368": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f368(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    ushort *in_EAX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = fcn.0040ef80(&stack0xfffffffc);\n    uVar1 = *((uVar4 & 0xffff) + 0x46f3f8);\n    uVar4 = fcn.0040ef80(&stack0xfffffffc);\n    uVar2 = *((uVar4 & 0xffff) + 0x46f3f8);\n    // switch table (9 cases) at 0x40f3cd\n    switch(*(uVar1 * 9 + 0x46f410 + uVar2)) {\n    case 0:\n        fcn.0040d39c();\n        break;\n    case 1:\n        fcn.0040d3ac();\n        *in_EAX = 1;\n        break;\n    case 2:\n        if (param_1 == 3) {\n            fcn.0040efc8();\n        }\n        else {\n            fcn.0040f058();\n        }\n        break;\n    case 3:\n        if (param_1 < 4) {\n            fcn.0040efc8();\n        }\n        else {\n            fcn.0040f058();\n        }\n        break;\n    case 4:\n        if (param_1 == 0) {\n            fcn.0040e280();\n            fcn.0040e280();\n            fcn.00405334();\n        }\n        else if (param_1 == 1) {\n            fcn.0040e280();\n            fcn.0040e280();\n            fcn.00405334();\n        }\n        else if (param_1 - 2U < 2) {\n            if ((uVar1 == 4) && (uVar2 == 4)) {\n                if (param_1 == 2) {\n                    fcn.00405334();\n                }\n                else {\n                    fcn.0040532c();\n                }\n            }\n            else if (uVar2 == 4) {\n                if (param_1 == 2) {\n                    fcn.0040e144();\n                    fcn.00405334();\n                }\n                else {\n                    fcn.0040e280();\n                    fcn.0040532c();\n                }\n            }\n            else if (param_1 == 2) {\n                fcn.0040e144();\n                fcn.00405334();\n            }\n            else {\n                fcn.0040e144();\n                fcn.00405334();\n            }\n        }\n        else {\n            fcn.0040f058();\n        }\n        break;\n    case 5:\n        if (param_1 == 0) {\n            fcn.0040ebc4();\n        }\n        else if (param_1 < 4) {\n            fcn.0040efc8();\n        }\n        else {\n            fcn.0040f058();\n        }\n        break;\n    case 6:\n        if (param_1 < 8) {\n            if (param_1 < 4) {\n                fcn.0040efc8();\n            }\n            else {\n                fcn.0040f058();\n            }\n        }\n        else if (param_1 == 8) {\n            cVar3 = fcn.0040e108();\n            if (cVar3 != '\\0') {\n                fcn.0040e108();\n            }\n            fcn.00405324();\n        }\n        else if (param_1 == 9) {\n            cVar3 = fcn.0040e108();\n            if (cVar3 == '\\0') {\n                fcn.0040e108();\n            }\n            fcn.00405324();\n        }\n        else if (param_1 == 10) {\n            fcn.0040e108();\n            fcn.0040e108();\n            fcn.00405324();\n        }\n        break;\n    case 7:\n        if (param_1 == 0) {\n            fcn.0040efc8();\n            *in_EAX = 7;\n        }\n        else if (param_1 == 1) {\n            fcn.0040efc8();\n            if ((uVar1 == 7) && (uVar2 == 7)) {\n                *in_EAX = 7;\n            }\n        }\n        else if (param_1 - 2U < 2) {\n            fcn.0040efc8();\n        }\n        else {\n            fcn.0040f058();\n        }\n        break;\n    case 8:\n        if (param_1 == 3) {\n            fcn.0040efc8();\n        }\n        else {\n            fcn.0040f17c();\n        }\n        break;\n    default:\n        fcn.0040eef0();\n    }\n    return;\n}\n",
        "token_count": 1113
    },
    "0040ffd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040ffd8(int32_t *param_1)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint uVar2;\n    \n    uVar2 = 0;\n    if ((*in_EAX & 0xfff) < 0x10f) {\n        if ((*in_EAX == 0) || (((*in_EAX == 9 || (*in_EAX == 0xd)) && (*(in_EAX + 4) == 0)))) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        cVar1 = fcn.004110d0();\n        if (cVar1 == '\\0') {\n            fcn.0040d39c();\n        }\n        else {\n            uVar2 = (**(*param_1 + 0x14))();\n        }\n    }\n    return CONCAT44(param_1, uVar2);\n}\n",
        "token_count": 213
    },
    "00410068": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00410068(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        return in_EAX & 0xffff0000 | uVar1 & 0xffffff00 | *param_2 == 0;\n    }\n    if (uVar1 == 1) {\n        uVar2 = in_EAX & 0xffff0000 | uVar1 & 0xffffff00 | *param_2 == 1;\n    }\n    else {\n        uVar3 = *param_2 == 2;\n        if (*param_2 < 2) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.0040535c();\n            uVar2 = uVar2 & 0xffffff00 | uVar3;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 239
    },
    "00410358": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00410358(void)\n\n{\n    uint32_t in_EAX;\n    uint16_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = in_EAX & 0xfff;\n    uVar2 = in_EAX & 0xffff0000 | uVar1 - 0x16;\n    if (uVar1 < 0x16) {\n        uVar2 = *0x47c114;\n        if (*(*0x47c114 + (in_EAX & 0xfff) * 0xc) != '\\0') {\n            return CONCAT44(*0x47c114, CONCAT31((in_EAX & 0xfff) * 3 >> 8, 1));\n        }\n    }\n    return uVar2 << 0x20;\n}\n",
        "token_count": 177
    },
    "0041037c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041037c(void)\n\n{\n    char cVar1;\n    uint16_t in_AX;\n    \n    if ((0x15 < (in_AX & 0xfff)) || (*(*0x47c114 + 1 + (in_AX & 0xfff) * 0xc) == '\\0')) {\n        cVar1 = fcn.0041003c();\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 110
    },
    "00410754": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00410754(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    iVar2 = fcn.004057a4();\n    if (-1 < iVar2) {\n        iVar2 = iVar2 + 1;\n        iVar3 = 0;\n        do {\n            if (*(*in_EAX + iVar3 * 4) != 0) {\n                cVar4 = '\\x01';\n                break;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (cVar4 != '\\0') {\n        iVar2 = fcn.004057a4();\n        if (-1 < iVar2) {\n            if (*(*in_EAX + iVar2 * 4) == 0) {\n                for (; *(*in_EAX + iVar2 * 4) == 0; iVar2 = iVar2 + -1) {\n                    *(*in_EAX + iVar2 * 4) = *(param_2 + iVar2 * 4);\n                }\n                piVar1 = *in_EAX + iVar2 * 4;\n                *piVar1 = *piVar1 + -1;\n            }\n            else {\n                piVar1 = *in_EAX + iVar2 * 4;\n                *piVar1 = *piVar1 + -1;\n            }\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 359
    },
    "00410e30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00410e30(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    \n    puStack16 = 0x410e44;\n    fcn.0040c8e0();\n    uStack20 = 0x410e93;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    iVar1 = fcn.0040579c();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            if (*(*0x47d9d0 + iVar1 * 4) != *0x46f464) {\n                fcn.00403530();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x410e9a;\n    uStack20 = 0x410e92;\n    fcn.0040c9e0();\n    return;\n}\n",
        "token_count": 258
    },
    "004110d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.004110d0(uint param_1, uint *param_2)\n\n{\n    bool bVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_1h;\n    \n    puStack20 = 0x4110e4;\n    fcn.0040ca84();\n    uStack24 = 0x411161;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if ((in_AX < 0x100) || (puStack20 = &fcn.004110d0::var_1h + 1,  iVar2 = fcn.0040579c(),  iVar2 <= in_AX - 0x100)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        *param_2 = *(*0x47d9d0 + -0x400 + in_AX * 4);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x411168;\n    uStack24 = 0x411160;\n    fcn.0040cb28();\n    return;\n}\n",
        "token_count": 309
    },
    "00411644": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411644(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41171f;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*in_EAX == '\\x01') {\n        puStack24 = &stack0xfffffffc;\n        fcn.0040881c();\n    }\n    else {\n        fcn.00411638();\n        iVar2 = fcn.00411638();\n        if ((in_EAX == *0x401000) || (*(iVar2 + 1) < 0)) {\n            if (*0x401000 == in_EAX) {\n                fcn.0040435c();\n            }\n            else {\n                fcn.0040435c();\n            }\n            cVar1 = fcn.00408510();\n            if (cVar1 != '\\0') {\n                fcn.00408430();\n                fcn.0040435c();\n            }\n        }\n        else {\n            if (param_2 != 0) {\n                do {\n                    param_2 = param_2 + -1;\n                } while (param_2 != 0);\n            }\n            fcn.00404564();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x411726;\n    uStack28 = 0x41171e;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 386
    },
    "00411784": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00411784(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == '\\x01') {\n        uVar2 = fcn.004088bc();\n        return uVar2;\n    }\n    iVar3 = fcn.00411638();\n    if (*(iVar3 + 1) < 0) {\n        cVar1 = fcn.00408510();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00408510();\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.004088bc();\n            }\n            else {\n                uVar2 = 0xffffffff;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.00411738();\n    }\n    return uVar2;\n}\n",
        "token_count": 210
    },
    "00411858": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411858(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    puVar4 = param_2;\n    for (uVar2 = *(in_EAX + 10 + *(in_EAX + 1)); uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    while( true ) {\n        iVar1 = in_EAX + 2 + (uVar2 & 0xffffff00 | *(in_EAX + 1));\n        uVar3 = uVar2 & 0xffffff00 | *(iVar1 + 10);\n        uVar2 = *(iVar1 + 0xb + uVar3);\n        if (uVar2 != 0) {\n            iVar5 = iVar1 + 0xd + uVar3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(iVar5 + 0x1a);\n                if (param_2[*(iVar5 + 0x18)] == 0) {\n                    param_2[*(iVar5 + 0x18)] = iVar5;\n                }\n                iVar5 = iVar5 + 0x1b + uVar3;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        uVar2 = 0;\n        if (*(iVar1 + 4) == NULL) break;\n        in_EAX = **(iVar1 + 4);\n    }\n    return;\n}\n",
        "token_count": 392
    },
    "004118dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004118dc(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    \n    pcVar1 = **param_2;\n    uVar5 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar5 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[1];\n    if (*(param_2 + 7) < 0xfe) {\n        uVar3 = (*pcVar2)();\n    }\n    else if (*(param_2 + 7) == 0xff) {\n        puVar4 = (pcVar2 & 0xffffff) + in_EAX;\n        uVar3 = in_EAX & 0xffffff00 | *puVar4;\n        if ((1 < uVar5) && (uVar3 = in_EAX & 0xffff0000 | *puVar4,  3 < uVar5)) {\n            uVar3 = *puVar4;\n        }\n    }\n    else {\n        uVar3 = (**(pcVar2 + *in_EAX))();\n    }\n    if (uVar5 < 4) {\n        if (uVar5 < 2) {\n            uVar3 = uVar3;\n            if (uVar5 != 0) {\n                return uVar3 & 0xff;\n            }\n        }\n        else {\n            uVar3 = uVar3;\n            if (uVar5 != 2) {\n                uVar3 = uVar3 & 0xffff;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 397
    },
    "00415d88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415d88(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 4))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00415da8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415da8(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 8))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0041e23c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e23c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 4))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "0041e25c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e25c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 8))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "00413df4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413df4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00413d94();\n    }\n    if (in_ECX == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00413d94();\n    }\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        fcn.00403744();\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00413e64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00413e64(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    uVar1 = fcn.00403500();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.00403500();\n    *(in_EAX + 8) = uVar1;\n    uVar1 = fcn.00403500();\n    *(in_EAX + 0xc) = uVar1;\n    fcn.0041516c();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 251
    },
    "004140a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004140a4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0xc) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.004152c8();\n            cVar1 = fcn.00414084();\n            if (cVar1 != '\\0') {\n                fcn.004151b8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.004152c8();\n            cVar1 = fcn.00414084();\n            if (cVar1 != '\\0') {\n                fcn.004151b8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar2 = (**(**(in_EAX + 8) + 0x14))();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            (**(**(in_EAX + 8) + 0x18))();\n            cVar1 = fcn.00414084();\n            if (cVar1 != '\\0') {\n                (**(**(in_EAX + 8) + 0x48))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "004142a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004142a8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.004152c8();\n            if (*(iVar1 + 0x10) != '\\0') {\n                iVar3 = fcn.00413f20();\n            }\n        } while ((iVar3 == 0) && (iVar2 = iVar2 + -1,  iVar2 != 0));\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 175
    },
    "0041437c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041437c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00414264();\n    if (iVar2 == 0) {\n        fcn.004142ec(&stack0xfffffffc);\n    }\n    fcn.00413d88();\n    var_18h = *(*(in_EAX + 4) + 8);\n    if (-1 < var_18h + -1) {\n        do {\n            iVar3 = fcn.004152c8();\n            if ((iVar3 != iVar2) && (iVar3 = *(*(iVar3 + 4) + 8) + -1,  -1 < iVar3)) {\n                do {\n                    fcn.004152c8();\n                    cVar1 = fcn.00403744();\n                    if ((cVar1 != '\\0') && (iVar4 = fcn.00414264(),  iVar4 == iVar2)) {\n                        fcn.004151b8();\n                        fcn.0041516c();\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "00414508": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00414508(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar1) {\n        do {\n            fcn.004152c8();\n            fcn.004140a4();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00414538": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414538(uint arg_8h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    char in_DL;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x41454d;\n        in_EAX = fcn.0040387c();\n    }\n    puStack48 = 0x414560;\n    fcn.00403500();\n    puStack48 = 0x41456c;\n    uVar3 = fcn.00403500();\n    *(in_EAX + 4) = uVar3;\n    puStack48 = 0x41457c;\n    fcn.00414444();\n    uStack52 = 0x414637;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(*0x47d9f4 + 4) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            fcn.004152c8();\n            cVar2 = fcn.00413f80();\n            if (cVar2 != '\\0') {\n                fcn.0041516c();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    if ((arg_8h != '\\0') && (iVar5 = *(*(*0x47d9f4 + 4) + 8),  -1 < iVar5 + -1)) {\n        do {\n            iVar4 = fcn.004152c8();\n            if (*(iVar4 + 0x10) != '\\0') {\n                fcn.0041516c();\n            }\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x41463e;\n    uStack52 = 0x414636;\n    fcn.004144fc();\n    return;\n}\n",
        "token_count": 545
    },
    "00414694": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00414694(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4146b1;\n    fcn.00414444();\n    uStack32 = 0x41470b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004152c8();\n            iVar1 = fcn.00413f20();\n            if (iVar1 != 0) {\n                fcn.00403d90();\n                return iVar1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x414712;\n    uStack32 = 0x41470a;\n    iVar2 = fcn.004144fc();\n    return iVar2;\n}\n",
        "token_count": 293
    },
    "00414ab0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00414ab0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x414ac8;\n    iVar1 = fcn.0041595c();\n    uStack28 = 0x414b1a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.004152c8();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 0xc);\n                fcn.00403d90();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x414b21;\n    uStack28 = 0x414b19;\n    uVar3 = fcn.004159c0();\n    return uVar3;\n}\n",
        "token_count": 305
    },
    "00414b2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00414b2c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x414b44;\n    iVar1 = fcn.0041595c();\n    uStack28 = 0x414b96;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.004152c8();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 8);\n                fcn.00403d90();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x414b9d;\n    uStack28 = 0x414b95;\n    uVar3 = fcn.004159c0();\n    return uVar3;\n}\n",
        "token_count": 305
    },
    "00414c2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00414c2c(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x47d9f8 == 0) {\n        *0x47d9f8 = fcn.00403500();\n    }\n    iVar1 = fcn.00415324();\n    if (iVar1 < 0) {\n        fcn.0041516c();\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "00414c6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00414c6c(void)\n\n{\n    if (*0x47d9f8 != 0) {\n        fcn.00415468();\n    }\n    return;\n}\n",
        "token_count": 42
    },
    "00414c84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00414c84(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    if ((*0x47d9f8 != 0) && (iVar3 = *(*0x47d9f8 + 8) + -1,  -1 < iVar3)) {\n        do {\n            pcVar2 = fcn.004152c8();\n            iVar1 = (*pcVar2)();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 156
    },
    "00414cc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00414cc4(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x47d9e8 != NULL) {\n        uVar1 = (**0x47d9e8)();\n        return uVar1;\n    }\n    uVar1 = fcn.00414c84();\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 91
    },
    "00414df4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00414df4(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00406794();\n    fcn.00403530();\n    iVar1 = fcn.00406794();\n    iVar1 = *(iVar1 + 0xc);\n    uVar2 = fcn.004153b0();\n    iVar3 = fcn.00406794();\n    *(iVar3 + 8) = uVar2;\n    fcn.004151b8();\n    if (*(iVar1 + 8) == 0) {\n        iVar1 = fcn.00406794();\n        *(iVar1 + 0xc) = 0;\n        fcn.00403530();\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00414ef8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414ef8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    char var_ah;\n    uchar var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    puStack20 = 0x414f0e;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0040c8e0();\n    uStack24 = 0x414fa6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    var_ah = *0x414fb8 == (*(var_4h + 0x1c) & *0x414fb4);\n    puStack20 = &stack0xfffffffc;\n    if (var_ah) {\n        puStack32 = 0x414f43;\n        puStack20 = &stack0xfffffffc;\n        fcn.00414d6c();\n    }\n    uStack36 = 0x414f87;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00403478();\n    var_9h = fcn.00414e50(arg_8h);\n    if (var_ah != '\\0') {\n        fcn.00414dc4();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x414f8e;\n    if (var_ah != '\\0') {\n        uStack36 = 0x414f86;\n        fcn.00414df4();\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "00415538": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415538(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar in_CL;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        puStack36 = 0x41555f;\n        fcn.00415538(0);\n        in_EDX = arg_8h;\n    }\n    // switch table (6 cases) at 0x415578\n    switch(in_CL) {\n    case 0:\n        puStack36 = 0x415597;\n        (**(*in_EAX + 8))();\n        puStack36 = 0x4155a1;\n        fcn.00415488();\n        var_ch = *(in_EDX + 8);\n        if (-1 < var_ch + -1) {\n            do {\n                puStack36 = 0x4155bc;\n                fcn.004152c8();\n                puStack36 = 0x4155c5;\n                fcn.0041516c();\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        break;\n    case 1:\n        iVar3 = in_EAX[2] + -1;\n        if (-1 < iVar3) {\n            do {\n                puStack36 = 0x4155e6;\n                fcn.004152c8();\n                puStack36 = 0x4155ef;\n                iVar2 = fcn.00415324();\n                if (iVar2 == -1) {\n                    puStack36 = 0x4155fb;\n                    fcn.004151b8();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n        break;\n    case 2:\n        var_ch = *(in_EDX + 8);\n        if (-1 < var_ch + -1) {\n            do {\n                puStack36 = 0x415621;\n                fcn.004152c8();\n                puStack36 = 0x41562a;\n                iVar3 = fcn.00415324();\n                if (iVar3 == -1) {\n                    puStack36 = 0x415636;\n                    fcn.004152c8();\n                    puStack36 = 0x41563f;\n                    fcn.0041516c();\n                }\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        break;\n    case 3:\n        puStack36 = 0x415656;\n        iVar3 = fcn.00403500();\n        uStack40 = 0x415732;\n        uStack44 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd4;\n        puStack36 = &stack0xfffffffc;\n        fcn.00415488();\n        var_ch = *(in_EDX + 8);\n        if (-1 < var_ch + -1) {\n            do {\n                fcn.004152c8();\n                iVar2 = fcn.00415324();\n                if (iVar2 == -1) {\n                    fcn.004152c8();\n                    fcn.0041516c();\n                }\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        iVar2 = in_EAX[2] + -1;\n        if (-1 < iVar2) {\n            do {\n                fcn.004152c8();\n                iVar1 = fcn.00415324();\n                if (iVar1 != -1) {\n                    fcn.004151b8();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != -1);\n        }\n        if (in_EAX[3] < in_EAX[2] + *(iVar3 + 8)) {\n            fcn.00415488();\n        }\n        var_ch = *(iVar3 + 8);\n        if (-1 < var_ch + -1) {\n            do {\n                fcn.004152c8();\n                fcn.0041516c();\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = uStack44;\n        puStack36 = 0x4157f9;\n        uStack40 = 0x415731;\n        fcn.00403530();\n        return;\n    case 4:\n        iVar3 = in_EAX[2] + -1;\n        if (-1 < iVar3) {\n            do {\n                puStack36 = 0x41574f;\n                fcn.004152c8();\n                puStack36 = 0x415758;\n                iVar2 = fcn.00415324();\n                if (iVar2 != -1) {\n                    puStack36 = 0x415764;\n                    fcn.004151b8();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n        break;\n    case 5:\n        puStack36 = 0x41577b;\n        fcn.00403500();\n        uStack40 = 0x4157f2;\n        uStack44 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd4;\n        puStack36 = &stack0xfffffffc;\n        fcn.00415488();\n        iVar3 = *(in_EDX + 8) + -1;\n        if (-1 < iVar3) {\n            do {\n                fcn.004152c8();\n                iVar2 = fcn.00415324();\n                if (iVar2 == -1) {\n                    fcn.004152c8();\n                    fcn.0041516c();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n        uVar4 = 0;\n        fcn.00415538(0);\n        *in_FS_OFFSET = uVar4;\n        uStack40 = 0x4157f9;\n        uStack44 = 0x4157f1;\n        fcn.00403530();\n        return;\n    }\n    return;\n}\n",
        "token_count": 1409
    },
    "00415a20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415a20(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (param_2 < 0) {\n            fcn.004159fc(param_1);\n        }\n        iVar1 = param_2 + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = param_2 + 0x3e;\n        }\n        iVar2 = (iVar1 >> 5) << 2;\n        iVar1 = *(in_EAX + 4) + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = *(in_EAX + 4) + 0x3e;\n        }\n        iVar1 = (iVar1 >> 5) << 2;\n        if (iVar1 != iVar2) {\n            iVar3 = 0;\n            if (iVar2 != 0) {\n                iVar3 = fcn.00402728();\n                fcn.00402e14();\n            }\n            if (iVar1 != 0) {\n                if (iVar3 != 0) {\n                    fcn.00415a14();\n                    fcn.004028e0();\n                }\n                fcn.00402748();\n            }\n            *(in_EAX + 8) = iVar3;\n        }\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "00415ac4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415ac4(char param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) <= param_2) {\n        if (param_2 < 0) {\n            fcn.0040b228();\n            fcn.00403ce4();\n            return;\n        }\n        fcn.00415a20();\n    }\n    if (param_1 != '\\0') {\n        puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n        *puVar1 = *puVar1 | '\\x01' << (param_2 & 7);\n        return;\n    }\n    puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n    *puVar1 = *puVar1 & ~('\\x01' << (param_2 & 7));\n    return;\n}\n",
        "token_count": 216
    },
    "00415c84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415ced)\n\nvoid fcn.00415c84(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x415d19;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00403480();\n    fcn.00404564();\n    iVar1 = fcn.0040372c();\n    if (iVar1 != 0) {\n        fcn.0040372c();\n        fcn.0040372c();\n    }\n    *in_FS_OFFSET = in_stack_fffffed4;\n    fcn.00404308(0x415d20);\n    return;\n}\n",
        "token_count": 217
    },
    "00415e88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415ebb)\n\nvoid fcn.00415e88(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x415edd;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00406130();\n    fcn.00415df0();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x415ee4;\n    uStack28 = 0x415edc;\n    fcn.00406130();\n    return;\n}\n",
        "token_count": 169
    },
    "00415f54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00415f54(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    piVar1 = *(in_EAX + 4);\n    if ((piVar1 != NULL) && (piVar1[3] == 0)) {\n        (**(*piVar1 + 0x1c))();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00415fb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415fb8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_114h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    uStack300 = 0x41604d;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    if (*(in_EAX + 4) == 0) {\n        fcn.00403480();\n        param_2 = 0x416037;\n        fcn.00404564();\n    }\n    else {\n        puStack296 = &stack0xfffffffc;\n        fcn.0040372c();\n        fcn.00415f78();\n        fcn.00409330(param_2);\n    }\n    *in_FS_OFFSET = param_2;\n    uStack300 = 0x416054;\n    uStack304 = 0x41604c;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 277
    },
    "00416210": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00416210(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[3] == 0) {\n        (**(*in_EAX + 0x1c))();\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "00416220": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00416220(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (0 < *(in_EAX[2] + 8)) {\n        puStack16 = 0x41623c;\n        (**(*in_EAX + 0x20))();\n        uStack20 = 0x41627a;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.004153b0();\n            fcn.00403530();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x416281;\n        uStack20 = 0x416279;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "004162e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041634c)\n// WARNING: Removing unreachable block (ram,0x0041635c)\n\nvoid fcn.004162e0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed0;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    uStack288 = 0x41638e;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.00403480();\n    fcn.00404564();\n    iVar1 = fcn.0040372c();\n    if (iVar1 != 0) {\n        fcn.0040372c();\n        fcn.0040372c();\n    }\n    *in_FS_OFFSET = in_stack_fffffed0;\n    fcn.0040432c(0x416395);\n    return;\n}\n",
        "token_count": 241
    },
    "004163a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004163a8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x4163c5;\n    fcn.0040435c();\n    puStack36 = 0x4163d1;\n    iVar1 = fcn.0040372c();\n    if ((*param_2 == 0) && (iVar1 != 0)) {\n        puStack36 = 0x4163f4;\n        iVar1 = fcn.00403758();\n        if (iVar1 != 0) {\n            puStack36 = 0x416406;\n            fcn.00403758();\n            puStack36 = 0x41640b;\n            iVar1 = fcn.00411638();\n            if ((iVar1 != 0) && (*(iVar1 + 8) != 0)) {\n                puStack36 = 0x41642c;\n                iVar2 = fcn.00402728();\n                uStack40 = 0x4164a5;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.00403758();\n                fcn.00411858();\n                iVar1 = *(iVar1 + 8);\n                if (-1 < iVar1 + -1) {\n                    iVar4 = 0;\n                    do {\n                        if (****(iVar2 + iVar4 * 4) == '\\a') {\n                            iVar3 = fcn.004118dc();\n                            if (iVar3 == in_EAX) {\n                                fcn.00404564();\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                        iVar1 = iVar1 + -1;\n                    } while (iVar1 != 0);\n                }\n                *in_FS_OFFSET = uStack44;\n                puStack36 = 0x4164ac;\n                uStack40 = 0x4164a4;\n                fcn.00402748();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 538
    },
    "004167bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004167bc(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[2] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    in_EAX[2] = in_EAX[2] + 1;\n    return;\n}\n",
        "token_count": 72
    },
    "00416878": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00416878(void)\n\n{\n    int32_t *in_EAX;\n    \n    in_EAX[2] = in_EAX[2] + -1;\n    if (in_EAX[2] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00416b40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00416b40(uint param_1, uint *param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_40h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack124 = &stack0xfffffffc;\n    var_14h = 0;\n    var_8h = 0;\n    uStack128 = 0x416d00;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    var_4h = param_2;\n    iVar2 = (**(*in_EAX + 0x14))();\n    if (iVar2 == 1) {\n        (**(*in_EAX + 0xc))();\n        if (var_14h == 0) {\n            var_18h._1_1_ = fcn.00417598();\n            var_18h._0_1_ = 1;\n            fcn.00402cf8();\n            var_20h._1_1_ = fcn.00417598();\n            var_20h._0_1_ = 1;\n            fcn.00402cc8();\n            fcn.00404564();\n            goto code_r0x00416cd5;\n        }\n    }\n    fcn.00404308();\n    if (-1 < iVar2 + -1) {\n        var_ch = 0;\n        var_10h = iVar2;\n        do {\n            (**(*in_EAX + 0xc))();\n            puStack124 = 0x416c07;\n            puVar3 = fcn.004047b8();\n            while( true ) {\n                puVar5 = 0x416d10;\n                puVar6 = &fcn.00416b40::var_40h;\n                for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar6 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                puStack124 = 0x416c2b;\n                fcn.00417598();\n                puStack124 = 0x416c37;\n                fcn.00403044();\n                puStack124 = 0x416c3e;\n                uVar4 = fcn.00417580();\n                puVar1 = &fcn.00416b40::var_60h + ((uVar4 & 0xff) >> 3);\n                *puVar1 = *puVar1 | '\\x01' << (uVar4 & 7);\n                puStack124 = 0x416c56;\n                fcn.0040307c();\n                if ((*(&fcn.00416b40::var_40h + (*puVar3 >> 3)) >> (*puVar3 & 7) & 1) != 0) break;\n                uStack128 = 0x416c11;\n                puVar3 = sub.user32.dll_CharNextA_1();\n            }\n            if (*puVar3 != 0) {\n                puStack124 = 0x416c6f;\n                fcn.00417598();\n                puStack124 = 0x416c7c;\n                fcn.00408694();\n                puStack124 = 0x416c87;\n                fcn.004043a0();\n            }\n            puStack124 = *var_4h;\n            uStack128 = var_8h;\n            uStack132 = 0x416c96;\n            fcn.00417580();\n            uStack132 = 0x416ca0;\n            fcn.004044e8();\n            uStack132 = 0;\n            fcn.00404680();\n            var_ch = var_ch + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    fcn.004045c0();\n    fcn.00404858();\ncode_r0x00416cd5:\n    *in_FS_OFFSET = uStack132;\n    puStack124 = 0x416d07;\n    uStack128 = 0x416cef;\n    fcn.0040432c();\n    uStack128 = 0x416cf7;\n    fcn.00404308();\n    uStack128 = 0x416cff;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 1125
    },
    "004173b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004173b4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0x10))();\n    }\n    fcn.00406148();\n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00417438": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417438(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4174ec;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41745f;\n    fcn.004167bc();\n    uStack36 = 0x4174cf;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*in_EAX + 0x44))();\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; ((cVar1 = *param_2,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r')); param_2 = param_2 + 1) {\n            }\n            fcn.004043f8();\n            (**(*in_EAX + 0x38))();\n            if (*param_2 == '\\r') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '\\n') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4174d6;\n    uStack36 = 0x4174ce;\n    fcn.00416878();\n    return;\n}\n",
        "token_count": 419
    },
    "00417980": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417980(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    if (*(in_EAX + 7) != '\\0') {\n        fcn.00416970();\n    }\n    if ((in_EDX < 0) || (in_EAX[5] < in_EDX)) {\n        fcn.00416970();\n    }\n    (**(*in_EAX + 0x88))(arg_8h);\n    return;\n}\n",
        "token_count": 115
    },
    "00417ce0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417ce0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EAX;\n    uint *extraout_ECX;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x00417cf8:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x00417d22;\n            }\n            else if (arg_ch < 1) goto code_r0x00417d22;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x00417cf8;\n    fcn.0040b228();\n    fcn.00403ce4();\n    in_EAX = extraout_ECX;\ncode_r0x00417d22:\n    (***in_EAX)();\n    return;\n}\n",
        "token_count": 203
    },
    "00417d80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417d80(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t var_20h;\n    int32_t var_1ah;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_14h = &var_20h;\n    var_10h = *(*in_EAX + 0x14);\n    var_4h = in_EAX;\n    var_20h = fcn.00403478();\n    while ((var_20h != 0 && (var_20h != *0x413184))) {\n        var_20h = fcn.004034bc();\n    }\n    if (var_20h == 0) {\n        fcn.00417d34(&stack0xfffffffc);\n    }\n    unique0x00007a00 = *(var_20h + 0x14);\n    if (var_10h == unique0x00007a00) {\n        fcn.00417d34(&stack0xfffffffc);\n    }\n    (**(*var_4h + 0x14))(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 286
    },
    "00417e04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.00417e04(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x00417e23:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x00417e4d;\n            }\n            else if (arg_ch < 1) goto code_r0x00417e4d;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x00417e23;\n    fcn.0040b228();\n    fcn.00403ce4();\ncode_r0x00417e4d:\n    iVar1 = (**(*in_EAX + 0x10))();\n    return iVar1;\n}\n",
        "token_count": 224
    },
    "00417ee4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417ee4(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    int64_t iVar2;\n    uint uStackY60;\n    uint uStackY56;\n    uchar *puStackY52;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch == 0) && (iVar2 = CONCAT44(arg_ch, arg_8h),  arg_8h == 0)) {\n        puStackY52 = 0x417f09;\n        fcn.00417c68(0, 0);\n        puStackY52 = 0x417f10;\n        iVar2 = fcn.00417c7c();\n    }\n    arg_ch = iVar2 >> 0x20;\n    arg_8h = iVar2;\n    if (arg_ch == 0) {\n        if (arg_8h < 0xf001) {\ncode_r0x00417f3e:\n            var_14h = arg_8h;\n            goto code_r0x00417f44;\n        }\n    }\n    else if (iVar2 < 0x100000000) goto code_r0x00417f3e;\n    var_14h = 0xf000;\ncode_r0x00417f44:\n    puStackY52 = 0x417f4c;\n    fcn.00402728();\n    uStackY56 = 0x417fc1;\n    uStackY60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStackY52 = &stack0xfffffffc;\n    do {\n        arg_ch = iVar2 >> 0x20;\n        arg_8h = iVar2;\n        if (iVar2 == 0) {\n            *in_FS_OFFSET = uStackY60;\n            puStackY52 = 0x417fc8;\n            uStackY56 = 0x417fc0;\n            fcn.00402748();\n            return;\n        }\n        uVar1 = var_14h;\n        if (var_14h >> 0x1f == arg_ch) {\n            if (arg_8h <= var_14h) {\ncode_r0x00417f76:\n                uVar1 = arg_8h;\n            }\n        }\n        else if (arg_ch <= var_14h >> 0x1f) goto code_r0x00417f76;\n        fcn.00417e74();\n        fcn.00417eac();\n        iVar2 = iVar2 - uVar1;\n    } while( true );\n}\n",
        "token_count": 619
    },
    "0041819c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0041819c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_DL = extraout_DL;\n    }\n    var_1h._0_1_ = in_DL;\n    if (arg_ch == -1) {\n        fcn.004089ec();\n        fcn.00418094();\n        if (*(in_EAX + 4) < 0) {\n            var_8h._0_1_ = 0xb;\n            fcn.0040b264(0, &var_ch);\n            fcn.00403ce4();\n        }\n    }\n    else {\n        fcn.0040896c();\n        fcn.00418094();\n        if (*(in_EAX + 4) < 0) {\n            var_8h._0_1_ = 0xb;\n            fcn.0040b264(0, &var_ch);\n            fcn.00403ce4();\n        }\n    }\n    if (var_1h != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack44;\n    }\n    return in_EAX;\n}\n",
        "token_count": 351
    },
    "00418798": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00418798(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    \n    for (pcVar2 = *(in_EAX + 0x14); (*pcVar2 != '\\0' && (*pcVar2 != '.')); pcVar2 = pcVar2 + 1) {\n    }\n    cVar1 = *pcVar2;\n    if (cVar1 != '\\0') {\n        fcn.004043f8();\n        fcn.00404858();\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 130
    },
    "00418874": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418874(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41891a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; (*param_2 != '\\0' && (1 < *param_2 - 0x2dU)); param_2 = param_2 + 1) {\n            }\n            fcn.004043f8();\n            iVar2 = fcn.0041df74();\n            if ((iVar2 == 0) && (cVar1 = fcn.00408510(),  cVar1 != '\\0')) {\n                iVar2 = in_EAX;\n            }\n            if (iVar2 == 0) break;\n            if (*param_2 == '.') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '-') {\n                param_2 = param_2 + 1;\n            }\n            in_EAX = iVar2;\n            if (*param_2 == '>') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x418921;\n    uStack32 = 0x418919;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 390
    },
    "004189bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004189bc(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x4189cf;\n    fcn.0040c8e0();\n    uStack36 = 0x418b55;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x4189e7;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = fcn.0041595c();\n    uStack48 = 0x418b36;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (*(iVar1 + 8) < 1) {\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x418b3d;\n        uStack48 = 0x418b35;\n        fcn.004159c0();\n        return;\n    }\n    puStack56 = 0x418a0d;\n    puStack44 = &stack0xfffffffc;\n    fcn.00403500();\n    uStack60 = 0x418b17;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x418a2a;\n    puStack56 = &stack0xfffffffc;\n    fcn.00403500();\n    uStack72 = 0x418ac5;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar5 = 0;\n    puStack68 = &stack0xfffffffc;\n    do {\n        while( true ) {\n            if (*(iVar1 + 8) <= iVar5) {\n                *in_FS_OFFSET = uStack76;\n                puStack68 = 0x418acc;\n                uStack72 = 0x418ac4;\n                fcn.00403530();\n                return;\n            }\n            puVar2 = fcn.004152c8();\n            iVar3 = fcn.00414c84();\n            if (iVar3 == 0) break;\ncode_r0x00418a6a:\n            if (iVar3 != 0) {\n                fcn.00418874();\n                (***puVar2)();\n            }\n            fcn.0041893c(&stack0xfffffffc);\n            fcn.004151b8();\n            fcn.00403530();\n        }\n        iVar4 = fcn.004118dc();\n        if (iVar4 != 0) goto code_r0x00418a6a;\n        fcn.00418974(&stack0xfffffffc);\n        iVar5 = iVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 728
    },
    "00418b64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418b64(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x47d9fc == 0) {\n        return;\n    }\n    puStack28 = 0x418b8a;\n    iVar2 = fcn.0041595c();\n    uStack32 = 0x418bff;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(iVar2 + 8) + -1;\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = fcn.004152c8();\n            if ((in_EAX == 0) || (*(iVar3 + 8) == in_EAX)) {\n                if (param_2 != 0) {\n                    cVar1 = fcn.00408510();\n                    if (cVar1 == '\\0') goto code_r0x00418be1;\n                }\n                fcn.004151b8();\n                fcn.00403530();\n            }\ncode_r0x00418be1:\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x418c06;\n    uStack32 = 0x418bfe;\n    fcn.004159c0();\n    return;\n}\n",
        "token_count": 386
    },
    "00418c10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00418c10(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x47d9fc != 0) {\n        puStack24 = 0x418c2d;\n        iVar1 = fcn.0041595c();\n        uStack28 = 0x418c87;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack24 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.004152c8();\n                if (*(iVar2 + 4) == in_EAX) {\n                    fcn.004151b8();\n                    fcn.00403530();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x418c8e;\n        uStack28 = 0x418c86;\n        fcn.004159c0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "00418d44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418d44(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00408510();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        (*arg_10h)();\n        fcn.00404308();\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00418d78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418d78(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x418d91;\n    cVar1 = fcn.00408510();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        puStack24 = 0x418dac;\n        cVar1 = fcn.0041aa04();\n        if (cVar1 != '\\n') {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n            puStack24 = 0x418dbe;\n            fcn.0041ab14();\n            *(in_EAX + 0x78) = 1;\n            puStack24 = 0x418dca;\n            fcn.00418cac();\n        }\n        puStack24 = 0x418dd6;\n        puVar2 = fcn.00403500();\n        uStack28 = 0x418e38;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.004191bc();\n        (***puVar2)();\n        fcn.004191bc();\n        *(in_EAX + 0x78) = 1;\n        (*arg_10h)();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x418e3f;\n        uStack28 = 0x418e37;\n        fcn.00403530();\n        return;\n    }\n    return;\n}\n",
        "token_count": 439
    },
    "00418ef0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00418ef0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x418f02;\n    iVar1 = fcn.0041595c();\n    uStack24 = 0x418f60;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.004152c8();\n            if ((*(iVar2 + 4) == *(in_EAX + 4)) && (*(iVar2 + 0xc) == *(in_EAX + 0xc))) {\n                fcn.00403530();\n                fcn.004151b8();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x418f67;\n    uStack24 = 0x418f5f;\n    fcn.004159c0();\n    return;\n}\n",
        "token_count": 298
    },
    "004193dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004193dc(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4194c2;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x419401;\n    iVar2 = fcn.0041ae98();\n    *(arg_8h + -0x10) = 0;\n    if (*(*(arg_8h + -0xc) + 0x6a) != 0) {\n        puStack32 = arg_8h + -0x10;\n        uStack36 = 0x419433;\n        (**(*(arg_8h + -0xc) + 0x68))();\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        puStack32 = 0x419441;\n        uVar3 = (**(iVar2 + -0xc))();\n        *(arg_8h + -0x10) = uVar3;\n        if ((*(arg_8h + -1) & 4) != 0) {\n            puVar1 = *(arg_8h + -0x10) + 0x1c;\n            *puVar1 = *puVar1 | 1;\n            puVar1 = *(arg_8h + -0x10) + 0x1c;\n            *puVar1 = *puVar1 | 0x200;\n        }\n        uStack36 = 0x419496;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        (**(**(arg_8h + -0x10) + 0x2c))();\n        *in_FS_OFFSET = uStack40;\n    }\n    puVar1 = *(arg_8h + -0x10) + 0x1c;\n    *puVar1 = *puVar1 | 1;\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 535
    },
    "00419808": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00419808(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        puStack16 = 0x419827;\n        uVar1 = fcn.00403500();\n        *(in_EAX + 0x30) = uVar1;\n        uStack20 = 0x419863;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        fcn.00419878();\n        fcn.00418f6c();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x419874;\n        uStack20 = 0x419862;\n        fcn.004190b0();\n        return;\n    }\n    puStack16 = 0x419874;\n    fcn.00419878();\n    return;\n}\n",
        "token_count": 247
    },
    "00419c54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00419c54(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    int32_t var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack304 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack308 = 0x419d45;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack312;\n    fcn.00404308();\n    cVar1 = fcn.004036bc();\n    if (cVar1 != '\\0') {\n        fcn.004043a0();\n    }\n    if (var_4h == 0) {\n        fcn.00403480();\n        fcn.00404564();\n    }\n    var_124h = var_4h;\n    var_120h._0_1_ = 0xb;\n    var_11ch = **0x47bf30;\n    var_118h._0_1_ = 0xb;\n    var_114h = *(arg_8h + -8);\n    var_110h._0_1_ = 0xb;\n    var_10ch = *(in_EAX + 4);\n    var_108h._0_1_ = 0xb;\n    uVar2 = 3;\n    fcn.0040b264(3, &var_124h);\n    fcn.00403ce4();\n    *in_FS_OFFSET = uVar2;\n    uStack312 = 0x419d4c;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 458
    },
    "00419d70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419d70(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack72;\n    uint uStack68;\n    uchar *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack44 = 0x419f40;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x419ef5;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x419dab;\n    fcn.0041a828();\n    uStack68 = 0x419ece;\n    iStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    iVar4 = 1;\n    puStack64 = &stack0xfffffffc;\n    iVar2 = fcn.004045c0();\n    *(in_EAX + 0x78) = 1;\n    var_10h = param_2;\n    while( true ) {\n        for (; (iVar4 <= iVar2 && (*(iVar4 + -1) != '.')); iVar4 = iVar4 + 1) {\n        }\n        iStack72 = in_EAX + 0x70;\n        fcn.00404818();\n        if (iVar2 < iVar4) break;\n        fcn.00403758();\n        puVar3 = fcn.004117e8();\n        if (puVar3 == NULL) {\n            fcn.004191a8();\n        }\n        var_14h = NULL;\n        if (***puVar3 == '\\a') {\n            var_14h = fcn.004118dc();\n        }\n        cVar1 = fcn.004036bc();\n        if (cVar1 == '\\0') {\n            fcn.00419d54(&stack0xfffffffc);\n        }\n        var_10h = var_14h;\n        iVar4 = iVar4 + 1;\n    }\n    fcn.00403758();\n    iVar2 = fcn.004117e8();\n    if (iVar2 == 0) {\n        *(in_EAX + 0x78) = 0;\n        (**(*var_10h + 4))();\n        *(in_EAX + 0x78) = 1;\n        if (*(in_EAX + 0x70) != 0) {\n            fcn.004191a8();\n        }\n    }\n    else {\n        fcn.0041a098();\n    }\n    *in_FS_OFFSET = iStack72;\n    *in_FS_OFFSET = iStack60;\n    *in_FS_OFFSET = iStack48;\n    puStack40 = 0x419f47;\n    uStack44 = 0x419f3f;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 767
    },
    "0041a098": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.0041a098(uint param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var4;\n    ulong uVar5;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 7;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_ch = NULL;\n    var_18h = 0x41a3ad;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041a098::var_1ch;\n    puVar1 = &stack0xfffffffc;\n    var_10h = unaff_EBX;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (*0x8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**_pe_dos_header == '\\a') {\n            fcn.004118dc();\n            cVar2 = fcn.004036bc();\n            puVar1 = var_14h;\n            if (cVar2 != '\\0') {\n                iVar3 = fcn.004118dc();\n                puVar1 = var_14h;\n                if ((*(iVar3 + 0x24) & 4) != 0) goto code_r0x0041a10d;\n            }\n        }\n        var_14h = puVar1;\n        fcn.00418c94();\n        puVar1 = var_14h;\n    }\ncode_r0x0041a10d:\n    var_14h = puVar1;\n    if (***var_ch < 0x11) {\n    // switch table (17 cases) at 0x41a128\n        switch(*(***var_ch * 4 + 0x41a128)) {\n        case 0x41a16c:\n            cVar2 = fcn.00419198();\n            if (cVar2 == '\\a') {\n                fcn.00419a54();\n                fcn.00419f50();\n            }\n            else {\n                fcn.00419b54();\n                fcn.00411950();\n            }\n            break;\n        case 0x41a1b0:\n            fcn.00419258();\n            fcn.00411950();\n            break;\n        case 0x41a1cc:\n            fcn.00419a54();\n            fcn.00411784();\n            fcn.00411950();\n            break;\n        case 0x41a1f3:\n            Var4 = fcn.00419948();\n            var_28h = Var4;\n            var_24h = Var4 >> 0x20;\n            fcn.00411f24(var_28h, var_24h, CONCAT22(0x41, Var4 >> 0x40));\n            break;\n        case 0x41a212:\n            fcn.0041a864();\n            fcn.00411c24();\n            break;\n        case 0x41a230:\n            fcn.0041a920();\n            fcn.00411d38();\n            break;\n        case 0x41a24e:\n            fcn.0041a748();\n            fcn.00411950();\n            break;\n        case 0x41a26a:\n            cVar2 = fcn.00419198();\n            if (cVar2 == '\\r') {\n                fcn.0041aa04();\n                fcn.00411950();\n            }\n            else if (cVar2 == '\\x0e') {\n                fcn.0041aa04();\n                fcn.004118dc();\n                fcn.004192b0();\n            }\n            else {\n                fcn.00419a54();\n                var_24h = 0x41a2d2;\n                fcn.00419f98(&stack0xfffffffc);\n            }\n            break;\n        case 0x41a2d8:\n            cVar2 = fcn.00419198();\n            if (cVar2 == '\\r') {\n                fcn.0041aa04();\n                fcn.004121f0();\n            }\n            else {\n                fcn.00419a54();\n                var_14h = (**(*var_4h + 0x18))();\n                var_10h = var_4h[6];\n                if (var_14h != NULL) {\n                    fcn.004121f0();\n                }\n            }\n            break;\n        case 0x41a33c:\n            fcn.0041b114();\n            fcn.00412170();\n            break;\n        case 0x41a357:\n            uVar5 = fcn.00419bc0();\n            var_24h = uVar5;\n            fcn.00412250(var_24h, uVar5 >> 0x20);\n            break;\n        case 0x41a36e:\n            var_24h = 0x41a374;\n            fcn.00419fd8(&stack0xfffffffc);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41a3b4;\n    fcn.00405368();\n    fcn.0040432c();\n    fcn.004049f8();\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 1372
    },
    "0041a41c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a41c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY128;\n    uint uStackY124;\n    uchar *puStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uchar *puStackY108;\n    uint arg_8h;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack92 = &stack0xfffffffc;\n    uStack72 = 0x41a737;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x41a455;\n    fcn.0041a804();\n    puStack80 = 0x41a464;\n    fcn.0040c8e0();\n    uStack84 = 0x41a715;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 0x41a6d6;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack80 = &stack0xfffffffc;\n    (**(*in_EAX + 0x24))();\n    if (param_2 == NULL) {\n        fcn.0041a828();\n        iVar1 = fcn.004147e8();\n        var_ch = (**(iVar1 + 0x2c))();\n        fcn.0041a828();\n        (**(*var_ch + 0x18))();\n    }\n    else {\n        fcn.0041a828();\n        var_ch = param_2;\n        if ((*(param_2 + 7) & 0x10) == 0) {\n            *(param_2 + 7) = *(param_2 + 7) | 1;\n            *(param_2 + 7) = *(param_2 + 7) | 2;\n            fcn.0041a828();\n            fcn.0041a3bc();\n            (**(*param_2 + 0x18))();\n        }\n        else {\n            fcn.0041a828();\n        }\n    }\n    in_EAX[6] = var_ch;\n    arg_8h = 1;\n    puStackY108 = 0x41a534;\n    fcn.00403478();\n    puStackY108 = 0x41a542;\n    iVar1 = fcn.00414538(arg_8h);\n    in_EAX[0x1d] = iVar1;\n    uStackY112 = 0x41a67b;\n    uStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    in_EAX[7] = var_ch;\n    puStackY120 = 0x41a564;\n    puStackY108 = &stack0xfffffffc;\n    iVar1 = fcn.00406794();\n    iVar1 = *(iVar1 + 8);\n    if (iVar1 == 0) {\n        puStackY120 = 0x41a58a;\n        iVar2 = fcn.00403500();\n        in_EAX[0xd] = iVar2;\n    }\n    else {\n        in_EAX[0xd] = iVar1;\n    }\n    uStackY124 = 0x41a65b;\n    uStackY128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStackY120 = &stack0xfffffffc;\n    iVar2 = fcn.00415324();\n    if (iVar2 < 0) {\n        fcn.0041516c();\n    }\n    in_EAX[10] = in_EAX[6];\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 1;\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 2;\n    (**(*in_EAX[6] + 0x14))();\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) & 0xfffd;\n    if ((iVar1 == 0) && (iVar2 = *(in_EAX[0xd] + 8),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.004152c8();\n            (**(*piVar3 + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStackY128;\n    puStackY120 = 0x41a662;\n    if (iVar1 == 0) {\n        uStackY124 = 0x41a652;\n        fcn.00403530();\n    }\n    in_EAX[0xd] = 0;\n    return;\n}\n",
        "token_count": 1275
    },
    "0041a748": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041a7a7)\n// WARNING: Removing unreachable block (ram,0x0041a7b6)\n\nvoid fcn.0041a748(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x41a7f2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x41a7c5;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    cVar1 = fcn.0041aa04();\n    if (cVar1 != '\\v') {\n        fcn.00418cac();\n    }\n    fcn.00411638();\n    fcn.0041a828();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41a7f9;\n    uStack32 = 0x41a7f1;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 320
    },
    "0041aa18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041aa18(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack20 = 0x41aa54;\n    fcn.0041a828();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41aa5b;\n    uStack20 = 0x41aa53;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 148
    },
    "0041ada0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041ada0(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.004043a0();\n    var_4h = 0;\n    if (*(in_EAX + 0x1c) != 0) {\n        var_4h = fcn.0041df74();\n    }\n    if (var_4h == 0) {\n        if (*(in_EAX + 0x52) != 0) {\n            (**(in_EAX + 0x50))(&var_4h, param_1);\n        }\n        if (var_4h == 0) {\n            var_10h = var_8h;\n            var_ch._0_1_ = 0xb;\n            uVar1 = 0;\n            fcn.0040b264(0, &var_10h);\n            fcn.00403ce4();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 310
    },
    "0041ae98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0041ae98(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack12;\n    \n    iStack12 = fcn.004190ec();\n    if (((iStack12 == 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x1c) != *(in_EAX + 0x18))) {\n        iStack12 = fcn.004190ec();\n    }\n    if (*(in_EAX + 0x62) != 0) {\n        (**(in_EAX + 0x60))(&iStack12);\n    }\n    if (iStack12 != 0) {\n        cVar1 = fcn.00403744();\n        if (cVar1 != '\\0') goto code_r0x0041af02;\n    }\n    fcn.00414728();\ncode_r0x0041af02:\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 222
    },
    "0041b344": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b344(code *arg_8h, uint arg_ch)\n\n{\n    char in_CL;\n    \n    if ((in_CL != '\\0') && (arg_8h._2_2_ != 0)) {\n        fcn.0041d174();\n        (*arg_8h)();\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "0041b36c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b36c(uint arg_8h, uint arg_ch)\n\n{\n    char in_CL;\n    \n    if ((in_CL != '\\0') && (arg_8h._2_2_ != 0)) {\n        fcn.0041d174();\n        fcn.0041b450(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0041b644": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b644(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_8h = *(in_EAX + 0x20);\n    var_ch = *(in_EAX + 0x28);\n    uStack36 = 0x41b712;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    *(param_2 + 7) = *(param_2 + 7) | 4;\n    puVar1 = &stack0xfffffffc;\n    var_4h = in_EAX;\n    if (*(in_EAX + 0x30) != 0) {\n        uVar3 = fcn.0041b5f4(&stack0xfffffffc);\n        *(var_4h + 0x20) = uVar3;\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    if (*(var_4h + 0x42) != 0) {\n        if (*(var_4h + 0x20) != 0) {\n            cVar2 = fcn.004036bc();\n            if (cVar2 == '\\0') goto code_r0x0041b6e3;\n        }\n        var_10h = *(var_4h + 0x20);\n        (**(var_4h + 0x40))(var_4h + 0x28, &var_10h, param_2[2]);\n        *(var_4h + 0x20) = var_10h;\n    }\ncode_r0x0041b6e3:\n    (**(*param_2 + 0x24))();\n    *(param_2 + 7) = *(param_2 + 7) & 0xfffb;\n    *in_FS_OFFSET = uStack40;\n    *(var_4h + 0x20) = var_8h;\n    *(var_4h + 0x28) = var_ch;\n    return;\n}\n",
        "token_count": 538
    },
    "0041b720": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041b720(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uchar *puVar5;\n    char cVar6;\n    int32_t in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    code **in_FS_OFFSET;\n    code *pcVar9;\n    code *pcStack372;\n    uint uStack368;\n    uchar *puStack364;\n    code *pcStack360;\n    uint uStack356;\n    uchar *puStack352;\n    uint uStack348;\n    uint uStack344;\n    uint uStack340;\n    code *pcStack336;\n    uint uStack332;\n    uchar *puStack328;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_25h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack328 = &stack0xfffffffc;\n    puStack364 = &stack0xfffffffc;\n    uStack332 = 0x41bafc;\n    pcStack336 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb0;\n    uStack340 = 0x41b769;\n    fcn.00403480();\n    uStack340 = 0x41b77c;\n    iVar7 = fcn.004045c0();\n    if (*(in_EAX + 0xc) - *(in_EAX + 0x10) < var_128h + iVar7 + 9) {\n        uStack340 = 0x41b79d;\n        fcn.0041b4d8();\n    }\n    uStack340 = 0x41b7a5;\n    fcn.0041b398();\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x34) < *(*(in_EAX + 0x30) + 8))) && (*(in_EAX + 0x20) != 0)) {\n        uStack340 = 0x41b81c;\n        fcn.004152c8();\n    }\n    uStack340 = 0x41b839;\n    fcn.0041bd78();\n    if (*(in_EAX + 0x48) == '\\0') {\n        uStack340 = 0x41b8c4;\n        fcn.00403480();\n        uStack340 = 0x41b8d5;\n        fcn.00404564();\n        uStack340 = 0x41b8e3;\n        fcn.0041d1d8();\n    }\n    else {\n        uStack340 = 0x41b84a;\n        fcn.00403478();\n        uStack340 = 0x41b84f;\n        fcn.00403758();\n        uStack340 = 0x41b854;\n        fcn.00411638();\n        uStack340 = 0x41b862;\n        fcn.00404564();\n        uStack340 = 0;\n        uStack344 = 0x41bb18;\n        uStack348 = 0x41b87d;\n        fcn.00403480();\n        uStack348 = 0x41b88e;\n        fcn.00404564();\n        uStack348 = 0;\n        puStack352 = 0x41b8a4;\n        fcn.00404680();\n        puStack352 = 0x41b8b2;\n        fcn.0041d1d8();\n    }\n    puStack352 = 0x41b8f1;\n    fcn.0041d1d8();\n    puStack352 = 0x41b8f9;\n    fcn.0041b398();\n    if ((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x34) < *(*(in_EAX + 0x30) + 8))) {\n        if (*(in_EAX + 0x20) != 0) {\n            *(in_EAX + 0x34) = *(in_EAX + 0x34) + 1;\n        }\n        *(in_EAX + 0x38) = *(in_EAX + 0x38) + 1;\n    }\n    puStack352 = 0x41b931;\n    fcn.0041bdbc();\n    puStack352 = 0x41b939;\n    fcn.0041bd70();\n    uVar8 = *(in_EAX + 0x30);\n    uVar1 = *(in_EAX + 0x34);\n    uVar2 = *(in_EAX + 0x38);\n    uVar3 = *(in_EAX + 0x18);\n    uVar4 = *(in_EAX + 0x28);\n    uStack356 = 0x41ba9d;\n    pcStack360 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe98;\n    *(in_EAX + 0x30) = 0;\n    *(in_EAX + 0x34) = 0;\n    *(in_EAX + 0x38) = 0;\n    if (*(in_EAX + 0x24) != '\\0') {\n        *in_FS_OFFSET = pcStack360;\n        *(in_EAX + 0x30) = uVar8;\n        *(in_EAX + 0x34) = uVar1;\n        *(in_EAX + 0x38) = uVar2;\n        *(in_EAX + 0x18) = uVar3;\n        *(in_EAX + 0x28) = uVar4;\n        return;\n    }\n    uStack368 = 0x41ba5b;\n    pcStack372 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe8c;\n    puVar5 = &stack0xfffffffc;\n    puStack352 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x20) != 0) &&\n       (puStack352 = &stack0xfffffffc,  cVar6 = fcn.004036bc(),  puVar5 = puStack364,  cVar6 != '\\0')) {\n        iVar7 = *(in_EAX + 0x20);\n        cVar6 = fcn.004036bc();\n        if ((cVar6 != '\\0') && ((*(iVar7 + 0x1d) & 2) != 0)) {\n            *(in_EAX + 0x28) = iVar7;\n        }\n        uVar8 = fcn.00403500();\n        *(in_EAX + 0x30) = uVar8;\n        fcn.0040372c(0x41b338, in_EAX);\n        puVar5 = puStack364;\n    }\n    puStack364 = puVar5;\n    if ((*(param_2 + 0x1d) & 2) != 0) {\n        *(in_EAX + 0x18) = param_2;\n    }\n    pcVar9 = fcn.0041b644;\n    fcn.0040372c(fcn.0041b644, in_EAX);\n    *in_FS_OFFSET = pcVar9;\n    fcn.00403530(0x41ba62);\n    return;\n}\n",
        "token_count": 1702
    },
    "0041bd10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bd10(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch == -1) {\n        if (arg_8h < 0x80000000) goto code_r0x0041bd4a;\n    }\n    else if (arg_ch < -1) goto code_r0x0041bd4a;\n    if (arg_ch == 0) {\n        if (arg_8h < 0x80000000) {\ncode_r0x0041bd3c:\n            fcn.0041bc9c();\n            return;\n        }\n    }\n    else if (arg_ch < 1) goto code_r0x0041bd3c;\ncode_r0x0041bd4a:\n    fcn.0041d3c0();\n    fcn.0041b404();\n    return;\n}\n",
        "token_count": 193
    },
    "0041bdbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bdbc(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x41bdd5;\n    fcn.00403758();\n    puStack36 = 0x41bdda;\n    iVar2 = fcn.00411638();\n    iVar2 = *(iVar2 + 8);\n    if (iVar2 < 1) {\n        puStack36 = 0x41be7b;\n        (**(*param_2 + 4))();\n        return;\n    }\n    puStack36 = 0x41bdf6;\n    iVar3 = fcn.00402728();\n    uStack40 = 0x41be69;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00403758();\n    fcn.00411858();\n    if (-1 < iVar2 + -1) {\n        iVar4 = 0;\n        do {\n            if (*(iVar3 + iVar4 * 4) == 0) break;\n            cVar1 = fcn.004118ac();\n            if (cVar1 != '\\0') {\n                fcn.0041cc64();\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41be70;\n    uStack40 = 0x41be68;\n    fcn.00402748();\n    return;\n}\n",
        "token_count": 436
    },
    "0041be84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041be84(int32_t arg_8h)\n\n{\n    char cVar1;\n    \n    if ((*(*(arg_8h + -4) + 0x20) != 0) && (*(*(arg_8h + -4) + 0x28) != 0)) {\n        fcn.00403478();\n        cVar1 = fcn.00403744();\n        if (cVar1 != '\\0') {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0041c298": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041c298(uint32_t arg_8h)\n\n{\n    char cVar1;\n    bool bVar2;\n    ulong uVar3;\n    \n    cVar1 = fcn.0041be84(*(arg_8h + 8));\n    if (cVar1 != '\\0') {\n        uVar3 = fcn.00412228();\n        bVar2 = uVar3 >> 0x20 == *(arg_8h - 4);\n        if (bVar2) {\n            bVar2 = uVar3 == *(arg_8h - 8);\n        }\n        return uVar3 & 0xffffff00 | bVar2;\n    }\n    bVar2 = *(arg_8h - 4) == 0;\n    if (bVar2) {\n        bVar2 = *(arg_8h - 8) == 0;\n    }\n    return arg_8h & 0xffffff00 | bVar2;\n}\n",
        "token_count": 216
    },
    "0041c43c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c43c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41c52b;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    iVar1 = *(*(arg_8h + -4) + 0x1c);\n    if (iVar1 == *(in_EAX + 4)) {\n        puStack24 = &stack0xfffffffc;\n        fcn.0040435c();\n    }\n    else if (iVar1 == in_EAX) {\n        puStack24 = &stack0xfffffffc;\n        fcn.0040435c();\n    }\n    else if (((*(in_EAX + 4) == 0) || (*(*(in_EAX + 4) + 8) == 0)) || (*(in_EAX + 8) == 0)) {\n        if (*(in_EAX + 8) == 0) {\n            fcn.00404308();\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            fcn.0040460c();\n        }\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        cVar2 = fcn.0041c424();\n        if (cVar2 == '\\0') {\n            in_stack_ffffffd4 = *(in_EAX + 8);\n            fcn.00404680(in_stack_ffffffd4, 0x41c550, *(*(in_EAX + 4) + 8));\n        }\n        else {\n            fcn.0041c43c(arg_8h);\n            in_stack_ffffffd4 = *(in_EAX + 8);\n            fcn.00404680(in_stack_ffffffd4, 0x41c550, 0);\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    fcn.00404308(0x41c532);\n    return;\n}\n",
        "token_count": 504
    },
    "0041c60c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c60c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack32 = 0x41c824;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = fcn.004118dc();\n    if (var_4h == 0) {\n        uStack44 = 0x41c644;\n        cVar1 = fcn.0041c5ac(&stack0xfffffffc);\n        if (cVar1 == '\\0') {\n            uStack44 = 0x41c652;\n            fcn.0041becc(arg_8h);\n            fcn.0041d3c0();\n            goto code_r0x0041c809;\n        }\n    }\n    cVar1 = fcn.004036bc();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.004036bc();\n        if ((cVar1 == '\\0') || ((*(var_4h + 0x24) & 4) != 0)) {\n            var_8h = *(*(arg_8h + -4) + 0x20);\n            fcn.004043a0();\n            uStack44 = 0x41c7a0;\n            uStack48 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd0;\n            fcn.00404564(*(*(arg_8h + -4) + 0x2c));\n            uVar3 = 0x41c838;\n            fcn.00404680(0x41c838, var_14h);\n            cVar1 = fcn.0041be84(arg_8h);\n            if (cVar1 != '\\0') {\n                uVar2 = fcn.004118dc();\n                *(*(arg_8h + -4) + 0x20) = uVar2;\n            }\n            fcn.0041bdbc();\n            *in_FS_OFFSET = uVar3;\n            *(*(arg_8h + -4) + 0x20) = var_8h;\n            fcn.0040435c(0x41c7a7);\n            return;\n        }\n        uStack44 = 0x41c69c;\n        cVar1 = fcn.0041c5ac(&stack0xfffffffc);\n        if (cVar1 == '\\0') {\n            uStack44 = 0x41c6b4;\n            fcn.0041c43c(arg_8h);\n            if (var_10h != 0) {\n                uStack44 = 0x41c6c8;\n                fcn.0041becc(arg_8h);\n                fcn.0041bbd8();\n            }\n        }\n    }\ncode_r0x0041c809:\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41c82b;\n    uStack32 = 0x41c823;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 822
    },
    "0041c83c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c83c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41c8f0;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    cVar1 = fcn.0041be84(*(arg_8h + 8));\n    if (cVar1 != '\\0') {\n        fcn.0041228c();\n        if (*(arg_8h + -4) != 0) {\n            fcn.00406130();\n            cVar1 = fcn.0040cbc8();\n            if (cVar1 != '\\0') {\n                arg_8h_00 = *(arg_8h + 8);\n                (**(_pe_dos_header + 0xc))();\n                fcn.0041c564(arg_8h_00);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41c8f7;\n    uStack24 = 0x41c8e7;\n    fcn.00406130();\n    uStack24 = 0x41c8ef;\n    fcn.00406130();\n    return;\n}\n",
        "token_count": 336
    },
    "0041c910": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c910(uint arg_8h)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = NULL;\n    var_10h = 0;\n    var_14h = 0;\n    uStack32 = 0x41ca13;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.0041228c();\n    if (var_4h != 0) {\n        fcn.00406130();\n        cVar1 = fcn.0040cbc8();\n        if (cVar1 != '\\0') {\n            var_8h = (**(*var_ch + 0xc))();\n            cVar1 = fcn.0041c83c(&stack0xfffffffc);\n            if (cVar1 == '\\0') {\n                fcn.0041c43c(arg_8h);\n                if (var_10h != 0) {\n                    fcn.0041becc(arg_8h);\n                    fcn.0041bbd8();\n                }\n            }\n            goto code_r0x0041c9e5;\n        }\n    }\n    cVar1 = fcn.0041be84(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.0041228c();\n        if (var_14h != 0) {\n            fcn.0041becc(arg_8h);\n            fcn.0041d3c0();\n        }\n    }\ncode_r0x0041c9e5:\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41ca1a;\n    uStack32 = 0x41c9fa;\n    fcn.00406130();\n    uStack32 = 0x41ca02;\n    fcn.00404308();\n    uStack32 = 0x41ca0a;\n    fcn.00406130();\n    uStack32 = 0x41ca12;\n    fcn.00406130();\n    return;\n}\n",
        "token_count": 546
    },
    "0041ca30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041ca30(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_108h;\n    int32_t var_8h;\n    \n    cVar1 = fcn.0041be84(*(arg_8h + 8));\n    iVar3 = 0;\n    if (cVar1 != '\\0') {\n        fcn.004121b0();\n        iVar3 = var_8h;\n    }\n    if (iVar3 == *(arg_8h + -8)) {\ncode_r0x0041caab:\n        uVar2 = 1;\n    }\n    else {\n        if (*(arg_8h + -8) != 0) {\n            fcn.004037ec();\n            if (var_108h == '\\0') goto code_r0x0041caab;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 227
    },
    "0041cc64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.0041cc64(uint *param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_1[1] == 0) {\n        return;\n    }\n    if (param_1[2] == 0) {\n        if (***param_1 != '\\a') {\n            return;\n        }\n        fcn.004118dc(param_2);\n        cVar1 = fcn.004036bc();\n        if (cVar1 == '\\0') {\n            return;\n        }\n        iVar2 = fcn.004118dc(param_2);\n        if ((*(iVar2 + 0x24) & 4) == 0) {\n            return;\n        }\n    }\n    // switch table (17 cases) at 0x41ccec\n    switch(***param_1) {\n    case 1:\n    case 2:\n    case 3:\n    case 6:\n        fcn.0041c120(&stack0xfffffffc);\n        break;\n    case 4:\n        fcn.0041c24c(&stack0xfffffffc);\n        break;\n    case 5:\n    case 10:\n    case 0xb:\n        fcn.0041c3b8(&stack0xfffffffc);\n        break;\n    case 7:\n        fcn.0041c60c(&stack0xfffffffc);\n        break;\n    case 8:\n        fcn.0041cab4(&stack0xfffffffc);\n        break;\n    case 0xc:\n        fcn.0041cbf4(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.0041c910(&stack0xfffffffc);\n        break;\n    case 0x10:\n        fcn.0041c2e8(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 451
    },
    "0041d3d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041d3d4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint uStack8;\n    \n    uStack8 = 0x47da04;\n    puStack12 = 0x41d3e1;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack16 = 0x41d430;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if ((*0x47da1c == 0) && (*0x46f4f4 == 0)) {\n        puStack12 = &stack0xfffffffc;\n        *0x46f4f4 = fcn.00403500();\n    }\n    *0x47da1c = *0x47da1c + 1;\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x41d437;\n    uStack16 = 0x47da04;\n    uStack20 = 0x41d42f;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 256
    },
    "0041d480": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0041d480(void)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY68;\n    int32_t iStackY64;\n    uchar *puStackY60;\n    int32_t iStackY56;\n    uint uStackY52;\n    uchar *puStackY48;\n    uint uStackY44;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (uVar1 != **0x47c2c4) {\n        var_10h = sub.kernel32.dll_GetCurrentThreadId_1();\n        var_ch._0_1_ = 0;\n        uStackY44 = 0x41d4bc;\n        fcn.0040b264(0, &fcn.0041d480::var_10h);\n        uStackY44 = 0x41d4c1;\n        uVar1 = fcn.00403ce4();\n    }\n    if (*0x47da00 == '\\0') {\n        return uVar1 & 0xffffff00;\n    }\n    uStackY44 = 0x47da04;\n    puStackY48 = 0x41d4d8;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStackY52 = 0x41d596;\n    iStackY56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if ((*0x46f4f4 == 0) || (*(*0x46f4f4 + 8) < 1)) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = '\\x01';\n    }\n    puStackY48 = &fcn.0041d480::var_1h + 1;\n    if (var_1h != '\\0') {\n        while (0 < *(*0x46f4f4 + 8)) {\n            puStackY60 = 0x41d517;\n            var_8h = fcn.004152c8();\n            puStackY60 = 0x41d526;\n            fcn.004151b8();\n            iStackY64 = 0x41d549;\n            iStackY68 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffbc;\n            puStackY60 = &fcn.0041d480::var_1h + 1;\n            (**(*var_8h + 0x20))();\n            *in_FS_OFFSET = iStackY64;\n            iStackY56 = var_8h[1];\n            puStackY60 = 0x41d56c;\n            sub.kernel32.dll_SetEvent();\n        }\n        *0x47da00 = '\\0';\n    }\n    *in_FS_OFFSET = iStackY56;\n    puStackY48 = 0x41d5a1;\n    uStackY52 = 0x47da04;\n    iStackY56 = 0x41d595;\n    uVar1 = sub.kernel32.dll_LeaveCriticalSection_1();\n    return uVar1;\n}\n",
        "token_count": 750
    },
    "0041d5ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041d5ac\n      noreturn \n               (void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41d63d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(in_EAX + 0xd) == '\\0') {\n        uStack40 = 0x41d5ed;\n        uStack44 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd4;\n        puStack36 = &stack0xfffffffc;\n        (**(*in_EAX + 4))();\n        *in_FS_OFFSET = uStack44;\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41d644;\n    cVar1 = *(in_EAX + 0xf);\n    *(in_EAX + 4) = 1;\n    uStack28 = 0x41d629;\n    (***in_EAX)();\n    if (cVar1 != '\\0') {\n        uStack28 = 0x41d635;\n        fcn.00403530();\n    }\n    // WARNING: Subroutine does not return\n    uStack28 = 0x41d63c;\n    fcn.00404300();\n}\n",
        "token_count": 355
    },
    "0041d71c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041d71c(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.004038e4();\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x10) == '\\0')) {\n        fcn.0041d9cc();\n        if (*(iVar1 + 0xc) != '\\0') {\n            fcn.0041d9a4();\n        }\n        fcn.0041d9d4();\n    }\n    if (*(iVar1 + 4) != 0) {\n        sub.kernel32.dll_CloseHandle_1(*(iVar1 + 4));\n    }\n    fcn.00403520();\n    fcn.00403530();\n    fcn.0041d43c();\n    if ('\\0' < extraout_DL) {\n        fcn.004038cc();\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0041d84c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d84c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    uint hHandle;\n    int32_t var_4h;\n    \n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0xffffffff;\n    uStack32 = 0;\n    puStack36 = 0x41d862;\n    var_4h = in_EAX;\n    hHandle = sub.kernel32.dll_CreateEventA();\n    uStack40 = 0x41d94d;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack48 = 0x47da04;\n    puStack52 = 0x41d87d;\n    puStack36 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack56 = 0x41d92f;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    *(var_4h + 0x28) = 0;\n    *(var_4h + 0x20) = arg_8h;\n    *(var_4h + 0x24) = arg_ch;\n    var_ch = var_4h;\n    uStack64 = 0x41d8b5;\n    puStack52 = &stack0xfffffffc;\n    fcn.0041516c();\n    *0x47da00 = 1;\n    if (*0x46f4b6 != 0) {\n        uStack64 = 0x41d8d5;\n        (**0x46f4b4)();\n    }\n    uStack64 = 0x47da04;\n    puStack68 = 0x41d8df;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    uStack72 = 0x41d910;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uVar1 = hHandle;\n    puStack68 = &stack0xfffffffc;\n    sub.kernel32.dll_WaitForSingleObject(hHandle, 0xffffffff);\n    *in_FS_OFFSET = uVar1;\n    uStack76 = 0x41d917;\n    sub.kernel32.dll_EnterCriticalSection_1(0x47da04);\n    return;\n}\n",
        "token_count": 638
    },
    "0041dab8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041dab8(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char extraout_DL;\n    \n    iVar1 = fcn.004038e4();\n    fcn.0041dd0c();\n    if (*(iVar1 + 0x14) != 0) {\n        while ((*(iVar1 + 0x14) != 0 && (0 < *(*(iVar1 + 0x14) + 8)))) {\n            piVar2 = fcn.004152c8();\n            (**(*piVar2 + 0x10))();\n        }\n        fcn.0040cbb8();\n    }\n    fcn.0041dcb4();\n    if (*(iVar1 + 4) != 0) {\n        fcn.0041dc7c();\n    }\n    fcn.00415b68();\n    if ('\\0' < extraout_DL) {\n        fcn.004038cc();\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0041db3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041db3c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 4) == 0) || (*(in_EAX + 4) != *(param_2 + 4))) {\n        if (*(in_EAX + 0x14) == 0) {\n            uVar1 = fcn.00403500();\n            *(in_EAX + 0x14) = uVar1;\n        }\n        iVar2 = fcn.00415324();\n        if (iVar2 < 0) {\n            fcn.0041516c();\n            fcn.0041db3c();\n        }\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x100;\n    return;\n}\n",
        "token_count": 206
    },
    "0041dbd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041dbd0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.00403500();\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.0041516c();\n    *(param_2 + 4) = in_EAX;\n    return;\n}\n",
        "token_count": 114
    },
    "0041dbfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041dbfc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 4) = 0;\n    fcn.00415468();\n    if (*(*(in_EAX + 0x10) + 8) == 0) {\n        fcn.00403530();\n        *(in_EAX + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0041dd48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041dd48(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        fcn.00415468();\n        if (*(*(in_EAX + 0x14) + 8) == 0) {\n            fcn.00403530();\n            *(in_EAX + 0x14) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0041dedc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041dedc(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        cVar1 = fcn.00408510();\n        if ((cVar1 == '\\0') && (in_EAX == *(in_EDX + 4))) {\n            iVar2 = fcn.0041df74();\n            if (iVar2 != 0) {\n                var_ch = arg_8h;\n                var_8h._0_1_ = 0xb;\n                fcn.0040b264(0, &var_ch);\n                fcn.00403ce4();\n            }\n        }\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 4) != 0)) {\n        (**(**(in_EAX + 4) + 0x20))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "0041df74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041df74(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((param_2 != 0) && (*(in_EAX + 0x10) != 0)) && (iVar3 = *(*(in_EAX + 0x10) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.004152c8();\n            cVar1 = fcn.00408510();\n            if (cVar1 != '\\0') goto code_r0x0041dfb9;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    uVar2 = 0;\ncode_r0x0041dfb9:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 210
    },
    "0041e064": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041e064(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        fcn.00415254();\n    }\n    fcn.004152c8();\n    return;\n}\n",
        "token_count": 61
    },
    "0041e0f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e0f4(char param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xffef;\n    }\n    else {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x10;\n    }\n    if ((param_1 != '\\0') && (iVar1 = fcn.0041e090(),  -1 < iVar1 + -1)) {\n        do {\n            fcn.0041e064();\n            fcn.0041e0f4();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0041e1fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e1fc(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.004035e4();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = (****(arg_8h + 0x20))(*(arg_8h + 0x20), arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 164
    },
    "0041e3d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041e3d8(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.004038e4();\n    fcn.0041dab8();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.0041dd6c();\n    }\n    while (0 < *(*(iVar1 + 0x50) + 8)) {\n        fcn.004153b0();\n        fcn.0041e518();\n    }\n    fcn.0040cbb8();\n    if ('\\0' < extraout_DL) {\n        fcn.004038cc();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0041e464": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041e464(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x42) != 0) {\n        (**(in_EAX + 0x40))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "0041e480": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041e480(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4a) != 0) {\n        (**(in_EAX + 0x48))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 65
    },
    "0041e5d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e5d8(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41e627;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 8))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 228
    },
    "0041e640": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e640(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41e68f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0xc))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 228
    },
    "0041e790": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041e790(int32_t arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    puStack60 = 0x41e7a1;\n    fcn.004061a0();\n    uStack64 = 0x41e97d;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_4h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack76 = 0x41e956;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (arg_14h == 0) {\n        if (arg_10h < 0x100001) {\ncode_r0x0041e7fa:\n            var_ch = arg_10h;\n            goto code_r0x0041e800;\n        }\n    }\n    else if (arg_14h < 1) goto code_r0x0041e7fa;\n    var_ch = 0x100000;\ncode_r0x0041e800:\n    puStack84 = 0x41e808;\n    puStack60 = &stack0xfffffffc;\n    var_8h = fcn.00402728();\n    uStack88 = 0x41e945;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    do {\n        if (arg_14h == 0) {\n            if (arg_10h == 0) {\ncode_r0x0041e905:\n                *in_FS_OFFSET = uStack92;\n                puStack84 = 0x41e94c;\n                uStack88 = 0x41e91a;\n                fcn.00402748();\n                if (arg_1ch != NULL) {\n                    *arg_1ch = var_20h;\n                    arg_1ch[1] = var_1ch;\n                }\n                if (arg_18h != NULL) {\n                    *arg_18h = var_18h;\n                    arg_18h[1] = var_14h;\n                }\n                return;\n            }\n        }\n        else if (arg_14h < 1) goto code_r0x0041e905;\n        uVar1 = arg_10h;\n        if (arg_14h == 0) {\n            if (0x7fffffff < arg_10h) {\ncode_r0x0041e831:\n                uVar1 = 0x7fffffff;\n            }\n        }\n        else if (0 < arg_14h) goto code_r0x0041e831;\n        for (; 0 < uVar1; uVar1 = uVar1 - uVar2) {\n            uVar2 = (**(**(arg_8h + 0xc) + 8))();\n            if (uVar2 == 0) {\n                fcn.00403d90();\n                *in_FS_OFFSET = uStack92;\ncode_r0x0041e967:\n                *in_FS_OFFSET = uStack80;\n                puStack72 = 0x41e984;\n                uStack76 = 0x41e97c;\n                fcn.00406130();\n                return;\n            }\n            bVar3 = CARRY4(var_18h, uVar2);\n            var_18h = var_18h + uVar2;\n            var_14h = var_14h + (uVar2 >> 0x1f) + bVar3;\n            var_28h = 0;\n            var_24h = 0;\n            var_4h = (**(*arg_ch + 0x10))(arg_ch, var_8h, uVar2, &fcn.0041e790::var_28h);\n            bVar3 = CARRY4(var_20h, var_28h);\n            var_20h = var_20h + var_28h;\n            var_1ch = var_1ch + var_24h + bVar3;\n            if ((var_4h == 0) && (uVar2 != var_28h)) {\n                var_4h = -0x7fffbffb;\n            }\n            if (var_4h != 0) {\n                fcn.00403d90();\n                *in_FS_OFFSET = uStack92;\n                goto code_r0x0041e967;\n            }\n            bVar3 = arg_10h < uVar2;\n            arg_10h = arg_10h - uVar2;\n            arg_14h = (arg_14h - (uVar2 >> 0x1f)) - bVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 1280
    },
    "0041eaf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0041eaf0(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x47da20;\n    if (*0x47da24 == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x47da20;\n        fcn.004028e0();\n        uVar2 = fcn.0041eae8();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.0041eae8();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x47da24;\n            puVar3 = puVar4 + 0xd;\n            *0x47da24 = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x47da20 = puVar1;\n    puVar3 = *0x47da24;\n    puVar1 = *0x47da24 + 5;\n    *0x47da24 = *(*0x47da24 + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 377
    },
    "0041ebac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ebac(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x46f50c = *0x47d714;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x47d714, *0x46f520, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x46f520, *0x47d714);\n        }\n        sub.user32.dll_RegisterClassA(0x46f4fc);\n    }\n    uVar2 = sub.user32.dll_CreateWindowExA(0x80, *0x46f520, 0x41ec5c, 0x80000000, 0, 0, 0, 0, 0, 0, *0x47d714, 0);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.0041eaf0(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 319
    },
    "0041fdec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fdec(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x41fe07;\n    iVar2 = fcn.0041fd60();\n    puStack24 = 0x41fe11;\n    fcn.0041fdd4();\n    uStack28 = 0x41fec0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (var_8h = *(in_EAX + 4); var_8h != NULL; var_8h = *var_8h) {\n        if (iVar2 == *(var_8h + 3)) {\n            cVar1 = fcn.0040849c();\n            if (cVar1 != '\\0') break;\n        }\n    }\n    if (var_8h == NULL) {\n        var_8h = fcn.00402728();\n        *var_8h = *(in_EAX + 4);\n        var_8h[1] = 0;\n        var_8h[2] = *param_2;\n        *(var_8h + 3) = iVar2;\n        fcn.004028e0();\n        *(in_EAX + 4) = var_8h;\n    }\n    var_8h[1] = var_8h[1] + 1;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41fec7;\n    uStack28 = 0x41febf;\n    fcn.0041fde0();\n    return;\n}\n",
        "token_count": 431
    },
    "0041fed0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fed0(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *var_10h;\n    uchar var_9h;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if (param_2 == NULL) {\n        return;\n    }\n    uStack24 = 0x41fef4;\n    var_10h = param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0041fdd4();\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_10h[1] = var_10h[1] + -1;\n    var_9h = var_10h[1] == 0;\n    if (var_9h) {\n        puVar1 = *(var_4h + 4);\n        if (*(var_4h + 4) == var_8h) {\n            *(var_4h + 4) = *var_8h;\n        }\n        else {\n            do {\n                puVar2 = puVar1;\n                puVar1 = *puVar2;\n            } while (puVar1 != var_8h);\n            *puVar2 = *var_8h;\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    uStack24 = 0x41ff5e;\n    uStack28 = 0x41ff56;\n    fcn.0041fde0();\n    return;\n}\n",
        "token_count": 393
    },
    "00420064": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420064(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x420075;\n    fcn.0041fdd4();\n    uStack24 = 0x4200c3;\n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    for (puVar2 = *(in_EAX + 4); puVar2 != NULL; puVar2 = *puVar2) {\n        iStack28 = puVar2[2];\n        if ((iStack28 != 0) && (puVar2[5] < 0)) {\n            sub.gdi32.dll_DeleteObject();\n            puVar2[2] = 0;\n            iVar1 = iStack28;\n        }\n        iStack28 = iVar1;\n        iVar1 = iStack28;\n    }\n    *in_FS_OFFSET = iVar1;\n    puStack20 = 0x4200ca;\n    uStack24 = 0x4200c2;\n    iStack28 = iVar1;\n    fcn.0041fde0();\n    return;\n}\n",
        "token_count": 307
    },
    "004205ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004205ac(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 10) != 0) {\n        (**(in_EAX + 8))();\n    }\n    return;\n}\n",
        "token_count": 52
    },
    "00420f50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00420f50(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack28 = 0x420f6f;\n        fcn.0041fdd4();\n        uStack32 = 0x420fd6;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_14h = *(*(var_4h + 0x1c) * 2 + 0x46f77c);\n            var_10h = *(var_4h + 0x18);\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.0042057c();\n            puStack40 = &fcn.00420f50::var_14h;\n            uVar1 = sub.gdi32.dll_CreatePenIndirect();\n            *(var_4h + 8) = uVar1;\n        }\n        *in_FS_OFFSET = puStack40;\n        uStack32 = 0x420fdd;\n        iStack36 = 0x420fd5;\n        uVar1 = fcn.0041fde0();\n        return uVar1;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 403
    },
    "0042123c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0042123c(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack24 = 0x42125f;\n        fcn.0041fdd4();\n        uStack28 = 0x421309;\n        puStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        if (*(var_4h + 8) == 0) {\n            if (*(var_4h + 0x18) == NULL) {\n                var_8h = 0;\n                uVar1 = *(var_4h + 0x1c);\n                if (uVar1 == 0) {\n                    var_10h = 0;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else if (uVar1 == 1) {\n                    var_10h = 1;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else {\n                    var_10h = 2;\n                    var_8h = (uVar1 & 0x7f) - 2;\n                    puStack24 = &stack0xfffffffc;\n                }\n            }\n            else {\n                var_10h = 3;\n                puStack24 = &stack0xfffffffc;\n                (**(**(var_4h + 0x18) + 0x6c))();\n                var_8h = (**(**(var_4h + 0x18) + 100))();\n            }\n            var_ch = fcn.0042057c();\n            puStack32 = &fcn.0042123c::var_10h;\n            uVar2 = sub.gdi32.dll_CreateBrushIndirect();\n            *(var_4h + 8) = uVar2;\n        }\n        *in_FS_OFFSET = puStack32;\n        puStack24 = 0x421310;\n        uStack28 = 0x421308;\n        uVar2 = fcn.0041fde0();\n        return uVar2;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 555
    },
    "00421478": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421478(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t arg_14h;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t arg_18h;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff20;\n    int32_t iStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    int32_t hgdiobj;\n    int32_t *var_24h;\n    uint hdc;\n    uint crColor;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX != NULL) {\n        puStack60 = 0x42149e;\n        fcn.004218e0();\n        uStack64 = 0x42171e;\n        iStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack72 = 0x4214b4;\n        puStack60 = &stack0xfffffffc;\n        (**(*in_EAX + 0x10))();\n        puStack72 = 0x4214c2;\n        fcn.00421c70();\n        puStack72 = 0x4214ca;\n        fcn.00424860();\n        puStack72 = 0x4214cf;\n        fcn.004218e0();\n        uStack76 = 0x4216f9;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        arg_2ch = in_EDX[2] - *in_EDX;\n        arg_28h = in_EDX[3] - in_EDX[1];\n        arg_18h = arg_ch[2] - *arg_ch;\n        arg_14h = arg_ch[3] - arg_ch[1];\n        uStack84 = 0x421504;\n        puStack72 = &stack0xfffffffc;\n        iVar2 = fcn.0042494c();\n        if (iVar2 == arg_8h) {\n            var_24h = NULL;\n            uStack84 = 0x421516;\n            uVar3 = (**(*in_ECX + 0x68))();\n            uStack84 = 0;\n            uStack88 = 0x421520;\n            hdc = sub.gdi32.dll_CreateCompatibleDC();\n            puStack96 = 0x421530;\n            uStack92 = hdc;\n            uStack88 = uVar3;\n            hgdiobj = sub.gdi32.dll_SelectObject();\n        }\n        else {\n            uStack84 = 0x421541;\n            var_24h = fcn.00424298();\n            uStack84 = 0x42154f;\n            (**(*var_24h + 8))();\n            puStack96 = 0x42155a;\n            fcn.00424ac0();\n            puStack96 = 0x421562;\n            fcn.00424860();\n            puStack96 = 0x42156d;\n            fcn.00421c70();\n            puStack96 = 0x421575;\n            iVar2 = fcn.00424860();\n            hdc = *(iVar2 + 4);\n            hgdiobj = 0;\n        }\n        uStack100 = 0x4216d7;\n        iStack104 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff98;\n        puStack96 = &stack0xfffffffc;\n        fcn.00424860();\n        fcn.00421c70();\n        cVar1 = fcn.0042131c();\n        if (cVar1 == '\\x01') {\n            iVar2 = fcn.00424860();\n            fcn.0042212c(arg_ch[1], *arg_ch, hdc, arg_14h, arg_18h, arg_ch[1], *arg_ch, *(iVar2 + 4), arg_28h, arg_2ch);\n        }\n        else {\n            iVar2 = fcn.00424860(*arg_ch, arg_ch[1], arg_18h, arg_14h, 0xcc0020);\n            sub.gdi32.dll_StretchBlt(in_EAX[1], *in_EDX, in_EDX[1], arg_2ch, arg_28h, *(iVar2 + 4));\n            uVar3 = sub.gdi32.dll_SetTextColor(in_EAX[1], 0);\n            uVar4 = sub.gdi32.dll_SetBkColor(in_EAX[1], 0xffffff);\n            sub.gdi32.dll_StretchBlt\n                      (in_EAX[1], *in_EDX, in_EDX[1], arg_2ch, arg_28h, hdc, *arg_ch, arg_ch[1], arg_18h, arg_14h, \n                       0xe20746);\n            sub.gdi32.dll_SetTextColor(in_EAX[1], uVar3);\n            in_stack_ffffff20 = in_EAX[1];\n            sub.gdi32.dll_SetBkColor(in_stack_ffffff20, uVar4);\n        }\n        *in_FS_OFFSET = in_stack_ffffff20;\n        if (var_24h == NULL) {\n            if (hgdiobj != 0) {\n                sub.gdi32.dll_SelectObject(hdc, hgdiobj, 0x4216de);\n            }\n            sub.gdi32.dll_DeleteDC(hdc);\n        }\n        else {\n            fcn.00403530();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 1358
    },
    "00421a38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00421a38(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_1h;\n    \n    uStack16 = 0x47da60;\n    puStack20 = 0x421a49;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack24 = 0x421a84;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x50) == 0) {\n        puStack20 = &fcn.00421a38::var_1h + 1;\n        fcn.004218e0();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x421a8b;\n    uStack24 = 0x47da60;\n    uStack28 = 0x421a83;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 256
    },
    "00421f98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421f98(char param_1, uint *param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint lpvObject;\n    uint var_30h;\n    uint var_2ch;\n    uint hdcDest;\n    int32_t var_18h;\n    int32_t hdc;\n    int32_t var_10h;\n    uint nWidth;\n    uint nHeight;\n    uint hgdiobj;\n    \n    nWidth = *param_2;\n    nHeight = param_2[1];\n    uStack72 = 0;\n    uStack76 = 0x421fb4;\n    hgdiobj = in_EAX;\n    var_18h = sub.gdi32.dll_CreateCompatibleDC();\n    uStack76 = 0;\n    puStack80 = 0x421fbe;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    uStack84 = 0x4220e6;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = &fcn.00421f98::lpvObject;\n    uStack96 = 0x18;\n    uStack100 = hgdiobj;\n    uStack104 = 0x421fde;\n    puStack80 = &stack0xfffffffc;\n    sub.gdi32.dll_GetObjectA();\n    if (param_1 != '\\0') {\n        uStack104 = 0;\n        puStack108 = 0x1;\n        uStack112 = 1;\n        iStack116 = nHeight;\n        var_10h = sub.gdi32.dll_CreateBitmap(nWidth);\n        if (var_10h != 0) {\n            iVar1 = sub.gdi32.dll_SelectObject(var_18h, hgdiobj);\n            iVar2 = sub.gdi32.dll_SelectObject(hdcDest, var_10h);\n            sub.gdi32.dll_StretchBlt(hdcDest, 0, 0, nWidth, nHeight, var_18h, 0, 0, var_30h, var_2ch, 0xcc0020);\n            if (iVar1 != 0) {\n                in_stack_ffffff44 = var_18h;\n                sub.gdi32.dll_SelectObject(var_18h, iVar1);\n            }\n            if (iVar2 != 0) {\n                sub.gdi32.dll_SelectObject(hdcDest, iVar2);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffff44;\n        sub.gdi32.dll_DeleteDC(var_18h, 0x4220ed);\n        sub.gdi32.dll_DeleteDC(hdcDest);\n        return;\n    }\n    uStack104 = 0;\n    puStack108 = 0x422001;\n    hdc = sub.user32.dll_GetDC();\n    if (hdc == 0) {\n        puStack108 = 0x42200f;\n        fcn.00421ee0();\n    }\n    uStack112 = 0x422055;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    iVar1 = hdc;\n    puStack108 = &stack0xfffffffc;\n    var_10h = sub.gdi32.dll_CreateCompatibleBitmap(hdc, nWidth, nHeight);\n    if (var_10h == 0) {\n        fcn.00421ee0();\n    }\n    *in_FS_OFFSET = iVar1;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x42205c);\n    return;\n}\n",
        "token_count": 877
    },
    "0042212c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042212c(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint hdc, int32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    int32_t hpal;\n    uint var_20h;\n    uint crColor;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint nYOriginDest;\n    uint nXOriginDest;\n    \n    if (((**0x47c2b8 == 2) && (arg_18h == arg_2ch)) && (arg_14h == arg_28h)) {\n        uStack56 = 1;\n        puStack60 = 0x1;\n        uStack64 = hdc;\n        uStack68 = 0x422174;\n        sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack68 = 0x422179;\n        uStack68 = fcn.00421f88();\n        iStack72 = arg_10h;\n        puStack76 = 0x422189;\n        uVar1 = sub.gdi32.dll_SelectObject();\n        uStack80 = 0x4221ff;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        uVar2 = fcn.0040726c();\n        uVar3 = uVar1;\n        sub.gdi32.dll_MaskBlt();\n        *in_FS_OFFSET = in_EAX;\n        uVar3 = sub.gdi32.dll_SelectObject\n                          (arg_10h, uVar1, 0x4223b3, arg_2ch, arg_28h, hdc, arg_20h, arg_1ch, uVar3, arg_ch, arg_8h, \n                           uVar2);\n        sub.gdi32.dll_DeleteObject(uVar3);\n        return;\n    }\n    uStack56 = 0;\n    puStack60 = 0x422212;\n    sub.gdi32.dll_CreateCompatibleDC();\n    puStack60 = 0x422217;\n    uVar3 = fcn.00421f88();\n    uStack64 = 0x4223ac;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    iStack72 = arg_14h;\n    puStack76 = arg_18h;\n    uStack80 = hdc;\n    uStack84 = 0x422233;\n    puStack60 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack84 = 0x422238;\n    uVar1 = fcn.00421f88();\n    uStack84 = uVar1;\n    iVar4 = sub.gdi32.dll_SelectObject(uVar3);\n    iVar5 = sub.gdi32.dll_SelectPalette(hdc, *0x47da2c, 0);\n    sub.gdi32.dll_SelectPalette(hdc, iVar5, 0);\n    if (iVar5 == 0) {\n        hpal = sub.gdi32.dll_SelectPalette(uVar3, *0x47da2c, 0xffffffff);\n    }\n    else {\n        hpal = sub.gdi32.dll_SelectPalette(uVar3, iVar5, 0xffffffff);\n    }\n    sub.gdi32.dll_RealizePalette(uVar3);\n    sub.gdi32.dll_StretchBlt(uVar3, 0, 0, arg_18h, arg_14h, arg_10h, arg_ch, arg_8h, arg_18h, arg_14h, 0xcc0020);\n    sub.gdi32.dll_StretchBlt(uVar3, 0, 0, arg_18h, arg_14h, hdc, arg_20h, arg_1ch, arg_18h, arg_14h, 0x440328);\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    if (iVar4 != 0) {\n        sub.gdi32.dll_SelectObject(uVar3, iVar4);\n    }\n    sub.gdi32.dll_DeleteObject();\n    *in_FS_OFFSET = uVar1;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar3, hpal, 0, 0x4223b3);\n    }\n    sub.gdi32.dll_DeleteDC(uVar3);\n    return;\n}\n",
        "token_count": 1139
    },
    "004225e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.004225e0(void)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffb8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hdc;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if (*0x47da2c != 0) {\n        uStack20 = 0;\n        puStack24 = 0x4225fd;\n        uVar1 = sub.user32.dll_GetDC();\n        uStack28 = 0x422666;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &fcn.004225e0::var_1h + 1;\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar1, 0x68);\n        if (0xf < iVar2) {\n            sub.gdi32.dll_GetPaletteEntries(*0x47da2c, 0, 8, in_EAX + 4);\n            in_stack_ffffffb8 = *0x47da2c;\n            sub.gdi32.dll_GetPaletteEntries(*0x47da2c, 8, 8, (in_EAX - 0x1c) + *(in_EAX + 2) * 4);\n            var_1h._0_1_ = 1;\n        }\n        *in_FS_OFFSET = in_stack_ffffffb8;\n        uVar3 = sub.user32.dll_ReleaseDC(0, uVar1, 0x42266d);\n        return uVar3;\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 441
    },
    "00422678": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00422678(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uStack1080;\n    uint32_t uStack1076;\n    uint uStack1072;\n    uint32_t uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uchar *puStack1056;\n    uint32_t uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    ushort uStack1040;\n    \n    uStack1040 = 0x300;\n    if (in_EAX == 0) {\n        uStack1044 = 0x4226da;\n        fcn.004028e0();\n    }\n    else {\n        uStack1044 = 0;\n        uStack1048 = 0x422696;\n        uVar3 = sub.gdi32.dll_CreateCompatibleDC();\n        puStack1056 = 0x42269f;\n        uStack1052 = uVar3;\n        uVar4 = sub.gdi32.dll_SelectObject();\n        puStack1056 = &stack0xfffffbe8;\n        uStack1060 = 0x100;\n        uStack1064 = 0;\n        uStack1072 = 0x4226b3;\n        uStack1068 = uVar3;\n        uVar2 = sub.gdi32.dll_GetDIBColorTable();\n        uStack1068 = uStack1068 & 0xffff | uVar2 << 0x10;\n        uStack1080 = 0x4226bf;\n        uStack1076 = uVar3;\n        uStack1072 = uVar4;\n        sub.gdi32.dll_SelectObject();\n        uStack1080 = uVar3;\n        sub.gdi32.dll_DeleteDC();\n    }\n    if (uStack1080._2_2_ != 0) {\n        if ((uStack1080._2_2_ != 0x10) || (cVar1 = fcn.004225e0(),  cVar1 == '\\0')) {\n            fcn.00422470();\n        }\n        uVar4 = sub.gdi32.dll_CreatePalette(&stack0xfffffbc8);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 524
    },
    "0042271c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042271c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack44;\n    \n    if (((in_EAX != 0) && (iVar1 = sub.gdi32.dll_GetObjectA(),  iVar1 != 0)) && (in_EAX != 0)) {\n        sub.gdi32.dll_GetPaletteEntries();\n        fcn.00422470();\n        iStack44 = in_EAX;\n    }\n    return CONCAT44(iStack44, iStack44);\n}\n",
        "token_count": 119
    },
    "00422770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422770(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint lpbInit;\n    uint hdc;\n    uint var_ch;\n    uint var_8h;\n    uint lpbmih;\n    \n    *(in_EAX + 8) = *(in_EAX + 8) >> 1;\n    uStack40 = 0x42279e;\n    iVar1 = fcn.00422118();\n    *(in_EAX + 0x14) = iVar1 * *(in_EAX + 8);\n    uStack40 = 0x4227b6;\n    iVar1 = fcn.004220f8();\n    uStack40 = 0;\n    puStack44 = 0x4227bf;\n    iStack76 = sub.user32.dll_GetDC();\n    if (iStack76 == 0) {\n        puStack44 = 0x4227cd;\n        fcn.00421e8c();\n    }\n    uStack48 = 0x42291c;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iStack64 = in_EAX + 0x28 + iVar1 * 4;\n    uStack56 = 0;\n    uStack68 = 4;\n    puStack80 = 0x422806;\n    puStack44 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateDIBitmap();\n    puStack80 = 0x42280b;\n    uVar2 = fcn.00421f88();\n    uStack84 = 0x422842;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = fcn.00421f98();\n    *in_EDX = uVar3;\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x422849;\n    uStack88 = 0x422841;\n    uStack84 = uVar2;\n    sub.gdi32.dll_DeleteObject();\n    return;\n}\n",
        "token_count": 570
    },
    "004229c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004229c8(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack156;\n    uint uStack152;\n    uchar *puStack148;\n    uint uStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint hdc;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack132 = 0x4229ee;\n    fcn.00408370();\n    uStack136 = 0x422cbf;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    uStack144 = 0x422a0d;\n    puStack132 = &stack0xfffffffc;\n    (**(*in_EAX + 8))();\n    if ((*arg_ch | arg_ch[1]) == 0) {\n        uStack144 = 0xb;\n        puStack148 = 0x422a1b;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        *arg_8h = uVar1;\n        puStack148 = 0xc;\n        uStack152 = 0x422a27;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        arg_8h[1] = uVar1;\n    }\n    else {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n    }\n    uStack144 = 0;\n    puStack148 = 0x422a43;\n    iVar2 = sub.user32.dll_GetDC();\n    if (iVar2 == 0) {\n        puStack148 = 0x422a51;\n        fcn.00421e8c();\n    }\n    uStack152 = 0x422ab1;\n    iStack156 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff64;\n    puStack148 = &stack0xfffffffc;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xe);\n    iVar3 = iVar2;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xc);\n    *in_FS_OFFSET = iVar3;\n    sub.user32.dll_ReleaseDC(0, iVar2, 0x422ab8);\n    return;\n}\n",
        "token_count": 575
    },
    "00422cd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422cd0(uint32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uchar auStack96 [4];\n    int16_t iStack92;\n    int16_t iStack90;\n    uint32_t auStack84 [18];\n    \n    auStack84[3] = 0;\n    iVar1 = sub.gdi32.dll_GetObjectA();\n    if (iVar1 == 0) {\n        fcn.00421e74();\n    }\n    else if ((iVar1 < 0x40) || (auStack84[0] < 0x28)) {\n        fcn.00402e14();\n        *param_2 = 0x28;\n        param_2[1] = 0x54;\n        param_2[2] = auStack96;\n    }\n    else {\n        puVar3 = auStack84;\n        puVar4 = param_2;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (param_1 == 2) {\n        *(param_2 + 0xe) = 1;\n    }\n    else if (param_1 - 3 < 0xe) {\n        *(param_2 + 0xe) = 4;\n        param_2[8] = param_1;\n    }\n    else if (param_1 - 0x11 < 0xf0) {\n        *(param_2 + 0xe) = 8;\n        param_2[8] = param_1;\n    }\n    else {\n        *(param_2 + 0xe) = iStack90 * iStack92;\n    }\n    *(param_2 + 3) = 1;\n    if (param_2[8] < param_2[9]) {\n        param_2[9] = param_2[8];\n    }\n    if (param_2[5] == 0) {\n        iVar1 = fcn.00422118();\n        uVar2 = param_2[2] >> 0x1f;\n        param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);\n    }\n    return;\n}\n",
        "token_count": 564
    },
    "00422e20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00422e20(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint hdc;\n    int32_t hpal;\n    uint var_1h;\n    \n    uStack32 = 0x422e3b;\n    fcn.00422cd0();\n    hpal = 0;\n    uStack32 = 0;\n    puStack36 = 0x422e47;\n    uVar1 = sub.gdi32.dll_CreateCompatibleDC();\n    uStack40 = 0x422ebd;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.00422e20::var_1h + 1;\n    if (in_EDX != 0) {\n        puStack36 = &fcn.00422e20::var_1h + 1;\n        hpal = sub.gdi32.dll_SelectPalette(uVar1);\n        sub.gdi32.dll_RealizePalette(uVar1);\n    }\n    uVar4 = *(in_ECX + 8);\n    uVar3 = uVar1;\n    iVar2 = sub.gdi32.dll_GetDIBits();\n    var_1h._0_1_ = iVar2 != 0;\n    *in_FS_OFFSET = uVar3;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar1, hpal, 0, 0x422ec4, uVar4, arg_ch);\n    }\n    sub.gdi32.dll_DeleteDC(uVar1);\n    return;\n}\n",
        "token_count": 444
    },
    "00422ef4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00422ef4(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint *puStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint piconinfo;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ah;\n    ushort var_26h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack104 = 0x422f13;\n    fcn.00402e14();\n    puStack104 = 0x422f22;\n    fcn.00402e14();\n    puStack104 = &fcn.00422ef4::piconinfo;\n    puStack112 = 0x422f2c;\n    uStack108 = param_2;\n    sub.user32.dll_GetIconInfo();\n    puStack112 = 0x422f31;\n    fcn.00422ee8();\n    uStack116 = 0x4230e2;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &fcn.00422ef4::var_1h + 1;\n    fcn.00422db4(2);\n    puStack132 = 0x422f5f;\n    fcn.00422db4(0x10);\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_24h = 0;\n    uStack136 = 0x4230bb;\n    uStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &fcn.00422ef4::var_1h + 1;\n    var_18h = fcn.00408370();\n    var_1ch = fcn.00408370();\n    var_20h = fcn.00408370();\n    var_24h = fcn.00408370();\n    fcn.00422e20(2, var_1ch);\n    uVar3 = 0x10;\n    fcn.00422e20(0x10, var_24h);\n    if (var_1h != '\\0') {\n        var_30h = var_ch + 0x16 + var_14h + var_10h;\n        (**(*in_EAX + 0xc))();\n    }\n    var_2ah._2_2_ = 1;\n    var_26h = 1;\n    (**(*in_EAX + 0xc))();\n    iVar2 = var_20h;\n    (**(*in_EAX + 0xc))();\n    piVar1 = iVar2 + 8;\n    *piVar1 = *piVar1 + *(iVar2 + 8);\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0xc))();\n    *in_FS_OFFSET = uVar3;\n    fcn.00402748(0x4230c2);\n    fcn.00402748();\n    fcn.00402748();\n    fcn.00402748();\n    return;\n}\n",
        "token_count": 886
    },
    "00423128": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00423128(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x20) = 1;\n    if (*(in_EAX + 0x12) != 0) {\n        (**(in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00423140": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00423140(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        uVar2 = (**(**(arg_8h + -8) + 0x1c))();\n        return uVar2 ^ 1;\n    }\n    cVar1 = fcn.004036bc();\n    if ((cVar1 != '\\0') && (cVar1 = (**(**(arg_8h + -8) + 0x18))(),  cVar1 != '\\0')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 162
    },
    "004231e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.004231e4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    ulong uVar6;\n    ulong uVar7;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 == NULL) {\ncode_r0x00423209:\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack32 = 0x4231fc;\n        iVar2 = fcn.00403478();\n        puStack32 = 0x423205;\n        iVar3 = fcn.00403478();\n        if (iVar2 != iVar3) goto code_r0x00423209;\n        var_1h._0_1_ = 1;\n    }\n    puStack32 = 0x423219;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\n        puStack32 = 0x423224;\n        uVar4 = (**(*param_2 + 0x1c))();\n        if (uVar4 == '\\0') {\n            if (var_1h != 0) {\n                puStack32 = 0x423262;\n                fcn.00403500();\n                uStack36 = 0x42331e;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x42327d;\n                puStack32 = &fcn.004231e4::var_1h + 1;\n                (**(*in_EAX + 0x44))();\n                puStack44 = 0x423289;\n                fcn.00403500();\n                uStack48 = 0x423301;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.004231e4::var_1h + 1;\n                (**(*param_2 + 0x44))();\n                uVar6 = fcn.00417c7c();\n                uVar7 = fcn.00417c7c();\n                if (uVar7 >> 0x20 == uVar6 >> 0x20 && uVar7 == uVar6) {\n                    fcn.00417c7c();\n                    cVar1 = fcn.0040849c();\n                    if (cVar1 != '\\0') {\n                        var_1h._0_1_ = 1;\n                        goto code_r0x004232e8;\n                    }\n                }\n                var_1h._0_1_ = 0;\ncode_r0x004232e8:\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x423308;\n                uStack48 = 0x423300;\n                uVar4 = fcn.00403530();\n                return uVar4;\n            }\n            goto code_r0x00423325;\n        }\n    }\n    puStack32 = 0x42322f;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\ncode_r0x0042323e:\n        uVar4 = 0;\n    }\n    else {\n        puStack32 = 0x42323a;\n        uVar5 = (**(*param_2 + 0x1c))();\n        if (uVar5 == '\\0') goto code_r0x0042323e;\n        uVar4 = CONCAT31(uVar5 >> 8, 1);\n    }\n    var_1h._0_1_ = uVar4;\ncode_r0x00423325:\n    return uVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 949
    },
    "0042338c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042338c(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint32_t unaff_EBX;\n    \n    if (*(in_EAX + 0x1a) != 0) {\n        (**(in_EAX + 0x18))(arg_8h, arg_ch, unaff_EBX & 0xffffff00 | arg_10h & 0xff, \n                            unaff_EBX & 0xffffff00 | arg_14h & 0xff);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "004234d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004234d4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x4234e4;\n    var_8h = fcn.0041595c();\n    uStack24 = 0x423572;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x42350f;\n            var_ch = fcn.004152c8();\n            puStack32 = 0x42351a;\n            cVar1 = fcn.00421a38();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x42354a;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.00423664();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x423551;\n                uStack36 = 0x423549;\n                fcn.00421a94();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x423579;\n    uStack24 = 0x423571;\n    fcn.004159c0();\n    return;\n}\n",
        "token_count": 446
    },
    "00423580": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00423580(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        puStack20 = 0x423599;\n        iVar1 = fcn.0041595c();\n        uStack24 = 0x4235f0;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack20 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.004152c8();\n                if ((*(iVar2 + 0x58) != 0) && (*(*(*(iVar2 + 0x58) + 0x28) + 8) == in_EAX)) {\n                    fcn.00423664();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x4235f7;\n        uStack24 = 0x4235ef;\n        fcn.004159c0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "00423664": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00423664(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) != 0) {\n        puStack16 = 0x423681;\n        fcn.004218e0();\n        uStack20 = 0x4236f8;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        if (*(in_EAX + 0x5c) != 0) {\n            puStack16 = &stack0xfffffffc;\n            sub.gdi32.dll_SelectObject(*(in_EAX + 4), *(in_EAX + 0x5c));\n        }\n        if (*(in_EAX + 0x60) != 0) {\n            sub.gdi32.dll_SelectPalette(*(in_EAX + 4), *(in_EAX + 0x60), 0xffffffff);\n        }\n        uVar1 = *(in_EAX + 4);\n        fcn.00421c1c();\n        sub.gdi32.dll_DeleteDC();\n        fcn.00415970();\n        *in_FS_OFFSET = uVar1;\n        fcn.00421a94(0x4236ff);\n        return;\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "00423704": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00423704(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        puStack20 = 0x423722;\n        fcn.004218e0();\n        uStack24 = 0x4237e3;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        fcn.00424a20();\n        fcn.00423580();\n        fcn.00424c00();\n        uVar2 = sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 8);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x5c) = 0;\n        }\n        else {\n            in_stack_ffffffd8 = uVar2;\n            uVar3 = sub.gdi32.dll_SelectObject(uVar2, iVar1);\n            *(in_EAX + 0x5c) = uVar3;\n        }\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 0x10);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x60) = 0;\n        }\n        else {\n            uVar3 = sub.gdi32.dll_SelectPalette(uVar2, iVar1, 0xffffffff);\n            *(in_EAX + 0x60) = uVar3;\n            sub.gdi32.dll_RealizePalette(uVar2);\n        }\n        fcn.00421c1c();\n        fcn.004158d4();\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        fcn.00421a94(0x4237ea);\n        return;\n    }\n    return;\n}\n",
        "token_count": 480
    },
    "004237f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004237f4(void)\n\n{\n    uint *in_EAX;\n    \n    if ((in_EAX != NULL) && (in_EAX[1] = in_EAX[1] + -1,  in_EAX[1] == 0)) {\n        (***in_EAX)();\n        fcn.00403530();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00423978": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00423978(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x28) & 3) != 0) && (*(in_EAX + 0x40) == 0)) {\n        if (*(in_EAX + 0x26) == 0x10) {\n            *(in_EAX + 0x40) = 0xf800;\n            *(in_EAX + 0x44) = 0x7e0;\n            *(in_EAX + 0x48) = 0x1f;\n        }\n        else if (*(in_EAX + 0x26) == 0x20) {\n            *(in_EAX + 0x40) = 0xff0000;\n            *(in_EAX + 0x44) = 0xff00;\n            *(in_EAX + 0x48) = 0xff;\n        }\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "004239c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004239c4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t *in_FS_OFFSET;\n    uint *puStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uint *puStack288;\n    int32_t iStack272;\n    int32_t iStack268;\n    uchar *puStack264;\n    uint *puStack260;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint *puStack248;\n    code *pcStack244;\n    uint *puStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    uint uStack196;\n    uchar *puStack192;\n    int32_t iStack188;\n    uint uStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uint *puStack172;\n    uint lprc;\n    uint lpvObject;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint *pbmi;\n    int32_t var_20h;\n    int32_t hdcDest;\n    int32_t hdc;\n    uint var_14h;\n    uint var_10h;\n    int32_t hpal;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    puStack236 = &stack0xfffffffc;\n    var_10h = 0;\n    if (((*(arg_ch + 0x18) == 0) || ((*(arg_ch + 0x1c) != 0 && (*(arg_ch + 0x20) != 0)))) &&\n       ((*(arg_ch + 0x18) != 0 || ((*(arg_ch + 4) != 0 && (*(arg_ch + 8) != 0)))))) {\n        puStack172 = 0x423a2c;\n        var_8h = in_EDX;\n        hgdiobj = in_EAX;\n        fcn.00423580();\n        var_70h = 0;\n        if (hgdiobj != 0) {\n            puStack172 = &fcn.004239c4::lpvObject;\n            uStack176 = 0x54;\n            iStack180 = hgdiobj;\n            uStack184 = 0x423a49;\n            iVar4 = sub.gdi32.dll_GetObjectA();\n            if (iVar4 < 0x18) {\n                uStack184 = 0x423a53;\n                fcn.00421e74();\n            }\n        }\n        uStack184 = 0;\n        iStack188 = 0x423a5a;\n        sub.user32.dll_GetDC();\n        iStack188 = 0x423a5f;\n        iStack188 = fcn.00421f88();\n        puStack192 = 0x423a6b;\n        hdc = iStack188;\n        sub.gdi32.dll_CreateCompatibleDC();\n        puStack192 = 0x423a70;\n        hdcDest = fcn.00421f88();\n        uStack196 = 0x424012;\n        iStack200 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff38;\n        if (*(arg_ch + 0x18) < 0x28) {\n            if ((*(arg_ch + 0x10) | *(arg_ch + 0x12)) == 1) {\n                puStack204 = NULL;\n                uStack208 = 1;\n                iStack212 = 1;\n                uStack216 = *(arg_ch + 8);\n                iStack220 = *(arg_ch + 4);\n                puStack224 = 0x423ab7;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateBitmap();\n                puStack224 = 0x423abc;\n                var_10h = fcn.00421f88();\n            }\n            else {\n                puStack204 = *(arg_ch + 8);\n                uStack208 = *(arg_ch + 4);\n                iStack212 = hdc;\n                uStack216 = 0x423adb;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateCompatibleBitmap();\n                uStack216 = 0x423ae0;\n                var_10h = fcn.00421f88();\n            }\n            uStack216 = 0x423d2b;\n            fcn.00421f88();\n            uStack216 = var_10h;\n            iStack220 = hdcDest;\n            puStack224 = 0x423d38;\n            sub.gdi32.dll_SelectObject();\n            puStack224 = 0x423d3d;\n            var_14h = fcn.00421f88();\n            iStack228 = 0x423fc3;\n            iStack232 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff18;\n            puStack240 = 0x423fb2;\n            pcStack244 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff0c;\n            var_34h = 0;\n            uVar8 = 0;\n            puVar1 = &stack0xfffffffc;\n            puStack224 = &stack0xfffffffc;\n            if (hpal != 0) {\n                puStack248 = NULL;\n                iStack252 = hpal;\n                iStack256 = hdcDest;\n                puStack260 = 0x423d78;\n                puStack224 = &stack0xfffffffc;\n                var_34h = sub.gdi32.dll_SelectPalette();\n                puStack260 = hdcDest;\n                puStack264 = 0x423d84;\n                sub.gdi32.dll_RealizePalette();\n                puVar1 = puStack236;\n            }\n            puStack236 = puVar1;\n            iStack268 = 0x423f90;\n            iStack272 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffef0;\n            if (arg_8h == 0) {\n                puStack288 = NULL;\n                iStack292 = 0;\n                iStack296 = hdcDest;\n                iStack300 = 0x423e71;\n                puStack264 = &stack0xfffffffc;\n                sub.gdi32.dll_PatBlt();\n            }\n            else {\n                puStack264 = &stack0xfffffffc;\n                fcn.0042123c();\n                puStack288 = 0x423dc5;\n                fcn.00413c58(&fcn.004239c4::lprc, *(arg_ch + 8));\n                puStack288 = &fcn.004239c4::lprc;\n                iStack292 = hdcDest;\n                iStack296 = 0x423dd5;\n                sub.user32.dll_FillRect();\n                iStack296 = 0x423de3;\n                iStack296 = fcn.0042057c();\n                iStack300 = hdcDest;\n                puStack304 = 0x423ded;\n                sub.gdi32.dll_SetTextColor();\n                puStack304 = 0x423df8;\n                fcn.00421200();\n                puStack304 = 0x423dfd;\n                puStack304 = fcn.0042057c();\n                iStack308 = hdcDest;\n                puStack312 = 0x423e07;\n                sub.gdi32.dll_SetBkColor();\n                if ((*(arg_ch + 0x26) == 1) && (*(arg_ch + 0x14) != 0)) {\n                    puStack312 = 0x423e28;\n                    var_30h = fcn.0042057c();\n                    puStack312 = 0x423e36;\n                    fcn.00421200();\n                    puStack312 = 0x423e3b;\n                    var_2ch = fcn.0042057c();\n                    puStack312 = &fcn.004239c4::var_30h;\n                    sub.gdi32.dll_SetDIBColorTable(hdcDest, 0, 2);\n                }\n            }\n            if (hgdiobj != 0) {\n                iStack300 = hdc;\n                puStack304 = 0x423e84;\n                sub.gdi32.dll_CreateCompatibleDC();\n                puStack304 = 0x423e89;\n                var_20h = fcn.00421f88();\n                iStack308 = 0x423f66;\n                puStack312 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffec8;\n                puStack304 = &stack0xfffffffc;\n                sub.gdi32.dll_SelectObject(var_20h, hgdiobj);\n                uVar5 = fcn.00421f88();\n                if (var_8h != 0) {\n                    uVar8 = sub.gdi32.dll_SelectPalette(var_20h, var_8h, 0);\n                    sub.gdi32.dll_RealizePalette(var_20h);\n                }\n                if (arg_8h != 0) {\n                    uVar6 = fcn.0042057c();\n                    sub.gdi32.dll_SetTextColor(var_20h, uVar6);\n                    fcn.00421200();\n                    uVar6 = fcn.0042057c();\n                    sub.gdi32.dll_SetBkColor(var_20h, uVar6);\n                }\n                sub.gdi32.dll_BitBlt(hdcDest, 0, 0, *(arg_ch + 4), *(arg_ch + 8), var_20h, 0, 0, 0xcc0020);\n                if (var_8h != 0) {\n                    sub.gdi32.dll_SelectPalette(var_20h, uVar8, 0xffffffff);\n                }\n                iVar4 = var_20h;\n                sub.gdi32.dll_SelectObject(var_20h, uVar5);\n                fcn.00421f88();\n                *in_FS_OFFSET = iVar4;\n                uVar8 = sub.gdi32.dll_DeleteDC(var_20h, 0x423f6d);\n                return uVar8;\n            }\n            uVar8 = 0;\n            *in_FS_OFFSET = iStack296;\n            puStack288 = 0x423f97;\n            if (hpal != 0) {\n                iStack292 = 0xffffffff;\n                iStack296 = var_34h;\n                iStack300 = hdcDest;\n                puStack304 = 0x423f8f;\n                uVar8 = sub.gdi32.dll_SelectPalette();\n            }\n            return uVar8;\n        }\n        puStack204 = 0x423af2;\n        puStack192 = &stack0xfffffffc;\n        pbmi = fcn.00402728();\n        uStack208 = 0x423d1c;\n        iStack212 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff2c;\n        *(arg_ch + 0x18) = 0x28;\n        *(arg_ch + 0x24) = 1;\n        puStack204 = &stack0xfffffffc;\n        if (*(arg_ch + 0x26) == 0) {\n            uStack216 = 0xc;\n            iStack220 = hdc;\n            puStack224 = 0x423b2b;\n            puStack204 = &stack0xfffffffc;\n            iVar2 = sub.gdi32.dll_GetDeviceCaps();\n            puStack224 = 0xe;\n            iStack228 = hdc;\n            iStack232 = 0x423b38;\n            iVar3 = sub.gdi32.dll_GetDeviceCaps();\n            *(arg_ch + 0x26) = iVar2 * iVar3;\n        }\n        puVar9 = arg_ch + 0x18;\n        puVar10 = pbmi;\n        for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(arg_ch + 4) = *(arg_ch + 0x1c);\n        *(arg_ch + 8) = *(arg_ch + 0x20);\n        if (*(arg_ch + 0x26) < 9) {\n            if ((*(arg_ch + 0x26) == 1) && ((hgdiobj == 0 || (var_74h == 0)))) {\n                pbmi[10] = 0;\n                pbmi[0xb] = 0xffffff;\n            }\n            else if (hpal == 0) {\n                if (hgdiobj != 0) {\n                    iStack232 = hgdiobj;\n                    puStack236 = hdcDest;\n                    puStack240 = 0x423be2;\n                    var_14h = sub.gdi32.dll_SelectObject();\n                    if ((var_70h == 0) || (var_74h == 0)) {\n                        puStack240 = NULL;\n                        pcStack244 = pbmi;\n                        puStack248 = NULL;\n                        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n                        iStack252 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n                        iStack256 = 0;\n                        puStack260 = hgdiobj;\n                        puStack264 = hdcDest;\n                        iStack268 = 0x423c33;\n                        sub.gdi32.dll_GetDIBits();\n                    }\n                    else {\n                        puStack240 = pbmi + 10;\n                        pcStack244 = pe_nt_image_headers32;\n                        puStack248 = NULL;\n                        iStack252 = hdcDest;\n                        iStack256 = 0x423c08;\n                        uVar8 = sub.gdi32.dll_GetDIBColorTable();\n                        *(arg_ch + 0x38) = uVar8;\n                    }\n                    puStack224 = var_14h;\n                    iStack228 = hdcDest;\n                    iStack232 = 0x423c40;\n                    sub.gdi32.dll_SelectObject();\n                }\n            }\n            else {\n                iStack232 = 0x423bc6;\n                fcn.0042271c();\n            }\n        }\n        else if (((*(arg_ch + 0x26) == 0x10) || (*(arg_ch + 0x26) == 0x20)) && ((*(arg_ch + 0x28) & 3) != 0)) {\n            iStack232 = 0x423c69;\n            fcn.00423978();\n            iStack232 = 0x423c7f;\n            fcn.004028e0();\n        }\n        iStack232 = 0;\n        puStack236 = NULL;\n        puStack240 = &fcn.004239c4::var_28h;\n        pcStack244 = NULL;\n        puStack248 = pbmi;\n        iStack252 = hdc;\n        iStack256 = 0x423c96;\n        sub.gdi32.dll_CreateDIBSection();\n        iStack256 = 0x423c9b;\n        var_10h = fcn.00421f88();\n        if (var_28h == 0) {\n            iStack256 = 0x423ca9;\n            fcn.00421ee0();\n        }\n        if ((((hgdiobj == 0) || (*(arg_ch + 0x1c) != var_84h)) || (*(arg_ch + 0x20) != var_80h)) ||\n           (*(arg_ch + 0x26) < 9)) {\n            *in_FS_OFFSET = iStack252;\n            pcStack244 = 0x423d23;\n            puStack248 = 0x423d1b;\n            uVar8 = fcn.00402748();\n            return uVar8;\n        }\n        iStack256 = 0;\n        puStack260 = pbmi;\n        puStack264 = var_28h;\n        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n        iStack268 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n        iStack272 = 0;\n        sub.gdi32.dll_GetDIBits();\n        fcn.00403d90();\n        fcn.00403d90();\n    }\n    return var_10h;\n}\n",
        "token_count": 3770
    },
    "00424028": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00424028(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack1064;\n    int32_t iStack1060;\n    uchar *puStack1056;\n    int32_t iStack1052;\n    uint uStack1048;\n    uchar *puStack1044;\n    uint uStack1040;\n    \n    puStack1044 = &stack0xfffffbf0;\n    uVar2 = 0;\n    if (in_EAX != 0) {\n        uStack1040 = 0;\n        uStack1048 = 4;\n        puStack1056 = 0x424046;\n        iStack1052 = in_EAX;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if ((iVar1 != 0) && (iStack1052 != 0)) {\n            uStack1048 = CONCAT22(iStack1052, 0x300);\n            puStack1056 = &stack0xfffffbec;\n            iStack1060 = iStack1052;\n            uStack1064 = 0;\n            sub.gdi32.dll_GetPaletteEntries();\n            uVar2 = sub.gdi32.dll_CreatePalette(&stack0xfffffbd8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 296
    },
    "0042408c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042408c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffec8;\n    int32_t in_stack_ffffff24;\n    int32_t iStack204;\n    uint uStack200;\n    uchar *puStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack136;\n    uint *puStack132;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char var_11h;\n    int32_t hdcDest;\n    int32_t hdc;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    hgdiobj = 0;\n    if (in_EAX != 0) {\n        puStack132 = &fcn.0042408c::lpvObject;\n        uStack136 = 0x54;\n        puStack144 = 0x4240b4;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            puStack144 = 0x4240c3;\n            fcn.00423580();\n            var_8h = 0;\n            hdcDest = 0;\n            uStack148 = 0x424287;\n            iStack152 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff68;\n            uStack156 = 0;\n            iStack160 = 0x4240e2;\n            puStack144 = &stack0xfffffffc;\n            sub.user32.dll_GetDC();\n            iStack160 = 0x4240e7;\n            iStack160 = fcn.00421f88();\n            uStack164 = 0x4240f3;\n            var_8h = iStack160;\n            sub.gdi32.dll_CreateCompatibleDC();\n            uStack164 = 0x4240f8;\n            hdcDest = fcn.00421f88();\n            uStack164 = 0;\n            uStack168 = 1;\n            uStack172 = 1;\n            uStack176 = nHeight;\n            uStack180 = nWidth;\n            iStack184 = 0x42410e;\n            hgdiobj = sub.gdi32.dll_CreateBitmap();\n            if (hgdiobj != 0) {\n                iStack188 = hdcDest;\n                iStack192 = 0x424128;\n                iStack184 = hgdiobj;\n                var_1ch = sub.gdi32.dll_SelectObject();\n                if (param_1 != 0x1fffffff) {\n                    iStack192 = var_8h;\n                    puStack196 = 0x424158;\n                    sub.gdi32.dll_CreateCompatibleDC();\n                    puStack196 = 0x42415d;\n                    hdc = fcn.00421f88();\n                    uStack200 = 0x42423f;\n                    iStack204 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff34;\n                    if (var_5ch == 0) {\n                        var_11h = '\\0';\n                        puStack196 = &stack0xfffffffc;\n                    }\n                    else {\n                        var_11h = '\\x01';\n                        var_58h = 0;\n                        puStack196 = &stack0xfffffffc;\n                        in_EAX = fcn.004239c4(0, &fcn.0042408c::lpvObject);\n                    }\n                    var_18h = sub.gdi32.dll_SelectObject(hdc, in_EAX);\n                    if (param_2 != 0) {\n                        sub.gdi32.dll_SelectPalette(hdc, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdc);\n                        sub.gdi32.dll_SelectPalette(hdcDest, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdcDest);\n                    }\n                    uVar2 = sub.gdi32.dll_SetBkColor(hdc, param_1);\n                    sub.gdi32.dll_BitBlt(hdcDest, 0, 0, nWidth, nHeight, hdc, 0, 0, 0xcc0020);\n                    sub.gdi32.dll_SetBkColor(hdc, uVar2);\n                    if (var_18h != 0) {\n                        in_stack_fffffec8 = hdc;\n                        sub.gdi32.dll_SelectObject(hdc, var_18h);\n                    }\n                    if (var_11h != '\\0') {\n                        sub.gdi32.dll_DeleteObject(in_EAX);\n                    }\n                    *in_FS_OFFSET = in_stack_fffffec8;\n                    uVar2 = sub.gdi32.dll_DeleteDC(hdc, 0x424246);\n                    return uVar2;\n                }\n                iStack192 = 0x42;\n                puStack196 = nHeight;\n                uStack200 = nWidth;\n                iStack204 = 0;\n                sub.gdi32.dll_PatBlt(hdcDest, 0);\n                if (var_1ch != 0) {\n                    in_stack_ffffff24 = hdcDest;\n                    sub.gdi32.dll_SelectObject(hdcDest, var_1ch);\n                }\n            }\n            uVar2 = 0;\n            *in_FS_OFFSET = in_stack_ffffff24;\n            if (hdcDest != 0) {\n                uVar2 = sub.gdi32.dll_DeleteDC(hdcDest, 0x42428e);\n            }\n            if (var_8h != 0) {\n                uVar2 = sub.user32.dll_ReleaseDC(0, var_8h);\n            }\n            return uVar2;\n        }\n    }\n    return hgdiobj;\n}\n",
        "token_count": 1348
    },
    "00424298": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00424298(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.004230f0();\n    in_EAX[0xd] = 0x20000000;\n    iVar1 = fcn.00403500();\n    in_EAX[10] = iVar1;\n    fcn.004237f0();\n    if (*0x46f550 != '\\0') {\n        (**(*in_EAX + 0x6c))();\n    }\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 219
    },
    "00424590": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424590(int32_t *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint *puStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_dh;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = in_EAX[10];\n    uStack48 = 0x4245b1;\n    var_4h = param_2;\n    fcn.00421c70();\n    uStack48 = 0x4245b8;\n    fcn.00424c00();\n    var_8h = 0;\n    var_9h = 0;\n    iVar3 = *(iVar6 + 0x10);\n    if (iVar3 != 0) {\n        uStack48 = 0xffffffff;\n        uStack56 = *(var_4h + 4);\n        uStack60 = 0x4245d7;\n        iStack52 = iVar3;\n        var_8h = sub.gdi32.dll_SelectPalette();\n        uStack60 = *(var_4h + 4);\n        uStack64 = 0x4245e6;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack64 = 0xc;\n    uStack68 = *(var_4h + 4);\n    uStack72 = 0x4245f8;\n    var_9h = iVar3 != 0;\n    uStack72 = sub.gdi32.dll_GetDeviceCaps();\n    uStack76 = 0xe;\n    puStack80 = *(var_4h + 4);\n    uStack84 = 0x424607;\n    iVar3 = sub.gdi32.dll_GetDeviceCaps();\n    if ((puStack80 * iVar3 < 9) && (puStack80 * iVar3 < *(iVar6 + 0x2a) * *(iVar6 + 0x28))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        puStack80 = &fcn.00424590::var_11h;\n        uStack84 = *(var_4h + 4);\n        puStack88 = 0x42463b;\n        sub.gdi32.dll_GetBrushOrgEx();\n        puStack88 = 0x4;\n        uStack92 = *(var_4h + 4);\n        puStack96 = 0x424649;\n        sub.gdi32.dll_SetStretchBltMode();\n        puStack96 = &fcn.00424590::var_11h;\n        puStack100 = var_dh;\n        uStack104 = var_11h;\n        uStack108 = *(var_4h + 4);\n        sub.gdi32.dll_SetBrushOrgEx();\n    }\n    else {\n        puStack80 = 0x42466a;\n        cVar2 = fcn.0042491c();\n        if (cVar2 == '\\0') {\n            puStack80 = 0x3;\n            uStack84 = 0x424678;\n            uStack84 = fcn.00421b9c();\n            puStack88 = 0x42467e;\n            sub.gdi32.dll_SetStretchBltMode();\n        }\n    }\n    uStack92 = 0x4247cd;\n    puStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack100 = 0x424693;\n    puStack88 = &stack0xfffffffc;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        puStack100 = 0x42469e;\n        fcn.00424ba0();\n    }\n    puStack100 = 0x4246a5;\n    fcn.00424860();\n    puStack100 = 0x4246b0;\n    fcn.00421c70();\n    puStack100 = 0x4246b7;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        uStack104 = 0x424762;\n        uStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar3 = fcn.00421f88();\n        iVar4 = sub.gdi32.dll_SelectObject(iVar3, *(iVar6 + 0xc));\n        arg_2ch = param_1[2] - *param_1;\n        arg_28h = param_1[3] - param_1[1];\n        iVar5 = fcn.00424860();\n        uVar7 = 0;\n        fcn.0042212c(0, 0, iVar3, *(iVar6 + 0x20), *(iVar6 + 0x1c), 0, 0, *(iVar5 + 4), arg_28h, arg_2ch);\n        *in_FS_OFFSET = uVar7;\n        if (iVar4 != 0) {\n            sub.gdi32.dll_SelectObject(iVar3, iVar4, 0x4247a7);\n        }\n        if (iVar3 != 0) {\n            sub.gdi32.dll_DeleteDC(iVar3);\n        }\n        return;\n    }\n    puStack100 = *(var_4h + 0x20);\n    uStack104 = *(iVar6 + 0x20);\n    uStack108 = *(iVar6 + 0x1c);\n    iVar6 = fcn.00424860(0, 0);\n    uVar7 = *(var_4h + 4);\n    sub.gdi32.dll_StretchBlt(uVar7, *param_1, param_1[1], param_1[2] - *param_1, param_1[3] - param_1[1], *(iVar6 + 4));\n    *in_FS_OFFSET = uVar7;\n    if (var_9h != '\\0') {\n        sub.gdi32.dll_SelectPalette(*(var_4h + 4), var_8h, 0xffffffff, 0x4247d4);\n    }\n    return;\n}\n",
        "token_count": 1574
    },
    "004247e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004247e0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (1 < *(iVar1 + 4)) {\n        fcn.00424a20();\n        fcn.0042442c(iVar1 + 0x18);\n        return;\n    }\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 8) != *(iVar1 + 0x14))) {\n        if ((*(iVar1 + 0x14) != 0) && (iVar2 = sub.gdi32.dll_DeleteObject(*(iVar1 + 0x14)),  iVar2 == 0)) {\n            fcn.00421ee0();\n        }\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x2c) = 0;\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00424860": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00424860(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0xb] == 0) {\n        fcn.00424a20();\n        if (in_EAX[0xb] == 0) {\n            iVar1 = fcn.004235fc();\n            in_EAX[0xb] = iVar1;\n            *(iVar1 + 0x2c) = in_EAX;\n            *(iVar1 + 0x28) = *(*in_EAX + 0x10);\n            *(iVar1 + 0x34) = in_EAX;\n            *(iVar1 + 0x30) = fcn.004244ec;\n        }\n    }\n    return in_EAX[0xb];\n}\n",
        "token_count": 176
    },
    "004248cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004248cc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    unkbyte3 Var3;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    Var3 = iVar1 >> 8;\n    if ((*(iVar1 + 8) == 0) || (*(iVar1 + 8) == *(iVar1 + 0x14))) {\n        if (*(iVar1 + 0x14) != 0) {\n            return 0;\n        }\n        if (*(iVar1 + 0x30) == 0) {\n            uVar2 = CONCAT31(Var3, 1);\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = CONCAT31(Var3, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 193
    },
    "0042499c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042499c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x14) == 0)) {\n        fcn.00424c00();\n        if (*(iVar1 + 0x30) == 0) {\n            sub.gdi32.dll_GetObjectA(*(iVar1 + 8), 0x54, iVar1 + 0x18);\n            *(iVar1 + 0x30) = 0x28;\n            *(iVar1 + 0x34) = *(iVar1 + 0x1c);\n            *(iVar1 + 0x38) = *(iVar1 + 0x20);\n            *(iVar1 + 0x3c) = 1;\n            *(iVar1 + 0x3e) = *(iVar1 + 0x28) * *(iVar1 + 0x2a);\n        }\n        uVar2 = fcn.004239c4(0, iVar1 + 0x18);\n        *(iVar1 + 0x14) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "00424a20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00424a20(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (((*(iVar1 + 8) == 0) && (*(iVar1 + 0x14) == 0)) && (*(iVar1 + 0x6c) != 0)) {\n        puStackY32 = 0x424a4d;\n        fcn.00417c68(0, 0);\n        iVar1 = in_EAX[4];\n        iVar2 = in_EAX[5];\n        uStackY36 = 0x424aa3;\n        uStackY40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        in_EAX[4] = 0;\n        in_EAX[5] = 0;\n        puStackY32 = &stack0xfffffffc;\n        (**(*in_EAX + 0x54))();\n        *in_FS_OFFSET = uStackY40;\n        in_EAX[4] = iVar1;\n        in_EAX[5] = iVar2;\n        return;\n    }\n    iVar1 = in_EAX[10];\n    if (*(iVar1 + 8) == 0) {\n        *(iVar1 + 8) = *(iVar1 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "00424ba0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00424ba0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((*(in_EAX + 0x32) == '\\0') || (*(in_EAX + 0x31) == '\\0')) {\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0xc) != 0) {\n            fcn.00423580();\n            sub.gdi32.dll_DeleteObject(*(iVar1 + 0xc));\n            *(iVar1 + 0xc) = 0;\n        }\n        fcn.00424a10();\n        fcn.00424a20();\n        fcn.0042494c();\n        uVar2 = fcn.0042408c();\n        *(iVar1 + 0xc) = uVar2;\n        *(in_EAX + 0x32) = 1;\n        *(in_EAX + 0x31) = 1;\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00424c00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00424c00(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char cVar6;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(in_EAX + 0x30) != '\\0') {\n        return;\n    }\n    if (*(iVar1 + 0x10) != 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == *(iVar1 + 8)) {\n        fcn.00423580();\n    }\n    iVar2 = fcn.00422678();\n    *(iVar1 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        return;\n    }\n    sub.user32.dll_GetDC(0);\n    uVar3 = fcn.00421f88();\n    if (*(iVar1 + 0x71) == '\\0') {\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xc);\n        iVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xe);\n        if (*(iVar1 + 0x2a) * *(iVar1 + 0x28) <= iVar2 * iVar4) {\n            cVar6 = '\\0';\n            goto code_r0x00424c91;\n        }\n    }\n    cVar6 = '\\x01';\ncode_r0x00424c91:\n    *(iVar1 + 0x71) = cVar6;\n    if (cVar6 != '\\0') {\n        uVar5 = sub.gdi32.dll_CreateHalftonePalette(uVar3);\n        *(iVar1 + 0x10) = uVar5;\n    }\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    if (*(iVar1 + 0x10) == 0) {\n        *(in_EAX + 0x30) = 1;\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "00424cb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424cb8(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int16_t in_DX;\n    uint var_54h;\n    int32_t var_40h;\n    uint var_3ch;\n    \n    if ((in_DX != 2) || (in_ECX == 0)) {\n        fcn.00421e5c();\n    }\n    fcn.00424a10();\n    fcn.00402e14();\n    sub.gdi32.dll_GetObjectA();\n    if (var_40h == 0) {\n        var_3ch = 0;\n    }\n    fcn.0042442c(&var_54h);\n    *(in_EAX[10] + 0x70) = 0;\n    iVar1 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar1 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 238
    },
    "00424d60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424d60(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint in_EDX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x424d7c;\n    iVar1 = fcn.00403500();\n    puStack32 = 0x424de7;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(iVar1 + 8) = in_EDX;\n    *(iVar1 + 0x10) = in_ECX;\n    puVar4 = iVar1 + 0x18;\n    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar1 + 0x70) = arg_ch;\n    if (*(iVar1 + 0x2c) != 0) {\n        *(iVar1 + 0x14) = *(iVar1 + 8);\n    }\n    uStack40 = 0x424dd7;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = fcn.004036e0();\n    *(iVar1 + 0x6c) = uVar2;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x47da48;\n    puStack32 = 0x424e08;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack36 = 0x424e47;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.004237f4();\n    *(in_EAX + 0x28) = iVar1;\n    fcn.004237f0();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x424e4e;\n    uStack36 = 0x47da48;\n    uStack40 = 0x424e46;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 578
    },
    "00424e88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00424e88(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uVar6;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uchar *puStack256;\n    uint uStack252;\n    int32_t *piStack248;\n    uint uStack244;\n    uint *puStack240;\n    uint uStack236;\n    uchar *puStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint uStack200;\n    uint uStack196;\n    uchar *puStack192;\n    uint var_aah;\n    uint var_48h;\n    uint var_44h;\n    ushort var_40h;\n    ushort var_3eh;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint hpal;\n    uint hgdiobj;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint lpbmih;\n    int32_t lpbInit;\n    uint var_10h;\n    uint hdc;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack204 = &stack0xfffffffc;\n    puStack192 = 0x424ebb;\n    var_8h = in_EDX;\n    (**(*in_EDX + 8))();\n    bVar5 = var_20h == 0xc;\n    if (bVar5) {\n        var_20h = 0x28;\n    }\n    puStack192 = 0x424ee0;\n    piVar1 = fcn.00402728();\n    uStack196 = 0x4253a5;\n    uStack200 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff38;\n    uStack208 = 0x425378;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    if (bVar5) {\n        puStack204 = &stack0xfffffffc;\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 8))();\n        fcn.00402e14();\n        piVar1[1] = var_44h;\n        piVar1[2] = var_44h._2_2_;\n        *(piVar1 + 3) = var_40h;\n        *(piVar1 + 0xe) = var_3eh;\n    }\n    else {\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 8))();\n        if ((piVar1[4] != 3) && (piVar1[4] != 0)) {\n            var_8h = fcn.00403500();\n            if (arg_8h == 0) {\n                fcn.00402e14();\n            }\n            (**(*var_8h + 0xc))();\n            (**(*var_8h + 0xc))();\n            (**(*var_8h + 0xc))();\n            uStack224 = 0x42500e;\n            fcn.00417ee4(in_ECX - var_20h, 0);\n            uStack224 = 0x42501e;\n            (**(*var_8h + 0x10))();\n        }\n    }\n    *piVar1 = var_20h;\n    if (*(piVar1 + 3) != 1) {\n        fcn.00421e74();\n    }\n    if ((var_20h == 0x28) && (((*(piVar1 + 0xe) == 0x10 || (*(piVar1 + 0xe) == 0x20)) && (piVar1[4] == 3)))) {\n        fcn.00417e74();\n    }\n    if (piVar1[8] == 0) {\n        iVar2 = fcn.004220f8();\n        piVar1[8] = iVar2;\n    }\n    fcn.00417e74();\n    if (piVar1[5] == 0) {\n        iVar2 = fcn.00422118();\n        uVar4 = piVar1[2] >> 0x1f;\n        piVar1[5] = iVar2 * ((piVar1[2] ^ uVar4) - uVar4);\n    }\n    if (bVar5) {\n        fcn.004223c0();\n    }\n    sub.user32.dll_GetDC();\n    uStack252 = fcn.00421f88();\n    uStack224 = 0x4252f3;\n    uStack228 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff1c;\n    hdc = uStack252;\n    if (((piVar1[4] == 0) || (piVar1[4] == 3)) && (*0x46f550 == '\\0')) {\n        puStack232 = NULL;\n        uStack236 = 0;\n        puStack240 = &fcn.00424e88::lpbInit;\n        uStack244 = 0;\n        puStack256 = 0x425279;\n        piStack248 = piVar1;\n        iVar2 = sub.gdi32.dll_CreateDIBSection();\n        if ((iVar2 == 0) || (lpbInit == 0)) {\n            puStack256 = 0x42528d;\n            iVar2 = sub.kernel32.dll_GetLastError_1();\n            if (iVar2 == 0) {\n                puStack256 = 0x425296;\n                fcn.00421e74();\n            }\n            else {\n                puStack256 = 0x42529d;\n                fcn.0040c3ec();\n            }\n        }\n        uStack260 = 0x4252c2;\n        uStack264 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffef8;\n        uStack268 = 0x4252b8;\n        puStack256 = &stack0xfffffffc;\n        fcn.00417e74();\n        *in_FS_OFFSET = uStack264;\n        *in_FS_OFFSET = uStack252;\n        uStack244 = 0x4252fa;\n        piStack248 = hdc;\n        uStack252 = 0;\n        puStack256 = 0x4252f2;\n        sub.user32.dll_ReleaseDC();\n        return;\n    }\n    var_10h = 0;\n    puStack232 = 0x425135;\n    lpbInit = fcn.00402728();\n    uStack236 = 0x42525b;\n    puStack240 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff10;\n    uStack244 = 0x425153;\n    puStack232 = &stack0xfffffffc;\n    fcn.00417e74();\n    uStack244 = hdc;\n    piStack248 = 0x42515c;\n    sub.gdi32.dll_CreateCompatibleDC();\n    piStack248 = 0x425161;\n    var_10h = fcn.00421f88();\n    piStack248 = 0x1;\n    uStack252 = 1;\n    puStack256 = hdc;\n    uStack260 = 0x425171;\n    uStack260 = sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack264 = var_10h;\n    uStack268 = 0x42517b;\n    uVar3 = sub.gdi32.dll_SelectObject();\n    var_34h = 0;\n    if (piVar1[8] != 0) {\n        uStack268 = 0x425199;\n        uStack272 = fcn.00422678();\n        uStack268 = 0;\n        uStack276 = var_10h;\n        uStack280 = 0x4251ab;\n        var_34h = sub.gdi32.dll_SelectPalette();\n        uStack280 = var_10h;\n        puStack284 = 0x4251b7;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack288 = 0x42522f;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    uVar6 = var_10h;\n    puStack284 = &stack0xfffffffc;\n    iVar2 = sub.gdi32.dll_CreateDIBitmap(var_10h, piVar1, 4, lpbInit, piVar1, 0);\n    if (iVar2 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 == 0) {\n            fcn.00421e74();\n        }\n        else {\n            fcn.0040c3ec();\n        }\n    }\n    *in_FS_OFFSET = uVar6;\n    if (var_34h != 0) {\n        sub.gdi32.dll_SelectPalette(var_10h, var_34h, 0xffffffff, 0x425236);\n    }\n    uVar3 = sub.gdi32.dll_SelectObject(var_10h, uVar3);\n    sub.gdi32.dll_DeleteObject(uVar3);\n    return;\n}\n",
        "token_count": 2129
    },
    "00425860": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425860(char param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iStackY1120;\n    uchar *puStackY1116;\n    char cVar4;\n    char cStack1080;\n    uchar auStack1054 [1038];\n    \n    fcn.00402e14();\n    if (*(*(in_EAX + 0x28) + 0x6c) == 0) {\n        fcn.0042499c();\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0x14) != 0) {\n            cVar4 = *(iVar1 + 0x50);\n            fcn.00422db4(*(iVar1 + 0x50));\n            if (*(iVar1 + 0x70) != '\\0') {\n                cStack1080 = '\\f';\n                if (*(iVar1 + 0x3e) < 9) {\n                    cStack1080 = (1 << (*(iVar1 + 0x3e) & 0x1f)) * '\\x03' + '\\f';\n                }\n            }\n            fcn.00402e14(cVar4 + cStack1080 + '\\x0e');\n            fcn.00424860();\n            fcn.00421c70();\n            sub.gdi32.dll_SelectObject(*(*(in_EAX + 0x2c) + 4), *(iVar1 + 0x14));\n            fcn.00421f88();\n            sub.gdi32.dll_GetDIBColorTable(*(*(in_EAX + 0x2c) + 4), 0, 0x100);\n            iStackY1120 = *(*(in_EAX + 0x2c) + 4);\n            sub.gdi32.dll_SelectObject();\n            puVar2 = *(iVar1 + 0x50);\n            puStackY1116 = auStack1054;\n            if ((puVar2 != NULL) && (puVar2 < auStack1054)) {\n                puStackY1116 = puVar2;\n            }\n            if ((((*(iVar1 + 0x70) == '\\0') && (puStackY1116 == NULL)) && (*(iVar1 + 0x10) != 0)) &&\n               ((*(iVar1 + 0x71) == '\\0' && (puStackY1116 = fcn.0042271c(),  8 < *(iVar1 + 0x3e))))) {\n                iStackY1120 = iStackY1120 + puStackY1116 * 4;\n            }\n        }\n        if (param_1 != '\\0') {\n            fcn.00417eac();\n        }\n        if (iStackY1120 != 0) {\n            fcn.00423978();\n            if (puStackY1116 != NULL) {\n                if ((*(iVar1 + 0x50) == NULL) || (*(iVar1 + 0x50) != puStackY1116)) {\n                    *(iVar1 + 0x50) = puStackY1116;\n                }\n                if (*(iVar1 + 0x70) != '\\0') {\n                    fcn.004223f8();\n                }\n            }\n            if (*(iVar1 + 0x70) == '\\0') {\n                fcn.00417eac();\n                fcn.00417eac();\n                if ((8 < *(iVar1 + 0x3e)) && ((*(iVar1 + 0x40) & 3) != 0)) {\n                    fcn.00417eac();\n                }\n            }\n            else {\n                fcn.00417eac();\n                fcn.00417eac();\n            }\n            fcn.00417eac();\n            fcn.00417eac();\n        }\n    }\n    else {\n        uVar3 = fcn.00417c7c();\n        if (param_1 != '\\0') {\n            fcn.00417eac(uVar3);\n        }\n        fcn.00417c7c();\n        (**(*param_2 + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 935
    },
    "00425d80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00425d80(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uStack32;\n    int16_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) == 0) && (*(iVar1 + 0xc) != 0)) {\n        iVar2 = 0;\n        fcn.00417c68(0, 0);\n        uStack32 = 0x425daf;\n        fcn.00417e74();\n        if (iVar2 != 0) {\n            if (iVar2 == 1) {\n                uStack32 = 6;\n                fcn.004229c8(iVar1 + 0x10, in_EAX + 0x2c);\n            }\n            else {\n                uStack32 = 0x425deb;\n                fcn.00421e80();\n            }\n        }\n        *(iVar1 + 8) = uStack32;\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00425df8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00425df8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(iVar1 + 0xc) == 0) {\n        if (*(iVar1 + 8) == 0) {\n            puStack32 = 0x425e1b;\n            fcn.00421e80();\n        }\n        puStack32 = 0x425e27;\n        uVar2 = fcn.00403500();\n        uStack36 = 0x425e85;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.00425d44();\n        if (iVar3 == *0x47da44) {\n            fcn.00402e14();\n            fcn.00417eac();\n        }\n        else {\n            fcn.00425d44();\n            fcn.00422ef4();\n        }\n        *in_FS_OFFSET = uStack40;\n        *(iVar1 + 0xc) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "004260f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004260f4(void)\n\n{\n    char cVar1;\n    \n    *0x46f528 = sub.kernel32.dll_MulDiv(8, *0x47da34, 0x48);\n    *0x46f528 = -*0x46f528;\n    if (*(*0x47c2c8 + 0xc) != '\\0') {\n        cVar1 = fcn.004260b0();\n        if (cVar1 == -0x80) {\n            *0x46f52f = *0x426154;\n            *0x46f533 = *0x426158;\n            *0x46f537 = *0x42615c;\n            *0x46f53b = *0x426160;\n            *0x46f528 = sub.kernel32.dll_MulDiv(9, *0x47da34, 0x48);\n            *0x46f528 = -*0x46f528;\n            *0x46f52e = cVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0042623c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042623c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x426254;\n    fcn.00426224();\n    uStack32 = 0x4262dd;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    for (var_8h = *(in_EAX + 4); (var_8h != NULL && ((param_2 != var_8h[2] || (param_1 != var_8h[3]))));\n        var_8h = *var_8h) {\n    }\n    if (var_8h == NULL) {\n        puStack28 = &stack0xfffffffc;\n        puVar1 = fcn.00402728();\n        *puVar1 = *(in_EAX + 4);\n        uVar2 = fcn.004262f0();\n        puVar1[1] = uVar2;\n        puVar1[2] = param_2;\n        puVar1[3] = param_1;\n        *(in_EAX + 4) = puVar1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4262e4;\n    uStack32 = 0x4262dc;\n    fcn.00426230();\n    return;\n}\n",
        "token_count": 367
    },
    "00426468": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00426468(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x47da88 != 0) {\n        uVar1 = fcn.0042057c();\n        fcn.0042057c(uVar1);\n        iVar2 = fcn.0042623c();\n        return *(iVar2 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "00426978": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00426978(void)\n\n{\n    if (*0x47da98 == 0) {\n        *0x47da98 = sub.kernel32.dll_GetModuleHandleA_2(0x4269b0);\n        if (*0x47da98 != 0) {\n            *0x47da9c = sub.kernel32.dll_GetProcAddress_1(*0x47da98, 0x4269c0);\n        }\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "004269d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004269d8(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x47da98 == 0) {\n        fcn.00426978();\n    }\n    if (*0x47da9c != NULL) {\n        iVar2 = (**0x47da9c)();\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00426a03;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00426a03:\n    return -uVar1;\n}\n",
        "token_count": 136
    },
    "00426d84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00426d84(void)\n\n{\n    uint8_t in_AL;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x426d9a;\n    fcn.004047a8();\n    uStack28 = 0x426e43;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_AL + 0x47dac8) == '\\0') {\n        if (*0x47dac4 == 0) {\n            iVar2 = 0;\n            puStack24 = &stack0xfffffffc;\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            if (((in_AL == 0) && (puStack24 = &stack0xfffffffc,  *0x47dad0 == '\\0')) &&\n               (puStack24 = &stack0xfffffffc,  *0x47dab0 = fcn.00426d84(),  *0x47dad0 == '\\0')) {\n                fcn.00404308();\n            }\n            uVar1 = fcn.004047b8();\n            in_stack_ffffffd8 = *0x47dac4;\n            iVar2 = sub.kernel32.dll_GetProcAddress_1(*0x47dac4, uVar1);\n        }\n        if ((iVar2 != 0) && (in_AL != 0)) {\n            *0x47dad0 = '\\x01';\n        }\n        *(in_AL + 0x47dac8) = 1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    iStack32 = 0x426e4a;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 439
    },
    "00426e6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426e6c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x47dac8 == '\\0') {\n        *0x47daa0 = fcn.00426d84();\n        (**0x47daa0)(arg_8h);\n    }\n    else {\n        iVar1 = -1;\n        if (arg_8h - 0x4cU < 2) {\n            iVar1 = 0;\n        }\n        else if (arg_8h == 0x4e) {\n            arg_8h = 0;\n        }\n        else if (arg_8h == 0x4f) {\n            arg_8h = 1;\n        }\n        else if (arg_8h - 0x50U < 2) {\n            iVar1 = 1;\n        }\n        if (iVar1 == -1) {\n            sub.user32.dll_GetSystemMetrics(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "00426ef4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00426ef4(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x47daca == '\\0') {\n        *0x47daa8 = fcn.00426d84();\n        uVar1 = (**0x47daa8)(arg_8h, arg_ch);\n        return uVar1;\n    }\n    if ((arg_ch & 3) == 0) {\n        if (arg_8h[2] < 1) {\n            return 0;\n        }\n        if (arg_8h[3] < 1) {\n            return 0;\n        }\n        iVar2 = (**0x47daa0)(0);\n        if (iVar2 <= *arg_8h) {\n            return 0;\n        }\n        iVar2 = (**0x47daa0)(1);\n        if (iVar2 <= arg_8h[1]) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 239
    },
    "00426f84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00426f84(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_10h;\n    \n    if (*0x47dac9 == '\\0') {\n        *0x47daa4 = fcn.00426d84();\n        uVar1 = (**0x47daa4)(arg_8h, arg_ch);\n    }\n    else if ((arg_ch & 3) == 0) {\n        iVar2 = sub.user32.dll_IsIconic(arg_8h);\n        if (iVar2 == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n        }\n        else {\n            sub.user32.dll_GetWindowPlacement(arg_8h, &var_2ch);\n        }\n        uVar1 = fcn.00426ef4(&var_10h, arg_ch);\n    }\n    else {\n        uVar1 = 0x12340042;\n    }\n    return uVar1;\n}\n",
        "token_count": 238
    },
    "0042701c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042701c(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x47dacb == '\\0') {\n        *0x47daac = fcn.00426d84();\n        uVar1 = (**0x47daac)(arg_8h, arg_ch, arg_10h);\n        return uVar1;\n    }\n    if ((arg_10h & 3) == 0) {\n        if (arg_8h < 0) {\n            return 0;\n        }\n        iVar2 = (**0x47daa0)(0);\n        if (iVar2 <= arg_8h) {\n            return 0;\n        }\n        if (arg_ch < 0) {\n            return 0;\n        }\n        iVar2 = (**0x47daa0)(1);\n        if (iVar2 <= arg_ch) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 238
    },
    "004270b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004270b4(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x47dacc == '\\0') {\n        *0x47dab0 = fcn.00426d84();\n        uVar1 = (**0x47dab0)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x47daa0)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x47daa0)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x427180);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 401
    },
    "00427188": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427188(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x47dacd == '\\0') {\n        *0x47dab4 = fcn.00426d84();\n        uVar1 = (**0x47dab4)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x47daa0)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x47daa0)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x427254);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 400
    },
    "0042725c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042725c(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x47dace == '\\0') {\n        *0x47dab8 = fcn.00426d84();\n        uVar1 = (**0x47dab8)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x47daa0)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x47daa0)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x427328);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 401
    },
    "00427330": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427330(int32_t arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x47dacf == '\\0') {\n        *0x47dabc = fcn.00426d84();\n        uVar1 = (**0x47dabc)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = 0;\n        if (arg_10h != NULL) {\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = (**0x47daa0)(0);\n            var_10h = (**0x47daa0)(1);\n            if (arg_8h == 0) {\n                if ((arg_ch != 0) && (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    return 1;\n                }\n            }\n            else {\n                var_ch = sub.gdi32.dll_GetClipBox(arg_8h, &var_2ch);\n                iVar2 = sub.gdi32.dll_GetDCOrgEx(arg_8h, &var_8h);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                sub.user32.dll_OffsetRect(&var_1ch, -var_8h, -var_4h);\n                iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, &var_2ch);\n                if (((iVar2 == 0) || (arg_ch != 0)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    if (var_ch != 1) {\n                        return 0;\n                    }\n                    return 1;\n                }\n            }\n            uVar1 = (*arg_10h)(0x12340042, arg_8h, &var_1ch, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 554
    },
    "00427f48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00427f48(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    uVar5 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    var_10h = 0;\n    iVar4 = 0;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (param_1 != 0) {\n        fcn.0040435c();\n    }\n    iVar2 = *(*(var_4h + 0x10) + 8);\n    if (0 < iVar2) {\n        if (-1 < iVar2 + -1) {\n            iVar3 = 0;\n            do {\n                iVar1 = fcn.00426824();\n                iVar1 = (**(**(iVar1 + 4) + 0x10))();\n                if (0 < iVar1) {\n                    iVar4 = iVar4 + 1;\n                    var_10h = iVar3;\n                }\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (iVar4 == 0) {\n            var_2ch = fcn.004047b8();\n            var_28h._0_1_ = 6;\n            uVar5 = 0;\n            fcn.0040b264(0, &var_2ch);\n            fcn.00403ce4();\n        }\n        if (iVar4 == 1) {\n            iVar2 = fcn.00426824();\n            (**(**(iVar2 + 4) + 0x20))();\n        }\n        if (1 < iVar4) {\n            var_14h = fcn.00403500();\n            iVar4 = *(*(var_4h + 0x10) + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_1ch = fcn.00426824();\n                    iVar2 = (**(**(var_1ch + 4) + 0x10))();\n                    if (0 < iVar2) {\n                        var_18h = (**(**(var_1ch + 4) + 0x14))();\n                        iVar2 = (**(*var_18h + 0x14))();\n                        if (-1 < iVar2 + -1) {\n                            var_ch = 0;\n                            var_24h = iVar2;\n                            do {\n                                (**(*var_18h + 0xc))();\n                                (**(*var_14h + 0x3c))();\n                                var_ch = var_ch + 1;\n                                var_24h = var_24h + -1;\n                            } while (var_24h != 0);\n                        }\n                        fcn.00403530();\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (*(var_4h + 0xc) == 0) {\n                iVar4 = (**(*var_14h + 0x18))();\n                (**(*var_14h + 0xc))();\n                (**(**(iVar4 + 4) + 0x20))();\n            }\n            else {\n                (**(*var_14h + 0x90))();\n                iVar4 = (**(**(var_4h + 0xc) + 0xc))();\n                if (-1 < iVar4) {\n                    iVar4 = (**(*var_14h + 0x18))();\n                    (**(*var_14h + 0xc))();\n                    (**(**(iVar4 + 4) + 0x20))();\n                }\n            }\n            fcn.00403530();\n        }\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.00404308();\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 1008
    },
    "0042815c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042815c(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x42824f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.0040435c();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040b228();\n        fcn.00403ce4();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.00426824();\n            fcn.00406148();\n            fcn.00406174();\n            cVar2 = (**(_pe_dos_header + 0x38))();\n            if (cVar2 != '\\0') {\n                fcn.00406174();\n                (**(_pe_dos_header + 0x3c))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x428256;\n    uStack48 = 0x428246;\n    fcn.00404dfc();\n    uStack48 = 0x42824e;\n    fcn.00406130();\n    return;\n}\n",
        "token_count": 443
    },
    "00428374": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428374(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x428386;\n    fcn.004061a0();\n    uStack20 = 0x4283cc;\n    piStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xc) != 0) {\n        puStack16 = &stack0xfffffffc;\n        fcn.00406130();\n    }\n    fcn.00406148();\n    (**(*param_2 + 4))();\n    *in_FS_OFFSET = param_2;\n    uStack20 = 0x4283d3;\n    piStack24 = 0x4283cb;\n    fcn.00406130();\n    return;\n}\n",
        "token_count": 240
    },
    "004283d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004283d8(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4283f1;\n    fcn.004047a8();\n    uStack28 = 0x428482;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        puStack24 = &stack0xfffffffc;\n        fcn.0040435c();\n    }\n    iVar1 = arg_ch;\n    if (iVar1 == 1) {\n        fcn.0042815c();\n    }\n    else if (iVar1 == 2) {\n        fcn.00427c70();\n    }\n    else if (iVar1 == 3) {\n        fcn.00427ca0();\n    }\n    else if (iVar1 == 8) {\n        fcn.0042815c();\n    }\n    else {\n        fcn.00427e40(arg_8h, arg_ch);\n        in_stack_ffffffd8 = arg_8h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x428489;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 344
    },
    "00427908": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427908(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x427922;\n    fcn.004061a0();\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack28 = 0x427990;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x47dadc == 0) {\n        puStack24 = &stack0xfffffffc;\n        *0x47dadc = fcn.00427a7c();\n    }\n    fcn.00427af0();\n    fcn.00406148();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x427997;\n    uStack28 = 0x427987;\n    fcn.00406130();\n    uStack28 = 0x42798f;\n    fcn.00406130();\n    return;\n}\n",
        "token_count": 278
    },
    "004279a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004279a0(void)\n\n{\n    int32_t **in_EAX;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = NULL;\n    }\n    if (*0x47dadc == 0) {\n        *0x47dadc = fcn.00427a7c();\n    }\n    fcn.00406174();\n    (**(**in_EAX + 4))(*in_EAX);\n    return 0;\n}\n",
        "token_count": 103
    },
    "00427ca0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00427ca0(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x427e32;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(*(in_EAX + 0x10) + 8) == 1) {\n        puStack44 = 0x427ccf;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.00426824();\n        puStack44 = 0x427cd7;\n        cVar2 = (**(**(iVar3 + 4) + 0x18))();\n        if (cVar2 != '\\0') {\n            puStack44 = 0x427ce9;\n            iVar3 = fcn.00426824();\n            puStack44 = 0x427cf1;\n            (**(**(iVar3 + 4) + 0x1c))();\n        }\n    }\n    else {\n        if (*(in_EAX + 0xc) != 0) {\n            puStack44 = 0x427d0c;\n            puStack32 = &stack0xfffffffc;\n            piVar4 = fcn.00403500();\n            uStack48 = 0x427dcd;\n            uStack52 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffcc;\n            var_ch = *(*(in_EAX + 0x10) + 8);\n            puStack44 = &stack0xfffffffc;\n            puVar1 = &stack0xfffffffc;\n            if (-1 < var_ch + -1) {\n                do {\n                    puStack44 = puVar1;\n                    iVar3 = fcn.00426824();\n                    cVar2 = (**(**(iVar3 + 4) + 0x18))();\n                    if (cVar2 != '\\0') {\n                        (**(**(iVar3 + 4) + 0xc))();\n                        (**(*piVar4 + 0x3c))();\n                    }\n                    var_ch = var_ch + -1;\n                    puVar1 = puStack44;\n                } while (var_ch != 0);\n            }\n            iVar3 = (**(*piVar4 + 0x14))();\n            if (iVar3 < 2) {\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            else {\n                (**(*piVar4 + 0x90))();\n                (**(**(in_EAX + 0xc) + 0x10))();\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            *in_FS_OFFSET = uStack52;\n            puStack44 = 0x427e1c;\n            uStack48 = 0x427dcc;\n            fcn.00403530();\n            return;\n        }\n        puVar1 = &stack0xfffffffc;\n        if (0 < *(*(in_EAX + 0x10) + 8)) {\n            puStack44 = 0x427de6;\n            iVar3 = fcn.00426824();\n            puStack44 = 0x427dee;\n            cVar2 = (**(**(iVar3 + 4) + 0x18))();\n            puVar1 = puStack32;\n            if (cVar2 != '\\0') {\n                puStack44 = 0x427dfc;\n                iVar3 = fcn.00426824();\n                puStack44 = 0x427e04;\n                (**(**(iVar3 + 4) + 0x1c))();\n                goto code_r0x00427e1c;\n            }\n        }\n        puStack32 = puVar1;\n        puStack44 = 0x427e17;\n        fcn.0040b228();\n        puStack44 = 0x427e1c;\n        fcn.00403ce4();\n    }\ncode_r0x00427e1c:\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x427e39;\n    uStack36 = 0x427e31;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 1052
    },
    "00428570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00428570(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4285aa;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x47dad8 = *0x47dad8 + 1;\n    if ((*0x47dad8 == 0) && (*0x47dadc != 0)) {\n        fcn.00427c28();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 149
    },
    "00428638": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00428638(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x47db10 != NULL) {\n        iVar2 = (**0x47db10)(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00428664;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00428664:\n    return -uVar1;\n}\n",
        "token_count": 148
    },
    "0042866c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042866c(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x47db14 != NULL) {\n        iVar2 = (**0x47db14)(arg_8h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x0042868c;\n        }\n    }\n    uVar1 = 0;\ncode_r0x0042868c:\n    return -uVar1;\n}\n",
        "token_count": 122
    },
    "004292c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004292c4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x429343;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    sub.user32.dll_KillTimer(*(in_EAX + 0x34), 1);\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x40) != '\\0')) && (*(in_EAX + 0x3a) != 0)) {\n        in_stack_ffffffcc = *(in_EAX + 0x34);\n        iVar1 = sub.user32.dll_SetTimer(in_stack_ffffffcc, 1, *(in_EAX + 0x30), 0);\n        if (iVar1 == 0) {\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.00404308(0x42934a);\n    return;\n}\n",
        "token_count": 302
    },
    "004299fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004299fc(void)\n\n{\n    uchar *puVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x429a4e;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x47db40 = *0x47db40 + 1;\n    if (*0x47db40 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x46f818 != 0) {\n            uStack20 = *0x46f818;\n            sub.kernel32.dll_GlobalDeleteAtom();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00404dfc();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 223
    },
    "0042a288": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042a288(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x42a2e0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*0x47db60 != NULL) {\n        fcn.00429e94();\n        (**(**0x47db60 + 0x10))();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x42a2e7;\n    uStack28 = 0x42a2df;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 181
    },
    "0042a2f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042a2f0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack296;\n    uint uStack292;\n    uchar *puStack288;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack288 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack292 = 0x42a3e6;\n    uStack296 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed8;\n    var_108h._0_1_ = 0xb;\n    var_10ch = param_2;\n    fcn.004092f0(0, &fcn.0042a2f0::var_10ch);\n    fcn.00429e94();\n    uVar2 = 0x42a356;\n    cVar1 = fcn.0042a798();\n    if (cVar1 != '\\0') {\n        uVar2 = 0;\n        fcn.00404570();\n        cVar1 = fcn.0042a6e8(uVar2);\n        if ((cVar1 != '\\0') && (var_4h != 0)) {\n            *(in_EAX + 0x10) = 1;\n            fcn.00404570();\n            uVar2 = fcn.004047b8(0x102, &fcn.0042a2f0::var_104h);\n            uVar2 = (**(**(in_EAX + 0x1c) + 0xc))(uVar2);\n            sub.user32.dll_WinHelpA();\n        }\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00404308(0x42a3ed);\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 459
    },
    "0042a404": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042a404(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42a466;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x47db60 != NULL) {\n        fcn.00429e94();\n        (**(**0x47db60 + 0x14))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42a46d;\n    uStack32 = 0x42a465;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 183
    },
    "0042a478": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042a4c1)\n\nvoid __fastcall fcn.0042a478(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x42a4f8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00429e94();\n    uVar2 = 0x42a4a7;\n    cVar1 = fcn.0042a798();\n    if (cVar1 != '\\0') {\n        fcn.0042a6e8(param_2);\n        uVar2 = param_2;\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack28 = 0x42a4ff;\n    uStack32 = 0x42a4f7;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 255
    },
    "00429f64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429f64(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x429fcb;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*0x47db60 != NULL) {\n        fcn.00429e94();\n        (**(**0x47db60 + 0xc))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x429fd2;\n    uStack24 = 0x429fca;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 175
    },
    "00429fdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429fdc(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42a064;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x47db60 == NULL) {\n        piVar1 = fcn.00403500();\n        fcn.00429f50();\n        fcn.00404680(param_2, 0x42a07c, 0);\n        (**(*piVar1 + 0x38))();\n    }\n    else {\n        puStack28 = &stack0xfffffffc;\n        (**(**0x47db60 + 0x18))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42a06b;\n    uStack32 = 0x42a063;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 265
    },
    "0042a084": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042a0c9)\n\nvoid fcn.0042a084(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42a0ff;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    cVar1 = fcn.0042a798();\n    if (cVar1 != '\\0') {\n        *(in_EAX + 0x10) = 2;\n        (**(**(in_EAX + 0x1c) + 0x10))();\n        fcn.00429e94();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42a106;\n    uStack24 = 0x42a0fe;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 251
    },
    "0042a10c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042a193)\n\nvoid fcn.0042a10c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_8h;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x42a1ea;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h = &fcn.0042a10c::var_4h;\n    fcn.00429e94();\n    fcn.00409330(arg_8h);\n    uVar2 = 0x42a16b;\n    cVar1 = fcn.0042a798();\n    if (cVar1 != '\\0') {\n        fcn.00429e94();\n        uVar2 = 0;\n        fcn.0042a6e8(0);\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack52 = 0x42a1f1;\n    fcn.00404308();\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 333
    },
    "00429e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429e94(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x429f14;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00404308();\n    if ((param_2 == 0) && (*(in_EAX + 0x1c) != 0)) {\n        (**(**(in_EAX + 0x1c) + 0x10))();\n    }\n    else {\n        fcn.004043a0();\n    }\n    if (*0x47db60 != NULL) {\n        (**(**0x47db60 + 0x20))();\n    }\n    fcn.0040435c();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x429f1b;\n    uStack28 = 0x429f13;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 269
    },
    "00429f24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429f24(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0042a23c();\n    if (*(in_EAX + 0x1c) != 0) {\n        (**(**(in_EAX + 0x1c) + 0x14))();\n        if (*(in_EAX + 0x1c) != 0) {\n            fcn.00406130();\n        }\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0042a6e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042a6e8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack40 = 0x42a700;\n    var_1h._0_1_ = in_DL;\n    fcn.004047a8();\n    uStack44 = 0x42a762;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.0042a6e8::var_1h + 1;\n    fcn.0042a6cc();\n    if ((((var_ch != '\\0') && (var_1h == *(in_EAX + 0x10))) && (var_1h != '\\0')) && (var_1h == '\\x01')) {\n        fcn.0040846c();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x42a769;\n    uStack44 = 0x42a761;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 322
    },
    "0042a778": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0042a778(uint param_1, int32_t param_2)\n\n{\n    char cStack11;\n    \n    cStack11 = *(param_2 + 0xc) >> 8;\n    return cStack11 == '\\0';\n}\n",
        "token_count": 59
    },
    "0042a798": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0042a798(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    char cStack12;\n    \n    uVar3 = 0;\n    if (cStack12 != '\\0') {\n        uVar2 = sub.user32.dll_GetWindowThreadProcessId();\n        sub.user32.dll_EnumThreadWindows(uVar2);\n    }\n    cVar1 = fcn.0042a774();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0042a778();\n        if (cVar1 != '\\0') {\n            fcn.0042a7f0();\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 164
    },
    "0042a7f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042a83c)\n\nvoid fcn.0042a7f0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42a86d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0042a23c();\n    iVar1 = sub.kernel32.dll_GetTickCount();\n    do {\n        uStack28 = 0;\n        sub.kernel32.dll_Sleep();\n        iVar2 = sub.kernel32.dll_GetTickCount();\n    } while (iVar2 - iVar1 < 0x3e9);\n    fcn.00429e94();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42a874;\n    uStack24 = 0x42a86c;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 250
    },
    "0042a8a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042a8a4(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42a907;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x47db68 = *0x47db68 + 1;\n    if (*0x47db68 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*(*0x47db6c + 0x1c) != 0) {\n            fcn.00429f24();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x47db60 != 0) {\n            fcn.00406130();\n        }\n        fcn.00404308();\n        fcn.00406130();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 240
    },
    "00438590": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00438590(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x6c) = *(in_EAX + 0x6c) + -1;\n    if (*(in_EAX + 0x6c) < 1) {\n        *(in_EAX + 0x6c) = 0;\n        fcn.00439e10();\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "0042cc64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0042cc64(void)\n\n{\n    int32_t iVar1;\n    \n    sub.user32.dll_GetCapture();\n    iVar1 = fcn.0042c9bc();\n    if (((iVar1 != 0) && (*0x46f94c != 0)) && (iVar1 == *(*0x46f94c + 0x30))) {\n        iVar1 = *0x46f94c;\n    }\n    return iVar1;\n}\n",
        "token_count": 103
    },
    "0042cc8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042cc8c(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    sub.user32.dll_ReleaseCapture();\n    *0x46f94c = 0;\n    if ((in_EAX != 0) &&\n       ((cVar2 = fcn.004036bc(),  iVar1 = *0x46f94c,  cVar2 != '\\0' || (iVar1 = in_EAX,  *(in_EAX + 0x30) != 0)))) {\n        *0x46f94c = iVar1;\n        uVar3 = fcn.004360b8();\n        sub.user32.dll_SetCapture(uVar3);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "0042d138": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d138(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    if (arg_8h == '\\0') {\n        fcn.0040372c();\n    }\n    (**(*in_EAX + 0x24))(arg_ch);\n    return;\n}\n",
        "token_count": 74
    },
    "0042d1d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0042d1d4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0042d0bc();\n    uVar1 = fcn.00421060();\n    *(in_EAX + 0x40) = uVar1;\n    fcn.00426468();\n    fcn.004211dc();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 211
    },
    "0042d3c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d3c8(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    if (arg_8h == arg_ch[1]) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch[2] == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n            iVar2 = sub.user32.dll_PtInRect(&var_10h, arg_ch[3], arg_ch[4]);\n            if (iVar2 != 0) {\n                arg_ch[2] = arg_8h;\n            }\n        }\n        if (arg_8h == arg_ch[2]) {\n            uVar1 = 0;\n            *(arg_ch + 5) = 1;\n        }\n        else if (arg_8h == *arg_ch) {\n            uVar1 = 0xffffffff;\n            arg_ch[2] = 0;\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 257
    },
    "0042d434": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0042d434(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lprcSrc2;\n    uint lprcSrc1;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t hWnd;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    hWnd = fcn.0042d86c();\n    uVar2 = func_0x00406f88(hWnd, 4);\n    if (uVar2 != *(**0x47c0d4 + 0x30)) {\n        uVar2 = fcn.0042c9bc();\n        if (uVar2 == 0) goto code_r0x0042d5c2;\n        do {\n            uVar2 = *(uVar2 + 0x30);\n        } while (uVar2 != 0);\n        uVar2 = fcn.004360b8();\n        hWnd = uVar2;\n    }\n    if (hWnd != 0) {\n        do {\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n        uVar2 = fcn.004360b8();\n        if (uVar2 != hWnd) {\n            iVar4 = *(*(arg_8h + -0x10) + 0x30);\n            var_18h = uVar2;\n            if (iVar4 == 0) {\n                cVar1 = fcn.004036bc();\n                if (cVar1 == '\\0') {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = fcn.004360b8();\n                }\n            }\n            else {\n                do {\n                    iVar4 = *(iVar4 + 0x30);\n                } while (iVar4 != 0);\n                var_1ch = fcn.004360b8();\n            }\n            var_8h._0_1_ = '\\0';\n            var_10h = *(arg_8h + -9);\n            var_ch = *(arg_8h + -5);\n            uVar3 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0042d3c8, &var_1ch);\n            uVar2 = sub.user32.dll_EnumThreadWindows(uVar3);\n            if (var_8h != '\\0') {\n                sub.user32.dll_GetWindowRect(hWnd, &lprcSrc1);\n                fcn.0040372c(arg_8h + -1, arg_8h + -9);\n                cVar1 = fcn.004036bc();\n                if ((((cVar1 == '\\0') || (*(*(*0x47db90 + 0x38) + 0xa0) == 0)) ||\n                    (uVar2 = fcn.004360b8(),  uVar2 != hWnd)) &&\n                   (uVar2 = sub.user32.dll_IntersectRect(&lprcSrc1, &lprcSrc1, &lprcSrc2),  uVar2 != 0)) {\n                    var_1h._0_1_ = 0;\n                }\n            }\n        }\n    }\ncode_r0x0042d5c2:\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 811
    },
    "0042d610": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.0042d610(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lprc;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint pt;\n    uint var_5h;\n    uint var_1h;\n    \n    pt = *in_EAX;\n    var_5h = in_EAX[1];\n    var_18h = 0;\n    if (*0x47dbb4 != 0) {\n        puVar5 = 0x11;\n        var_10h = param_2;\n        uVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (((uVar2 & 0x8000) != 0) != *(**0x47c0d4 + 0xb4)) {\n            (**(**0x47dbb8 + 8))();\n            iVar4 = *(*0x47dbb4 + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_14h = fcn.004152c8();\n                    if (((var_14h != var_10h) && (*(var_14h + 0x1a6) != '\\0')) &&\n                       (cVar1 = (**(*var_14h + 0x50))(),  cVar1 != '\\0')) {\n                        puVar5 = fcn.004360b8();\n                        iVar3 = sub.user32.dll_IsWindowVisible();\n                        if (((iVar3 != 0) && (cVar1 = fcn.0042d5cc(&var_1h + 1),  cVar1 == '\\0')) &&\n                           ((var_10h[0x28] != var_14h || (iVar3 = fcn.00434c4c(),  1 < iVar3)))) {\n                            var_1h._0_1_ = '\\x01';\n                            puVar5 = &var_1h;\n                            fcn.0040372c();\n                            if (var_1h != '\\0') {\n                                puVar5 = &lprc;\n                                iVar3 = sub.user32.dll_PtInRect();\n                                if (iVar3 != 0) {\n                                    fcn.0042cd94();\n                                }\n                            }\n                        }\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (0 < (*0x47dbb8)[2]) {\n                var_18h = fcn.0042ce24(puVar5);\n            }\n            if ((var_18h != 0) && (cVar1 = fcn.0042d434(&var_1h + 1),  cVar1 == '\\0')) {\n                var_18h = 0;\n            }\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 705
    },
    "0042d76c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d76c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        if (*0x47dbb4 == 0) {\n            *0x47dbb4 = fcn.00403500();\n        }\n        iVar1 = fcn.00415324();\n        if (param_2 == '\\0') {\n            if (iVar1 != -1) {\n                fcn.004151b8();\n            }\n        }\n        else if (iVar1 == -1) {\n            fcn.0041516c();\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0042d924": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0042d924(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    iVar1 = *(*0x47db90 + 4);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x1a7) != '\\0')) && (*(iVar1 + 0x178) != 0)) &&\n       (iVar2 = fcn.00434bb8(),  iVar2 != 0)) {\n        iVar2 = fcn.00434bb8();\n        if ((iVar2 == 1) && (iVar2 = fcn.004152c8(),  iVar2 == *(*0x47db90 + 0x38))) {\n            return 0;\n        }\n        iVar2 = fcn.0042e354();\n        while( true ) {\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (iVar1 == iVar2) {\n                return 0;\n            }\n            iVar3 = fcn.00415324();\n            if (iVar3 != -1) break;\n            iVar2 = *(iVar2 + 0x30);\n        }\n        uVar4 = fcn.00434bcc();\n    }\n    return uVar4;\n}\n",
        "token_count": 291
    },
    "0042d9b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042d9b8(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    char cVar6;\n    int32_t *in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    if (((*0x47dbac == '\\0') &&\n        (uVar9 = *0x47db9c - *in_EAX >> 0x1f,  (*0x47db9c - *in_EAX ^ uVar9) - uVar9 < *0x47dba8)) &&\n       (uVar9 = *0x47dba0 - in_EAX[1] >> 0x1f,  (*0x47dba0 - in_EAX[1] ^ uVar9) - uVar9 < *0x47dba8)) {\n        return;\n    }\n    iVar10 = 0x42da12;\n    iVar7 = fcn.0042d898(*0x47db8c);\n    if ((*0x47dbac == '\\0') && (*0x47dbb0 != 0)) {\n        iVar10 = *0x47dba0;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.00437a24(iVar10);\n    }\n    if (*(*0x47db8c + 0x9b) == '\\0') {\n        *0x47dbac = '\\x01';\n    }\n    else {\n        *0x47dbac = '\\x02';\n    }\n    if (iVar7 != (*0x47db90)[1]) {\n        fcn.0042d8e8();\n        if (*0x47db90 == NULL) {\n            return;\n        }\n        (*0x47db90)[1] = iVar7;\n        (*0x47db90)[2] = iVar10;\n        piVar1 = *0x47db90;\n        (*0x47db90)[3] = *in_EAX;\n        piVar1[4] = in_EAX[1];\n        fcn.0042d8e8();\n        if (*0x47db90 == NULL) {\n            return;\n        }\n    }\n    piVar1 = *0x47db90;\n    (*0x47db90)[3] = *in_EAX;\n    piVar1[4] = in_EAX[1];\n    if ((*0x47db90)[1] != 0) {\n        fcn.0042f5ec();\n        piVar1 = *0x47db90;\n        (*0x47db90)[5] = iStack28;\n        piVar1[6] = iStack24;\n    }\n    fcn.0042d8e8(in_EAX[1]);\n    (**(**0x47db90 + 4))();\n    if (*0x47dbb0 != 0) {\n        if ((iVar7 == 0) || ((*(iVar7 + 0x51) & 0x20) != 0)) {\n            fcn.004379e0();\n            if (*(*0x47dbb0 + 0x6a) == '\\0') {\n                iVar10 = in_EAX[1];\n                sub.user32.dll_GetDesktopWindow();\n                fcn.00437a24(iVar10);\n            }\n            else {\n                fcn.00437b0c();\n            }\n        }\n        else {\n            fcn.00437b80();\n            uVar8 = fcn.0044d35c();\n            sub.user32.dll_SetCursor(uVar8);\n        }\n    }\n    cVar4 = fcn.0044d35c();\n    sub.user32.dll_SetCursor();\n    if (*0x47dbac == '\\x02') {\n        if (iVar7 == 0) {\n            fcn.0040372c(in_EAX[1]);\n        }\n        else {\n            iVar10 = fcn.0042d924();\n            (*0x47db90)[0x16] = iVar10;\n            if (iVar10 == 0) {\n                uVar5 = fcn.0040372c();\n                *(*0x47db90 + 0x15) = uVar5;\n            }\n            else {\n                fcn.0042f5ec();\n                uVar5 = fcn.0040372c();\n                *(*0x47db90 + 0x15) = uVar5;\n            }\n        }\n        if ((*0x47db90 != NULL) && (cVar6 = fcn.0040849c(),  cVar6 == '\\0')) {\n            if (cVar4 != '\\0') {\n                (**(**0x47db90 + 0x34))();\n            }\n            (**(**0x47db90 + 0x30))();\n            piVar3 = *0x47db90;\n            piVar2 = *0x47db90 + 0x18;\n            piVar1 = *0x47db90 + 0x12;\n            (*0x47db90)[0x17] = (*0x47db90)[0x11];\n            *piVar2 = *piVar1;\n            piVar3[0x19] = piVar3[0x13];\n            piVar3[0x1a] = piVar3[0x14];\n        }\n    }\n    return;\n}\n",
        "token_count": 1224
    },
    "0042dc88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042dc88(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    *0x47db90 = in_EAX;\n    in_EAX[1] = 0;\n    sub.user32.dll_GetCursorPos(0x47db9c);\n    piVar1 = *0x47db90;\n    (*0x47db90)[3] = *0x47db9c;\n    piVar1[4] = *0x47dba0;\n    *0x47dba4 = sub.user32.dll_GetCursor();\n    *0x47db98 = fcn.0042cec8();\n    *0x47dba8 = param_1;\n    cVar2 = fcn.004036bc();\n    if (cVar2 == '\\0') {\n        if (param_2 == '\\0') {\n            *0x47dbac = '\\0';\n        }\n        else {\n            *0x47dbac = '\\x01';\n        }\n    }\n    else {\n        iVar3 = in_EAX[0x11];\n        if (in_EAX[0x13] == iVar3 || in_EAX[0x13] - iVar3 < 0) {\n            in_EAX[8] = 0;\n            in_EAX[9] = 0;\n        }\n        else {\n            *(in_EAX + 8) = (in_EAX[3] - iVar3) / (in_EAX[0x13] - in_EAX[0x11]);\n        }\n        iVar3 = in_EAX[0x12];\n        if (in_EAX[0x14] == iVar3 || in_EAX[0x14] - iVar3 < 0) {\n            in_EAX[10] = 0;\n            in_EAX[0xb] = 0;\n        }\n        else {\n            *(in_EAX + 10) = (in_EAX[4] - iVar3) / (in_EAX[0x14] - in_EAX[0x12]);\n        }\n        if (param_2 == '\\0') {\n            *0x47dbac = '\\0';\n        }\n        else {\n            *0x47dbac = '\\x02';\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    *0x47dbb0 = (**(**0x47db90 + 8))();\n    if (*0x47dbb0 != 0) {\n        iVar3 = *0x47dba0;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.00437a24(iVar3);\n    }\n    *0x47dbb8 = fcn.00403500();\n    if (*0x47dbac != '\\0') {\n        fcn.0042d9b8();\n    }\n    return;\n}\n",
        "token_count": 647
    },
    "0042ddf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042ddf8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpPoint;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x42df9d;\n    iStack60 = *in_FS_OFFSET;\n    *0x47db8c = in_EAX;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_8h = 0;\n    *0x47db94 = 0;\n    if (*(in_EAX + 0x9b) == '\\0') {\n        puStack64 = 0x42de3f;\n        puStack52 = &stack0xfffffffc;\n        fcn.0040372c();\n        if (*0x47db8c == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            puStack64 = 0x42de6d;\n            var_8h = fcn.0042d0bc();\n            *0x47db94 = 1;\n        }\n    }\n    else {\n        fcn.0040372c();\n        if (*0x47db8c == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            var_8h = fcn.0042d1d4();\n            *0x47db94 = 1;\n        }\n        cVar1 = fcn.004036bc();\n        if (cVar1 == '\\0') {\n            if ((*(*(var_8h + 0x38) + 0x30) == 0) && (cVar1 = fcn.004036bc(),  cVar1 == '\\0')) {\n                puStack64 = &fcn.0042ddf8::lpPoint;\n                sub.user32.dll_GetCursorPos();\n                *(var_8h + 0x44) = lpPoint;\n                *(var_8h + 0x48) = var_ch;\n            }\n            else {\n                fcn.00413c30();\n                puStack64 = 0x42df3e;\n                fcn.0042f5c0();\n                *(var_8h + 0x44) = var_18h;\n                *(var_8h + 0x48) = var_14h;\n            }\n            fcn.00413c30();\n            *(var_8h + 0x4c) = var_18h;\n            *(var_8h + 0x50) = var_14h;\n        }\n        else {\n            puStack64 = var_8h + 0x44;\n            uVar2 = fcn.004360b8();\n            sub.user32.dll_GetWindowRect(uVar2);\n        }\n        *(var_8h + 0x5c) = *(var_8h + 0x44);\n        *(var_8h + 0x60) = *(var_8h + 0x48);\n        *(var_8h + 100) = *(var_8h + 0x4c);\n        *(var_8h + 0x68) = *(var_8h + 0x50);\n    }\n    fcn.0042dc88();\n    *in_FS_OFFSET = puStack64;\n    return;\n}\n",
        "token_count": 830
    },
    "0042dfbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042dfbc(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *(*0x47db90 + 4) != 0;\n    if ((*(arg_8h + -1) != '\\0') && (*0x47dbac == '\\x02')) {\n        cVar1 = (**(**0x47db8c + 0x54))();\n        if ((cVar1 == '\\0') && ((*0x47db8c)[0x28] != 0)) {\n            if ((*0x47db8c)[0x28] != 0) {\n                uVar2 = fcn.0040372c();\n            }\n        }\n        else {\n            uVar2 = CONCAT31((unaff_EBX & 0xffffff00) >> 8, 1);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 227
    },
    "0042e030": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042e030(void)\n\n{\n    char in_AL;\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ah;\n    uint32_t var_6h;\n    uint var_1h;\n    \n    puStack24 = &fcn.0042e030::var_1h + 1;\n    puStack36 = &fcn.0042e030::var_1h + 1;\n    piVar4 = NULL;\n    if ((*0x47db90 == NULL) || (*(*0x47db90 + 0xc) != '\\0')) {\n        return;\n    }\n    uStack28 = 0x42e2fc;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *0x47dbbc = *0x47db90;\n    uStack40 = 0x42e28a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    *(*0x47db90 + 0xc) = 1;\n    *(*0x47db90 + 7) = in_AL;\n    var_1h._0_1_ = in_AL;\n    fcn.0042cf10();\n    if (*0x47dbac == '\\x02') {\n        piVar4 = fcn.004036e0();\n        (**(*piVar4 + 0x34))();\n        *(piVar4 + 0x1b) = piVar4[1] == 0;\n    }\n    if ((*0x47db90)[1] == 0) {\ncode_r0x0042e107:\n        var_6h = (*0x47db90)[4];\n    }\n    else {\n        cVar1 = fcn.004036bc();\n        if (cVar1 == '\\0') goto code_r0x0042e107;\n        var_6h = (*0x47db90)[6];\n    }\n    cVar1 = fcn.0042dfbc(&fcn.0042e030::var_1h + 1);\n    if (cVar1 != '\\0') {\n        if ((*0x47dbac == '\\x02') && (*(piVar4 + 0x1b) != '\\0')) {\ncode_r0x0042e146:\n            if (var_1h != '\\0') {\n                uVar2 = 1;\n                goto code_r0x0042e152;\n            }\n        }\n        else if (*0x47dbac != '\\0') {\n            cVar1 = fcn.0042d8e8();\n            if (cVar1 != '\\0') goto code_r0x0042e146;\n        }\n    }\n    uVar2 = 0;\ncode_r0x0042e152:\n    if (*0x47dbac == '\\x02') {\n        if ((uVar2 != 0) && (*(piVar4 + 0x1b) != '\\0')) {\n            iVar3 = fcn.004466f4();\n            if ((iVar3 != 0) && (*(iVar3 + 0x220) == piVar4[0xe])) {\n                fcn.0044a364();\n            }\n            fcn.00430c4c(*0x47db90);\n        }\n    }\n    else if (*0x47dbb0 == 0) {\n        sub.user32.dll_SetCursor(*0x47dba4);\n    }\n    else {\n        fcn.00437b80();\n    }\n    *0x47db8c = 0;\n    *0x47db90 = NULL;\n    if ((*0x47dbbc != NULL) && ((*0x47dbbc)[1] != 0)) {\n        if (uVar2 == 0) {\n            (*0x47dbbc)[3] = 0;\n            (*0x47dbbc)[4] = 0;\n            var_6h = 0;\n        }\n        fcn.0042d7cc(*0x47dbbc + 3, (*0x47dbbc)[1]);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42e291;\n    uStack40 = 0x42e24d;\n    fcn.00403530();\n    *0x47dbb8 = 0;\n    if (*0x47dbbc != NULL) {\n        *(*0x47dbbc + 0xc) = 0;\n        uStack40 = var_6h;\n        uStack44 = var_6h & 0xffffff00 | uVar2;\n        (****0x47dbbc)();\n    }\n    *0x47db90 = NULL;\n    return;\n}\n",
        "token_count": 1133
    },
    "0042e308": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042e308(void)\n\n{\n    if (*0x47db90 != 0) {\n        fcn.0042e030();\n    }\n    *0x47db8c = 0;\n    return;\n}\n",
        "token_count": 52
    },
    "0042e39c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042e39c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX == 0) {\n        iVar1 = fcn.00403500();\n        *in_EAX = iVar1;\n    }\n    fcn.0041516c();\n    return;\n}\n",
        "token_count": 76
    },
    "0042e3c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042e3c4(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00415468();\n    if (*(*in_EAX + 8) == 0) {\n        fcn.00403530();\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0042e4d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042e4d0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x42e4e0;\n    var_8h = fcn.0041595c();\n    uStack24 = 0x42e56e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x42e50b;\n            var_ch = fcn.004152c8();\n            puStack32 = 0x42e516;\n            cVar1 = fcn.00421a38();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x42e546;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.0042e650();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x42e54d;\n                uStack36 = 0x42e545;\n                fcn.00421a94();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42e575;\n    uStack24 = 0x42e56d;\n    fcn.004159c0();\n    return;\n}\n",
        "token_count": 459
    },
    "0042e5a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042e5a8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) == 0) {\n        puStack16 = 0x42e5c1;\n        fcn.00421c18();\n    }\n    else {\n        if (*(in_EAX + 0x5c) == 0) {\n            puStack16 = 0x42e5d9;\n            iVar1 = fcn.0041595c();\n            uStack20 = 0x42e62d;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            if (3 < *(iVar1 + 8)) {\n                puStack16 = &stack0xfffffffc;\n                fcn.0042e414();\n            }\n            uVar2 = (**(**(in_EAX + 0x58) + 0x48))();\n            *(in_EAX + 0x5c) = uVar2;\n            fcn.0041516c();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x42e634;\n            uStack20 = 0x42e62c;\n            fcn.004159c0();\n            return;\n        }\n        puStack16 = 0x42e642;\n        fcn.00421c1c();\n        puStack16 = 0x42e64a;\n        fcn.0042e69c();\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "0042e650": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042e650(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) != 0) {\n        fcn.00421c1c();\n        fcn.00415970();\n        sub.user32.dll_ReleaseDC(*(in_EAX + 0x60), *(in_EAX + 0x5c));\n        *(in_EAX + 0x5c) = 0;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0042e808": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042e808(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack48 = &fcn.0042e808::var_1h + 1;\n    var_8h = 0;\n    uStack52 = 0x42e8d5;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_1h._0_1_ = 1;\n    arg_8h = 0x42e83d;\n    cVar1 = fcn.004036bc();\n    if (cVar1 != '\\0') {\n        arg_8h = 0x42e84f;\n        cVar1 = fcn.0040372c();\n        if ((((cVar1 != '\\0') && (*(**0x47c0d4 + 0x7c) != '\\0')) && (*(*(in_EAX + 0x10) + 0x84) != 0)) &&\n           (*param_2 != 0)) {\n            arg_8h = &fcn.0042e808::var_8h;\n            fcn.0043e74c();\n            fcn.00409330(arg_8h);\n            fcn.0040435c();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x42e8dc;\n    iStack56 = 0x42e8cc;\n    fcn.00404308();\n    iStack56 = 0x42e8d4;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 485
    },
    "0042eba8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0042eba8(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041da6c();\n    in_EAX[0xf] = in_EAX;\n    in_EAX[0xe] = *(*in_EAX + 0x74);\n    in_EAX[0x14] = *0x42ec78;\n    iVar1 = fcn.00420868();\n    in_EAX[0x1a] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x42fb48;\n    *(in_EAX + 0x61) = *0x42ec7c;\n    iVar1 = fcn.0042e6c8();\n    in_EAX[0x1d] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x430a0c;\n    in_EAX[0x1c] = -0x7ffffffb;\n    *(in_EAX + 0x57) = 1;\n    *(in_EAX + 0x16) = 1;\n    *(in_EAX + 0x59) = 1;\n    *(in_EAX + 0x5a) = 1;\n    *(in_EAX + 0x9a) = 1;\n    *(in_EAX + 0x18) = 1;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x7a) = 0xfff4;\n    in_EAX[0x2e] = *0x445e40;\n    *(in_EAX + 0x54) = 1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 532
    },
    "0042ed74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042ed74(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_stack_ffffffe8;\n    uint uStack20;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar1 = fcn.0040372c(in_stack_ffffffe8 & 0xffffff00 | param_2);\n        if (iVar1 != 0) {\n            uStack20 = (**(*in_EAX + 0x48))();\n            uVar2 = sub.gdi32.dll_SelectPalette();\n            iVar1 = sub.gdi32.dll_RealizePalette(uStack20);\n            if (iVar1 != 0) {\n                (**(*in_EAX + 0x7c))();\n            }\n            sub.gdi32.dll_SelectPalette(uStack20, uVar2, 0xffffffff);\n            sub.user32.dll_ReleaseDC(uVar2);\n            uVar2 = 1;\n        }\n    }\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 254
    },
    "0042eee4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042eee4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 8;\n    cVar1 = fcn.004036bc();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x68))();\n    }\n    fcn.0041decc();\n    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfff7;\n    if (in_EAX[0xc] != 0) {\n        fcn.00430c4c(0);\n        fcn.00430c4c(0);\n        fcn.00430c4c(0);\n        fcn.00430c4c(0);\n        fcn.00430c4c(0);\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0042f2ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f2ac(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0xa0)) {\n        if ((*(in_EAX + 0xa0) != 0) && (*(*(in_EAX + 0xa0) + 0x178) != 0)) {\n            puStack40 = 0x42f2f2;\n            fcn.00415468();\n        }\n        if (((param_2 != 0) && (param_2 != -1)) && (*(param_2 + 0x178) != 0)) {\n            puStack40 = 0x42f312;\n            fcn.0041516c();\n        }\n    }\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x400;\n    uStack44 = 0x42f3a7;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    if (param_2 != -1) {\n        puStack40 = &stack0xfffffffc;\n        fcn.0040372c();\n    }\n    iVar1 = *(in_EAX + 0xa0);\n    if (param_2 != iVar1) {\n        if (param_2 == -1) {\n            *(in_EAX + 0xa0) = 0;\n        }\n        else {\n            *(in_EAX + 0xa0) = param_2;\n            if (param_2 != 0) {\n                fcn.0040372c();\n            }\n        }\n        if (iVar1 != 0) {\n            fcn.0040372c();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfbff;\n    return;\n}\n",
        "token_count": 493
    },
    "0042f530": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042f530(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42f5b1;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.004065fc();\n        fcn.0040b1a8(in_stack_ffffffd4, arg_ch);\n        fcn.00403ce4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    (**(**(in_EAX + 0x30) + 0x40))();\n    *param_2 = *param_2 + *(in_EAX + 0x40);\n    param_2[1] = param_2[1] + *(in_EAX + 0x44);\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x42f5b8;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 397
    },
    "0042f648": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f648(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0xa0) != 0) && (*0x47db90 == 0)) && (*0x42f6b0 == (*0x42f6ac & *(in_EAX + 0x1c)))) {\n        var_8h = arg_8h;\n        fcn.00430c4c(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0042fbc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fbc4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x59)) && (*(in_EAX + 0x59) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00430c4c(0);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "0042fc5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fc5c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x5a)) && (*(in_EAX + 0x5a) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00430c4c(0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0042fc80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fc80(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x60)) && (*(in_EAX + 0x60) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00430c4c(0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "0042fdac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042fdac(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42fe42;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        uVar2 = 0;\n        fcn.004065fc();\n        fcn.0040b1a8(uVar2, arg_ch);\n        fcn.00403ce4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    uVar2 = (**(**(in_EAX + 0x30) + 0x48))();\n    sub.gdi32.dll_SetViewportOrgEx(uVar2, *(in_EAX + 0x40), *(in_EAX + 0x44), 0);\n    sub.gdi32.dll_IntersectClipRect(uVar2, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n    *in_FS_OFFSET = uVar2;\n    fcn.00404308(0x42fe49);\n    return;\n}\n",
        "token_count": 398
    },
    "0042fe54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0042fe54(int32_t lprcSrc1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint lprcSrc2;\n    uint lprcDst;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    uVar1 = fcn.00415324();\n    uVar2 = uVar1;\n    do {\n        do {\n            if (uVar1 < 1) {\n                var_1h._0_1_ = 0;\n                goto code_r0x0042fed5;\n            }\n            uVar1 = uVar1 - 1;\n            uVar2 = fcn.004152c8();\n        } while ((*(uVar2 + 0x57) == '\\0') || ((*(uVar2 + 0x50) & 0x40) == 0));\n        fcn.0042f448();\n        sub.user32.dll_IntersectRect(&lprcDst, lprcSrc1 + -0x14, &lprcSrc2);\n        uVar2 = sub.user32.dll_EqualRect(&lprcDst, lprcSrc1 + -0x14);\n    } while (uVar2 == 0);\ncode_r0x0042fed5:\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 339
    },
    "0042fee0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042fee0(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint var_15h;\n    int32_t var_4h;\n    \n    if (param_2 == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            return;\n        }\n        if ((*(in_EAX + 0x51) & 4) != 0) {\n            return;\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        return;\n    }\n    var_4h = in_EAX;\n    cVar2 = fcn.004363bc();\n    if (cVar2 != '\\0') {\n        fcn.0042f448();\n        if (((var_15h == '\\0') && ((*(*(var_4h + 0x30) + 0x50) & 0x40) == 0)) &&\n           (cVar2 = fcn.0042fe54(&stack0xfffffffc),  cVar2 == '\\0')) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        uVar3 = fcn.004360b8(&var_15h + 1, -uVar1);\n        sub.user32.dll_InvalidateRect(uVar3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "0042ffe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042ffe0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) != '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x51) & 4) == 0)))) &&\n       (in_EAX[0xc] != 0)) {\n        uStack20 = 0x430025;\n        cVar1 = fcn.004363bc();\n        if (cVar1 != '\\0') {\n            if ((*(in_EAX + 0x14) & 0x40) != 0) {\n                uStack20 = 0x430045;\n                uStack20 = fcn.004360b8();\n                puStack24 = 0x43004b;\n                uVar2 = sub.user32.dll_GetDC();\n                uStack28 = 0x4300b9;\n                uStack32 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe0;\n                uVar3 = uVar2;\n                puStack24 = &stack0xfffffffc;\n                sub.gdi32.dll_IntersectClipRect\n                          (uVar2, in_EAX[0x10], in_EAX[0x11], in_EAX[0x10] + in_EAX[0x12], in_EAX[0x11] + in_EAX[0x13]);\n                fcn.00433f64();\n                *in_FS_OFFSET = uVar3;\n                uVar3 = fcn.004360b8(uVar2, 0x4300d3);\n                sub.user32.dll_ReleaseDC(uVar3);\n                return;\n            }\n            uStack20 = 0x4300c8;\n            (**(*in_EAX + 0x7c))();\n            uStack20 = 0x4300d3;\n            (**(*in_EAX + 0x88))();\n        }\n    }\n    return;\n}\n",
        "token_count": 506
    },
    "004300dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004300dc(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x47c2c8 + 0xd) != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 70
    },
    "0043010c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0043010c(void)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x47c2c8 + 0xd) != '\\0') && (iVar1 = (in_EAX & 0xffffff00 | *(in_EAX + 0x5f)) - 1,  iVar1 < 2)) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 108
    },
    "00430214": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430214(uchar *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    *arg_8h = 0;\n    if (*(in_EAX + 0xf2) != 0) {\n        *arg_8h = 1;\n        (**(in_EAX + 0xf0))(arg_8h, arg_10h & 0xffffff00 | arg_ch & 0xff, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00430250": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430250(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xea) != 0) {\n        (**(in_EAX + 0xe8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0043027c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043027c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x112) != 0) {\n        (**(in_EAX + 0x110))();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "0043029c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043029c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x11a) != 0) {\n        (**(in_EAX + 0x118))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "004303ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004303ac(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "004303f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.004303f8(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint8_t var_ah;\n    uint var_9h;\n    uint uStack9;\n    uint var_1h;\n    \n    var_9h = *arg_8h;\n    uStack9 = arg_8h[1];\n    var_ah = 0;\n    uVar2 = in_EAX;\n    if (*(in_EAX + 0x13a) != 0) {\n        uVar2 = (**(in_EAX + 0x138))(&var_ah, &var_9h);\n    }\n    if (var_ah == 0) {\n        *(in_EAX + 0xa4) = *(in_EAX + 0xa4) + in_ECX;\n        while( true ) {\n            uVar1 = *(in_EAX + 0xa4);\n            uVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f);\n            if (uVar2 < 0x78) break;\n            uVar2 = *(in_EAX + 0xa4) >> 0x1f;\n            iVar3 = ((*(in_EAX + 0xa4) ^ uVar2) - uVar2) + -0x78;\n            *(in_EAX + 0xa4) = iVar3;\n            if (uVar1 < 0) {\n                if (iVar3 != 0) {\n                    *(in_EAX + 0xa4) = -iVar3;\n                }\n                var_ah = fcn.0040372c();\n            }\n            else {\n                var_ah = fcn.0040372c();\n            }\n        }\n    }\n    return uVar2 & 0xffffff00 | var_ah;\n}\n",
        "token_count": 458
    },
    "00430554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00430554(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uStack52 = 0x430569;\n    iVar1 = (**(*param_2 + 0x38))();\n    if (var_1h == '\\0') {\n        var_20h = param_2[0x11];\n        var_1ch = param_2[0x12];\n        var_18h = param_2[0x13];\n        var_14h = param_2[0x14];\n    }\n    else {\n        var_20h = param_2[0x17];\n        var_1ch = param_2[0x18];\n        var_18h = param_2[0x19];\n        var_14h = param_2[0x1a];\n    }\n    uStack52 = 0x430590;\n    uVar2 = sub.user32.dll_GetDesktopWindow();\n    uStack52 = 0x402;\n    uStack56 = 0;\n    puStack64 = 0x4305a3;\n    uStack60 = uVar2;\n    uVar3 = sub.user32.dll_GetDCEx();\n    uStack68 = 0x43066f;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.00430554::var_1h + 1;\n    uVar4 = fcn.0042123c();\n    uVar5 = sub.gdi32.dll_SelectObject(uVar3, uVar4);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h + iVar1, var_1ch, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_18h - iVar1, var_1ch + iVar1, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_14h - iVar1, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_1ch, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    uVar4 = uVar3;\n    sub.gdi32.dll_SelectObject(uVar3, uVar5);\n    *in_FS_OFFSET = uVar4;\n    sub.user32.dll_ReleaseDC(uVar2, uVar3, 0x430676);\n    return;\n}\n",
        "token_count": 784
    },
    "004306a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004306a8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar auStack28 [5];\n    uint32_t uStack23;\n    \n    cVar1 = fcn.004036bc();\n    if ((*0x47db94 != '\\0') && (cVar1 == '\\0')) {\n        fcn.004036e0();\n    }\n    fcn.0042f5ec();\n    if (*(param_2 + 4) < 3) {\n        auStack28[0] = 1;\n        if (cVar1 == '\\0') {\n            uVar2 = uStack23 & 0xffffff00 | *(param_2 + 4);\n            fcn.0040372c(auStack28, uVar2, uStack23);\n        }\n        else {\n            uVar2 = uStack23 & 0xffffff00 | *(param_2 + 4);\n            fcn.0040372c(auStack28, uVar2, uStack23);\n        }\n        *(param_2 + 0xc) = uVar2 & 0xff;\n    }\n    else if (*(param_2 + 4) == 3) {\n        if (cVar1 == '\\0') {\n            fcn.0040372c(uStack23);\n        }\n        else {\n            fcn.0040372c(uStack23);\n        }\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00430798": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00430798(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint *arg_8h_00;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if ((in_EDX == 0) || (in_EDX == -1)) {\n        iVar3 = *(in_EAX + 0xa0);\n        if (((iVar3 == 0) || (*(iVar3 + 0x1a7) == '\\0')) || (*(iVar3 + 0x17c) == 0)) {\n            fcn.00413c30();\n            var_1ch = var_24h;\n            var_18h = var_20h;\n            if (*(in_EAX + 0x30) != 0) {\n                fcn.0042f5c0();\n                var_1ch = var_24h;\n                var_18h = var_20h;\n            }\n        }\n        else {\n            (**(**(iVar3 + 0x17c) + 0x14))();\n            var_34h = 2;\n            fcn.004360b8();\n            sub.user32.dll_MapWindowPoints();\n        }\n        uVar1 = fcn.0042fa28();\n        arg_8h_00 = &fcn.00430798::var_34h;\n        uStack80 = 0x430849;\n        fcn.0042fa3c();\n        uStack80 = 0x430856;\n        fcn.00413c80(arg_8h_00, uVar1);\n        var_1ch = var_34h;\n        var_18h = uStack52;\n        uStack24 = uStack48;\n        uStack20 = uStack44;\n        uStack80 = 0x43086a;\n        uVar2 = fcn.00430978();\n        var_5h = uVar2;\n        goto code_r0x0043096a;\n    }\n    uVar1 = fcn.00430c80();\n    if (*(in_EAX + 0xa0) == 0) {\ncode_r0x0043089d:\n        uVar2 = CONCAT31(uVar1 >> 8, 1);\n    }\n    else {\n        uVar1 = fcn.0040372c();\n        if (uVar1 != '\\0') goto code_r0x0043089d;\n        uVar2 = 0;\n    }\n    var_5h = uVar2;\n    if (var_5h != 0) {\n        var_ch = fcn.0042d1d4();\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        if (*(in_EAX + 0xa0) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.004360b8();\n        }\n        fcn.0042f448();\n        if (iVar3 != 0) {\n            sub.user32.dll_MapWindowPoints(iVar3, 0, &fcn.00430798::var_1ch, 2);\n        }\n        *(var_ch + 4) = in_EDX;\n        *(var_ch + 0x54) = arg_8h;\n        *(var_ch + 0x58) = var_4h;\n        *(var_ch + 0x44) = var_1ch;\n        *(var_ch + 0x48) = var_18h;\n        *(var_ch + 0x4c) = uStack24;\n        *(var_ch + 0x50) = uStack20;\n        uVar1 = fcn.004360b8(&fcn.00430798::var_1ch, 1);\n        sub.user32.dll_MapWindowPoints(0, uVar1);\n        fcn.0040372c();\n        *in_FS_OFFSET = var_18h;\n        uVar2 = fcn.00403530(0x43096a);\n        return uVar2;\n    }\ncode_r0x0043096a:\n    return uVar2 & 0xffffff00 | var_5h;\n}\n",
        "token_count": 1029
    },
    "00430a1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00430a1c(uint param_1)\n\n{\n    uint32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = CONCAT31(param_1 >> 8, 1);\n    if (*(in_EAX + 0xc2) != 0) {\n        in_EAX = (**(in_EAX + 0xc0))(&uStack8, param_1);\n    }\n    return CONCAT44(uStack8, in_EAX & 0xffffff00 | uStack8 & 0xff);\n}\n",
        "token_count": 120
    },
    "00430ae8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430ae8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        (**(in_EAX + 200))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00430b78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430b78(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    piStack28 = *(in_EAX[0x1d] + 0x14);\n    if (piStack28 == NULL) {\n        piStack28 = NULL;\n    }\n    piStack24 = *(in_EAX[0x1d] + 0x10);\n    if (piStack24 == NULL) {\n        piStack24 = NULL;\n    }\n    iStack20 = *(in_EAX[0x1d] + 0xc);\n    if (iStack20 == 0) {\n        iStack20 = 0;\n    }\n    iStack16 = *(in_EAX[0x1d] + 8);\n    if (iStack16 == 0) {\n        iStack16 = 0;\n    }\n    (**(*in_EAX + 0x38))();\n    if ((piStack28 < 1) || (*param_2 <= piStack28)) {\n        if ((0 < &iStack16) && (*param_2 < &iStack16)) {\n            *param_2 = &iStack16;\n        }\n    }\n    else {\n        *param_2 = piStack28;\n    }\n    if ((piStack24 < 1) || (*param_1 <= piStack24)) {\n        if ((0 < &iStack20) && (*param_1 < &iStack20)) {\n            *param_1 = &iStack20;\n        }\n    }\n    else {\n        *param_1 = piStack24;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "00430c80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00430c80(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = (**(*in_EAX + 0x54))();\n    if (uVar2 != '\\0') {\n        in_EAX[0x2b] = in_EAX[0x13];\n        in_EAX[0x2a] = in_EAX[0x12];\n        return in_EAX[0x12];\n    }\n    if (in_EAX[0x28] != 0) {\n        if ((*(in_EAX + 0x27) == '\\x02') || (*(in_EAX[0x28] + 0x5b) - 1U < 2)) {\n            uVar2 = in_EAX[0x13];\n            in_EAX[0x2d] = uVar2;\n        }\n        else if ((*(in_EAX + 0x27) == '\\x01') ||\n                (cVar1 = *(in_EAX[0x28] + 0x5b),  uVar2 = in_EAX[0x28] & 0xffffff00U | cVar1 - 5,  cVar1 - 3U < 2)) {\n            uVar2 = in_EAX[0x12];\n            in_EAX[0x2c] = uVar2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 327
    },
    "00430d18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00430d18(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint lpKeyState;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    if (((((*(in_EAX + 7) & 0x10) != 0) && (var_14h = fcn.004466f4(),  var_14h != NULL)) && (var_14h[0x94] != 0)) &&\n       (cVar2 = (**(*var_14h[0x94] + 0x24))(),  cVar2 != '\\0')) {\n        return;\n    }\n    if ((*param_2 < 0x100) || (0x108 < *param_2)) {\n        uVar1 = *param_2;\n        if ((uVar1 < 0x200) || (0x20a < uVar1)) {\n            if (*param_2 == 0xb00b) {\n                fcn.0042f648(param_2[2]);\n            }\n        }\n        else {\n            if (((*(in_EAX + 0x14) & 0x80) == 0) && (((uVar1 == 0x203 || (uVar1 == 0x206)) || (uVar1 == 0x209)))) {\n                *param_2 = *param_2 - 2;\n            }\n            uVar1 = *param_2;\n            if (uVar1 == 0x200) {\n                fcn.0044fd28();\n            }\n            else {\n                if (uVar1 != 0x201) {\n                    if (uVar1 == 0x202) {\n                        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfffe;\n                        goto code_r0x00430e9f;\n                    }\n                    if (uVar1 != 0x203) {\n                        if (((*(*0x47db70 + 0x20) != '\\0') && (*(*0x47db70 + 0x1c) != 0)) &&\n                           (*param_2 == *(*0x47db70 + 0x1c))) {\n                            sub.user32.dll_GetKeyboardState(&lpKeyState);\n                            var_10h = *param_2;\n                            var_ch._0_1_ = fcn.00446618();\n                            var_ch._2_2_ = *(param_2 + 1);\n                            var_8h = param_2[2];\n                            fcn.0040372c();\n                            return;\n                        }\n                        goto code_r0x00430e9f;\n                    }\n                }\n                if (*(in_EAX + 0x5d) == '\\x01') {\n                    fcn.0040372c();\n                    return;\n                }\n                *(in_EAX + 0x15) = *(in_EAX + 0x15) | 1;\n            }\n        }\n    }\n    else {\n        var_14h = fcn.004466f4();\n        if ((var_14h != NULL) && (cVar2 = (**(*var_14h + 0xec))(),  cVar2 != '\\0')) {\n            return;\n        }\n    }\ncode_r0x00430e9f:\n    (**(*in_EAX + -0x14))();\n    return;\n}\n",
        "token_count": 792
    },
    "00431064": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00431064(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xd2) != 0) {\n        (**(in_EAX + 0xd0))(arg_8h, arg_ch, in_ECX);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004311e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar __fastcall fcn.004311e0(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    uVar1 = *param_2;\n    uVar2 = *param_1;\n    cVar3 = fcn.00430ab8();\n    if (cVar3 != '\\0') {\n        if (((*(in_EAX + 0x5c) == '\\0') || (cVar3 = fcn.00430a4c(),  cVar3 != '\\0')) ||\n           (cVar3 = fcn.00430ab8(),  cVar3 != '\\0')) {\n            cVar4 = '\\x01';\n        }\n        else {\n            cVar4 = '\\0';\n        }\n        if (cVar4 != '\\0') {\n            *param_2 = uVar1;\n            *param_1 = uVar2;\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 240
    },
    "0043131c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0043131c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "004313c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004313c4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xe2) != 0) {\n        (**(in_EAX + 0xe0))(arg_8h, arg_ch, in_ECX);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00431724": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431724(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*(*0x47c2c8 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        (**(*in_EAX + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0043179c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043179c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x56) != '\\0') {\n        fcn.0042fb8c();\n        *(in_EAX + 0x56) = 1;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00431910": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431910(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = (**(*in_EAX + 0x54))();\n    if ((cVar1 == '\\0') || (in_EAX[0xc] == 0)) {\n        iVar2 = fcn.00431800();\n        if (iVar2 != 0) {\n            *(*(param_2 + 8) + 4) = iVar2;\n            uVar3 = fcn.004360b8();\n            *(*(param_2 + 8) + 8) = uVar3;\n        }\n    }\n    else {\n        fcn.00431884(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "00431970": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004319b7)\n\nvoid __fastcall fcn.00431970(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x431a5e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.004036bc();\n    if (cVar1 != '\\0') {\n        if (param_1 != '\\0') {\n            fcn.0042fa98();\n        }\n        fcn.0042fac8();\n        if ((param_1 == '\\0') || (cVar1 = (**(*in_EAX + 0x50))(),  cVar1 == '\\x01')) {\n            (**(*in_EAX + 100))();\n        }\n        if ((param_1 == '\\0') || (in_EAX[0x20] == 0)) {\n            fcn.0040435c();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x57) == '\\x01')) {\n            fcn.0042f9b8();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x122) == 0)) {\n            in_EAX[0x48] = *(param_2 + 0x40);\n            in_EAX[0x49] = *(param_2 + 0x44);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x431a65;\n    uStack32 = 0x431a5d;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 440
    },
    "00431db4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431db4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar auStack28 [12];\n    \n    if (*(param_2 + 0xc) == 0) {\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            fcn.00407278();\n            cVar1 = fcn.00413ca8();\n            if (cVar1 == '\\0') {\n                fcn.0042f5ec();\n                (**(*in_EAX + 0x44))(uStack52, uStack48);\n                iVar2 = sub.user32.dll_PtInRect(auStack28);\n                if (iVar2 == 0) {\n                    (**(*in_EAX + -0x10))();\n                    return;\n                }\n            }\n            fcn.0040372c();\n            *(param_2 + 0xc) = 0;\n            piVar3 = fcn.0040372c();\n            if ((piVar3 != NULL) && (*(piVar3 + 0x61) != '\\0')) {\n                fcn.0042f618();\n                piVar3[0x19] = in_EAX;\n                cVar1 = fcn.00413ca8();\n                if (cVar1 != '\\0') {\n                    fcn.00413c30();\n                    fcn.0042f5c0();\n                }\n                (**(*piVar3 + 0x40))();\n                *(param_2 + 0xc) = 1;\n            }\n            if (*(param_2 + 0xc) == 0) {\n                (**(*in_EAX + -0x10))();\n            }\n        }\n        else {\n            (**(*in_EAX + -0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 439
    },
    "00432074": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00432074(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char extraout_DL;\n    \n    piVar1 = fcn.004038e4();\n    fcn.0041dd0c();\n    if (*(piVar1 + 0x6a) != '\\0') {\n        *(piVar1 + 0x6a) = 0;\n        fcn.0042d76c();\n    }\n    fcn.00406130();\n    fcn.00403530();\n    if (piVar1[0xc] != 0) {\n        fcn.00432d00();\n    }\n    if (piVar1[0x60] != 0) {\n        (**(*piVar1 + 0xac))();\n    }\n    iVar2 = fcn.00432f40();\n    while (iVar2 != 0) {\n        piVar3 = fcn.00432f04();\n        fcn.00432d6c();\n        (**(*piVar3 + -4))();\n        iVar2 = fcn.00432f40();\n    }\n    fcn.00403530();\n    if (piVar1[99] != 0) {\n        fcn.0041eb88();\n    }\n    fcn.0042ec80();\n    if ('\\0' < extraout_DL) {\n        fcn.004038cc();\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "00432144": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00432144(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x19c) == 0) {\n        return;\n    }\n    puStack28 = 0x43216b;\n    fcn.00403500();\n    uStack32 = 0x432208;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar3 = *(*(in_EAX + 0x19c) + 8);\n    puStack28 = &stack0xfffffffc;\n    fcn.004154c4();\n    iVar2 = iVar3;\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar1 = fcn.004152c8();\n            if ((-1 < *(iVar1 + 0x1a0)) && (*(iVar1 + 0x1a0) < iVar3)) {\n                fcn.00415414();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar2 = fcn.004152c8();\n            if (iVar2 != 0) {\n                fcn.00436278();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x43220f;\n    uStack32 = 0x432207;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 416
    },
    "0043274c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043274c(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    (**(**(arg_8h + -0xc) + 8))();\n    if (((*(arg_8h + -0x10) != 0) &&\n        (((in_AL == '\\0' || (*(*(arg_8h + -0x10) + 0x57) != '\\0')) ||\n         (((*(*(arg_8h + -0x10) + 0x1c) & 0x10) != 0 && ((*(*(arg_8h + -0x10) + 0x51) & 4) == 0)))))) &&\n       (in_AL == *(*(arg_8h + -0x10) + 0x5b))) {\n        fcn.0041516c();\n    }\n    var_8h = fcn.00432f40();\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = fcn.00432f04();\n            if (((in_AL == *(iVar2 + 0x5b)) &&\n                ((((in_AL == '\\0' || (*(iVar2 + 0x57) != '\\0')) || (*0x4328b8 == (*0x4328b8 & *(iVar2 + 0x50)))) ||\n                 (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))))) && (iVar2 != *(arg_8h + -0x10))) {\n                for (iVar2 = 0; iVar2 < *(*(arg_8h + -0xc) + 8); iVar2 = iVar2 + 1) {\n                    arg_8h_00 = arg_8h;\n                    fcn.004152c8();\n                    cVar1 = fcn.00432294(arg_8h_00);\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00415344();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    var_8h = *(*(arg_8h + -0xc) + 8);\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = arg_8h;\n            fcn.004152c8();\n            fcn.00432320(iVar2);\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 646
    },
    "004328bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004328bc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00432f40();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00432f04();\n            if (*(iVar2 + 0x5b) != '\\0') {\n                return 1;\n            }\n            iVar2 = fcn.00432f04();\n            if (*0x43290c != *(iVar2 + 0x61)) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "00432910": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00432910(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x6a) != '\\0') && (*(in_EAX + 0x1a7) != '\\0')) && (in_EAX[0x5f] != 0)) {\n        (**(*in_EAX[0x5f] + 0x2c))();\n    }\n    uStack32 = 0x43295a;\n    cVar1 = fcn.004328bc(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x8c))();\n        fcn.00403500();\n        uStack32 = 0x4329ef;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        fcn.0043274c(&stack0xfffffffc);\n        fcn.0043274c(&stack0xfffffffc);\n        fcn.0043274c(&stack0xfffffffc);\n        fcn.0043274c(&stack0xfffffffc);\n        fcn.0043274c(&stack0xfffffffc);\n        fcn.0043274c(&stack0xfffffffc);\n        fcn.0043274c(&stack0xfffffffc);\n        fcn.0040372c();\n        *in_FS_OFFSET = uStack36;\n        uStack32 = 0x4329ee;\n        fcn.00403530();\n        return;\n    }\n    if (*(in_EAX + 0x1a6) != '\\0') {\n        fcn.0040372c();\n    }\n    return;\n}\n",
        "token_count": 417
    },
    "00432a14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00432a14(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack32 = 0x432a28;\n    cVar1 = fcn.004363bc();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 8) == 0)) {\n        if (*(in_EAX + 0x58) == 0) {\n            puStack32 = 0x432a54;\n            fcn.00432aa8();\n            uStack36 = 0x432a9b;\n            uStack40 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd8;\n            puStack32 = &stack0xfffffffc;\n            (**(*in_EAX + 0x44))();\n            (**(*in_EAX + 0x90))();\n            *in_FS_OFFSET = uStack40;\n            puStack32 = 0x432aa2;\n            *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n            uStack36 = 0x432a9a;\n            fcn.00432ab0();\n            return;\n        }\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 0x10;\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "00432ab0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00432ab0(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x160) = *(in_EAX + 0x160) + -1;\n    if ((*(in_EAX + 0x160) == 0) && ((*(in_EAX + 0x54) & 0x10) != 0)) {\n        fcn.00432ad0();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00432f60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432f60(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00432f40();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00432f04();\n            (**(iVar2 + 0x38))();\n            if (*(param_2 + 0xc) != 0) {\n                return;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "004331c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004331c8(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint *arg_ch;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint lpWndClass;\n    code *var_b0h;\n    uint var_8ch;\n    uint var_85h;\n    int32_t var_70h;\n    uint var_68h;\n    code *var_64h;\n    uint hInstance;\n    uint *var_44h;\n    uint lpClassName;\n    \n    puStack208 = &stack0xfffffffc;\n    uStack212 = 0x433353;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack216;\n    (**(*in_EAX + 0x98))();\n    if ((var_70h == 0) && ((var_85h & 0x40) != 0)) {\n        if ((in_EAX[1] != 0) && ((*(in_EAX[1] + 0x1c) & 2) != 0)) {\n            cVar1 = fcn.004036bc();\n            if (cVar1 != '\\0') {\n                var_70h = fcn.004360b8();\n                goto code_r0x00433274;\n            }\n        }\n        var_bch = in_EAX[2];\n        var_b8h._0_1_ = 0xb;\n        arg_ch = &var_bch;\n        uVar4 = 0;\n        fcn.004065fc();\n        fcn.0040b1a8(uVar4, arg_ch);\n        fcn.00403ce4();\n    }\ncode_r0x00433274:\n    in_EAX[0x5d] = var_64h;\n    iVar3 = sub.user32.dll_GetClassInfoA(hInstance, &lpClassName, &lpWndClass);\n    if ((iVar3 == 0) || (var_b0h != fcn.0042c8d4)) {\n        if (iVar3 != 0) {\n            sub.user32.dll_UnregisterClassA(&lpClassName, hInstance);\n        }\n        var_64h = fcn.0042c8d4;\n        var_44h = &lpClassName;\n        iVar2 = sub.user32.dll_RegisterClassA(&var_68h);\n        if (iVar2 == 0) {\n            fcn.0040c3ec();\n        }\n    }\n    *0x46f88c = in_EAX;\n    (**(*in_EAX + 0x9c))();\n    if (in_EAX[0x60] == 0) {\n        fcn.0040c3ec();\n    }\n    fcn.00408e14();\n    in_EAX[0x19] = 0;\n    fcn.004363c8();\n    uVar4 = 1;\n    fcn.00420a50();\n    fcn.00430c4c(uVar4);\n    if (*(in_EAX + 0x17) != '\\0') {\n        fcn.0040372c();\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.00404308(0x43335a);\n    return;\n}\n",
        "token_count": 776
    },
    "00433444": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00433444(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0x1000000;\n    if ((*(*(arg_8h + -4) + 0x20) == 0) || (uVar1 = fcn.00433430(),  uVar1 == '\\0')) {\n        iVar3 = *(*(arg_8h + -8) + 0x198);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                uVar2 = fcn.004152c8();\n                if ((*(uVar2 + 0x5b) == '\\0') && (uVar1 = uVar2 & 0xffffff00,  *0x433518 != *(uVar2 + 0x61)))\n                goto code_r0x0043350f;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        uVar1 = *(*(arg_8h + -8) + 0x19c);\n        if ((uVar1 != 0) && (iVar3 = *(uVar1 + 8),  -1 < iVar3 + -1)) {\n            do {\n                uVar2 = fcn.004152c8();\n                uVar1 = uVar2;\n                if ((*(uVar2 + 0x5b) == '\\0') && (uVar1 = uVar2 & 0xffffff00,  *0x433518 != *(uVar2 + 0x61)))\n                goto code_r0x0043350f;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    _auStack8 = 0;\ncode_r0x0043350f:\n    return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 490
    },
    "00433734": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433734(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0x60] != 0) {\n        if ((in_EAX[0x67] != 0) && (iVar1 = *(in_EAX[0x67] + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.004152c8();\n                fcn.00433734();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        (**(*in_EAX + 0xb0))();\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0043377c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043377c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x180) != 0) {\n        fcn.00430c4c(0);\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "004337d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004337d4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) == '\\0') && (((*(in_EAX + 7) & 0x10) == 0 || ((*(in_EAX + 0x51) & 4) != 0)))) ||\n       ((*(in_EAX + 0x15) & 8) != 0)) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    if (cVar1 != '\\0') {\n        if (in_EAX[0x60] == 0) {\n            puStack28 = 0x43382a;\n            (**(*in_EAX + 0x94))();\n        }\n        if ((in_EAX[0x67] != 0) && (iVar2 = *(in_EAX[0x67] + 8),  -1 < iVar2 + -1)) {\n            do {\n                puStack28 = 0x433852;\n                fcn.004152c8();\n                puStack28 = 0x433857;\n                fcn.004337d4();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    if ((in_EAX[0x60] != 0) && (*(in_EAX + 0x1a6) != cVar1)) {\n        *(in_EAX + 0x1a6) = cVar1;\n        uStack32 = 0x4338aa;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        uVar3 = 0;\n        puStack28 = &stack0xfffffffc;\n        fcn.00430c4c(0);\n        *in_FS_OFFSET = uVar3;\n    }\n    return;\n}\n",
        "token_count": 474
    },
    "004338d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004338d0(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    \n    while (iVar1 = *(in_EAX + 0x30),  iVar1 != 0) {\n        in_EAX = iVar1;\n        if (*(iVar1 + 0x1a6) == '\\0') {\n            return;\n        }\n    }\n    cVar2 = fcn.004036bc();\n    if ((cVar2 == '\\0') && (*(in_EAX + 400) == 0)) {\n        return;\n    }\n    fcn.004337d4();\n    return;\n}\n",
        "token_count": 145
    },
    "00433988": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433988(int32_t arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint lprc;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00413c30();\n    *(arg_8h + -0xc) = var_8h;\n    *(arg_8h + -8) = var_4h;\n    (**(*in_EAX + 0x44))(*(arg_8h + -0xc), *(arg_8h + -8));\n    iVar3 = sub.user32.dll_PtInRect(&lprc);\n    if (iVar3 != 0) {\n        if (((*(in_EAX + 7) & 0x10) != 0) && ((*(in_EAX + 0x57) != '\\0' || ((*(in_EAX + 0x51) & 4) == 0)))) {\ncode_r0x00433a2d:\n            bVar1 = true;\n            goto code_r0x00433a2f;\n        }\n        if (*(in_EAX + 0x57) != '\\0') {\n            cVar2 = (**(*in_EAX + 0x50))();\n            if ((cVar2 != '\\0') || (*(arg_8h + -0xd) != '\\0')) {\n                arg_8h_00 = fcn.0040728c();\n                iVar3 = fcn.00430c4c(arg_8h_00);\n                if (iVar3 != 0) goto code_r0x00433a2d;\n            }\n        }\n    }\n    bVar1 = false;\ncode_r0x00433a2f:\n    if (bVar1) {\n        *(arg_8h + -0x14) = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "00433a40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433a40(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    if (((arg_8h != '\\0') && (*(in_EAX + 0x19c) != 0)) && (iVar2 = *(*(in_EAX + 0x19c) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.004152c8();\n            cVar1 = fcn.00433988(puVar3);\n            if (cVar1 != '\\0') break;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if ((*(in_EAX + 0x198) != 0) && (iVar2 = *(*(in_EAX + 0x198) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.004152c8();\n            cVar1 = fcn.00433988(puVar3);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 334
    },
    "00433ad4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00433ad4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.004360b8();\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar1 == iVar2) {\n        iVar1 = 0;\n        if ((*0x46f94c != 0) && (in_EAX == *(*0x46f94c + 0x30))) {\n            iVar1 = *0x46f94c;\n        }\n    }\n    else {\n        uVar3 = 0;\n        fcn.00407278();\n        iVar1 = fcn.00433a40(uVar3);\n    }\n    if (iVar1 != 0) {\n        uVar3 = fcn.0040728c(*(param_2 + 8) - *(iVar1 + 0x40), *(param_2 + 10) - *(iVar1 + 0x44));\n        uVar3 = fcn.00430c4c(uVar3);\n        *(param_2 + 0xc) = uVar3;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 279
    },
    "00433b68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433b68(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    iVar4 = *param_2;\n    if (iVar4 < 0x85) {\n        if (iVar4 == 0x84) {\n            fcn.00430d18();\n            if (param_2[3] != -1) {\n                return;\n            }\n            uVar6 = 0;\n            fcn.00407278();\n            fcn.0042f5ec();\n            iVar4 = fcn.00433a40(uVar6);\n            if (iVar4 == 0) {\n                return;\n            }\n            param_2[3] = 1;\n            return;\n        }\n        if (iVar4 == 7) {\n            piVar3 = fcn.004466f4();\n            if ((piVar3 != NULL) && (cVar1 = (**(*piVar3 + 0xe4))(),  cVar1 == '\\0')) {\n                return;\n            }\n            goto code_r0x00433cbb;\n        }\n        if (iVar4 != 8) {\n            if (iVar4 == 0x1f) {\n                iVar4 = fcn.004360b8();\n                iVar5 = sub.user32.dll_GetCapture();\n                if (((iVar4 == iVar5) && (*0x46f94c != 0)) && (in_EAX == *(*0x46f94c + 0x30))) {\n                    fcn.00430c4c(0);\n                }\n            }\n            goto code_r0x00433cbb;\n        }\n        uVar2 = *(in_EAX + 0x54) & 0x20;\n    }\n    else {\n        if (8 < iVar4 - 0x100U) {\n            if ((iVar4 - 0x200U < 0xb) && (cVar1 = fcn.00433ad4(),  cVar1 != '\\0')) {\n                if (param_2[3] != 0) {\n                    return;\n                }\n                cVar1 = fcn.004363bc();\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                uVar6 = fcn.004360b8(*param_2, param_2[1], param_2[2]);\n                sub.user32.dll_DefWindowProcA(uVar6);\n                return;\n            }\n            goto code_r0x00433cbb;\n        }\n        uVar2 = fcn.00430208();\n    }\n    if (uVar2 != 0) {\n        return;\n    }\ncode_r0x00433cbb:\n    fcn.00430d18();\n    return;\n}\n",
        "token_count": 642
    },
    "00433ccc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433ccc(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x180) == 0) {\n        fcn.00430eb0();\n    }\n    else {\n        if ((*param_2 == 0x7b) && (*(in_EAX + 0x30) != 0)) {\n            iVar1 = fcn.00430c4c(param_2[2]);\n            param_2[3] = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n        iVar1 = *param_2;\n        if (iVar1 - 0x132U < 7) {\n            iVar1 = sub.user32.dll_SendMessageA(param_2[2], iVar1 + 0xbc00, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 - 0xbd32U < 7) {\n            uVar2 = fcn.0042057c();\n            sub.gdi32.dll_SetTextColor(param_2[1], uVar2);\n            fcn.00421200();\n            uVar2 = fcn.0042057c();\n            sub.gdi32.dll_SetBkColor(param_2[1], uVar2);\n            iVar1 = fcn.0042123c();\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 == *0x47db88) {\n            param_2[3] = in_EAX;\n        }\n        else {\n            iVar1 = sub.user32.dll_CallWindowProcA(*(in_EAX + 0x174), *(in_EAX + 0x180), iVar1, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        if (*param_2 == 0xc) {\n            fcn.0042f648(param_2[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 467
    },
    "00433e08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433e08(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff80;\n    int32_t iVar5;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint var_50h;\n    uint nSavedDC;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = *(param_2 + 4);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar1 == 0) {\n        puStack100 = &fcn.00433e08::var_50h;\n        uStack104 = 0x433e2d;\n        uStack104 = fcn.004360b8();\n        puStack108 = 0x433e33;\n        iVar1 = sub.user32.dll_BeginPaint();\n    }\n    uStack112 = 0x433f28;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (var_4h[0x66] == 0) {\n        puStack108 = &stack0xfffffffc;\n        (**(*var_4h + 0xb8))();\n        iVar1 = in_stack_ffffff80;\n    }\n    else {\n        iVar5 = iVar1;\n        puStack108 = &stack0xfffffffc;\n        nSavedDC = sub.gdi32.dll_SaveDC(iVar1);\n        var_ch = 2;\n        iVar4 = *(var_4h[0x66] + 8);\n        if (-1 < iVar4 + -1) {\n            do {\n                iVar2 = fcn.004152c8();\n                if ((((*(iVar2 + 0x57) != '\\0') || (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))) &&\n                    ((*(iVar2 + 0x50) & 0x40) != 0)) &&\n                   (iVar5 = iVar1,  var_ch = sub.gdi32.dll_ExcludeClipRect(),  var_ch == 1)) break;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        if (var_ch != 1) {\n            (**(*var_4h + 0xb8))(iVar5);\n        }\n        sub.gdi32.dll_RestoreDC(iVar1, nSavedDC);\n    }\n    fcn.00433f64();\n    *in_FS_OFFSET = iVar1;\n    if (*(var_8h + 4) == 0) {\n        uVar3 = fcn.004360b8(&fcn.00433e08::var_50h, 0x433f2f);\n        sub.user32.dll_EndPaint(uVar3);\n    }\n    return;\n}\n",
        "token_count": 713
    },
    "00433f64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433f64(int32_t param_1, uchar *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puStack72;\n    uchar *puStack68;\n    uchar *puStack48;\n    uint uStack44;\n    int32_t iStack36;\n    uchar auStack32 [16];\n    \n    if (((*(in_EAX + 0x1a8) != '\\0') && (*(in_EAX + 0x1a7) != '\\0')) && (*(in_EAX + 0x17c) != 0)) {\n        (**(**(in_EAX + 0x17c) + 0x20))();\n    }\n    if (*(in_EAX + 0x198) != 0) {\n        iVar4 = 0;\n        if ((param_1 != 0) && (iVar4 = fcn.00415324(),  iVar4 < 0)) {\n            iVar4 = 0;\n        }\n        puStack48 = *(*(in_EAX + 0x198) + 8);\n        if (iVar4 < puStack48) {\n            do {\n                iVar1 = fcn.004152c8();\n                if ((*(iVar1 + 0x57) != '\\0') || (((*(iVar1 + 0x1c) & 0x10) != 0 && ((*(iVar1 + 0x51) & 4) == 0)))) {\n                    fcn.00413c58(&stack0xffffffe0, *(iVar1 + 0x44) + *(iVar1 + 0x4c));\n                    puStack68 = 0x434022;\n                    iVar2 = sub.gdi32.dll_RectVisible();\n                    puStack48 = param_2;\n                    if (iVar2 != 0) {\n                        if ((*(in_EAX + 0x54) & 0x80) != 0) {\n                            *(iVar1 + 0x54) = *(iVar1 + 0x54) | 0x80;\n                        }\n                        puStack72 = 0x434038;\n                        puStack68 = param_2;\n                        sub.gdi32.dll_SaveDC();\n                        puStack72 = 0x434049;\n                        fcn.0042e3e4();\n                        puStack72 = *(iVar1 + 0x4c);\n                        sub.gdi32.dll_IntersectClipRect(param_2, 0, 0, *(iVar1 + 0x48));\n                        fcn.00430c4c(0);\n                        sub.gdi32.dll_RestoreDC();\n                        *(iVar1 + 0x54) = *(iVar1 + 0x54) & 0xff7f;\n                    }\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < puStack48);\n        }\n    }\n    if ((*(in_EAX + 0x19c) != 0) && (iStack36 = *(*(in_EAX + 0x19c) + 8),  -1 < iStack36 + -1)) {\n        do {\n            iVar4 = fcn.004152c8();\n            if (((*(iVar4 + 0x1a5) != '\\0') && ((*(iVar4 + 0x50) & 0x10) != 0)) &&\n               ((*(iVar4 + 0x57) != '\\0' || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0)))))) {\n                fcn.0042057c();\n                uStack44 = sub.gdi32.dll_CreateSolidBrush();\n                puVar5 = &stack0xffffffdc;\n                puStack68 = 0x43411f;\n                fcn.00413c58(puVar5, *(iVar4 + 0x44) + *(iVar4 + 0x4c));\n                puStack68 = &stack0xffffffd4;\n                puStack72 = param_2;\n                sub.user32.dll_FrameRect();\n                sub.gdi32.dll_DeleteObject(puVar5);\n                uVar3 = fcn.0042057c();\n                uVar3 = sub.gdi32.dll_CreateSolidBrush(uVar3);\n                iVar4 = *(iVar4 + 0x44) + *(iVar4 + 0x4c) + 1;\n                puVar5 = &stack0xffffffc0;\n                puStack72 = uVar3;\n                fcn.00413c58(puVar5, iVar4);\n                sub.user32.dll_FrameRect(param_2, &stack0xffffffb8, puVar5, iVar4, uVar3);\n                sub.gdi32.dll_DeleteObject(puVar5);\n            }\n            iStack36 = iStack36 + -1;\n        } while (iStack36 != 0);\n    }\n    return;\n}\n",
        "token_count": 1109
    },
    "00434194": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434194(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lprc;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint nSavedDC;\n    uint edge;\n    int32_t var_4h;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x80;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    fcn.0042e3e4();\n    sub.gdi32.dll_IntersectClipRect();\n    iVar3 = 0;\n    edge = 0;\n    uVar1 = fcn.004360b8(0xffffffec);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    if ((uVar2 & 0x200) == 0) {\n        uVar1 = fcn.004360b8(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & 0x800000) != 0) {\n            edge = 3;\n            iVar3 = 0xa00f;\n        }\n    }\n    else {\n        edge = 10;\n        iVar3 = 0x200f;\n    }\n    if (iVar3 != 0) {\n        sub.user32.dll_SetRect(&lprc, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n        sub.user32.dll_DrawEdge();\n        fcn.0042e3e4();\n        sub.gdi32.dll_IntersectClipRect();\n    }\n    fcn.00430c4c(0);\n    fcn.00430c4c(0);\n    if ((*(in_EAX + 0x19c) != 0) && (iVar3 = *(*(in_EAX + 0x19c) + 8),  -1 < iVar3 + -1)) {\n        var_4h = 0;\n        var_10h = iVar3;\n        do {\n            iVar3 = fcn.004152c8();\n            if (*(iVar3 + 0x57) != '\\0') {\n                fcn.00434194(*(iVar3 + 0x44));\n            }\n            var_4h = var_4h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    sub.gdi32.dll_RestoreDC();\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xff7f;\n    return;\n}\n",
        "token_count": 631
    },
    "004345ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004345ac(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uchar auStack24 [16];\n    \n    if ((*(in_EAX + 0x7e) == '\\0') || (*(param_2 + 4) == *(param_2 + 8))) {\n        uVar1 = fcn.0042123c();\n        (**(*in_EAX + 0x44))(uVar1);\n        sub.user32.dll_FillRect(*(param_2 + 4), auStack24);\n    }\n    *(param_2 + 0xc) = 1;\n    return;\n}\n",
        "token_count": 153
    },
    "004348a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004348a0(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43497f;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(*0x47c2c8 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x188) != 0) {\n            fcn.0044d2d4();\n            iVar2 = fcn.0040856c();\n            puVar1 = puStack24;\n            if (iVar2 != 0) {\n                piVar3 = fcn.0044d0d4();\n                iVar2 = (**(*piVar3 + 0x14))();\n                puVar1 = puStack24;\n                if (iVar2 != 0) {\n                    uVar4 = *(**0x47c298 + 0x3c);\n                    if (*(in_EAX + 0x184) != '\\0') {\n                        piVar3 = fcn.0044d0d4();\n                        iVar2 = (**(*piVar3 + 0x54))();\n                        if (-1 < iVar2) {\n                            uStack28 = 0x434946;\n                            piVar3 = fcn.0044d0d4();\n                            uStack28 = 0x43494d;\n                            uVar4 = (**(*piVar3 + 0x18))();\n                        }\n                    }\n                    uStack28 = 1;\n                    uStack32 = uVar4;\n                    sub.user32.dll_ActivateKeyboardLayout();\n                    puVar1 = puStack24;\n                }\n            }\n        }\n        puStack24 = puVar1;\n        fcn.004360b8();\n        fcn.0043aba8();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x434986;\n    uStack28 = 0x43497e;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 521
    },
    "0043498c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043498c(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffe0;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x434a16;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x47c2c8 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x188) != 0) {\n            fcn.0044d2d4();\n            iVar2 = fcn.0040856c();\n            puVar1 = puStack16;\n            if (iVar2 != 0) {\n                in_stack_ffffffe0 = *(**0x47c298 + 0x3c);\n                sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffe0, 1);\n                puVar1 = puStack16;\n            }\n        }\n        puStack16 = puVar1;\n        puVar1 = puStack16;\n        if (*(in_EAX + 0x184) == '\\0') {\n            fcn.004360b8();\n            fcn.0043ab8c();\n            puVar1 = puStack16;\n        }\n    }\n    puStack16 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffe0;\n    uStack24 = 0x434a1d;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 391
    },
    "00434a38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00434a38(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1c2) != 0) {\n        (**(in_EAX + 0x1c0))();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00434a58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00434a58(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1ca) != 0) {\n        (**(in_EAX + 0x1c8))();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00434a78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434a78(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.00413c48();\n    iVar1 = fcn.00430c4c(arg_8h_00);\n    if ((-1 < iVar1) && (*(in_EAX + 0x1b2) != 0)) {\n        (**(in_EAX + 0x1b0))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00434ac8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434ac8(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1ba) != 0) {\n        (**(in_EAX + 0x1b8))(arg_8h, arg_10h & 0xffffff00 | arg_ch & 0xff, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00434bf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434bf0(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint uStack8;\n    \n    var_8h = *arg_ch;\n    uStack8 = arg_ch[1];\n    uVar1 = fcn.004360b8();\n    sub.user32.dll_GetWindowRect(uVar1);\n    sub.user32.dll_InflateRect();\n    if (*(in_EAX + 0x1d2) != 0) {\n        (**(in_EAX + 0x1d0))(arg_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00434c4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00434c4c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00434bb8();\n    if ((0 < iVar1) && (iVar3 = iVar1 + -1,  -1 < iVar3)) {\n        do {\n            iVar2 = fcn.004152c8();\n            if (*(iVar2 + 0x57) == '\\0') {\n                iVar1 = iVar1 + -1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 147
    },
    "00434cf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434cf8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x434da0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((param_2 != *(in_EAX + 0x1a8)) && (*(in_EAX + 0x1a8) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) {\n        fcn.0042d76c();\n        if (param_2 == '\\0') {\n            fcn.00403530();\n            *(in_EAX + 0x178) = 0;\n            fcn.00406130();\n        }\n        else {\n            if (*(in_EAX + 0x178) == 0) {\n                uVar1 = fcn.00403500();\n                *(in_EAX + 0x178) = uVar1;\n            }\n            fcn.0040372c();\n            fcn.00406148();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x434da7;\n    uStack28 = 0x434d9f;\n    fcn.00406130();\n    return;\n}\n",
        "token_count": 348
    },
    "00434db0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434db0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        iVar1 = *(param_2 + 4);\n        var_18h = *(iVar1 + 0x44);\n        uStack24 = *(iVar1 + 0x48);\n        uStack20 = *(iVar1 + 0x4c);\n        uStack16 = *(iVar1 + 0x50);\n        uStack44 = 2;\n        puStack48 = &fcn.00434db0::var_18h;\n        uStack52 = 0x434dea;\n        var_8h = param_2;\n        var_4h = in_EAX;\n        uStack52 = fcn.004360b8();\n        uStack56 = 0;\n        puStack60 = 0x434df2;\n        sub.user32.dll_MapWindowPoints();\n        puStack60 = 0x434dfa;\n        fcn.00432aa8();\n        uStack64 = 0x434e72;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.0040372c();\n        if ((*(var_4h + 0x1a7) != '\\0') && (*(var_4h + 0x17c) != 0)) {\n            (**(**(var_4h + 0x17c) + 0x18))(*(*(var_8h + 4) + 0x58));\n        }\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x434e79;\n        uStack64 = 0x434e71;\n        fcn.00432ab0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 522
    },
    "00434e9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434e9c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 0xc) = 0;\n    if ((*(in_EAX + 0x1a7) != '\\0') && (*(in_EAX + 0x17c) != 0)) {\n        (**(**(in_EAX + 0x17c) + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00434ec4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00434ec4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x434ed9;\n    iVar2 = (**(*in_EAX + 0x58))();\n    puStack24 = 0x434ee3;\n    iVar3 = fcn.00403478();\n    if (iVar2 == iVar3) {\n        cVar1 = *(in_EAX + 0x57);\n        uStack28 = 0x434f2e;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0040372c();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x434f3f;\n        if (cVar1 != '\\0') {\n            uStack28 = 0x434f2d;\n            fcn.0042fcf8();\n        }\n        return;\n    }\n    puStack24 = 0x434f3f;\n    fcn.00431910();\n    return;\n}\n",
        "token_count": 296
    },
    "00434f70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00434f70(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.004466f4();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar1 = fcn.00434f70();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x00434fcd;\n    }\n    uVar2 = fcn.004465dc();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040372c();\n        if (*(param_2 + 4) == 0) goto code_r0x00434fcd;\n    }\n    uVar4 = 0;\ncode_r0x00434fcd:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 304
    },
    "00435040": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00435040(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.004466f4();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar1 = fcn.00435040();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x0043509d;\n    }\n    uVar2 = fcn.004465dc();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040372c();\n        if (*(param_2 + 4) == 0) goto code_r0x0043509d;\n    }\n    uVar4 = 0;\ncode_r0x0043509d:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 302
    },
    "00435108": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00435108(uint32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.004466f4();\n    uStack20 = param_1;\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar2 = fcn.00435108();\n        if (cVar2 != '\\0') goto code_r0x00435164;\n    }\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        uVar1 = *(param_2 + 4);\n        uStack20 = param_1 & 0xffffff00 | uVar1;\n        fcn.0040372c();\n        *(param_2 + 4) = uVar1;\n        if (*(param_2 + 4) == '\\0') goto code_r0x00435164;\n    }\n    uVar4 = 0;\ncode_r0x00435164:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 314
    },
    "004353a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004353a8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        *(param_2 + 0xc) = 1;\n        return;\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 105
    },
    "004353cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004353cc(uint param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.0042ed74();\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar3 = fcn.00432f40();\n        iVar3 = iVar3 + -1;\n        if (-1 < iVar3) {\n            do {\n                if ((param_2 & uVar2) != 0) break;\n                fcn.00432f04();\n                uVar1 = fcn.0040372c();\n                uVar2 = uVar2 & 0xffffff00 | uVar2 | uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n    }\n    return CONCAT14(param_2, uVar2);\n}\n",
        "token_count": 219
    },
    "00435480": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435480(uint param_1, int32_t param_2)\n\n{\n    fcn.00431724();\n    if ((*(*0x47c2c8 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        fcn.0043377c();\n    }\n    fcn.00432fa0();\n    return;\n}\n",
        "token_count": 89
    },
    "00435598": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00435598(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x57) == '\\0') && (*(in_EAX + 0x30) != 0)) {\n        fcn.00432d00();\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || ((*(in_EAX + 0x51) & 4) != 0)) {\n        fcn.004338d0();\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0043571c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043571c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x50) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        cVar1 = fcn.004363bc();\n        if (cVar1 != '\\0') {\n            iVar2 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x180));\n            if (iVar2 != 0) {\n                fcn.00435fc0();\n            }\n        }\n    }\n    fcn.00432fa0();\n    return;\n}\n",
        "token_count": 155
    },
    "004357bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004357bc(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint arg_8h;\n    \n    if (*(param_2 + 4) < 4) {\n        if (*(*(param_2 + 8) + 0xc) != 0) {\n            fcn.004306a8();\n        }\n    }\n    else if (*(param_2 + 4) == 5) {\n        arg_8h = 0;\n        fcn.0042f5ec();\n        iVar1 = fcn.00433a40(arg_8h);\n        *(param_2 + 0xc) = iVar1;\n        if (iVar1 == 0) {\n            *(param_2 + 0xc) = in_EAX;\n        }\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00435848": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00435848(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack20;\n    \n    uVar1 = uStack20;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (in_EAX != 0) {\n            do {\n                iVar2 = fcn.0040372c();\n                if ((iVar2 != 0) && (*(iVar2 + 0x38) != 0)) {\n                    uVar3 = fcn.0040372c();\n                    if (uVar3 != '\\0') goto code_r0x004358d1;\n                }\n                in_EAX = *(in_EAX + 0x30);\n            } while (in_EAX != 0);\n        }\n        iVar2 = fcn.004466f4();\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040372c();\n            if (uVar3 != '\\0') goto code_r0x004358d1;\n        }\n    }\n    uVar3 = fcn.0042c9f8();\n    if (uVar3 == 0) {\n        uStack20 = uVar1 & 0xffffff00;\n    }\ncode_r0x004358d1:\n    return CONCAT44(uStack20, uVar3 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 360
    },
    "00435cb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435cb0(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack32;\n    \n    iVar4 = *(in_EAX + 0x180);\n    if ((iVar4 == 0) || (iVar3 = sub.user32.dll_IsWindowVisible(),  iStack32 = iVar4,  iVar3 == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        sub.user32.dll_ScrollWindow(*(in_EAX + 0x180), iStack32, param_2, 0, 0);\n    }\n    iVar4 = fcn.00432f40();\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.00432f04();\n            cVar2 = fcn.004036bc();\n            if ((cVar2 == '\\0') || (*(iVar3 + 0x180) == 0)) {\n                *(iVar3 + 0x40) = *(iVar3 + 0x40) + iStack32;\n                *(iVar3 + 0x44) = *(iVar3 + 0x44) + param_2;\n            }\n            else if (!bVar1) {\n                iStack32 = *(iVar3 + 0x180);\n                sub.user32.dll_SetWindowPos();\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.00432ad0();\n    return;\n}\n",
        "token_count": 379
    },
    "00435da0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435da0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = *(*(in_EAX + 0x30) + 0x198);\n        if (iVar2 != 0) {\n            param_2 = param_2 - *(iVar2 + 8);\n        }\n        iVar2 = fcn.00415324();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x19c) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.004151b8();\n                fcn.00415344();\n            }\n        }\n        if (*(in_EAX + 0x180) != 0) {\n            if (param_2 == 0) {\n                uVar3 = 1;\n            }\n            else if (param_2 == *(*(*(in_EAX + 0x30) + 0x19c) + 8) + -1) {\n                uVar3 = 0;\n            }\n            else if (iVar2 < param_2) {\n                fcn.004152c8();\n                uVar3 = fcn.004360b8();\n            }\n            else {\n                if (iVar2 <= param_2) {\n                    return;\n                }\n                fcn.004152c8();\n                uVar3 = fcn.004360b8();\n            }\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x180), uVar3, 0, 0, 0, 0, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "00436094": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00436094(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x60] == 0) {\n        if (in_EAX[0xc] != 0) {\n            fcn.00436094();\n        }\n        (**(*in_EAX + 0x94))();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "004363bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004363bc(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x180) != 0;\n}\n",
        "token_count": 48
    },
    "004364e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004364e0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_CL;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_ch = 0;\n    puStack40 = 0x436502;\n    iVar2 = fcn.00403500();\n    uStack44 = 0x4365d6;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040372c();\n    if (0 < *(iVar2 + 8)) {\n        var_10h = fcn.00415324();\n        iVar4 = var_10h;\n        if (var_10h == -1) {\n            if (in_CL == '\\0') {\n                var_10h = 0;\n                iVar4 = var_10h;\n            }\n            else {\n                var_10h = *(iVar2 + 8) + -1;\n                iVar4 = var_10h;\n            }\n        }\n        do {\n            if (in_CL == '\\0') {\n                if (iVar4 == 0) {\n                    iVar4 = *(iVar2 + 8);\n                }\n                iVar4 = iVar4 + -1;\n            }\n            else {\n                iVar4 = iVar4 + 1;\n                if (iVar4 == *(iVar2 + 8)) {\n                    iVar4 = 0;\n                }\n            }\n            iVar3 = fcn.004152c8();\n            cVar1 = fcn.0040372c();\n            if (((cVar1 != '\\0') && ((arg_ch == '\\0' || (*(iVar3 + 0x1a4) != '\\0')))) &&\n               ((arg_8h == '\\0' || (*(iVar3 + 0x30) == in_EAX)))) {\n                var_ch = iVar3;\n            }\n        } while ((var_ch == 0) && (iVar4 != var_10h));\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4365dd;\n    uStack44 = 0x4365d5;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 565
    },
    "004366a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004366a8(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_ECX;\n    uint *in_EDX;\n    \n    iVar1 = in_EAX[0x1d];\n    if (*(iVar1 + 0x14) == 0) {\n        *in_EDX = 0;\n    }\n    else {\n        *in_EDX = *(in_EAX[0x1d] + 0x14);\n    }\n    if (*(iVar1 + 0x10) == 0) {\n        *in_ECX = 0;\n    }\n    else {\n        *in_ECX = *(in_EAX[0x1d] + 0x10);\n    }\n    if (*(iVar1 + 0xc) == 0) {\n        *arg_ch = 0;\n    }\n    else {\n        *arg_ch = *(in_EAX[0x1d] + 0xc);\n    }\n    if (*(iVar1 + 8) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        *arg_8h = *(in_EAX[0x1d] + 8);\n    }\n    (**(*in_EAX + 0x38))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 302
    },
    "0043672c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043672c(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t lprc;\n    int32_t var_59h;\n    int32_t var_55h;\n    int32_t var_51h;\n    char var_4dh;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.004363bc();\n    if ((cVar1 != '\\0') && (iVar3 = fcn.00432f40(),  iVar3 != 0)) {\n        (**(*in_EAX + 0x44))();\n        (**(*in_EAX + 0x8c))();\n        iVar3 = sub.user32.dll_IsRectEmpty();\n        if (iVar3 == 0) {\n            var_14h = in_EAX[0x12] - (var_55h - lprc);\n            var_18h = in_EAX[0x13] - (var_51h - var_59h);\n            if (0 < *var_4h) {\n                *var_4h = *var_4h - var_14h;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h - var_18h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch - var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h - var_18h;\n            }\n            arg_8h_00 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            var_20h = 0;\n            var_30h = 0;\n            var_24h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_38h = 0;\n            var_2ch = 0;\n            var_3ch = 0;\n            var_10h = var_18h;\n            var_ch = var_14h;\n            iVar3 = fcn.00432f40();\n            if (-1 < iVar3 + -1) {\n                var_1ch = 0;\n                do {\n                    iVar4 = fcn.00432f04();\n                    if ((*(iVar4 + 0x57) != '\\0') || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0))))\n                    {\n                        arg_8h_00 = &var_4ch;\n                        fcn.004366a8(arg_8h_00, &var_44h);\n                        cVar1 = *(iVar4 + 0x5b);\n                        if (cVar1 == '\\0') {\n                            if (*0x436b00 == (*(iVar4 + 0x61) & *0x436b00)) {\n                                var_4dh = '\\x01';\n                                if (0 < var_40h) {\n                                    var_40h = ((var_55h - lprc) - *(iVar4 + 0x48)) - var_40h;\n                                }\n                                if (0 < var_44h) {\n                                    var_44h = ((var_55h - lprc) + var_44h) - *(iVar4 + 0x48);\n                                }\n                            }\n                            else {\n                                var_4dh = '\\0';\n                            }\n                        }\n                        else if (cVar1 - 1U < 2) {\n                            var_4dh = '\\x01';\n                        }\n                        else if (cVar1 == '\\x05') {\n                            var_4dh = '\\x02';\n                        }\n                        else {\n                            var_4dh = '\\x03';\n                        }\n                        if (*(iVar4 + 0x5b) == '\\0') {\n                            if (*0x436b04 == (*(iVar4 + 0x61) & *0x436b04)) {\n                                cVar1 = '\\x01';\n                                if (0 < var_48h) {\n                                    var_48h = ((var_51h - var_59h) - *(iVar4 + 0x4c)) - var_48h;\n                                }\n                                if (0 < var_4ch) {\n                                    var_4ch = ((var_51h - var_59h) + var_4ch) - *(iVar4 + 0x4c);\n                                }\n                            }\n                            else {\n                                cVar1 = '\\0';\n                            }\n                        }\n                        else {\n                            uVar2 = *(iVar4 + 0x5b) - 3;\n                            if (uVar2 < 2) {\n                                cVar1 = '\\x01';\n                            }\n                            else if (uVar2 == 2) {\n                                cVar1 = '\\x02';\n                            }\n                            else {\n                                cVar1 = '\\x03';\n                            }\n                        }\n                        if (var_4dh - 1U < 2) {\n                            if (((0 < var_40h) && (*var_4h < var_40h)) && (*var_4h = var_40h,  var_20h < *var_4h)) {\n                                var_20h = *var_4h;\n                            }\n                            if (((0 < var_44h) && (var_44h < *arg_ch)) && (*arg_ch = var_44h,  var_24h < *arg_ch)) {\n                                var_24h = *arg_ch;\n                            }\n                        }\n                        else if (var_4dh == '\\x03') {\n                            var_30h = var_30h + *(iVar4 + 0x48);\n                            var_34h = var_34h + *(iVar4 + 0x48);\n                        }\n                        if (cVar1 - 1U < 2) {\n                            if (((0 < var_48h) && (*var_8h < var_48h)) && (*var_8h = var_48h,  var_28h < *var_8h)) {\n                                var_28h = *var_8h;\n                            }\n                            if (((0 < var_4ch) && (var_4ch < *arg_8h)) && (*arg_8h = var_4ch,  var_2ch < *arg_8h)) {\n                                var_2ch = *arg_8h;\n                            }\n                        }\n                        else if (cVar1 - 1U == 2) {\n                            var_38h = var_38h + *(iVar4 + 0x4c);\n                            var_3ch = var_3ch + *(iVar4 + 0x4c);\n                        }\n                    }\n                    var_1ch = var_1ch + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            if ((0 < var_20h) && (*var_4h < var_20h + var_30h)) {\n                *var_4h = var_20h + var_30h;\n            }\n            if ((0 < var_24h) && ((*arg_ch == 0 || (*arg_ch < var_24h + var_34h)))) {\n                *arg_ch = var_24h + var_34h;\n            }\n            if ((0 < var_28h) && (*var_8h < var_28h + var_38h)) {\n                *var_8h = var_28h + var_38h;\n            }\n            if ((0 < var_2ch) && ((*arg_8h == 0 || (*arg_8h < var_2ch + var_3ch)))) {\n                *arg_8h = var_2ch + var_3ch;\n            }\n            *in_FS_OFFSET = arg_8h_00;\n            if (0 < *var_4h) {\n                *var_4h = *var_4h + var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h + var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch + var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h + var_18h;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 2097
    },
    "00436bbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00436bbc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack76 = 0x436bda;\n    piVar1 = fcn.004363bc();\n    if ((piVar1 != '\\0') && (piVar1 = in_EAX,  *(in_EAX + 0x5b) != '\\x05')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            puStack76 = 0x436c00;\n            piVar1 = fcn.00432f40();\n            if (piVar1 < 1) goto code_r0x00436d7e;\n        }\n        puStack76 = 0x436c16;\n        (**(*in_EAX + 0xb4))();\n        puStack76 = 0x436c21;\n        (**(*in_EAX + 0x44))();\n        puStack76 = 0x436c2f;\n        (**(*in_EAX + 0x8c))();\n        puStack76 = 0x436c37;\n        fcn.00432aa8();\n        uStack80 = 0x436ceb;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        iVar2 = fcn.00432f40();\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00432f04();\n                if ((*(piVar1 + 0x57) != '\\0') || (((*(piVar1 + 7) & 0x10) != 0 && ((*(piVar1 + 0x51) & 4) == 0)))) {\n                    (**(*piVar1 + 0x84))(piVar1[0x13], piVar1[0x12]);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *in_FS_OFFSET = uStack84;\n        puStack76 = 0x436cf2;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n        uStack80 = 0x436cea;\n        uVar3 = fcn.00432ab0();\n        return uVar3;\n    }\ncode_r0x00436d7e:\n    return piVar1 & 0xffffff00 | 1;\n}\n",
        "token_count": 664
    },
    "0043714c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043714c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_2 + 0xc) == 0) {\n        uVar2 = 0;\n        fcn.00407278();\n        fcn.0042f5ec();\n        iVar1 = fcn.00433a40(uVar2);\n        if (iVar1 != 0) {\n            uVar2 = fcn.00430c4c(*(param_2 + 8));\n            *(param_2 + 0xc) = uVar2;\n        }\n        if (*(param_2 + 0xc) == 0) {\n            fcn.00431db4();\n        }\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "004371b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.004371b8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0042eba8();\n    uVar1 = fcn.00421358();\n    *(in_EAX + 0x160) = uVar1;\n    fcn.0042e684();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 201
    },
    "00437254": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437254(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(param_2 + 4) != 0) {\n        puStack16 = 0x437276;\n        fcn.004218e0();\n        uStack20 = 0x4372ef;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack28 = 0x437295;\n        puStack16 = &stack0xfffffffc;\n        fcn.00421c1c();\n        uStack32 = 0x4372cc;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        (**(*in_EAX + 0x8c))();\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x4372d3;\n        uStack32 = 0x4372cb;\n        fcn.00421c1c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00437528": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437528(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4375b3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + -0x10))();\n    if (*(in_EAX + 0x84) == '\\0') {\n        fcn.0042fa98();\n        fcn.004219fc();\n        fcn.0042f264();\n        fcn.0042fa98();\n        fcn.00421a18();\n        fcn.0042f288();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4375ba;\n    uStack24 = 0x4375b2;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 241
    },
    "004375c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004375c0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_18h = *param_2;\n    var_14h = param_2[1];\n    iVar3 = param_2[3];\n    *(in_EAX + 0x84) = 1;\n    uStack56 = 0x437787;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = in_EAX;\n    fcn.0042fac8();\n    fcn.00430cf0();\n    iVar1 = fcn.0044ce88();\n    if (iVar1 < var_4h[0x13] + var_14h) {\n        var_14h = fcn.0044ce88();\n        var_14h = var_14h - var_4h[0x13];\n    }\n    iVar1 = fcn.0044ce94();\n    if (iVar1 < var_4h[0x12] + var_18h) {\n        var_18h = fcn.0044ce94();\n        var_18h = var_18h - var_4h[0x12];\n    }\n    iVar1 = fcn.0044ce7c();\n    if (var_18h < iVar1) {\n        var_18h = fcn.0044ce7c();\n    }\n    iVar1 = fcn.0044ce70();\n    if (iVar3 + 4 < iVar1) {\n        fcn.0044ce70();\n    }\n    uVar2 = fcn.004360b8(0xffffffff, var_18h, var_14h, var_4h[0x12], var_4h[0x13], 0x10);\n    sub.user32.dll_SetWindowPos(uVar2);\n    iVar3 = sub.kernel32.dll_GetTickCount();\n    if (0xfa < iVar3 - var_4h[0x85]) {\n        iVar3 = fcn.004045c0();\n        if ((iVar3 < 100) && (*0x46f888 != NULL)) {\n            sub.user32.dll_SystemParametersInfoA(0x1016, 0, &var_8h, 0);\n            if (var_8h != 0) {\n                sub.user32.dll_SystemParametersInfoA(0x1018, 0, &var_8h, 0);\n                if (var_8h == 0) {\n                    fcn.0043a814();\n                    if (var_14h < var_1ch) {\n                        uVar4 = 0;\n                    }\n                    else {\n                        uVar4 = 1;\n                    }\n                }\n                else {\n                    uVar4 = 2;\n                }\n                uVar2 = fcn.004360b8(100, *(uVar4 * 4 + 0x46f990) | 0x40000);\n                (**0x46f888)(uVar2);\n            }\n        }\n    }\n    uVar2 = fcn.004360b8(4);\n    sub.user32.dll_ShowWindow();\n    (**(*var_4h + 0x7c))();\n    *in_FS_OFFSET = uVar2;\n    iVar3 = sub.kernel32.dll_GetTickCount(0x43778e);\n    var_4h[0x85] = iVar3;\n    *(var_4h + 0x84) = 0;\n    return;\n}\n",
        "token_count": 900
    },
    "004379e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004379e0(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 != *(in_EAX + 0x68)) && (*(in_EAX + 0x68) = param_2,  *(in_EAX + 0x6a) != '\\0')) {\n        fcn.004378cc();\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00437a24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00437a24(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    cVar1 = fcn.0043c5b0();\n    if (cVar1 != '\\0') {\n        if (*(in_EAX + 0x6a) == '\\0') {\n            fcn.00437998(*(in_EAX + 0x74));\n        }\n        fcn.004378cc();\n        uVar2 = fcn.00437a84(arg_8h);\n        if (uVar2 != '\\0') {\n            sub.user32.dll_ShowCursor(0);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 174
    },
    "00437ae8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437ae8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.0043c5b0();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x6c) != 0)) {\n        sub.comctl32.dll_ImageList_DragLeave(*(in_EAX + 0x6c));\n        *(in_EAX + 0x6c) = 0;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00437b80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00437b80(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    \n    cVar1 = fcn.0043c5b0();\n    if ((cVar1 == '\\0') || (*(in_EAX + 0x6a) == '\\0')) {\n        bVar3 = false;\n    }\n    else {\n        fcn.00437ae8();\n        iVar2 = sub.comctl32.dll_ImageList_EndDrag();\n        bVar3 = iVar2 != 0;\n        *(in_EAX + 0x6a) = 0;\n        fcn.004379e0();\n        sub.user32.dll_ShowCursor(0xffffffff);\n    }\n    return bVar3;\n}\n",
        "token_count": 173
    },
    "00437bc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00437bc8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00431f50();\n    uVar1 = fcn.00421358();\n    *(in_EAX + 0x208) = uVar1;\n    fcn.0042e684();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 201
    },
    "00437d40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00437d40(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x14) == 0) || (*(*(in_EAX + 0x14) + 0x10) == '\\0')) &&\n       ((in_EAX != *(*(in_EAX + 0x1c) + 100) || (*(in_EAX + 0x10) == '\\0')))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "00437e7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00437e7c(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack24;\n    uint uStack20;\n    \n    iVar1 = in_EAX;\n    while (iVar3 = iVar1,  iVar3 != *(*(in_EAX + 0x1c) + 100)) {\n        iVar1 = *(iVar3 + 0x14);\n        if ((param_2 == *(iVar1 + 0x10)) && (*(iVar3 + 0x18) != 0)) {\n            uVar2 = fcn.004382b0();\n            return uVar2;\n        }\n    }\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x8c))();\n    if (param_2 == '\\x01') {\n        return uStack20;\n    }\n    if (param_2 == '\\x02') {\n        return uStack24;\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "00437ee8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00437ee8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    if ((in_EAX == *(*(in_EAX + 0x1c) + 100)) ||\n       (((iVar2 = in_EAX,  *(*(in_EAX + 0x1c) + 100) == *(in_EAX + 0x14) && (*(in_EAX + 4) != 0)) &&\n        (iVar1 = fcn.00437d9c(),  iVar1 == 1)))) {\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x8c))();\n        if (param_2 == '\\x01') {\n            iVar2 = iStack16 - iStack24;\n        }\n        else {\n            iVar2 = iStack20 - iStack28;\n        }\n    }\n    else {\n        do {\n            if (iVar2 == *(*(in_EAX + 0x1c) + 100)) {\n                if (param_2 == *(*(*(in_EAX + 0x1c) + 100) + 0x10)) {\n                    return *(*(in_EAX + 0x1c) + 0x68);\n                }\n                iVar2 = fcn.004382b0();\n                return iVar2;\n            }\n            iVar2 = *(iVar2 + 0x14);\n        } while (param_2 != *(iVar2 + 0x10));\n        iVar2 = fcn.004382b0();\n        iVar1 = fcn.00437dec();\n        iVar2 = iVar2 - iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 447
    },
    "00437f98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00437f98(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00437d9c();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != '\\0')) {\n        iVar2 = fcn.004383b0();\n        if (*(in_EAX + 0x10) == '\\x01') {\n            iVar1 = fcn.00437ee8();\n        }\n        else if (*(in_EAX + 0x10) == '\\x02') {\n            iVar1 = fcn.00437ee8();\n        }\n        else {\n            iVar1 = 0;\n        }\n        iVar3 = fcn.00437d9c();\n        iVar1 = iVar1 / iVar3;\n        while (iVar2 != 0) {\n            if (*(iVar2 + 0xc) == 0) {\n                fcn.004382d8();\n            }\n            else {\n                fcn.00437dec();\n                fcn.004382d8();\n            }\n            fcn.00438138();\n            iVar1 = fcn.00438388();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 288
    },
    "00438040": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00438040(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00404308();\n    if (*(in_EAX + 4) != 0) {\n        if (*(*(in_EAX + 4) + 8) == 0) {\n            fcn.0040b228();\n            fcn.00403ce4();\n        }\n        fcn.0040435c();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00438084": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x004380b9)\n\nuint32_t fcn.00438084(void)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.0040372c();\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 98
    },
    "00438138": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00438138(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *arg_8h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar2 = *(in_EAX + 4);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (*(iVar2 + 0x57) == '\\0') {\n        return;\n    }\n    if (*(*(in_EAX + 0x1c) + 0x6c) != 0) {\n        return;\n    }\n    *(iVar2 + 0x9c) = *(*(in_EAX + 0x14) + 0x10);\n    var_4h = in_EAX;\n    fcn.00437ee8();\n    iVar2 = fcn.00437ee8();\n    cVar1 = fcn.00438108(&stack0xfffffffc);\n    if ((cVar1 != '\\0') && (*(*(var_4h + 0x14) + 0x10) != '\\x01')) {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\n    iVar3 = fcn.00438388();\n    if ((iVar3 == 0) &&\n       (((*(var_4h + 0x14) == *(*(var_4h + 0x1c) + 100) ||\n         (*(*(var_4h + 0x14) + 0x10) != *(*(*(var_4h + 0x1c) + 100) + 0x10))) ||\n        (iVar3 = fcn.004382b0(),  *(*(var_4h + 0x1c) + 0x68) <= iVar3)))) {\n        if (*(*(var_4h + 0x14) + 0x10) == *(*(*(var_4h + 0x1c) + 100) + 0x10)) goto code_r0x0043825e;\n        iVar3 = fcn.004382b0();\n        iVar4 = fcn.004382b0();\n        if (iVar4 <= iVar3) goto code_r0x0043825e;\n    }\n    if (*(*(var_4h + 0x14) + 0x10) == '\\x01') {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\ncode_r0x0043825e:\n    arg_8h = &var_14h;\n    uVar5 = fcn.00437e7c();\n    fcn.00437e7c(uVar5);\n    fcn.00413c80(arg_8h, iVar2);\n    (****(var_4h + 0x1c))();\n    fcn.0042f468();\n    return;\n}\n",
        "token_count": 675
    },
    "004385a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004385a4(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(arg_8h + -4) == *(in_EAX + 4)) {\n        *(arg_8h + -8) = in_EAX;\n        return;\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 0xc) != 0)) {\n        fcn.004385a4(arg_8h);\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 8) != 0)) {\n        fcn.004385a4(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "004385fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004385fc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((param_2 != 0) && (*(in_EAX + 100) != 0)) {\n        fcn.004385a4(&stack0xfffffffc);\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "00438700": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00438700(uint arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t in_CL;\n    int32_t in_EDX;\n    uint32_t uVar4;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*(in_EDX + 0x57) != '\\0') {\n        var_1h._0_1_ = in_CL;\n        if (in_EAX[0xe] == 0) {\n            if (*(in_EAX[0x19] + 8) == 0) {\n                (**(*in_EAX[5] + 0x44))();\n                (**(*in_EAX[5] + 0x8c))();\n                var_10h = var_14h - var_1ch;\n                if (*(in_EAX[5] + 0x5c) != '\\0') {\n                    if (var_18h == var_20h) {\n                        fcn.0042fa3c();\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.0042fa28();\n                    }\n                }\n                fcn.00413c80(&var_30h, var_10h);\n                var_20h = var_30h;\n                var_1ch = iStack48;\n                var_18h = iStack44;\n                var_14h = iStack40;\n                (***in_EAX)();\n                fcn.0042f468();\n                iVar1 = fcn.00437d64();\n                iVar2 = in_EAX[0x19];\n                *(iVar2 + 8) = iVar1;\n                *(iVar1 + 0x14) = iVar2;\n                *(iVar1 + 4) = in_EDX;\n            }\n            else {\n                if ((in_CL == 0) || (in_CL == 5)) {\n                    var_1h._0_1_ = 4;\n                }\n                iVar2 = fcn.004385fc();\n                if (iVar2 != 0) {\n                    fcn.00439628();\n                }\n                var_8h = fcn.004385fc();\n                var_9h = *(var_1h + 0x46f99c);\n                iVar2 = fcn.00437d88();\n                if (iVar2 == 1) {\n                    *(in_EAX[0x19] + 0x10) = var_9h;\n                    if (var_9h == 1) {\n                        fcn.00437ee8();\n                        fcn.004382d8();\n                        uVar3 = fcn.00437ee8();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                    else if (var_9h == 2) {\n                        fcn.00437ee8();\n                        fcn.004382d8();\n                        uVar3 = fcn.00437ee8();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                }\n                iVar2 = fcn.00437d64();\n                *(iVar2 + 4) = in_EDX;\n                if (var_8h == 0) {\n                    uVar4 = in_EAX[0x19] & 0xffffff00 | *(in_EAX[0x19] + 0x10);\n                }\n                else {\n                    uVar4 = *(var_8h + 0x14) & 0xffffff00 | *(*(var_8h + 0x14) + 0x10);\n                }\n                if (var_9h == 0) {\n                    var_9h = uVar4;\n                }\n                if (uVar4 == var_9h) {\n                    fcn.00438ab8(*(var_1h + 0x46f9a4));\n                }\n                else {\n                    fcn.00438910(*(var_1h + 0x46f9a4), uVar4 & 0xffffff00 | var_9h);\n                }\n            }\n        }\n        else {\n            *(in_EAX[0xe] + 4) = in_EDX;\n            fcn.00438138();\n        }\n        (**(*in_EAX[5] + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 1077
    },
    "00438910": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438910(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar2 = fcn.00437d64();\n    *(iVar2 + 0x10) = arg_ch;\n    if (in_ECX == 0) {\n        fcn.004382d8();\n        uVar3 = fcn.004382b0();\n        *(in_EAX + 0x68) = uVar3;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x40) = 0;\n        *(in_EAX + 0x44) = 0x3fe00000;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0x18) = in_EDX;\n            *(in_EDX + 0xc) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.00438664(0x439980);\n            uVar4 = fcn.004382b0();\n            iVar2 = uVar4 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((uVar4 & 1) != 0);\n            }\n            *(in_EAX + 0x4c) = iVar2;\n            fcn.00438664(0x439d04);\n            fcn.004382b0();\n            fcn.004382d8();\n        }\n        else {\n            *(iVar2 + 8) = *(in_EAX + 100);\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.00438664(0x439980);\n        }\n        fcn.00438664(0x439e38);\n    }\n    else {\n        fcn.004382b0();\n        fcn.004382d8();\n        *(iVar2 + 0x14) = *(in_ECX + 0x14);\n        iVar1 = *(in_ECX + 0x18);\n        *(iVar2 + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = iVar2;\n        }\n        iVar1 = *(in_ECX + 0xc);\n        *(iVar2 + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = iVar2;\n        }\n        if (in_ECX == *(*(iVar2 + 0x14) + 8)) {\n            *(*(iVar2 + 0x14) + 8) = iVar2;\n        }\n        *(in_EDX + 0x14) = iVar2;\n        *(in_ECX + 0x14) = iVar2;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            *(in_ECX + 0x18) = in_EDX;\n            *(in_ECX + 0xc) = 0;\n            *(in_EDX + 0xc) = in_ECX;\n        }\n        else {\n            *(iVar2 + 8) = in_ECX;\n            *(in_ECX + 0x18) = 0;\n            *(in_ECX + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = in_ECX;\n        }\n    }\n    fcn.00437f98();\n    fcn.00438328();\n    fcn.00438664(0x439e38);\n    return;\n}\n",
        "token_count": 959
    },
    "00438b30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438b30(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x01') {\n        iVar1 = fcn.004382b0();\n        if (*(*(arg_8h + -4) + 4) <= iVar1) {\n            iVar1 = fcn.004382b0();\n            if (iVar1 - *(*(arg_8h + -8) + 0xc) <= *(*(arg_8h + -4) + 4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x00438d0d;\n            }\n        }\n    }\n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x02') {\n        iVar1 = fcn.004382b0();\n        if (**(arg_8h + -4) <= iVar1) {\n            iVar1 = fcn.004382b0();\n            if (iVar1 - *(*(arg_8h + -8) + 0xc) <= **(arg_8h + -4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x00438d0d;\n            }\n        }\n    }\n    if (*(in_EAX + 4) != 0) {\n        iVar1 = fcn.00437e7c();\n        iVar2 = fcn.00437e7c();\n        if (*(*(arg_8h + -8) + 0x1c) == '\\0') {\n            if (((iVar2 <= **(arg_8h + -4)) && (**(arg_8h + -4) <= iVar2 + *(*(arg_8h + -8) + 0x18))) &&\n               (iVar1 <= *(*(arg_8h + -4) + 4))) {\n                iVar2 = fcn.00437ee8();\n                if (*(*(arg_8h + -4) + 4) <= iVar1 + iVar2) {\n                    *(arg_8h + -0x10) = in_EAX;\n                    if (*(*(arg_8h + -4) + 4) < *(*(in_EAX + 4) + 0x44) + 0xf) {\n                        **(arg_8h + -0xc) = 0x14;\n                    }\n                    else {\n                        **(arg_8h + -0xc) = 2;\n                    }\n                }\n            }\n        }\n        else if (((iVar1 <= *(*(arg_8h + -4) + 4)) && (*(*(arg_8h + -4) + 4) <= iVar1 + *(*(arg_8h + -8) + 0x18))) &&\n                (iVar2 <= **(arg_8h + -4))) {\n            iVar1 = fcn.00437ee8();\n            if (**(arg_8h + -4) <= iVar2 + iVar1) {\n                *(arg_8h + -0x10) = in_EAX;\n                if (*(*(in_EAX + 4) + 0x40) + *(*(in_EAX + 4) + 0x48) + -0xf < **(arg_8h + -4)) {\n                    **(arg_8h + -0xc) = 0x14;\n                }\n                else {\n                    **(arg_8h + -0xc) = 2;\n                }\n            }\n        }\n    }\ncode_r0x00438d0d:\n    if (*(arg_8h + -0x10) == 0) {\n        iVar1 = fcn.00438388();\n        if (iVar1 != 0) {\n            iVar1 = arg_8h;\n            fcn.00438388();\n            fcn.00438b30(iVar1);\n        }\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        iVar1 = fcn.004383b0();\n        if (iVar1 != 0) {\n            fcn.004383b0();\n            fcn.00438b30(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 996
    },
    "00438d5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00438d5c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint lprc;\n    uint pt;\n    uint var_4h;\n    \n    iVar2 = fcn.00432f40();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            piVar3 = fcn.00432f04();\n            if ((*(piVar3 + 0x57) != '\\0') && ((cVar1 = fcn.004036bc(),  cVar1 == '\\0' || (*(piVar3 + 0x1a6) != '\\0'))))\n            {\n                fcn.00413c30();\n                (**(*piVar3 + 0x44))(pt, var_4h);\n                iVar4 = sub.user32.dll_PtInRect(&lprc);\n                if (iVar4 != 0) {\n                    return piVar3;\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return NULL;\n}\n",
        "token_count": 266
    },
    "00438df0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00438df0(uint *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    var_10h = 0;\n    *param_1 = 0;\n    iVar1 = fcn.00438d5c(&stack0xfffffffc);\n    if ((iVar1 == 0) || (*(in_EAX + 0x14) != *(iVar1 + 0xa0))) {\n        iVar2 = fcn.004383b0();\n        if ((iVar2 != 0) && (iVar1 == 0)) {\n            fcn.004383b0();\n            fcn.00438b30(arg_8h);\n        }\n    }\n    else {\n        var_10h = fcn.004385fc();\n        if (var_10h != 0) {\n            *param_1 = 1;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 263
    },
    "00438e78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438e78(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00404308();\n    (**(**(arg_8h + -4) + 8))();\n    if (0 < in_ECX) {\n        fcn.00404944();\n        (**(**(arg_8h + -4) + 8))();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00438ec0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00438f46)\n// WARNING: Removing unreachable block (ram,0x00438f61)\n// WARNING: Removing unreachable block (ram,0x00438ffd)\n// WARNING: Removing unreachable block (ram,0x0043900b)\n\nvoid __fastcall fcn.00438ec0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x4390b8;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    fcn.00439590();\n    fcn.0043858c();\n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    (**(*param_2 + 8))();\n    (**(*param_2 + 8))();\n    if (-1 < var_20h + -1) {\n        do {\n            fcn.00438e78(&stack0xfffffffc);\n            var_20h = var_20h + -1;\n        } while (var_20h != 0);\n    }\n    (**(*param_2 + 8))();\n    var_18h = 0;\n    iVar2 = 0;\n    while ((**(*param_2 + 8))(),  var_14h != *0x46f9ac) {\n        iVar1 = fcn.00437d64();\n        (**(*param_2 + 8))();\n        (**(*param_2 + 8))();\n        fcn.00438e78(&stack0xfffffffc);\n        if (var_14h == 0) {\n            *(in_EAX + 100) = iVar1;\n        }\n        else if (var_14h == var_18h) {\n            *(iVar2 + 0xc) = iVar1;\n            *(iVar1 + 0x18) = iVar2;\n            *(iVar1 + 0x14) = *(iVar2 + 0x14);\n        }\n        else if (var_18h < var_14h) {\n            *(iVar2 + 8) = iVar1;\n            *(iVar1 + 0x14) = iVar2;\n        }\n        else if (var_14h < var_18h) {\n            var_18h = var_18h - var_14h;\n            if (0 < var_18h) {\n                do {\n                    iVar2 = *(iVar2 + 0x14);\n                    var_18h = var_18h + -1;\n                } while (var_18h != 0);\n            }\n            *(iVar2 + 0xc) = iVar1;\n            *(iVar1 + 0x18) = iVar2;\n            *(iVar1 + 0x14) = *(iVar2 + 0x14);\n        }\n        var_18h = var_14h;\n        iVar2 = iVar1;\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00438590();\n    return;\n}\n",
        "token_count": 783
    },
    "00439284": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439284(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x43929d;\n    var_4h = fcn.00421358();\n    uStack52 = 0x4393da;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x4392b9;\n    puStack48 = &stack0xfffffffc;\n    fcn.0042e684();\n    puStack60 = 0x4392c1;\n    fcn.004218e0();\n    uStack64 = 0x4393bd;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x4392d9;\n    puStack60 = &stack0xfffffffc;\n    fcn.00421c1c();\n    uStack76 = 0x4393a0;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar1 = fcn.00432f40();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_ch = iVar1;\n        do {\n            iVar1 = fcn.00432f04();\n            if ((*(iVar1 + 0x57) != '\\0') && (*(iVar1 + 0xa0) == in_EAX[5])) {\n                fcn.0042f448();\n                (***in_EAX)();\n                var_1ch = *(iVar1 + 0x40) * 2 - var_1ch;\n                var_18h = *(iVar1 + 0x44) * 2 - var_18h;\n                var_14h = *(iVar1 + 0x48) * -2 + var_14h * 3 + var_1ch * -2;\n                var_10h = *(iVar1 + 0x4c) * -2 + var_10h * 3 + var_18h * -2;\n                (**(*in_EAX + 0x10))(&fcn.00439284::var_1ch);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x4393a7;\n    uStack76 = 0x43939f;\n    fcn.00421c1c();\n    return;\n}\n",
        "token_count": 716
    },
    "004393e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004393e8(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t var_1ch;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00434c4c();\n    if (((in_ECX == 0) || (*(in_ECX + 0x9c) == '\\0')) || (iVar2 < 2)) {\n        uVar3 = fcn.0042f4f0();\n        arg_8h_00 = &var_1ch;\n        fcn.0042f4ac();\n        fcn.00413c58(arg_8h_00, uVar3);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n        if (0 < iVar2) {\n            if (arg_ch == '\\x01') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[3] = iVar2;\n            }\n            else if (arg_ch == '\\x02') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[1] = iVar2;\n            }\n            else if (arg_ch == '\\x03') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                arg_8h[2] = iVar2;\n            }\n            else if (arg_ch == '\\x04') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                *arg_8h = iVar2;\n            }\n        }\n    }\n    else {\n        var_4h = *(in_ECX + 0x40);\n        var_8h = *(in_ECX + 0x44);\n        uVar4 = *(in_ECX + 0x48);\n        var_ch = *(in_ECX + 0x4c);\n        if (arg_ch - 3U < 2) {\n            uVar1 = uVar4 & 1;\n            uVar4 = uVar4 >> 1;\n            if (uVar4 < 0) {\n                uVar4 = uVar4 + (uVar1 != 0);\n            }\n        }\n        else if (arg_ch - 1U < 2) {\n            var_ch = *(in_ECX + 0x4c) >> 1;\n            if (var_ch < 0) {\n                var_ch = var_ch + ((*(in_ECX + 0x4c) & 1) != 0);\n            }\n        }\n        if (arg_ch == '\\x02') {\n            var_8h = var_8h + var_ch;\n        }\n        else if (arg_ch == '\\x04') {\n            var_4h = var_4h + uVar4;\n        }\n        fcn.00413c80(&var_1ch, var_ch);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n    }\n    uVar3 = fcn.004360b8(0, arg_8h, 2);\n    sub.user32.dll_MapWindowPoints(uVar3);\n    return;\n}\n",
        "token_count": 981
    },
    "00439628": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439628(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x439895;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar2 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.004065fc();\n        uStackY52 = 0x439668;\n        fcn.004065fc(&fcn.00439628::var_4h);\n        fcn.004045c8();\n        fcn.0040b16c();\n        fcn.00403ce4();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    if (*(param_2 + 4) == 0) {\n        fcn.004065fc();\n        uStackY52 = 0x4396a9;\n        fcn.004065fc(&fcn.00439628::var_ch);\n        fcn.004045c8();\n        fcn.0040b16c();\n        fcn.00403ce4();\n    }\n    iVar3 = fcn.00437d88();\n    if (iVar3 == 1) {\n        iVar3 = *(in_EAX + 100);\n        *(iVar3 + 8) = 0;\n        *(iVar3 + 0x10) = 0;\n    }\n    else if (iVar3 == 2) {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            iVar3 = *(param_2 + 0xc);\n        }\n        if (*(iVar3 + 4) == 0) {\n            if (*(param_2 + 0x14) == *(in_EAX + 100)) {\n                fcn.004382ec();\n                uVar4 = fcn.004382b0();\n                *(in_EAX + 0x68) = uVar4;\n                fcn.00403530();\n                *(in_EAX + 100) = iVar3;\n                *(iVar3 + 0xc) = 0;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0x14) = 0;\n                fcn.00439e10();\n            }\n            else {\n                iVar1 = *(*(param_2 + 0x14) + 0x18);\n                *(*(iVar3 + 8) + 0x18) = iVar1;\n                if (iVar1 == 0) {\n                    *(*(*(param_2 + 0x14) + 0x14) + 8) = *(iVar3 + 8);\n                }\n                else {\n                    *(iVar1 + 0xc) = *(iVar3 + 8);\n                }\n                iVar3 = *(iVar3 + 8);\n                *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                do {\n                    iVar3 = *(iVar3 + 0xc);\n                    *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                } while (*(iVar3 + 0xc) != 0);\n                *(iVar3 + 0xc) = *(*(param_2 + 0x14) + 0xc);\n                if (*(iVar3 + 0xc) != 0) {\n                    *(*(iVar3 + 0xc) + 0x18) = iVar3;\n                }\n                uStackY52 = 0x439e38;\n                fcn.00438664();\n                fcn.00403530();\n                fcn.00403530();\n            }\n        }\n        else {\n            iVar1 = *(param_2 + 0x14);\n            if (*(in_EAX + 100) == iVar1) {\n                *(*(in_EAX + 100) + 8) = iVar3;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0xc) = 0;\n                fcn.00437e34();\n                fcn.004382d8();\n                fcn.00438138();\n            }\n            else {\n                *(iVar1 + 0x10) = 0;\n                *(iVar1 + 4) = *(iVar3 + 4);\n                *(iVar1 + 8) = 0;\n                fcn.00403530();\n            }\n            uStackY52 = 0x439e38;\n            fcn.00438664();\n        }\n    }\n    else {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            *(*(param_2 + 0x14) + 8) = *(param_2 + 0xc);\n            *(*(param_2 + 0xc) + 0x18) = 0;\n            fcn.00438138();\n        }\n        else {\n            *(iVar3 + 0xc) = *(param_2 + 0xc);\n            if (*(param_2 + 0xc) != 0) {\n                *(*(param_2 + 0xc) + 0x18) = iVar3;\n            }\n            fcn.004382b0();\n            fcn.004382ec();\n            fcn.00438138();\n        }\n        uStackY52 = 0x439e38;\n        fcn.00438664();\n    }\n    fcn.00403530();\n    *in_FS_OFFSET = uStackY52;\n    uStack44 = 0x43989c;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 1371
    },
    "004399bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004399bc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4399ce;\n    fcn.004047a8();\n    uStack24 = 0x439a27;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.004045c0();\n    (**(**(arg_8h + -4) + 0xc))();\n    if (0 < iVar1) {\n        (**(**(arg_8h + -4) + 0xc))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x439a2e;\n    uStack24 = 0x439a26;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 240
    },
    "00439af0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439af0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x439c29;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x439b25;\n    (**(*param_2 + 0xc))();\n    puStack52 = 0x439b31;\n    piVar1 = fcn.00403500();\n    uStack56 = 0x439bd8;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    iVar2 = fcn.00434bb8();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00434bcc();\n            if ((*(iVar3 + 0x57) == '\\0') && (*(iVar3 + 8) != 0)) {\n                (**(*piVar1 + 0x38))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = (**(*piVar1 + 0x14))();\n    (**(*param_2 + 0xc))();\n    if (-1 < iVar2 + -1) {\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(*piVar1 + 0xc))();\n            fcn.004399bc(arg_8h);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x439bdf;\n    uStack56 = 0x439bd7;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 526
    },
    "00439e10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439e10(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x6c) == 0) {\n        iVar1 = fcn.00434bb8();\n        if (0 < iVar1) {\n            fcn.00438664(0x439e38);\n        }\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00439f34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439f34(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if ((in_EAX != *(arg_8h + -4)) && (*(*(in_EAX + 0x14) + 0x10) == *(*(*(arg_8h + -4) + 0x14) + 0x10))) {\n        iVar1 = fcn.004382b0();\n        iVar2 = fcn.004382b0();\n        if ((iVar2 < iVar1) && ((*(in_EAX + 4) == 0 || ((*(in_EAX + 4) != 0 && (*(*(in_EAX + 4) + 0x57) != '\\0')))))) {\n            fcn.004382b0();\n            uVar3 = fcn.00426670();\n            *(arg_8h + -8) = uVar3;\n        }\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.00439f34(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.00439f34(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "0043a110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a110(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x14) != 0) && (*(in_EAX + 0x14) != *(*(arg_8h + -4) + 100))) {\n        iVar2 = fcn.00437d9c();\n        if (iVar2 == 1) {\n            fcn.0043a110(arg_8h);\n        }\n    }\n    iVar2 = fcn.00437d9c();\n    if ((iVar2 == 1) || (*(in_EAX + 0x24) == 0)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n        iVar2 = *(*(arg_8h + -4) + 0x18) + *(*(arg_8h + -4) + 0xc) + 0xe;\n        iVar3 = fcn.00438394();\n        if (iVar3 == 0) {\n            iVar3 = fcn.00438388();\n            if (iVar3 != 0) {\n                fcn.00438388();\n                iVar3 = fcn.004382b0();\n                if (iVar3 - *(in_EAX + 0x24) < iVar2) {\n                    bVar1 = true;\n                }\n                else {\n                    fcn.00437dec();\n                    fcn.004382d8();\n                    fcn.00438388();\n                    fcn.00438328();\n                }\n            }\n        }\n        else {\n            fcn.00438394();\n            iVar3 = fcn.004382b0();\n            iVar4 = fcn.00437dec();\n            if ((iVar3 - iVar4) - *(in_EAX + 0x24) < iVar2) {\n                bVar1 = true;\n            }\n            else {\n                fcn.004382b0();\n                fcn.004382d8();\n                fcn.004382b0();\n                fcn.004382d8();\n                fcn.00438394();\n                fcn.00438328();\n            }\n        }\n    }\n    if (bVar1) {\n        fcn.00437f98();\n    }\n    fcn.00438664(0x439e38, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 554
    },
    "0043a364": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a364(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff94;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x43a73c;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    iVar2 = *param_2;\n    var_4h = in_EAX;\n    if (iVar2 < 0x203) {\n        if (iVar2 == 0x202) {\n            if (in_EAX[0x18] == 0) {\n                puStack92 = &stack0xfffffffc;\n                fcn.00407278();\n                iVar2 = fcn.00438df0();\n                if ((iVar2 != 0) && (var_10h == 0x14)) {\n                    cVar1 = fcn.004036bc();\n                    if (cVar1 == '\\0') {\n                        fcn.0042f9b8();\n                    }\n                    else {\n                        fcn.0044bcc4();\n                    }\n                }\n            }\n            else {\n                puStack92 = &stack0xfffffffc;\n                fcn.00439d94();\n            }\n        }\n        else if (iVar2 == 0x20) {\n            puStack92 = &stack0xfffffffc;\n            sub.user32.dll_GetCursorPos(&fcn.0043a364::var_ch);\n            in_stack_ffffff94 = 0x43a5ba;\n            fcn.0042f5ec();\n            if (*(param_2 + 2) == 1) {\n                in_stack_ffffff94 = 0x43a5dc;\n                iVar2 = fcn.004360b8();\n                if (iVar2 == param_2[1]) {\n                    in_stack_ffffff94 = 0x43a5f0;\n                    iVar2 = fcn.00434c4c();\n                    if (0 < iVar2) {\n                        in_stack_ffffff94 = 0x43a606;\n                        iVar2 = fcn.00438df0();\n                        if ((iVar2 != 0) && (var_10h == 0x12)) {\n                            in_stack_ffffff94 = fcn.0044d35c();\n                            sub.user32.dll_SetCursor();\n                            param_2[3] = 1;\n                            goto code_r0x0043a726;\n                        }\n                    }\n                }\n            }\n        }\n        else if (iVar2 == 0x200) {\n            puStack92 = &stack0xfffffffc;\n            if (in_EAX[0x18] != 0) {\n                puStack92 = &stack0xfffffffc;\n                fcn.00439e48();\n                fcn.00407278();\n                var_4h[0x14] = var_44h;\n                var_4h[0x15] = var_40h;\n                in_stack_ffffff94 = 0x43a422;\n                fcn.0043a2d0(&stack0xfffffffc);\n                fcn.00439e48();\n            }\n        }\n        else {\n            puStack92 = &stack0xfffffffc;\n            if (iVar2 == 0x201) {\n                puStack92 = &stack0xfffffffc;\n                fcn.00407278();\n                iVar2 = fcn.00438df0();\n                if (iVar2 != 0) {\n                    if (var_10h == 0x12) {\n                        fcn.00439d34();\n                    }\n                    else if (var_10h == 2) {\n                        in_stack_ffffff94 = 0x203;\n                        uVar3 = fcn.004360b8(0x203, 0x203, 0);\n                        iVar4 = sub.user32.dll_PeekMessageA(&fcn.0043a364::var_3ch, uVar3);\n                        if ((iVar4 == 0) && (cVar1 = fcn.004036bc(),  cVar1 != '\\0')) {\n                            (**(**(iVar2 + 4) + 0xc0))();\n                        }\n                        if ((*(*(iVar2 + 4) + 0x9b) == '\\x01') && (*(*(iVar2 + 4) + 0x5d) == '\\x01')) {\n                            fcn.00430140();\n                        }\n                        goto code_r0x0043a726;\n                    }\n                }\n            }\n        }\n    }\n    else if (iVar2 == 0x203) {\n        fcn.00407278();\n        iVar2 = fcn.00438df0();\n        if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (var_10h == 2)) {\n            fcn.0042e308();\n            in_stack_ffffff94 = 0x43a47a;\n            fcn.00430798(1);\n        }\n    }\n    else {\n        if (iVar2 == 0xb030) {\n            puStack92 = &stack0xfffffffc;\n            (*in_EAX[0xc])();\n            if (param_2[3] == 0) {\n                iVar2 = (**(*var_4h + 4))();\n                if (var_10h == 0x12) {\n                    fcn.00404308();\n                }\n                else if ((iVar2 != 0) && ((var_10h == 2 || (var_10h == 0x14)))) {\n                    fcn.0042f448();\n                    (***var_4h)();\n                    var_20h = *(iVar2 + 0x40) * 2 - var_20h;\n                    var_1ch = *(iVar2 + 0x44) * 2 - var_1ch;\n                    var_18h = *(iVar2 + 0x48) * -2 + var_18h * 3 + var_20h * -2;\n                    var_14h = *(iVar2 + 0x4c) * -2 + var_14h * 3 + var_1ch * -2;\n                    fcn.0042fa98();\n                    fcn.0040435c();\n                    iVar2 = param_2[2];\n                    *(iVar2 + 0x18) = var_20h;\n                    *(iVar2 + 0x1c) = var_1ch;\n                    *(iVar2 + 0x20) = var_18h;\n                    *(iVar2 + 0x24) = var_14h;\n                }\n            }\n            goto code_r0x0043a726;\n        }\n        puStack92 = &stack0xfffffffc;\n        if ((iVar2 == 0xb042) && (puStack92 = &stack0xfffffffc,  *param_2[2] == 0xb00b)) {\n            puStack92 = &stack0xfffffffc;\n            fcn.0043a248();\n        }\n    }\n    if (*(var_4h + 0x32) != 0) {\n        (*var_4h[0xc])();\n    }\ncode_r0x0043a726:\n    *in_FS_OFFSET = in_stack_ffffff94;\n    uStack100 = 0x43a743;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 1759
    },
    "0043a870": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043a870(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = fcn.004072d8(in_EAX + 0x10, auStack8);\n    *(in_EAX + 0x18) = uVar1;\n    *(in_EAX + 0x20) = *(in_EAX + 0x1c) != 0;\n    return;\n}\n",
        "token_count": 107
    },
    "0043a8c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a8c0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        fcn.0043a824();\n        if (*(in_EAX + 0xd) != '\\0') {\n            fcn.0043a840();\n            return;\n        }\n        fcn.0043a870();\n    }\n    else if ((param_2 == 0x68) && (*(in_EAX + 0x20) != '\\0')) {\n        if (*(in_EAX + 0xd) == '\\0') {\n            uVar1 = sub.user32.dll_SendMessageA(*(in_EAX + 0x18), *(in_EAX + 0x14), 0, 0);\n            *(in_EAX + 0x10) = uVar1;\n        }\n        else {\n            sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0043a924": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043a924(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint uMode;\n    \n    if (*(*0x47c2c8 + 0xc) != '\\0') {\n        uStack16 = 0x8000;\n        puStack20 = 0x43a942;\n        uVar1 = sub.kernel32.dll_SetErrorMode();\n        uStack24 = 0x43aa8a;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (*0x47dbc4 == 0) {\n            puStack20 = &stack0xfffffffc;\n            in_stack_ffffffd8 = sub.kernel32.dll_GetModuleHandleA_2(0x43aa98);\n            *0x47dbc4 = sub.kernel32.dll_GetProcAddress_1(in_stack_ffffffd8, 0x43aaa0);\n        }\n        if (*0x46f9b8 == 0) {\n            *0x46f9b8 = sub.kernel32.dll_LoadLibraryA(0x43aab0);\n            if (*0x46f9b8 != 0) {\n                *0x47dbc8 = sub.kernel32.dll_GetProcAddress_1(*0x46f9b8, 0x43aabc);\n                *0x47dbcc = sub.kernel32.dll_GetProcAddress_1(*0x46f9b8, 0x43aacc);\n                *0x47dbd0 = sub.kernel32.dll_GetProcAddress_1(*0x46f9b8, 0x43aae0);\n                *0x47dbd4 = sub.kernel32.dll_GetProcAddress_1(*0x46f9b8, 0x43aaf8);\n                *0x47dbd8 = sub.kernel32.dll_GetProcAddress_1(*0x46f9b8, 0x43ab10);\n                *0x47dbdc = sub.kernel32.dll_GetProcAddress_1(*0x46f9b8, 0x43ab24);\n                *0x47dbe0 = sub.kernel32.dll_GetProcAddress_1(*0x46f9b8, 0x43ab3c);\n                *0x47dbe4 = sub.kernel32.dll_GetProcAddress_1(*0x46f9b8, 0x43ab54);\n                *0x47dbe8 = sub.kernel32.dll_GetProcAddress_1(*0x46f9b8, 0x43ab70);\n                *0x47dbec = sub.kernel32.dll_GetProcAddress_1(*0x46f9b8, 0x43ab7c);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        sub.kernel32.dll_SetErrorMode(uVar1, 0x43aa91);\n        return;\n    }\n    return;\n}\n",
        "token_count": 676
    },
    "0043ab8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0043ab8c(void)\n\n{\n    uint uVar1;\n    \n    if (*0x47dbc4 != NULL) {\n        uVar1 = (**0x47dbc4)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "0043aba8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043aba8(uint param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar auStack20 [8];\n    \n    if ((*(*0x47c2c8 + 0xc) != '\\0') && (param_2 != 3)) {\n        if (param_2 == 0) {\n            uStack24 = 0x43abd7;\n            fcn.0043ab8c();\n        }\n        else {\n            uStack24 = 0x43abe5;\n            fcn.0043ab8c();\n            if (*0x46f9b8 != 0) {\n                puStack28 = 0x43abf9;\n                puStack32 = &stack0xffffffe8;\n                uVar1 = (**0x47dbc8)();\n                if (uVar1 != 0) {\n                    puStack28 = &stack0xffffffec;\n                    uStack40 = 0x43ac10;\n                    uStack36 = uVar1;\n                    (**0x47dbd0)();\n                    uStack44 = uVar1;\n                    if (param_2 == 1) {\n                        uStack40 = 0;\n                        (**0x47dbd8)();\n                    }\n                    else if (param_2 == 2) {\n                        uStack40 = 1;\n                        (**0x47dbd8)();\n                    }\n                    else {\n                        uStack40 = 1;\n                        (**0x47dbd8)();\n                        (**0x47dbd0)(uVar1, &stack0xffffffd4, &stack0xffffffd8);\n                        uStack44 = uStack44 & 0xfffffff4 | *(param_2 + 0x46f9b8);\n                    }\n                    (**0x47dbd4)(uVar1, uStack44, uStack40);\n                    (**0x47dbcc)();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "0043ac84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0043ac84(void)\n\n{\n    uint uVar1;\n    \n    if (*0x46f9b8 != 0) {\n        uVar1 = (**0x47dbe8)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 60
    },
    "0043ac98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043ac98(void)\n\n{\n    ushort extraout_var;\n    ushort extraout_var_00;\n    \n    fcn.00403530();\n    **0x47c0d4 = 0;\n    fcn.00403530();\n    **0x47c298 = 0;\n    fcn.00403530();\n    *0x47db70 = 0;\n    fcn.00403530();\n    sub.kernel32.dll_GlobalDeleteAtom(CONCAT22(extraout_var, *0x47db7e));\n    fcn.00404308();\n    sub.kernel32.dll_GlobalDeleteAtom(CONCAT22(extraout_var_00, *0x47db7c));\n    fcn.00404308();\n    if (*0x46f9b8 != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x46f9b8);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0043b6f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043b6f4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041da6c();\n    uVar1 = fcn.00403500();\n    *(in_EAX + 0x30) = uVar1;\n    iVar2 = fcn.00403500();\n    *(in_EAX + 0x34) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x43b878;\n    *(in_EAX + 0x58) = 0;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 273
    },
    "0043b970": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0043b970(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    fcn.004465dc();\n    iVar3 = fcn.0043e6c0();\n    if ((iVar3 != 0) && (iVar6 = *(*(in_EAX + 0x30) + 8),  -1 < iVar6 + -1)) {\n        iVar7 = 0;\n        do {\n            piVar1 = *(*(*(in_EAX + 0x30) + 4) + iVar7 * 4);\n            cVar2 = fcn.004036bc();\n            if (cVar2 != '\\0') {\n                if (iVar3 == *(piVar1 + 0x21)) {\ncode_r0x0043b9e7:\n                    uVar5 = (**(*piVar1 + 0x50))();\n                    goto code_r0x0043b9f6;\n                }\n                if (piVar1[0x24] != 0) {\n                    fcn.0043c160();\n                    iVar4 = fcn.0043c1c0();\n                    if (iVar4 != -1) goto code_r0x0043b9e7;\n                }\n            }\n            iVar7 = iVar7 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n    }\n    uVar5 = 0;\ncode_r0x0043b9f6:\n    return CONCAT44(in_EAX, uVar5);\n}\n",
        "token_count": 380
    },
    "0043bce4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043bce4(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x1a) != '\\0') {\n        return;\n    }\n    *(in_EAX + 0x1a) = 1;\n    uStack28 = 0x43bddc;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (param_2 != *(in_EAX + 0x69)) {\n        iVar4 = *(in_EAX[0x14] + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar4 + -1) {\n            do {\n                puStack24 = puVar1;\n                piVar3 = fcn.004036e0();\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 0x50))();\n                }\n                iVar4 = iVar4 + -1;\n                puVar1 = puStack24;\n            } while (iVar4 != 0);\n        }\n        *(in_EAX + 0x69) = param_2;\n        if (((0 < in_EAX[0x1b]) && (*(in_EAX + 0x69) != '\\0')) && (iVar4 = fcn.0043b83c(),  -1 < iVar4 + -1)) {\n            do {\n                piVar3 = fcn.0043b828();\n                if (((piVar3 != in_EAX) && (cVar2 = fcn.004036bc(),  cVar2 != '\\0')) && (piVar3[0x1b] == in_EAX[0x1b]))\n                {\n                    fcn.0043bce4();\n                }\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        (**(*in_EAX + 0x30))();\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0x1a) = 0;\n    return;\n}\n",
        "token_count": 537
    },
    "0043c160": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0043c160(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x90) == 0) {\n        uVar1 = fcn.00403500();\n        *(in_EAX + 0x90) = uVar1;\n    }\n    return *(in_EAX + 0x90);\n}\n",
        "token_count": 87
    },
    "0043c5b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0043c5b0(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x3c) != 0;\n}\n",
        "token_count": 52
    },
    "0043c5b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043c5b8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x3c) == 0) {\n        fcn.0043c788();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "0043c750": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043c750(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.0043c5b0();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x42) == '\\0')) {\n        uVar2 = fcn.0043c6ec();\n        sub.comctl32.dll_ImageList_Destroy(uVar2);\n    }\n    *(in_EAX + 0x3c) = 0;\n    fcn.0040372c();\n    return;\n}\n",
        "token_count": 132
    },
    "0043ca0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ca0c(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    uint in_EDX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.0043c5b0();\n    if (cVar1 != '\\0') {\n        if (arg_8h == '\\0') {\n            if (*(in_EAX + 0x54) == 0) {\n                piVar3 = fcn.00424298();\n                *(in_EAX + 0x54) = piVar3;\n                fcn.004256b0();\n                (**(*piVar3 + 0x40))();\n                (**(*piVar3 + 0x34))();\n            }\n            fcn.00424860();\n            fcn.00421208();\n            fcn.00413c58(&var_28h, *(in_EAX + 0x30));\n            fcn.00424860(&var_28h);\n            fcn.0042186c();\n            fcn.00424860(0, 0, 0, 0, 0xffffffff, 0, 0);\n            uVar2 = fcn.00421b9c();\n            uVar2 = fcn.0043c6ec(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n            fcn.00413c58(&var_18h, arg_10h + *(in_EAX + 0x30));\n            fcn.00424860();\n            var_8h = fcn.00421b9c();\n            fcn.00421208();\n            uVar2 = fcn.00421b9c();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt\n                      (uVar2, arg_14h + 1, arg_10h + 1, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n            fcn.00421208();\n            uVar2 = fcn.00421b9c();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt(uVar2, arg_14h, arg_10h, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n        }\n        else {\n            uVar2 = fcn.0043c3ac(arg_ch);\n            fcn.0043c9e4(uVar2);\n            uVar2 = fcn.0043c3ac();\n            uVar2 = fcn.00421b9c(arg_14h, arg_10h, 0, 0, uVar2);\n            uVar2 = fcn.0043c6ec(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 793
    },
    "0043d1f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043d1f8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        iVar2 = fcn.0043c8f0();\n        return 0 < iVar2;\n    }\n    cVar1 = fcn.004036bc();\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0043d108(),  cVar1 != '\\0')) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 139
    },
    "0043d2ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043d2ac(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    int32_t iStack112;\n    uint uStack108;\n    uchar *puStack104;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_30h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack84 = 0x43d2c9;\n    var_4h = in_EAX;\n    fcn.00417e74();\n    puStack84 = 0x43d2d8;\n    fcn.00417e74();\n    puStack84 = 0x43d2e4;\n    var_8h = fcn.00424298();\n    uStack88 = 0x43d530;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = fcn.00417c48();\n    (**(*var_8h + 0x54))();\n    puStack104 = 0x43d317;\n    fcn.00417c68(var_18h + iVar1, var_18h + iVar1 >> 0x1f);\n    puStack104 = 0x43d323;\n    var_10h = fcn.00424298();\n    uStack108 = 0x43d513;\n    iStack112 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff90;\n    puStack104 = &stack0xfffffffc;\n    (**(*var_10h + 0x54))();\n    var_ch = fcn.00424298();\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    var_14h = fcn.00424298();\n    fcn.004256b0();\n    (**(*var_14h + 0x40))();\n    (**(*var_14h + 0x34))();\n    fcn.00413c58(&fcn.0043d2ac::var_30h, *(var_4h + 0x30));\n    fcn.0043d6cc();\n    puVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar1 = (**(*var_8h + 0x20))();\n    iVar1 = iVar1 / *(var_4h + 0x30);\n    if (-1 < iVar1 + -1) {\n        do {\n            var_20h = iVar1;\n            if (var_1ch == 0) break;\n            iVar1 = (**(*var_8h + 0x2c))();\n            iVar1 = iVar1 / *(var_4h + 0x34);\n            if (-1 < iVar1 + -1) {\n                do {\n                    if (var_1ch == 0) break;\n                    fcn.00413c80(&fcn.0043d2ac::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.0043d2ac::var_40h;\n                    uVar2 = fcn.00424860();\n                    fcn.00424860(uVar2);\n                    fcn.00421738(puVar3);\n                    fcn.00413c80(&fcn.0043d2ac::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.0043d2ac::var_40h;\n                    uVar2 = fcn.00424860();\n                    fcn.00424860(uVar2);\n                    fcn.00421738(puVar3);\n                    fcn.0043c824();\n                    var_1ch = var_1ch + -1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            var_20h = var_20h + -1;\n            iVar1 = var_20h;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = puVar3;\n    fcn.00403530();\n    fcn.00403530();\n    fcn.0043d6d0();\n    return;\n}\n",
        "token_count": 1046
    },
    "0043d6d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043d6d0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < *(in_EAX + 0x5c)) {\n        *(in_EAX + 0x5c) = *(in_EAX + 0x5c) + -1;\n    }\n    if (*(in_EAX + 0x58) != '\\0') {\n        *(in_EAX + 0x58) = 0;\n        fcn.0040372c();\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "0043e74c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x0043e8c7)\n// WARNING: Removing unreachable block (ram,0x0043e8d4)\n// WARNING: Removing unreachable block (ram,0x0043e8e1)\n// WARNING: Removing unreachable block (ram,0x0043e8e7)\n// WARNING: Removing unreachable block (ram,0x0043e8f4)\n// WARNING: Removing unreachable block (ram,0x0043e8fa)\n// WARNING: Removing unreachable block (ram,0x0043e907)\n\nvoid fcn.0043e74c(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack28 = &fcn.0043e74c::var_2h + 2;\n    uStack32 = 0x43e935;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_AL;\n    if (in_AL < 0x2d) {\n        if (uVar1 - 8 < 2) {\n            puStack28 = &fcn.0043e74c::var_2h + 2;\n            fcn.004043a0();\n            goto code_r0x0043e8c1;\n        }\n        if (uVar1 == 0xd) {\n            puStack28 = &fcn.0043e74c::var_2h + 2;\n            fcn.004043a0();\n            goto code_r0x0043e8c1;\n        }\n        if (uVar1 == 0x1b) {\n            puStack28 = &fcn.0043e74c::var_2h + 2;\n            fcn.004043a0();\n            goto code_r0x0043e8c1;\n        }\n        if (uVar1 - 0x20 < 9) {\n            puStack28 = &fcn.0043e74c::var_2h + 2;\n            fcn.004043a0();\n            goto code_r0x0043e8c1;\n        }\n    }\n    else if (in_AL < 0x41) {\n        if (uVar1 - 0x2d < 2) {\n            puStack28 = &fcn.0043e74c::var_2h + 2;\n            fcn.004043a0();\n            goto code_r0x0043e8c1;\n        }\n        if (uVar1 - 0x30 < 10) {\n            puStack28 = &fcn.0043e74c::var_2h + 2;\n            fcn.004044e8();\n            goto code_r0x0043e8c1;\n        }\n    }\n    else {\n        if (uVar1 - 0x41 < 0x1a) {\n            fcn.004044e8();\n            goto code_r0x0043e8c1;\n        }\n        if (uVar1 - 0x60 < 10) {\n            puStack28 = &fcn.0043e74c::var_2h + 2;\n            fcn.004044e8();\n            goto code_r0x0043e8c1;\n        }\n        if (uVar1 - 0x70 < 0x18) {\n            puStack28 = &fcn.0043e74c::var_2h + 2;\n            fcn.0040881c();\n            fcn.0040460c();\n            goto code_r0x0043e8c1;\n        }\n    }\n    puStack28 = &fcn.0043e74c::var_2h + 2;\n    fcn.0043e6f8();\ncode_r0x0043e8c1:\n    fcn.00404308();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x43e93c;\n    uStack32 = 0x43e934;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 955
    },
    "0043e9ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043e9ac(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x43e9c5;\n    fcn.004047a8();\n    uStack32 = 0x43ea87;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    do {\n        do {\n            cVar1 = fcn.0043e950();\n        } while (cVar1 != '\\0');\n        cVar1 = fcn.0043e950();\n    } while (((cVar1 != '\\0') || (cVar1 = fcn.0043e950(),  cVar1 != '\\0')) || (cVar1 = fcn.0043e950(),  cVar1 != '\\0'));\n    if (in_EAX != 0) {\n        iVar3 = 8;\n        do {\n            fcn.0043e74c();\n            iVar2 = fcn.0040856c();\n            if (iVar2 == 0) break;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != 0x256);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x43ea8e;\n    uStack32 = 0x43ea86;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 374
    },
    "0043eac4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043eac4(uint *arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t *piVar2;\n    code *in_ECX;\n    int32_t in_EDX;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = in_EAX;\n    if (in_EDX != 0) {\n        var_9h = 0;\n        while (var_9h == 0) {\n            piVar2 = fcn.00440f24();\n            if (piVar2 <= *in_EAX) break;\n            uVar1 = fcn.00440f34();\n            piVar2 = uVar1 & 0xffffff00;\n            if (*(arg_8h + -1) <= *(uVar1 + 0x3f) && *(uVar1 + 0x3f) != *(arg_8h + -1)) break;\n            piVar2 = (*in_ECX)(*arg_8h);\n            *in_EAX = *in_EAX + 1;\n            var_9h = piVar2;\n        }\n    }\n    return piVar2 & 0xffffff00 | var_9h;\n}\n",
        "token_count": 289
    },
    "0043eb24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043eb24(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char var_16h;\n    uint8_t var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    iVar2 = 0;\n    iVar3 = 0;\n    if (param_2 != 0) {\n        iVar2 = fcn.00440f24();\n    }\n    if (param_1 != 0) {\n        iVar3 = fcn.00440f24();\n    }\n    var_16h = '\\0';\n    while ((var_16h == '\\0' && ((var_10h < iVar2 || (var_14h < iVar3))))) {\n        var_1h._0_1_ = 0xff;\n        var_15h = 0xff;\n        if (var_10h < iVar2) {\n            iVar1 = fcn.00440f34();\n            var_1h._0_1_ = *(iVar1 + 0x3f);\n        }\n        if (var_14h < iVar3) {\n            iVar1 = fcn.00440f34();\n            var_15h = *(iVar1 + 0x3f);\n        }\n        if (var_15h < var_1h) {\n            var_1h._0_1_ = var_15h;\n            var_16h = fcn.0043eac4(&var_1h + 1);\n        }\n        else {\n            var_16h = fcn.0043eac4(&var_1h + 1);\n        }\n        while ((var_10h < iVar2 && (iVar1 = fcn.00440f34(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_10h = var_10h + 1;\n        }\n        while ((var_14h < iVar3 && (iVar1 = fcn.00440f34(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_14h = var_14h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 567
    },
    "0043efb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043efb8(uint param_1, char param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041da6c();\n    *(in_EAX + 0x3e) = 1;\n    *(in_EAX + 0x39) = 1;\n    *(in_EAX + 0x3b) = 2;\n    *(in_EAX + 0x3c) = 2;\n    uVar1 = fcn.0043eaa4();\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x40) = 0xffffffff;\n    iVar2 = fcn.00403500();\n    *(in_EAX + 0x78) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x441888;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 337
    },
    "0043f0e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043f0e8(uint8_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint8_t uVar7;\n    uint in_stack_ffffff84;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint lpmi;\n    uint var_35h;\n    uint32_t var_31h;\n    uint32_t var_2dh;\n    uint32_t var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1dh;\n    uint var_15h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack84 = &var_1h + 1;\n    var_8h = 0;\n    uStack88 = 0x43f343;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack92;\n    puVar1 = &var_1h + 1;\n    var_1h._0_1_ = param_1;\n    if (*(in_EAX + 0x3e) == '\\0') goto code_r0x0043f325;\n    fcn.004043a0();\n    iVar4 = fcn.00440f24();\n    if (iVar4 < 1) {\n        if (*(in_EAX + 0x60) != 0) {\n            if ((*(in_EAX + 100) != 0) && (*(*(in_EAX + 100) + 100) == 0)) {\n                cVar3 = fcn.004036bc();\n                if (cVar3 != '\\0') goto code_r0x0043f184;\n            }\n            fcn.0043e74c(0x43f35c, var_8h);\n            fcn.00404680(0);\n        }\n    }\n    else {\n        var_25h = fcn.0043f5ec();\n    }\ncode_r0x0043f184:\n    uVar2 = sub.kernel32.dll_GetVersion();\n    uVar7 = uVar2 == 4;\n    if (uVar2 < 4) {\n        fcn.00404704();\n        uVar6 = *((uVar7 & 0x7f) * 4 + 0x46fa5c) |\n                *(*(in_EAX + 0x48) * 4 + 0x46fa50) | *(*(in_EAX + 0x38) * 4 + 0x46fa40) |\n                *(*(in_EAX + 0x39) * 4 + 0x46fa48);\n        iVar4 = fcn.00440f24();\n        if (iVar4 < 1) {\n            uVar5 = fcn.004047b8();\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x400, *(in_EAX + 0x50), uVar5);\n            in_stack_ffffff84 = param_2;\n            puVar1 = puStack84;\n        }\n        else {\n            uVar5 = fcn.004047b8();\n            uVar5 = fcn.0043f5ec(uVar5);\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x410, uVar5);\n            in_stack_ffffff84 = param_2;\n            puVar1 = puStack84;\n        }\n        goto code_r0x0043f325;\n    }\n    lpmi = 0x2c;\n    var_35h = 0x3f;\n    iVar4 = fcn.004414e0();\n    if (iVar4 == 0) {\ncode_r0x0043f1c4:\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar3 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            uVar2 = cVar3 == '\\0';\n            if (uVar2) goto code_r0x0043f1da;\n        }\n        var_9h = 0;\n        uVar2 = true;\n    }\n    else {\n        uVar2 = *(iVar4 + 0x40) == '\\0';\n        if (uVar2) {\n            iVar4 = fcn.00440afc();\n            uVar2 = iVar4 == 0;\n            if (uVar2) goto code_r0x0043f1c4;\n        }\ncode_r0x0043f1da:\n        var_9h = 1;\n    }\n    fcn.00404704();\n    var_31h = *((uVar2 & 0x7f) * 4 + 0x46fa90) | *(*(in_EAX + 0x3d) * 4 + 0x46fa88) | *(*(in_EAX + 0x48) * 4 + 0x46fa64)\n              | *(var_1h * 4 + 0x46fa98) | *(var_9h * 4 + 0x46faa0);\n    var_2dh = *(*(in_EAX + 0x38) * 4 + 0x46fa70) | *(*(in_EAX + 0x39) * 4 + 0x46fa80) |\n              *(*(in_EAX + 0x3a) * 4 + 0x46fa78);\n    var_29h = *(in_EAX + 0x50);\n    var_25h = 0;\n    var_21h = 0;\n    var_1dh = 0;\n    var_15h = fcn.004047b8();\n    iVar4 = fcn.00440f24();\n    if (0 < iVar4) {\n        var_25h = fcn.0043f5ec();\n    }\n    sub.user32.dll_InsertMenuItemA(param_2, 0xffffffff, 0xffffffff, &lpmi);\n    in_stack_ffffff84 = param_2;\n    puVar1 = puStack84;\ncode_r0x0043f325:\n    puStack84 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff84;\n    fcn.00404308(0x43f34a);\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 1506
    },
    "0043f4bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043f4bc(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if ((*(in_EAX + 7) & 8) != 0) {\n        return;\n    }\n    if ((*(in_EAX + 7) & 2) != 0) {\n        *(in_EAX + 0x1d) = 1;\n        return;\n    }\n    if (in_EAX[0x1b] != 0) {\n        fcn.0043f4bc();\n        return;\n    }\n    uVar2 = fcn.0043f5ec();\n    iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n    bVar5 = iVar3 == 0;\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        uVar2 = fcn.0043f5ec(iVar3 + -1, 0x400);\n        uVar4 = sub.user32.dll_GetMenuState();\n        if ((uVar4 & 4) == 0) {\n            uVar2 = fcn.0043f5ec(iVar3 + -1, 0x400);\n            sub.user32.dll_RemoveMenu();\n            bVar5 = true;\n        }\n    }\n    if (!bVar5) {\n        return;\n    }\n    if ((in_EAX[0x19] == 0) && (cVar1 = fcn.004036bc(uVar2),  cVar1 != '\\0')) {\n        uVar2 = fcn.0043f5ec();\n        iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n        if (iVar3 == 0) {\n            sub.user32.dll_DestroyMenu(in_EAX[0xd]);\n            in_EAX[0xd] = 0;\n            goto code_r0x0043f57c;\n        }\n    }\n    fcn.0043f388();\ncode_r0x0043f57c:\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 481
    },
    "0043f5ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0043f5ec(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x34) == 0) {\n        cVar1 = fcn.004036bc();\n        if (cVar1 == '\\0') {\n            uVar2 = sub.user32.dll_CreateMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        else {\n            uVar2 = sub.user32.dll_CreatePopupMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        if (*(in_EAX + 0x34) == 0) {\n            fcn.0043e6a0();\n        }\n        fcn.0043f388();\n    }\n    return *(in_EAX + 0x34);\n}\n",
        "token_count": 191
    },
    "0043f67c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043f6c8)\n// WARNING: Removing unreachable block (ram,0x0043f6d2)\n\nvoid __cdecl fcn.0043f67c(uint32_t arg_8h, uint arg_ch, uint *lprc)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStackY120;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint uStack24;\n    uint uStack20;\n    char *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_ch = NULL;\n    uStack52 = 0x43f860;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    iVar2 = fcn.004414e0();\n    if ((iVar2 != 0) && (cVar1 = fcn.00442b1c(),  cVar1 != '\\0')) {\n        arg_8h = arg_8h | 0x20002;\n    }\n    fcn.004043a0();\n    uVar5 = (arg_8h & 0x400) == 0;\n    if ((!uVar5) &&\n       ((uVar5 = var_ch == NULL,  uVar5 || ((uVar5 = *var_ch == '&',  uVar5 && (uVar5 = var_ch[1] == '\\0',  uVar5))))))\n    {\n        fcn.004045c8();\n    }\n    fcn.00404704();\n    if (uVar5) {\n        if ((arg_8h & 0x400) == 0) {\n            var_1ch = *lprc;\n            uStack24 = lprc[2];\n            uStack20 = lprc[3];\n            var_18h = lprc[1] + 4;\n            uVar3 = fcn.00421b9c(&var_1ch, 6, 2);\n            sub.user32.dll_DrawEdge(uVar3);\n        }\n        goto code_r0x0043f84a;\n    }\n    fcn.00421324();\n    if (*(in_EAX + 0x3a) != '\\0') {\n        fcn.00420cfc();\n        fcn.00420d08();\n    }\n    if (*(in_EAX + 0x39) == '\\0') {\n        if (arg_ch == '\\0') {\n            sub.user32.dll_OffsetRect(lprc, 1, 1);\n            fcn.00420a3c();\n            uVar3 = fcn.004045c0(lprc, arg_8h);\n            uVar3 = fcn.004047b8(uVar3);\n            uVar3 = fcn.00421b9c(uVar3);\n            sub.user32.dll_DrawTextA(uVar3);\n            sub.user32.dll_OffsetRect(lprc, 0xffffffff, 0xffffffff);\n        }\n        else {\n            iVar2 = fcn.0042057c();\n            iVar4 = fcn.0042057c();\n            if (iVar2 == iVar4) {\n                fcn.00420a3c();\n                goto code_r0x0043f825;\n            }\n        }\n        fcn.00420a3c();\n    }\ncode_r0x0043f825:\n    uVar3 = fcn.004045c0(lprc, arg_8h);\n    uVar3 = fcn.004047b8(uVar3);\n    uStackY120 = fcn.00421b9c(uVar3);\n    sub.user32.dll_DrawTextA();\ncode_r0x0043f84a:\n    *in_FS_OFFSET = uStackY120;\n    fcn.00404308(0x43f867);\n    return;\n}\n",
        "token_count": 913
    },
    "0043f88c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f88c(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar auStack256 [212];\n    uint uStack44;\n    uint32_t uStack40;\n    uint *puStack36;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    if (*(in_EAX + 0x92) != 0) {\n        puStack36 = &fcn.0043f88c::var_10h;\n        uStack40 = &stack0xffffff00 | arg_8h & 0xff;\n        uStack44 = 0x43f8c2;\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00440afc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00440afc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    for (iVar1 = *(in_EAX + 100); (iVar1 != 0 && (*(iVar1 + 0x7c) == 0)); iVar1 = *(iVar1 + 100)) {\n    }\n    if (iVar1 == 0) {\n        iVar1 = fcn.004414e0();\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x48);\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x7c);\n    }\n    return uVar2;\n}\n",
        "token_count": 166
    },
    "00440b78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440b78(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    uint8_t uVar4;\n    uint32_t *in_FS_OFFSET;\n    bool bVar5;\n    uchar uVar6;\n    uint32_t uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_10h = 0;\n    uStack60 = 0x440d5a;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    fcn.0040372c();\n    cVar2 = fcn.004036bc();\n    bVar5 = cVar2 == '\\0';\n    if (bVar5) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = bVar5;\n        fcn.00440b2c(&stack0xfffffffc);\n    }\n    bVar5 = !bVar5;\n    iVar3 = fcn.004414e0();\n    var_ch = fcn.00440afc();\n    fcn.00404704();\n    if (uVar6) {\n        *arg_8h = 5;\n        *var_4h = -2;\n        bVar1 = false;\n    }\n    else if ((var_ch == 0) || ((0x7fffffff < *(in_EAX + 0x40) && (bVar5)))) {\n        if ((*(in_EAX + 0x4c) == 0) || (cVar2 = (**(**(in_EAX + 0x4c) + 0x1c))(),  cVar2 != '\\0')) {\n            *var_4h = -7;\n            bVar1 = false;\n        }\n        else {\n            *var_4h = 0x10;\n            if (!bVar5) {\n                *arg_8h = 0x10;\n            }\n            bVar1 = true;\n        }\n    }\n    else {\n        *var_4h = *(var_ch + 0x34);\n        if (!bVar5) {\n            *arg_8h = *(var_ch + 0x30);\n        }\n        bVar1 = true;\n    }\n    if ((bVar1) && (!bVar5)) {\n        *var_4h = *var_4h + 0xf;\n    }\n    if (!bVar5) {\n        *arg_8h = *arg_8h + 3;\n    }\n    fcn.00402e14();\n    if (iVar3 == 0) {\n        cVar2 = fcn.004036bc();\n        uVar4 = *0x60;\n        if (cVar2 == '\\0') {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    if (*(in_EAX + 0x60) == 0) {\n        fcn.004043a0();\n    }\n    else {\n        fcn.0043e74c();\n        fcn.0040460c();\n    }\n    arg_8h_00 = *(uVar4 * 2 + 0x46fab8) | 0x560;\n    fcn.0043f67c(arg_8h_00, 0, &var_20h);\n    *var_4h = *var_4h + (var_18h - var_20h) + 7;\n    if (*(in_EAX + 0xa2) != 0) {\n        (**(in_EAX + 0xa0))(arg_8h, var_4h);\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00404308(0x440d61);\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 937
    },
    "00440db4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00440db4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 100) != 0) && (iVar1 = fcn.00440f24(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00440f34();\n            if ((in_EAX != iVar2) && ((*(iVar2 + 0x3d) != '\\0' && (*(iVar2 + 0x3f) == *(in_EAX + 0x3f))))) {\n                fcn.00440dfc();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00440dfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440dfc(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 != *(in_EAX + 0x38)) {\n        *(in_EAX + 0x38) = param_2;\n        if ((*(in_EAX + 100) != 0) && ((*(in_EAX + 0x1c) & 2) == 0)) {\n            uVar1 = fcn.0043f5ec(*(in_EAX + 0x50), *(param_2 * 4 + 0x46fa40));\n            sub.user32.dll_CheckMenuItem(uVar1);\n        }\n        if ((param_2 != 0) && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.00440db4();\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00440e50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440e50(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == *(in_EAX + 0x39)) {\n        return;\n    }\n    *(in_EAX + 0x39) = param_2;\n    if (((**0x47c2b8 != 2) || (iVar1 = fcn.00440f24(),  iVar1 == 0)) &&\n       ((in_EAX[0x19] == 0 || (*(in_EAX[0x19] + 0x6c) == 0)))) {\n        if ((in_EAX[0x19] != 0) && ((*(in_EAX + 7) & 2) == 0)) {\n            uVar2 = fcn.0043f5ec(*(in_EAX + 0x14), *(param_2 * 4 + 0x46fa48));\n            sub.user32.dll_EnableMenuItem(uVar2);\n        }\n        (**(*in_EAX + 0x3c))();\n        return;\n    }\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 279
    },
    "00440ec8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440ec8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x3f)) {\n        if (*(in_EAX + 100) != 0) {\n            fcn.00441288();\n            fcn.0043f58c();\n        }\n        *(in_EAX + 0x3f) = param_2;\n        if ((*(in_EAX + 0x38) != '\\0') && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.00440db4();\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00440f34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00440f34(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) == 0) {\n        fcn.0043e6a0();\n    }\n    fcn.004152c8();\n    return;\n}\n",
        "token_count": 65
    },
    "004410b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004410b0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(param_1 + 100) != 0) {\n        fcn.0043e6a0();\n    }\n    if (in_EAX[0x17] == 0) {\n        iVar1 = fcn.00403500();\n        in_EAX[0x17] = iVar1;\n    }\n    if ((-1 < param_2 + -1) && (param_2 + -1 < *(in_EAX[0x17] + 8))) {\n        iVar1 = fcn.004152c8();\n        if (*(param_1 + 0x3f) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(param_1 + 0x3f)) {\n            fcn.004152c8();\n            fcn.00440ec8();\n        }\n    }\n    fcn.0043f58c();\n    fcn.00415344();\n    *(param_1 + 100) = in_EAX;\n    *(param_1 + 0x84) = in_EAX;\n    *(param_1 + 0x80) = fcn.00441328;\n    if (in_EAX[0xd] != 0) {\n        fcn.0043f4bc();\n    }\n    fcn.00440f24();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 352
    },
    "00441164": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441164(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((-1 < param_2) && (in_EAX[0x17] != 0)) {\n        iVar1 = fcn.00440f24();\n        if (param_2 < iVar1) goto code_r0x0044118a;\n    }\n    fcn.0043e6a0();\ncode_r0x0044118a:\n    iVar1 = fcn.004152c8();\n    fcn.004151b8();\n    *(iVar1 + 100) = 0;\n    *(iVar1 + 0x80) = 0;\n    *(iVar1 + 0x84) = 0;\n    if (in_EAX[0xd] != 0) {\n        fcn.0043f4bc();\n    }\n    fcn.00440f24();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 234
    },
    "00441328": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441328(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((arg_8h != '\\0') && ((*(in_EAX + 0x34) != 0 || (*(in_EAX + 0x6c) != 0)))) {\n        fcn.0043f4bc();\n    }\n    if (*(in_EAX + 100) == 0) {\n        cVar1 = fcn.004036bc();\n        if (cVar1 != '\\0') {\n            fcn.00443000();\n        }\n    }\n    else {\n        fcn.00441328(0);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00441984": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441984(uint param_1, uint param_2)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint in_stack_ffffffbc;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_10h = 0;\n    var_ch = 0;\n    uStack40 = 0x441aa6;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    bVar1 = false;\n    var_4h = param_2;\n    iVar2 = fcn.004045c0();\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            uVar3 = *(*in_EAX + -1 + iVar4);\n            if ((*(*0x47c2a8 + (uVar3 >> 3)) >> (uVar3 & 7) & 1) != 0) {\n                bVar1 = true;\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (bVar1) {\n        iVar2 = fcn.004045c0(&var_ch);\n        uVar5 = iVar2 == 2;\n        fcn.00404818();\n        fcn.00404704();\n        if (uVar5) {\n            fcn.004045c0(&var_10h);\n            fcn.00404818();\n            in_stack_ffffffbc = var_4h;\n            fcn.00404680(0x441abc, 0x441ae0, var_4h, 0x441ad4, 0x441ac8, var_10h);\n        }\n        else {\n            in_stack_ffffffbc = 0x441ae0;\n            fcn.00404680(0x441ae0, var_4h, 0x441ad4, 0x441ac8, *in_EAX);\n        }\n    }\n    else if (var_8h != 0) {\n        fcn.004048a0();\n    }\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.0040432c(0x441aad);\n    return;\n}\n",
        "token_count": 584
    },
    "00441ae4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441ae4(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uchar uVar8;\n    uint uStack112;\n    uint uStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_20h;\n    uchar var_1ah;\n    char var_19h;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    var_2ch = 0;\n    var_30h = 0;\n    var_34h = 0;\n    var_4h = 0;\n    var_18h = 0;\n    uStack96 = 0x441f83;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    var_1ah = 0;\n    puVar1 = &stack0xfffffffc;\n    var_19h = param_2;\n    if (param_2 != '\\0') {\ncode_r0x00441b40:\n        puStack92 = puVar1;\n        puStack104 = 0x441b4e;\n        fcn.004043a0();\n        var_ch = NULL;\n        var_14h = NULL;\n        var_20h = NULL;\n        var_8h = NULL;\n        var_10h = 0;\n        uStack108 = 0x441f44;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        puStack104 = &stack0xfffffffc;\n        var_ch = fcn.00403500();\n        var_14h = fcn.00403500();\n        var_20h = fcn.00403500();\n        var_8h = fcn.00403500();\n        iVar3 = fcn.00440f24();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                iVar3 = fcn.00440f34();\n                uVar8 = *(iVar3 + 0x3e) == '\\0';\n                if (!uVar8) {\n                    fcn.00440f34();\n                    fcn.00404704();\n                    if ((!uVar8) && (iVar3 = fcn.00440f34(),  *(iVar3 + 0x30) != 0)) {\n                        fcn.00440f34();\n                        fcn.004439e0();\n                        fcn.004083f4();\n                        if (var_2ch == 0) {\n                            uVar4 = fcn.00440f34();\n                            fcn.00440f34(uVar4);\n                            (**(*var_20h + 100))();\n                        }\n                        else {\n                            iVar3 = fcn.0040bccc();\n                            if ((iVar3 != 0) && (cVar2 = fcn.004418d0(&stack0xfffffffc),  cVar2 == '\\0')) {\n                                iVar3 = fcn.00440f34();\n                                fcn.00440f34(iVar3 + 0x30);\n                                fcn.00443948();\n                                fcn.0040435c();\n                                uVar4 = fcn.00440f34();\n                                fcn.00440f34(uVar4);\n                                (**(*var_20h + 100))();\n                            }\n                        }\n                    }\n                }\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        fcn.004043a0();\n        iVar3 = (**(*var_20h + 0x14))();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                fcn.004043a0();\n                (**(*var_14h + 8))();\n                (**(*var_ch + 0x44))();\n                iVar3 = (**(*var_14h + 0x14))();\n                iVar3 = iVar3 + -1;\n                if (-1 < iVar3) {\n                    do {\n                        (**(*var_14h + 0xc))();\n                        for (iVar7 = 1; iVar6 = fcn.004045c0(),  iVar7 <= iVar6; iVar7 = iVar7 + 1) {\n                            uVar5 = *(var_30h + -1 + iVar7);\n                            if ((*(*0x47c2a8 + (uVar5 >> 3)) >> (uVar5 & 7) & 1) == 0) {\n                                fcn.00404818(&fcn.00441ae4::var_44h);\n                                fcn.004083f4();\n                                cVar2 = fcn.004418d0(&stack0xfffffffc);\n                                if (cVar2 != '\\0') {\n                                    if (*(*0x47c2c8 + 0xc) == '\\0') {\n                                        fcn.004048a0();\n                                    }\n                                    else {\n                                        fcn.00441984();\n                                    }\n                                    (**(*var_14h + 0x18))();\n                                    (**(*var_ch + 0x3c))();\n                                    (**(*var_14h + 0x48))();\n                                    break;\n                                }\n                            }\n                            else {\n                                iVar7 = iVar7 + 1;\n                            }\n                        }\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n                iVar3 = (**(*var_ch + 0x14))();\n                if (var_10h < iVar3) {\n                    fcn.00441900(&stack0xfffffffc);\n                }\n                iVar3 = (**(*var_14h + 0x14))();\n                if (iVar3 < 1) break;\n                iVar3 = (**(*var_14h + 0x14))();\n                if (-1 < iVar3 + -1) {\n                    do {\n                        (**(*var_14h + 0x18))();\n                        var_28h = (**(*var_20h + 0x5c))();\n                        (**(*var_20h + 0x14))();\n                        (**(*var_20h + 0x70))();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                }\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        if (var_10h == 0) {\n            fcn.00441900(&stack0xfffffffc);\n        }\n        iVar3 = (**(*var_8h + 0x14))();\n        var_1ah = 0 < iVar3;\n        iVar3 = (**(*var_8h + 0x14))();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                (**(*var_8h + 0xc))();\n                if ((((*(*0x47c2c8 + 0xc) != '\\0') && (iVar3 = fcn.0040bccc(),  iVar3 == 0)) && (var_18h != 0)) &&\n                   (iVar3 = fcn.0040bccc(),  iVar3 == 0)) {\n                    fcn.004045c0(&fcn.00441ae4::var_48h);\n                    fcn.00404818();\n                    fcn.00441984();\n                    fcn.004045c0();\n                    fcn.00404858();\n                }\n                (**(*var_8h + 0x18))();\n                fcn.0040435c();\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        *in_FS_OFFSET = uStack112;\n        puStack104 = 0x441f4b;\n        uStack108 = 0x441f2b;\n        fcn.00403530();\n        uStack108 = 0x441f33;\n        fcn.00403530();\n        uStack108 = 0x441f3b;\n        fcn.00403530();\n        uStack108 = 0x441f43;\n        fcn.00403530();\n        return;\n    }\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        puStack104 = 0x441b38;\n        cVar2 = fcn.00442138();\n        puVar1 = puStack92;\n        if (cVar2 != '\\0') goto code_r0x00441b40;\n    }\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x441f8a;\n    uStack96 = 0x441f65;\n    fcn.0040432c();\n    uStack96 = 0x441f72;\n    fcn.0040432c();\n    uStack96 = 0x441f7a;\n    fcn.00404308();\n    uStack96 = 0x441f82;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 2242
    },
    "00441fe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00441fe0(uint param_1, char param_2)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uStack24;\n    int32_t iStack20;\n    \n    uStack24 = 0;\n    if ((param_2 != '\\0') || (((*(in_EAX + 0x1c) & 0x10) == 0 && (in_EAX = fcn.00442164(),  in_EAX != '\\0')))) {\n        iStack20 = 0;\n        iVar5 = 0;\n        iVar4 = 0;\n        iVar2 = fcn.00440f24();\n        iVar3 = iStack20;\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.00440f34();\n                if (*(iVar3 + 0x3e) != '\\0') {\n                    fcn.00440f34();\n                    cVar1 = fcn.00441fbc();\n                    iVar3 = iVar4;\n                    if (cVar1 == '\\0') break;\n                    iVar3 = fcn.00440f34();\n                    *(iVar3 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n                iVar3 = iStack20;\n            } while (iVar2 != 0);\n        }\n        iStack20 = iVar3;\n        iVar4 = fcn.00440f24();\n        if (iStack20 <= iVar4 + -1) {\n            iVar3 = ((iVar4 + -1) - iStack20) + 1;\n            iVar4 = iStack20;\n            do {\n                fcn.00440f34();\n                cVar1 = fcn.00441fbc();\n                if (cVar1 == '\\0') {\n                    iVar2 = fcn.00440f34();\n                    if (*(iVar2 + 0x3e) != '\\0') {\n                        if ((iVar5 != 0) && (*(iVar5 + 0x3e) == '\\0')) {\n                            *(iVar5 + 0x3e) = 1;\n                            uStack24 = 1;\n                        }\n                        iVar5 = 0;\n                        iStack20 = iVar4;\n                    }\n                }\n                else {\n                    if ((iVar5 != 0) && (*(iVar5 + 0x3e) != '\\0')) {\n                        *(iVar5 + 0x3e) = 0;\n                        uStack24 = 1;\n                    }\n                    iVar5 = fcn.00440f34();\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        in_EAX = fcn.00440f24();\n        iVar4 = iStack20 - (in_EAX - 1);\n        if (iVar4 == 0 || iStack20 < in_EAX - 1) {\n            iVar4 = iVar4 + -1;\n            do {\n                in_EAX = fcn.00440f34();\n                if (*(in_EAX + 0x3e) != '\\0') {\n                    fcn.00440f34();\n                    in_EAX = fcn.00441fbc();\n                    if (in_EAX == '\\0') break;\n                    in_EAX = fcn.00440f34();\n                    *(in_EAX + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 != 0);\n        }\n    }\n    return CONCAT44(iStack20, in_EAX & 0xffffff00 | uStack24);\n}\n",
        "token_count": 856
    },
    "00442138": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar fcn.00442138(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3b);\n    if ((*(in_EAX + 0x3b) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.00442138();\n        uVar1 = *((uVar1 & 0x7f) + 0x46f9f0);\n    }\n    return *((uVar1 & 0x7f) + 0x46f9f4);\n}\n",
        "token_count": 140
    },
    "00442164": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar fcn.00442164(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3c);\n    if ((*(in_EAX + 0x3c) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.00442164();\n        uVar1 = *((uVar1 & 0x7f) + 0x46f9f0);\n    }\n    return *((uVar1 & 0x7f) + 0x46f9f4);\n}\n",
        "token_count": 140
    },
    "00442190": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.00442190(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.0043efb8();\n    in_EAX[0xd] = iVar1;\n    *(iVar1 + 0x84) = in_EAX;\n    *(iVar1 + 0x80) = *(*in_EAX + 0x38);\n    *(iVar1 + 0x70) = in_EAX;\n    iVar1 = fcn.00403500();\n    in_EAX[0x11] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x442aa8;\n    *(in_EAX + 0x41) = 1;\n    fcn.0041da6c();\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x3b) = 0;\n    *(iVar1 + 0x3c) = 0;\n    fcn.00442ebc();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 362
    },
    "004422e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.004422e0(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0;\n    if ((((*(arg_8h - 1) == '\\0') && (*(arg_8h - 8) == *(in_EAX + 0x50))) ||\n        ((*(arg_8h - 1) == '\\x01' && (*(arg_8h - 8) == *(in_EAX + 0x34))))) ||\n       ((*(arg_8h - 1) == '\\x02' && (*(arg_8h - 8) == *(in_EAX + 0x60))))) {\n        *(arg_8h - 0xc) = in_EAX;\n        _auStack8 = 0x1000000;\n        uVar1 = arg_8h;\n    }\n    else {\n        uVar1 = fcn.00440f24();\n        uVar2 = uVar1;\n        if (-1 < uVar1 - 1) {\n            do {\n                uVar1 = arg_8h;\n                fcn.00440f34();\n                uVar1 = fcn.004422e0(uVar1);\n                if (uVar1 != '\\0') {\n                    _auStack8 = 0x1000000;\n                    break;\n                }\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n    }\n    return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 398
    },
    "004423a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004423a8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    char cStack20;\n    \n    uVar3 = 0;\n    cStack20 = param_1;\n    if (((cStack20 == '\\0') && (cVar1 = fcn.004036bc(),  cVar1 != '\\0')) &&\n       (iVar2 = (**(*in_EAX + 0x34))(),  param_2 == iVar2)) {\n        uVar3 = fcn.004436cc();\n    }\n    else {\n        for (iVar2 = fcn.00442378(); (iVar2 != 0 && (*(iVar2 + 0x54) == 0)); iVar2 = *(iVar2 + 100)) {\n        }\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x54);\n        }\n    }\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 238
    },
    "004424fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004424fc(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x40) == '\\0') && (*(in_EAX + 0x48) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 66
    },
    "00442520": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00442520(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    piVar1 = (*in_EAX)[0x19];\n    piVar2 = piVar1;\n    if (piVar1 != NULL) {\n        uStackY32 = 0x44254e;\n        piVar2 = fcn.00442520(arg_8h);\n        var_1h._0_1_ = piVar2;\n    }\n    piVar4 = piVar2 & 0xffffff00;\n    if ((var_1h != 0) && (var_1h != 3)) {\n        if (var_1h == 2) {\n            if ((arg_8h[-1] == 0) || (*(arg_8h[-1] + 0x60) != *(arg_8h + -6))) {\n                iVar3 = fcn.00442378();\n                arg_8h[-1] = iVar3;\n                if (arg_8h[-1] == 0) {\n                    var_1h._0_1_ = 3;\n                    piVar4 = arg_8h;\n                    goto code_r0x00442667;\n                }\n            }\n            piVar4 = fcn.00442510();\n            *in_EAX = piVar4;\n            if ((*in_EAX == NULL) || (piVar4 = (*in_EAX)[0x19],  piVar4 != piVar1)) goto code_r0x00442667;\n            if (in_EDX == 0) {\n                var_1h._0_1_ = 1;\n            }\n        }\n        piVar4 = *in_EAX;\n        if (*(piVar4 + 0x39) == '\\0') {\n            var_1h._0_1_ = 0;\n        }\n        else {\n            uStackY32 = 0x442645;\n            uStackY36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            if ((*(arg_8h[-3] + 0x1c) & 0x10) == 0) {\n                fcn.0044144c();\n            }\n            (**(**in_EAX + 0x44))();\n            if ((arg_8h[-1] == 0) || ((*in_EAX != arg_8h[-1] && (*(arg_8h[-1] + 0x60) != *(arg_8h + -6))))) {\n                var_1h._0_1_ = 2;\n            }\n            piVar4 = NULL;\n            *in_FS_OFFSET = uStackY36;\n        }\n    }\ncode_r0x00442667:\n    return piVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 736
    },
    "00442674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00442674(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint var_14h;\n    uint var_ch;\n    uint var_6h;\n    \n    if (*(param_2 + 4) == '\\0') {\n        return 0;\n    }\n    uStack32 = 0x10;\n    uStack36 = 0x44269d;\n    sub.user32.dll_GetKeyState();\n    uStack36 = 0x11;\n    puStack40 = 0x4426af;\n    sub.user32.dll_GetKeyState();\n    puStack40 = 0x4426dc;\n    fcn.00426874();\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack44 = 0x442772;\n    puStack52 = 0x4426fc;\n    puStack40 = &stack0xfffffffc;\n    iVar1 = fcn.00442378();\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = uStack48;\n        puStack40 = 0x442779;\n        uStack44 = 0x442771;\n        uVar2 = fcn.0042686c();\n        return uVar2;\n    }\n    puStack52 = 0x442712;\n    fcn.00426874();\n    uStack56 = 0x442747;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00442520(&stack0xfffffffc);\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x44274e;\n    uStack56 = 0x442746;\n    uVar2 = fcn.0042686c();\n    return uVar2;\n}\n",
        "token_count": 478
    },
    "00442798": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00442798(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack100;\n    uint uStack96;\n    uchar auStack88 [80];\n    \n    if ((*(*0x47c2c8 + 0xd) != '\\0') && (in_EAX[0xe] != 0)) {\n        puStack140 = 0x4427bf;\n        uVar2 = (**(*in_EAX + 0x34))();\n        uStack136 = 0x2c;\n        uStack132 = 0x10;\n        puStack100 = &stack0xffffffa8;\n        uStack96 = 0x50;\n        uStack144 = 0xffffffff;\n        uStack148 = 0;\n        uStack152 = uVar2;\n        puStack140 = &stack0xffffff78;\n        iVar3 = sub.user32.dll_GetMenuItemInfoA();\n        if (iVar3 != 0) {\n            cVar1 = fcn.00442b1c();\n            if (cVar1 != '\\x01' - ((uStack144 & 0x6000) == 0)) {\n                uVar4 = fcn.00442b1c();\n                uStack144 = (uVar4 & 0x7f) * 0x6000 | uStack144 & 0xffff9fff;\n                uStack148 = 0x10;\n                iVar3 = sub.user32.dll_SetMenuItemInfoA(uVar2, 0, 0xffffffff, &stack0xffffff68);\n                if (iVar3 != 0) {\n                    sub.user32.dll_DrawMenuBar(in_EAX[0xe]);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 438
    },
    "004428f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004428f4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_204h;\n    uint var_200h;\n    \n    arg_8h = &stack0xfffffffc;\n    if (in_EAX[0xe] != 0) {\n        (**(*in_EAX + 0x34))();\n        fcn.00442854(arg_8h);\n    }\n    if (in_EAX[0xf] != 0) {\n        fcn.004047b8();\n        iVar1 = fcn.00408cac();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.00404570();\n    return 1;\n}\n",
        "token_count": 173
    },
    "00442988": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00442988(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(*0x47c2c8 + 0xd) != '\\0') {\n        var_5h = *(in_EAX + 0x30);\n        var_6h = *(in_EAX + 0x41);\n        uStack20 = 0x4429f8;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        var_4h = in_EAX;\n        if (var_5h == '\\0') {\n            puStack16 = &stack0xfffffffc;\n            fcn.00442e98();\n        }\n        else {\n            fcn.00442e98();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x4429ff;\n        uStack20 = 0x4429ee;\n        fcn.00442e98();\n        *(var_4h + 0x41) = var_6h;\n        return;\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "00442a04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442a04(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = param_2;\n    fcn.004428f4();\n    if ((*(*0x47c2c8 + 0xd) != '\\0') && (param_2 != 0)) {\n        if (*(in_EAX + 0x41) == '\\0') {\n            fcn.00442988();\n        }\n        else {\n            fcn.00442ebc();\n        }\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00442b1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00442b1c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x47c2c8 + 0xd) != '\\0') && (*(in_EAX + 0x30) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 71
    },
    "00442b90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.00442b90(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint16_t in_DX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack32 = &var_2h + 2;\n    uStack36 = 0x442c65;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if ((in_DX & 0x10) == 0) {\n        iVar1 = fcn.00442378();\n        if ((iVar1 != 0) && (iVar2 = fcn.00440f24(),  in_ECX < iVar2)) {\n            iVar1 = fcn.00440f34();\n        }\n    }\n    else {\n        puStack32 = &var_2h + 2;\n        sub.user32.dll_GetSubMenu();\n        iVar1 = fcn.00442378();\n        uStack48 = in_EAX;\n    }\n    if ((iVar1 != 0) && (*(iVar1 + 0x30) != 0)) {\n        fcn.004044e8();\n        fcn.004044e8(0);\n        iVar1 = fcn.0040856c();\n        if (iVar1 == 0) {\n            fcn.004439e0();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x442c6c;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 415
    },
    "00442c78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442c78(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_2 + 0xc) = 0;\n    var_ch = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_14h = 0xffffffff;\n    iVar3 = sub.user32.dll_GetMenuItemCount(*(param_2 + 8));\n    if (-1 < iVar3 + -1) {\n        uVar5 = 0;\n        var_18h = iVar3;\n        do {\n            uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n            cVar2 = fcn.00442b34(uVar4 & 0xffffff00 | *(param_2 + 4), &stack0xfffffffc);\n            uVar1 = var_10h;\n            if (cVar2 != '\\0') {\n                if ((uVar4 & 2) == 0) {\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                else if (var_ch < 0) {\n                    var_ch = 0xfffffffe;\n                }\n            }\n            var_10h = uVar1;\n            uVar5 = uVar5 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    if (var_ch < -1) {\n        *(param_2 + 0xc) = 0x10000;\n    }\n    else {\n        if ((var_ch < 0) && (-1 < iVar3 + -1)) {\n            uVar5 = 0;\n            var_18h = iVar3;\n            do {\n                uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n                cVar2 = fcn.00442b90(uVar4 & 0xffffff00 | *(param_2 + 4), &stack0xfffffffc);\n                uVar1 = var_10h;\n                if (cVar2 != '\\0') {\n                    if ((uVar4 & 2) != 0) {\n                        *(param_2 + 0xc) = 0x10000;\n                        return;\n                    }\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                var_10h = uVar1;\n                uVar5 = uVar5 + 1;\n                var_18h = var_18h + -1;\n            } while (var_18h != 0);\n        }\n        if (*(param_2 + 0xc) == 2) {\n            *(param_2 + 0xc) = var_ch | 0x20000;\n        }\n        else if (*(param_2 + 0xc) == 3) {\n            if (var_14h < 0) {\n                var_14h = var_ch;\n            }\n            *(param_2 + 0xc) = var_14h | 0x30000;\n        }\n    }\n    return;\n}\n",
        "token_count": 955
    },
    "00442df0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442df0(uint uFlags, uint cchMax, uchar *lpString)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    cVar1 = fcn.004424fc();\n    if (cVar1 == '\\0') {\n        uVar4 = sub.user32.dll_GetMenuStringA();\n    }\n    else {\n        var_4h = 0;\n        uVar2 = sub.user32.dll_GetMenuState();\n        if ((uVar2 & 0x10) == 0) {\n            iVar3 = sub.user32.dll_GetMenuItemID();\n            if (iVar3 != -1) {\n                var_4h = fcn.00442378();\n            }\n        }\n        else {\n            sub.user32.dll_GetSubMenu();\n            var_4h = fcn.00442378();\n        }\n        if (var_4h == 0) {\n            uVar4 = 0;\n        }\n        else {\n            *lpString = 0;\n            fcn.00408c8c();\n            uVar4 = fcn.00408bd0();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 276
    },
    "00442ebc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00442ebc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        iVar1 = fcn.0042c9bc();\n        if (iVar1 != 0) {\n            fcn.00442e98();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00442ee4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00442ee4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        fcn.004036e0();\n        fcn.00442e98();\n        *(in_EAX + 0x41) = 1;\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "00442f70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442f70(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar2 = in_EAX;\n    if (*(in_EAX + 0x38) != 0) {\n        uVar1 = fcn.004428f4();\n        uVar2 = uVar1;\n        if (in_ECX == 0) {\n            uVar2 = sub.user32.dll_SendMessageA(*(in_EAX + 0x38), 0xb015, 0, 0);\n        }\n        if (uVar1 != '\\0') {\n            uVar2 = sub.user32.dll_DrawMenuBar(*(in_EAX + 0x38));\n        }\n    }\n    fcn.00442a6c(uVar2 & 0xffffff00 | arg_8h & 0xff);\n    return;\n}\n",
        "token_count": 221
    },
    "00443088": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443088(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint32_t uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x4435bb;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar9 = *param_2;\n    if (iVar9 < 0x112) {\n        if (iVar9 == 0x111) {\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x443106;\n                    fcn.004152c8();\n                    puStack80 = 0x44310f;\n                    cVar3 = fcn.00442418();\n                    if (cVar3 != '\\0') goto code_r0x004435a5;\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2b) {\n            uVar8 = param_2[2];\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x443319;\n                    fcn.004152c8();\n                    puStack80 = 0x443326;\n                    iVar10 = fcn.00442378();\n                    if (iVar10 != 0) {\n                        puStack80 = 0x44333f;\n                        fcn.00421358();\n                        puStack84 = 0x4433ee;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        uStack92 = *(uVar8 + 0x18);\n                        puStack96 = 0x44335c;\n                        puStack80 = &stack0xfffffffc;\n                        uVar6 = sub.gdi32.dll_SaveDC();\n                        uStack100 = 0x4433d1;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack96 = &stack0xfffffffc;\n                        fcn.00421c1c();\n                        fcn.00421abc();\n                        uVar8 = uVar8 & 0xffff0000 | *(uVar8 + 0x10);\n                        puStack112 = 0x4433a9;\n                        fcn.00443860(uVar8);\n                        *in_FS_OFFSET = uVar8;\n                        uStack100 = 0x4433d8;\n                        uStack104 = 0x4433c0;\n                        fcn.00421c1c();\n                        puStack112 = 0x4433d0;\n                        uStack104 = uVar6;\n                        sub.gdi32.dll_RestoreDC();\n                        return;\n                    }\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2c) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x443424;\n                    fcn.004152c8();\n                    puStack80 = 0x443431;\n                    piVar4 = fcn.00442378();\n                    if (piVar4 != NULL) {\n                        puStack80 = *(in_EAX + 0x10);\n                        puStack84 = 0x44344a;\n                        uVar6 = sub.user32.dll_GetWindowDC();\n                        uStack88 = 0x443531;\n                        uStack92 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa4;\n                        puStack96 = 0x443467;\n                        puStack84 = &stack0xfffffffc;\n                        fcn.00421358();\n                        uStack100 = 0x44350c;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack112 = 0x443481;\n                        puStack96 = &stack0xfffffffc;\n                        uVar7 = sub.gdi32.dll_SaveDC();\n                        uStack116 = 0x4434ef;\n                        uStack120 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff88;\n                        puStack112 = &stack0xfffffffc;\n                        fcn.00421c1c();\n                        fcn.00421abc();\n                        uVar8 = iVar9 + 0x10;\n                        (**(*piVar4 + 0x38))();\n                        *in_FS_OFFSET = uVar8;\n                        uStack116 = 0x4434f6;\n                        uStack120 = 0x4434e1;\n                        fcn.00421c1c();\n                        uStack120 = uVar7;\n                        sub.gdi32.dll_RestoreDC(uVar6);\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x53) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x443217;\n                    piVar4 = fcn.004152c8();\n                    puStack80 = 0x44321c;\n                    iVar5 = (**(*piVar4 + 0x34))();\n                    if (iVar5 == *(iVar9 + 0xc)) {\n                        puStack80 = 0x44322e;\n                        iVar5 = fcn.004152c8();\n                        unique0x00007a00 = *(iVar5 + 0x34);\n                    }\n                    else {\n                        puStack80 = 0x443240;\n                        fcn.004152c8();\n                        puStack80 = 0x44324d;\n                        *NULL = fcn.00442378();\n                    }\n                    if (stack0xfffffff0 != 0) {\n                        puStack80 = 0x443264;\n                        fcn.004152c8();\n                        puStack80 = 0x443271;\n                        iVar9 = fcn.004423a8();\n                        if (iVar9 == 0) {\n                            puStack80 = 0x44327f;\n                            fcn.004152c8();\n                            puStack80 = 0x44328c;\n                            fcn.004423a8();\n                        }\n                        if (*(**0x47c298 + 0x6c) != 0) {\n                            if ((*(*(**0x47c298 + 0x6c) + 0x228) & 8) == 0) {\n                                puStack80 = 0x4432e5;\n                                fcn.0044f7b8();\n                            }\n                            else {\n                                puStack80 = 0x4432d2;\n                                fcn.0044f820();\n                            }\n                        }\n                        goto code_r0x004435a5;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else if (iVar9 == 0x117) {\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x44313c;\n                fcn.004152c8();\n                puStack80 = 0x443144;\n                cVar3 = fcn.00442434();\n                if (cVar3 != '\\0') goto code_r0x004435a5;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    else if (iVar9 == 0x11f) {\n        uVar1 = *(param_2 + 6);\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                if (((uVar1 & 0x10) != 0) && (param_2[2] != 0)) {\n                    puStack80 = *(param_2 + 1);\n                    uStack88 = 0x443189;\n                    uStack76 = param_2[2];\n                    sub.user32.dll_GetSubMenu();\n                }\n                puStack80 = 0x4431a8;\n                fcn.004152c8();\n                puStack80 = 0x4431b3;\n                iVar10 = fcn.00442378();\n                if (iVar10 != 0) {\n                    puStack80 = 0x4431ca;\n                    fcn.0042cc20();\n                    puStack80 = 0x4431d9;\n                    fcn.0044fb1c();\n                    goto code_r0x004435a5;\n                }\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n        puStack80 = 0x4431f0;\n        fcn.0044fb1c();\n    }\n    else {\n        puStack68 = &stack0xfffffffc;\n        if ((iVar9 == 0x120) &&\n           (iVar9 = *(in_EAX + 8),  puStack68 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  -1 < iVar9 + -1)) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x44355a;\n                piVar4 = fcn.004152c8();\n                puStack80 = 0x443565;\n                iVar10 = (**(*piVar4 + 0x34))();\n                if (iVar10 == param_2[2]) {\ncode_r0x0044357b:\n                    puStack80 = 0x443585;\n                    fcn.00442c78();\n                    goto code_r0x004435a5;\n                }\n                puStack80 = 0x443577;\n                iVar10 = fcn.00442378();\n                if (iVar10 != 0) goto code_r0x0044357b;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    puStack80 = param_2[2];\n    puStack84 = param_2[1];\n    uStack88 = *param_2;\n    uStack76 = *(in_EAX + 0x10);\n    puStack96 = 0x4435a2;\n    iVar9 = sub.user32.dll_DefWindowProcA();\n    param_2[3] = iVar9;\ncode_r0x004435a5:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x4435c2;\n    uStack72 = 0x4435ba;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 2900
    },
    "004435cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004435cc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 8) == 0) {\n        uVar1 = fcn.0041ebac(fcn.0044303c, in_EAX);\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.0041516c();\n    return;\n}\n",
        "token_count": 96
    },
    "004435f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004435f4(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00415468();\n    if (*(in_EAX + 8) == 0) {\n        fcn.0041ec60();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004436dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004436dc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x47c2c8 + 0xd) != '\\0') && (*(in_EAX + 0x41) != '\\0')) {\n        iVar1 = fcn.0043e668();\n        if (iVar1 == 0) {\n            fcn.00442e98();\n            *(in_EAX + 0x41) = 1;\n        }\n        else {\n            fcn.00442e98();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00443724": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00443724(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(*0x47c2c8 + 0xd) != '\\0') {\n        if (*(in_EAX + 0x41) == '\\0') {\n            uVar2 = *(in_EAX + 0x30) == '\\x01';\n        }\n        else {\n            iVar1 = fcn.0043e668();\n            if (iVar1 == 0) {\n                uVar2 = fcn.0044e3dc();\n            }\n            else {\n                uVar2 = fcn.0040372c();\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 175
    },
    "00443948": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443948(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.0040435c();\n    iVar3 = 1;\n    do {\n        iVar2 = fcn.004045c0();\n        if (iVar2 < iVar3) {\n            return;\n        }\n        uVar1 = *(*param_2 + -1 + iVar3);\n        if ((*(*0x47c2a8 + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n            if (uVar1 == 0x26) {\n                if ((*(*0x47c2c8 + 0xc) != '\\0') && (1 < iVar3)) {\n                    iVar2 = fcn.004045c0();\n                    if ((1 < iVar2 - iVar3) && ((*(*param_2 + -2 + iVar3) == '(' && (*(*param_2 + 1 + iVar3) == ')'))))\n                    {\n                        fcn.00404858();\n                        goto code_r0x004439cf;\n                    }\n                }\n                fcn.00404858();\n            }\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\ncode_r0x004439cf:\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 319
    },
    "004463fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004463fc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((arg_8h != *0x46fae0) && (arg_8h != *(*0x47dc08 + 0x30))) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = sub.user32.dll_IsWindowEnabled(arg_8h);\n            if (iVar1 != 0) {\n                uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n                if ((uVar2 & 8) == 0) {\n                    if (*0x46fae4 == 0) {\n                        *0x46fae4 = arg_8h;\n                    }\n                }\n                else if (*0x46fae8 == 0) {\n                    *0x46fae8 = arg_8h;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 237
    },
    "00446460": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00446460(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    *0x46fae4 = 0;\n    *0x46fae8 = 0;\n    *0x46fae0 = in_EAX;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.004463fc, 0);\n    sub.user32.dll_EnumThreadWindows(uVar1);\n    if (*0x46fae4 != 0) {\n        return *0x46fae4;\n    }\n    return *0x46fae8;\n}\n",
        "token_count": 137
    },
    "0044687c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044687c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == '\\0') {\n        cVar1 = fcn.00446a34();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0043010c();\n            if (cVar1 == '\\0') {\n                fcn.00446f84();\n            }\n            else {\n                fcn.00446f84();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "004468b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004468b4(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        cVar1 = *(in_EAX + 0x5b);\n        if ((cVar1 == '\\0') || (cVar1 == '\\x03')) {\n            if ((*(in_EAX + 0x5b) == '\\x03') || (*0x44691c == (*0x446918 & *(in_EAX + 0x61)))) {\n                uVar2 = fcn.00426678();\n                *(arg_8h + -4) = uVar2;\n            }\n        }\n        else if (cVar1 == '\\x04') {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x48);\n        }\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00446920": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446920(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        if (*(in_EAX + 0x5b) < 2) {\n            if ((*(in_EAX + 0x5b) == '\\x01') || (*0x446984 == (*0x446980 & *(in_EAX + 0x61)))) {\n                uVar1 = fcn.00426678();\n                *(arg_8h + -4) = uVar1;\n            }\n        }\n        else if (*(in_EAX + 0x5b) == 2) {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x4c);\n        }\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "00446988": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00446988(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 4) + 0x84) != '\\0') {\n        cVar1 = (**(**(in_EAX + 4) + 0xc4))();\n        if (cVar1 == '\\0') {\n            fcn.004470bc();\n        }\n        else {\n            iVar2 = fcn.00432f40();\n            if (-1 < iVar2 + -1) {\n                do {\n                    if (*(in_EAX + 0x18) == '\\0') {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00432f04();\n                        fcn.004468b4(puVar3);\n                    }\n                    else {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00432f04();\n                        fcn.00446920(puVar3);\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            fcn.004470bc();\n        }\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "00446a34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00446a34(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (*(in_EAX + 0x18) == '\\x01') {\n        uVar3 = 0x200000;\n    }\n    if (*(in_EAX + 0x1c) != '\\0') {\n        uVar1 = fcn.004360b8(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & uVar3) != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 169
    },
    "00446aa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00446aa0(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort in_DX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg_8h + -5) == '\\0') {\n        if ((*(arg_8h + -6) != '\\0') && (cVar1 = fcn.00446a6c(arg_8h),  cVar1 == '\\0')) {\n            iVar2 = (***0x47bf10)(in_DX);\n            return -(iVar2 - *(arg_8h + -0xc));\n        }\n        if ((*(arg_8h + -6) == '\\0') && (cVar1 = fcn.00446a6c(arg_8h),  cVar1 != '\\0')) {\n            iVar2 = (***0x47bf10)(in_DX);\n            iVar2 = iVar2 - *(arg_8h + -0xc);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 227
    },
    "00446c14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00446c14(uint param_1, uint32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1f) == '\\0') || (3 < *(param_2 + 4))) {\n        uVar3 = *(param_2 + 4);\n    // switch table (8 cases) at 0x446de5\n        switch(*(param_2 + 4)) {\n        case 0:\n            uVar3 = fcn.00446f84();\n            break;\n        case 1:\n            uVar3 = fcn.00446f84();\n            break;\n        case 2:\n            fcn.00446b1c();\n            uVar3 = fcn.00446f84();\n            break;\n        case 3:\n            fcn.00446b1c();\n            uVar3 = fcn.00446f84();\n            break;\n        case 4:\n            if (*(in_EAX + 0x14) < 0x8000) {\n                uVar3 = fcn.00446f84();\n            }\n            else {\n                fcn.00446bb4(&stack0xfffffffc);\n                uVar3 = fcn.00446f84();\n            }\n            break;\n        case 5:\n            uVar3 = in_EAX;\n            if (*(in_EAX + 0x1d) != '\\0') {\n                if (*(in_EAX + 0x14) < 0x8000) {\n                    uVar3 = fcn.00446f84();\n                }\n                else {\n                    fcn.00446bb4(&stack0xfffffffc);\n                    uVar3 = fcn.00446f84();\n                }\n            }\n            break;\n        case 6:\n            uVar3 = fcn.00446f84();\n            break;\n        case 7:\n            uVar3 = fcn.00446f84();\n        }\n    }\n    else {\n        if (*(param_2 + 4) < 2) {\n            iVar5 = *(in_EAX + 0x40);\n            uVar3 = *(in_EAX + 8) / iVar5;\n            var_10h = *(in_EAX + 8) % iVar5;\n        }\n        else if (*(param_2 + 4) - 2 < 2) {\n            iVar5 = *(in_EAX + 0x3c);\n            var_10h = *(in_EAX + 10) % iVar5;\n            uVar3 = *(in_EAX + 10) / iVar5;\n        }\n        else {\n            iVar5 = 0;\n            uVar3 = 0;\n            var_10h = 0;\n        }\n        iVar2 = 0;\n        for (; 0 < iVar5; iVar5 = iVar5 + -1) {\n            iVar4 = fcn.00407220();\n            if (iVar4 - iVar2 < *(in_EAX + 0x20)) {\n                sub.kernel32.dll_Sleep_1(*(in_EAX + 0x20) - (iVar4 - iVar2));\n            }\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.00446f84();\n            }\n            else if (iVar1 == 1) {\n                fcn.00446f84();\n            }\n            else if (iVar1 == 2) {\n                fcn.00446f84();\n            }\n            else if (iVar1 == 3) {\n                fcn.00446f84();\n            }\n            uVar3 = (**(**(in_EAX + 4) + 0x88))();\n            iVar2 = iVar4;\n        }\n        if (0 < var_10h) {\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                uVar3 = fcn.00446f84();\n            }\n            else if (iVar1 == 1) {\n                uVar3 = fcn.00446f84();\n            }\n            else if (iVar1 == 2) {\n                uVar3 = fcn.00446f84();\n            }\n            else {\n                uVar3 = param_2 & 0xffff0000 | iVar1 - 3U;\n                if (iVar1 - 3U == 0) {\n                    uVar3 = fcn.00446f84();\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1048
    },
    "00446f84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446f84(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if ((*(*(in_EAX + 4) + 0x1c) & 2) == 0) {\n        iVar1 = *(in_EAX + 0x14);\n        if ((param_2 <= iVar1) && (iVar1 = param_2,  param_2 < 0)) {\n            iVar1 = 0;\n        }\n        bVar3 = *(in_EAX + 0x18) != '\\0';\n        if (iVar1 != *(in_EAX + 0xc)) {\n            *(in_EAX + 0xc) = iVar1;\n            if (*(in_EAX + 0x18) == '\\0') {\n                fcn.00435cb0();\n            }\n            else {\n                fcn.00435cb0();\n            }\n            if ((((*(*(in_EAX + 4) + 0x1c) & 0x10) != 0) && (iVar1 = fcn.004466f4(),  iVar1 != 0)) &&\n               (*(iVar1 + 0x250) != 0)) {\n                (**(**(iVar1 + 0x250) + 0xc))();\n            }\n        }\n        uVar2 = fcn.004360b8(bVar3);\n        iVar1 = (***0x47bfa4)(uVar2);\n        if (iVar1 != *(in_EAX + 0xc)) {\n            uVar2 = fcn.004360b8(bVar3, *(in_EAX + 0xc), 0xffffffff);\n            (***0x47c280)(uVar2);\n        }\n    }\n    else {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "00447100": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447100(int32_t arg_8h)\n\n{\n    char in_AL;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t arg_14h;\n    \n    piVar3 = arg_8h + -4;\n    arg_14h = -(in_AL != '\\0');\n    uVar4 = *(*(*piVar3 + 0x34) * 4 + 0x46fb28);\n    uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x46fb00);\n    uVar1 = fcn.004360b8();\n    fcn.00428638(uVar1, uVar2, uVar4, arg_14h);\n    if (0 < *(*piVar3 + 0x24)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x24);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x46fb04);\n        uVar1 = fcn.004360b8();\n        fcn.00428638(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x38)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x38);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x46fb08);\n        uVar1 = fcn.004360b8();\n        fcn.00428638(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x30)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x30);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x46fb0c);\n        uVar1 = fcn.004360b8();\n        fcn.00428638(uVar1, uVar2, uVar4, uVar5);\n    }\n    uVar5 = 0;\n    uVar2 = fcn.0042057c();\n    uVar4 = *(*(*piVar3 + 0x18) * 0x14 + 0x46fb10);\n    uVar1 = fcn.004360b8();\n    fcn.00428638(uVar1, uVar4, uVar2, uVar5);\n    return;\n}\n",
        "token_count": 595
    },
    "00447208": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00447208(uint param_1, uchar param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    int32_t var_12h;\n    uint var_eh;\n    uint var_ah;\n    int32_t var_6h;\n    \n    *(in_EAX + 0x14) = 0;\n    cVar1 = *(in_EAX + 0x18);\n    var_6h._1_1_ = param_2;\n    unique0x100000a4 = in_EAX;\n    if (*(in_EAX + 0x1c) != '\\0') {\n        iVar2 = fcn.00446b1c();\n        iVar2 = *(stack0xfffffff8 + 0x10) - iVar2;\n        *(stack0xfffffff8 + 0x14) = iVar2;\n        if (iVar2 < 0) {\n            *(stack0xfffffff8 + 0x14) = 0;\n        }\n    }\n    var_22h = 0x1c;\n    var_1eh = 0x17;\n    var_1ah = 0;\n    if (*(stack0xfffffff8 + 0x14) < 1) {\n        var_16h = 0;\n    }\n    else {\n        var_16h = *(stack0xfffffff8 + 0x10);\n    }\n    var_12h = fcn.00446b1c();\n    var_12h = var_12h + 1;\n    var_eh = *(stack0xfffffff8 + 0xc);\n    var_ah = var_eh;\n    fcn.00447100(&stack0xfffffffc);\n    *(stack0xfffffff8 + 0x44) = 0;\n    uVar3 = fcn.004360b8(cVar1 == '\\x01', &var_22h, 0xffffffff);\n    (***0x47c0b8)(uVar3);\n    fcn.00446f84();\n    iVar2 = fcn.00446b1c();\n    uVar4 = (iVar2 * 9) / 10;\n    *(stack0xfffffff8 + 10) = uVar4;\n    if (*(stack0xfffffff8 + 0x1f) != '\\0') {\n        *(stack0xfffffff8 + 8) = (uVar4 & 0xffff) / 10;\n    }\n    return;\n}\n",
        "token_count": 601
    },
    "004473d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004473d4(void)\n\n{\n    uint arg_8h;\n    \n    fcn.004331c8();\n    if (*(*0x47c2c8 + 0xd) == '\\0') {\n        arg_8h = fcn.004360b8();\n        fcn.0042866c(arg_8h);\n    }\n    fcn.004475d8();\n    return;\n}\n",
        "token_count": 92
    },
    "00447440": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00447440(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00403500();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar4 = fcn.0042f4ac();\n    iVar5 = *(in_EAX + 0x208);\n    cVar2 = fcn.00446a34();\n    if ((cVar2 == '\\0') || (*(iVar5 + 0x10) <= iVar4)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.00446f84();\n    }\n    iVar5 = fcn.00432f40();\n    if (-1 < iVar5 + -1) {\n        do {\n            fcn.00432f04();\n            fcn.00432f04();\n            fcn.0041516c();\n            fcn.0042f218();\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    iVar5 = *(iVar3 + 8);\n    if (-1 < iVar5 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.004152c8();\n            fcn.00430c4c(arg_8h);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if (bVar1) {\n        fcn.0044687c();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 435
    },
    "00447558": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00447558(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x214) < 1) {\n        fcn.00446988();\n        fcn.00446988();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004475d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004475d8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x218) == '\\0') {\n        puStack12 = 0x4475f7;\n        var_4h = in_EAX;\n        cVar1 = fcn.004363bc();\n        if (cVar1 != '\\0') {\n            uStack16 = 0x4476c3;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            *(var_4h + 0x218) = 1;\n            puStack12 = &stack0xfffffffc;\n            cVar1 = fcn.00446b9c();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.00446b9c();\n                if (cVar1 == '\\0') {\n                    fcn.00447208();\n                    fcn.00447208();\n                }\n                else {\n                    fcn.00447208();\n                    fcn.00447208();\n                }\n            }\n            else {\n                fcn.00447208();\n                fcn.00447208();\n            }\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x218) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "00447df4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00447df4(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00447320();\n    *(in_EAX + 0x50) = *0x447f5c;\n    fcn.0042f218();\n    fcn.0042f23c();\n    fcn.0042f264();\n    fcn.0042f288();\n    piVar2 = fcn.00425c08();\n    *(in_EAX + 0x240) = piVar2;\n    (***0x47bf10)(0x31);\n    (**(*piVar2 + 0x40))();\n    (***0x47bf10)();\n    (**(**(in_EAX + 0x240) + 0x34))();\n    iVar1 = *(in_EAX + 0x240);\n    *(iVar1 + 0x14) = in_EAX;\n    *(iVar1 + 0x10) = fcn.00448704;\n    uVar3 = fcn.00421358();\n    *(in_EAX + 0x238) = uVar3;\n    fcn.0042e684();\n    *(in_EAX + 0x228) = *0x447f60;\n    *(in_EAX + 0x229) = 2;\n    *(in_EAX + 0x22b) = 0;\n    *(in_EAX + 0x231) = 3;\n    *(in_EAX + 0x244) = 0;\n    *(in_EAX + 0x25c) = *(*0x47dc0c + 0x40);\n    *(in_EAX + 0x235) = 1;\n    uVar3 = fcn.00403478();\n    *(in_EAX + 0xb8) = uVar3;\n    *(in_EAX + 0x2e1) = 0xff;\n    *(in_EAX + 0x2e4) = 0;\n    fcn.00448a68();\n    fcn.0042fc5c();\n    fcn.0042fbc4();\n    fcn.004361f8();\n    fcn.0044cf54();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = 0x32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 630
    },
    "00447fcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00447fcc(void)\n\n{\n    char cVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_5h;\n    \n    puStack16 = 0x447fd7;\n    *NULL = fcn.004038e4();\n    var_5h._0_1_ = extraout_DL;\n    if ((*(*NULL + 7) & 8) == 0) {\n        puStack16 = 0x447ff2;\n        fcn.0040c8e0();\n    }\n    uStack20 = 0x448096;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(stack0xfffffff8 + 0x8d) != '\\0') {\n        puStack16 = &stack0xfffffffc;\n        (**(*stack0xfffffff8 + 0xd4))();\n    }\n    fcn.0044a820();\n    cVar1 = fcn.004363bc();\n    if (cVar1 != '\\0') {\n        (**(*stack0xfffffff8 + 0xac))();\n    }\n    fcn.0044cf8c();\n    fcn.00403530();\n    fcn.00403530();\n    fcn.0040cbb8();\n    fcn.00447388();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x44809d;\n    uStack20 = 0x448095;\n    fcn.0040c9e0();\n    return;\n}\n",
        "token_count": 385
    },
    "004480b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004480b0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x2d2) != 0) {\n        uStack28 = 0x4480f1;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        (**(in_EAX + 0x2d0))();\n        *in_FS_OFFSET = uStack32;\n    }\n    if ((*(in_EAX + 0x2ec) & 2) != 0) {\n        puStack24 = 0x448126;\n        fcn.00448a68();\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0044812c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044812c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x2da) != 0) {\n        uStack28 = 0x44816d;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 0x2d8))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "004482d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004482d4(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4482e7;\n    fcn.00432aa8();\n    uStack24 = 0x44852a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x268) = 0;\n    *(in_EAX + 0x26c) = 0;\n    *(in_EAX + 0x270) = 0;\n    bVar1 = false;\n    *(in_EAX + 0x234) = *0x47d709 ^ 1;\n    puStack20 = &stack0xfffffffc;\n    fcn.00432218();\n    if ((*(in_EAX + 0x25c) != 0) && (0 < *(in_EAX + 0x270))) {\n        if (((*(in_EAX + 0x98) & 0x10) != 0) && (*(in_EAX + 0x25c) != *(*0x47dc0c + 0x40))) {\n            uVar2 = fcn.00420c1c(*(*0x47dc0c + 0x40), *(in_EAX + 0x25c));\n            sub.kernel32.dll_MulDiv(uVar2);\n            fcn.00420c24();\n        }\n        *(in_EAX + 0x25c) = *(*0x47dc0c + 0x40);\n        iVar3 = fcn.0044865c();\n        if (iVar3 != *(in_EAX + 0x270)) {\n            bVar1 = true;\n            fcn.0044783c();\n            fcn.00435bbc();\n            if ((*(in_EAX + 0x98) & 4) != 0) {\n                uVar2 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x268), iVar3, *(in_EAX + 0x270));\n                *(in_EAX + 0x268) = uVar2;\n            }\n            if ((*(in_EAX + 0x98) & 8) != 0) {\n                uVar2 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x26c) = uVar2;\n            }\n            if ((*(in_EAX + 0x98) & 0x20) != 0) {\n                uVar2 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x1fa), iVar3, *(in_EAX + 0x270));\n                *(in_EAX + 0x1fa) = uVar2;\n                uVar2 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x1fe) = uVar2;\n            }\n        }\n    }\n    if (0 < *(in_EAX + 0x268)) {\n        fcn.0042f4c4();\n    }\n    if (0 < *(in_EAX + 0x26c)) {\n        fcn.0042f508();\n    }\n    *(in_EAX + 0x98) = *0x448538;\n    if (!bVar1) {\n        fcn.0044783c();\n        fcn.00435bbc();\n    }\n    uVar2 = 0;\n    fcn.00430c4c(0);\n    *in_FS_OFFSET = uVar2;\n    fcn.00432ab0(0x448531);\n    return;\n}\n",
        "token_count": 839
    },
    "00448704": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00448704(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x47bfb4 == '\\0') {\n        uVar2 = fcn.004360b8();\n        iVar3 = sub.user32.dll_IsIconic(uVar2);\n        if (iVar3 != 0) {\n            (**(*in_EAX + 0x7c))();\n        }\n    }\n    else {\n        cVar1 = fcn.004363bc();\n        if ((cVar1 != '\\0') && (*(in_EAX + 0x229) != '\\x03')) {\n            uVar2 = fcn.0044a994();\n            uVar2 = fcn.004360b8(0x80, 1, uVar2);\n            sub.user32.dll_SendMessageA(uVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00448770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00448770(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x210) == '\\0') && (*(*(in_EAX + 0x208) + 0x10) == 0)) && (*(*(in_EAX + 0x20c) + 0x10) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 96
    },
    "00448aac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00448aac(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x448b05;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if ((*(in_EAX + 0x22f) == '\\x01') && (*(in_EAX + 0x57) != '\\0')) {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x448b0c;\n    uStack16 = 0x448b04;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 218
    },
    "00448b4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448b4c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0041dedc(arg_8h);\n    if (*(in_EAX + 0x250) != 0) {\n        (**(**(in_EAX + 0x250) + 0x2c))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00448b8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448b8c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t *piStack64;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = *param_2;\n    if (iVar5 < 0x47) {\n        if (iVar5 == 0x46) {\n            if (*0x448fbc == (*(in_EAX + 0x1c) & *0x448fb8)) {\n                if ((*(in_EAX + 0x230) - 1U < 2) && (*(in_EAX + 0x22b) != '\\x02')) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 2;\n                }\n                if (((*(in_EAX + 0x230) == '\\x01') || (*(in_EAX + 0x230) == '\\x03')) &&\n                   ((*(in_EAX + 0x229) == '\\x02' || (*(in_EAX + 0x229) == '\\x05')))) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 1;\n                }\n            }\n            goto code_r0x00448fa7;\n        }\n        if (iVar5 - 6U < 3) {\n            if (*0x46fad4 == '\\0') {\n                return;\n            }\n            if ((*param_2 == 7) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n                iVar5 = 0;\n                if (*(in_EAX + 0x22f) == '\\x02') {\n                    iVar1 = fcn.004493ec();\n                    if (iVar1 != 0) {\n                        fcn.004493ec();\n                        iVar5 = fcn.004360b8();\n                    }\n                }\n                else if ((*(in_EAX + 0x220) != 0) && (*(in_EAX + 0x220) != in_EAX)) {\n                    iVar5 = fcn.004360b8();\n                }\n                if (iVar5 != 0) {\n                    sub.user32.dll_SetFocus();\n                    return;\n                }\n            }\n            goto code_r0x00448fa7;\n        }\n        if (iVar5 == 0x2b) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (*(in_EAX + 0x248) != 0)) && (iVar5 = fcn.00442378(),  iVar5 != 0)) {\n                fcn.00421358();\n                *in_FS_OFFSET = &stack0xffffffd0;\n                iVar5 = sub.gdi32.dll_SaveDC();\n                piStack64 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc0;\n                fcn.00421c1c();\n                fcn.00421abc();\n                piVar2 = piVar2 & 0xffff0000 | *(piVar2 + 4);\n                puStack72 = 0x448dbd;\n                fcn.00443860(piVar2);\n                *in_FS_OFFSET = piVar2;\n                piStack64 = 0x448dd4;\n                fcn.00421c1c();\n                puStack72 = 0x448de4;\n                piStack64 = iVar5;\n                sub.gdi32.dll_RestoreDC();\n                return;\n            }\n            goto code_r0x00448fa7;\n        }\n        if (iVar5 == 0x2c) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (*(in_EAX + 0x248) != 0)) && (piVar3 = fcn.00442378(),  piVar3 != NULL)) {\n                fcn.004360b8();\n                uVar4 = sub.user32.dll_GetWindowDC();\n                *in_FS_OFFSET = &stack0xffffffcc;\n                fcn.00421358();\n                piStack64 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc0;\n                puStack72 = 0x448e87;\n                iVar5 = sub.gdi32.dll_SaveDC();\n                uStack76 = 0x448eec;\n                piStack80 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb0;\n                puStack72 = &stack0xfffffffc;\n                fcn.00421c1c();\n                fcn.00421abc();\n                piVar2 = piVar2 + 4;\n                (**(*piVar3 + 0x38))();\n                *in_FS_OFFSET = piVar2;\n                uStack76 = 0x448ef3;\n                piStack80 = 0x448ede;\n                fcn.00421c1c();\n                piStack80 = iVar5;\n                sub.gdi32.dll_RestoreDC(uVar4);\n                return;\n            }\n            goto code_r0x00448fa7;\n        }\n    }\n    else {\n        if (iVar5 == 0xb01a) {\n            if (*(in_EAX + 0xa0) != 0) {\n                fcn.0040372c();\n            }\n            goto code_r0x00448fa7;\n        }\n        if (iVar5 == 0xb01b) {\n            if (*(in_EAX + 0xa0) != 0) {\n                fcn.0040372c();\n            }\n            goto code_r0x00448fa7;\n        }\n    }\n    if (*param_2 == *0x47dc14) {\n        fcn.00430c4c(0);\n        fcn.00430c4c(0);\n        fcn.00430c4c(0);\n        fcn.00430c4c(0);\n        fcn.00430c4c(0);\n        piStack64 = 0x448fa7;\n        fcn.00430c4c(0);\n    }\ncode_r0x00448fa7:\n    piStack64 = 0x448fb1;\n    fcn.00433b68();\n    return;\n}\n",
        "token_count": 1476
    },
    "0044904c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044904c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    int32_t iStackY116;\n    uint *puStackY112;\n    uchar *puStackY108;\n    uint *puStackY104;\n    uint var_5ch;\n    uint var_4ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = *param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar1 != 0xf) {\n        if (iVar1 == 0x14) {\n            fcn.0042123c();\n            puStackY104 = 0x4490b6;\n            (**(*var_4h + 0x44))();\n            puStackY104 = &fcn.0044904c::var_5ch;\n            puStackY108 = var_8h[1];\n            puStackY112 = 0x4490c6;\n            sub.user32.dll_FillRect();\n            var_8h[3] = 1;\n        }\n        else if (iVar1 == 0x3f) {\n            puStackY104 = 0x4490db;\n            fcn.00448fc0(&stack0xfffffffc);\n            if (*(var_4h + 0x22f) == '\\x02') {\n                iVar1 = fcn.00449420();\n                if (iVar1 != 0) {\n                    puStackY104 = 0x4490fe;\n                    fcn.0044900c(&stack0xfffffffc);\n                }\n                fcn.0044623c();\n            }\n        }\n        else if (iVar1 == 0x84) {\n            puStackY104 = 0x44907f;\n            fcn.00448fc0(&stack0xfffffffc);\n            if (var_8h[3] == 1) {\n                var_8h[3] = -1;\n            }\n        }\n        else {\n            puStackY104 = 0x44918e;\n            fcn.00448fc0(&stack0xfffffffc);\n        }\n        return;\n    }\n    var_ch = param_2[1];\n    if (var_ch == 0) {\n        puStackY104 = in_EAX[0x95];\n        puStackY108 = 0x44913b;\n        iVar1 = sub.user32.dll_BeginPaint();\n        var_8h[1] = iVar1;\n    }\n    puStackY112 = 0x449181;\n    iStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    puStackY108 = &stack0xfffffffc;\n    fcn.00433e08();\n    *in_FS_OFFSET = iStackY116;\n    puStackY108 = 0x44918f;\n    if (var_ch == 0) {\n        puStackY112 = &fcn.0044904c::var_4ch;\n        iStackY116 = var_4h[0x95];\n        sub.user32.dll_EndPaint();\n    }\n    return;\n}\n",
        "token_count": 724
    },
    "00449268": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00449268(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    if (*(in_EAX + 0x91) == '\\0') {\n        *(in_EAX + 0x91) = 1;\n        uStack16 = 0x4492e5;\n        uStack20 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack20;\n        var_4h = in_EAX;\n        if (*(in_EAX + 0x18) != '\\0') {\n            if (in_EAX[0xc] == 0) {\n                puStack12 = &stack0xfffffffc;\n                (**(*in_EAX + 0x70))();\n            }\n            else {\n                (**(*in_EAX + 0x70))();\n            }\n            (**(*var_4h + 0x6c))();\n        }\n        *in_FS_OFFSET = uStack20;\n        *(var_4h + 0x91) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "004493ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004493ec(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) {\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x254), 0x229, 0, 0);\n        uVar1 = fcn.0042c9bc();\n    }\n    return uVar1;\n}\n",
        "token_count": 121
    },
    "00449420": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00449420(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) && (iVar1 = fcn.0044cee4(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0044ced0();\n            if (*(iVar2 + 0x22f) == '\\x01') {\n                iVar3 = iVar3 + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 181
    },
    "0044946c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044946c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) && (iVar1 = fcn.0044cee4(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0044ced0();\n            if ((*(iVar2 + 0x22f) == '\\x01') && (param_2 = param_2 + -1,  param_2 < 0)) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "00449618": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449618(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x22f)) {\n        if ((param_2 == '\\x01') && (*(in_EAX + 0x230) == '\\0')) {\n            fcn.0044997c();\n        }\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            fcn.00433734();\n        }\n        cVar1 = *(in_EAX + 0x22f);\n        *(in_EAX + 0x22f) = param_2;\n        if (((param_2 == '\\x02') || (cVar1 == '\\x02')) && (*(in_EAX + 0x1a5) == '\\0')) {\n            fcn.004499f8();\n            fcn.0042fc38();\n        }\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            fcn.004338d0();\n        }\n        if (param_2 == '\\x01') {\n            fcn.00448a68();\n        }\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "00449698": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00449698(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) {\n        iVar3 = 0;\n        if (*(in_EAX + 0x248) != NULL) {\n            iVar3 = (**(**(in_EAX + 0x248) + 0x34))();\n        }\n        uVar4 = 0;\n        if (*(in_EAX + 600) != 0) {\n            uVar4 = fcn.0043f5ec();\n        }\n        uVar1 = fcn.004360b8();\n        iVar2 = sub.user32.dll_GetMenu(uVar1);\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x254), 0x230, iVar3, uVar4);\n        if (iVar3 != iVar2) {\n            uVar4 = fcn.004360b8();\n            sub.user32.dll_DrawMenuBar(uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "00449760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00449760(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint arg_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((param_2 != 0) && (iVar2 = fcn.0044cee4(),  -1 < iVar2 + -1)) {\n        do {\n            var_4h = iVar2;\n            iVar2 = fcn.0044ced0();\n            if ((param_2 == *(iVar2 + 0x248)) && (iVar2 = fcn.0044ced0(),  in_EAX != iVar2)) {\n                var_ch = *(param_2 + 8);\n                var_8h._0_1_ = 0xb;\n                arg_ch = &var_ch;\n                arg_8h = 0;\n                fcn.004065fc();\n                fcn.0040b1a8(arg_8h, arg_ch);\n                fcn.00403ce4();\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != 0);\n    }\n    if (*(in_EAX + 0x248) != 0) {\n        fcn.00442a04();\n    }\n    if (((*(in_EAX + 0x1c) & 8) != 0) || ((param_2 != 0 && ((*(param_2 + 0x1c) & 8) != 0)))) {\n        param_2 = 0;\n    }\n    *(in_EAX + 0x248) = param_2;\n    if ((param_2 == 0) || ((fcn.0041db3c(),  (*(in_EAX + 0x1c) & 0x10) == 0 && (*(in_EAX + 0x229) == '\\x03')))) {\n        cVar1 = fcn.004363bc();\n        if (cVar1 != '\\0') {\n            uVar4 = fcn.004360b8(0);\n            sub.user32.dll_SetMenu(uVar4);\n        }\n    }\n    else if (((*(*(in_EAX + 0x248) + 0x5c) == '\\0') && (*(in_EAX + 0x22f) != '\\x01')) ||\n            ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        cVar1 = fcn.004363bc();\n        if (cVar1 != '\\0') {\n            iVar2 = (**(**(in_EAX + 0x248) + 0x34))();\n            arg_8h = fcn.004360b8();\n            iVar3 = sub.user32.dll_GetMenu();\n            if (iVar2 != iVar3) {\n                (**(**(in_EAX + 0x248) + 0x34))();\n                arg_8h = fcn.004360b8();\n                sub.user32.dll_SetMenu();\n            }\n            fcn.004360b8();\n            fcn.00442a04();\n        }\n    }\n    else if ((*(in_EAX + 0x22f) != '\\x01') && (cVar1 = fcn.004363bc(),  cVar1 != '\\0')) {\n        uVar4 = fcn.004360b8(0);\n        sub.user32.dll_SetMenu(uVar4);\n    }\n    if (*(in_EAX + 0x22e) != '\\0') {\n        fcn.0044a820();\n    }\n    fcn.00449698();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 917
    },
    "00449998": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00449998(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x25c) != 0;\n}\n",
        "token_count": 49
    },
    "00449a07": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00449a07(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    \n    puVar1 = in_EAX + -0x743c3d75;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + in_EAX;\n    uVar3 = *(unaff_EBX + -0x75);\n    *(unaff_EBX + -0x75) = uVar3 << 6 | CONCAT11(CARRY1(uVar2, in_EAX), uVar3) >> 3;\n    fcn.0043571c();\n    if (*(unaff_EBX + 0x1a5) == '\\0') {\n        if (*(unaff_EBX + 0x70) == -0x7ffffff1) {\n            fcn.004499f8();\n            fcn.0042fc38();\n        }\n    }\n    else {\n        iVar4 = fcn.004499f8();\n        if (iVar4 == *(unaff_EBX + 0x70)) {\n            fcn.0042fc38();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "00449a94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449a94(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (((param_2 != *(in_EAX + 0x22b)) && (*(in_EAX + 0x22b) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) &&\n       (*(in_EAX + 0x1a6) != '\\0')) {\n        uVar1 = fcn.004360b8(*(param_2 * 4 + 0x46fb3c));\n        sub.user32.dll_ShowWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00449ad4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00449ad4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack20;\n    \n    if ((*(in_EAX + 0x231) != '\\0') && (*(*0x47dc08 + 0x44) != 0)) {\n        iVar10 = 0;\n        if (*(in_EAX + 0x231) == '\\x02') {\n            iVar10 = fcn.004494ec();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if ((*(in_EAX + 0x231) == '\\x03') && (*(*0x47dc0c + 0x68) != 0)) {\n            iVar10 = fcn.004494ec();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if (*(in_EAX + 0x231) == '\\x01') {\n            iVar10 = fcn.0044cea0();\n            iVar10 = *(iVar10 + 4);\n        }\n        iVar1 = fcn.004494ec();\n        iVar1 = *(iVar1 + 4);\n        iStack20 = fcn.0044ceb4();\n        if (-1 < iStack20 + -1) {\n            do {\n                iVar2 = fcn.0044cea0();\n                if (((*(iVar2 + 4) == iVar10) && (iVar10 != iVar1)) && (iVar2 = fcn.0044ceb4(),  -1 < iVar2 + -1)) {\n                    iVar11 = 0;\n                    do {\n                        iVar3 = fcn.0044cea0(iVar10, iVar1, iVar11);\n                        if (*(iVar3 + 4) == iVar1) {\n                            if (*(in_EAX + 0x8c) == '\\x04') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.0044cea0(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.0044cbd4();\n                                fcn.0044cea0(iVar4);\n                                iVar5 = fcn.0044cbb8();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.0044cea0(iVar4 + iVar3);\n                                fcn.0044cba0();\n                                fcn.0044cea0();\n                                fcn.0044cbec();\n                                (**(*in_EAX + 0x84))();\n                            }\n                            else if (*(in_EAX + 0x8c) == '\\x06') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.0044cea0(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.0044cbd4();\n                                fcn.0044cea0(iVar4);\n                                iVar5 = fcn.0044cbb8();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.0044cea0(iVar4 + iVar3);\n                                fcn.0044cba0();\n                                fcn.0044cea0();\n                                fcn.0044cbec();\n                                (**(*in_EAX + 0x84))();\n                            }\n                            else {\n                                fcn.0044cea0(iVar10, iVar1, iVar11);\n                                iVar4 = fcn.0044cba0();\n                                iVar3 = in_EAX[0x10];\n                                fcn.0044cea0();\n                                iVar5 = fcn.0044cba0();\n                                fcn.0044cea0();\n                                iVar7 = fcn.0044cba0();\n                                fcn.0044cea0();\n                                iVar8 = fcn.0044cbec();\n                                if (iVar7 + iVar8 < in_EAX[0x12] + ((iVar4 + iVar3) - iVar5)) {\n                                    fcn.0044cea0();\n                                    fcn.0044cba0();\n                                    fcn.0044cea0();\n                                    fcn.0044cbec();\n                                }\n                                fcn.0044cea0();\n                                iVar3 = fcn.0044cbd4();\n                                iVar3 = iVar3 + in_EAX[0x11];\n                                fcn.0044cea0();\n                                iVar4 = fcn.0044cbd4();\n                                fcn.0044cea0();\n                                iVar5 = fcn.0044cbd4();\n                                fcn.0044cea0();\n                                iVar7 = fcn.0044cbb8();\n                                if (iVar5 + iVar7 < (iVar3 - iVar4) + in_EAX[0x13]) {\n                                    fcn.0044cea0();\n                                    uVar9 = fcn.0044cbd4();\n                                    fcn.0044cea0(uVar9);\n                                    fcn.0044cbb8();\n                                }\n                                (**(*in_EAX + 0x84))(in_EAX[0x13], in_EAX[0x12]);\n                            }\n                        }\n                        iVar11 = iVar11 + 1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                iStack20 = iStack20 + -1;\n            } while (iStack20 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1293
    },
    "00449e45": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449e45(uint param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint8_t uVar2;\n    \n    *(unaff_EBP + 0x1b) = *(unaff_EBP + 0x1b) + (param_2 >> 8);\n    if (*(unaff_EDI + 400) == 0) {\n        *(unaff_ESI + 0x1c) = *(*0x47dc08 + 0x30);\n        *(unaff_ESI + 4) = *(unaff_ESI + 4) & 0xbffcffff;\n    }\n    *(unaff_ESI + 0x24) = 8;\n    if (((*(unaff_EDI + 0x1c) & 0x10) == 0) || (*(unaff_EDI + 0x30) != 0)) {\n        if (*(unaff_EDI + 0x230) - 1U < 2) {\n            *(unaff_ESI + 0xc) = 0x80000000;\n            *(unaff_ESI + 0x10) = 0x80000000;\n        }\n        uVar1 = *(unaff_EDI + 0x228);\n        uVar2 = *(unaff_EDI + 0x229);\n        if ((*(unaff_EDI + 0x22f) == '\\x01') && ((uVar2 == 0 || (uVar2 == 3)))) {\n            uVar2 = 2;\n        }\n        switch(uVar2) {\n        case 0:\n            uVar1 = *0x44a038;\n            if ((*(unaff_EDI + 0x30) == 0) && (*(unaff_EDI + 400) == 0)) {\n                *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x80000000;\n                uVar1 = *0x44a038;\n            }\n            break;\n        case 1:\n        case 4:\n            *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0xc00000;\n            break;\n        case 2:\n        case 5:\n            *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0xc40000;\n            if ((*(unaff_EDI + 0x230) == '\\x01') || (*(unaff_EDI + 0x230) == '\\x03')) {\n                *(unaff_ESI + 0x14) = 0x80000000;\n                *(unaff_ESI + 0x18) = 0x80000000;\n            }\n            break;\n        case 3:\n            *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x80c00000;\n            *(unaff_ESI + 8) = 0x101;\n            fcn.00433034();\n            if (**0x47bfb4 == '\\0') {\n                *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x400080;\n            }\n            uVar1 = *0x44a03c & uVar1;\n            *(unaff_ESI + 0x24) = 0x2808;\n        }\n        if (uVar2 - 4 < 2) {\n            *(unaff_ESI + 8) = 0x80;\n            fcn.00433034();\n            uVar1 = *0x44a040 & uVar1;\n        }\n        if (uVar2 < 3) {\n            if ((*(unaff_EDI + 0x22f) != '\\x01') || ((uVar1 & 1) != 0)) {\n                if ((uVar1 & 2) != 0) {\n                    *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x20000;\n                }\n                if ((uVar1 & 4) != 0) {\n                    *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x10000;\n                }\n            }\n            if (*(unaff_EDI + 0x22b) == '\\x01') {\n                *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x20000000;\n            }\n            else if (*(unaff_EDI + 0x22b) == '\\x02') {\n                *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x1000000;\n            }\n        }\n        else {\n            *(unaff_EDI + 0x22b) = 0;\n        }\n        if ((uVar1 & 1) != 0) {\n            *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x80000;\n        }\n        if ((uVar1 & 8) != 0) {\n            *(unaff_ESI + 8) = *(unaff_ESI + 8) | 0x400;\n        }\n        if ((*(unaff_EDI + 0x1d) & 2) != 0) {\n            *(unaff_ESI + 4) = *(unaff_ESI + 4) & 0xff3fffff;\n        }\n        if (*(unaff_EDI + 0x22f) == '\\x01') {\n            *(unaff_ESI + 0x28) = 0x406d98;\n        }\n    }\n    else {\n        *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0xcf0000;\n    }\n    return;\n}\n",
        "token_count": 1310
    },
    "00449e89": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00449e89(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint8_t uVar2;\n    \n    if (in_AL < 2) {\n        *(unaff_ESI + 0xc) = 0x80000000;\n        *(unaff_ESI + 0x10) = 0x80000000;\n    }\n    uVar1 = *(unaff_EDI + 0x228);\n    uVar2 = *(unaff_EDI + 0x229);\n    if ((*(unaff_EDI + 0x22f) == '\\x01') && ((uVar2 == 0 || (uVar2 == 3)))) {\n        uVar2 = 2;\n    }\n    // switch table (6 cases) at 0x449ed7\n    switch(uVar2) {\n    case 0:\n        uVar1 = *0x44a038;\n        if ((*(unaff_EDI + 0x30) == 0) && (*(unaff_EDI + 400) == 0)) {\n            *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x80000000;\n            uVar1 = *0x44a038;\n        }\n        break;\n    case 1:\n    case 4:\n        *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0xc00000;\n        break;\n    case 2:\n    case 5:\n        *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0xc40000;\n        if ((*(unaff_EDI + 0x230) == '\\x01') || (*(unaff_EDI + 0x230) == '\\x03')) {\n            *(unaff_ESI + 0x14) = 0x80000000;\n            *(unaff_ESI + 0x18) = 0x80000000;\n        }\n        break;\n    case 3:\n        *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x80c00000;\n        *(unaff_ESI + 8) = 0x101;\n        fcn.00433034();\n        if (**0x47bfb4 == '\\0') {\n            *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x400080;\n        }\n        uVar1 = *0x44a03c & uVar1;\n        *(unaff_ESI + 0x24) = 0x2808;\n    }\n    if (uVar2 - 4 < 2) {\n        *(unaff_ESI + 8) = 0x80;\n        fcn.00433034();\n        uVar1 = *0x44a040 & uVar1;\n    }\n    if (uVar2 < 3) {\n        if ((*(unaff_EDI + 0x22f) != '\\x01') || ((uVar1 & 1) != 0)) {\n            if ((uVar1 & 2) != 0) {\n                *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x20000;\n            }\n            if ((uVar1 & 4) != 0) {\n                *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x10000;\n            }\n        }\n        if (*(unaff_EDI + 0x22b) == '\\x01') {\n            *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x20000000;\n        }\n        else if (*(unaff_EDI + 0x22b) == '\\x02') {\n            *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x1000000;\n        }\n    }\n    else {\n        *(unaff_EDI + 0x22b) = 0;\n    }\n    if ((uVar1 & 1) != 0) {\n        *(unaff_ESI + 4) = *(unaff_ESI + 4) | 0x80000;\n    }\n    if ((uVar1 & 8) != 0) {\n        *(unaff_ESI + 8) = *(unaff_ESI + 8) | 0x400;\n    }\n    if ((*(unaff_EDI + 0x1d) & 2) != 0) {\n        *(unaff_ESI + 4) = *(unaff_ESI + 4) & 0xff3fffff;\n    }\n    if (*(unaff_EDI + 0x22f) == '\\x01') {\n        *(unaff_ESI + 0x28) = 0x406d98;\n    }\n    return;\n}\n",
        "token_count": 1104
    },
    "0044a184": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a184(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *extraout_EDX;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff20;\n    uint uStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t var_a8h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack200 = &stack0xfffffffc;\n    uStack204 = 0x44a2ad;\n    uStack208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack208;\n    if ((*(in_EAX + 0x22f) == '\\x01') && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n        if ((*(*0x47dc08 + 0x44) == 0) || (puStack200 = &stack0xfffffffc,  *(*(*0x47dc08 + 0x44) + 0x254) == 0)) {\n            puStack200 = &stack0xfffffffc;\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n            param_2 = extraout_EDX;\n        }\n        var_24h = param_2 + 0x13;\n        var_20h = *param_2;\n        var_1ch = *0x47d714;\n        var_18h = param_2[3];\n        var_14h = param_2[4];\n        var_10h = param_2[5];\n        var_ch = param_2[6];\n        var_8h = param_2[1];\n        var_4h = param_2[8];\n        in_stack_ffffff20 = *(*(*0x47dc08 + 0x44) + 0x254);\n        uVar1 = sub.user32.dll_SendMessageA(in_stack_ffffff20, 0x220, 0, &var_24h);\n        *(in_EAX + 0x180) = uVar1;\n        *(in_EAX + 0x2ec) = *(in_EAX + 0x2ec) | 0x10;\n    }\n    else {\n        puVar3 = &var_b0h;\n        for (iVar2 = 0x23; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_a8h = var_a8h & 0xfff7ffff;\n        fcn.00433360();\n        *(in_EAX + 0x2ec) = *(in_EAX + 0x2ec) & 0xef;\n    }\n    fcn.0044c628();\n    *in_FS_OFFSET = in_stack_ffffff20;\n    fcn.00404308(0x44a2b4);\n    return;\n}\n",
        "token_count": 763
    },
    "0044a488": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044a488(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *0x46fad8 = *0x46fad8 + 1;\n    if (*(in_EAX + 0x250) == 0) {\n        if (in_EAX == param_2) {\n            *(in_EAX + 0x220) = 0;\n        }\n        else {\n            *(in_EAX + 0x220) = param_2;\n        }\n    }\n    *(*0x47dc0c + 100) = param_2;\n    *(*0x47dc0c + 0x68) = in_EAX;\n    fcn.00415468();\n    fcn.00415344();\n    cVar2 = fcn.004036bc();\n    if (cVar2 == '\\0') {\n        *(*0x47dc0c + 0x6c) = 0;\n    }\n    else {\n        *(*0x47dc0c + 0x6c) = in_EAX;\n        fcn.00415468();\n        fcn.00415344();\n    }\n    if ((*(param_2 + 0x54) & 0x20) != 0) {\n        return 0;\n    }\n    *(param_2 + 0x54) = *(param_2 + 0x54) | *0x44a714;\n    iVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (in_EAX != *(*0x47dc0c + 0x78)) {\n        if (*(*0x47dc0c + 0x78) != 0) {\n            fcn.004360b8();\n            *(*0x47dc0c + 0x78) = 0;\n            cVar2 = fcn.0044649c();\n            if (cVar2 == '\\0') {\n                fcn.00403d90();\n                return 0;\n            }\n        }\n        *(*0x47dc0c + 0x78) = in_EAX;\n        fcn.004360b8();\n        cVar2 = fcn.0044649c();\n        if (cVar2 == '\\0') {\n            fcn.00403d90();\n            return 0;\n        }\n    }\n    if (*(in_EAX + 0x224) == 0) {\n        *(in_EAX + 0x224) = in_EAX;\n    }\n    if (*(in_EAX + 0x224) != param_2) {\n        while ((*(in_EAX + 0x224) != 0 && (cVar2 = fcn.00432cec(),  cVar2 == '\\0'))) {\n            fcn.004360b8();\n            *(in_EAX + 0x224) = *(*(in_EAX + 0x224) + 0x30);\n            cVar2 = fcn.0044649c();\n            if (cVar2 == '\\0') {\n                fcn.00403d90();\n                return 0;\n            }\n        }\n        while (iVar4 = param_2,  *(in_EAX + 0x224) != param_2) {\n            do {\n                iVar3 = iVar4;\n                iVar4 = *(iVar3 + 0x30);\n            } while (iVar4 != *(in_EAX + 0x224));\n            *(in_EAX + 0x224) = iVar3;\n            fcn.004360b8();\n            cVar2 = fcn.0044649c();\n            if (cVar2 == '\\0') {\n                fcn.00403d90();\n                return 0;\n            }\n        }\n        for (piVar1 = *(param_2 + 0x30); piVar1 != NULL; piVar1 = piVar1[0xc]) {\n            cVar2 = fcn.004036bc();\n            if (cVar2 != '\\0') {\n                (**(*piVar1 + 200))();\n            }\n        }\n        fcn.00430c4c(param_2);\n        if ((*(in_EAX + 0x27c) != 0) && (*(in_EAX + 0x27c) != param_2)) {\n            iVar4 = 0;\n            fcn.00430c4c(0);\n        }\n    }\n    *in_FS_OFFSET = iVar4;\n    *(param_2 + 0x54) = ~*0x44a714 & *(param_2 + 0x54);\n    return param_2;\n}\n",
        "token_count": 1063
    },
    "0044a71c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044a71c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    uVar1 = fcn.004360b8();\n    sub.user32.dll_SetFocus(uVar1);\n    iVar2 = fcn.004360b8();\n    iVar3 = sub.user32.dll_GetFocus();\n    if (iVar2 == iVar3) {\n        fcn.00430c4c(0);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0044a76c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a76c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x22e) = param_2;\n    if (*(in_EAX + 0x27c) != 0) {\n        fcn.00430c4c(0);\n    }\n    if (param_2 != '\\0') {\n        if ((*(in_EAX + 0x220) == 0) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n            fcn.004364e0(0, 1);\n            fcn.0044a364();\n        }\n        fcn.0044a820();\n        fcn.0044a71c();\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "0044a7d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a7d0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x22e) != '\\0') && (*(in_EAX + 0x220) != 0)) {\n        fcn.00430c4c(param_2);\n    }\n    if (*(in_EAX + 0x22f) == '\\x02') {\n        iVar1 = fcn.004493ec();\n        if (iVar1 != 0) {\n            fcn.004493ec();\n            fcn.0044a7d0();\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0044a820": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a820(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((((*(in_EAX + 0x2ec) & 8) == 0) && (*(*0x47dc08 + 0x44) != 0)) && (*(*(*0x47dc08 + 0x44) + 0x248) != 0)) &&\n       ((in_EAX != *(*0x47dc08 + 0x44) && ((*(in_EAX + 0x22f) == '\\x01' || (*(*(*0x47dc08 + 0x44) + 0x22f) != '\\x02'))))\n       )) {\n        if (param_2 == '\\0') {\n            fcn.00442fe4();\n        }\n        else {\n            fcn.00442fc8();\n        }\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "0044a9b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044a9b0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x44a9c9;\n    fcn.004218e0();\n    uStack24 = 0x44aa5e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x44a9e7;\n    puStack20 = &stack0xfffffffc;\n    fcn.00421c1c();\n    uStack36 = 0x44aa3b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(in_EAX + 0x250) == 0) {\n        puStack32 = &stack0xfffffffc;\n        fcn.0040372c();\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        (**(**(in_EAX + 0x250) + 0x28))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x44aa42;\n    uStack36 = 0x44aa3a;\n    fcn.00421c1c();\n    return;\n}\n",
        "token_count": 329
    },
    "0044ad68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ad68(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (((*(param_2 + 4) == 2) && (*(in_EAX + 0x9b) == '\\x01')) && ((*(in_EAX + 7) & 0x10) == 0)) {\n        uVar1 = fcn.004360b8();\n        iVar2 = sub.user32.dll_IsIconic(uVar1);\n        if (iVar2 == 0) {\n            uVar1 = fcn.004360b8(0, 0, 0, 0, 0, 7);\n            sub.user32.dll_SetWindowPos(uVar1);\n            uVar1 = fcn.004360b8(0xa2, *(param_2 + 4), *(param_2 + 8));\n            sub.user32.dll_PostMessageA(uVar1);\n            if (*(in_EAX + 0x22e) == '\\0') {\n                return;\n            }\n            (**(*in_EAX + 0x54))();\n            fcn.00430140();\n            return;\n        }\n    }\n    fcn.0043116c();\n    return;\n}\n",
        "token_count": 289
    },
    "0044aedc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044aedc(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44af77;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x248) != 0) {\n        iVar2 = 0;\n        if ((*(param_2 + 6) != -1) || (puVar1 = &stack0xfffffffc,  *(param_2 + 4) != 0)) {\n            puVar1 = &stack0xfffffffc;\n            if ((*(param_2 + 6) & 0x10) != 0) {\n                in_stack_ffffffd8 = *(param_2 + 8);\n                sub.user32.dll_GetSubMenu(in_stack_ffffffd8, *(param_2 + 4));\n                puVar1 = puStack24;\n            }\n            puStack24 = puVar1;\n            iVar2 = fcn.00442378();\n            puVar1 = puStack24;\n        }\n        puStack24 = puVar1;\n        if (iVar2 == 0) {\n            fcn.0044fb1c();\n            puVar1 = puStack24;\n        }\n        else {\n            fcn.0042cc20();\n            fcn.0044fb1c();\n            puVar1 = puStack24;\n        }\n    }\n    puStack24 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x44af7e;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 444
    },
    "0044b26c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044b26c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x150) == '\\x01') && (*(in_EAX + 0x158) != 0)) {\n        uVar1 = 1;\n    }\n    else if ((*(in_EAX + 0x150) == '\\0') && (*(in_EAX + 0x154) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "0044b2d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044b2d8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_10h = 0;\n    uStack56 = 0x44b434;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_4h = param_2;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(*(param_2 + 8) + 4) == 1) {\n            puStack52 = &stack0xfffffffc;\n            for (iVar2 = fcn.0042c9bc(); iVar2 != 0; iVar2 = *(iVar2 + 0x30)) {\n                cVar1 = fcn.0044b26c();\n                if (cVar1 != '\\0') break;\n            }\n            if (iVar2 == 0) goto code_r0x0044b41e;\n            fcn.0044b2a4(&fcn.0044b2d8::var_10h);\n            fcn.00413c30();\n            fcn.0042f5c0();\n            fcn.0040728c();\n        }\n        else {\n            var_9h._0_1_ = '\\x01';\n            *NULL = fcn.0044b22c(&stack0xfffffffc);\n            if (*NULL == 0) {\n                *NULL = fcn.0044b22c(&stack0xfffffffc);\n            }\n            fcn.00413c30();\n            fcn.0042f5c0();\n            fcn.0040728c();\n        }\n        if (((*(in_EAX + 0x8a) & 8) == 0) || (var_9h != '\\x01')) {\n            if (var_9h == '\\x01') {\n                fcn.0044f7b8();\n            }\n            else if (var_9h == '\\0') {\n                fcn.0044f750();\n            }\n        }\n        else {\n            fcn.0044f820();\n            fcn.0044f820();\n        }\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        (**(*in_EAX + -0x10))();\n    }\ncode_r0x0044b41e:\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x44b43b;\n    uStack56 = 0x44b433;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 680
    },
    "0044b634": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044b634(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    int32_t iStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack32 = 0x44bb9e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 7) & 0x10) == 0) && (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0xbb) & 4) != 0)) {\n        puStack40 = 0x44b675;\n        fcn.004065fc();\n        puStack40 = 0x44b684;\n        fcn.0040b16c();\n        puStack40 = 0x44b689;\n        fcn.00403ce4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    puStack40 = 0x44b693;\n    fcn.0044fc0c();\n    *(in_EAX + 0xbb) = *(in_EAX + 0xbb) | 4;\n    uStack44 = 0x44bb81;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(in_EAX + 0x1a6) == '\\0') {\n            iStack56 = 0x44ba88;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040372c();\n            *in_FS_OFFSET = uStack60;\n            if (*(*0x47dc0c + 0x6c) == in_EAX) {\n                puStack52 = 0x44bab6;\n                fcn.0044a820();\n            }\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                puStack52 = 0x44baca;\n                fcn.00433734();\n            }\n            else if ((*(in_EAX + 0xbb) & 8) == 0) {\n                iVar6 = 0;\n                puStack52 = 0x44bb04;\n                iVar4 = fcn.004360b8();\n                puStack52 = 0x44bb0b;\n                iVar5 = sub.user32.dll_GetActiveWindow();\n                if (iVar4 == iVar5) {\n                    puStack52 = 0x44bb17;\n                    puStack52 = fcn.004360b8();\n                    iStack56 = 0x44bb1d;\n                    iVar4 = sub.user32.dll_IsIconic();\n                    if (iVar4 == 0) {\n                        iStack56 = 0x44bb29;\n                        fcn.004360b8();\n                        iStack56 = 0x44bb2e;\n                        iVar6 = fcn.00446460();\n                    }\n                }\n                if (iVar6 == 0) {\n                    iStack56 = 0;\n                    uStack60 = 0x44bb63;\n                    uStack60 = fcn.004360b8();\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    iStack56 = 0x97;\n                    uStack60 = 0;\n                    uVar3 = fcn.004360b8(0, 0, 0, 0);\n                    sub.user32.dll_SetWindowPos(uVar3);\n                    sub.user32.dll_SetActiveWindow(iVar6);\n                }\n            }\n            else {\n                puStack52 = 0x97;\n                iStack56 = 0;\n                uStack60 = 0;\n                uVar3 = fcn.004360b8(0, 0, 0);\n                sub.user32.dll_SetWindowPos(uVar3);\n            }\n        }\n        else {\n            iStack56 = 0x44b6ec;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040372c();\n            *in_FS_OFFSET = uStack60;\n            if ((*(in_EAX + 0x8c) == '\\x04') || ((*(in_EAX + 0x8c) == '\\x06' && (*(in_EAX + 0x22f) == '\\x01')))) {\n                if (*(in_EAX + 0x22f) == '\\x01') {\n                    puStack52 = 0x44b748;\n                    fcn.0042f4ac();\n                    puStack52 = 0x44b764;\n                    fcn.0042f4f0();\n                }\n                else {\n                    puStack52 = 0x44b77d;\n                    fcn.0044ce64();\n                    puStack52 = 0x44b796;\n                    fcn.0044ce58();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x44b7cc;\n                (**(*in_EAX + 0x84))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    iStack56 = 0x44b7e1;\n                    fcn.00449ad4();\n                }\n            }\n            else if (*(in_EAX + 0x8c) - 6U < 2) {\n                iVar4 = *(*0x47dc08 + 0x44);\n                if (*(in_EAX + 0x8c) == '\\a') {\n                    puStack52 = 0x44b822;\n                    cVar2 = fcn.004036bc();\n                    if (cVar2 != '\\0') {\n                        iVar4 = in_EAX[1];\n                    }\n                }\n                if (iVar4 == 0) {\n                    puStack52 = 0x44b862;\n                    fcn.0044ce64();\n                    puStack52 = 0x44b87b;\n                    fcn.0044ce58();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x44b8b1;\n                (**(*in_EAX + 0x84))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    iStack56 = 0x44b8c6;\n                    fcn.00449ad4();\n                }\n            }\n            else if (*(in_EAX + 0x8c) == '\\x05') {\n                if (*(in_EAX + 0x22f) == '\\x01') {\n                    puStack52 = 0x44b8ec;\n                    fcn.0042f4ac();\n                    puStack52 = 0x44b908;\n                    fcn.0042f4f0();\n                }\n                else {\n                    puStack52 = 0x44b921;\n                    fcn.0044ce94();\n                    puStack52 = 0x44b93a;\n                    fcn.0044ce88();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x44b970;\n                (**(*in_EAX + 0x84))();\n            }\n            *(in_EAX + 0x8c) = 0;\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                if (*(in_EAX + 0x22b) == '\\x02') {\n                    iStack56 = 0;\n                    uStack60 = 0x44b9a0;\n                    uStack60 = fcn.004360b8();\n                    sub.user32.dll_SendMessageA(*(*(*0x47dc08 + 0x44) + 0x254), 0x223);\n                    uVar3 = fcn.004360b8(3);\n                    sub.user32.dll_ShowWindow(uVar3);\n                }\n                else {\n                    iStack56 = *(*(in_EAX + 0x22b) * 4 + 0x46fb54);\n                    uStack60 = 0x44b9e6;\n                    uStack60 = fcn.004360b8();\n                    sub.user32.dll_ShowWindow();\n                    uVar3 = fcn.004360b8(5, 0, in_EAX[0x12] | in_EAX[0x13] << 0x10);\n                    sub.user32.dll_CallWindowProcA(0x406d98, uVar3);\n                    fcn.0042fcf8();\n                }\n                uStack60 = *(*(*0x47dc08 + 0x44) + 0x254);\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                iStack56 = *(*(in_EAX + 0x22b) * 4 + 0x46fb54);\n                uStack60 = 0x44ba59;\n                uStack60 = fcn.004360b8();\n                sub.user32.dll_ShowWindow();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack60;\n    *(in_EAX + 0xbb) = *(in_EAX + 0xbb) & 0xfb;\n    return;\n}\n",
        "token_count": 2233
    },
    "0044bc2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044bc2c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x59) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            puStack16 = 0x44bc58;\n            fcn.00420868();\n            uStack20 = 0x44bc8a;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            (**(**(in_EAX + 0x68) + 8))();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x44bc91;\n            uStack20 = 0x44bc89;\n            fcn.00403530();\n            return;\n        }\n        puStack16 = 0x44bc4a;\n        (**(**(in_EAX + 0x68) + 8))();\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "0044bcc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044bcc4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char cStack12;\n    \n    if ((*(in_EAX + 0xbb) & 8) == 0) {\n        cVar1 = (**(*in_EAX + 0xe0))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                if ((*(in_EAX + 0x8a) & 2) == 0) {\n                    cStack12 = '\\0';\n                }\n                else {\n                    cStack12 = '\\x03';\n                }\n            }\n            else {\n                cStack12 = '\\x01';\n            }\n            fcn.0040372c();\n            if (cStack12 != '\\0') {\n                if (in_EAX == *(*0x47dc08 + 0x44)) {\n                    fcn.0044f33c();\n                }\n                else if (cStack12 == '\\x01') {\n                    fcn.0044be64();\n                }\n                else if (cStack12 == '\\x03') {\n                    fcn.00449a94();\n                }\n                else {\n                    fcn.0044bf00();\n                }\n            }\n        }\n    }\n    else {\n        in_EAX[0x93] = 2;\n    }\n    return;\n}\n",
        "token_count": 307
    },
    "0044be84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044be84(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x44bef2;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x22e) != '\\0') goto code_r0x0044bedc;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x57) == '\\0') {\ncode_r0x0044beb4:\n        puStack16 = puVar1;\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n    }\n    else {\n        cVar2 = (**(*in_EAX + 0x50))();\n        puVar1 = puStack16;\n        if (cVar2 == '\\0') goto code_r0x0044beb4;\n    }\n    fcn.0044a71c();\ncode_r0x0044bedc:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x44bef9;\n    uStack20 = 0x44bef1;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 332
    },
    "0044bf1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044bf1c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x44c1ac;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x44bf44;\n    fcn.0042e308();\n    if (*(in_EAX + 0x57) == '\\0') {\n        puStack60 = 0x44bf55;\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (((cVar1 != '\\0') && ((*(in_EAX + 0xbb) & 8) == 0)) && (*(in_EAX + 0x22f) != '\\x01')) goto code_r0x0044bf92;\n    }\n    puStack60 = 0x44bf7e;\n    fcn.004065fc();\n    puStack60 = 0x44bf8d;\n    fcn.0040b16c();\n    puStack60 = 0x44bf92;\n    fcn.00403ce4();\ncode_r0x0044bf92:\n    puStack60 = 0x44bf97;\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        puStack60 = NULL;\n        uStack64 = 0;\n        uStack68 = 0x1f;\n        puStack72 = 0x44bfa6;\n        puStack72 = sub.user32.dll_GetCapture();\n        uStack76 = 0x44bfac;\n        sub.user32.dll_SendMessageA();\n    }\n    puStack60 = 0x44bfb1;\n    sub.user32.dll_ReleaseCapture();\n    *(in_EAX + 0xbb) = *(in_EAX + 0xbb) | 8;\n    puStack60 = 0x44bfc0;\n    sub.user32.dll_GetActiveWindow();\n    puStack60 = 0x44bfe2;\n    fcn.00415344();\n    *(*0x47dc0c + 0x78) = in_EAX;\n    puStack60 = 0x44c006;\n    fcn.0044d384();\n    puStack60 = 0x44c018;\n    fcn.00446310();\n    uStack64 = 0x44c18c;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x44c031;\n    puStack60 = &stack0xfffffffc;\n    fcn.0044be6c();\n    uStack76 = 0x44c0eb;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    uVar3 = fcn.004360b8(0xb000, 0, 0);\n    sub.user32.dll_SendMessageA(uVar3);\n    in_EAX[0x93] = 0;\n    do {\n        fcn.0044f0bc();\n        if (*(*0x47dc08 + 0x9c) == '\\0') {\n            if (in_EAX[0x93] != 0) {\n                fcn.0044bdcc();\n            }\n        }\n        else {\n            in_EAX[0x93] = 2;\n        }\n    } while (in_EAX[0x93] == 0);\n    uVar3 = fcn.004360b8(0xb001, 0, 0);\n    sub.user32.dll_SendMessageA();\n    fcn.004360b8();\n    sub.user32.dll_GetActiveWindow();\n    *in_FS_OFFSET = uVar3;\n    fcn.0044be64(0x44c0f2);\n    return;\n}\n",
        "token_count": 995
    },
    "0044c1bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c1bc(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.00432f40(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00432f04();\n            if (((*(piVar3 + 0x51) & 0x80) != 0) && (*(piVar3 + 0x57) != '\\0')) {\n                (**(*piVar3 + 0x78))();\n            }\n            cVar1 = fcn.004036bc();\n            if (cVar1 != '\\0') {\n                fcn.0044c1bc(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "0044c22c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044c22c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (((*(in_EAX + 7) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        (**(*in_EAX + 0x78))();\n        if ((in_EAX[0x92] != 0) && (iVar1 = fcn.00440f24(),  -1 < iVar1 + -1)) {\n            do {\n                piVar2 = fcn.00440f34();\n                if (*(piVar2 + 0x3e) != '\\0') {\n                    (**(*piVar2 + 0x40))();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.0044c1bc(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "0044c304": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c304(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.00432f40(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00432f04();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.0044c2d4(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004036bc(),  cVar1 != '\\0' && (cVar1 = fcn.0044c304(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "0044c380": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c380(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        cVar1 = fcn.0044c2d4(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.0044c2d4(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.0044c304(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "0044c404": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c404(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.00432f40(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00432f04();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.0044c3d4(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004036bc(),  cVar1 != '\\0' && (cVar1 = fcn.0044c404(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "0044c480": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c480(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        cVar1 = fcn.0044c3d4(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.0044c3d4(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.0044c404(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "0044c528": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044c528(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    unkbyte3 Var3;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x2c2) != 0) {\n        (**(in_EAX + 0x2c0))();\n    }\n    if ((((*(in_EAX + 0x248) == 0) || (*(*(in_EAX + 0x248) + 0x38) == 0)) || (uVar2 = fcn.0040372c(),  uVar2 == '\\0'))\n       && (uVar2 = fcn.0044c4d4(&stack0xfffffffc),  uVar2 == '\\0')) {\n        uVar1 = 0;\n        Var3 = 0;\n    }\n    else {\n        Var3 = uVar2 >> 8;\n        uVar1 = 1;\n    }\n    return CONCAT31(Var3, uVar1);\n}\n",
        "token_count": 236
    },
    "0044c5a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c5a4(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(arg_8h + 0x250) != 0) && (iVar1 = (****(arg_8h + 0x250))(*(arg_8h + 0x250), arg_ch, arg_10h),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = fcn.0041e1fc(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "0044c628": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044c628(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x46fadc != NULL)) {\n        cVar1 = fcn.004363bc();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.004360b8(0xffffffec);\n            uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n            if ((*(in_EAX + 0x2e0) == '\\0') && (*(in_EAX + 0x2e2) == '\\0')) {\n                uVar2 = fcn.004360b8(0xffffffec, uVar3 & 0xfff7ffff);\n                sub.user32.dll_SetWindowLongA(uVar2);\n                uVar2 = fcn.004360b8(0, 0, 0x485);\n                sub.user32.dll_RedrawWindow(uVar2);\n            }\n            else {\n                if ((uVar3 & 0x80000) == 0) {\n                    uVar2 = fcn.004360b8(0xffffffec, uVar3 | 0x80000);\n                    sub.user32.dll_SetWindowLongA(uVar2);\n                }\n                uVar3 = *(*(in_EAX + 0x2e0) * 4 + 0x46fb60) | *(*(in_EAX + 0x2e2) * 4 + 0x46fb68);\n                uVar2 = fcn.004360b8(*(in_EAX + 0x2e4), uVar3 & 0xffffff00 | *(in_EAX + 0x2e1), uVar3);\n                (**0x46fadc)(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "0044c750": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c750(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x46fadc != 0)) &&\n       ((*(in_EAX + 0x2e0) != '\\0' || (*(in_EAX + 0x2e2) != '\\0')))) {\n        *(param_2 + 8) = *(param_2 + 8) | 0x80000;\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0044c77c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0044c77c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    (**(*in_EAX + 0xdc))();\n    fcn.0044757c();\n    fcn.0044931c();\n    fcn.00434cf8();\n    fcn.00449618();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 192
    },
    "0044cc38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044cc38(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint uVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041da6c();\n    puVar2 = *0x47be58;\n    (*0x47be58)[1] = in_EAX;\n    *puVar2 = 0x44cfdc;\n    puVar2 = *0x47be68;\n    (*0x47be68)[1] = in_EAX;\n    *puVar2 = 0x44cfe8;\n    fcn.0044cff4();\n    uVar3 = sub.user32.dll_GetKeyboardLayout(0);\n    *(in_EAX + 0x3c) = uVar3;\n    uVar3 = fcn.00403500();\n    *(in_EAX + 0x4c) = uVar3;\n    uVar3 = fcn.00403500();\n    *(in_EAX + 0x50) = uVar3;\n    uVar3 = fcn.00403500();\n    *(in_EAX + 0x54) = uVar3;\n    uVar3 = fcn.00403500();\n    *(in_EAX + 0x58) = uVar3;\n    uVar3 = fcn.00403500();\n    *(in_EAX + 0x7c) = uVar3;\n    uVar3 = sub.user32.dll_GetDC(0);\n    uVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0x5a);\n    *(in_EAX + 0x40) = uVar4;\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    uVar4 = 0;\n    (***0x47c034)(0, 0, fcn.004494bc, *(in_EAX + 0x58));\n    uVar3 = fcn.00420868();\n    *(in_EAX + 0x84) = uVar3;\n    uVar3 = fcn.00420868();\n    *(in_EAX + 0x88) = uVar3;\n    uVar3 = fcn.00420868();\n    *(in_EAX + 0x80) = uVar3;\n    fcn.0044d414();\n    iVar1 = *(in_EAX + 0x84);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x44d2f0;\n    iVar1 = *(in_EAX + 0x88);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x44d2f0;\n    iVar1 = *(in_EAX + 0x80);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x44d2f0;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uVar4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 780
    },
    "0044cf08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044cf08(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x68) != *(in_EAX + 0x74)) && (*(in_EAX + 0x74) = *(in_EAX + 0x68),  *(in_EAX + 0x9a) != 0)) {\n        (**(in_EAX + 0x98))();\n    }\n    if ((*(in_EAX + 100) != *(in_EAX + 0x70)) && (*(in_EAX + 0x70) = *(in_EAX + 100),  *(in_EAX + 0x92) != 0)) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0044cf8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044cf8c(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00415468();\n    fcn.00415468();\n    fcn.0044fc0c();\n    if ((*(*(in_EAX + 0x50) + 8) == 0) && (*(*0x47dc08 + 0x84) != 0)) {\n        fcn.00437520();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0044d0d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044d0d4(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack672;\n    uint uStack668;\n    uchar *puStack664;\n    uint uStack656;\n    uint uStack636;\n    uint uStack628;\n    uint uStack624;\n    uchar *puStack620;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_214h;\n    uint lpList;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint hKey;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack620 = &stack0xfffffffc;\n    uStack624 = 0x44d27f;\n    uStack628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd8c;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x34) == 0) {\n        var_4h = in_EAX;\n        uVar3 = fcn.00403500();\n        *(var_4h + 0x34) = uVar3;\n        fcn.00404308();\n        uStack636 = 0x40;\n        iVar4 = sub.user32.dll_GetKeyboardLayoutList();\n        if (-1 < iVar4 + -1) {\n            var_14h = &fcn.0044d0d4::lpList;\n            var_10h = iVar4;\n            do {\n                cVar2 = fcn.0043ac84();\n                if (cVar2 != '\\0') {\n                    uStack656 = 0x44d18c;\n                    uStack656 = fcn.004092b0(0);\n                    uStack636 = 0x80000002;\n                    puStack664 = 0x44d197;\n                    iVar4 = sub.advapi32.dll_RegOpenKeyExA_1();\n                    if (iVar4 == 0) {\n                        uStack668 = 0x44d23b;\n                        uStack672 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xfffffd60;\n                        var_8h = 0x100;\n                        uVar3 = hKey;\n                        puStack664 = &stack0xfffffffc;\n                        iVar4 = sub.advapi32.dll_RegQueryValueExA_1\n                                          (hKey, 0x44d2c8, 0, 0, &fcn.0044d0d4::var_214h, &fcn.0044d0d4::var_8h);\n                        if (iVar4 == 0) {\n                            fcn.00404570();\n                            (**(**(var_4h + 0x34) + 0x3c))();\n                            if (*var_14h == *(var_4h + 0x3c)) {\n                                fcn.00404570();\n                            }\n                        }\n                        *in_FS_OFFSET = uVar3;\n                        sub.advapi32.dll_RegCloseKey_1(hKey, 0x44d242);\n                        return;\n                    }\n                }\n                var_14h = var_14h + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n        *(*(var_4h + 0x34) + 0x1d) = 0;\n        fcn.00417b98();\n        puVar1 = puStack620;\n    }\n    puStack620 = puVar1;\n    *in_FS_OFFSET = uStack636;\n    uStack628 = 0x44d286;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 851
    },
    "0044d414": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044d414(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack464;\n    int32_t iStack424;\n    uint uStack420;\n    uchar *puStack416;\n    uint var_191h;\n    uint var_f1h;\n    uint var_b5h;\n    uint pvParam;\n    uint var_1h;\n    \n    puStack416 = &var_1h + 1;\n    var_1h._0_1_ = 0;\n    if (*0x47dc08 != 0) {\n        var_1h._0_1_ = *(*0x47dc08 + 0x88);\n    }\n    uStack420 = 0x44d559;\n    iStack424 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack424;\n    puVar1 = &var_1h + 1;\n    if (*0x47dc08 != 0) {\n        fcn.0044f828();\n        puVar1 = puStack416;\n    }\n    puStack416 = puVar1;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x1f, 0x3c, &pvParam, 0);\n    if (iVar2 == 0) {\n        sub.gdi32.dll_GetStockObject(0xd);\n        fcn.00420bf8();\n    }\n    else {\n        sub.gdi32.dll_CreateFontIndirectA(&pvParam);\n        fcn.00420bf8();\n    }\n    var_191h = 0x154;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_191h, 0);\n    if (iVar2 == 0) {\n        fcn.00420cdc();\n        puStack464 = 0xd;\n        sub.gdi32.dll_GetStockObject();\n        fcn.00420bf8();\n    }\n    else {\n        puStack464 = &var_b5h;\n        sub.gdi32.dll_CreateFontIndirectA();\n        fcn.00420bf8();\n        sub.gdi32.dll_CreateFontIndirectA(&var_f1h);\n        fcn.00420bf8();\n    }\n    fcn.00420a3c();\n    fcn.00420a3c();\n    *in_FS_OFFSET = puStack464;\n    if (*0x47dc08 != 0) {\n        fcn.0044f828(0x44d560);\n    }\n    return;\n}\n",
        "token_count": 587
    },
    "0044d570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044d570(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n    if ((*(in_EAX + 0x8c) == 0) && ((*(in_EAX + 0x8e) & 0x10) != 0)) {\n        fcn.0044d590();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0044d5f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0044d5f8(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    char in_DL;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_8h + -4) + 8) - **(arg_8h + -4);\n    if ((iVar3 < 0) || (in_DL - 3U < 2)) {\n        iVar3 = in_EAX[0x12];\n    }\n    var_10h = *(*(arg_8h + -4) + 0xc) - *(*(arg_8h + -4) + 4);\n    if ((var_10h < 0) || (in_DL - 1U < 2)) {\n        var_10h = in_EAX[0x13];\n    }\n    if ((in_DL == '\\x01') && (*(in_EAX + 0x22b) == '\\x02')) {\n        var_8h = in_EAX[0x10];\n        var_ch = in_EAX[0x11];\n        iVar3 = (***0x47bf10)(0x3d);\n    }\n    else {\n        var_8h = **(arg_8h + -4);\n        var_ch = *(*(arg_8h + -4) + 4);\n    }\n    if (in_DL == '\\x01') {\n        piVar1 = *(arg_8h + -4) + 4;\n        *piVar1 = *piVar1 + var_10h;\n    }\n    else if (in_DL == '\\x02') {\n        piVar1 = *(arg_8h + -4) + 0xc;\n        *piVar1 = *piVar1 - var_10h;\n        var_ch = *(*(arg_8h + -4) + 0xc);\n    }\n    else if (in_DL == '\\x03') {\n        **(arg_8h + -4) = **(arg_8h + -4) + iVar3;\n    }\n    else if (in_DL == '\\x04') {\n        piVar1 = *(arg_8h + -4) + 8;\n        *piVar1 = *piVar1 - iVar3;\n        var_8h = *(*(arg_8h + -4) + 8);\n    }\n    (**(*in_EAX + 0x84))(var_10h, iVar3);\n    if (*(in_EAX + 0x22b) == '\\x02') {\n        iVar3 = iVar3 - var_8h;\n        var_10h = var_10h - var_ch;\n    }\n    iVar2 = in_EAX[0x12];\n    if ((iVar3 != iVar2) || (in_EAX[0x13] != var_10h)) {\n    // switch table (6 cases) at 0x44d734\n        switch(in_DL) {\n        case '\\x01':\n            piVar1 = *(arg_8h + -4) + 4;\n            *piVar1 = *piVar1 - (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x02':\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x03':\n            **(arg_8h + -4) = **(arg_8h + -4) - (iVar3 - iVar2);\n            break;\n        case '\\x04':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            break;\n        case '\\x05':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n        }\n    }\n    return;\n}\n",
        "token_count": 992
    },
    "0044d7a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0044d7a8(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    (**(**(arg_8h + -8) + 8))();\n    if ((((*(arg_8h + -0xc) != 0) && (*(*(arg_8h + -0xc) + 0x30) == 0)) && ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0))\n       && (((*(*(arg_8h + -0xc) + 0x57) != '\\0' && (*(*(arg_8h + -0xc) + 0x5b) == in_AL)) &&\n           (*(*(arg_8h + -0xc) + 0x22b) != '\\x01')))) {\n        fcn.0041516c();\n    }\n    iVar2 = fcn.0044cf00();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0044ceec();\n            if (((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x5b) == in_AL)) &&\n               (((*(iVar3 + 0x1c) & 0x10) == 0 &&\n                (((*(iVar3 + 0x57) != '\\0' && (*(iVar3 + 0x22b) != '\\x01')) && (iVar3 != *(arg_8h + -0xc))))))) {\n                for (iVar3 = 0; iVar3 < *(*(arg_8h + -8) + 8); iVar3 = iVar3 + 1) {\n                    fcn.004152c8();\n                    cVar1 = fcn.0044d598();\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00415344();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = *(*(arg_8h + -8) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = arg_8h;\n            fcn.004152c8();\n            fcn.0044d5f8(iVar3);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 584
    },
    "0044d8f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d8f4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0044cf00();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.0044ceec();\n            if ((((*(iVar2 + 0x30) == 0) && ((*(iVar2 + 0x1c) & 0x10) == 0)) && (*(iVar2 + 0x5b) != '\\0')) &&\n               ((*(iVar2 + 0x57) != '\\0' && (*(iVar2 + 0x22b) != '\\x01')))) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 203
    },
    "0044d9d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044d9d4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x8c) != 0) {\n        *(in_EAX + 0x8e) = *(in_EAX + 0x8e) | 0x10;\n        return;\n    }\n    puStack32 = 0x44da02;\n    var_4h = in_EAX;\n    fcn.0044d568();\n    uStack36 = 0x44da4d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = 0x30;\n    puStack32 = &stack0xfffffffc;\n    sub.user32.dll_SystemParametersInfoA(0x30, 0, &fcn.0044d9d4::var_14h, 0);\n    fcn.0044d94c();\n    *in_FS_OFFSET = uVar1;\n    *(var_4h + 0x8e) = *(var_4h + 0x8e) & 0xffef;\n    fcn.0044d570(0x44da54);\n    return;\n}\n",
        "token_count": 318
    },
    "0044da68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044da68(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (*(in_EAX + 0x80) != 0) {\n                fcn.0040435c();\n                return;\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 106
    },
    "0044daa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044daa0(void)\n\n{\n    int32_t in_EAX;\n    \n    for (; (in_EAX != 0 && (*(in_EAX + 0x99) == '\\0')); in_EAX = *(in_EAX + 0x30)) {\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0044dac0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044dac0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x47dc08 != 0) {\n        uStack24 = 0x44daf1;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        fcn.0044fe38();\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "0044db14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044db14(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    *0x47dc18 = sub.kernel32.dll_GetCurrentThreadId_1();\n    while( true ) {\n        iVar1 = sub.kernel32.dll_WaitForSingleObject();\n        if (iVar1 != 0x102) break;\n        if (*0x47dc08 != 0) {\n            if (*(*0x47dc08 + 0x60) != 0) {\n                sub.user32.dll_GetCursorPos();\n                iVar1 = fcn.0042e320();\n                if (iVar1 == 0) {\n                    fcn.0044feb4();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "0044db70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044db70(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_CallNextHookEx(*0x47dc20, arg_8h, arg_ch, arg_10h);\n    if ((-1 < arg_8h) && (*0x47dc08 != 0)) {\n        fcn.0044ef84();\n    }\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "0044dbb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044dbb4(void)\n\n{\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*(*0x47dc08 + 0xa5) == '\\0') {\n        if (*0x47dc20 == 0) {\n            uStack8 = 0x44dbd1;\n            uStack8 = sub.kernel32.dll_GetCurrentThreadId_1();\n            uStack12 = 0;\n            pcStack16 = fcn.0044db70;\n            uStack20 = 3;\n            *0x47dc20 = sub.user32.dll_SetWindowsHookExA();\n        }\n        if (*0x47dc1c == 0) {\n            *0x47dc1c = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n        }\n        if (*0x47dc24 == 0) {\n            *0x47dc24 = sub.kernel32.dll_CreateThread_1(0, 1000, fcn.0044db14, 0, 0, &stack0xffffffec);\n        }\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "0044dc28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.0044dc28(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x47dc20 != 0) {\n        sub.user32.dll_UnhookWindowsHookEx(*0x47dc20);\n    }\n    *0x47dc20 = 0;\n    if (*0x47dc24 != 0) {\n        sub.kernel32.dll_SetEvent(*0x47dc1c);\n        iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n        if (iVar1 != *0x47dc18) {\n            sub.kernel32.dll_WaitForSingleObject(*0x47dc24, 0xffffffff);\n        }\n        sub.kernel32.dll_CloseHandle_1(*0x47dc24);\n        *0x47dc24 = 0;\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0044dc84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044dc84(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint auStack8 [2];\n    \n    auStack8[0] = 8;\n    uVar2 = 8;\n    uVar1 = sub.user32.dll_SystemParametersInfoA(0x48, 8, auStack8, 0);\n    if (uVar1 != 0) {\n        return CONCAT44(uVar2, uVar1 & 0xffffff00 | uVar2 != 0);\n    }\n    return uVar2 << 0x20;\n}\n",
        "token_count": 135
    },
    "0044dd1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\ncode * __fastcall fcn.0044dd1c(uint param_1, char param_2)\n\n{\n    code **ppcVar1;\n    code *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    uint lpFilename;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    var_1h._0_1_ = param_2;\n    fcn.0041da6c();\n    ppcVar1 = *0x47c018;\n    if (*(*0x47c018 + 2) == 0) {\n        (*0x47c018)[1] = in_EAX;\n        *ppcVar1 = fcn.0044f350;\n    }\n    ppcVar1 = *0x47c100;\n    if (*(*0x47c100 + 2) == 0) {\n        (*0x47c100)[1] = in_EAX;\n        *ppcVar1 = fcn.0044f548;\n    }\n    in_EAX[0x34] = 0x0;\n    uVar2 = fcn.00403500();\n    *(in_EAX + 0x90) = uVar2;\n    uVar2 = fcn.00403500();\n    *(in_EAX + 0xa8) = uVar2;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 0x84) = 0;\n    *(in_EAX + 0x5c) = 0x80000018;\n    *(in_EAX + 0x78) = 500;\n    in_EAX[0x7c] = 0x1;\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x74) = 0x9c4;\n    in_EAX[0x88] = 0x0;\n    in_EAX[0x9d] = 0x1;\n    in_EAX[0xb4] = 0x1;\n    uVar2 = fcn.00425c08();\n    *(in_EAX + 0x98) = uVar2;\n    sub.user32.dll_LoadIconA(**0x47bee8, 0x44defc);\n    fcn.00425fd8();\n    iVar3 = *(in_EAX + 0x98);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = 0x44fab8;\n    sub.kernel32.dll_GetModuleFileNameA_1(**0x47bee8, &lpFilename, 0x100);\n    sub.user32.dll_OemToCharA(&lpFilename, &lpFilename);\n    iVar3 = fcn.0040bda4();\n    if (iVar3 != 0) {\n        fcn.00408c0c();\n    }\n    puVar4 = fcn.0040bdcc();\n    if (puVar4 != NULL) {\n        *puVar4 = 0;\n    }\n    sub.user32.dll_CharLowerA();\n    fcn.00404570();\n    if (**0x47bd44 == '\\0') {\n        fcn.0044e024();\n    }\n    in_EAX[0x59] = 0x1;\n    in_EAX[0x5a] = 0x1;\n    in_EAX[0x5b] = 0x1;\n    in_EAX[0x9e] = 0x1;\n    *(in_EAX + 0xa0) = 0;\n    fcn.0044fc94();\n    fcn.004505d4();\n    if (var_1h != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = &lpFilename + 1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 932
    },
    "0044e024": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044e024(void)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_00000030;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint lpWndClass;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x44e1bb;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((*(in_EAX + 0xa4) == '\\0') && (**0x47c150 == '\\0')) {\n        uVar2 = fcn.0041eaf0(fcn.0044e540, in_EAX);\n        *(in_EAX + 0x40) = uVar2;\n        iVar3 = sub.user32.dll_GetClassInfoA(*0x47d714, *0x46fbe8, &fcn.0044e024::lpWndClass);\n        if (iVar3 == 0) {\n            *0x46fbd4 = *0x47d714;\n            iVar1 = sub.user32.dll_RegisterClassA(0x46fbc4);\n            if (iVar1 == 0) {\n                fcn.004065fc();\n                fcn.0040b16c();\n                fcn.00403ce4();\n            }\n        }\n        uVar4 = (***0x47bf10)(0);\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        uVar4 = (***0x47bf10)(1, iVar3);\n        uVar2 = *0x47d714;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        fcn.004047b8();\n        uVar2 = fcn.004072a4(0, uVar2, 0, 0, 0, 0, iVar3, in_stack_00000030);\n        *(in_EAX + 0x30) = uVar2;\n        fcn.00404308();\n        *(in_EAX + 0xa4) = 1;\n        uStack20 = *(in_EAX + 0x30);\n        sub.user32.dll_SetWindowLongA();\n        if (**0x47bfb4 != '\\0') {\n            fcn.0044ec18();\n            uStack8 = *(in_EAX + 0x30);\n            uStack12 = 0x44e154;\n            sub.user32.dll_SendMessageA();\n            uStack12 = 0x44e15b;\n            uStack12 = fcn.0044ec18();\n            uStack16 = 0xfffffff2;\n            uStack20 = *(in_EAX + 0x30);\n            uStack24 = 0x44e167;\n            sub.user32.dll_SetClassLongA();\n        }\n        uStack24 = 0;\n        uStack28 = *(in_EAX + 0x30);\n        uStack32 = 0x44e172;\n        uVar2 = sub.user32.dll_GetSystemMenu();\n        uStack32 = 0;\n        uStack36 = 0xf030;\n        lpWndClass = 0x44e181;\n        uStack40 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        lpWndClass = 0;\n        puStack56 = 0x44e18e;\n        uStack64 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        if (**0x47bfb4 != '\\0') {\n            puStack56 = NULL;\n            uStack60 = 0xf010;\n            uStack64 = uVar2;\n            sub.user32.dll_DeleteMenu();\n        }\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x44e1c2;\n    uStack60 = 0x44e1ba;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 1004
    },
    "0044e228": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044e228(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0xffffffff;\n    iVar1 = func_0x00406f88(arg_8h, 4);\n    if (iVar1 == *(*0x47dc08 + 0x30)) {\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n        if (((uVar2 & 8) == 0) ||\n           (((*(*0x47dc08 + 0x44) != 0 && (*(arg_ch + 1) == '\\0')) && (iVar1 = fcn.004360b8(),  arg_8h == iVar1)))) {\n            *arg_ch = arg_8h;\n            uVar3 = 0;\n        }\n        else {\n            fcn.0041516c();\n        }\n        return uVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 237
    },
    "0044e298": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e298(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint uStack16;\n    uchar uStack12;\n    \n    if (*(*0x47dc08 + 0x30) != 0) {\n        if (*(in_EAX + 0x94) == 0) {\n            uStack16 = *(in_EAX + 0x30);\n            pcVar4 = fcn.0044e228;\n            uStack12 = param_2;\n            sub.user32.dll_EnumWindows(fcn.0044e228, &uStack16);\n            if (*(*(in_EAX + 0x90) + 8) != 0) {\n                uVar1 = func_0x00406f88(pcVar4, 3);\n                uVar2 = sub.user32.dll_GetWindowLongA(uVar1, 0xffffffec, uVar1);\n                if ((uVar2 & 8) != 0) {\n                    uVar1 = 0xfffffffe;\n                }\n                iVar3 = *(*(in_EAX + 0x90) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        uVar1 = fcn.004152c8(uVar1, 0, 0, 0, 0, 0x213);\n                        sub.user32.dll_SetWindowPos();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n        }\n        *(in_EAX + 0x94) = *(in_EAX + 0x94) + 1;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "0044e358": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044e358(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (((*(*0x47dc08 + 0x30) != 0) && (0 < *(in_EAX + 0x94))) &&\n       (*(in_EAX + 0x94) = *(in_EAX + 0x94) + -1,  *(in_EAX + 0x94) == 0)) {\n        iVar1 = *(*(in_EAX + 0x90) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.004152c8(0xffffffff, 0, 0, 0, 0, 0x213);\n                sub.user32.dll_SetWindowPos();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        (**(**(in_EAX + 0x90) + 8))();\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "0044e3c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044e3c4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x47c2c8 + 0xd) != '\\0') && (*(in_EAX + 0x34) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 72
    },
    "0044e3dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044e3dc(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x47c2c8 + 0xd) != '\\0') && (*(in_EAX + 0x34) == '\\x01')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 72
    },
    "0044e3f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044e3f4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*param_2 == *0x47dc14) || (*param_2 == 0x1a)) {\n        if (*(in_EAX + 0x59) != '\\0') {\n            sub.kernel32.dll_SetThreadLocale(0x400);\n            fcn.0040c06c();\n        }\n        if (*(in_EAX + 0x5a) != '\\0') {\n            fcn.0044d414();\n        }\n        if (*param_2 == *0x47dc14) {\n            fcn.0044da5c();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 169
    },
    "0044e44c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e44c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x44e4a9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x122) != 0) {\n        fcn.004044f8();\n        (**(in_EAX + 0x120))(param_2 + 0xc, 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x44e4b0;\n    uStack24 = 0x44e4a8;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 216
    },
    "0044e540": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e540(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    code **ppcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44ebd0;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    param_2[3] = 0;\n    iVar8 = *(*(in_EAX + 0xa8) + 8);\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar8 + -1) {\n        do {\n            puStack28 = puVar1;\n            ppcVar3 = fcn.004152c8();\n            cVar2 = (**ppcVar3)();\n            if (cVar2 != '\\0') {\n                *in_FS_OFFSET = uStack36;\n                return;\n            }\n            iVar8 = iVar8 + -1;\n            puVar1 = puStack28;\n        } while (iVar8 != 0);\n    }\n    fcn.0044e3f4();\n    iVar8 = *param_2;\n    if (0x53 < iVar8) {\n        if (iVar8 < 0xb018) {\n            if (iVar8 == 0xb017) {\n                if ((*(in_EAX + 0x44) != 0) && (iVar8 = fcn.004360b8(),  iVar8 != 0)) {\n                    uVar6 = fcn.004360b8();\n                    iVar8 = sub.user32.dll_IsWindowEnabled(uVar6);\n                    if (iVar8 != 0) {\n                        uVar6 = fcn.004360b8();\n                        iVar8 = sub.user32.dll_IsWindowVisible(uVar6);\n                        if (iVar8 != 0) {\n                            *0x46fad4 = 0;\n                            uVar6 = sub.user32.dll_GetFocus();\n                            uVar7 = fcn.004360b8();\n                            sub.user32.dll_SetFocus(uVar7);\n                            fcn.00430c4c(param_2[2]);\n                            sub.user32.dll_SetFocus(uVar6);\n                            *0x46fad4 = 1;\n                            param_2[3] = 1;\n                        }\n                    }\n                }\n                goto code_r0x0044ebc6;\n            }\n            if (iVar8 < 0xb001) {\n                if (iVar8 == 0xb000) {\n                    if (*(in_EAX + 0xfa) != 0) {\n                        (**(in_EAX + 0xf8))();\n                    }\n                    goto code_r0x0044ebc6;\n                }\n                if (iVar8 == 0x112) {\n                    if ((param_2[1] & 0xfff0U) == 0xf020) {\n                        fcn.0044ec34();\n                    }\n                    else if ((param_2[1] & 0xfff0U) == 0xf120) {\n                        fcn.0044ece4();\n                    }\n                    else {\n                        fcn.0044e4b8(&stack0xfffffffc);\n                    }\n                    goto code_r0x0044ebc6;\n                }\n                if (iVar8 - 0x132U < 7) {\n                    iVar8 = sub.user32.dll_SendMessageA(param_2[2], iVar8 + 0xbc00, param_2[1], param_2[2]);\n                    param_2[3] = iVar8;\n                    goto code_r0x0044ebc6;\n                }\n            }\n            else {\n                if (iVar8 == 0xb001) {\n                    if (*(in_EAX + 0xf2) != 0) {\n                        (**(in_EAX + 0xf0))();\n                    }\n                    goto code_r0x0044ebc6;\n                }\n                if (iVar8 == 0xb016) {\n                    cVar2 = fcn.0044efb8();\n                    if (cVar2 != '\\0') {\n                        param_2[3] = 1;\n                    }\n                    goto code_r0x0044ebc6;\n                }\n            }\n        }\n        else if (iVar8 < 0xb021) {\n            if (iVar8 == 0xb020) {\n                if (param_2[1] == 0) {\n                    fcn.0044f0e0(*param_2[2], param_2[2][1]);\n                }\n                else {\n                    fcn.0044f13c(*param_2[2], param_2[2][1]);\n                }\n                goto code_r0x0044ebc6;\n            }\n            if (iVar8 == 0xb01a) {\n                iVar8 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n                if (((iVar8 == 0) && (iVar8 = sub.user32.dll_GetFocus(),  iVar8 == *(in_EAX + 0x30))) &&\n                   (iVar8 = fcn.00446460(),  iVar8 != 0)) {\n                    sub.user32.dll_SetFocus(iVar8);\n                }\n                goto code_r0x0044ebc6;\n            }\n            if (iVar8 == 0xb01f) goto code_r0x0044eb04;\n        }\n        else {\n            if (iVar8 == 0xb031) {\n                if (param_2[1] == 1) {\n                    param_2[3] = *(in_EAX + 0xb0);\n                }\n                else {\n                    *(in_EAX + 0xb0) = param_2[2];\n                }\n                goto code_r0x0044ebc6;\n            }\n            if (iVar8 - 0xb03fU < 2) {\n                uVar5 = fcn.00450498();\n                param_2[3] = uVar5 & 0x7f;\n                goto code_r0x0044ebc6;\n            }\n        }\n        goto code_r0x0044ebbf;\n    }\n    if (iVar8 == 0x53) {\ncode_r0x0044eb04:\n        fcn.0044f620();\n        goto code_r0x0044ebc6;\n    }\n    if (iVar8 < 0x17) {\n    // switch table (21 cases) at 0x44e5e4\n        switch(iVar8) {\n        case 0:\n            fcn.0041d480();\n            break;\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 8:\n        case 9:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n        case 0x11:\n        case 0x12:\n        case 0x13:\n            goto code_r0x0044ebbf;\n        case 7:\n            sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01a, 0, 0);\n            fcn.0044e4b8(&stack0xfffffffc);\n            break;\n        case 10:\n            if (param_2[1] == 0) {\n                fcn.0044e4b8(&stack0xfffffffc);\n                if (*(in_EAX + 0xac) == 0) {\n                    uVar6 = fcn.00446310();\n                    *(in_EAX + 0xac) = uVar6;\n                }\n                fcn.0044e350();\n            }\n            else {\n                fcn.0044e358();\n                if (*(in_EAX + 0xac) != 0) {\n                    fcn.004463c4();\n                    *(in_EAX + 0xac) = 0;\n                }\n                fcn.0044e4b8(&stack0xfffffffc);\n            }\n            break;\n        case 0xf:\n            iVar8 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n            if (iVar8 == 0) {\n                fcn.0044e4b8(&stack0xfffffffc);\n            }\n            else {\n                fcn.0044e4f4(&stack0xfffffffc);\n            }\n            break;\n        case 0x10:\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.0044bcc4();\n            }\n            break;\n        case 0x14:\n            *param_2 = 0x27;\n            fcn.0044e4b8(&stack0xfffffffc);\n            break;\n        default:\n            if (param_2[1] != 0) {\n                *(in_EAX + 0x9c) = 1;\n            }\n        }\n    }\n    else {\n        if (iVar8 < 0x1e) {\n            if (iVar8 == 0x1d) {\n                fcn.0044da5c();\n                fcn.0044e4b8(&stack0xfffffffc);\n                goto code_r0x0044ebc6;\n            }\n            if (iVar8 == 0x1a) {\n                fcn.0043a8c0();\n                fcn.0044e44c();\n                fcn.0044e4b8(&stack0xfffffffc);\n                goto code_r0x0044ebc6;\n            }\n            if (iVar8 == 0x1c) {\n                fcn.0044e4b8(&stack0xfffffffc);\n                *(in_EAX + 0x9d) = '\\x01' - (param_2[1] == 0);\n                if (param_2[1] == 0) {\n                    fcn.0044e348();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb001, 0, 0);\n                }\n                else {\n                    fcn.0044e358();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb000, 0, 0);\n                }\n                goto code_r0x0044ebc6;\n            }\n        }\n        else {\n            if (iVar8 == 0x37) {\n                iVar8 = fcn.0044ec18();\n                param_2[3] = iVar8;\n                goto code_r0x0044ebc6;\n            }\n            if (iVar8 == 0x4a) {\n                if ((*param_2[2] == -0x21acbbac) && (*(in_EAX + 0x9e) != '\\0')) {\n                    if (*(in_EAX + 0xa0) == 0) {\n                        iVar8 = fcn.0040cc84();\n                        *(in_EAX + 0xa0) = iVar8;\n                        if (iVar8 == 0) {\n                            iVar8 = sub.kernel32.dll_GetLastError_1();\n                            param_2[3] = iVar8;\n                            *(in_EAX + 0xa0) = 0;\n                        }\n                        else {\n                            param_2[3] = 0;\n                            pcVar4 = sub.kernel32.dll_GetProcAddress_1(*(in_EAX + 0xa0), 0x44ec04);\n                            if (pcVar4 != NULL) {\n                                (*pcVar4)(*(param_2[2] + 4), *(param_2[2] + 8));\n                            }\n                        }\n                    }\n                    else {\n                        param_2[3] = 0;\n                    }\n                }\n                goto code_r0x0044ebc6;\n            }\n        }\ncode_r0x0044ebbf:\n        fcn.0044e4b8(&stack0xfffffffc);\n    }\ncode_r0x0044ebc6:\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 2689
    },
    "0044ec34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044ec34(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.0044e348();\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.004360b8();\n        iVar1 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            iVar1 = *(in_EAX + 0x44);\n            uVar2 = fcn.004360b8(*(iVar1 + 0x40), *(iVar1 + 0x44), *(iVar1 + 0x48), 0, 0x40);\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), uVar2);\n            sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf020, 0);\n            goto code_r0x0044ecc9;\n        }\n    }\n    fcn.0044dcdc();\ncode_r0x0044ecc9:\n    if (*(in_EAX + 0x102) != 0) {\n        (**(in_EAX + 0x100))();\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "0044ece4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044ece4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    iVar1 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 == 0) {\n        return;\n    }\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.004360b8();\n        iVar1 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf120, 0);\n            goto code_r0x0044ed4d;\n        }\n    }\n    fcn.0044dcdc();\ncode_r0x0044ed4d:\n    uVar3 = (***0x47bf10)(1, 0, 0, 0x40);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    uVar3 = (***0x47bf10)(0, iVar1);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), 0, iVar1);\n    iVar1 = *(in_EAX + 0x44);\n    if (((iVar1 != 0) && (*(iVar1 + 0x22b) == '\\x01')) && (*(iVar1 + 0x57) == '\\0')) {\n        fcn.00449a94();\n        fcn.0044be6c();\n    }\n    fcn.0044e358();\n    if (*(*0x47dc0c + 100) != 0) {\n        uVar2 = fcn.004360b8();\n        sub.user32.dll_SetFocus(uVar2);\n    }\n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))();\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "0044ee20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044ee20(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack264 [256];\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        fcn.0040435c();\n    }\n    else {\n        sub.user32.dll_GetWindowTextA(*(in_EAX + 0x30), auStack264, 0x100);\n        fcn.004043f8();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0044ee90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044ee90(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = *(in_EAX + 0x44);\n    if (((iVar1 != 0) && (*(iVar1 + 0x22f) == '\\x02')) && (*(*0x47dc0c + 0x6c) != 0)) {\n        iVar1 = sub.user32.dll_TranslateMDISysAccel(*(iVar1 + 0x254), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 159
    },
    "0044efb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0044efb8(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    unkbyte3 Var4;\n    \n    if (*(in_EAX + 0x112) != 0) {\n        (**(in_EAX + 0x110))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uVar2 = fcn.004360b8();\n        iVar3 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if ((iVar3 != 0) && (uVar2 = fcn.0040372c(),  uVar2 != '\\0')) {\n            Var4 = uVar2 >> 8;\n            uVar1 = 1;\n            goto code_r0x0044f015;\n        }\n    }\n    uVar1 = 0;\n    Var4 = 0;\ncode_r0x0044f015:\n    return CONCAT14(uVar1, CONCAT31(Var4, uVar1));\n}\n",
        "token_count": 236
    },
    "0044f024": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044f024(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = 0;\n    uVar4 = param_2;\n    iVar2 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 1, param_1);\n    if (iVar2 != 0) {\n        uVar3 = 1;\n        if (*(param_2 + 4) == 0x12) {\n            *(in_EAX + 0x9c) = 1;\n        }\n        else {\n            uVar4 = uVar4 & 0xffffff00;\n            if (*(in_EAX + 0xd2) != 0) {\n                (**(in_EAX + 0xd0))();\n            }\n            cVar1 = fcn.0044ef84();\n            if ((cVar1 == '\\0') && (uVar4 == '\\0')) {\n                cVar1 = fcn.0044ee90();\n                if (cVar1 == '\\0') {\n                    cVar1 = fcn.0044eecc();\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.0044ee6c();\n                        if (cVar1 == '\\0') {\n                            sub.user32.dll_TranslateMessage(param_2);\n                            sub.user32.dll_DispatchMessageA();\n                            uVar4 = param_2;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return CONCAT44(uVar4, uVar3);\n}\n",
        "token_count": 374
    },
    "0044f0e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f0e0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 0, &arg_8h);\n        }\n    }\n    else {\n        fcn.004152a8();\n        puVar1 = fcn.00402728();\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n        fcn.0041516c();\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "0044f13c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f13c(int32_t lParam, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 1, &lParam);\n        }\n    }\n    else {\n        iVar2 = *(*(in_EAX + 0xa8) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004152c8();\n                if ((*piVar1 == lParam) && (arg_ch == piVar1[1])) {\n                    fcn.00402748();\n                    fcn.004151b8();\n                    return;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0044f1b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044f1b8(void)\n\n{\n    if (**0x47c000 != NULL) {\n        (***0x47c000)();\n    }\n    return;\n}\n",
        "token_count": 41
    },
    "0044f1d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f1d0(int32_t **param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x44f1e3;\n    piVar2 = (**(param_2 + -0xc))();\n    *param_1 = piVar2;\n    uStack28 = 0x44f20e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    (**(*piVar2 + 0x2c))();\n    *in_FS_OFFSET = uStack32;\n    if (*(in_EAX + 0x44) == 0) {\n        puStack24 = 0x44f237;\n        cVar1 = fcn.004036bc();\n        if (cVar1 != '\\0') {\n            puStack24 = 0x44f244;\n            fcn.00436094();\n            *(in_EAX + 0x44) = piVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "0044f250": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044f250(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    *(in_EAX + 0xa5) = 1;\n    uStack28 = 0x44f32e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x44f27c;\n    fcn.004083bc();\n    if (*(in_EAX + 0x44) != 0) {\n        if (**0x47c078 == 3) {\n            puStack36 = 0x44f2ac;\n            fcn.00449a94();\n        }\n        else if (**0x47c078 == 7) {\n            *(*(in_EAX + 0x44) + 0x22b) = 1;\n        }\n        if (*(in_EAX + 0x5b) != '\\0') {\n            if (*(*(in_EAX + 0x44) + 0x22b) == '\\x01') {\n                puStack36 = 0x44f2cc;\n                fcn.0044ec34();\n            }\n            else {\n                puStack36 = 0x44f2d5;\n                fcn.00448a68();\n            }\n        }\n        do {\n            uStack40 = 0x44f2f5;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            puStack36 = &stack0xfffffffc;\n            fcn.0044f0bc();\n            *in_FS_OFFSET = uStack44;\n        } while (*(in_EAX + 0x9c) == '\\0');\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0xa5) = 0;\n    return;\n}\n",
        "token_count": 467
    },
    "0044f350": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044f350(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        uVar3 = sub.user32.dll_GetCapture(0x1f, 0, 0);\n        sub.user32.dll_SendMessageA(uVar3);\n    }\n    fcn.004027b8();\n    cVar1 = fcn.004036bc();\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.004027d8();\n        fcn.004027b8(uVar3);\n        fcn.0040b0b8();\n    }\n    else {\n        fcn.004027b8();\n        cVar1 = fcn.004036bc();\n        if (cVar1 == '\\0') {\n            if (*(in_EAX + 0xca) == 0) {\n                fcn.004027b8();\n                fcn.0044f548();\n                return;\n            }\n            fcn.004027b8();\n            (**(in_EAX + 200))();\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "0044f548": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044f581)\n// WARNING: Removing unreachable block (ram,0x0044f5a8)\n\nvoid fcn.0044f548(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x44f603;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.004043a0();\n    arg_8h = 0x10;\n    fcn.0044ee20();\n    uVar1 = fcn.004047b8();\n    fcn.004047b8(uVar1);\n    fcn.0044f3e0(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack284 = 0x44f60a;\n    uStack288 = 0x44f5fa;\n    fcn.00404308();\n    uStack288 = 0x44f602;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 291
    },
    "0044f620": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044f620(uint param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    char acStack20 [4];\n    \n    uVar4 = 0;\n    acStack20[0] = '\\x01';\n    iVar1 = *(*0x47dc0c + 0x68);\n    if ((iVar1 == 0) || (*(iVar1 + 0x2aa) == 0)) {\n        if (*(in_EAX + 0xda) != 0) {\n            uVar4 = (**(in_EAX + 0xd8))(acStack20);\n        }\n    }\n    else {\n        uVar4 = (**(iVar1 + 0x2a8))(acStack20);\n    }\n    if (acStack20[0] != '\\0') {\n        if (((iVar1 != 0) && (cVar2 = fcn.004363bc(),  cVar2 != '\\0')) && (*(iVar1 + 0x23c) != 0)) {\n            fcn.004360b8();\n            uVar3 = fcn.0044fc94();\n            if (uVar3 == '\\0') {\n                return uVar4;\n            }\n            uVar4 = (**(**(in_EAX + 0x4c) + 0x20))(param_1, uVar3 & 0xffff0000 | param_2);\n            return uVar4;\n        }\n        if (*(in_EAX + 0x50) == 0) {\n            if (*(in_EAX + 0xa4) == '\\0') {\n                sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01f, param_2, param_1);\n            }\n        }\n        else {\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.004360b8();\n            }\n            uVar3 = fcn.0044fc94();\n            if (uVar3 != '\\0') {\n                uVar4 = (**(**(in_EAX + 0x4c) + 0x20))(param_1, uVar3 & 0xffff0000 | param_2);\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 527
    },
    "0044f8dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0044f8dc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStack20 [8];\n    \n    sub.user32.dll_GetCursorPos();\n    iVar1 = fcn.0042e354();\n    if ((iVar1 != 0) && ((*(iVar1 + 0x1c) & 0x10) != 0)) {\n        iVar1 = 0;\n    }\n    iVar2 = fcn.0042cc64();\n    if (iVar1 != *(in_EAX + 0x48)) {\n        if (((*(in_EAX + 0x48) != 0) && (iVar2 == 0)) || ((iVar2 != 0 && (iVar2 == *(in_EAX + 0x48))))) {\n            fcn.00430c4c(0);\n        }\n        *(in_EAX + 0x48) = iVar1;\n        if (((*(in_EAX + 0x48) != 0) && (iVar2 == 0)) || ((iVar2 != 0 && (iVar2 == *(in_EAX + 0x48))))) {\n            fcn.00430c4c(0);\n        }\n    }\n    return CONCAT44(auStack20, iVar1);\n}\n",
        "token_count": 291
    },
    "0044f960": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044f960(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x44fa6e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x44f98a;\n    fcn.0044f8dc();\n    if ((*(in_EAX + 0x88) != '\\0') && (*(in_EAX + 0x48) == 0)) {\n        puStack48 = 0x44f9a9;\n        fcn.0044feb4();\n    }\n    puStack48 = 0x44f9b3;\n    fcn.0044da68();\n    puStack48 = 0x44f9be;\n    fcn.0042cc20();\n    puStack48 = 0x44f9cb;\n    fcn.0044fb1c();\n    bVar1 = true;\n    uStack52 = 0x44fa17;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    if (*(in_EAX + 0xea) != 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(in_EAX + 0xe8))();\n    }\n    fcn.0044f878();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x44fa31;\n    iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar3 == **0x47c2c4) {\n        puStack48 = 0x44fa40;\n        cVar2 = fcn.0041d480();\n        if (cVar2 != '\\0') {\n            bVar1 = false;\n        }\n    }\n    if (bVar1) {\n        puStack48 = 0x44fa53;\n        sub.user32.dll_WaitMessage();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x44fa75;\n    uStack40 = 0x44fa6d;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 582
    },
    "0044fb1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044fb1c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar in_ZF;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x44fb30;\n    fcn.00404704();\n    if (!in_ZF) {\n        puStack20 = 0x44fb3c;\n        fcn.0040435c();\n        if (*(in_EAX + 0xe2) == 0) {\n            puStack20 = 0x44fb64;\n            fcn.00429c44();\n            puStack20 = 0x44fb71;\n            fcn.0043bf24();\n            uStack24 = 0x44fba1;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            fcn.0040372c();\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x44fba8;\n            uStack24 = 0x44fba0;\n            fcn.00403530();\n            return;\n        }\n        puStack20 = 0x44fb54;\n        (**(in_EAX + 0xe0))();\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "0044fc0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044fc0c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.0044cee4();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.0044ced0();\n                if (*(iVar3 + 0x57) != '\\0') {\n                    if ((*(iVar3 + 400) == 0) || (cVar1 = fcn.004363bc(),  cVar1 != '\\0')) {\ncode_r0x0044fc73:\n                        fcn.0044fbb0(&stack0xfffffffc);\n                        return;\n                    }\n                    fcn.004360b8(*(iVar3 + 400));\n                    iVar3 = sub.user32.dll_IsChild();\n                    if (iVar3 == 0) goto code_r0x0044fc73;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.0044fbb0(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "0044fc94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0044fc94(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4c) == 0) {\n        fcn.00406130();\n        fcn.004279a0();\n    }\n    return *(in_EAX + 0x4c) != 0;\n}\n",
        "token_count": 76
    },
    "0044fcbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fcbc(uchar param_1, uint param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.0044fd00();\n    uVar1 = sub.user32.dll_SetTimer(0, 0, param_2, fcn.0044dac0);\n    *(in_EAX + 0x8a) = uVar1;\n    *(in_EAX + 0x89) = param_1;\n    if (*(in_EAX + 0x8a) == 0) {\n        fcn.0044feb4();\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0044fd28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044fd28(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint32_t uStack32;\n    uint uStack28;\n    \n    uStack52 = 0x44fd41;\n    fcn.00407278();\n    uStack52 = 0x44fd50;\n    fcn.0042f5c0();\n    uStack52 = 0x44fd5b;\n    fcn.0042e354();\n    uStack52 = 0x44fd60;\n    iVar1 = fcn.0044daa0();\n    if ((iVar1 == 0) || (*(iVar1 + 0x99) == '\\0')) {\n        uStack52 = 0x44fd76;\n        fcn.0044feb4();\n    }\n    else {\n        if (iVar1 == *(in_EAX + 0x60)) {\n            uStack52 = 0x44fd8c;\n            fcn.00407278();\n            uStack52 = 0x44fd9b;\n            fcn.0042f5c0();\n            uStack52 = uStack28;\n            uStack56 = uStack32;\n            uStack60 = in_EAX + 100;\n            iVar2 = sub.user32.dll_PtInRect();\n            if (iVar2 != 0) {\n                return;\n            }\n        }\n        puVar3 = &stack0xffffffc4;\n        uStack56 = uStack56 & 0xffffff00 | *(in_EAX + 0x58);\n        if (*(in_EAX + 0x58) == 0) {\n            uStack60 = *(in_EAX + 0x78);\n        }\n        else {\n            uStack60 = *(in_EAX + 0x80);\n        }\n        fcn.00430c4c(&stack0xffffffc4);\n        if ((uStack60 == '\\0') || (puVar3 != NULL)) {\n            fcn.0044feb4();\n            *(in_EAX + 0x58) = uStack60;\n            *(in_EAX + 0x60) = iVar1;\n            fcn.0044fcbc();\n        }\n        else {\n            *(in_EAX + 0x58) = uStack60;\n            *(in_EAX + 0x60) = iVar1;\n            sub.user32.dll_GetCursorPos(&stack0xffffffc5);\n            fcn.004500a0();\n        }\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "0044feb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044feb4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.0044fe70();\n        *(in_EAX + 0x60) = 0;\n        *(in_EAX + 0x58) = 0;\n        fcn.0044dc28();\n        fcn.0044fd00();\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0044feec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0044feec(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack60 = 0xe;\n    puStack64 = 0x44ff00;\n    var_4h = (***0x47bf10)();\n    puStack64 = &fcn.0044feec::var_28h;\n    uStack68 = 0x44ff0c;\n    uStack68 = sub.user32.dll_GetCursor();\n    puStack72 = 0x44ff12;\n    iVar2 = sub.user32.dll_GetIconInfo();\n    if (iVar2 != 0) {\n        uStack76 = 0x45002e;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack84 = 0x44ff36;\n        puStack72 = &stack0xfffffffc;\n        fcn.00422e18();\n        puStack84 = 0x44ff41;\n        iVar2 = fcn.00408370();\n        uStack88 = 0x44ffff;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_8h = iVar2 + var_8h;\n        puStack84 = &stack0xfffffffc;\n        var_10h = iVar2;\n        cVar1 = fcn.00422ed0(var_8h);\n        if ((cVar1 != '\\0') && (*(var_10h + 0xe) == 1)) {\n            uVar3 = *(iVar2 + 4) * *(iVar2 + 0xe) + 0x1f & 0xffffffe0;\n            if (uVar3 < 0) {\n                uVar3 = uVar3 + 7;\n            }\n            var_14h = uVar3 >> 3;\n            var_4h = fcn.0044fedc();\n            if ((var_4h == 0) && (SBORROW4(*(iVar2 + 8), *(iVar2 + 4) * 2) == *(iVar2 + 8) + *(iVar2 + 4) * -2 < 0)) {\n                var_4h = fcn.0044fedc();\n            }\n            var_4h = var_4h / var_14h - var_20h;\n        }\n        *in_FS_OFFSET = var_8h;\n        uStack88 = 0x450006;\n        iStack92 = 0x44fffe;\n        iVar2 = fcn.00402748();\n        return iVar2;\n    }\n    return var_4h;\n}\n",
        "token_count": 727
    },
    "004500a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004500a0(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_70h;\n    int32_t var_68h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lprc;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    char var_1dh;\n    uint lpPoint;\n    uint var_18h;\n    uint dx;\n    uint dy;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = *param_2;\n    var_8h = param_2[1];\n    var_4h = in_EAX;\n    fcn.00404d04();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    *(var_4h + 0x58) = 0;\n    if ((*(var_4h + 0x88) != '\\0') && (*(var_4h + 0x60) != 0)) {\n        cVar2 = fcn.004464dc();\n        if (cVar2 != '\\0') {\n            fcn.0042e354();\n            iVar4 = fcn.0044daa0();\n            if (iVar4 == *(var_4h + 0x60)) {\n                var_60h = *(var_4h + 0x60);\n                var_58h = var_ch;\n                var_54h = var_8h;\n                iVar4 = fcn.0044feec();\n                var_54h = var_54h + iVar4;\n                var_50h = fcn.0044ce64();\n                var_4ch = *(var_4h + 0x5c);\n                fcn.0042f448();\n                (**(**(var_4h + 0x60) + 0x40))();\n                lpPoint = 0;\n                var_18h = 0;\n                piVar1 = *(*(var_4h + 0x60) + 0x30);\n                if (piVar1 == NULL) {\n                    iVar4 = *(var_4h + 0x60);\n                    cVar2 = fcn.004036bc();\n                    if ((cVar2 != '\\0') && (*(iVar4 + 400) != 0)) {\n                        sub.user32.dll_ClientToScreen();\n                    }\n                }\n                else {\n                    (**(*piVar1 + 0x40))();\n                }\n                sub.user32.dll_OffsetRect();\n                fcn.0042f5ec();\n                fcn.0044da68();\n                fcn.0042cbdc();\n                fcn.004043a0();\n                var_30h = 0;\n                var_2ch = *(var_4h + 0x74);\n                var_5ch = *0x46fad0;\n                var_24h = 0;\n                arg_8h = &var_60h;\n                iVar4 = fcn.00430c4c(arg_8h);\n                var_1dh = iVar4 == 0;\n                if ((var_1dh) && (*(var_4h + 0x11a) != 0)) {\n                    (**(var_4h + 0x118))(&var_60h);\n                }\n                if ((var_1dh == '\\0') || (*(var_4h + 0x60) == 0)) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                *(var_4h + 0x58) = uVar3;\n                if ((*(var_4h + 0x58) != '\\0') && (var_28h != 0)) {\n                    fcn.00450040(&stack0xfffffffc);\n                    (**(**(var_4h + 0x84) + 0x70))();\n                    (**(**(var_4h + 0x84) + 0xd4))(&var_70h, var_24h);\n                    sub.user32.dll_OffsetRect(&var_70h, var_58h, var_54h);\n                    cVar2 = fcn.0040372c();\n                    if (cVar2 != '\\0') {\n                        iVar4 = fcn.004219fc();\n                        var_70h = var_70h - (iVar4 + 5);\n                        iVar4 = fcn.004219fc();\n                        var_68h = var_68h - (iVar4 + 5);\n                    }\n                    fcn.0042f5c0();\n                    *(var_4h + 100) = var_88h;\n                    *(var_4h + 0x68) = var_84h;\n                    fcn.0042f5c0();\n                    *(var_4h + 0x6c) = var_88h;\n                    *(var_4h + 0x70) = var_84h;\n                    fcn.0042fc38();\n                    (**(**(var_4h + 0x84) + 0xd0))(var_24h);\n                    fcn.0044dbb4();\n                    if (var_30h < 1) {\n                        fcn.0044fcbc();\n                    }\n                    else {\n                        fcn.0044fcbc();\n                    }\n                    goto code_r0x0045041f;\n                }\n            }\n        }\n    }\n    if (var_30h < 1) {\n        fcn.0044feb4();\n    }\n    else {\n        fcn.0044fcbc();\n    }\ncode_r0x0045041f:\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040432c();\n    fcn.00404dc8();\n    return;\n}\n",
        "token_count": 1437
    },
    "0045045c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045045c(void)\n\n{\n    if ((*(*0x47dc0c + 0x68) == 0) || (*(*(*0x47dc0c + 0x68) + 0x23c) == 0)) {\n        fcn.0040435c();\n    }\n    else {\n        fcn.0040435c();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00450498": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.00450498(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uStack24;\n    \n    iVar1 = *(*0x47dc0c + 0x6c);\n    if (iVar1 == 0) {\ncode_r0x004504c3:\n        if ((iVar1 != *(in_EAX + 0x44)) && (*(in_EAX + 0x44) != 0)) {\n            iVar3 = fcn.00430c4c(param_1);\n            iVar3 = iVar3 + -1;\n            if (iVar3 == 0) goto code_r0x004504e3;\n        }\n        uVar4 = 0;\n    }\n    else {\n        iVar3 = fcn.00430c4c(param_1);\n        iVar3 = iVar3 + -1;\n        if (iVar3 != 0) goto code_r0x004504c3;\ncode_r0x004504e3:\n        uVar4 = CONCAT31(iVar3 >> 8, 1);\n    }\n    uVar2 = uVar4 & 0xff;\n    uStack24 = param_2 & 0xffffff00 | uVar2;\n    uStack24._0_1_ = uVar2;\n    if (uStack24 == '\\0') {\n        uVar4 = fcn.004036bc();\n        if (((uVar4 != '\\0') && (*(param_1 + 0x6a) != '\\0')) && (*(param_1 + 0x60) != '\\0')) {\n            uVar4 = fcn.0043bdec();\n        }\n    }\n    return CONCAT44(uStack24, uVar4 & 0xffffff00 | uVar2);\n}\n",
        "token_count": 433
    },
    "00450528": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00450528(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xba) != 0) {\n        in_EAX = (**(in_EAX + 0xb8))();\n    }\n    return CONCAT44(param_1, in_EAX) & 0xffffff00ffffff00;\n}\n",
        "token_count": 83
    },
    "00450550": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00450550(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc2) != 0) {\n        in_EAX = (**(in_EAX + 0xc0))();\n    }\n    return CONCAT44(param_1, in_EAX) & 0xffffff00ffffff00;\n}\n",
        "token_count": 84
    },
    "00450604": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00450604(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x450657;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    *0x47dc10 = *0x47dc10 + 1;\n    if (*0x47dc10 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x47dc08 != 0) {\n            iStack20 = 0x45062b;\n            fcn.00446288();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x47dc1c != 0) {\n            iStack20 = *0x47dc1c;\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        fcn.00414c6c();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 262
    },
    "00451720": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00451720(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char in_CL;\n    uchar in_ZF;\n    uint var_1h;\n    \n    fcn.00404704();\n    if (in_ZF) {\n        iVar1 = fcn.004048fc();\n    }\n    else {\n        iVar1 = (**0x46fc04)();\n    }\n    if (iVar1 == 0) {\n        fcn.0040435c();\n        if (in_CL != '\\0') {\n            fcn.00404308();\n        }\n    }\n    else {\n        fcn.00404818(arg_8h);\n        if (in_CL != '\\0') {\n            fcn.004045c0();\n            fcn.00404858();\n        }\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "004517b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004517b8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = in_ECX;\n    if (-1 < in_ECX) {\n        do {\n            iVar2 = iVar2 + -1;\n        } while (-1 < iVar2);\n    }\n    puStack32 = 0x4517e1;\n    fcn.004047a8();\n    puStack32 = 0x4517f3;\n    fcn.00404f24();\n    uStack36 = 0x451862;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (-1 < in_ECX) {\n        iVar2 = in_ECX + 1;\n        puStack32 = &stack0xfffffffc;\n        do {\n            bVar3 = arg_8h == '\\0';\n            if (bVar3) {\n                cVar1 = fcn.004511a0();\n                if (cVar1 != '\\0') break;\n            }\n            else {\n                fcn.00404704();\n                if (bVar3) break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x451869;\n    uStack36 = 0x451859;\n    fcn.00404dfc();\n    uStack36 = 0x451861;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 402
    },
    "004521d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004521d0(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack36 = 0x4521e3;\n        in_EAX = fcn.0040387c();\n    }\n    uStack40 = 0x45225f;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0041da6c();\n    iVar1 = in_EAX;\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (iVar1 = *0x46fc54,  *0x46fc54 != 0)) {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n        iVar1 = *0x46fc54;\n    }\n    *0x46fc54 = iVar1;\n    *(in_EAX + 0x30) = 1;\n    *(in_EAX + 0x31) = 1;\n    *(in_EAX + 0x34) = 0xfa;\n    *(in_EAX + 0x38) = 1;\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x452266;\n    uStack40 = 0x45225e;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 379
    },
    "004522b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004522b0(char param_1, uint8_t param_2)\n\n{\n    char cVar1;\n    \n    if (*0x46fc54 != NULL) {\n        cVar1 = fcn.00451ddc();\n        if ((cVar1 != '\\0') &&\n           ((((param_2 | *(*0x46fc54 + 0xe) == '\\0') != 0 || (param_1 != '\\0')) && (*(*0x46fc54 + 0xc) != '\\0')))) {\n            (**(**0x46fc54 + 0x30))();\n        }\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00452398": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00452398(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t arg_8h;\n    uint *arg_ch;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4527ad;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    *0x46fd24 = sub.kernel32.dll_LoadLibraryA(0x4527bc);\n    if (*0x46fd24 == 0) {\n        var_8h = 0x452ab8;\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        arg_8h = 0;\n        fcn.004065fc();\n        fcn.0040b1a8(arg_8h, arg_ch);\n        fcn.00403ce4();\n    }\n    else {\n        arg_8h = *0x46fd24;\n        *0x46fc58 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4527c8);\n        *0x46fc5c = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4527d0);\n        *0x46fc60 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4527d8);\n        *0x46fc64 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4527e4);\n        *0x46fc6c = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4527ec);\n        *0x46fc70 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4527f8);\n        *0x46fc74 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452804);\n        *0x46fc78 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452810);\n        *0x46fc7c = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452818);\n        *0x46fc80 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452820);\n        *0x46fc84 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x45282c);\n        *0x46fc68 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452838);\n        *0x46fc88 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452844);\n        *0x46fc8c = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x45284c);\n        *0x46fc90 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452854);\n        *0x46fc94 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x45285c);\n        *0x46fc98 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452864);\n        *0x46fc9c = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452870);\n        *0x46fca0 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452878);\n        *0x46fca4 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452880);\n        *0x46fca8 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452888);\n        *0x46fcac = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452894);\n        *0x46fcb0 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4528a0);\n        *0x46fcb4 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4528a8);\n        *0x46fcb8 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4528b8);\n        *0x46fccc = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4528c8);\n        *0x46fcc8 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4528d8);\n        *0x46fcc4 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4528ec);\n        *0x46fcc0 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4528fc);\n        *0x46fcbc = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x45290c);\n        *0x46fd0c = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452918);\n        *0x46fd10 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452928);\n        *0x46fd04 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452934);\n        *0x46fd00 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x45294c);\n        *0x46fcfc = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452964);\n        *0x46fcf8 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452980);\n        *0x46fcf4 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452998);\n        *0x46fcf0 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4529b0);\n        *0x46fd08 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4529c8);\n        *0x46fce8 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4529e0);\n        *0x46fce4 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x4529f4);\n        *0x46fcdc = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452a0c);\n        *0x46fcd8 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452a1c);\n        *0x46fcec = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452a2c);\n        *0x46fce0 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452a44);\n        *0x46fcd0 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452a54);\n        *0x46fcd4 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452a60);\n        *0x46fd14 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452a6c);\n        *0x46fd18 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452a7c);\n        *0x46fd1c = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452a8c);\n        *0x46fd20 = sub.kernel32.dll_GetProcAddress_1(*0x46fd24, 0x452a98);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404308(0x4527b4);\n    return;\n}\n",
        "token_count": 1847
    },
    "00453688": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00453688(void)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x453722;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    (**(*in_EAX[3] + 0x44))();\n    (**(*in_EAX + 0x24))();\n    uVar1 = fcn.004047b8();\n    iVar2 = (***0x47bfa0)();\n    if (iVar2 == 0) {\n        fcn.00453dc0();\n    }\n    else {\n        iVar2 = *(iVar2 + 0xc);\n        for (iVar3 = 0; *(iVar2 + iVar3 * 4) != 0; iVar3 = iVar3 + 1) {\n            (**(*in_EAX + 0x78))();\n            (**(*in_EAX[3] + 0x38))();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    uStack36 = 0x453729;\n    uStack40 = 0x453721;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 333
    },
    "00454764": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00454764(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041da6c();\n    if (**0x47c1dc == 0) {\n        iVar1 = fcn.00453f00();\n        **0x47c1dc = iVar1;\n    }\n    *0x46fd4c = *0x46fd4c + 1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 198
    },
    "004547bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004547bc(void)\n\n{\n    char extraout_DL;\n    \n    fcn.004038e4();\n    *0x46fd4c = *0x46fd4c + -1;\n    if (*0x46fd4c == 0) {\n        fcn.00403530();\n        **0x47c1dc = 0;\n    }\n    fcn.0041dab8();\n    if ('\\0' < extraout_DL) {\n        fcn.004038cc();\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00454808": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454808(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x454868;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(in_EAX + 0x32) != 0) {\n        fcn.00409330(&fcn.00454808::var_4h);\n        (**(in_EAX + 0x30))(var_4h);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x45486f;\n    uStack28 = 0x454867;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 213
    },
    "00454f3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00454f3c(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.00454f3c::var_1h + 1;\n    uStack32 = 0x455076;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &fcn.00454f3c::var_1h + 1;\n    if (*(in_EAX + 0x10) == '\\0') {\n        puStack40 = 0x454f6e;\n        fcn.004065fc();\n        puStack40 = 0x454f7d;\n        fcn.0040b16c();\n        puStack40 = 0x454f82;\n        fcn.00403ce4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    if ((**0x47c2c0 != 0) && (*(**0x47c2c0 + 0x30) != '\\0')) {\n        if (param_2 == -2) {\n            do {\n                puStack40 = 0x454faf;\n                var_1h._0_1_ = fcn.00454f3c();\n            } while (var_1h == '\\0');\ncode_r0x00455060:\n            *in_FS_OFFSET = iStack36;\n            puStack28 = 0x45507d;\n            uStack32 = 0x455075;\n            fcn.00404308();\n            return;\n        }\n        if (*(**0x47c2c0 + 0x34) < param_2) {\n            puStack40 = 0x454fdc;\n            var_1h._0_1_ = fcn.00454f3c();\n            if (var_1h != '\\0') goto code_r0x00455060;\n            param_2 = *(**0x47c2c0 + 0x34);\n        }\n    }\n    puStack40 = 0x454ffb;\n    fcn.00403500();\n    uStack44 = 0x455059;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.00454f3c::var_1h + 1;\n    fcn.0041516c();\n    iVar2 = (**(***0x47c1dc + 0x50))(param_2, 0);\n    var_1h._0_1_ = iVar2 == 1;\n    fcn.004522b0();\n    *in_FS_OFFSET = param_2;\n    iStack48 = 0x455060;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 737
    },
    "004559bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004559bc(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint *puStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x455b42;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x4559eb;\n    var_4h = in_EAX;\n    (**(*in_EAX + 0x30))();\n    uStack52 = 0x455b20;\n    puStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    while( true ) {\n        uVar3 = 1;\n        (**(*var_4h + 0x74))(&fcn.004559bc::var_8h);\n        fcn.00404704();\n        if (uVar3) break;\n        uVar3 = arg_8h == '\\0';\n        if (!uVar3) {\n            puStack56 = &fcn.004559bc::var_ch;\n            fcn.00404818();\n            fcn.00404704();\n            if (uVar3) {\n                fcn.00404858();\n            }\n        }\n        cVar1 = fcn.004036bc();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.004036bc();\n            if (cVar1 == '\\0') {\n                if (in_EDX != NULL) {\n                    fcn.004065fc();\n                    fcn.0040b16c();\n                    fcn.00403ce4();\n                }\n            }\n            else {\n                uVar2 = fcn.004045c0();\n                fcn.00404810(uVar2);\n                fcn.00417eac();\n                fcn.004043a0();\n                uVar2 = fcn.004045c0();\n                fcn.00404810(uVar2);\n                fcn.00417eac();\n            }\n        }\n        else {\n            (**(*in_EDX + 0x38))();\n        }\n    }\n    fcn.00403d90();\n    *in_FS_OFFSET = puStack56;\n    puStack48 = 0x455b49;\n    uStack52 = 0x455b41;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 649
    },
    "00455b6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00455b6c(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack24 = &fcn.00455b6c::var_1h + 1;\n    uStack28 = 0x455bf9;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*(in_EAX + 0x1d) != '\\0') || (*(in_EAX[0x1b] + 0x10) == '\\0')) {\n        puVar1 = &fcn.00455b6c::var_1h + 1;\n        if (*(in_EAX[0x1b] + 0x10) != '\\0') {\n            (**(*in_EAX + 0x5c))();\n            puVar1 = puStack24;\n        }\n        puStack24 = puVar1;\n        iVar2 = fcn.00455cf0();\n        if (((iVar2 == 0 | var_1h) != 0) && (param_2 != '\\0')) {\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x455c00;\n    uStack28 = 0x455bf8;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 406
    },
    "00456164": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00456164(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    (**(*in_EAX + 0x48))();\n    cVar2 = (**(*in_EAX + 0x54))();\n    iVar3 = 0;\n    if (cVar2 != '\\0') {\n        if (arg_8h == 0) {\n            arg_8h = in_EAX[0x25];\n        }\n        cVar2 = fcn.00454f3c();\n        if (cVar2 != '\\0') {\n            if (*(in_EAX + 0x20) == '\\0') {\n                fcn.00456130(&stack0xfffffffc);\n            }\n            else {\n                piVar1 = in_EAX[0x1f];\n                if (*(piVar1 + 0x10) == '\\0') {\n                    fcn.00456130(&stack0xfffffffc);\n                }\n                else {\n                    fcn.00417c7c();\n                    var_8h = (**(*piVar1 + 0x40))();\n                }\n            }\n            *(in_EAX + 0x1d) = var_8h == 0;\n            if (var_8h != 0) {\n                cVar2 = fcn.00453dcc(0);\n                if (cVar2 != '\\0') {\n                    var_8h = 0;\n                    if (*(in_EAX[0x1b] + 0x10) != '\\0') {\n                        (**(*in_EAX + 0x5c))();\n                    }\n                    iVar3 = fcn.00455cf0();\n                    if (iVar3 == 0) {\n                        fcn.00453e80();\n                    }\n                }\n                if ((*(in_EAX + 0x1a) != '\\0') && (0 < var_8h)) {\n                    iVar4 = 1;\n                    iVar3 = var_8h;\n                    do {\n                        *(*(arg_8h + 4) + iVar4) = *(*(arg_8h + 4) + iVar4) & 0x7f;\n                        iVar4 = iVar4 + 1;\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                }\n            }\n            if (arg_ch == '\\0') {\n                (**(*in_EAX + 0x34))();\n            }\n            else {\n                uVar5 = fcn.00417c7c();\n                fcn.00417c68(uVar5, uVar5 >> 0x20);\n                fcn.00417eac();\n            }\n            if (*(in_EAX + 0x20) != '\\0') {\n                (**(*in_EAX[0x1f] + 0x34))();\n            }\n            (**(*in_EAX + 0x48))();\n            iVar3 = var_8h;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 718
    },
    "00456308": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456308(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint *puStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack44 = 0x456459;\n    puStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = fcn.004045c0();\n    if (iVar1 == 0) {\n        fcn.004043a0();\n    }\n    else {\n        fcn.004043a0();\n    }\n    *(in_EAX + 0x24) = 0;\n    iVar1 = 0;\n    do {\n        iVar2 = fcn.00455cf0();\n        if (0 < iVar2) {\n            fcn.00417c7c();\n            fcn.004043f8();\n            iVar1 = fcn.004048fc();\n        }\n        if (iVar1 == 0) {\n            (**(*in_EAX + 0x48))();\n            iVar2 = (**(*in_EAX + 0x70))(0, 1);\n            *(in_EAX + 0x24) = iVar2 == 0;\n            if (*(in_EAX + 0x24) != '\\0') {\n                fcn.00404308();\n                goto code_r0x0045643e;\n            }\n        }\n    } while (iVar1 < 1);\n    fcn.004045c0();\n    (**(*in_EAX + 0x60))();\n    fcn.00404944();\n    iVar1 = fcn.004045c0();\n    uVar3 = iVar1 == 0;\n    if (uVar3) {\n        puStack48 = &fcn.00456308::var_14h;\n        fcn.004045c0();\n        fcn.00404818();\n        fcn.00404704();\n        if (uVar3) {\n            fcn.004045c0();\n            fcn.00404944();\n        }\n    }\ncode_r0x0045643e:\n    *in_FS_OFFSET = puStack48;\n    puStack40 = 0x456460;\n    uStack44 = 0x456458;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 601
    },
    "00456700": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456700(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    ulong uVar4;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((0 < in_ECX) && (in_EDX != 0)) {\n        (**(*in_EAX + 0x48))();\n        if ((in_EAX[0x28] == 0 | arg_8h) == 0) {\n            fcn.00417eac();\n            uVar4 = fcn.00417c7c();\n            iVar3 = uVar4 >> 0x20;\n            uVar1 = in_EAX[0x29];\n            if (uVar1 >> 0x1f == iVar3) {\n                if (uVar4 < uVar1) {\n                    return;\n                }\n            }\n            else if (iVar3 < uVar1 >> 0x1f) {\n                return;\n            }\n            if (0 < uVar1) {\n                fcn.00456c7c();\n            }\n        }\n        else {\n            var_ch = 1;\n            do {\n                if (*(in_EAX + 0x20) == '\\0') {\n                    fcn.004566b8(&stack0xfffffffc);\n                }\n                else if (*(in_EAX[0x1f] + 0x41) == '\\0') {\n                    fcn.004566b8(&stack0xfffffffc);\n                }\n                else {\n                    var_14h = (**(*in_EAX[0x1f] + 0x44))();\n                }\n                *(in_EAX + 0x1d) = var_14h == 0;\n                (**(*in_EAX + 0x48))();\n                cVar2 = fcn.00453dcc(0);\n                if (cVar2 != '\\0') {\n                    (**(*in_EAX + 0x5c))();\n                    fcn.00453e80();\n                }\n                (**(*in_EAX + 0x34))();\n                if (*(in_EAX + 0x20) != '\\0') {\n                    (**(*in_EAX[0x1f] + 0x38))();\n                }\n                var_ch = var_ch + var_14h;\n            } while (var_ch <= in_ECX);\n        }\n    }\n    return;\n}\n",
        "token_count": 584
    },
    "00456880": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456880(char param_1)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStackY48;\n    uchar *puStackY44;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x456897;\n    fcn.004047a8();\n    uStack32 = 0x456945;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (((**0x47c064 != NULL) && (*(in_EAX + 0x20) == '\\0')) && (param_1 != '\\0')) {\n        puStack28 = &stack0xfffffffc;\n        (***0x47c064)();\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x45694c;\n        uStack32 = 0x456944;\n        fcn.00404308();\n        return;\n    }\n    puStackY44 = 0x4568e5;\n    puStack28 = &stack0xfffffffc;\n    fcn.00418158(0x40);\n    uStackY48 = 0x456928;\n    uStackY52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStackY44 = &stack0xfffffffc;\n    (**(*in_EAX + 0x88))();\n    fcn.00417c7c();\n    *in_FS_OFFSET = 0;\n    uStackY48 = 0x45692f;\n    uStackY52 = 0x456927;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 402
    },
    "004569f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004569f0(uint arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char in_CL;\n    int32_t *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x456b52;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &stack0xfffffffc;\n    if (in_CL != '\\0') {\n        puStack52 = 0x456a24;\n        fcn.00417c68(0, 0);\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    puStack52 = 0x456a2b;\n    fcn.00417c7c();\n    puStack52 = 0x456a34;\n    fcn.00417c48();\n    if (arg_8h != '\\0') {\n        puStack52 = 0x456a48;\n        fcn.00456958();\n    }\n    puStack52 = 0x456a54;\n    (**(*in_EAX + 0x30))();\n    uStack56 = 0x456b35;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    puVar2 = fcn.00403500();\n    uVar5 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    (***puVar2)();\n    while( true ) {\n        uVar3 = fcn.00417c7c();\n        fcn.00417c48(uVar3);\n        iVar4 = fcn.0045122c();\n        if (iVar4 == 0) break;\n        iVar4 = (**(*in_EDX + 8))();\n        if (iVar4 == 0) {\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n        }\n        uVar5 = 0;\n        fcn.00456700(0);\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.0040cbb8();\n    return;\n}\n",
        "token_count": 595
    },
    "00456c7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456c7c(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint arg_8h;\n    \n    iVar2 = fcn.00417c7c();\n    if (iVar2 >> 0x20 == 0) {\n        if (iVar2 == 0) {\n            return;\n        }\n    }\n    else if (iVar2 < 0x100000000) {\n        return;\n    }\n    if (param_2 != 0xffffffff) {\n        uVar3 = fcn.00417c7c();\n        iVar1 = uVar3 >> 0x20;\n        if (param_2 >> 0x1f == iVar1) {\n            if (param_2 <= uVar3) {\ncode_r0x00456ce7:\n                fcn.00456700(1);\n                fcn.00456e78();\n                return;\n            }\n        }\n        else if (param_2 >> 0x1f <= iVar1) goto code_r0x00456ce7;\n    }\n    arg_8h = 1;\n    fcn.00417c7c();\n    fcn.00456700(arg_8h);\n    fcn.00456d0c();\n    return;\n}\n",
        "token_count": 295
    },
    "00457078": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00457078(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    puStack36 = &stack0xfffffffc;\n    uStack28 = 0x457114;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(in_EAX + 0xd) != '\\0') {\ncode_r0x0045710a:\n        *in_FS_OFFSET = uStack44;\n        return;\n    }\n    uStack40 = 0x4570fa;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    cVar1 = fcn.0045721c();\n    if (cVar1 != '\\0') {\n        fcn.0041d96c();\n        if (*(in_EAX + 0xd) != '\\0') {\n            fcn.00403d90();\n            goto code_r0x0045710a;\n        }\n    }\n    (**(*in_EAX + 0x10))();\n    while( true ) {\n        cVar1 = fcn.0045721c();\n        if (cVar1 != '\\0') break;\n        (**(*in_EAX + 8))();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x457101;\n    uStack40 = 0x4570f9;\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 391
    },
    "00457160": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00457160(uchar param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uchar extraout_CL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n        param_1 = extraout_CL;\n    }\n    fcn.0041d64c();\n    *(in_EAX + 0x35) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 190
    },
    "0045721c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0045721c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0xd) == '\\0') && (*(in_EAX + 0x35) == '\\0')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 66
    },
    "004577d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004577d0(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x45782d;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x38) == 0) {\n        fcn.004065fc();\n        fcn.0040b16c();\n        in_EAX = fcn.00403ce4();\n        puVar1 = puStack16;\n    }\n    puStack16 = puVar1;\n    (**(*(in_EAX + 0x38) + 0x14))();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x457834;\n    uStack20 = 0x45782c;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 250
    },
    "00457ec0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00457ec0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x92) != 0) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "004582c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004582c4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack36 = 0x4582db;\n    (**(**(in_EAX + 0x4c) + 8))();\n    uStack36 = 0x4582e9;\n    var_10h = fcn.004162c4();\n    if (-1 < var_10h + -1) {\n        do {\n            uStack36 = 0x45830a;\n            fcn.004551a8();\n            uStack36 = 0x458318;\n            fcn.0041516c();\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    uStack36 = 0;\n    uStack40 = *(in_EAX + 0x48);\n    puStack44 = 0x45833d;\n    iVar1 = (**(***0x47c1dc + 0x50))();\n    if (((0 < iVar1) && (*(in_EAX + 0xd) == '\\0')) && (var_10h = *(*(in_EAX + 0x4c) + 8),  -1 < var_10h + -1)) {\n        do {\n            puStack44 = 0x458381;\n            iVar1 = fcn.00455c20();\n            puStack44 = 0x458392;\n            fcn.004152c8();\n            puStack44 = 0x45839f;\n            fcn.00454eac();\n            puStack44 = 0x4583a7;\n            iVar2 = fcn.00458450();\n            if (*(iVar2 + 0xa0) != 0) {\n                uStack48 = 0x4583f5;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &stack0xfffffffc;\n                iVar2 = fcn.00458450();\n                (**(**(iVar2 + 0xa0) + 0x34))();\n                fcn.004565a8();\n                fcn.004565c8();\n                *in_FS_OFFSET = uStack52;\n            }\n            if (iVar1 != 0) {\n                puStack44 = 0x45841b;\n                iVar2 = (**(**(*(in_EAX + 0x50) + 0x70) + 0x34))();\n                *(iVar2 + 0x48) = iVar1;\n                puStack44 = 0x458436;\n                fcn.004158d4();\n                puStack44 = 0x45843d;\n                fcn.004571d8();\n            }\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 711
    },
    "00458a9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00458a9c(uint arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *puVar2;\n    int32_t iStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = &var_1h + 1;\n    uStack24 = 0x458b11;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack28;\n    puVar1 = &var_1h + 1;\n    if (*(in_EAX + 0xb2) == 0) {\n        fcn.004065fc();\n        fcn.0040b16c();\n        in_EAX = fcn.00403ce4();\n        puVar1 = puStack20;\n    }\n    puStack20 = puVar1;\n    var_1h._0_1_ = 0;\n    puVar2 = &var_1h;\n    (**(in_EAX + 0xb0))(puVar2, arg_8h);\n    *in_FS_OFFSET = puVar2;\n    iStack28 = 0x458b18;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 321
    },
    "00458b24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __fastcall fcn.00458b24(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x458d3c;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00458b24::var_24h;\n    uStack48 = 0x458ced;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    var_4h = param_2;\n    fcn.00457ec0();\n    if (*(var_4h + 0x30) == 0) {\n        uVar2 = fcn.00403500();\n        *(var_4h + 0x30) = uVar2;\n    }\n    iVar3 = fcn.004036e0();\n    (**(*in_EAX + 0x50))();\n    iVar4 = fcn.004045c0();\n    if (0 < iVar4) {\n        (**(**(var_4h + 0x48) + 0x84))();\n        (**(**(var_4h + 0x48) + 0x84))();\n    }\n    if ((*(in_EAX + 0xb2) != 0) && (0 < in_EAX[0x2a])) {\n        var_8h = 1;\n        var_ch = in_EAX[0x2a];\n        do {\n            fcn.004065fc();\n            (**(**(var_4h + 0x48) + 0x80))();\n            fcn.00456d18();\n            fcn.0040435c();\n            fcn.004065fc();\n            (**(**(var_4h + 0x48) + 0x80))();\n            fcn.00456d18();\n            fcn.0040435c();\n            (**(**(var_4h + 0x48) + 0x84))();\n            cVar1 = (**(*in_EAX + 0x4c))(*(iVar3 + 8));\n            if (cVar1 != '\\0') break;\n            fcn.004065fc();\n            (**(**(var_4h + 0x48) + 0x84))();\n            if (in_EAX[0x2a] == var_8h) {\n                fcn.004065fc();\n                fcn.0040b16c();\n                fcn.00403ce4();\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x458d43;\n    var_20h = 0x458d3b;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 871
    },
    "00458fa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00458fa8(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x458fed;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x47dcc8 = *0x47dcc8 + 1;\n    if (*0x47dcc8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x46fd84 != 0) {\n            iStack20 = *0x46fd84;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00404308();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 222
    },
    "0045a774": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045a774(void)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa0;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint puLen;\n    int32_t lplpBuffer;\n    uint pBlock;\n    uint dwHandle;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x45a84c;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (*0x47dce0 == 0) {\n        puStack48 = 0x45a7a9;\n        fcn.004043a0();\n        puStack48 = &fcn.0045a774::dwHandle;\n        uStack52 = 0x45a7b5;\n        uVar2 = fcn.004047b8();\n        puStack56 = 0x45a7bd;\n        uStack52 = uVar2;\n        iVar3 = sub.version.dll_GetFileVersionInfoSizeA();\n        puVar1 = puStack36;\n        if (iVar3 != 0) {\n            puStack56 = 0x45a7ca;\n            pBlock = fcn.00402728();\n            uStack60 = 0x45a829;\n            uStack64 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc0;\n            puStack56 = &stack0xfffffffc;\n            iVar3 = sub.version.dll_GetFileVersionInfoA(uVar2, dwHandle, iVar3, pBlock);\n            if (iVar3 != 0) {\n                in_stack_ffffffa0 = pBlock;\n                iVar3 = sub.version.dll_VerQueryValueA\n                                  (pBlock, 0x45a874, &fcn.0045a774::lplpBuffer, &fcn.0045a774::puLen);\n                if (iVar3 != 0) {\n                    *0x47dce0 = *(lplpBuffer + 8);\n                }\n            }\n            *in_FS_OFFSET = in_stack_ffffffa0;\n            fcn.00402748(0x45a830);\n            return;\n        }\n    }\n    puStack36 = puVar1;\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x45a853;\n    puStack48 = 0x45a84b;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 618
    },
    "0045a8c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a8c0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.0045aa80();\n    if (*(iVar1 + 0x2d2) == 0) {\n        uVar2 = fcn.004047b8();\n        uVar2 = fcn.004047b8(uVar2);\n        var_4h = sub.kernel32.dll_lstrcmpA(uVar2);\n    }\n    else {\n        iVar1 = fcn.0045aa80(&var_4h, arg_10h, arg_ch);\n        fcn.0045aa80();\n        (**(iVar1 + 0x2d0))();\n    }\n    return var_4h;\n}\n",
        "token_count": 190
    },
    "0045aac8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045aac8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = *(in_EAX + 0x24) == '\\0';\n    if (bVar2) {\n        fcn.00404704();\n        if (!bVar2) {\n            fcn.0040435c();\n            fcn.0045aa6c(1, *(in_EAX + 0x10));\n            fcn.00426ca4();\n            iVar1 = fcn.0045aa80();\n            if ((*(iVar1 + 0x25b) - 2U < 2) && (*(in_EAX + 0x25) != '\\0')) {\n                iVar1 = fcn.0045b220();\n                if (iVar1 == 0) {\n                    fcn.0045aa80();\n                    fcn.0045ce9c();\n                }\n                else {\n                    fcn.0045b220();\n                    fcn.0045b934();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "0045ab5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ab5c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x24) == '\\0') && (param_2 != *(in_EAX + 0xc))) {\n        *(in_EAX + 0xc) = param_2;\n        iVar1 = fcn.0045aa80();\n        if ((*(iVar1 + 0x25b) == '\\x01') || (*(iVar1 + 0x25b) == '\\x03')) {\n            iVar1 = fcn.0045aa80();\n            if (((*(iVar1 + 0x2d2) != 0) && (*(in_EAX + 0x24) == '\\0')) && (*(in_EAX + 0x25) != '\\0')) {\n                iVar1 = fcn.0045b220();\n                if (iVar1 == 0) {\n                    fcn.0045aa80();\n                    fcn.0045ce9c();\n                }\n                else {\n                    fcn.0045b220();\n                    fcn.0045b934();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0045ac60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ac60(char param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack32;\n    \n    if (*(in_EAX + 0x24) == '\\0') {\n    // switch table (5 cases) at 0x45ac8e\n        switch(param_2) {\n        case 0:\n            uStack32 = 4;\n            break;\n        case 1:\n            uStack32 = 8;\n            break;\n        case 2:\n            uStack32 = 1;\n            break;\n        case 3:\n            uStack32 = 2;\n            break;\n        case 4:\n            uStack32 = 0x20;\n        }\n        if (param_1 == '\\0') {\n            uStack32 = 0;\n        }\n        fcn.0045aa6c(8, *(in_EAX + 0x10), uStack32);\n        fcn.00426ca4();\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0045acfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045acfc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x24) == '\\0') && (param_2 != *(in_EAX + 0x14))) {\n        *(in_EAX + 0x14) = param_2;\n        fcn.0045aa6c(0x12, *(in_EAX + 0x10));\n        fcn.00426ca4();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0045ad54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ad54(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x24) == '\\0') && (param_2 != *(in_EAX + 0x18))) {\n        *(in_EAX + 0x18) = param_2;\n        fcn.0045aa6c(0x30, *(in_EAX + 0x10));\n        fcn.00426ca4();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0045adac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045adac(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x24) == '\\0') && (param_2 != *(in_EAX + 0x1c))) {\n        *(in_EAX + 0x1c) = param_2;\n        uVar2 = 0x18;\n        uVar4 = 0xf00;\n        uVar3 = *(in_EAX + 0x10);\n        uVar1 = fcn.00426a50(0x18, uVar3);\n        fcn.0045aa6c(uVar2, uVar3, uVar1, uVar4);\n        fcn.00426ca4();\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "0045adfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045adfc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x24) == '\\0') && (param_2 != *(in_EAX + 0x20))) {\n        *(in_EAX + 0x20) = param_2;\n        uVar2 = 0x18;\n        uVar4 = 0xf000;\n        uVar3 = *(in_EAX + 0x10);\n        uVar1 = fcn.00426acc(0x18, uVar3);\n        fcn.0045aa6c(uVar2, uVar3, uVar1, uVar4);\n        fcn.00426ca4();\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0045ae80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0045ae80(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x24) == '\\0') {\n        cVar1 = fcn.0045b180();\n        if (cVar1 != '\\0') {\n            if (param_2 == '\\0') {\n                fcn.0045aa80();\n                uVar2 = fcn.0040372c();\n            }\n            else {\n                fcn.0045aa80();\n                uVar2 = fcn.0040372c();\n            }\n        }\n    }\n    return CONCAT14(param_2, uVar2);\n}\n",
        "token_count": 173
    },
    "0045aed4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045aed4(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x24) == '\\0') {\n        cVar1 = fcn.0045b180();\n        if (cVar1 != '\\0') {\n            if (param_2 == '\\0') {\n                fcn.0045aa80();\n                fcn.0040372c();\n            }\n            else {\n                fcn.0045aa80();\n                fcn.0040372c();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0045af18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045af18(char param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x24) == '\\0') {\n        if (param_1 == '\\0') {\n            puStack20 = 0x45af6e;\n            iVar2 = fcn.0045aa80();\n            *(iVar2 + 0x245) = 1;\n            uStack24 = 0x45affb;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            iVar2 = 0;\n            if (param_2 == '\\0') {\n                puStack20 = &stack0xfffffffc;\n                cVar1 = fcn.0045ae80();\n                if (cVar1 != '\\0') {\n                    iVar2 = 1;\n                    fcn.0045aed4();\n                }\n            }\n            else {\n                puStack20 = &stack0xfffffffc;\n                cVar1 = fcn.0045ae80();\n                if (cVar1 != '\\0') {\n                    iVar2 = 2;\n                    fcn.0045aed4();\n                }\n            }\n            if (iVar2 != 0) {\n                fcn.0045aa6c();\n                fcn.00426b18();\n            }\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x45b002;\n            uStack24 = 0x45aff3;\n            iVar2 = fcn.0045aa80();\n            *(iVar2 + 0x245) = 0;\n            return;\n        }\n        do {\n            puStack20 = 0x45af42;\n            fcn.0045af18();\n            puStack20 = 0x45af49;\n            iVar2 = fcn.0045b3c8();\n            if (iVar2 == 0) {\n                return;\n            }\n            puStack20 = 0x45af5d;\n            cVar1 = fcn.0045aa88();\n        } while (cVar1 != '\\0');\n    }\n    return;\n}\n",
        "token_count": 514
    },
    "0045b05c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b05c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if (*(in_EAX + 0x24) == '\\0') {\n        iVar2 = fcn.0045aa6c();\n        if ((iVar2 != 0) && (*(in_EAX + 0x10) != 0)) {\n            cVar1 = fcn.0045b054();\n            if (param_2 == cVar1) {\n                iVar2 = fcn.0045aa80();\n                if (*(iVar2 + 0x274) != '\\0') {\n                    iVar2 = fcn.0045aa80();\n                    if (1 < *(*(iVar2 + 0x278) + 8)) {\n                        piVar3 = fcn.0045aa80();\n                        (**(*piVar3 + 0xe0))();\n                    }\n                }\n            }\n            else if (param_2 == '\\0') {\n                cVar1 = fcn.0045b054();\n                if (cVar1 != '\\0') {\n                    fcn.0045aa6c();\n                    fcn.00426c68();\n                }\n            }\n            else {\n                fcn.0045aa6c();\n                fcn.00426c68();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "0045b138": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b138(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0045aa6c();\n    if ((iVar2 != 0) && (*(in_EAX + 0x10) != 0)) {\n        if (param_2 == '\\0') {\n            cVar1 = fcn.0045b130();\n            if (cVar1 != '\\0') {\n                fcn.0045aa6c();\n                fcn.00426c74();\n            }\n        }\n        else {\n            fcn.0045aa6c();\n            fcn.00426c74();\n        }\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "0045b180": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0045b180(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    int32_t iStack16;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0x24) == '\\0') {\n        fcn.0045aa6c(0x40, *(in_EAX + 0x10));\n        iVar1 = fcn.00426c8c();\n        if (iVar1 != 0) {\n            bVar2 = 0 < iStack16;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 136
    },
    "0045b1e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045b1e8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x24) == '\\0') {\n        fcn.0045aa6c(0x40, *(in_EAX + 0x10));\n        fcn.00426ca4();\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0045b220": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0045b220(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = fcn.0045aa6c();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != 0)) {\n        fcn.0045bcf0();\n        fcn.00426bec();\n        uVar2 = fcn.0045c168();\n    }\n    return uVar2;\n}\n",
        "token_count": 120
    },
    "0045b25c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0045b25c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = fcn.0045aa6c();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != 0)) {\n        fcn.0045bcf0();\n        fcn.00426bd4();\n        uVar2 = fcn.0045c168();\n    }\n    return uVar2;\n}\n",
        "token_count": 122
    },
    "0045b298": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0045b298(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = fcn.0045aa6c();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != 0)) {\n        fcn.0045bcf0();\n        fcn.00426be0();\n        uVar2 = fcn.0045c168();\n    }\n    return uVar2;\n}\n",
        "token_count": 121
    },
    "0045b2d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0045b2d4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar2 = fcn.0045aa6c();\n    if ((iVar2 != 0) && (*(in_EAX + 0x10) != 0)) {\n        cVar1 = fcn.0045b8c8();\n        if (cVar1 != '\\0') {\n            fcn.0045bcf0();\n            fcn.00426c08();\n            uVar3 = fcn.0045c168();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 157
    },
    "0045b318": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0045b318(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar2 = fcn.0045aa6c();\n    if ((iVar2 != 0) && (*(in_EAX + 0x10) != 0)) {\n        cVar1 = fcn.0045b8c8();\n        if (cVar1 != '\\0') {\n            fcn.0045bcf0();\n            fcn.00426c14();\n            uVar3 = fcn.0045c168();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 155
    },
    "0045b36c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0045b36c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = fcn.0045aa6c();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != 0)) {\n        fcn.0045bcf0();\n        fcn.00426bc8();\n        uVar2 = fcn.0045c168();\n    }\n    return uVar2;\n}\n",
        "token_count": 122
    },
    "0045b3c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0045b3c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = fcn.0045aa6c();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != 0)) {\n        fcn.0045aa6c();\n        iVar1 = fcn.00426bc8();\n        if (iVar1 == 0) {\n            fcn.0045aa6c();\n            iVar1 = fcn.00426bd4();\n        }\n        iVar2 = *(in_EAX + 0x10);\n        while ((iVar1 == 0 && (iVar2 != 0))) {\n            fcn.0045aa6c();\n            iVar2 = fcn.00426bec();\n            fcn.0045aa6c();\n            iVar1 = fcn.00426bd4();\n        }\n        uVar3 = fcn.0045c168();\n    }\n    return uVar3;\n}\n",
        "token_count": 243
    },
    "0045b598": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b598(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t *in_FS_OFFSET;\n    uchar auStackY256 [116];\n    uint uStackY140;\n    int32_t iStackY132;\n    uint32_t arg_8h_00;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint var_5ch;\n    uint var_58h;\n    uint var_2eh;\n    int32_t var_2ah;\n    uint var_ah;\n    uchar var_6h;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack112 = &stack0xfffffffc;\n    uStack116 = 0x45b704;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    fcn.0045c584();\n    if ((arg_8h == 2) && (in_ECX != 0)) {\n        var_4h = *(in_ECX + 0x10);\n    }\n    else {\n        var_4h = 0;\n    }\n    var_5h = fcn.0045b180();\n    var_6h = fcn.0045b054();\n    iVar2 = fcn.0045b220();\n    if (iVar2 != 0) {\n        fcn.0045b220();\n        cVar1 = fcn.0045ae50();\n        if (cVar1 != '\\0') {\n            fcn.0045b220();\n            fcn.0045b028();\n            fcn.0045b220();\n            fcn.0045b1e8();\n        }\n    }\n    var_2eh = 4;\n    var_2ah = in_EAX[4];\n    var_ah = 0;\n    fcn.0045aa6c();\n    fcn.00426ca4();\n    fcn.0045bfcc();\n    arg_8h_00 = &stack0xffffff00 | arg_8h;\n    iStackY132 = 0x45b66e;\n    iVar2 = fcn.0045bff0(arg_8h_00, &fcn.0045b598::var_58h);\n    if (iVar2 == 0) {\n        iStackY132 = 0x45b681;\n        fcn.004065fc();\n        iStackY132 = 0x45b690;\n        fcn.0040b16c();\n        iStackY132 = 0x45b695;\n        fcn.00403ce4();\n    }\n    iStackY132 = 0x45b69c;\n    iVar3 = fcn.0045b57c();\n    iVar3 = iVar3 + -1;\n    if (-1 < iVar3) {\n        do {\n            arg_8h_00 = 0;\n            uStackY140 = 0x45b6b0;\n            iStackY132 = iVar2;\n            fcn.0045b4a8();\n            uStackY140 = 0x45b6b9;\n            fcn.0045b598(arg_8h_00, iStackY132);\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    iStackY132 = 0x45b6c6;\n    fcn.0045aa6c();\n    iStackY132 = 0x45b6ce;\n    fcn.00426ae8();\n    in_EAX[4] = iVar2;\n    iStackY132 = 0x45b6da;\n    (**(*in_EAX + 8))();\n    iStackY132 = 0x45b6e4;\n    fcn.0045b1e8();\n    iStackY132 = 0x45b6ee;\n    fcn.0045b05c();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack120 = 0x45b70b;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 938
    },
    "0045b714": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b714(char param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    uint arg_ch;\n    uint unaff_EBX;\n    unkbyte3 Var7;\n    uint arg_8h;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    if (*(in_EAX + 0x24) != '\\0') {\n        return;\n    }\n    puStack44 = 0x45b73a;\n    iVar6 = fcn.0045aa80();\n    uVar1 = *(iVar6 + 0x2b8);\n    uVar2 = *(iVar6 + 700);\n    puStack44 = 0x45b754;\n    iVar6 = fcn.0045aa80();\n    uVar3 = *(iVar6 + 0x2b0);\n    uVar4 = *(iVar6 + 0x2b4);\n    puStack44 = 0x45b76e;\n    iVar6 = fcn.0045aa80();\n    *(iVar6 + 0x2b8) = 0;\n    *(iVar6 + 700) = 0;\n    puStack44 = 0x45b784;\n    iVar6 = fcn.0045aa80();\n    *(iVar6 + 0x2b0) = 0;\n    *(iVar6 + 0x2b4) = 0;\n    uStack48 = 0x45b892;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    if ((param_2 == 0) || (puStack44 = &stack0xfffffffc,  cVar5 = fcn.0045aa88(),  cVar5 == '\\0')) {\n        Var7 = unaff_EBX >> 8;\n        arg_8h = CONCAT31(Var7, 1);\n        iVar6 = param_2;\n        if ((param_2 != 0) && (1 < param_1 - 2U)) {\n            iVar6 = fcn.0045b220();\n        }\n    // switch table (5 cases) at 0x45b7e3\n        switch(param_1) {\n        case '\\0':\n        case '\\x02':\n            arg_8h = CONCAT31(Var7, 1);\n            break;\n        case '\\x01':\n        case '\\x03':\n            arg_8h = 0;\n            break;\n        case '\\x04':\n            param_2 = fcn.0045b298();\n            if (param_2 == 0) {\n                arg_8h = 0;\n            }\n            else {\n                arg_8h = CONCAT31(Var7, 2);\n            }\n        }\n        if (iVar6 == 0) {\n            arg_ch = 0;\n        }\n        else {\n            arg_ch = *(iVar6 + 0x10);\n        }\n        if (param_2 != in_EAX) {\n            fcn.0045b598(arg_8h, arg_ch);\n            in_stack_ffffffc4 = arg_8h;\n        }\n        iVar6 = fcn.0045b220();\n        if (iVar6 != 0) {\n            fcn.0045b1e8();\n            fcn.0045b028();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    uStack52 = 0x45b899;\n    iVar6 = fcn.0045aa80();\n    *(iVar6 + 0x2b8) = uVar1;\n    *(iVar6 + 700) = uVar2;\n    iVar6 = fcn.0045aa80();\n    *(iVar6 + 0x2b0) = uVar3;\n    *(iVar6 + 0x2b4) = uVar4;\n    return;\n}\n",
        "token_count": 949
    },
    "0045b8a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0045b8a0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x24) == '\\0') {\n        iVar1 = fcn.0045b220();\n        if (iVar1 == 0) {\n            iVar1 = fcn.0045b298();\n            if (iVar1 == 0) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 108
    },
    "0045b8c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0045b8c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint wParam;\n    \n    if (*(in_EAX + 0x24) == '\\0') {\n        wParam = 0xffffffff;\n        fcn.0045aa6c();\n        iVar1 = fcn.00426b34(wParam);\n        if (iVar1 != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 107
    },
    "0045b8f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b8f8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t wParam;\n    \n    fcn.00402e14();\n    if (*(in_EAX + 0x24) == '\\0') {\n        wParam = -(param_2 != '\\0');\n        fcn.0045aa6c();\n        fcn.00426b34(wParam);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0045b940": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0045b940(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint var_dh;\n    uint var_9h;\n    uint var_5h;\n    uint var_1h;\n    \n    var_1h._0_1_ = false;\n    if (*(in_EAX + 0x24) == '\\0') {\n        fcn.0045c584();\n        fcn.0045aa6c();\n        iVar2 = fcn.00426d00();\n        var_1h._0_1_ = iVar2 != 0;\n        in_EAX = 0;\n        if (arg_8h != '\\0') {\n            in_EAX = fcn.0045b36c();\n            while (in_EAX != 0) {\n                cVar1 = fcn.0045b180();\n                if (cVar1 != '\\0') {\n                    fcn.0045b940(1);\n                }\n                in_EAX = fcn.0045b25c();\n            }\n        }\n    }\n    return in_EAX & 0xffffff00 | var_1h._0_1_;\n}\n",
        "token_count": 296
    },
    "0045b9dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045b9dc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x24) == '\\0') {\n        fcn.00403530();\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "0045bd04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045bd04(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    char var_5h;\n    uint var_4h;\n    \n    puStack16 = 0x45bd18;\n    var_5h = fcn.004363bc();\n    if (var_5h != '\\0') {\n        puStack16 = 0x45bd29;\n        fcn.0045c198();\n    }\n    uStack20 = 0x45bd7a;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.0045c584();\n    cVar1 = fcn.004363bc();\n    if (cVar1 != '\\0') {\n        fcn.004360b8();\n        fcn.00426b00();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x45bd81;\n    if (var_5h != '\\0') {\n        uStack20 = 0x45bd79;\n        fcn.0045c1e4();\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "0045bda8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bda8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uchar auStackY256 [128];\n    uint uStackY128;\n    uint uStackY124;\n    uint uStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint var_3ch;\n    uint var_38h;\n    uint8_t var_dh;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    uStack84 = 0x45bf44;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puVar1 = &stack0xfffffffc;\n    var_8h = in_EDX;\n    var_4h = in_ECX;\n    if (in_EDX == 0) {\n        puStack92 = 0x45bdd8;\n        var_8h = (**(**(in_EAX + 4) + 0xc4))();\n        puVar1 = puStack80;\n    }\n    puStack80 = puVar1;\n    uStack96 = 0x45bf17;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    var_ch = 0;\n    var_dh = *(arg_8h + 0x46fda0);\n    puStack92 = &stack0xfffffffc;\n    if (var_4h != 0) {\n        if (arg_8h < 2) {\n            puStack92 = &stack0xfffffffc;\n            fcn.0045b220();\n        }\n        else {\n            puStack92 = &stack0xfffffffc;\n            if ((1 < arg_8h - 2) && (puStack92 = &stack0xfffffffc,  arg_8h - 2 == 2)) {\n                puStack92 = &stack0xfffffffc;\n                fcn.0045b220();\n                var_4h = fcn.0045b298();\n                if (var_4h == 0) {\n                    var_dh = 0;\n                }\n                else {\n                    var_ch = *(var_4h + 0x10);\n                }\n            }\n        }\n    }\n    fcn.0045ab5c();\n    fcn.0045aac8();\n    fcn.0045bfcc();\n    uStackY112 = 0x45be9d;\n    iVar3 = fcn.0045bff0(&stack0xffffff00 | var_dh, &fcn.0045bda8::var_38h);\n    if (iVar3 == 0) {\n        uStackY112 = 0x45beb0;\n        fcn.004065fc();\n        uStackY112 = 0x45bebf;\n        fcn.0040b16c();\n        uStackY112 = 0x45bec4;\n        fcn.00403ce4();\n    }\n    *(var_8h + 0x10) = iVar3;\n    if (*(in_EAX + 8) == 0) {\n        uStackY112 = 0x45bed8;\n        cVar2 = fcn.0045b8a0();\n        if (cVar2 != '\\0') {\n            uStackY112 = 0;\n            uStackY116 = 1;\n            uStackY120 = 0xb;\n            uStackY124 = 0x45bee9;\n            uStackY124 = fcn.0045bcf0();\n            uStackY128 = 0x45beef;\n            sub.user32.dll_SendMessageA();\n        }\n    }\n    uStackY128 = 0x45bef8;\n    fcn.0045bfac();\n    if (*(in_EAX + 0x14) == '\\0') {\n        uStackY128 = 0x45bf0d;\n        fcn.0040372c();\n    }\n    *in_FS_OFFSET = uStackY124;\n    *in_FS_OFFSET = uStackY112;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 1008
    },
    "0045c080": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c080(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x45c155;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 < 0) {\n        fcn.004065fc();\n        fcn.0045a92c();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    if ((*(in_EAX + 0xc) == 0) ||\n       (uVar2 = *(in_EAX + 0x10) - param_2,  uVar4 = uVar2 >> 0x1f,  1 < (uVar2 ^ uVar4) - uVar4)) {\n        iVar3 = fcn.0045c064();\n        iVar5 = param_2;\n        while ((iVar5 != 0 && (iVar3 != 0))) {\n            iVar3 = fcn.0045b3c8();\n            iVar5 = iVar5 + -1;\n        }\n    }\n    else if (*(in_EAX + 0x10) == param_2) {\n        iVar3 = *(in_EAX + 0xc);\n    }\n    else if (param_2 < *(in_EAX + 0x10)) {\n        iVar3 = fcn.0045b440();\n    }\n    else {\n        iVar3 = fcn.0045b3c8();\n    }\n    if (iVar3 == 0) {\n        fcn.004065fc();\n        fcn.0045a92c();\n    }\n    *(in_EAX + 0xc) = iVar3;\n    *(in_EAX + 0x10) = param_2;\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x45c15c;\n    uStack36 = 0x45c154;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 552
    },
    "0045c198": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045c198(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 8) == 0) {\n        fcn.0045c1b0();\n    }\n    *(in_EAX + 8) = *(in_EAX + 8) + 1;\n    return;\n}\n",
        "token_count": 75
    },
    "0045c1e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045c1e4(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 8) = *(in_EAX + 8) + -1;\n    if (*(in_EAX + 8) == 0) {\n        fcn.0045c1b0();\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "0045c374": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045c374(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint var_125h;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack316 = 0x45c391;\n    cVar1 = fcn.004363bc();\n    if (cVar1 != '\\0') {\n        puStack316 = 0x45c3a2;\n        fcn.0045c198();\n    }\n    *(in_EAX + 0x14) = 1;\n    uStack320 = 0x45c42d;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    puStack316 = &stack0xfffffffc;\n    fcn.0045bd04();\n    fcn.00417e74();\n    if (-1 < stack0xfffffff0 + -1) {\n        do {\n            fcn.0045bd98();\n            fcn.0045bac4();\n            fcn.0040372c();\n            *0x1c = *0x1c + -1;\n        } while (*0x1c != 0);\n    }\n    *in_FS_OFFSET = uStack324;\n    puStack316 = 0x45c434;\n    *(in_EAX + 0x14) = 0;\n    if (cVar1 != '\\0') {\n        uStack320 = 0x45c42c;\n        fcn.0045c1e4();\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "0045c58c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0045c58c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar2;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00431f50();\n    in_EAX[0x14] = ~*0x45c738 & in_EAX[0x14] | *0x45c73c;\n    fcn.0042f264();\n    fcn.0042f288();\n    fcn.004362ec();\n    fcn.0042fc5c();\n    iVar1 = fcn.00421358();\n    in_EAX[0x83] = iVar1;\n    fcn.0042e684();\n    iVar1 = (**(*in_EAX + 200))();\n    in_EAX[0x9b] = iVar1;\n    *(in_EAX + 0x209) = 1;\n    *(in_EAX + 0x96) = 1;\n    *(in_EAX + 0x25a) = 1;\n    *(in_EAX + 0x259) = 1;\n    *(in_EAX + 0x8b) = 1;\n    iVar1 = fcn.0043c438(0x20);\n    in_EAX[0x87] = iVar1;\n    in_EAX[0x93] = -1;\n    iVar1 = fcn.00403500();\n    in_EAX[0x9e] = iVar1;\n    *(in_EAX + 0x9d) = 0;\n    *(in_EAX + 0x275) = *0x45c740;\n    iVar1 = fcn.004291c8();\n    in_EAX[0xcc] = iVar1;\n    fcn.00429350();\n    fcn.00429360();\n    fcn.00429370(0x45d2b8, in_EAX);\n    *(in_EAX + 0xa4) = 1;\n    *(in_EAX + 0x9a) = 1;\n    pcVar2 = fcn.0045cd0c;\n    iVar1 = fcn.0041eaf0(fcn.0045cd0c, in_EAX);\n    in_EAX[0x8a] = iVar1;\n    iVar1 = fcn.00403500();\n    in_EAX[0x8c] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x45e360;\n    iVar1 = fcn.00403500();\n    in_EAX[0x99] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x45e360;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = pcVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 733
    },
    "0045c918": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045c918(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    *(in_EAX + 0x25c) = 0;\n    puStack20 = 0x45c933;\n    fcn.004331c8();\n    puStack20 = 0x45c93e;\n    puStack20 = fcn.0042057c();\n    uStack24 = 0x45c947;\n    fcn.004360b8();\n    puStack20 = 0x45c94d;\n    fcn.00426d1c();\n    puStack20 = 0x45c95b;\n    puStack20 = fcn.0042057c();\n    uStack24 = 0x45c964;\n    fcn.004360b8();\n    puStack20 = 0x45c96a;\n    fcn.00426d34();\n    if (*(in_EAX + 0x23c) == 0) {\n        if (*(in_EAX + 0x24c) != -1) {\n            puStack20 = 0x45cadb;\n            fcn.0045d1e0();\n        }\n        if (*(in_EAX + 0x234) != 0) {\n            puStack20 = 0x45caef;\n            cVar1 = fcn.0043c5b0();\n            if (cVar1 != '\\0') {\n                puStack20 = 0x45cb01;\n                fcn.0043c6ec();\n                puStack20 = 0x45cb0d;\n                fcn.0045e338();\n            }\n        }\n        if (*(in_EAX + 0x260) != 0) {\n            puStack20 = 0x45cb21;\n            cVar1 = fcn.0043c5b0();\n            if (cVar1 != '\\0') {\n                puStack20 = 0x45cb33;\n                fcn.0043c6ec();\n                puStack20 = 0x45cb42;\n                fcn.0045e338();\n            }\n        }\n        return;\n    }\n    puStack20 = 0x45c988;\n    fcn.0045c198();\n    uStack24 = 0x45cabc;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.0045c374();\n    fcn.0045c4ac();\n    fcn.0040cbb8();\n    fcn.0045c080();\n    fcn.0045d290();\n    *(in_EAX + 0x254) = 0;\n    if (*(in_EAX + 0x27c) == 0) {\n        fcn.0045c080();\n        fcn.0045d328();\n    }\n    else {\n        iVar2 = *(*(in_EAX + 0x27c) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                fcn.004152c8();\n                fcn.0045c080();\n                fcn.0041516c();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.0040cbb8();\n        fcn.0045f080();\n        fcn.0045ebec();\n        fcn.0045d328();\n    }\n    *(in_EAX + 0x248) = 0;\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45cac3;\n    uStack24 = 0x45cabb;\n    fcn.0045c1e4();\n    return;\n}\n",
        "token_count": 871
    },
    "0045cb48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045cb48(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uchar *puStackY28;\n    uint var_4h;\n    \n    *(in_EAX + 0x25c) = 1;\n    if ((*(in_EAX + 0x290) != '\\0') && (iVar1 = fcn.0045bccc(),  0 < iVar1)) {\n        uVar2 = fcn.00403500();\n        *(in_EAX + 0x23c) = uVar2;\n        fcn.0045c43c();\n        fcn.0045c528();\n        puStackY28 = 0x45cbd1;\n        fcn.00417c68(0, 0);\n        *(in_EAX + 0x254) = 0;\n        *(in_EAX + 0x248) = 0;\n        puStackY28 = 0x45cbef;\n        iVar1 = fcn.0045d260();\n        if (iVar1 != 0) {\n            puStackY28 = 0x45cbfc;\n            uVar2 = fcn.0045b470();\n            *(in_EAX + 0x254) = uVar2;\n        }\n        puStackY28 = 0x45cc13;\n        fcn.0045c198();\n        uStackY32 = 0x45cce6;\n        uStackY36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        if ((*(in_EAX + 0x274) == '\\0') || (*(*(in_EAX + 0x278) + 8) < 2)) {\n            puStackY28 = &stack0xfffffffc;\n            iVar1 = fcn.0045d2e0();\n            if (iVar1 != 0) {\n                uVar2 = fcn.0045b470();\n                *(in_EAX + 0x248) = uVar2;\n            }\n        }\n        else {\n            puStackY28 = &stack0xfffffffc;\n            uVar2 = fcn.00403500();\n            *(in_EAX + 0x27c) = uVar2;\n            iVar1 = *(*(in_EAX + 0x278) + 8);\n            if (-1 < iVar1 + -1) {\n                do {\n                    fcn.004152c8();\n                    fcn.0045b470();\n                    fcn.0041516c();\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            (**(**(in_EAX + 0x278) + 8))();\n        }\n        fcn.0045bd04();\n        *in_FS_OFFSET = uStackY36;\n        puStackY28 = 0x45cced;\n        uStackY32 = 0x45cce5;\n        fcn.0045c1e4();\n        return;\n    }\n    uVar2 = fcn.0045d204();\n    *(in_EAX + 0x24c) = uVar2;\n    fcn.00433578();\n    return;\n}\n",
        "token_count": 724
    },
    "0045cea8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045cea8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar3 = false;\n    cVar1 = fcn.004363bc();\n    if (cVar1 != '\\0') {\n        fcn.004360b8();\n        iVar2 = fcn.00426d00();\n        bVar3 = iVar2 != 0;\n        if (arg_8h != '\\0') {\n            iVar2 = fcn.0045c064();\n            while (iVar2 != 0) {\n                cVar1 = fcn.0045b180();\n                if (cVar1 != '\\0') {\n                    fcn.0045b940(1);\n                }\n                iVar2 = fcn.0045b25c();\n            }\n        }\n        fcn.0045c584();\n    }\n    return bVar3;\n}\n",
        "token_count": 239
    },
    "0045d2e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0045d2e0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.004363bc();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if ((*(in_EAX + 0x244) == '\\0') || (*(in_EAX + 0x240) == 0)) {\n            fcn.004360b8();\n            fcn.00426c20();\n            uVar2 = fcn.0045c168();\n            return uVar2;\n        }\n        uVar2 = *(in_EAX + 0x240);\n    }\n    return uVar2;\n}\n",
        "token_count": 167
    },
    "0045e230": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e230(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack32 = 0x45e2dc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.0045d3d0();\n    if (*(param_2 + 0x10) == 0) {\n        if (*(in_EAX + 0x2aa) != 0) {\n            (**(in_EAX + 0x2a8))();\n        }\n    }\n    else {\n        fcn.004044f8();\n        iVar1 = fcn.0045d3d0();\n        if (*(in_EAX + 0x302) != 0) {\n            (**(in_EAX + 0x300))(&fcn.0045e230::var_4h);\n        }\n        if (iVar1 != 0) {\n            fcn.0045aac8();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45e2e3;\n    uStack32 = 0x45e2db;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 342
    },
    "0045e560": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045e560(void)\n\n{\n    int32_t *in_EAX;\n    uint arg_8h;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    *(in_EAX + 0x86) = 0;\n    in_EAX[0x88] = 0;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_4h = in_EAX;\n    fcn.00431120();\n    if ((*(var_4h + 0x5d) == '\\x01') && (*(var_4h + 0x9b) == '\\0')) {\n        (**(*var_4h + 0xc0))();\n        if (*(var_4h + 0x86) == '\\0') {\n            sub.user32.dll_GetCursorPos(&var_ch);\n            fcn.0042f5ec();\n            fcn.0040728c();\n            arg_8h = fcn.00407208();\n            fcn.00430c4c(arg_8h);\n        }\n        else {\n            iVar1 = fcn.0045d0e4();\n            if (iVar1 != 0) {\n                fcn.0045b1c0();\n                fcn.0045b05c();\n                fcn.00430140();\n            }\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    var_4h[0x88] = 0;\n    return;\n}\n",
        "token_count": 363
    },
    "0045e89c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0045e89c(uchar *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    uint16_t in_CX;\n    uint8_t var_7h;\n    uint var_6h;\n    \n    var_7h = 1;\n    *arg_8h = 1;\n    puVar1 = arg_8h;\n    var_6h._0_2_ = in_CX;\n    if ((arg_ch == '\\0') && (*(in_EAX + 0x2e2) != 0)) {\n        puVar1 = (**(in_EAX + 0x2e0))(&var_7h, arg_8h & 0xffff0000 | in_CX);\n    }\n    if (*(in_EAX + 0x2a2) != 0) {\n        puVar1 = (**(in_EAX + 0x2a0))(&var_7h, arg_8h, arg_ch, puVar1 & 0xffff0000 | var_6h);\n    }\n    return puVar1 & 0xffffff00 | var_7h;\n}\n",
        "token_count": 274
    },
    "0045ec50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045ec50(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    char in_DL;\n    uint var_1h;\n    \n    if (in_DL == '\\0') {\n        if (*(in_EAX + 0x285) == '\\0') {\n            uVar1 = fcn.0045d11c();\n            if ((uVar1 & 8) == 0) {\n                fcn.0045f080();\n            }\n            else {\n                fcn.0045d2e0();\n                fcn.0045e9f8();\n            }\n        }\n        else {\n            *(in_EAX + 0x285) = 0;\n        }\n    }\n    fcn.00431064(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 204
    },
    "0045ece4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ece4(uint param_1, int32_t param_2)\n\n{\n    if ((param_2 != 0) && (*(param_2 + 0x24) == '\\0')) {\n        fcn.00415344();\n        fcn.0045b0fc();\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "0045ed30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ed30(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x278) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar1 = fcn.0045ebec();\n            if (param_2 != iVar1) {\n                fcn.0045ecbc();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar2 = fcn.0045d2e0();\n    if ((param_2 != iVar2) && ((param_2 == 0 || (*(param_2 + 0x24) == '\\0')))) {\n        fcn.0045d328();\n    }\n    if (((param_2 != 0) && (*(param_2 + 0x24) == '\\0')) && (*(*(in_EAX + 0x278) + 8) == 0)) {\n        fcn.0045ece4();\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "0045ee04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ee04(uint arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_CL;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    if (((in_EDX == 0) || (*(in_EDX + 0x24) != '\\0')) || ((*(in_EAX + 0x275) & 2) == 0)) {\n        puStack36 = 0x45efda;\n        fcn.0045ed30();\n        return;\n    }\n    puStack36 = 0x45ee45;\n    arg_8h_00 = fcn.00403500();\n    puStack36 = 0x45ee54;\n    iVar2 = fcn.00403500();\n    uStack40 = 0x45efc9;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar3 = *(in_EAX + 0x280);\n    puStack36 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (iVar3 != in_EDX) {\n        do {\n            puStack36 = puVar1;\n            if (iVar3 == 0) goto code_r0x0045eed5;\n            fcn.0041516c();\n            if (in_CL == '\\0') {\n                if ((*(in_EAX + 0x275) & 4) == 0) {\n                    iVar3 = fcn.0045b3c8();\n                }\n                else {\n                    iVar3 = fcn.0045b2d4();\n                }\n            }\n            else if ((*(in_EAX + 0x275) & 4) == 0) {\n                iVar3 = fcn.0045b440();\n            }\n            else {\n                iVar3 = fcn.0045b318();\n            }\n            puVar1 = puStack36;\n        } while (iVar3 != in_EDX);\n        fcn.0041516c();\n    }\ncode_r0x0045eed5:\n    if (((arg_8h != '\\0') && (fcn.00415538(arg_8h_00),  0 < *(iVar2 + 8))) &&\n       (iVar3 = *(*(in_EAX + 0x278) + 8) + -1,  -1 < iVar3)) {\n        do {\n            fcn.004152c8();\n            iVar2 = fcn.00415324();\n            if (iVar2 != -1) {\n                fcn.0045ecbc();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    uVar4 = 0;\n    fcn.00415538(0);\n    iVar3 = *(arg_8h_00 + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            fcn.004152c8();\n            fcn.0045ece4();\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = fcn.00415324();\n    if (iVar3 < 1) {\n        if (iVar3 == -1) {\n            fcn.0045ece4();\n        }\n    }\n    else {\n        fcn.004151b8();\n        fcn.00415344();\n    }\n    *in_FS_OFFSET = uVar4;\n    uStack44 = 0x45efda;\n    fcn.00403530();\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 862
    },
    "0045efe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045efe4(char param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x45f073;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x274) == '\\0') {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n        puVar1 = puStack24;\n    }\n    puStack24 = puVar1;\n    if ((param_2 != 0) && (*(param_2 + 0x24) == '\\0')) {\n        iVar2 = fcn.00415324();\n        if (iVar2 == -1) {\n            fcn.0045ece4();\n        }\n        if (param_1 != '\\0') {\n            fcn.0045f080();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x45f07a;\n    uStack28 = 0x45f072;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 330
    },
    "0045f080": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045f080(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (0 < *(*(in_EAX + 0x278) + 8)) {\n        fcn.0045ebec();\n        iVar4 = *(*(in_EAX + 0x278) + 8) + -1;\n        if (-1 < iVar4) {\n            do {\n                iVar2 = fcn.0045ebec();\n                if ((*(iVar2 + 0x24) == '\\0') && ((iVar4 == 0 || (*(in_EAX + 0x274) != '\\0')))) {\n                    if ((*(in_EAX + 0x275) & 4) != 0) {\n                        cVar1 = fcn.0045b8c8();\n                        if (cVar1 == '\\0') goto code_r0x0045f0ff;\n                    }\n                    if ((*(in_EAX + 0x275) & 8) != 0) {\n                        iVar2 = fcn.0045b220();\n                        iVar3 = fcn.0045b220();\n                        if (iVar2 != iVar3) goto code_r0x0045f0ff;\n                    }\n                    cVar1 = fcn.0045b054();\n                    if (cVar1 == '\\0') {\n                        fcn.0045b0fc();\n                    }\n                }\n                else {\ncode_r0x0045f0ff:\n                    fcn.0045ecbc();\n                }\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != -1);\n        }\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "0045f12c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f12c(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x45f145;\n    fcn.00403500();\n    uStack28 = 0x45f196;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < param_1) {\n        param_1 = param_1 + 1;\n        puStack24 = &stack0xfffffffc;\n        do {\n            if (*(*param_2 + 0x24) == '\\0') {\n                fcn.0041516c();\n            }\n            param_2 = param_2 + 1;\n            param_1 = param_1 + -1;\n        } while (param_1 != 0);\n    }\n    (**(*in_EAX + 0xe8))();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x45f19d;\n    uStack28 = 0x45f195;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 299
    },
    "0045f1a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f1a4(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 8) != 0) {\n        puStack32 = 0x45f1d6;\n        iVar2 = fcn.00403500();\n        puStack32 = 0x45f1e5;\n        iVar3 = fcn.00403500();\n        uStack36 = 0x45f319;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        iVar5 = *(param_2 + 8) + -1;\n        puStack32 = &stack0xfffffffc;\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar5) {\n            do {\n                iVar4 = fcn.004152c8();\n                if (*(iVar4 + 0x24) != '\\0') {\n                    fcn.004151b8();\n                }\n                iVar5 = iVar5 + -1;\n                puVar1 = puStack32;\n            } while (iVar5 != -1);\n        }\n        puStack32 = puVar1;\n        if (0 < *(param_2 + 8)) {\n            iVar5 = fcn.004152c8();\n            iVar4 = fcn.0045d2e0();\n            if (iVar5 != iVar4) {\n                fcn.004152c8();\n                fcn.0045d328();\n            }\n        }\n        fcn.00415538(param_2);\n        if ((0 < *(iVar3 + 8)) && (iVar3 = *(in_EAX[0x9e] + 8) + -1,  -1 < iVar3)) {\n            do {\n                fcn.004152c8();\n                iVar5 = fcn.00415324();\n                if (iVar5 != -1) {\n                    fcn.0045ecbc();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n        fcn.00415538(in_EAX[0x9e]);\n        iVar2 = *(iVar2 + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                fcn.004152c8();\n                fcn.0045ece4();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        uVar6 = 0;\n        fcn.00415538(0);\n        *in_FS_OFFSET = uVar6;\n        fcn.00403530(0x45f320);\n        fcn.00403530();\n        return;\n    }\n    puStack32 = 0x45f1c5;\n    (**(*in_EAX + 0xf4))();\n    puStack32 = 0x45f328;\n    fcn.0045f080();\n    return;\n}\n",
        "token_count": 732
    },
    "0045f3ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045f3ec(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x45f401;\n    fcn.00403500();\n    uStack24 = 0x45f466;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar2 = fcn.0045f478();\n    while (iVar2 != 0) {\n        cVar1 = fcn.0045b054();\n        if (cVar1 == '\\0') break;\n        iVar2 = fcn.0045f384(&stack0xfffffffc);\n        if (iVar2 != 0) break;\n        iVar2 = fcn.0045b220();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45f46d;\n    uStack24 = 0x45f465;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 269
    },
    "0045f4e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045f4e4(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x45f553;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x47dcd4 = *0x47dcd4 + 1;\n    if (*0x47dcd4 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x47dcd8 != 0) {\n            iStack20 = *0x47dcd8;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x47dcdc != 0) {\n            sub.kernel32.dll_FreeLibrary_1(*0x47dcdc);\n        }\n        fcn.00404dc8();\n        fcn.00404dc8();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 271
    },
    "0045fd6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0045fd6c(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00437bc8();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x45fe54;\n    fcn.0045fed0();\n    *(in_EAX + 0x2a0) = *0x45fe58;\n    *(in_EAX + 0x2a2) = *0x45fe58;\n    *(in_EAX + 0x2a4) = *0x45fe58;\n    uVar1 = 0;\n    do {\n        uVar2 = uVar1;\n        *(in_EAX + 0x210 + uVar2 * 0x10) = 1;\n        *(in_EAX + 0x211 + uVar2 * 0x10) = 1;\n        *(in_EAX + 0x212 + uVar2 * 0x10) = 1;\n        *(in_EAX + 0x213 + uVar2 * 0x10) = 0;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 != 9);\n    fcn.0042f264();\n    fcn.0042f288();\n    *(in_EAX + 0x2e0) = 0;\n    *(in_EAX + 0x31c) = 1;\n    *(in_EAX + 0x31d) = 0;\n    *(in_EAX + 0x31e) = 1;\n    *(in_EAX + 0x2f4) = 0;\n    fcn.004362ec();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 524
    },
    "004601cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004601cc(void)\n\n{\n    int32_t in_EAX;\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    uVar1 = 0;\n    do {\n        if (*(in_EAX + 0x210 + uVar1 * 0x10) != '\\0') {\n            iVar2 = iVar2 + 1;\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 != 9);\n    if (iVar2 == 0) {\n        iVar2 = 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 141
    },
    "004602ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004602ac(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uchar *puVar6;\n    uchar *puStack96;\n    uint32_t nBottomRect;\n    uchar auStack64 [8];\n    uchar auStack56 [8];\n    uchar auStack48 [32];\n    \n    fcn.00421324();\n    fcn.00421208();\n    fcn.00420f28();\n    fcn.00421034();\n    nBottomRect = in_EAX[0x13];\n    fcn.00421934(nBottomRect, in_EAX[0xaf] + param_1);\n    if (nBottomRect >> 8 == '\\0') {\n        fcn.00420f28();\n        fcn.00421908();\n        fcn.004218a8();\n        fcn.004218a8();\n        fcn.00420f28();\n        fcn.00421908();\n        fcn.004218a8();\n        fcn.004218a8();\n    }\n    else {\n        fcn.00420f28();\n        fcn.00421908();\n        fcn.004218a8();\n        fcn.004218a8();\n    }\n    cVar2 = (**(*in_EAX + 0x50))();\n    if ((cVar2 == '\\0') && ((*(in_EAX + 7) & 0x10) == 0)) {\n        iVar3 = 1;\n    }\n    else if ((*(in_EAX + 199) == '\\0') || ((*(in_EAX + 7) & 0x10) != 0)) {\n        if (*(in_EAX + (nBottomRect & 0xff) * 0x10 + 0x211) == '\\0') {\n            iVar3 = 1;\n        }\n        else {\n            iVar3 = 0;\n            if (*(in_EAX + (nBottomRect & 0xff) * 0x10 + 0x212) != '\\0') {\n                iVar3 = 2;\n            }\n        }\n    }\n    else if (*(in_EAX + (nBottomRect & 0xff) * 0x10 + 0x213) == '\\0') {\n        iVar3 = 1;\n    }\n    else {\n        iVar3 = 0;\n        if (*(in_EAX + (nBottomRect & 0xff) * 0x10 + 0x212) != '\\0') {\n            iVar3 = 2;\n        }\n    }\n    piVar1 = in_EAX[(nBottomRect & 0xff) * 4 + iVar3 + 0x85];\n    (**(*piVar1 + 0x2c))();\n    (**(*piVar1 + 0x20))();\n    uVar4 = (**(*piVar1 + 0x20))();\n    puVar6 = &stack0xffffffc8;\n    puStack96 = 0x4604e9;\n    (**(*piVar1 + 0x2c))();\n    puStack96 = 0x4604f4;\n    fcn.00413c58(puVar6, uVar4);\n    puStack96 = &stack0xffffffc0;\n    uVar4 = (**(*piVar1 + 0x20))();\n    puVar6 = &stack0xffffffd0;\n    (**(*piVar1 + 0x2c))();\n    fcn.00413c80(puVar6, uVar4);\n    fcn.00421478(puVar6, uVar4);\n    cVar2 = puVar6;\n    iVar3 = fcn.004360b8();\n    iVar5 = sub.user32.dll_GetFocus();\n    if ((iVar3 == iVar5) && (cVar2 == *(in_EAX + 0xb8))) {\n        uStack120 = 0x460565;\n        fcn.00413c80(&stack0xffffffa0, in_EAX[0x13]);\n        uStack120 = 0xfffffffd;\n        uStack124 = 0xfffffffd;\n        uStack128 = &stack0xffffff98;\n        sub.user32.dll_InflateRect();\n        if (uStack128._1_1_ != '\\0') {\n            sub.user32.dll_OffsetRect(&stack0xffffff8c, 1, 1);\n        }\n        uVar4 = fcn.00421b9c(&stack0xffffff80);\n        sub.user32.dll_DrawFocusRect(uVar4);\n    }\n    return;\n}\n",
        "token_count": 1054
    },
    "00460844": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00460844(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uStack28;\n    uint uStack24;\n    \n    iVar3 = 0;\n    uVar2 = 0;\n    do {\n        if (*(in_EAX + uVar2 * 4 + 0x84) != '\\0') {\n            if ((iVar3 <= param_2) && (param_2 <= in_EAX[0xaf] + iVar3)) {\n                if (*(in_EAX + 199) == '\\0') {\n                    cVar1 = *(in_EAX + uVar2 * 0x10 + 0x211);\n                }\n                else {\n                    cVar1 = *(in_EAX + uVar2 * 0x10 + 0x213);\n                }\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                goto code_r0x004608af;\n            }\n            iVar3 = iVar3 + in_EAX[0xaf] + -1;\n        }\n        uVar2 = uVar2 + 1;\n        if (uVar2 == 9) {\ncode_r0x004608af:\n            *(in_EAX + 0x2aa) = uVar2;\n            if (uVar2 != *(in_EAX + 0xb8)) {\n                *(in_EAX + 0xb8) = uVar2;\n                (**(*in_EAX + 0xc4))();\n            }\n            puVar4 = &uStack28;\n            iVar3 = in_EAX[0x13];\n            fcn.00413c58(&uStack28, iVar3);\n            *(in_EAX + 0x2ab) = puVar4;\n            *(in_EAX + 0x2af) = iVar3;\n            *(in_EAX + 0x2b3) = uStack28;\n            *(in_EAX + 0x2b7) = uStack24;\n            *(in_EAX + 0xaa) = 1;\n            *(in_EAX + 0x2a9) = 1;\n            fcn.004602ac();\n            fcn.0042fcd0();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 526
    },
    "004609ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004609ac(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0040372c();\n    // switch table (9 cases) at 0x4609e6\n    switch(*(in_EAX + 0x2aa)) {\n    case 0:\n        fcn.004610ec();\n        break;\n    case 1:\n        fcn.00461368();\n        break;\n    case 2:\n        fcn.004612d4();\n        break;\n    case 3:\n        fcn.004614fc();\n        break;\n    case 4:\n        fcn.0046168c();\n        break;\n    case 5:\n        fcn.00461848();\n        break;\n    case 6:\n        fcn.00461924();\n        break;\n    case 7:\n        fcn.004611fc();\n        break;\n    case 8:\n        fcn.004619e8();\n    }\n    fcn.00460a6c();\n    return;\n}\n",
        "token_count": 220
    },
    "00460ca4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00460ca4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x2e1) == '\\0') {\n        fcn.0040b228();\n        fcn.00403ce4();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00460db0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00460db0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x46100e;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    fcn.00402e14();\n    if (*(in_EAX + 0x2e1) != '\\0') {\n        fcn.00461024();\n    }\n    var_14h = 0;\n    var_ch = *(*(in_EAX + 0x2f4) * 4 + 0x46fe38);\n    var_8h = fcn.004047b8();\n    *(in_EAX + 0x2e8) = 0;\n    if (*(in_EAX + 0x2ee) == '\\0') {\n        *(in_EAX + 0x2e8) = 2;\n    }\n    else {\n        if (*(in_EAX + 0x2ec) != '\\0') {\n            *(in_EAX + 0x2e8) = 2;\n        }\n        *(in_EAX + 0x2ee) = 0;\n    }\n    if (*(in_EAX + 0x2ef) != '\\0') {\n        if (*(in_EAX + 0x2ed) != '\\0') {\n            *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 1;\n        }\n        *(in_EAX + 0x2ef) = 0;\n    }\n    if (*(in_EAX + 0x2f4) != '\\0') {\n        *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 0x2000;\n    }\n    if (*(in_EAX + 0x2f4) == '\\0') {\n        *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 0x200;\n    }\n    else {\n        *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 0x2000;\n    }\n    if (*(in_EAX + 799) != '\\0') {\n        *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 0x100;\n    }\n    var_14h = fcn.004360b8();\n    uVar3 = 0;\n    iVar2 = sub.winmm.dll_mciSendCommandA(0, 0x803, *(in_EAX + 0x2e8), &var_14h);\n    *(in_EAX + 0x304) = iVar2;\n    if (iVar2 == 0) {\n        *(in_EAX + 0x2e1) = 1;\n        *(in_EAX + 0x2f2) = var_10h;\n        iVar2 = fcn.00461e58();\n        *(in_EAX + 0x300) = iVar2 / 10;\n        fcn.00461cc4();\n        if (*(in_EAX + 0x2e7) != '\\0') {\n            fcn.00461b5c();\n            fcn.00461c70();\n            *(in_EAX + 0x310) = var_1ch - var_24h;\n            *(in_EAX + 0x314) = var_18h - var_20h;\n        }\n        if ((*(in_EAX + 0x2f4) == '\\x02') || (*(in_EAX + 0x2f4) == '\\v')) {\n            fcn.00461b20();\n        }\n        *(in_EAX + 0x2a6) = *0x46101c;\n        if (*(in_EAX + 0x2e4) != '\\0') {\n            *(in_EAX + 0x2a6) = *0x461020 | *(in_EAX + 0x2a6);\n        }\n        if (*(in_EAX + 0x2e3) != '\\0') {\n            *(in_EAX + 0x2a6) = *(in_EAX + 0x2a6) | 1;\n        }\n        if (*(in_EAX + 0x2e6) != '\\0') {\n            *(in_EAX + 0x2a6) = *(in_EAX + 0x2a6) | 0x80;\n        }\n        if (*(in_EAX + 0x2e5) != '\\0') {\n            *(in_EAX + 0x2a6) = *(in_EAX + 0x2a6) | 0x100;\n        }\n        cVar1 = fcn.00461ee8();\n        if (cVar1 == '\\x02') {\n            fcn.0040372c();\n        }\n        fcn.004600e4();\n    }\n    else {\n        fcn.00461fb4();\n        fcn.0040b16c();\n        fcn.00403ce4();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00404308(0x461015);\n    return;\n}\n",
        "token_count": 1302
    },
    "00461024": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00461024(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uStack12;\n    \n    if (*(in_EAX + 0x2f2) != 0) {\n        *(in_EAX + 0x2e8) = 0;\n        if (*(in_EAX + 0x2ee) == '\\0') {\n            *(in_EAX + 0x2e8) = 2;\n        }\n        else {\n            if (*(in_EAX + 0x2ec) != '\\0') {\n                *(in_EAX + 0x2e8) = 2;\n            }\n            *(in_EAX + 0x2ee) = 0;\n        }\n        if (*(in_EAX + 0x2ef) != '\\0') {\n            if (*(in_EAX + 0x2ed) != '\\0') {\n                *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 1;\n            }\n            *(in_EAX + 0x2ef) = 0;\n        }\n        uStack12 = fcn.004360b8();\n        iVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x804, *(in_EAX + 0x2e8), &uStack12);\n        *(in_EAX + 0x304) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x2e1) = 0;\n            *(in_EAX + 0x2f2) = 0;\n            *(in_EAX + 0x2a6) = *0x4610e8;\n            fcn.004600e4();\n        }\n    }\n    return;\n}\n",
        "token_count": 408
    },
    "004610ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004610ec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    fcn.00460ca4();\n    if (*(in_EAX + 0x31e) != '\\0') {\n        iVar1 = fcn.00461f2c();\n        iVar2 = fcn.00461e58();\n        if (((iVar1 == iVar2) && (*(in_EAX + 0x2f0) == '\\0')) && (*(in_EAX + 0x2f1) == '\\0')) {\n            fcn.00461a94();\n        }\n    }\n    *(in_EAX + 0x2e8) = 0;\n    if (*(in_EAX + 0x2ef) == '\\0') {\n        *(in_EAX + 0x2e8) = 1;\n    }\n    else {\n        if (*(in_EAX + 0x2ed) != '\\0') {\n            *(in_EAX + 0x2e8) = 1;\n        }\n        *(in_EAX + 0x2ef) = 0;\n    }\n    if (*(in_EAX + 0x2ee) != '\\0') {\n        if (*(in_EAX + 0x2ec) != '\\0') {\n            *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 2;\n        }\n        *(in_EAX + 0x2ee) = 0;\n    }\n    if (*(in_EAX + 0x2f0) != '\\0') {\n        *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 4;\n        uStack16 = *(in_EAX + 0x2fc);\n        *(in_EAX + 0x2f0) = 0;\n    }\n    if (*(in_EAX + 0x2f1) != '\\0') {\n        *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 8;\n        uStack12 = *(in_EAX + 0x2f8);\n        *(in_EAX + 0x2f1) = 0;\n    }\n    uStack20 = fcn.004360b8();\n    uVar3 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x806, *(in_EAX + 0x2e8), &uStack20);\n    *(in_EAX + 0x304) = uVar3;\n    return;\n}\n",
        "token_count": 615
    },
    "004611fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004611fc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    fcn.00460ca4();\n    *(in_EAX + 0x2e8) = 0;\n    if (*(in_EAX + 0x2ef) == '\\0') {\n        *(in_EAX + 0x2e8) = 1;\n    }\n    else {\n        if (*(in_EAX + 0x2ed) != '\\0') {\n            *(in_EAX + 0x2e8) = 1;\n        }\n        *(in_EAX + 0x2ef) = 0;\n    }\n    if (*(in_EAX + 0x2ee) != '\\0') {\n        if (*(in_EAX + 0x2ec) != '\\0') {\n            *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 2;\n        }\n        *(in_EAX + 0x2ee) = 0;\n    }\n    if (*(in_EAX + 0x2f0) != '\\0') {\n        *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 4;\n        uStack12 = *(in_EAX + 0x2fc);\n        *(in_EAX + 0x2f0) = 0;\n    }\n    if (*(in_EAX + 0x2f1) != '\\0') {\n        *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 8;\n        uStack8 = *(in_EAX + 0x2f8);\n        *(in_EAX + 0x2f1) = 0;\n    }\n    uStack16 = fcn.004360b8();\n    uVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x80f, *(in_EAX + 0x2e8), &uStack16);\n    *(in_EAX + 0x304) = uVar1;\n    return;\n}\n",
        "token_count": 502
    },
    "004612d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004612d4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uStack8;\n    \n    fcn.00460ca4();\n    *(in_EAX + 0x2e8) = 0;\n    if (*(in_EAX + 0x2ee) == '\\0') {\n        *(in_EAX + 0x2e8) = 2;\n    }\n    else {\n        if (*(in_EAX + 0x2ec) != '\\0') {\n            *(in_EAX + 0x2e8) = 2;\n        }\n        *(in_EAX + 0x2ee) = 0;\n    }\n    if (*(in_EAX + 0x2ef) != '\\0') {\n        if (*(in_EAX + 0x2ed) != '\\0') {\n            *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 1;\n        }\n        *(in_EAX + 0x2ef) = 0;\n    }\n    uStack8 = fcn.004360b8();\n    uVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x808, *(in_EAX + 0x2e8), &uStack8);\n    *(in_EAX + 0x304) = uVar1;\n    return;\n}\n",
        "token_count": 321
    },
    "00461368": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00461368(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x2e1) == '\\0') {\n        fcn.0040b228();\n        fcn.00403ce4();\n    }\n    cVar1 = fcn.00461ee8();\n    if (cVar1 == '\\x02') {\n        fcn.004613b4();\n        return;\n    }\n    cVar1 = fcn.00461ee8();\n    if (cVar1 == '\\x05') {\n        fcn.00461448();\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "004613b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004613b4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uStack8;\n    \n    fcn.00460ca4();\n    *(in_EAX + 0x2e8) = 0;\n    if (*(in_EAX + 0x2ee) == '\\0') {\n        *(in_EAX + 0x2e8) = 2;\n    }\n    else {\n        if (*(in_EAX + 0x2ec) != '\\0') {\n            *(in_EAX + 0x2e8) = 2;\n        }\n        *(in_EAX + 0x2ee) = 0;\n    }\n    if (*(in_EAX + 0x2ef) != '\\0') {\n        if (*(in_EAX + 0x2ed) != '\\0') {\n            *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 1;\n        }\n        *(in_EAX + 0x2ef) = 0;\n    }\n    uStack8 = fcn.004360b8();\n    uVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x809, *(in_EAX + 0x2e8), &uStack8);\n    *(in_EAX + 0x304) = uVar1;\n    return;\n}\n",
        "token_count": 321
    },
    "00461448": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00461448(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uStack12;\n    \n    fcn.00460ca4();\n    *(in_EAX + 0x2e8) = 0;\n    if (*(in_EAX + 0x2ef) == '\\0') {\n        *(in_EAX + 0x2e8) = 1;\n    }\n    else if (*(in_EAX + 0x2ed) != '\\0') {\n        *(in_EAX + 0x2e8) = 1;\n    }\n    if ((*(in_EAX + 0x2ee) != '\\0') && (*(in_EAX + 0x2ec) != '\\0')) {\n        *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 2;\n    }\n    uStack12 = fcn.004360b8();\n    iVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x855, *(in_EAX + 0x2e8), &uStack12);\n    *(in_EAX + 0x304) = iVar1;\n    if (iVar1 == 0) {\n        if (*(in_EAX + 0x2ef) != '\\0') {\n            *(in_EAX + 0x2ef) = 0;\n        }\n        if (*(in_EAX + 0x2ee) != '\\0') {\n            *(in_EAX + 0x2ee) = 0;\n        }\n    }\n    else {\n        fcn.004610ec();\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "004614fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004614fc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uStack20;\n    uint uStack16;\n    \n    fcn.00460ca4();\n    *(in_EAX + 0x2e8) = 0;\n    if (*(in_EAX + 0x2ee) == '\\0') {\n        *(in_EAX + 0x2e8) = 2;\n    }\n    else {\n        if (*(in_EAX + 0x2ec) != '\\0') {\n            *(in_EAX + 0x2e8) = 2;\n        }\n        *(in_EAX + 0x2ee) = 0;\n    }\n    if (*(in_EAX + 0x2ef) != '\\0') {\n        if (*(in_EAX + 0x2ed) != '\\0') {\n            *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 1;\n        }\n        *(in_EAX + 0x2ef) = 0;\n    }\n    uVar2 = *(in_EAX + 0x2e8);\n    cVar1 = fcn.00461f6c();\n    if (cVar1 == '\\n') {\n        cVar1 = fcn.00461ee8();\n        if (cVar1 == '\\x02') {\n            fcn.00461f2c();\n            uVar2 = fcn.0045f574();\n            uVar3 = fcn.00461ea0();\n            if ((uVar2 & 0xff) == uVar3) {\n                fcn.00461ea0();\n                fcn.00461ac0();\n                fcn.00461af8();\n            }\n            else {\n                fcn.00461f2c();\n                fcn.0045f574();\n                fcn.00461ac0();\n                fcn.00461af8();\n            }\n            fcn.004610ec();\n            *(in_EAX + 0x2aa) = 0;\n            return;\n        }\n        fcn.00461f2c();\n        uVar3 = fcn.0045f574();\n        uVar4 = fcn.00461ea0();\n        if ((uVar3 & 0xff) == uVar4) {\n            fcn.00461ea0();\n            uStack16 = fcn.00461ac0();\n        }\n        else {\n            fcn.00461f2c();\n            fcn.0045f574();\n            uStack16 = fcn.00461ac0();\n        }\n        *(in_EAX + 0x2e8) = uVar2 | 8;\n    }\n    else {\n        *(in_EAX + 0x2e8) = uVar2 | 0x200;\n    }\n    uStack20 = fcn.004360b8();\n    uVar5 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x807, *(in_EAX + 0x2e8), &uStack20);\n    *(in_EAX + 0x304) = uVar5;\n    return;\n}\n",
        "token_count": 741
    },
    "0046168c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046168c(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    uint uStack24;\n    uint uStack20;\n    \n    fcn.00460ca4();\n    *(in_EAX + 0x2e8) = 0;\n    if (*(in_EAX + 0x2ee) == '\\0') {\n        *(in_EAX + 0x2e8) = 2;\n    }\n    else {\n        if (*(in_EAX + 0x2ec) != '\\0') {\n            *(in_EAX + 0x2e8) = 2;\n        }\n        *(in_EAX + 0x2ee) = 0;\n    }\n    if (*(in_EAX + 0x2ef) != '\\0') {\n        if (*(in_EAX + 0x2ed) != '\\0') {\n            *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 1;\n        }\n        *(in_EAX + 0x2ef) = 0;\n    }\n    uVar1 = *(in_EAX + 0x2e8);\n    cVar2 = fcn.00461f6c();\n    if (cVar2 != '\\n') {\n        *(in_EAX + 0x2e8) = uVar1 | 0x100;\ncode_r0x00461813:\n        uStack24 = fcn.004360b8();\n        uVar4 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x807, *(in_EAX + 0x2e8), &uStack24);\n        *(in_EAX + 0x304) = uVar4;\n        return;\n    }\n    fcn.00461f2c();\n    fcn.00461f2c();\n    fcn.0045f574();\n    uStack20 = fcn.00461ac0();\n    cVar2 = fcn.00461ee8();\n    if (cVar2 != '\\x02') {\n        cVar2 = fcn.0045f574();\n        if (cVar2 != '\\x01') {\n            cVar2 = fcn.0045f578();\n            cVar3 = fcn.0045f578();\n            if (cVar2 == cVar3) {\n                cVar2 = fcn.0045f580();\n                cVar3 = fcn.0045f580();\n                if (cVar2 == cVar3) {\n                    fcn.00461f2c();\n                    fcn.0045f574();\n                    uStack20 = fcn.00461ac0();\n                }\n            }\n        }\n        *(in_EAX + 0x2e8) = uVar1 | 8;\n        goto code_r0x00461813;\n    }\n    cVar2 = fcn.0045f574();\n    if (cVar2 != '\\x01') {\n        cVar2 = fcn.0045f578();\n        cVar3 = fcn.0045f578();\n        if (cVar2 == cVar3) {\n            cVar2 = fcn.0045f580();\n            cVar3 = fcn.0045f580();\n            if (cVar2 == cVar3) {\n                fcn.00461f2c();\n                fcn.0045f574();\n                fcn.00461ac0();\n                fcn.00461af8();\n                goto code_r0x00461794;\n            }\n        }\n    }\n    fcn.00461af8();\ncode_r0x00461794:\n    fcn.004610ec();\n    *(in_EAX + 0x2aa) = 0;\n    return;\n}\n",
        "token_count": 859
    },
    "00461848": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00461848(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack16;\n    uint uStack12;\n    \n    fcn.00460ca4();\n    if (*(in_EAX + 0x2e7) != '\\0') {\n        if (*(in_EAX + 0x31e) != '\\0') {\n            iVar1 = fcn.00461f2c();\n            iVar2 = fcn.00461e58();\n            if (iVar1 == iVar2) {\n                fcn.00461a94();\n            }\n        }\n        *(in_EAX + 0x2e8) = 0;\n        if (*(in_EAX + 0x2ee) == '\\0') {\n            *(in_EAX + 0x2e8) = 2;\n        }\n        else {\n            if (*(in_EAX + 0x2ec) != '\\0') {\n                *(in_EAX + 0x2e8) = 2;\n            }\n            *(in_EAX + 0x2ee) = 0;\n        }\n        if (*(in_EAX + 0x2ef) != '\\0') {\n            if (*(in_EAX + 0x2ed) != '\\0') {\n                *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 1;\n            }\n            *(in_EAX + 0x2ef) = 0;\n        }\n        *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 0x20000;\n        uStack12 = *(in_EAX + 0x300);\n        uStack16 = fcn.004360b8();\n        uVar3 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x80e, *(in_EAX + 0x2e8), &uStack16);\n        *(in_EAX + 0x304) = uVar3;\n    }\n    return;\n}\n",
        "token_count": 476
    },
    "00461924": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00461924(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    fcn.00460ca4();\n    if (*(in_EAX + 0x2e7) != '\\0') {\n        *(in_EAX + 0x2e8) = 0;\n        if (*(in_EAX + 0x2ee) == '\\0') {\n            *(in_EAX + 0x2e8) = 2;\n        }\n        else {\n            if (*(in_EAX + 0x2ec) != '\\0') {\n                *(in_EAX + 0x2e8) = 2;\n            }\n            *(in_EAX + 0x2ee) = 0;\n        }\n        if (*(in_EAX + 0x2ef) != '\\0') {\n            if (*(in_EAX + 0x2ed) != '\\0') {\n                *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 1;\n            }\n            *(in_EAX + 0x2ef) = 0;\n        }\n        *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 0x30000;\n        uStack8 = *(in_EAX + 0x300);\n        uStack12 = fcn.004360b8();\n        uVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x80e, *(in_EAX + 0x2e8), &uStack12);\n        *(in_EAX + 0x304) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "004619e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004619e8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint auStack16 [3];\n    \n    fcn.00460ca4();\n    if (*(in_EAX + 0x2e5) != '\\0') {\n        *(in_EAX + 0x2e8) = 0;\n        if (*(in_EAX + 0x2ee) == '\\0') {\n            *(in_EAX + 0x2e8) = 2;\n        }\n        else {\n            if (*(in_EAX + 0x2ec) != '\\0') {\n                *(in_EAX + 0x2e8) = 2;\n            }\n            *(in_EAX + 0x2ee) = 0;\n        }\n        if (*(in_EAX + 0x2ef) != '\\0') {\n            if (*(in_EAX + 0x2ed) != '\\0') {\n                *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 1;\n            }\n            *(in_EAX + 0x2ef) = 0;\n        }\n        *(in_EAX + 0x2e8) = *(in_EAX + 0x2e8) | 0x100;\n        auStack16[0] = fcn.004360b8();\n        uVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x80d, *(in_EAX + 0x2e8), auStack16);\n        *(in_EAX + 0x304) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "00461b5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461b5c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack28 [4];\n    uint uStack24;\n    \n    if (((param_2 == 0) || (*(in_EAX + 0x2e1) == '\\0')) || (*(in_EAX + 0x2e7) == '\\0')) {\n        *(in_EAX + 0x30c) = param_2;\n    }\n    else {\n        *(in_EAX + 0x2e8) = 0x10002;\n        uStack24 = fcn.004360b8();\n        iVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x841, *(in_EAX + 0x2e8), auStack28);\n        *(in_EAX + 0x304) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x30c) = param_2;\n            fcn.0041db3c();\n        }\n        else {\n            *(in_EAX + 0x30c) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "00461c24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00461c24(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack24 [4];\n    uint uStack20;\n    \n    if ((*(in_EAX + 0x2e1) != '\\0') && (*(in_EAX + 0x2e7) != '\\0')) {\n        *(in_EAX + 0x2e8) = 0x10002;\n        uStack20 = 0;\n        uVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x841, 0x10002, auStack24);\n        *(in_EAX + 0x304) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00461c70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461c70(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint auStack32 [5];\n    \n    if ((*(in_EAX + 0x2e1) != '\\0') && (*(in_EAX + 0x2e7) != '\\0')) {\n        *(in_EAX + 0x2e8) = 0x40000;\n        uVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2));\n        *(in_EAX + 0x304) = uVar1;\n        *param_2 = 0x843;\n        param_2[1] = 0x40000;\n        param_2[2] = auStack32;\n        param_2[3] = auStack32[0];\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00461cc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00461cc4(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uchar *puStack128;\n    uint32_t uStack124;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint32_t uStack108;\n    uint uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uchar auStack60 [4];\n    int32_t iStack56;\n    uint uStack52;\n    \n    puStack64 = &stack0xffffffc4;\n    *(in_EAX + 0x2e8) = 0x102;\n    uStack52 = 8;\n    uStack68 = 0x102;\n    uStack72 = 0x80b;\n    uStack76 = *(in_EAX + 0x2f2);\n    puStack80 = 0x461cf4;\n    sub.winmm.dll_mciSendCommandA();\n    *(in_EAX + 0x2e3) = iStack56;\n    if (iStack56 != '\\0') {\n        *(in_EAX + 0x2e2) = *(in_EAX + 0x2e2) | 4;\n    }\n    uStack52 = 1;\n    uStack84 = *(in_EAX + 0x2e8);\n    uStack88 = 0x80b;\n    uStack92 = *(in_EAX + 0x2f2);\n    puStack96 = 0x461d29;\n    puStack80 = &stack0xffffffc4;\n    sub.winmm.dll_mciSendCommandA();\n    *(in_EAX + 0x2e6) = iStack56;\n    if (iStack56 != '\\0') {\n        *(in_EAX + 0x2e2) = *(in_EAX + 0x2e2) | 8;\n    }\n    uStack52 = 7;\n    uStack100 = *(in_EAX + 0x2e8);\n    uStack104 = 0x80b;\n    uStack108 = *(in_EAX + 0x2f2);\n    puStack112 = 0x461d5e;\n    puStack96 = &stack0xffffffc4;\n    sub.winmm.dll_mciSendCommandA();\n    *(in_EAX + 0x2e5) = iStack56;\n    if (iStack56 != '\\0') {\n        *(in_EAX + 0x2e2) = *(in_EAX + 0x2e2) | 2;\n    }\n    uStack52 = 3;\n    uStack116 = *(in_EAX + 0x2e8);\n    uStack120 = 0x80b;\n    uStack124 = *(in_EAX + 0x2f2);\n    puStack128 = 0x461d93;\n    puStack112 = &stack0xffffffc4;\n    sub.winmm.dll_mciSendCommandA();\n    *(in_EAX + 0x2e7) = iStack56;\n    if (iStack56 != '\\0') {\n        *(in_EAX + 0x2e2) = *(in_EAX + 0x2e2) | 0x10;\n    }\n    uStack52 = 4;\n    iVar2 = *(in_EAX + 0x2e8);\n    uVar1 = *(in_EAX + 0x2f2);\n    puStack128 = &stack0xffffffc4;\n    sub.winmm.dll_mciSendCommandA();\n    if ((((iStack56 == 0x207) || (iStack56 == 0x208)) || (iStack56 == 0x203)) || (iStack56 == 0x201)) {\n        *(in_EAX + 0x2e4) = 1;\n    }\n    if (*(in_EAX + 0x2e4) != '\\0') {\n        *(in_EAX + 0x2e2) = *(in_EAX + 0x2e2) | 1;\n    }\n    *(in_EAX + 0x2e8) = 0x20000;\n    uVar3 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x843, 0x20000, &stack0xffffff80);\n    *(in_EAX + 0x304) = uVar3;\n    *(in_EAX + 0x310) = iVar2 - uVar1;\n    *(in_EAX + 0x314) = puStack128 + -0x80b;\n    return;\n}\n",
        "token_count": 1094
    },
    "00462bd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004635d4)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00462bd0(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_250h;\n    uint var_248h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_216h;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint uStackY72;\n    uint uStackY68;\n    uint uVar5;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    int32_t var_ch;\n    int32_t *var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_ch = 0x4f;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    uStack36 = 0x4636e9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX[0x1b] + 0x10) != '\\0') {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    (**(*in_EAX + 0x40))();\n    fcn.00454c34();\n    *in_FS_OFFSET = &stack0xffffffcc;\n    fcn.0040435c();\n    fcn.00454dc4();\n    if (*(in_EAX[0x2f] + 0x18) - 1U < 3) {\n        cVar2 = fcn.004543bc();\n        if (cVar2 == '\\0') {\n            fcn.00454808(0);\n        }\n        fcn.00453f10();\n        fcn.00454e68();\n    }\n    else {\n        cVar2 = fcn.004543bc();\n        if (cVar2 == '\\0') {\n            fcn.00454808(0);\n        }\n        fcn.00453f10();\n        fcn.00454e68();\n    }\n    if (*(in_EAX + 0x30) == '\\0') {\n        uStackY68 = 0x462d9c;\n        fcn.00454d58(4, *0x47bf38);\n    }\n    uVar5 = 0;\n    fcn.00454808(0);\n    (**(*in_EAX[0x1b] + 0x24))();\n    fcn.00453dc0();\n    *in_FS_OFFSET = uVar5;\n    if (*(in_EAX + 0x20) != '\\0') {\n        (**(*in_EAX[0x1f] + 0x30))();\n    }\n    cVar2 = *(in_EAX[0x2f] + 0x18);\n    var_4h = in_EAX;\n    if (cVar2 - 1U < 2) {\n        var_118h._0_1_ = 4;\n        var_118h._1_1_ = 1;\n        var_118h._2_2_ = (**(***0x47c1dc + 0x34))();\n        if (*(in_EAX[0x2f] + 0x18) == '\\x02') {\n            var_114h = fcn.004544c0();\n        }\n        else {\n            fcn.00453f10();\n            var_114h = fcn.004544c0();\n        }\n        iVar4 = in_EAX[0x2f];\n        fcn.0040459c();\n        *(&fcn.00462bd0::var_110h + var_110h + 1) = 0;\n        if (*(iVar4 + 0x18) == '\\x02') {\n            fcn.004045c0();\n            fcn.004047b8();\n            fcn.004028e0();\n            iVar4 = fcn.004045c0();\n            *(&fcn.00462bd0::var_110h + iVar4 + var_110h + 2) = 0;\n        }\n        fcn.00456700(0);\n        uVar5 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        fcn.004560e0();\n        *in_FS_OFFSET = uVar5;\n        if (var_ch._1_1_ != 'Z') {\n            if (var_ch._1_1_ == '[') {\n                fcn.004065fc();\n                fcn.0040b16c();\n                fcn.00403ce4();\n            }\n            else if (var_ch._1_1_ == '\\\\') {\n                fcn.004065fc();\n                fcn.0040b16c();\n                fcn.00403ce4();\n            }\n            else if (var_ch._1_1_ == ']') {\n                fcn.004065fc();\n                fcn.0040b16c();\n                fcn.00403ce4();\n            }\n            else {\n                fcn.004065fc();\n                fcn.0040b16c();\n                fcn.00403ce4();\n            }\n        }\n    }\n    else if (cVar2 == '\\x03') {\n        if (*(in_EAX[0x2f] + 4) == '\\0') {\n            var_216h._0_1_ = '\\0';\n        }\n        else {\n            var_216h._0_1_ = '\\x02';\n        }\n        cVar2 = var_216h;\n        fcn.00456700(0);\n        uVar5 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        uStackY68 = 0x4630f4;\n        fcn.004560e0();\n        *in_FS_OFFSET = uVar5;\n        if (cVar2 != '\\x01') {\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n        }\n        if (*(in_EAX[0x2f] + 4) == '\\x01') {\n            cVar2 = fcn.004045c0();\n            iVar4 = fcn.004045c0();\n            if (0 < iVar4) {\n                fcn.004045c0();\n                fcn.004047b8();\n                fcn.004028e0();\n            }\n            iVar4 = fcn.004045c0();\n            uVar3 = fcn.004045c0();\n            *(&fcn.00462bd0::var_216h + iVar4) = uVar3;\n            iVar4 = fcn.004045c0();\n            if (0 < iVar4) {\n                fcn.004045c0();\n                fcn.004047b8();\n                fcn.004028e0();\n            }\n            fcn.004045c0();\n            fcn.00456700(0);\n            uStackY68 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffbc;\n            uStackY72 = 0x463299;\n            fcn.004560e0();\n            *in_FS_OFFSET = uStackY68;\n            if (cVar2 != '\\0') {\n                fcn.004065fc();\n                fcn.0040b16c();\n                fcn.00403ce4();\n            }\n        }\n        var_216h._0_1_ = 0;\n        var_216h._1_1_ = 3;\n        var_216h._2_1_ = fcn.004045c0();\n        iVar4 = fcn.004045c0();\n        if (0 < iVar4) {\n            fcn.004045c0();\n            fcn.004047b8();\n            fcn.004028e0();\n        }\n        fcn.004045c0();\n        (**(***0x47c1dc + 0x34))();\n        fcn.004028e0();\n        fcn.00456700(0);\n        uVar5 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        fcn.004560e0();\n        *in_FS_OFFSET = uVar5;\n    // switch table (9 cases) at 0x463454\n        switch(*0x463458) {\n        case 0x46347d:\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n            break;\n        case 0x4634a9:\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n            break;\n        case 0x4634d5:\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n            break;\n        case 0x463501:\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n            break;\n        case 0x46352d:\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n            break;\n        case 0x463559:\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n            break;\n        case 0x463582:\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n            break;\n        case 0x4635ab:\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n        }\n        uVar5 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        fcn.004560e0();\n        *in_FS_OFFSET = uVar5;\n    }\n    uVar5 = 0;\n    fcn.00454808(0);\n    (**(*var_4h + 0x90))();\n    *in_FS_OFFSET = uVar5;\n    fcn.0040432c();\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 2468
    },
    "00463d38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463d38(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack28 = 0x463d55;\n    var_4h = param_2;\n    fcn.004047a8();\n    uStack32 = 0x463e55;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004043a0();\n    fcn.004045c0();\n    fcn.00463b1c();\n    while (var_8h != 0) {\n        iVar3 = in_EAX[0x13];\n        iVar1 = in_EAX[0x14];\n        iVar2 = fcn.004045c0();\n        if (iVar2 < iVar3 - iVar1) {\n            iVar3 = fcn.00404810();\n            uVar4 = fcn.004045c0(iVar3 + in_EAX[0x14]);\n            fcn.00404810(uVar4);\n            fcn.004028e0();\n            iVar3 = fcn.004045c0();\n            in_EAX[0x14] = in_EAX[0x14] + iVar3;\n            fcn.00404308();\n        }\n        else {\n            iVar3 = fcn.00404810();\n            fcn.00404810(iVar3 + in_EAX[0x14]);\n            fcn.004028e0();\n            fcn.004045c0(&fcn.00463d38::var_8h);\n            fcn.00404818();\n            in_EAX[0x14] = in_EAX[0x13];\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    if (*(in_EAX + 0x31) == '\\0') {\n        (**(*in_EAX + 0x40))();\n    }\n    else {\n        (**(*in_EAX + 0x38))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x463e5c;\n    uStack32 = 0x463e54;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 578
    },
    "00463ed4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463ed4(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x463eee;\n    fcn.004047a8();\n    uStack32 = 0x463f61;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*(in_EAX + 0x7e) == '\\0') {\n        puStack28 = &stack0xfffffffc;\n        fcn.0040881c();\n        fcn.00404680(param_1, 0x463f78, 0);\n        (**(**(in_EAX + 0x78) + 0x38))();\n    }\n    else if (*(in_EAX + 0x72) != 0) {\n        puStack28 = &stack0xfffffffc;\n        (**(in_EAX + 0x70))(param_1);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x463f68;\n    uStack32 = 0x463f60;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 300
    },
    "00463f7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463f7c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x463f93;\n    fcn.004047a8();\n    uStack32 = 0x464042;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*(in_EAX + 0x30) == '\\0') {\n        puStack28 = &stack0xfffffffc;\n        fcn.004043a0();\n    }\n    else {\n        in_stack_ffffffd0 = 0x464064;\n        puStack28 = &stack0xfffffffc;\n        fcn.00404680(0x464064, 0x464058, param_2);\n    }\n    fcn.004045c0();\n    fcn.00463b1c();\n    if (*(in_EAX + 0x7e) == '\\0') {\n        fcn.0040881c();\n        fcn.00404680(0, 0x464070, 0);\n        (**(**(in_EAX + 0x78) + 0x38))();\n    }\n    else if (*(in_EAX + 0x6a) != 0) {\n        (**(in_EAX + 0x68))();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.0040432c(0x464049);\n    return;\n}\n",
        "token_count": 391
    },
    "004640a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004640a4(uint param_1, uint param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_14h;\n    uint var_10h;\n    char *var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_8h = NULL;\n    var_ch = NULL;\n    var_10h = 0;\n    var_14h = 0;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_4h = param_2;\n    if ((*(in_EAX + 0x5d) == '\\0') || (*(in_EAX + 0x5c) == '\\0')) {\n        iVar2 = (**(**(in_EAX + 0x78) + 0x14))();\n        if (iVar2 < 1) {\n            fcn.00404308();\n        }\n        else {\n            (**(**(in_EAX + 0x78) + 0xc))();\n            if (*var_8h == '0') {\n                bVar1 = false;\n                (**(**(in_EAX + 0x78) + 0x48))();\n                arg_8h = &var_10h;\n                fcn.00451720(arg_8h);\n                while (!bVar1) {\n                    iVar2 = (**(**(in_EAX + 0x78) + 0x14))();\n                    if (iVar2 < 1) {\n                        bVar1 = true;\n                    }\n                    else {\n                        (**(**(in_EAX + 0x78) + 0xc))();\n                        if (*var_ch == '0') {\n                            fcn.00451720(&var_14h);\n                            fcn.004045c8();\n                            (**(**(in_EAX + 0x78) + 0x48))();\n                        }\n                        else {\n                            bVar1 = true;\n                        }\n                    }\n                    iVar2 = (**(**(in_EAX + 0x78) + 0x14))();\n                    if (iVar2 == 0) {\n                        bVar1 = true;\n                    }\n                }\n                fcn.0040460c();\n            }\n            else {\n                (**(**(in_EAX + 0x78) + 0x48))();\n                fcn.0040435c();\n            }\n        }\n    }\n    else {\n        (**(**(in_EAX + 0x78) + 0x44))();\n        fcn.00404308();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 615
    },
    "00464204": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00464204(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    char *var_4h;\n    \n    var_4h = NULL;\n    var_8h = 0;\n    var_ch = 0;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((*(in_EAX + 0x5d) == '\\0') || (*(in_EAX + 0x17) == '\\0')) {\n        iVar1 = (**(*in_EAX[0x1e] + 0x14))();\n        if (iVar1 < 1) {\n            fcn.00404308();\n        }\n        else {\n            (**(*in_EAX[0x1e] + 0xc))();\n            if (*var_4h == '0') {\n                (**(*in_EAX[0x1e] + 0x48))();\n                fcn.0040435c();\n                arg_8h = &var_ch;\n                fcn.00451720(arg_8h);\n            }\n            else if (*(in_EAX + 0x5d) == '\\0') {\n                fcn.00404308();\n            }\n            else {\n                var_8h = (**(*in_EAX[0x1e] + 0x14))();\n                do {\n                    (**(*in_EAX[0x1e] + 0xc))();\n                    if (pe_dos_header == 0x30) break;\n                    (**(*in_EAX[0x1e] + 0x48))();\n                    var_8h = var_8h + -1;\n                } while (0 < var_8h);\n                (**(*in_EAX + 0x3c))();\n            }\n        }\n    }\n    else {\n        (**(*in_EAX[0x1e] + 0x44))();\n        fcn.00404308();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040432c();\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 503
    },
    "00464484": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464484(uint arg_8h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    uint32_t *in_FS_OFFSET;\n    uchar uVar5;\n    uint32_t arg_8h_00;\n    uint32_t uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = 0x4644ab;\n    fcn.004047a8();\n    puStack52 = 0x4644b3;\n    fcn.004047a8();\n    uStack56 = 0x4645eb;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    arg_8h_00 = 0x4644d7;\n    puStack52 = &stack0xfffffffc;\n    uVar2 = fcn.0046438c(arg_8h);\n    if (uVar2 == 0) {\n        iVar4 = 0;\n        bVar1 = false;\n        if (in_ECX != 0) {\n            while( true ) {\n                arg_8h_00 = 0x46453e;\n                uVar2 = fcn.004162c4();\n                if (uVar2 <= iVar4) break;\n                iVar3 = fcn.00464370();\n                uVar5 = arg_8h == *(iVar3 + 0xc);\n                if (uVar5) {\n                    fcn.00408430();\n                    fcn.00408430(0);\n                    arg_8h_00 = 0x464525;\n                    uVar2 = fcn.00404704();\n                    if ((uVar5) && (in_ECX != 0)) {\n                        bVar1 = true;\n                        break;\n                    }\n                }\n                iVar4 = iVar4 + 1;\n            }\n        }\n        if ((!bVar1) && (in_EDX != 0)) {\n            while( true ) {\n                arg_8h_00 = 0x46459f;\n                uVar2 = fcn.004162c4();\n                if (uVar2 <= iVar4) break;\n                iVar3 = fcn.00464370();\n                uVar5 = arg_8h == *(iVar3 + 0xc);\n                if (uVar5) {\n                    fcn.00408430();\n                    fcn.00408430(0);\n                    arg_8h_00 = 0x464586;\n                    uVar2 = fcn.00404704();\n                    if ((uVar5) && (in_EDX != 0)) {\n                        bVar1 = true;\n                        break;\n                    }\n                }\n                iVar4 = iVar4 + 1;\n            }\n        }\n        if (!bVar1) {\n            arg_8h_00 = uVar2 & 0xffffff00 | arg_8h;\n            fcn.0046438c(arg_8h_00);\n        }\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    uStack60 = 0x4645f2;\n    fcn.0040432c();\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 772
    },
    "00464808": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.00464808(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.00403500();\n    in_EAX[0x2a] = iVar1;\n    fcn.00463b78();\n    *(in_EAX + 0x20) = 0;\n    fcn.00404308();\n    fcn.00404308();\n    fcn.00404308();\n    fcn.0040435c();\n    *(in_EAX + 0x25) = 0;\n    *(in_EAX + 0x95) = 0;\n    *(in_EAX + 0x96) = 0;\n    fcn.00404308();\n    fcn.00404308();\n    fcn.00404308();\n    fcn.00404308();\n    *(in_EAX + 0xc) = 0;\n    (**(*in_EAX + 0x50))();\n    iVar1 = in_EAX[0x2b];\n    *(iVar1 + 0x7e) = 1;\n    *(iVar1 + 0x6c) = in_EAX;\n    *(iVar1 + 0x68) = 0x4658f8;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 406
    },
    "00464b4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00464b4c(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *puStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = NULL;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x464e03;\n    puStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if (in_EAX[0x14] != 0) {\n        fcn.00404818(&fcn.00464b4c::var_4h);\n        iVar3 = (***0x47bdcc)();\n        while (iVar3 != 0) {\n            puStack36 = 0x464bb5;\n            fcn.00404818();\n            puStack36 = 0x464bc3;\n            fcn.004045c8();\n            if ((*var_4h == ' ') || (*var_4h == '\\t')) {\n                bVar2 = true;\n                while (bVar2) {\n                    if ((*var_4h == ' ') || (*var_4h == '\\t')) {\n                        puStack36 = 0x464bf3;\n                        fcn.00404858();\n                    }\n                    else {\n                        bVar2 = false;\n                    }\n                }\n                puStack36 = 0x464c06;\n                iVar3 = fcn.004045c0();\n                if (((iVar3 != 0) && (cVar1 = *(in_EAX[0x28] + -1 + iVar3),  cVar1 != ' ')) && (cVar1 != '\\t')) {\n                    puStack36 = 0x464c34;\n                    fcn.004045c8();\n                }\n                puStack36 = 0x464c46;\n                (***0x47bdcc)();\n            }\n            puStack36 = &fcn.00464b4c::var_ch;\n            uStack40 = 0x464c5c;\n            fcn.00404818();\n            uStack40 = 0x464c6a;\n            fcn.004045c8();\n            puStack44 = 0x464c76;\n            fcn.004045c0();\n            puStack44 = 0x464c83;\n            fcn.00404818();\n            puStack44 = 0x464c8b;\n            iVar3 = fcn.004045c0();\n            if ((0 < iVar3) && (*var_4h == '\\n')) {\n                puStack44 = &fcn.00464b4c::var_4h;\n                fcn.004045c0();\n                fcn.00404818();\n                fcn.004045c8();\n            }\n            fcn.004085dc();\n            fcn.0040435c();\n            iVar3 = fcn.004045c0();\n            if (iVar3 < 1) {\n                *(in_EAX + 0x20) = 1;\n                fcn.00463f7c();\n                fcn.00404308();\n                break;\n            }\n            iVar3 = fcn.004045c0();\n            if (iVar3 < 1) {\n                bVar2 = false;\n            }\n            else if ((*var_4h == ' ') || (*var_4h == '\\t')) {\n                bVar2 = false;\n            }\n            else {\n                bVar2 = true;\n            }\n            if (bVar2) {\n                (**(*in_EAX + 0x60))();\n            }\n            iVar3 = (***0x47bdcc)();\n        }\n        *(in_EAX + 0x25) = 1;\n        if (*(in_EAX + 0x20) == '\\0') {\n            if (*(in_EAX + 0x5e) == '\\0') {\n                fcn.004045c8();\n            }\n            else {\n                fcn.00463f7c();\n                fcn.00404308();\n            }\n        }\n        iVar3 = fcn.004045c0();\n        in_EAX[0x14] = iVar3;\n        uVar4 = fcn.00404810();\n        fcn.00404810(uVar4);\n        fcn.004028e0();\n        if (*(in_EAX + 0x20) == '\\x01') {\n            fcn.00463f7c();\n            fcn.00463ed4();\n            (**(*in_EAX + 100))();\n            (**(*in_EAX + 0x58))();\n        }\n    }\n    *in_FS_OFFSET = puStack44;\n    puStack36 = 0x464e0a;\n    uStack40 = 0x464e02;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 1122
    },
    "00464f20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00464f20(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uchar uVar2;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 8;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x4652d8;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00464f20::var_20h;\n    var_24h = 0x464f54;\n    fcn.00463ed4();\n    uVar2 = **(in_EAX + 0xa0) == 'C';\n    if ((uVar2) || (uVar2 = **(in_EAX + 0xa0) == 'c',  uVar2)) {\n        var_24h = &fcn.00464f20::var_ch;\n        var_28h = 0x464f81;\n        fcn.00404818();\n        var_28h = 0x464f8c;\n        fcn.00408430();\n        var_28h = 0x464f99;\n        fcn.00404704();\n        if (uVar2) {\n            var_28h = &fcn.00464f20::var_10h;\n            var_2ch = 0x464fb1;\n            fcn.00451720(var_28h);\n            var_2ch = 0x464fbf;\n            fcn.004085dc();\n            var_2ch = 0x464fcd;\n            fcn.0040435c();\n            if (*(in_EAX + 0x94) == '\\0') {\n                *(in_EAX + 0x96) = 1;\n                var_2ch = 0x464ff2;\n                fcn.0040435c();\n            }\n        }\n        else {\n            var_28h = &fcn.00464f20::var_1ch;\n            var_2ch = 0x465010;\n            fcn.00404818();\n            var_2ch = 0x46501b;\n            fcn.00408430();\n            var_2ch = 0x465028;\n            fcn.00404704();\n            if (uVar2) {\n                var_2ch = &fcn.00464f20::var_20h;\n                var_30h = 0x465044;\n                fcn.00451720(var_2ch);\n                var_30h = 0x465052;\n                fcn.004085dc();\n                var_30h = 0x465060;\n                fcn.0040435c();\n                var_30h = 0x46506b;\n                fcn.00404308();\n                if (*(in_EAX + 0x94) == '\\0') {\n                    *(in_EAX + 0x95) = 1;\n                    var_30h = 0x46508c;\n                    fcn.0040435c();\n                }\n                var_30h = 0x46509a;\n                fcn.00408430();\n                var_30h = 0x4650ac;\n                iVar1 = (***0x47bdcc)();\n                if (iVar1 != 0) {\n                    var_30h = &fcn.00464f20::var_4h;\n                    var_34h = 0x4650c5;\n                    fcn.004045c0();\n                    var_34h = 0x4650d5;\n                    fcn.00404818();\n                    var_34h = 0x4650e7;\n                    iVar1 = (***0x47bdcc)();\n                    if (iVar1 != 0) {\n                        var_34h = &fcn.00464f20::var_4h;\n                        var_38h = 0x4650f9;\n                        fcn.004045c0();\n                        var_38h = 0x465106;\n                        fcn.00404818();\n                    }\n                    var_34h = 0x465118;\n                    iVar1 = (***0x47bdcc)();\n                    if (iVar1 != 0) {\n                        var_34h = &fcn.00464f20::var_4h;\n                        var_38h = 0x465132;\n                        fcn.00404818();\n                    }\n                    var_34h = 0x465142;\n                    (**(**(in_EAX + 0xa8) + 0x60))();\n                }\n                var_30h = 0x465150;\n                fcn.00408430();\n                var_30h = 0x465162;\n                iVar1 = (***0x47bdcc)();\n                if (iVar1 != 0) {\n                    var_2ch = &fcn.00464f20::var_4h;\n                    var_34h = 0x46517b;\n                    fcn.004045c0();\n                    var_34h = 0x46518b;\n                    fcn.00404818();\n                    var_34h = 0x465196;\n                    fcn.00464e44();\n                    var_34h = 0x4651a1;\n                    fcn.0040435c();\n                    var_34h = 0x4651b0;\n                    fcn.00463ed4();\n                    *(in_EAX + 0x7c) = 1;\n                }\n            }\n            else {\n                var_2ch = &fcn.00464f20::var_38h;\n                var_30h = 0x4651d2;\n                fcn.00404818();\n                var_30h = 0x4651dd;\n                fcn.00408430();\n                var_30h = 0x4651ea;\n                fcn.00404704();\n                if (uVar2) {\n                    var_30h = &fcn.00464f20::var_3ch;\n                    var_34h = 0x465206;\n                    fcn.00451720(var_30h);\n                    var_34h = 0x465214;\n                    fcn.00408430();\n                    var_34h = 0x465226;\n                    iVar1 = (***0x47bdcc)();\n                    if (iVar1 != 0) {\n                        var_2ch = in_EAX + 0xa0;\n                        var_34h = 0x465242;\n                        fcn.004045c0();\n                        var_34h = 0x465252;\n                        fcn.00404818();\n                        var_34h = 0x465260;\n                        fcn.00464e44();\n                        var_34h = 0x46526b;\n                        fcn.0040435c();\n                        var_34h = 0x46527a;\n                        fcn.00463ed4();\n                        *(in_EAX + 0x7c) = 1;\n                    }\n                }\n                else {\n                    var_30h = 0x46528d;\n                    fcn.00463f7c();\n                    var_30h = 0x465298;\n                    fcn.00404308();\n                }\n            }\n        }\n    }\n    else {\n        var_24h = 0x4652a7;\n        fcn.00463f7c();\n        var_24h = 0x4652b2;\n        fcn.00404308();\n    }\n    var_30h = 0x4652bd;\n    fcn.00404308();\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x4652df;\n    var_28h = 0x4652d7;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 1948
    },
    "00465390": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00465390(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uchar uVar5;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar4 = 9;\n    do {\n        var_4h = 0;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0x4656d3;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00465390::var_1ch;\n    var_ch = unaff_EBX;\n    if (*(in_EAX + 0x50) != 0) {\n        fcn.00404818(&fcn.00465390::var_10h);\n        iVar4 = (**(**(in_EAX + 0xa8) + 0x14))();\n        if (iVar4 < 1) {\n            fcn.00463d38();\n            *(in_EAX + 0x50) = 0;\n        }\n        else {\n            var_8h = 0xffffffff;\n            var_ch = 0xffffffff;\n            var_1ch = (**(**(in_EAX + 0xa8) + 0x14))();\n            var_4h = 0;\n            do {\n                (**(**(in_EAX + 0xa8) + 0xc))();\n                uVar2 = (***0x47bdcc)();\n                if ((uVar2 < var_8h) && (uVar2 != 0)) {\n                    var_ch = var_4h;\n                    var_8h = uVar2;\n                }\n                var_4h = var_4h + 1;\n                var_1ch = var_1ch + -1;\n            } while (var_1ch != 0);\n            if (var_ch == 0xffffffff) {\n                fcn.00463d38();\n                *(in_EAX + 0x50) = 0;\n            }\n            else {\n                fcn.00404818(&fcn.00465390::var_14h);\n                var_4h = fcn.004045c0();\n                if (var_4h < 4) {\n                    if (((1 < var_4h) && (var_14h[var_4h - 1] == '-')) && (var_14h[var_4h - 2] == '-')) {\n                        fcn.00404818(&fcn.00465390::var_14h);\n                    }\n                }\n                else {\n                    iVar4 = fcn.004045c0(&fcn.00465390::var_18h);\n                    uVar5 = iVar4 == 3;\n                    fcn.00404818();\n                    fcn.00404704();\n                    if (uVar5) {\n                        fcn.00404818(&fcn.00465390::var_14h);\n                        var_4h = 4;\n                    }\n                    else {\n                        var_4h = 5;\n                    }\n                }\n                uVar3 = fcn.004045c0(&fcn.00465390::var_10h);\n                fcn.004045c0(uVar3);\n                fcn.00404818();\n                iVar4 = fcn.004045c0();\n                if (iVar4 < 1) {\n                    piVar1 = *(in_EAX + 0xac);\n                    if ((*(piVar1 + 0x3a) != 0) || (*(piVar1 + 0x3e) != 0)) {\n                        (**(*piVar1 + 0x38))();\n                        (**(**(in_EAX + 0xac) + 0x44))();\n                    }\n                }\n                else {\n                    fcn.00463d38();\n                    (**(**(in_EAX + 0xac) + 0x38))();\n                    (**(**(in_EAX + 0xac) + 0x44))();\n                }\n                (**(**(in_EAX + 0xa8) + 0xc))();\n                fcn.00463ed4();\n                if (var_4h < 4) {\n                    if (1 < var_4h) {\n                        (**(**(in_EAX + 0xa8) + 0xc))();\n                        fcn.0040460c();\n                    }\n                }\n                else {\n                    (**(**(in_EAX + 0xa8) + 0xc))();\n                    fcn.0040460c();\n                }\n                (**(**(in_EAX + 0xa8) + 0xc))();\n                var_8h = (***0x47bdcc)();\n                (**(**(in_EAX + 0xa8) + 0xc))(&fcn.00465390::var_10h);\n                iVar4 = fcn.004045c0();\n                fcn.004045c0(iVar4 + var_8h);\n                fcn.00404818();\n                uVar3 = fcn.004045c0();\n                *(in_EAX + 0x50) = uVar3;\n                uVar3 = fcn.00404810();\n                fcn.00404810(uVar3);\n                fcn.004028e0();\n                *(in_EAX + 0x80) = 2;\n            }\n        }\n    }\n    *in_FS_OFFSET = var_1ch;\n    var_14h = 0x4656da;\n    var_18h = 0x4656c5;\n    fcn.0040432c();\n    var_18h = 0x4656d2;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 1507
    },
    "004656fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004656fc(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack52;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack40 = 0x4658dc;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x50) != 0) {\n        if (*(in_EAX + 0x4c) < 4) {\n            puStack36 = &stack0xfffffffc;\n            fcn.00464074();\n            puVar1 = puStack36;\n        }\n        else if ((*(in_EAX + 0x50) < 4) && (*(in_EAX + 0x5e) != '\\0')) {\n            *(in_EAX + 0x50) = 0;\n            puVar1 = &stack0xfffffffc;\n        }\n        else {\n            puVar1 = &stack0xfffffffc;\n            if (3 < *(in_EAX + 0x50)) {\n                puStack52 = 0x46576d;\n                fcn.00404818(&fcn.004656fc::var_4h);\n                if ((*var_4h == '-') && (var_4h[1] == '-')) {\n                    fcn.00463ed4();\n                    fcn.004045c8();\n                    puStack52 = &fcn.004656fc::var_4h;\n                    fcn.004045c0();\n                    fcn.00404818();\n                }\n                if (*var_4h == '-') {\n                    fcn.004044e8();\n                    fcn.004045c8();\n                    fcn.004045c0(&fcn.004656fc::var_4h);\n                    fcn.00404818();\n                }\n                if (*var_4h == '\\r') {\n                    fcn.004044e8();\n                    fcn.004045c8();\n                    fcn.004045c0(&fcn.004656fc::var_4h);\n                    fcn.00404818();\n                }\n                if (*var_4h == '\\n') {\n                    fcn.004044e8();\n                    fcn.004045c8();\n                    fcn.004045c0(&fcn.004656fc::var_4h);\n                    fcn.00404818();\n                }\n                iVar2 = fcn.004045c0();\n                if (0 < iVar2) {\n                    fcn.00463f7c();\n                    fcn.00404308();\n                }\n                uVar3 = fcn.004045c0();\n                *(in_EAX + 0x50) = uVar3;\n                uVar3 = fcn.00404810();\n                fcn.00404810(uVar3);\n                fcn.004028e0();\n                *(in_EAX + 0x80) = 0;\n                puVar1 = puStack36;\n            }\n        }\n    }\n    puStack36 = puVar1;\n    *in_FS_OFFSET = puStack52;\n    iStack44 = 0x4658e3;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 789
    },
    "00466450": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00466450(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00463b78();\n    if (0 < *(in_EAX + 0x84)) {\n        fcn.00404944();\n        fcn.00404808();\n    }\n    *(in_EAX + 0x7c) = 1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 207
    },
    "00466794": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00466794(void)\n\n{\n    int32_t in_EAX;\n    uint32_t arg_18h;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    \n    uVar5 = (*(in_EAX + 0x50) / 3) * 3;\n    fcn.00404944();\n    fcn.00404808();\n    uVar7 = 1;\n    iVar6 = 1;\n    if (uVar5 != 0) {\n        do {\n            arg_18h = *(in_EAX + 0x54) & 0xffffff00 | *(*(in_EAX + 0x54) + 1 + uVar7);\n            iVar1 = fcn.00404810();\n            iVar1 = iVar1 + -1 + iVar6;\n            iVar2 = fcn.00404810();\n            iVar2 = iVar2 + iVar6;\n            iVar3 = fcn.00404810();\n            iVar3 = iVar3 + 1 + iVar6;\n            iVar4 = fcn.00404810();\n            uVar5 = iVar4 + 2 + iVar6;\n            fcn.004665f8(uVar5, iVar3, iVar2, iVar1, arg_18h);\n            uVar7 = uVar7 + 3;\n            iVar6 = iVar6 + 4;\n        } while (uVar7 <= uVar5);\n    }\n    iVar1 = *(in_EAX + 0x50) - uVar5;\n    if (*(in_EAX + 0x50) != uVar5) {\n        if (iVar1 == 1) {\n            uVar8 = 0;\n            iVar1 = fcn.00404810();\n            iVar1 = iVar1 + -1 + iVar6;\n            iVar2 = fcn.00404810();\n            iVar2 = iVar2 + iVar6;\n            iVar3 = fcn.00404810();\n            iVar3 = iVar3 + 1 + iVar6;\n            iVar4 = fcn.00404810();\n            fcn.004665f8(iVar4 + 2 + iVar6, iVar3, iVar2, iVar1, uVar8);\n        }\n        else if (iVar1 == 2) {\n            uVar8 = 0;\n            iVar1 = fcn.00404810();\n            iVar1 = iVar1 + -1 + iVar6;\n            iVar2 = fcn.00404810();\n            iVar2 = iVar2 + iVar6;\n            iVar3 = fcn.00404810();\n            iVar3 = iVar3 + 1 + iVar6;\n            iVar4 = fcn.00404810();\n            fcn.004665f8(iVar4 + 2 + iVar6, iVar3, iVar2, iVar1, uVar8);\n        }\n        else if (iVar1 == 3) {\n            uVar5 = *(in_EAX + 0x54) & 0xffffff00 | *(*(in_EAX + 0x54) + 1 + uVar7);\n            iVar1 = fcn.00404810();\n            iVar1 = iVar1 + -1 + iVar6;\n            iVar2 = fcn.00404810();\n            iVar2 = iVar2 + iVar6;\n            iVar3 = fcn.00404810();\n            iVar3 = iVar3 + 1 + iVar6;\n            iVar4 = fcn.00404810();\n            fcn.004665f8(iVar4 + 2 + iVar6, iVar3, iVar2, iVar1, uVar5);\n        }\n    }\n    *(in_EAX + 0x50) = 0;\n    return;\n}\n",
        "token_count": 836
    },
    "00466c24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00466c24(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack44 = 0x466d4c;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puVar2 = &stack0xfffffffc;\n    if (*(in_EAX + 0x50) != 0) {\n        bVar1 = false;\n        puStack52 = &fcn.00466c24::var_8h;\n        fcn.00404818();\n        fcn.00404308();\n        while (!bVar1) {\n            fcn.0046638c();\n            iVar3 = fcn.004045c0();\n            if (iVar3 == 0) {\n                fcn.0046638c();\n            }\n            uVar4 = fcn.004045c0();\n            *(in_EAX + 0x50) = uVar4;\n            uVar4 = fcn.00404810();\n            fcn.00404810(uVar4);\n            fcn.004028e0();\n            fcn.00466944();\n            fcn.004045c8();\n            iVar3 = (***0x47bdcc)();\n            if (iVar3 == 0) {\n                bVar1 = true;\n            }\n        }\n        uVar4 = fcn.004045c0();\n        *(in_EAX + 0x50) = uVar4;\n        fcn.00463e84();\n        if (*(in_EAX + 0x50) != 0) {\n            uVar4 = fcn.00404810();\n            fcn.00404810(uVar4);\n            fcn.004028e0();\n        }\n        fcn.00463f7c();\n        puVar2 = puStack40;\n    }\n    puStack40 = puVar2;\n    *in_FS_OFFSET = puStack52;\n    uStack44 = 0x466d53;\n    iStack48 = 0x466d3e;\n    fcn.00404308();\n    iStack48 = 0x466d4b;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 600
    },
    "00467220": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00467220(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x4672fe;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x88) != '\\0') {\n        fcn.00463f7c();\n        fcn.00404818(&var_4h);\n        fcn.00463f7c();\n        fcn.00404818(&var_4h);\n        fcn.00463f7c();\n        puVar1 = puStack24;\n    }\n    puStack24 = puVar1;\n    fcn.0040881c(0x467324);\n    uVar2 = *(in_EAX + 0x58);\n    fcn.00404680(uVar2, 0x467334, 0);\n    fcn.00463f7c();\n    *(in_EAX + 0x89) = 0;\n    *in_FS_OFFSET = uVar2;\n    fcn.0040432c(0x467305);\n    return;\n}\n",
        "token_count": 332
    },
    "004673e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004673e8(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x46746f;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x89) != '\\0') {\n        (**(*in_EAX + 0x54))();\n        puVar1 = puStack24;\n    }\n    puStack24 = puVar1;\n    fcn.00463e84();\n    fcn.004666e8();\n    fcn.004044e8(0);\n    fcn.0040460c();\n    fcn.00463f7c();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x467476;\n    uStack28 = 0x46746e;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 275
    },
    "0046747c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0046747c(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_18h = 0x4675d5;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046747c::var_1ch;\n    *(in_EAX + 0x5e) = 1;\n    puVar1 = &stack0xfffffffc;\n    var_10h = unaff_EBX;\n    if (*(in_EAX + 0x89) != '\\0') {\n        (**(*in_EAX + 0x54))();\n        puVar1 = var_14h;\n    }\n    var_14h = puVar1;\n    if (in_EAX[0x14] == 0) {\n        fcn.004044e8();\n        fcn.00463f7c();\n        fcn.00463f7c();\n    }\n    else {\n        fcn.00463e84();\n        fcn.00466794();\n        fcn.004044e8(var_10h);\n        fcn.0040460c();\n        fcn.00404680(0x467604, 0x4675f8, var_4h);\n        fcn.004043a0();\n        fcn.00463f7c();\n        var_1ch = CONCAT31(CONCAT21(var_1ch._2_2_, *in_EAX[0x20]), 1);\n        fcn.00402cf8();\n        fcn.00402cc8();\n        fcn.00402cf8();\n        fcn.00402cc8();\n        fcn.00404564();\n        fcn.00463f7c();\n        fcn.004043a0();\n        fcn.00463f7c();\n    }\n    *in_FS_OFFSET = var_1ch;\n    var_14h = 0x4675dc;\n    var_18h = 0x4675d4;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 632
    },
    "00467790": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __fastcall fcn.00467790(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uVar4;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    iVar3 = 10;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_20h = 0x467f00;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00467790::var_24h;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 != 0) {\n        var_28h = &fcn.00467790::var_8h;\n        var_2ch = 0x4677d0;\n        fcn.00404818();\n        puVar1 = var_1ch;\n    // switch table (7 cases) at 0x4677e6\n        switch(in_EAX[0x24]) {\n        case 0:\n            var_2ch = 0x46780d;\n            fcn.004083f4();\n            var_2ch = 0x46781f;\n            iVar3 = (***0x47bdcc)();\n            if (iVar3 == 0) {\n                var_28h = 0x4678bf;\n                fcn.004083f4();\n                var_28h = 0x4678d1;\n                iVar3 = (***0x47bdcc)();\n                if (iVar3 == 0) {\n                    if (*(in_EAX + 0x5e) == '\\0') {\n                        var_2ch = 0x4679ac;\n                        fcn.004045c0();\n                        var_2ch = &fcn.00467790::var_8h;\n                        var_30h = 0x4679ba;\n                        fcn.004045c0();\n                        var_30h = 0x4679c9;\n                        fcn.00404818();\n                        var_30h = 0x4679d4;\n                        fcn.004083f4();\n                        var_30h = 0x4679e6;\n                        iVar3 = (***0x47bdcc)();\n                        var_30h = 0x4679f3;\n                        fcn.004083f4();\n                        var_30h = 0x467a05;\n                        var_4h = (***0x47bdcc)();\n                        if (iVar3 < var_4h) {\n                            if (iVar3 == 0) {\n                                if (var_4h == 0) {\n                                    var_2ch = 0x467a1f;\n                                    fcn.00404308();\n                                }\n                                else {\n                                    var_28h = &fcn.00467790::var_8h;\n                                    var_30h = 0x467a2d;\n                                    fcn.004045c0();\n                                    var_30h = 0x467a3a;\n                                    fcn.00404818();\n                                }\n                            }\n                            else {\n                                var_28h = &fcn.00467790::var_8h;\n                                var_30h = 0x467a48;\n                                fcn.004045c0();\n                                var_30h = 0x467a54;\n                                fcn.00404818();\n                            }\n                        }\n                        else if (var_4h == 0) {\n                            if (iVar3 == 0) {\n                                in_EAX[0x14] = 0;\n                            }\n                            else {\n                                var_28h = &fcn.00467790::var_8h;\n                                var_30h = 0x467a73;\n                                fcn.004045c0();\n                                var_30h = 0x467a7f;\n                                fcn.00404818();\n                            }\n                        }\n                        else {\n                            var_28h = &fcn.00467790::var_8h;\n                            var_30h = 0x467a8d;\n                            fcn.004045c0();\n                            var_30h = 0x467a9a;\n                            fcn.00404818();\n                        }\n                        if (var_8h == 0) {\n                            var_2ch = 0x467ae1;\n                            fcn.00463e84();\n                            in_EAX[0x14] = 0;\n                            puVar1 = var_1ch;\n                        }\n                        else {\n                            var_2ch = 0x467aa8;\n                            iVar3 = fcn.004045c0();\n                            in_EAX[0x14] = iVar3;\n                            var_2ch = 0x467ab8;\n                            fcn.00463e84();\n                            var_2ch = 0x467ac0;\n                            var_2ch = fcn.00404810();\n                            var_30h = 0x467ac9;\n                            fcn.00404810();\n                            var_2ch = 0x467ad2;\n                            fcn.004028e0();\n                            puVar1 = var_1ch;\n                        }\n                    }\n                    else {\n                        var_2ch = 0x46799a;\n                        fcn.00463e84();\n                        in_EAX[0x14] = 0;\n                        puVar1 = var_1ch;\n                    }\n                }\n                else {\n                    var_28h = &fcn.00467790::var_8h;\n                    var_30h = 0x4678e7;\n                    fcn.004045c0();\n                    var_30h = 0x4678f6;\n                    fcn.00404818();\n                    var_30h = 0x4678ff;\n                    fcn.00463e84();\n                    var_30h = 0x467907;\n                    fcn.004045c0();\n                    var_30h = 0x467914;\n                    fcn.0040862c();\n                    var_30h = 0x46791f;\n                    fcn.004043a0();\n                    var_30h = 0x467927;\n                    fcn.004045c0();\n                    var_30h = 0x467932;\n                    fcn.00463e84();\n                    in_EAX[0x24] = 5;\n                    var_30h = 0x46794a;\n                    fcn.00463ed4();\n                    var_30h = 0x467956;\n                    fcn.00464074();\n                    var_30h = 0x46795e;\n                    iVar3 = fcn.004045c0();\n                    in_EAX[0x14] = iVar3;\n                    puVar1 = var_1ch;\n                    if (iVar3 != 0) {\n                        var_30h = 0x467973;\n                        var_30h = fcn.00404810();\n                        var_34h = 0x46797c;\n                        fcn.00404810();\n                        var_30h = 0x467985;\n                        fcn.004028e0();\n                        puVar1 = var_1ch;\n                    }\n                }\n            }\n            else {\n                var_28h = &fcn.00467790::var_8h;\n                var_2ch = 0x467835;\n                fcn.004045c0();\n                var_2ch = 0x467842;\n                fcn.00404818();\n                var_2ch = 0x46784d;\n                fcn.0046638c();\n                var_2ch = 0x467855;\n                fcn.004045c0();\n                var_2ch = 0x467863;\n                fcn.00463e84();\n                in_EAX[0x24] = 1;\n                var_2ch = 0x46787b;\n                fcn.00463ed4();\n                var_2ch = 0x467892;\n                fcn.00464074();\n                var_2ch = 0x46789a;\n                iVar3 = fcn.004045c0();\n                puVar1 = var_1ch;\n                if (0 < iVar3) {\n                    var_2ch = 0x4678af;\n                    fcn.00463d38();\n                    puVar1 = var_1ch;\n                }\n            }\n            break;\n        case 1:\n            var_2ch = &fcn.00467790::var_2ch;\n            var_30h = 0x467b09;\n            fcn.00404818();\n            var_30h = 0x467b13;\n            (**(*in_EAX + 0x50))();\n            var_28h = &fcn.00467790::var_8h;\n            var_2ch = 0x467b1f;\n            fcn.004045c0();\n            var_2ch = 0x467b37;\n            fcn.00404818();\n            var_2ch = 0x467b42;\n            fcn.0046638c();\n            var_2ch = 0x467b4a;\n            fcn.004045c0();\n            var_2ch = 0x467b53;\n            fcn.00463e84();\n            in_EAX[0x24] = 2;\n            in_EAX[0x14] = 0;\n            var_2ch = 0x467b6a;\n            iVar3 = fcn.004045c0();\n            puVar1 = var_1ch;\n            if (0 < iVar3) {\n                var_2ch = 0x467b7f;\n                fcn.00463d38();\n                puVar1 = var_1ch;\n            }\n            break;\n        case 2:\n            var_2ch = &fcn.00467790::var_34h;\n            var_30h = 0x467ba5;\n            fcn.00404818();\n            var_30h = &fcn.00467790::var_34h;\n            var_34h = &fcn.00467790::var_38h;\n            var_38h = 0x467bc7;\n            fcn.00404818();\n            var_34h = 0x467bd0;\n            fcn.004045c8();\n            var_34h = 0x467bda;\n            (**(*in_EAX + 0x50))();\n            in_EAX[0x24] = 3;\n            var_28h = &fcn.00467790::var_8h;\n            var_2ch = 0x467bf0;\n            fcn.004045c0();\n            var_2ch = 0x467c08;\n            fcn.00404818();\n            var_2ch = 0x467c13;\n            fcn.0046638c();\n            var_2ch = 0x467c1b;\n            fcn.004045c0();\n            var_2ch = 0x467c24;\n            fcn.00463e84();\n            var_2ch = 0x467c30;\n            fcn.00464074();\n            var_2ch = 0x467c38;\n            iVar3 = fcn.004045c0();\n            puVar1 = var_1ch;\n            if (0 < iVar3) {\n                var_2ch = 0x467c4d;\n                fcn.00463d38();\n                puVar1 = var_1ch;\n            }\n            break;\n        case 3:\n            var_2ch = 0x467c5d;\n            fcn.004083f4();\n            var_2ch = 0x467c6f;\n            iVar3 = (***0x47bdcc)();\n            if (iVar3 == 0) {\n                in_EAX[0x24] = 0;\n                var_28h = 0x467d2c;\n                fcn.00463ed4();\n                *(in_EAX + 0x22) = 1;\n                var_28h = 0x467d43;\n                (**(*in_EAX[0x23] + 0x38))();\n                puVar1 = var_1ch;\n            }\n            else {\n                var_28h = &fcn.00467790::var_8h;\n                var_2ch = 0x467c88;\n                fcn.004045c0();\n                var_2ch = 0x467c94;\n                fcn.00404818();\n                var_2ch = 0x467c9d;\n                fcn.00463e84();\n                in_EAX[0x24] = 5;\n                var_2ch = 0x467cb5;\n                fcn.00463ed4();\n                var_2ch = 0x467cc1;\n                fcn.00464074();\n                var_2ch = 0x467cc9;\n                fcn.004045c0();\n                var_2ch = 0x467cd6;\n                fcn.0040862c();\n                var_2ch = 0x467ce1;\n                fcn.004043a0();\n                var_2ch = 0x467ce9;\n                fcn.004045c0();\n                var_2ch = 0x467cf4;\n                fcn.00463e84();\n                var_2ch = 0x467cfc;\n                iVar3 = fcn.004045c0();\n                puVar1 = var_1ch;\n                if (0 < iVar3) {\n                    var_2ch = 0x467d11;\n                    fcn.00463d38();\n                    puVar1 = var_1ch;\n                }\n            }\n            break;\n        case 5:\n            var_2ch = 0x467d50;\n            iVar3 = fcn.004045c0();\n            if (iVar3 == 3) {\n                uVar4 = 0;\n                iVar3 = 3;\n                do {\n                    var_2ch = 0x467d68;\n                    cVar2 = fcn.0045188c();\n                    if (cVar2 == '\\0') {\n                        uVar4 = 0x1000000;\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n                if (uVar4 >> 0x18 == '\\0') {\n                    var_2ch = 0x467dab;\n                    iVar3 = fcn.004088bc();\n                    in_EAX[0x27] = iVar3;\n                    var_2ch = 0x467dbd;\n                    fcn.0040881c();\n                    var_2ch = 0x467dcc;\n                    fcn.00463ed4();\n                }\n                else {\n                    *(in_EAX + 0x22) = 1;\n                    var_2ch = 0x467d90;\n                    (**(*in_EAX[0x23] + 0x38))();\n                    var_2ch = 0x467d9e;\n                    fcn.00463ed4();\n                }\n            }\n            else {\n                var_2ch = 0x467dd6;\n                iVar3 = fcn.004045c0();\n                if (iVar3 < 3) {\n                    *(in_EAX + 0x22) = 1;\n                    var_2ch = 0x467df2;\n                    (**(*in_EAX[0x23] + 0x38))();\n                    var_2ch = 0x467e00;\n                    fcn.00463ed4();\n                }\n                else {\n                    *(in_EAX + 0x22) = 1;\n                    var_2ch = 0x467e19;\n                    (**(*in_EAX[0x23] + 0x38))();\n                    var_2ch = 0x467e27;\n                    fcn.00463ed4();\n                }\n            }\n            in_EAX[0x24] = 6;\n            var_2ch = 0x467e3d;\n            fcn.00463e84();\n            var_2ch = 0x467e49;\n            fcn.00464074();\n            puVar1 = var_1ch;\n            break;\n        case 6:\n            var_2ch = 0x467e56;\n            fcn.004045c0();\n            var_2ch = 0x467e63;\n            fcn.0040862c();\n            var_2ch = 0x467e6e;\n            fcn.004043a0();\n            var_2ch = 0x467e76;\n            fcn.004045c0();\n            var_2ch = 0x467e81;\n            fcn.00463e84();\n            var_2ch = 0x467e8c;\n            fcn.0046638c();\n            var_2ch = 0x467e97;\n            fcn.0040435c();\n            var_2ch = 0x467ea6;\n            fcn.00463ed4();\n            *(in_EAX + 0x26) = 0;\n            var_2ch = 0x467eba;\n            fcn.00464074();\n            in_EAX[0x14] = 0;\n            var_2ch = 0x467ec7;\n            iVar3 = fcn.004045c0();\n            puVar1 = var_1ch;\n            if (0 < iVar3) {\n                var_2ch = 0x467ed8;\n                fcn.00463d38();\n                puVar1 = var_1ch;\n            }\n        }\n    }\n    var_1ch = puVar1;\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x467f07;\n    var_24h = 0x467ef2;\n    fcn.0040432c();\n    var_24h = 0x467eff;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 4190
    },
    "00468000": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00468000(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    uint *in_stack_ffffffcc;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = NULL;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack40 = 0x4681b7;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x89) == '\\0') {\n        if (*(in_EAX + 0x26) == '\\0') {\n            fcn.00404818(&fcn.00468000::var_8h);\n            fcn.0046638c();\n            iVar2 = fcn.004045c0();\n            if (iVar2 == 0) {\n                fcn.0046638c();\n            }\n            fcn.004045c0();\n            fcn.00463e84();\n            uVar4 = in_EAX[0x24] == 9;\n            if (uVar4) {\n                in_stack_ffffffcc = &fcn.00468000::var_ch;\n                fcn.00404818();\n                fcn.00404704();\n                if (uVar4) {\n                    fcn.00463ed4();\n                }\n                (**(*in_EAX + 0x44))();\n                puVar1 = puStack36;\n            }\n            else if (*var_4h == *in_EAX[0x20]) {\n                in_EAX[0x24] = 9;\n                in_stack_ffffffcc = 0x4680f7;\n                fcn.00463ed4();\n                puVar1 = puStack36;\n            }\n            else {\n                iVar2 = fcn.004664b4();\n                if (iVar2 == 0) {\n                    *(in_EAX + 0x89) = 1;\n                }\n                uVar3 = fcn.00404810();\n                fcn.00404810(uVar3);\n                fcn.004028e0();\n                fcn.00463e84();\n                in_EAX[0x14] = iVar2 / 3 << 2;\n                fcn.00466944();\n                in_stack_ffffffcc = &fcn.00468000::var_10h;\n                fcn.00404818();\n                fcn.00463f7c();\n                iVar2 = fcn.004045c0();\n                in_EAX[0x14] = iVar2;\n                puVar1 = puStack36;\n                if (iVar2 != 0) {\n                    uVar3 = fcn.00404810();\n                    fcn.00404810(uVar3);\n                    fcn.004028e0();\n                    puVar1 = puStack36;\n                }\n            }\n        }\n        else {\n            puStack36 = &stack0xfffffffc;\n            (**(*in_EAX + 0x54))();\n            puVar1 = puStack36;\n        }\n    }\n    puStack36 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    iStack44 = 0x4681be;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 809
    },
    "004681d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004681d4(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    uint uVar8;\n    uint uVar9;\n    uint *arg_8h;\n    uint *puVar10;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    char *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = NULL;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    puVar10 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (*(in_EAX + 0x89) == '\\0') {\n        fcn.00463e84();\n        *(in_EAX + 0x5e) = 1;\n        if (((*(in_EAX + 0x26) != '\\0') && ((**(*in_EAX + 0x54))(),  in_EAX[0x14] != 0)) && (*(in_EAX + 0x26) != '\\0'))\n        {\n            (**(*in_EAX + 0x34))();\n        }\n        if ((*(in_EAX + 0x26) == '\\0') && (in_EAX[0x14] != 0)) {\n            puVar10 = &var_8h;\n            fcn.00404818();\n            while (*var_8h != *in_EAX[0x20]) {\n                var_10h = fcn.004664b4();\n                fcn.00404944();\n                fcn.0046638c();\n                arg_8h = &var_4h;\n                fcn.004045c0(arg_8h);\n                fcn.00404818();\n                iVar7 = 1;\n                for (iVar6 = 1; iVar4 = fcn.004045c0(arg_8h),  iVar6 <= iVar4; iVar6 = iVar6 + 4) {\n                    uVar1 = var_4h & 0xffffff00 | *(var_4h + 1 + iVar6);\n                    uVar2 = var_4h & 0xffffff00 | *(var_4h + 2 + iVar6);\n                    iVar4 = fcn.00404810();\n                    iVar4 = iVar4 + -1 + iVar7;\n                    iVar5 = fcn.00404810();\n                    iVar5 = iVar5 + iVar7;\n                    iVar3 = fcn.00404810();\n                    arg_8h = iVar3 + 1 + iVar7;\n                    fcn.0046667c(arg_8h, iVar5, iVar4, uVar2, uVar1);\n                    iVar7 = iVar7 + 3;\n                }\n                iVar4 = fcn.004045c0(arg_8h);\n                iVar4 = iVar4 - iVar6;\n                if (0 < iVar4) {\n                    if (iVar4 == 1) {\n                        uVar9 = 0;\n                        uVar8 = 0;\n                        iVar6 = fcn.00404810();\n                        iVar6 = iVar6 + -1 + iVar7;\n                        iVar4 = fcn.00404810();\n                        iVar4 = iVar4 + iVar7;\n                        iVar5 = fcn.00404810();\n                        fcn.0046667c(iVar5 + 1 + iVar7, iVar4, iVar6, uVar8, uVar9);\n                    }\n                    else if (iVar4 == 2) {\n                        uVar9 = 0;\n                        uVar8 = 0;\n                        iVar6 = fcn.00404810();\n                        iVar6 = iVar6 + -1 + iVar7;\n                        iVar4 = fcn.00404810();\n                        iVar4 = iVar4 + iVar7;\n                        iVar5 = fcn.00404810();\n                        fcn.0046667c(iVar5 + 1 + iVar7, iVar4, iVar6, uVar8, uVar9);\n                    }\n                    else if (iVar4 == 3) {\n                        uVar1 = var_4h & 0xffffff00 | *(var_4h + 1 + iVar6);\n                        uVar8 = 0;\n                        iVar6 = fcn.00404810();\n                        iVar6 = iVar6 + -1 + iVar7;\n                        iVar4 = fcn.00404810();\n                        iVar4 = iVar4 + iVar7;\n                        iVar5 = fcn.00404810();\n                        fcn.0046667c(iVar5 + 1 + iVar7, iVar4, iVar6, uVar8, uVar1);\n                    }\n                    else if (iVar4 == 4) {\n                        uVar1 = var_4h & 0xffffff00 | *(var_4h + 1 + iVar6);\n                        uVar2 = var_4h & 0xffffff00 | *(var_4h + 2 + iVar6);\n                        iVar6 = fcn.00404810();\n                        iVar6 = iVar6 + -1 + iVar7;\n                        iVar4 = fcn.00404810();\n                        iVar4 = iVar4 + iVar7;\n                        iVar5 = fcn.00404810();\n                        fcn.0046667c(iVar5 + 1 + iVar7, iVar4, iVar6, uVar2, uVar1);\n                    }\n                }\n                iVar6 = fcn.004045c0();\n                if (iVar6 == 0) {\n                    (**(*in_EAX[0x23] + 0x38))();\n                    break;\n                }\n                puVar10 = &var_14h;\n                fcn.00404818();\n                fcn.00463f7c();\n            }\n            in_EAX[0x14] = 0;\n        }\n    }\n    *in_FS_OFFSET = puVar10;\n    fcn.00404308();\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 1358
    },
    "00468d1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00468d1c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack40 = 0x468ec5;\n    piStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    *(in_EAX + 0x5e) = 1;\n    fcn.00464074();\n    in_EAX[0x14] = in_EAX[0x13];\n    if (in_EAX[0x13] != 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    if (in_EAX[0x14] != 0) {\n        fcn.00468ee0();\n        (**(*in_EAX + 0x50))();\n    }\n    iVar2 = fcn.004045c0();\n    if (iVar2 != 0) {\n        cVar1 = *(in_EAX[0x20] + -1 + iVar2);\n        if ((cVar1 == '\\t') || (cVar1 == ' ')) {\n            fcn.00468ee0(&fcn.00468d1c::var_8h);\n            fcn.00404818();\n            fcn.004045c8();\n            iVar3 = fcn.00404810();\n            *(iVar3 + -1 + iVar2) = 0x3d;\n        }\n        while (iVar2 = fcn.004045c0(),  0x4b < iVar2) {\n            fcn.00404818(&fcn.00468d1c::var_10h);\n            fcn.004045c8();\n            fcn.00463f7c();\n            piStack44 = in_EAX + 0x20;\n            fcn.004045c0();\n            fcn.00404818();\n        }\n        fcn.00463f7c();\n    }\n    fcn.00464074();\n    in_EAX[0x14] = 0;\n    *in_FS_OFFSET = piStack44;\n    puStack36 = 0x468ecc;\n    uStack40 = 0x468ec4;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 603
    },
    "00469010": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00469010(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x469162;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uVar3 = 1;\n    fcn.00404308();\n    do {\n        if (*(in_EAX + 0x50) <= uVar3 && uVar3 != *(in_EAX + 0x50)) {\n            fcn.00463f7c();\n            *(in_EAX + 0x50) = 0;\n            *in_FS_OFFSET = uStack44;\n            puStack36 = 0x469169;\n            uStack40 = 0x469161;\n            fcn.0040432c();\n            return;\n        }\n        cVar1 = *(*(in_EAX + 0x54) + -1 + uVar3);\n        if (*(in_EAX + 0x84) == '\\0') {\n            if (cVar1 == '=') {\n                *(in_EAX + 0x84) = *(in_EAX + 0x84) + '\\x01';\n            }\n            else {\n                fcn.004044e8();\n                fcn.004045c8();\n            }\n        }\n        else {\n            iVar2 = fcn.00404810();\n            *(iVar2 + -1 + *(in_EAX + 0x84)) = cVar1;\n            *(in_EAX + 0x84) = *(in_EAX + 0x84) + '\\x01';\n            if (2 < *(in_EAX + 0x84)) {\n                cVar1 = fcn.00468ff8();\n                if (cVar1 == '\\0') {\ncode_r0x004690d1:\n                    if ((**(in_EAX + 0x80) != '\\r') || (*(*(in_EAX + 0x80) + 1) != '\\n')) {\n                        fcn.00404680(*(in_EAX + 0x80), 0x469184, 0);\n                    }\n                }\n                else {\n                    cVar1 = fcn.00468ff8();\n                    if (cVar1 == '\\0') goto code_r0x004690d1;\n                    fcn.0040460c();\n                    fcn.004088bc();\n                    fcn.004044e8();\n                    fcn.004045c8();\n                }\n                *(in_EAX + 0x84) = 0;\n            }\n        }\n        uVar3 = uVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 657
    },
    "00469814": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00469814(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *in_EDX;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t *in_FS_OFFSET;\n    uint *puStack136;\n    uint uStack132;\n    uchar *puStack128;\n    uint var_6ch;\n    uint var_68h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    char var_1ah;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint8_t *var_8h;\n    int32_t var_4h;\n    \n    puStack128 = &stack0xfffffffc;\n    var_6ch = 0;\n    var_48h = 0;\n    var_44h = 0;\n    puVar6 = &fcn.00469814::var_40h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *in_ECX;\n        in_ECX = in_ECX + 1;\n        puVar6 = puVar6 + 1;\n    }\n    uStack132 = 0x469a1a;\n    puStack136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff78;\n    var_ch = 1;\n    iVar5 = 1;\n    var_10h = 1;\n    iVar3 = 0;\n    var_19h._0_1_ = 0x20;\n    var_1ah = '\\0';\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    var_14h = fcn.004045c0();\n    *NULL = fcn.004045c0();\n    fcn.00404308();\n    if (0 < var_14h) {\n        do {\n            uVar1 = *(var_4h + -1 + iVar5);\n            if ((*(*0x47c2a8 + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n                if (uVar1 == *var_8h) {\n                    if (var_19h == 0x20) {\n                        puStack136 = &fcn.00469814::var_44h;\n                        fcn.00404818();\n                        var_1ah = fcn.004085a4();\n                        if (var_1ah != '\\0') {\n                            iVar5 = iVar5 + stack0xffffffe4 + -1;\n                            iVar3 = iVar5;\n                        }\n                    }\n                }\n                else if ((*(&fcn.00469814::var_40h + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n                    if (uVar1 == 0x22) {\n                        if (var_19h == 0x22) {\n                            var_19h._0_1_ = 0x20;\n                        }\n                        else if (var_19h == 0x20) {\n                            var_19h._0_1_ = uVar1;\n                        }\n                    }\n                }\n                else if (var_19h == 0x20) {\n                    iVar3 = iVar5;\n                }\n            }\n            else {\n                iVar5 = iVar5 + 1;\n                var_ch = var_ch + 1;\n            }\n            iVar5 = iVar5 + 1;\n            var_ch = var_ch + 1;\n            if ((var_19h != 0x22) && ((var_1ah != '\\0' || ((arg_ch < var_ch && (var_10h < iVar3)))))) {\n                var_ch = iVar5 - iVar3;\n                puStack136 = &fcn.00469814::var_48h;\n                fcn.00404818();\n                fcn.004045c8();\n                if (uVar1 != 0x22) {\n                    for (; iVar5 <= var_14h; iVar5 = iVar5 + 1) {\n                        puVar6 = &fcn.00469814::var_40h;\n                        puVar7 = &fcn.00469814::var_68h;\n                        for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                            *puVar7 = *puVar6;\n                            puVar6 = puVar6 + 1;\n                            puVar7 = puVar7 + 1;\n                        }\n                        fcn.0040307c();\n                        uVar2 = *(var_4h + -1 + iVar5);\n                        if ((*(&fcn.00469814::var_68h + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) break;\n                    }\n                }\n                if ((var_1ah == '\\0') && (iVar5 < var_14h)) {\n                    fcn.004045c8();\n                }\n                iVar3 = iVar3 + 1;\n                var_10h = iVar3;\n                var_1ah = '\\0';\n            }\n        } while (iVar5 <= var_14h);\n    }\n    fcn.00404818();\n    fcn.004045c8();\n    *in_FS_OFFSET = &fcn.00469814::var_6ch;\n    uStack132 = 0x469a21;\n    puStack136 = 0x469a0c;\n    fcn.00404308();\n    puStack136 = 0x469a19;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 1323
    },
    "00469c34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00469c34(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = NULL;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    puStack32 = 0x469c4c;\n    var_4h = param_2;\n    fcn.004047a8();\n    uStack36 = 0x469cfa;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x469c66;\n    puStack32 = &stack0xfffffffc;\n    var_8h = fcn.00403500();\n    uStack48 = 0x469cd0;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h = &fcn.00469c34::var_ch;\n    puStack44 = &stack0xfffffffc;\n    fcn.00469814(arg_8h, *(in_EAX + 0x38));\n    while (var_ch != 0) {\n        fcn.00451720(&fcn.00469c34::var_14h);\n        fcn.00408660();\n        (**(*var_8h + 0x38))();\n    }\n    *in_FS_OFFSET = arg_8h;\n    return;\n}\n",
        "token_count": 417
    },
    "00469d44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00469d44(uint param_1)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x469dd2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    (**(*in_EAX + 0xc))();\n    if (*(in_EAX + 0xd) == '\\0') {\n        fcn.004083f4();\n        fcn.0040435c();\n    }\n    fcn.00408660();\n    (***0x47bdcc)();\n    fcn.00404818();\n    *in_FS_OFFSET = param_1;\n    uStack36 = 0x469dd9;\n    uStack40 = 0x469dd1;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 238
    },
    "00469e04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __fastcall fcn.00469e04(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    char *var_24h;\n    uchar *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_20h = &stack0xfffffffc;\n    var_10h = 4;\n    do {\n        var_8h = 0;\n        var_10h = var_10h + -1;\n    } while (var_10h != 0);\n    var_24h = 0x469f66;\n    var_28h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00469e04::var_28h;\n    if (param_2 < 0) {\n        fcn.00404308();\n    }\n    else {\n        var_20h = &stack0xfffffffc;\n        var_18h = unaff_ESI;\n        var_4h = in_EAX;\n        fcn.00469d44();\n        (**(*var_4h + 0xc))(0);\n        fcn.004045c0(var_ch);\n        fcn.00404818();\n        if (*(var_4h + 0x35) != '\\0') {\n            for (param_2 = param_2 + 1; iVar2 = (**(*var_4h + 0x14))(),  param_2 < iVar2; param_2 = param_2 + 1) {\n                (**(*var_4h + 0xc))();\n                iVar2 = fcn.004045c0();\n                if (iVar2 < 1) break;\n                (**(*var_4h + 0xc))();\n                if ((*var_24h != '\\t') && (*var_24h != ' ')) break;\n                iVar2 = fcn.004045c0();\n                cVar1 = *(_pe_dos_header + -1 + iVar2);\n                if ((cVar1 == '\\t') || (cVar1 == ' ')) {\n                    (**(*var_4h + 0xc))();\n                    fcn.0040862c();\n                    fcn.004045c8();\n                }\n                else {\n                    (**(*var_4h + 0xc))(0x469f7c, _pe_dos_header);\n                    var_28h = 0x469ed7;\n                    fcn.0040862c();\n                    var_28h = var_18h;\n                    fcn.00404680();\n                }\n            }\n        }\n    }\n    fcn.0040862c();\n    fcn.0040435c();\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x469f6d;\n    var_24h = 0x469f65;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 754
    },
    "00469ffc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00469ffc(int32_t param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x46a0c7;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = fcn.00469f80();\n    if (param_1 == 0) {\n        if (-1 < iVar1) {\n            if (*(in_EAX + 0x36) != '\\0') {\n                fcn.00469ab0();\n            }\n            (**(*in_EAX + 0x48))();\n        }\n    }\n    else {\n        if (iVar1 < 0) {\n            (**(*in_EAX + 0x38))();\n        }\n        if (*(in_EAX + 0x36) == '\\0') {\n            fcn.00404680(param_1, in_EAX[0xc], param_2);\n            (**(*in_EAX + 0x20))();\n        }\n        else {\n            fcn.00469ab0();\n            iStack40 = param_1;\n            fcn.00404680();\n            fcn.00469b50();\n        }\n    }\n    *in_FS_OFFSET = iStack40;\n    puStack32 = 0x46a0ce;\n    uStack36 = 0x46a0c6;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 388
    },
    "0046a6ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046a6ec(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_2h;\n    \n    var_8h = 0;\n    puStack60 = 0x46a70d;\n    fcn.004047a8();\n    uStack64 = 0x46a857;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    if (*(in_EAX + 0x10) == 0) {\n        puStack60 = &fcn.0046a6ec::var_2h + 2;\n        fcn.00409330(arg_8h);\n    }\n    else {\n        bVar2 = false;\n        puStack60 = &fcn.0046a6ec::var_2h + 2;\n        uVar3 = fcn.004045c0();\n        if (0 < uVar3) {\n            iVar4 = 1;\n            uVar6 = uVar3;\n            do {\n                uVar1 = *((*(in_EAX + 0x10) - 1) + iVar4);\n                uVar3 = *(in_EAX + 0x10) & 0xffffff00;\n                if ((uVar1 < 0x20) || (0x7e < uVar1)) {\n                    bVar2 = true;\n                    break;\n                }\n                iVar4 = iVar4 + 1;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        if (bVar2) {\n            fcn.0046af98(&fcn.0046a6ec::var_8h, arg_ch, uVar3 & 0xffffff00 | var_2h);\n        }\n        else {\n            fcn.004043a0();\n            iVar4 = fcn.004045c0();\n            if (0 < iVar4) {\n                iVar5 = 1;\n                do {\n                    if ((*(*(in_EAX + 0x10) + -1 + iVar5) == '\\\\') || (*(*(in_EAX + 0x10) + -1 + iVar5) == '\\\"')) {\n                        fcn.004045c8();\n                    }\n                    fcn.004044e8();\n                    fcn.004045c8();\n                    iVar5 = iVar5 + 1;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            fcn.004045c8();\n        }\n        fcn.00409330(arg_8h);\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack64 = 0x46a85e;\n    uStack68 = 0x46a846;\n    fcn.00404308();\n    uStack68 = 0x46a84e;\n    fcn.00404308();\n    uStack68 = 0x46a856;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 812
    },
    "0046a960": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046a960(uint param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint unaff_EDI;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uchar *var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_10h [3];\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    *0x4 = 4;\n    do {\n        *0x4 = *0x4 + -1;\n    } while (*0x4 != 0);\n    var_20h = 0x46ab75;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046a960::var_24h;\n    var_18h = unaff_EDI;\n    _var_10h = unaff_EBX;\n    var_4h = param_2;\n    fcn.00404308();\n    _var_10h = _var_10h & 0xffffff;\n    *NULL = fcn.004045c0();\n    iVar5 = 1;\n    if (0 < *NULL) {\n        do {\n            uVar1 = *(in_EAX + -1 + iVar5);\n            if (uVar1 < 0x80) {\n                if (var_dh != '\\0') {\n                    fcn.004045c8();\n                    _var_10h = _var_10h & 0xffffff;\n                }\n                fcn.004044e8();\n                fcn.004045c8();\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                cVar2 = *(uVar1 + 0x46ff18);\n                if (cVar2 == '\\0') {\n                    iVar5 = iVar5 + 1;\n                }\n                else if (cVar2 == '\\x01') {\n                    if (var_dh == '\\0') {\n                        fcn.004045c8();\n                        _var_10h = CONCAT13(1, var_10h);\n                    }\n                    uVar4 = _var_10h & 0xffff0000;\n                    _var_10h = uVar4 | *(*(in_EAX + -1 + iVar5) * 2 + 0x46fd56);\n                    if ((iVar5 < stack0xfffffff0) && ((*(in_EAX + iVar5) & 0xfe) == 0xde)) {\n                        uVar3 = *(*(in_EAX + -1 + iVar5) * 2 + 0x46fdd6);\n                        if (*(in_EAX + iVar5) == -0x22) {\n                            if (uVar3 != 0) {\n                                _var_10h = uVar4 | uVar3;\n                                iVar5 = iVar5 + 1;\n                            }\n                        }\n                        else if (((*(in_EAX + iVar5) == -0x21) && (0x254f < uVar3)) && (uVar3 < 0x255d)) {\n                            _var_10h = uVar4 | uVar3 + 1;\n                            iVar5 = iVar5 + 1;\n                        }\n                    }\n                    fcn.004044e8(var_8h);\n                    fcn.004044e8(var_18h);\n                    var_24h = var_1ch;\n                    fcn.00404680();\n                    iVar5 = iVar5 + 1;\n                }\n                else if (cVar2 == '\\x02') {\n                    iVar5 = iVar5 + 2;\n                }\n                else {\n                    if (iVar5 < stack0xfffffff0) {\n                        uVar3 = *(*(in_EAX + iVar5) * 2 + 0x470018);\n                        uVar4 = _var_10h & 0xffff0000;\n                        _var_10h = uVar4 | uVar3;\n                        if (uVar3 != 0) {\n                            var_dh._0_1_ = uVar4 >> 0x18;\n                            if (var_dh == '\\0') {\n                                fcn.004045c8();\n                                _var_10h = CONCAT13(1, var_10h);\n                            }\n                            fcn.004044e8(var_8h);\n                            fcn.004044e8(var_20h);\n                            fcn.00404680();\n                        }\n                    }\n                    iVar5 = iVar5 + 2;\n                }\n            }\n        } while (iVar5 <= stack0xfffffff0);\n    }\n    if (var_dh != '\\0') {\n        fcn.004045c8();\n    }\n    fcn.0040435c();\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x46ab7c;\n    var_20h = 0x46ab6c;\n    fcn.0040432c();\n    var_20h = 0x46ab74;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 1228
    },
    "0046af98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046af98(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_EDX;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    uint *puVar5;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_8ch;\n    uint var_6ch;\n    int32_t var_4ch;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_18h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_b8h = 0;\n    var_b4h = 0;\n    var_b0h = 0;\n    var_18h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_3ch = 0;\n    puVar5 = &fcn.0046af98::var_6ch;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *in_EDX;\n        in_EDX = in_EDX + 1;\n        puVar5 = puVar5 + 1;\n    }\n    puStack204 = 0x46afdf;\n    fcn.004047a8();\n    uStack208 = 0x46b202;\n    iStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    if (arg_10h == '\\x02') {\n        puStack204 = &stack0xfffffffc;\n        fcn.0046a960();\n    }\n    else {\n        puStack204 = &stack0xfffffffc;\n        fcn.004043a0();\n    }\n    puVar5 = 0x46b214;\n    puVar4 = &fcn.0046af98::var_ach;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.0040307c();\n    puVar5 = &fcn.0046af98::var_ach;\n    puVar4 = &fcn.0046af98::var_8ch;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    puVar5 = &fcn.0046af98::var_8ch;\n    puVar4 = &fcn.0046af98::var_ach;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.0040307c();\n    puVar5 = &fcn.0046af98::var_ach;\n    puVar4 = &fcn.0046af98::var_38h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.004044e8(0x46b268, arg_ch, 0x46b25c);\n    puVar5 = 0x46b268;\n    fcn.00404680(0x46b268, var_b0h);\n    fcn.004043a0();\n    var_ch = fcn.004045c0();\n    iVar3 = 1;\n    fcn.00404308();\n    stack0xffffffec = 0;\n    if (0 < var_ch) {\n        do {\n            while ((iVar3 <= var_ch &&\n                   (uVar2 = *(var_18h + -1 + iVar3),  (*((uVar2 >> 3) + 0x470258) >> (uVar2 & 7) & 1) != 0))) {\n                iVar3 = iVar3 + 1;\n            }\n            var_4ch = iVar3;\n            bVar1 = false;\n            while ((iVar3 <= var_ch &&\n                   (uVar2 = *(var_18h + -1 + iVar3),  (*((uVar2 >> 3) + 0x470258) >> (uVar2 & 7) & 1) == 0))) {\n                uVar2 = *(var_18h + -1 + iVar3);\n                if ((*(&fcn.0046af98::var_8ch + (uVar2 >> 3)) >> (uVar2 & 7) & 1) != 0) {\n                    bVar1 = true;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            if (bVar1) {\n                if (stack0xffffffec == 0) {\n                    puVar5 = &fcn.0046af98::var_b4h;\n                    fcn.00404818();\n                    fcn.004045c8();\n                    stack0xffffffec = var_4ch;\n                }\n            }\n            else {\n                if (stack0xffffffec != 0) {\n                    fcn.0046ab9c(&stack0xfffffffc);\n                }\n                puVar5 = &fcn.0046af98::var_b8h;\n                fcn.00404818();\n                fcn.004045c8();\n            }\n        } while (iVar3 <= var_ch);\n    }\n    if (stack0xffffffec != 0) {\n        fcn.0046ab9c(&stack0xfffffffc);\n    }\n    fcn.0040435c();\n    *in_FS_OFFSET = puVar5;\n    fcn.0040432c(0x46b209);\n    fcn.00404308();\n    fcn.00404308();\n    fcn.0040432c();\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 1458
    },
    "0046c4a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0046c4a8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_DL = extraout_DL;\n    }\n    fcn.0046bcb8();\n    piVar1 = fcn.00403500();\n    *(in_EAX + 0x40) = piVar1;\n    if (arg_8h != 0) {\n        (**(*piVar1 + 8))();\n    }\n    if (in_DL != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 223
    },
    "0046c760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0046c760(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint var_28h;\n    uint var_24h;\n    uchar *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar3 = 5;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_14h = 0x46cc0e;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046c760::var_18h;\n    var_1ch = &fcn.0046c760::var_4h;\n    var_20h = 0x46c794;\n    fcn.00451720(var_1ch);\n    var_20h = 0x46c79c;\n    uVar2 = fcn.004088bc();\n    // switch table (9 cases) at 0x46c7cd\n    switch(uVar2) {\n    case 0:\n        if (*(arg_8h + -5) == '\\0') {\n            if (1 < *(arg_8h + -0xc)) {\n                var_20h = 0x46c81e;\n                iVar3 = fcn.004045c0();\n                if (0 < iVar3) {\n                    iVar3 = *(*(arg_8h + -0x10) + 8);\n                    var_20h = 0x46c838;\n                    cVar1 = fcn.004036bc();\n                    if (cVar1 == '\\0') {\n                        var_20h = 0x46c85a;\n                        iVar3 = fcn.004045c0();\n                        if ((0 < iVar3) && (*(arg_8h + -0x14) != 0)) {\n                            var_20h = 0x46c872;\n                            var_20h = fcn.004045c0();\n                            var_24h = 0x46c87e;\n                            fcn.00404810();\n                            var_20h = 0x46c88c;\n                            (**(**(arg_8h + -0x14) + 0xc))();\n                        }\n                    }\n                    else {\n                        var_20h = 0x46c84d;\n                        (**(**(iVar3 + 0x40) + 0x38))();\n                    }\n                }\n                *(arg_8h + -0x15) = 1;\n            }\n        }\n        else {\n            *(arg_8h + -5) = 0;\n        }\n        break;\n    case 5:\n        var_20h = 0x46ca69;\n        cVar1 = fcn.004036bc();\n        if (cVar1 != '\\0') {\n            var_20h = 0x46ca82;\n            fcn.004043a0();\n            *(arg_8h + -0x21) = *(*(*(arg_8h + -0x10) + 8) + 0x10);\n            var_20h = 0x46caa0;\n            uVar2 = fcn.00469a4c();\n            *(arg_8h + -0x28) = uVar2;\n            var_24h = 0x46cb3c;\n            var_28h = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.0046c760::var_28h;\n            var_20h = &stack0xfffffffc;\n            (**(**(arg_8h + -0x28) + 8))();\n            fcn.00403530();\n            uVar2 = 0;\n            iVar3 = fcn.0046c35c(0);\n            *(*(arg_8h + -0x10) + 8) = iVar3;\n            fcn.0040435c();\n            *(iVar3 + 0x10) = *(arg_8h + -0x21);\n            (**(**(iVar3 + 0x28) + 8))();\n            *in_FS_OFFSET = uVar2;\n            var_24h = 0x46cb43;\n            var_28h = 0x46cb3b;\n            fcn.00403530();\n            return;\n        }\n        var_20h = 0x46cb51;\n        fcn.0046a128();\n        var_20h = 0x46cb65;\n        fcn.0040435c();\n        var_20h = 0x46cb76;\n        iVar3 = fcn.004045c0();\n        if (iVar3 == 0) {\n            var_20h = 0x46cb82;\n            fcn.0045157c();\n            var_20h = 0x46cb96;\n            fcn.0040435c();\n            if (*(arg_8h + -0x14) != 0) {\n                var_20h = 0x46cbaa;\n                fcn.00403530();\n            }\n            var_20h = 0xffff;\n            var_24h = 0x46cbc7;\n            uVar2 = fcn.00418158(0xffff);\n            *(arg_8h + -0x14) = uVar2;\n        }\n        *(arg_8h + -0x15) = 1;\n        break;\n    case 0x15:\n        *(arg_8h + -0xc) = 2;\n        break;\n    case 0x16:\n        *(arg_8h + -0x16) = 0;\n        break;\n    case 0x17:\n        if (*(arg_8h + -0xc) < 2) break;\n        if (*(arg_8h + -0x16) == '\\0') {\n            var_20h = 0x46c8db;\n            fcn.00408430();\n            var_20h = 0x46c8e8;\n            iVar3 = fcn.0040bccc();\n            if (iVar3 == 0) {\n                var_20h = 0x46c8fa;\n                fcn.00408430();\n                var_20h = 0x46c907;\n                iVar3 = fcn.0040bccc();\n                if (iVar3 == 0) goto code_r0x0046c90b;\ncode_r0x0046c985:\n                var_20h = NULL;\n                var_24h = 0x46c99c;\n                uVar2 = fcn.0046c4a8(0);\n                *(*(arg_8h + -0x10) + 8) = uVar2;\n            }\n            else {\ncode_r0x0046c90b:\n                var_20h = 0x46c919;\n                fcn.00408430();\n                var_20h = 0x46c926;\n                iVar3 = fcn.0040bccc();\n                if (iVar3 != 0) goto code_r0x0046c985;\n                var_20h = 0x46c938;\n                fcn.00408430();\n                var_20h = 0x46c945;\n                iVar3 = fcn.0040bccc();\n                if (iVar3 != 0) goto code_r0x0046c985;\n                var_20h = 0x46c957;\n                fcn.00408430();\n                var_20h = 0x46c964;\n                iVar3 = fcn.0040bccc();\n                uVar4 = iVar3 == 0;\n                if (!uVar4) goto code_r0x0046c985;\n                var_20h = 0x46c976;\n                fcn.00408430();\n                var_20h = 0x46c983;\n                fcn.00404704();\n                if (uVar4) goto code_r0x0046c985;\n                var_20h = NULL;\n                var_24h = 0x46c9be;\n                uVar2 = fcn.0046c35c(0);\n                *(*(arg_8h + -0x10) + 8) = uVar2;\n            }\n            *(arg_8h + -0x16) = 1;\n        }\n        iVar3 = *(*(arg_8h + -0x10) + 8);\n        var_24h = 0x46c9e5;\n        fcn.0040435c();\n        *(iVar3 + 0x10) = 1;\n        var_24h = 0x46c9f7;\n        (**(**(iVar3 + 0x28) + 0x38))();\n        *(arg_8h + -0x15) = 1;\n        *(arg_8h + -5) = 1;\n        break;\n    case 0x18:\n        *(arg_8h + -5) = 1;\n        *(arg_8h + -0x15) = 0;\n        *(arg_8h + -0x16) = 0;\n        break;\n    case 0x19:\n        *(*(*(arg_8h + -0x10) + 8) + 0x11) = 1;\n        *(arg_8h + -5) = 1;\n        *(arg_8h + -0x15) = 1;\n        break;\n    case 0x1a:\n        *(arg_8h + -0xc) = 1;\n    }\n    var_24h = 0x46cbe5;\n    (**(**(*(arg_8h + -0x10) + 4) + 0x40))();\n    var_24h = 0x46cbf3;\n    fcn.004043a0();\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x46cc15;\n    var_1ch = 0x46cc0d;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 2348
    },
    "0046cc98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0046cc98(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_68h;\n    uchar *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t *var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uchar *var_30h;\n    int32_t var_2ch;\n    uint uStackY44;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    iVar3 = 0xd;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_1ch = 0x46d020;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046cc98::var_20h;\n    if (*0x46d08c != '\\0') {\n        iVar3 = 0;\n        uStackY44 = 0x46ccdc;\n        fcn.004559bc(0);\n        *in_FS_OFFSET = iVar3;\n        var_1ch = 0x46d027;\n        var_20h = 0x46d007;\n        fcn.0040432c();\n        var_20h = 0x46d00f;\n        fcn.00404308();\n        var_20h = 0x46d017;\n        fcn.00404308();\n        var_20h = 0x46d01f;\n        fcn.00404308();\n        return;\n    }\n    var_14h = 0;\n    var_ch = 0;\n    puStack28 = &stack0xfffffffc & 0xffff;\n    var_10h = unaff_ESI;\n    fcn.00416220();\n    var_38h = fcn.00403500();\n    uStackY44 = 0x46cfe6;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046cc98::var_2ch;\n    var_30h = 0x46cd27;\n    piVar1 = fcn.00403500();\n    var_30h = 0x46cd32;\n    fcn.0046bdb0();\n    var_34h = 0x46ce03;\n    var_38h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046cc98::var_38h;\n    var_30h = &stack0xfffffffc;\n    (**(*piVar1 + 0x40))();\n    iVar3 = (**(*0x46cd4e + 0x14))();\n    if ((iVar3 != 0) && (var_44h = *(var_38h + 8),  -1 < var_44h + -1)) {\n        var_34h = 0;\n        do {\n            var_3ch = 0x46cd7f;\n            var_10h = fcn.004152c8();\n            iVar3 = *(var_10h + 4);\n            *(iVar3 + 0x5c) = 1;\n            *(iVar3 + 0x5d) = 1;\n            iVar4 = 0;\n            while( true ) {\n                iVar2 = (**(*var_3ch + 0x14))();\n                if (iVar2 <= iVar4) break;\n                (**(*0x46cdd1 + 0xc))();\n                var_30h = var_50h;\n                var_34h = 0x46d044;\n                var_38h = 0x46d050;\n                fcn.00404680();\n                var_3ch = 0x46cdc8;\n                fcn.00463d38();\n                iVar4 = iVar4 + 1;\n            }\n            *(iVar3 + 0x5c) = 0;\n            *(iVar3 + 0x5d) = 0;\n            var_34h = var_34h + 1;\n            var_44h = var_44h + -1;\n        } while (var_44h != 0);\n    }\n    *in_FS_OFFSET = var_38h;\n    var_30h = 0x46ce0a;\n    var_34h = 0x46cdfa;\n    fcn.00403530();\n    var_34h = 0x46ce02;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 1147
    },
    "0046d09c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046d09c(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x46d21e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    *arg_8h = 0;\n    *in_ECX = 0;\n    *arg_ch = 0;\n    uStack48 = 0x46d0dd;\n    iVar2 = fcn.004162c4();\n    if (-1 < iVar2 + -1) {\n        do {\n            uStack48 = 0x46d0f1;\n            fcn.0046b6fc();\n            uStack48 = 0x46d0fc;\n            cVar1 = fcn.004036bc();\n            if (cVar1 == '\\0') {\n                uStack48 = 0x46d111;\n                fcn.0046b6fc();\n                uStack48 = 0x46d11c;\n                cVar1 = fcn.004036bc();\n                if (cVar1 != '\\0') {\n                    uStack48 = 0x46d12a;\n                    fcn.0046b6fc();\n                    uStack48 = 0x46d13a;\n                    fcn.00469de0();\n                    uStack48 = 0x46d142;\n                    iVar3 = fcn.004045c0();\n                    if (0 < iVar3) {\n                        *arg_8h = *arg_8h + 1;\n                    }\n                    *in_ECX = *in_ECX + 1;\n                }\n            }\n            else {\n                *arg_ch = *arg_ch + 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (*arg_8h < 1) {\n        if (*in_ECX < 1) {\n            if (0 < *arg_ch) {\n                uStack48 = 0x46d197;\n                fcn.0040435c();\n            }\n        }\n        else {\n            uStack48 = 0x46d180;\n            fcn.0040435c();\n        }\n    }\n    else {\n        uStack48 = 0x46d169;\n        fcn.0040435c();\n    }\n    uStack48 = 0x46d19f;\n    iVar2 = fcn.004045c0();\n    if (iVar2 == 0) {\n        uStack48 = 0x46d1ae;\n        fcn.0040435c();\n    }\n    else {\n        uStack48 = *(in_EDX + 0x40);\n        uStack52 = 0x46d350;\n        uStack56 = *(in_EDX + 0x38);\n        puStack60 = 0x46d1c8;\n        fcn.00404680();\n    }\n    puStack60 = 0x46d1cf;\n    fcn.0046bdb0();\n    uStack64 = 0x46d201;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack60 = &stack0xfffffffc;\n    fcn.00456b64();\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x46d208;\n    uStack64 = 0x46d200;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 903
    },
    "0046d670": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0046d670(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uchar uVar6;\n    ulong uVar7;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint *puStack60;\n    uint var_34h;\n    uint var_30h;\n    uchar *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar4 = 0xd;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0x46da54;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046d670::var_1ch;\n    var_20h = 0x46d69f;\n    fcn.00404944();\n    var_20h = 0x46d6aa;\n    fcn.0046c1cc();\n    var_20h = 0x46d6b2;\n    iVar4 = fcn.004045c0();\n    if (iVar4 == 0) {\n        var_20h = 0x46d6c3;\n        fcn.0046c238();\n    }\n    var_20h = 0x46d6ce;\n    fcn.0046c3a4();\n    var_20h = 0x46d6d6;\n    iVar4 = fcn.004045c0();\n    uVar6 = iVar4 == 0;\n    if (uVar6) {\n        var_20h = 0x46d6e7;\n        fcn.0046c3d8();\n    }\n    var_20h = 0x46d6f2;\n    fcn.0046c208();\n    var_20h = 0x46d6fd;\n    fcn.0046c1cc();\n    var_20h = NULL;\n    var_24h = 0x46d711;\n    iVar4 = fcn.00464484(0);\n    var_24h = 0x46d71e;\n    fcn.0046c1cc();\n    var_24h = 0x46d72b;\n    fcn.00404704();\n    if (uVar6) {\n        var_24h = 0x46d738;\n        fcn.0046c208();\n        var_24h = 0x46d740;\n        iVar3 = fcn.004045c0();\n        if (iVar3 == 0) {\n            var_24h = 0x46d751;\n            fcn.0046c26c();\n        }\n    }\n    var_24h = 0x46d75b;\n    var_20h = (**(*(iVar4 + 0x18) + 0x2c))();\n    *(var_20h + 0x5d) = 1;\n    *(var_20h + 0xc) = 1;\n    var_24h = 0x40;\n    var_28h = 0x46d780;\n    var_8h = fcn.00418158(0x40);\n    var_28h = 0x46d78b;\n    fcn.0045157c();\n    var_28h = 0x46d799;\n    fcn.0040435c();\n    var_28h = 0xffff;\n    var_2ch = 0x46d7b0;\n    var_ch = fcn.00418158(0xffff);\n    uVar5 = 0;\n    var_30h = 0x46da25;\n    var_34h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046d670::var_34h;\n    var_2ch = &stack0xfffffffc;\n    do {\n        puStack60 = 0x46d878;\n        uVar7 = fcn.00417c7c();\n        iVar4 = uVar7 >> 0x20;\n        var_3ch = uVar7;\n        iVar3 = uVar5 >> 0x1f;\n        if (iVar3 == iVar4) {\n            if (var_3ch <= uVar5) goto code_r0x0046d898;\n        }\n        else if (iVar4 <= iVar3) {\ncode_r0x0046d898:\n            puStack60 = 0x46dac0;\n            var_3ch = 0x46d8a8;\n            fcn.0046c208();\n            var_40h = 0x46dab4;\n            fcn.00404680();\n            (**(**(arg_8h + -4) + 0x84))();\n            fcn.00408b24(0x46dad8);\n            fcn.00404680(0x46daf0, var_50h);\n            (**(**(arg_8h + -4) + 0x84))();\n            fcn.0046c1cc();\n            fcn.0040460c();\n            (**(**(arg_8h + -4) + 0x84))();\n            fcn.0046c3a4(0x46db20);\n            fcn.00404680(0x46dab4, var_60h);\n            (**(**(arg_8h + -4) + 0x84))();\n            fcn.00408b24(0x46db40);\n            fcn.00404680(0x46daf0, var_68h);\n            (**(**(arg_8h + -4) + 0x84))();\n            fcn.00456b64();\n            (**(**(arg_8h + -4) + 0x84))();\n            fcn.00417c68(0, 0);\n            (**(**(arg_8h + -4) + 0x88))();\n            (**(**(arg_8h + -4) + 0x84))();\n            *in_FS_OFFSET = 0;\n            fcn.00403530(0x46da2c);\n            fcn.00403530();\n            fcn.00408a8c();\n            fcn.00403530();\n            return;\n        }\n        puStack60 = 0x46d7d0;\n        uVar7 = fcn.00417c7c();\n        var_3ch = uVar7 - uVar5;\n        uVar1 = uVar7 < uVar5;\n        uVar2 = (uVar7 >> 0x20) - iVar3;\n        if (uVar2 == uVar1) {\n            if (var_3ch < 0x3a) goto code_r0x0046d7f3;\ncode_r0x0046d7ec:\n            iVar4 = 0x39;\n        }\n        else {\n            if (0 < uVar2 - uVar1) goto code_r0x0046d7ec;\ncode_r0x0046d7f3:\n            puStack60 = 0x46d7fb;\n            iVar4 = fcn.00417c7c();\n            iVar4 = iVar4 - uVar5;\n        }\n        uVar5 = uVar5 + iVar4;\n        puStack60 = 0x46d809;\n        fcn.00404810();\n        puStack60 = 0x46d815;\n        fcn.00417e74();\n        puStack60 = &fcn.0046d670::var_3ch;\n        var_3ch = 0x46d828;\n        fcn.00404818();\n        var_3ch = 0x46d836;\n        fcn.00463d38();\n        var_3ch = 0x46d841;\n        (**(*var_20h + 0x38))();\n        var_3ch = &fcn.0046d670::var_40h;\n        var_40h = 0x46d854;\n        fcn.00451720(var_3ch);\n        var_40h = 0x46d85c;\n        var_40h = fcn.004045c0();\n        fcn.00404810();\n        var_40h = 0x46d870;\n        (**(*var_ch + 0xc))();\n    } while( true );\n}\n",
        "token_count": 2287
    },
    "0046db54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Removing unreachable block (ram,0x0046dedb)\n// WARNING: Removing unreachable block (ram,0x0046def1)\n// WARNING: Removing unreachable block (ram,0x0046def4)\n// WARNING: Removing unreachable block (ram,0x0046df29)\n// WARNING: Removing unreachable block (ram,0x0046df59)\n// WARNING: Removing unreachable block (ram,0x0046df8a)\n// WARNING: Removing unreachable block (ram,0x0046dba6)\n// WARNING: Removing unreachable block (ram,0x0046dbd8)\n// WARNING: Removing unreachable block (ram,0x0046dbc9)\n// WARNING: Removing unreachable block (ram,0x0046dbe5)\n// WARNING: Removing unreachable block (ram,0x0046dcd3)\n// WARNING: Removing unreachable block (ram,0x0046dc0a)\n// WARNING: Removing unreachable block (ram,0x0046dc49)\n// WARNING: Removing unreachable block (ram,0x0046dc4c)\n// WARNING: Removing unreachable block (ram,0x0046dc68)\n// WARNING: Removing unreachable block (ram,0x0046dcbd)\n// WARNING: Removing unreachable block (ram,0x0046dcc1)\n// WARNING: Removing unreachable block (ram,0x0046dd0e)\n// WARNING: Removing unreachable block (ram,0x0046dd24)\n// WARNING: Removing unreachable block (ram,0x0046dd27)\n// WARNING: Removing unreachable block (ram,0x0046dd43)\n// WARNING: Removing unreachable block (ram,0x0046ddb3)\n// WARNING: Removing unreachable block (ram,0x0046ddbb)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046db54(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uchar *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uchar *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    var_20h = &stack0xfffffffc;\n    iVar2 = 0xc;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_24h = 0x46e06d;\n    var_28h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046db54::var_28h;\n    var_2ch = 0x46db92;\n    fcn.0046a620();\n    var_2ch = 0x46db9e;\n    (**(*in_EAX + 0x30))();\n    if (arg_ch < 2) {\n        var_2ch = NULL;\n        var_30h = 0x46deba;\n        fcn.004065fc();\n        var_24h = var_3ch;\n        var_20h = CONCAT31(var_20h._1_3_, 0xb);\n        var_30h = 0x46ded1;\n        fcn.00454808(var_2ch);\n        var_30h = 0x46df9a;\n        iVar2 = (**(**(in_EDX + 0x34) + 0x14))();\n        if (-1 < iVar2 + -1) {\n            uVar3 = true;\n            do {\n                var_38h = &fcn.0046db54::var_58h;\n                var_3ch = 0x46dfbc;\n                (**(**(in_EDX + 0x34) + 0xc))();\n                var_3ch = 0x46dfce;\n                fcn.00404818();\n                var_3ch = 0x46dfdb;\n                fcn.00404704();\n                if (uVar3) {\n                    var_3ch = 0x46dfed;\n                    (**(**(in_EDX + 0x34) + 0xc))();\n                    var_3ch = 0x46dffd;\n                    fcn.0040460c();\n                    var_3ch = 0x46e00d;\n                    (**(**(in_EDX + 0x34) + 0x20))();\n                }\n                var_3ch = 0x46e01d;\n                (**(**(in_EDX + 0x34) + 0xc))();\n                var_3ch = 0x46e02b;\n                (**(*in_EAX + 0x84))();\n                iVar2 = iVar2 + -1;\n                uVar3 = iVar2 == 0;\n            } while (!uVar3);\n        }\n    }\n    else {\n        var_2ch = 0x46ddff;\n        (**(*in_EAX + 0x84))();\n        var_2ch = 0x46de0c;\n        (**(*in_EAX + 0x84))();\n        var_2ch = 0x46de17;\n        iVar2 = fcn.004162c4();\n        if (-1 < iVar2 + -1) {\n            do {\n                var_2ch = 0x46de2e;\n                fcn.0046b6fc();\n                var_2ch = 0x46de39;\n                cVar1 = fcn.004036bc();\n                if (cVar1 != '\\0') {\n                    var_2ch = 0x46de4d;\n                    (**(*in_EAX + 0x84))();\n                    var_28h = 0;\n                    var_2ch = 0x46de5c;\n                    fcn.004065fc();\n                    var_24h = var_38h;\n                    var_20h = CONCAT31(var_20h._1_3_, 0xb);\n                    var_2ch = 0x46de73;\n                    fcn.00454808(var_28h);\n                    var_30h = 0x46de81;\n                    var_2ch = &stack0xfffffffc;\n                    fcn.0046b6fc();\n                    var_30h = 0x46de8c;\n                    fcn.004036e0();\n                    var_30h = 0x46de91;\n                    fcn.0046d354(var_2ch);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        var_2ch = 0x46dea6;\n        (**(*in_EAX + 0x84))();\n    }\n    var_38h = 0x46e03d;\n    (**(*in_EAX + 0x38))();\n    *in_FS_OFFSET = var_34h;\n    var_2ch = 0x46e074;\n    var_30h = 0x46e057;\n    fcn.0040432c();\n    var_30h = 0x46e064;\n    fcn.0040432c();\n    var_30h = 0x46e06c;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 1788
    },
    "004038f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004038f4(void)\n\n{\n    if (1 < *0x46f014) {\n        (**0x47d014)(0xeedfadf, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "0040394c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040394c(void)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBX;\n    uint uVar1;\n    uint auStack8 [2];\n    \n    if (1 < *0x46f014) {\n        auStack8[0] = *(unaff_EBX + 4);\n        uVar1 = 0;\n        (**0x47d014)(0xeedfae0, 0, 1, auStack8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 120
    },
    "00403960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00403960(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x46f014) {\n        uVar1 = 0;\n        (**0x47d014)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 88
    },
    "00403994": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403994(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x46f014) {\n        uStack16 = 0x4039a5;\n        uStack8 = param_2;\n        fcn.00403974();\n        (**0x47d014)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "004039bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004039bc(uint param_1, uint param_2)\n\n{\n    uint uStack4;\n    \n    if (1 < *0x46f014) {\n        uStack4 = param_2;\n        (**0x47d014)(0xeedfae2, 0, 1, &uStack4);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "004039d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004039d8(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = param_2;\n    uStack4 = in_EAX;\n    if (1 < *0x46f014) {\n        (**0x47d014)(0xeedfae3, 0, 2, &uStack8);\n    }\n    return CONCAT44(uStack8, uStack4);\n}\n",
        "token_count": 113
    },
    "00404944": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404944(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.00402768();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.004043cc();\n        if (*in_EAX != 0) {\n            fcn.004028e0();\n        }\n    }\n    fcn.00404308();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 192
    },
    "00404c54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c54(uint arg_8h)\n\n{\n    fcn.00404b64();\n    fcn.00404ae4();\n    return;\n}\n",
        "token_count": 40
    },
    "004057cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004057cc(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = *in_EAX;\n    iVar5 = *arg_8h;\n    if (iVar5 < 1) {\n        if (iVar5 < 0) {\n            fcn.00402884();\n        }\n        fcn.004057c4();\n    }\n    else {\n        var_10h = 0;\n        if (piVar3 != NULL) {\n            var_10h = piVar3[-1];\n            piVar3 = piVar3 + -2;\n        }\n        iVar4 = in_EDX + *(in_EDX + 1);\n        iVar1 = *(iVar4 + 2);\n        piVar2 = *(iVar4 + 6);\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if ((iVar5 * iVar1) / iVar5 != iVar1) {\n            fcn.00402884();\n        }\n        if ((piVar3 == NULL) || (*piVar3 == 1)) {\n            if ((iVar5 < var_10h) && (iVar4 != 0)) {\n                fcn.004057bc();\n            }\n            fcn.00402768();\n        }\n        else {\n            *piVar3 = *piVar3 + -1;\n            piVar3 = fcn.00402728();\n            var_14h = var_10h;\n            if (iVar5 < var_10h) {\n                var_14h = iVar5;\n            }\n            if (iVar4 == 0) {\n                fcn.004028e0();\n            }\n            else {\n                fcn.00402e14();\n                fcn.004057ac(var_14h);\n            }\n        }\n        *piVar3 = 1;\n        piVar3[1] = iVar5;\n        fcn.00402e14();\n        if ((1 < in_ECX) && (-1 < iVar5 + -1)) {\n            do {\n                fcn.004057cc(arg_8h + 1);\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *in_EAX = piVar3 + 2;\n    }\n    return;\n}\n",
        "token_count": 630
    },
    "0040ca84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040ca84(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    puStack20 = 0x40ca95;\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar2 != *(in_EAX + 0x24)) {\n        while( true ) {\n            puStack20 = 0x40cabd;\n            iVar2 = fcn.0040c53c();\n            if (0 < iVar2) break;\n            puStack20 = 0x40caaa;\n            fcn.0040c530();\n            puStack20 = 0x40cab2;\n            fcn.0040c8c0();\n        }\n        uVar1 = 1;\n    }\n    puStack20 = 0x40cad1;\n    fcn.0040c614();\n    uStack24 = 0x40cb1a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(var_8h + 0xc) = *(var_8h + 0xc) + 1;\n    if (1 < *(var_8h + 0xc) & uVar1) {\n        puStack20 = &stack0xfffffffc;\n        fcn.0040c530();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40cb21;\n    uStack24 = 0x40cb19;\n    fcn.0040c68c();\n    return;\n}\n",
        "token_count": 400
    },
    "00408a8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00408a8c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004047b8();\n    iVar2 = sub.kernel32.dll_DeleteFileA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 64
    },
    "00408e24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408e24(uint32_t param_1)\n\n{\n    char cVar1;\n    uchar auStack53 [33];\n    uchar *puStack20;\n    uchar uStack16;\n    \n    puStack20 = auStack53 + 1;\n    if (0x1f < param_1) {\n        param_1 = 0x1f;\n    }\n    cVar1 = fcn.0040ba0c();\n    if (cVar1 == '\\x01') {\n        param_1 = param_1 - 1;\n    }\n    fcn.00408bfc();\n    auStack53[param_1 + 1] = 0;\n    uStack16 = 6;\n    fcn.0040834c();\n    return;\n}\n",
        "token_count": 170
    },
    "00409ad8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuint32_t __cdecl fcn.00409ad8(double *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    double *pdVar4;\n    uint16_t in_CX;\n    int32_t iVar5;\n    uint16_t in_DX;\n    int32_t iVar6;\n    uint var_8h;\n    uint8_t var_3h;\n    uint var_2h;\n    \n    var_3h = 0;\n    uVar2 = fcn.00409a9c();\n    pdVar4 = (uVar2 & 0x7f) * 3;\n    iVar6 = (uVar2 & 0x7f) * 0x18;\n    if ((((in_AX != 0) && (in_AX < 10000)) && (in_DX != 0)) &&\n       (((in_DX < 0xd && (in_CX != 0)) &&\n        (puVar1 = iVar6 + 0x46f0be + in_DX * 2,  pdVar4 = in_DX,  in_CX < *puVar1 || in_CX == *puVar1)))) {\n        iVar3 = in_DX - 1;\n        if (0 < iVar3) {\n            iVar5 = 1;\n            do {\n                in_CX = in_CX + *(iVar6 + 0x46f0be + iVar5 * 2);\n                iVar5 = iVar5 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = in_AX - 1;\n        iVar6 = iVar3;\n        if (iVar3 < 0) {\n            iVar6 = in_AX + 2;\n        }\n        *arg_8h = ((iVar3 * 0x16d + (iVar6 >> 2)) - iVar3 / 100) + iVar3 / 400 + in_CX + -0xa955a;\n        var_3h = 1;\n        pdVar4 = arg_8h;\n    }\n    return pdVar4 & 0xffffff00 | var_3h;\n}\n",
        "token_count": 501
    },
    "00409f08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409f08(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY332;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack300 = 0x40a056;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    fcn.00404308();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    fcn.004043a0();\n    uVar1 = fcn.004047b8(&fcn.00409f08::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.00409f08::var_14h, uVar1);\n    uStackY332 = 0x409f8b;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        uStackY332 = 0x409fa5;\n        fcn.00404570();\n        if (in_EAX == 1) {\n            if (*0x47d7f4 == 4) {\n                if (*0x47d7f8 == 1) {\n                    fcn.004045c0();\n                    uStackY332 = 0x409ff1;\n                    iVar2 = fcn.0040ba24();\n                    if (iVar2 == 4) {\n                        fcn.0040bb34();\n                        fcn.004044f8();\n                        fcn.0040bb98();\n                        uStackY332 = 0x40a035;\n                        fcn.004043f8();\n                    }\n                }\n            }\n            else if (*0x47d7f4 == 0x11) {\n                fcn.0040bb98();\n                fcn.00404818();\n                uStackY332 = in_EDX;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY332;\n    fcn.00404308(0x40a05d);\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 614
    },
    "0040e108": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0040e108(void)\n\n{\n    int16_t *in_EAX;\n    int16_t iStack12;\n    \n    if (*in_EAX == 0xb) {\n        iStack12 = in_EAX[4];\n    }\n    else {\n        fcn.0040d3a4();\n        fcn.0040dd5c();\n    }\n    return iStack12 != 0;\n}\n",
        "token_count": 91
    },
    "0040ff08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040ff08(void)\n\n{\n    uint16_t *in_EAX;\n    uint16_t uVar1;\n    ulong uVar2;\n    \n    uVar1 = *in_EAX & 0xfff;\n    if ((*in_EAX & 0xfff) == 0) {\n        fcn.0040d39c();\n        return;\n    }\n    if (uVar1 != 1) {\n        if (uVar1 == 0xb) {\n            in_EAX[4] = -(in_EAX[4] == 0);\n            return;\n        }\n        if (uVar1 == 0x101) {\n            (**0x47d86c)();\n            fcn.0040fec4();\n            return;\n        }\n        if (uVar1 == 0x14) {\n            uVar2 = fcn.0040dfbc();\n            fcn.0040e780(~uVar2, ~(uVar2 >> 0x20));\n        }\n        else if ((uVar1 == 0x100) || (uVar1 < 0x15)) {\n            fcn.0040dee0();\n            fcn.0040e6d0();\n        }\n        else {\n            fcn.0040d39c();\n        }\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "004100bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004100bc(uint param_1, int16_t *param_2)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x410125;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar1 = &stack0xfffffffc;\n    if ((*param_2 != 0) && (puVar1 = &stack0xfffffffc,  *param_2 != 1)) {\n        fcn.004052e8();\n        puVar1 = puStack24;\n    }\n    puStack24 = puVar1;\n    fcn.004049a8();\n    fcn.00402c64();\n    fcn.00402890();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41012c;\n    uStack28 = 0x410124;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 260
    },
    "00410840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00410840(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint *arg_8h_00;\n    int32_t var_28h;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    iVar3 = 6;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    uStack40 = 0x410b45;\n    var_28h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00410840::var_28h;\n    fcn.00405a78();\n    fcn.00405a78();\n    fcn.004052b0();\n    arg_8h_00 = 0x410898;\n    iVar3 = fcn.00410818();\n    if (((1 < iVar3) && (iVar3 < 0x12)) || (iVar3 == 0x100)) {\n        iVar2 = fcn.00410678();\n        if (1 < iVar2) {\n            arg_8h_00 = 0x4108d5;\n            cVar1 = fcn.00410698();\n            if (cVar1 == '\\0') goto code_r0x00410b11;\n        }\n        fcn.004107c0();\n        fcn.00410700();\n        fcn.00405964();\n        arg_8h_00 = &fcn.00410840::var_38h;\n        fcn.004057a4();\n        fcn.00410188(arg_8h_00);\n        fcn.004052b8();\n        do {\n            fcn.004057a4();\n            iVar2 = fcn.0041061c();\n            if (iVar2 != 0) {\n                if (iVar3 < 0xb) {\n    // switch table (10 cases) at 0x410968\n                    switch(iVar3) {\n                    case 0:\n                    case 1:\ncode_r0x00410adf:\n                        fcn.004052b0();\n                        break;\n                    case 2:\n                        fcn.00405308();\n                        break;\n                    case 3:\n                        fcn.00405308();\n                        break;\n                    case 4:\n                        fcn.0040532c();\n                        break;\n                    case 5:\n                        fcn.0040532c();\n                        break;\n                    case 6:\n                        fcn.00405334();\n                        break;\n                    case 7:\n                        fcn.0040532c();\n                        break;\n                    case 8:\n                        fcn.00405344();\n                        break;\n                    case 9:\n                        fcn.00405354();\n                        break;\n                    default:\n                        fcn.00405308();\n                    }\n                }\n                else if (iVar3 < 0x12) {\n                    if (iVar3 == 0x11) {\n                        fcn.00405308();\n                    }\n                    else if (iVar3 == 0xb) {\n                        fcn.00405324();\n                    }\n                    else if (iVar3 == 0xc) {\n                        fcn.004052b8();\n                    }\n                    else if (iVar3 == 0xd) {\n                        fcn.0040534c();\n                    }\n                    else {\n                        if (iVar3 != 0x10) goto code_r0x00410adf;\n                        fcn.00405308();\n                    }\n                }\n                else if (iVar3 == 0x12) {\n                    fcn.00405308();\n                }\n                else if (iVar3 == 0x13) {\n                    fcn.00405308();\n                }\n                else {\n                    if (iVar3 != 0x100) goto code_r0x00410adf;\n                    fcn.0040533c();\n                }\n                arg_8h = fcn.004057a4();\n                var_38h = 0x410afe;\n                fcn.004105f4(arg_8h);\n            }\n            cVar1 = fcn.00410754();\n        } while (cVar1 != '\\0');\n    }\ncode_r0x00410b11:\n    *in_FS_OFFSET = arg_8h_00;\n    uStack40 = 0x410b4c;\n    var_28h = 0x410b31;\n    fcn.00404dfc();\n    var_28h = 0x410b44;\n    fcn.00404dfc();\n    return;\n}\n",
        "token_count": 1056
    },
    "004158d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004158d4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x4158e6;\n    fcn.0041595c();\n    uStack20 = 0x415950;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0x20) != '\\x01') {\n        puStack16 = &stack0xfffffffc;\n        iVar1 = fcn.00415324();\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x20) == '\\x02') {\n                fcn.00415254();\n            }\n            goto code_r0x0041593a;\n        }\n    }\n    fcn.0041516c();\ncode_r0x0041593a:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x415957;\n    uStack20 = 0x41594f;\n    fcn.004159c0();\n    return;\n}\n",
        "token_count": 285
    },
    "0041d9d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * fcn.0041d9d4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar auStack28 [20];\n    \n    uStack40 = *(in_EAX + 4);\n    puStack48 = 0x41d9e7;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 == **0x47c2c4) {\n        iVar1 = 0;\n        do {\n            if (iVar1 == 1) {\n                sub.user32.dll_PeekMessageA(&stack0xffffffd4, 0, 0, 0, 0);\n            }\n            uStack32 = 0;\n            uStack36 = 0x41da11;\n            sub.kernel32.dll_Sleep_1();\n            uStack36 = 0x41da16;\n            fcn.0041d480();\n            uStack36 = 0x40;\n            uStack40 = 0;\n            uStack44 = 0;\n            uStack52 = 1;\n            puStack48 = &stack0xffffffe4;\n            iVar1 = sub.user32.dll_MsgWaitForMultipleObjects();\n            fcn.0040c488();\n        } while (iVar1 != 0);\n    }\n    else {\n        puStack48 = 0xffffffff;\n        uStack52 = uStack40;\n        sub.kernel32.dll_WaitForSingleObject();\n    }\n    puVar2 = puStack48;\n    sub.kernel32.dll_GetExitCodeThread(puStack48, &stack0xffffffcc);\n    fcn.0041d80c();\n    return puVar2;\n}\n",
        "token_count": 403
    },
    "0041dd88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041dd88(char param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if ((param_1 == '\\x01') && (param_2 != 0)) {\n        fcn.0041dd6c();\n    }\n    if (*(in_EAX + 0x10) != 0) {\n        iVar3 = *(*(in_EAX + 0x10) + 8) + -1;\n        while (-1 < iVar3) {\n            piVar2 = fcn.004152c8();\n            (**(*piVar2 + 0x10))();\n            iVar3 = iVar3 + -1;\n            iVar1 = *(*(in_EAX + 0x10) + 8);\n            if (iVar1 <= iVar3) {\n                iVar3 = iVar1 + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "004207b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004207b4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iStack104;\n    char cStack100;\n    char cStack99;\n    char cStack98;\n    uchar uStack97;\n    uint8_t uStack93;\n    \n    piVar2 = 0x46f524;\n    piVar3 = param_2;\n    for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    if (in_EAX != 0) {\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            param_2[1] = in_EAX;\n            if (699 < iStack104) {\n                *(param_2 + 9) = *(param_2 + 9) | 1;\n            }\n            if (cStack100 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 2;\n            }\n            if (cStack99 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 4;\n            }\n            if (cStack98 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 8;\n            }\n            *(param_2 + 10) = uStack97;\n            fcn.00403020();\n            fcn.00402d04();\n            if ((uStack93 & 0xf) == 1) {\n                *(param_2 + 2) = 2;\n            }\n            else if ((uStack93 & 0xf) == 2) {\n                *(param_2 + 2) = 1;\n            }\n            else {\n                *(param_2 + 2) = 0;\n            }\n            *param_2 = in_EAX;\n        }\n    }\n    return;\n}\n",
        "token_count": 501
    },
    "00421208": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00421208(void)\n\n{\n    fcn.00421170();\n    fcn.0042118c();\n    return;\n}\n",
        "token_count": 32
    },
    "00421324": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00421324(void)\n\n{\n    fcn.00421170();\n    fcn.0042118c();\n    return;\n}\n",
        "token_count": 32
    },
    "0042491c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0042491c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 0x28) == 1) && (*(iVar1 + 0x2a) == 1)) {\n        return CONCAT31(iVar1 + 0x18 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 101
    },
    "00425460": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425460(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint *puStack108;\n    uint lpvObject;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 8)) {\n        puStack108 = 0x425480;\n        fcn.00424a10();\n        puStack108 = 0x42548f;\n        fcn.00402e14();\n        if (param_2 != 0) {\n            puStack108 = &fcn.00425460::lpvObject;\n            uStack112 = 0x54;\n            puStack120 = 0x42549f;\n            iStack116 = param_2;\n            sub.gdi32.dll_GetObjectA();\n        }\n        if (*(iVar1 + 4) == 1) {\n            var_4h = *(iVar1 + 0x10);\n            *(iVar1 + 0x10) = 0;\n        }\n        else if (*(iVar1 + 0x10) == *0x47da2c) {\n            var_4h = *0x47da2c;\n        }\n        else {\n            puStack120 = 0x4254cc;\n            var_4h = fcn.00424028();\n        }\n        uStack124 = 0x4254fb;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        uVar2 = 0;\n        puStack120 = &stack0xfffffffc;\n        fcn.00424d60(0, 0, &fcn.00425460::lpvObject);\n        *in_FS_OFFSET = uVar2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 464
    },
    "004256b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004256b0(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack96 [4];\n    uint16_t uStack80;\n    uint16_t uStack78;\n    uint uStack72;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    \n    iVar1 = in_EAX[10];\n    if ((*(iVar1 + 0x3c) == 1) && (*(iVar1 + 0x3e) == 1)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (param_2 != uVar2) {\n        fcn.00424a20();\n        puVar4 = iVar1 + 0x18;\n        puVar5 = auStack96;\n        for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack72 = 0;\n        uStack80 = param_2;\n        uStack78 = uStack80;\n        uStack60 = uStack80;\n        uStack58 = uStack80;\n        fcn.0042442c(auStack96);\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "00425730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425730(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uchar auStackY256 [116];\n    uint uStackY140;\n    uint uVar5;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint var_58h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 0x10)) {\n        if ((param_2 == 0) && (*(iVar1 + 4) == 1)) {\n            fcn.0041fcec();\n            *(iVar1 + 0x10) = 0;\n        }\n        else {\n            fcn.00424a10();\n            fcn.00424a20();\n            puVar3 = iVar1 + 0x18;\n            puVar4 = &fcn.00425730::var_58h;\n            for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            puStack116 = 0x425796;\n            var_4h = fcn.004239c4(0, &fcn.00425730::var_58h);\n            uStack120 = 0x4257c7;\n            uStack124 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff84;\n            uVar5 = 0;\n            uStackY140 = 0x4257bd;\n            puStack116 = &stack0xfffffffc;\n            fcn.00424d60(0, &stack0xffffff00 | *(iVar1 + 0x70), &fcn.00425730::var_58h);\n            *in_FS_OFFSET = uVar5;\n        }\n        fcn.004238bc();\n        *(in_EAX + 0x22) = 1;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 511
    },
    "0042a508": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a508(uint arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x42a604;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    bVar1 = false;\n    arg_8h_00 = 0x42a542;\n    cVar2 = fcn.0042a798();\n    if (cVar2 != '\\0') {\n        if ((((arg_ch == 0x102) || (arg_ch == 0x105)) || (arg_ch == 0x201)) ||\n           (((arg_ch == 10 || (arg_ch == 8)) || ((arg_ch == 1 || (arg_ch == 0x101)))))) {\n            arg_8h_00 = 0;\n            fcn.0040881c();\n            cVar2 = fcn.0042a6e8(arg_8h_00);\n            if (cVar2 != '\\0') {\n                bVar1 = true;\n            }\n        }\n        else {\n            bVar1 = true;\n        }\n        if (bVar1) {\n            *(in_EAX + 0x10) = 1;\n            fcn.0040881c();\n            fcn.0040435c();\n            fcn.00429e94(arg_ch, arg_8h);\n            uVar3 = fcn.004047b8();\n            sub.user32.dll_WinHelpA(in_EDX, uVar3);\n        }\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x42a60b;\n    uStack52 = 0x42a603;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 499
    },
    "0042d5cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042d5cc(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.004036bc();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.004360b8();\n        uVar2 = fcn.004360b8(uVar2);\n        iVar3 = sub.user32.dll_IsChild(uVar2);\n        return iVar3 != 0;\n    }\n    return false;\n}\n",
        "token_count": 120
    },
    "0042d8e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0042d8e8(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(*0x47db90 + 4) != 0) {\n        iVar1 = fcn.0042d7cc(*0x47db90 + 0xc, *(*0x47db90 + 4));\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 106
    },
    "0042ef78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ef78(char param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    fcn.0041dd88();\n    if (param_1 == '\\x01') {\n        if (param_2 == in_EAX[0x1f]) {\n            fcn.0042fa50();\n        }\n        else {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (param_2 == iVar1) {\n                fcn.0042ee1c();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "00433034": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433034(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.004300dc();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x2000;\n    }\n    cVar1 = fcn.0043010c();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x4000;\n    }\n    cVar1 = fcn.0040372c();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040372c();\n        if (cVar1 == '\\0') {\n            *param_2 = *param_2 | 0x1000;\n        }\n        else {\n            cVar1 = fcn.0040372c();\n            if (cVar1 == '\\x01') {\n                *param_2 = *param_2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "00433578": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433578(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042fa0c();\n    if (iVar1 < 1) {\n        iVar1 = fcn.00408de8();\n        in_EAX[0x19] = iVar1;\n    }\n    else {\n        iVar1 = fcn.00408dc8();\n        in_EAX[0x19] = iVar1;\n        fcn.00408ddc();\n        fcn.0042fa1c();\n    }\n    fcn.0042e4d0();\n    (**(*in_EAX + 0xac))();\n    return;\n}\n",
        "token_count": 154
    },
    "00437a84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00437a84(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    bool bVar3;\n    uint x;\n    uint y;\n    uint var_4h;\n    \n    bVar3 = false;\n    cVar1 = fcn.0043c5b0();\n    if ((cVar1 != '\\0') && (in_EDX != *(in_EAX + 0x6c))) {\n        fcn.00437ae8();\n        *(in_EAX + 0x6c) = in_EDX;\n        fcn.00437874(&x);\n        iVar2 = sub.comctl32.dll_ImageList_DragEnter(*(in_EAX + 0x6c), x, y);\n        bVar3 = iVar2 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 204
    },
    "00437b0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00437b0c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack28;\n    uint *puVar4;\n    uint auStack20 [2];\n    \n    puVar4 = auStack20;\n    cVar1 = fcn.0043c5b0();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        fcn.00437874(auStack20);\n        uStack28 = auStack20[0];\n        iVar2 = sub.comctl32.dll_ImageList_DragMove(puVar4);\n        uVar3 = iVar2 != 0;\n    }\n    return CONCAT44(uStack28, uVar3);\n}\n",
        "token_count": 172
    },
    "00437dec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437dec(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.00437e7c();\n        }\n        else {\n            fcn.0040b16c();\n            fcn.00403ce4();\n        }\n        return;\n    }\n    fcn.00437e7c();\n    return;\n}\n",
        "token_count": 152
    },
    "00437e34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437e34(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.00437ee8();\n        }\n        else {\n            fcn.0040b16c();\n            fcn.00403ce4();\n        }\n        return;\n    }\n    fcn.00437ee8();\n    return;\n}\n",
        "token_count": 151
    },
    "004383bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004383bc(int32_t param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x4383d1;\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_ECX;\n    }\n    puStack48 = 0x4383e4;\n    fcn.00403500();\n    in_EAX[3] = 4;\n    in_EAX[5] = param_1;\n    in_EAX[0x1c] = 0x40000;\n    in_EAX[6] = 0xc;\n    if ((*(param_1 + 0x5b) == '\\x01') || (*(param_1 + 0x5b) == '\\x02')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 7) = uVar1;\n    puStack48 = 0x438434;\n    iVar2 = fcn.00437d64();\n    in_EAX[0x19] = iVar2;\n    puStack48 = 0x438446;\n    iVar2 = fcn.00421060();\n    in_EAX[4] = iVar2;\n    puStack48 = 0x43845a;\n    fcn.00426468();\n    puStack48 = 0x438463;\n    fcn.004211dc();\n    puStack48 = 0x43846b;\n    fcn.0043858c();\n    uStack52 = 0x4384c8;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar2 = fcn.00432f40();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00432f04(0);\n            (**(*in_EAX + 8))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00437f98();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x4384cf;\n    uStack52 = 0x4384c7;\n    fcn.00438590();\n    return;\n}\n",
        "token_count": 592
    },
    "00439d94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439d94(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0043a898();\n    fcn.00439e48();\n    sub.user32.dll_ReleaseDC(*(in_EAX + 0x5c), *(in_EAX + 0x58));\n    if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n        fcn.004382d8();\n    }\n    else {\n        fcn.004382d8();\n    }\n    fcn.00439cc0();\n    fcn.00438664(0x439e38);\n    *(in_EAX + 0x60) = 0;\n    return;\n}\n",
        "token_count": 166
    },
    "00439e48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439e48(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n            iVar1 = fcn.00437e7c();\n            iVar2 = *(in_EAX + 0xc) >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar2 = *(in_EAX + 0x54) - iVar2;\n            iVar3 = fcn.00437ee8(iVar1, iVar2);\n            iVar3 = iVar3 + iVar1;\n            iVar4 = iVar2 + *(in_EAX + 0xc);\n        }\n        else {\n            iVar1 = *(in_EAX + 0xc) >> 1;\n            if (iVar1 < 0) {\n                iVar1 = iVar1 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar1 = *(in_EAX + 0x50) - iVar1;\n            iVar2 = fcn.00437e7c(iVar1);\n            iVar3 = iVar1 + *(in_EAX + 0xc);\n            iVar4 = fcn.00437ee8(iVar1, iVar2, iVar3);\n            iVar4 = iVar4 + iVar2;\n        }\n        iVar4 = fcn.0042123c(iVar1, iVar2, iVar3, iVar4);\n        iVar3 = *(in_EAX + 0x58);\n        uVar5 = sub.gdi32.dll_SelectObject(iVar3, iVar4);\n        sub.gdi32.dll_PatBlt(*(in_EAX + 0x58), iVar3, iVar4, iVar1 - iVar3, iVar2 - iVar4, 0x5a0049);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 0x58), uVar5);\n    }\n    return;\n}\n",
        "token_count": 506
    },
    "0043a2d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a2d0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = arg_8h + -4;\n    iVar1 = *(*piVar3 + 0x18);\n    if (*(*(*(*piVar3 + 0x60) + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.00437e7c();\n        if (*(*piVar3 + 0x54) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x54) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.00439fc4();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x54)) {\n            *(*piVar3 + 0x54) = iVar2 - iVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.00437e7c();\n        if (*(*piVar3 + 0x50) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x50) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.00439fc4();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x50)) {\n            *(*piVar3 + 0x50) = iVar2 - iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 329
    },
    "0043a74c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043a74c(uint param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    *(in_EAX + 4) = 1;\n    *(in_EAX + 8) = 5;\n    if (((**0x47c2b8 == 2) && (3 < **0x47bef0)) ||\n       ((**0x47c2b8 == 1 && ((4 < **0x47bef0 || ((**0x47bef0 == 4 && (9 < **0x47c138)))))))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    *(in_EAX + 0xd) = uVar1;\n    fcn.0043a8c0();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 290
    },
    "0043a824": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043a824(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (***0x47bf10)(0x13);\n    *(in_EAX + 0xc) = '\\x01' - (iVar1 == 0);\n    return;\n}\n",
        "token_count": 71
    },
    "0043a840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043a840(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = (***0x47bf10)(0x4b);\n    cVar2 = '\\x01' - (iVar1 == 0);\n    *(in_EAX + 0x20) = cVar2;\n    if (cVar2 != '\\0') {\n        sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0043bdec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043bdec(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x6a)) {\n        if (in_EAX[0x17] != 0) {\n            cVar1 = *(in_EAX[0x17] + 0x58);\n            if (cVar1 == '\\x01') {\n                *(in_EAX + 0x6a) = param_2;\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                param_2 = '\\x01';\n            }\n        }\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                piVar2 = fcn.004036e0();\n                if (piVar2 != NULL) {\n                    (**(*piVar2 + 0x54))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x6a) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "0043c4f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043c4f8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x43c5a5;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.00403500();\n    *(in_EAX + 0x4c) = uVar1;\n    if (((*(in_EAX + 0x30) < 1) || (0x8000 < *(in_EAX + 0x30))) || (*(in_EAX + 0x34) < 1)) {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n    }\n    *(in_EAX + 0x38) = 4;\n    *(in_EAX + 0x41) = 1;\n    fcn.0043cff0();\n    *(in_EAX + 0x43) = 0;\n    *(in_EAX + 0x44) = 0x1fffffff;\n    *(in_EAX + 0x48) = 0x1fffffff;\n    uVar1 = fcn.00424298();\n    *(in_EAX + 0x50) = uVar1;\n    fcn.0043c5c4();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x43c5ac;\n    uStack20 = 0x43c5a4;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 396
    },
    "0043c6fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c6fc(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.0043cf78();\n    if (param_2 == NULL) {\n        (**(**(in_EAX + 0x50) + 100))();\n    }\n    else {\n        cVar1 = fcn.004248cc();\n        if (cVar1 == '\\x01') {\n            (**(*param_2 + 100))();\n        }\n        else {\n            (**(*param_1 + 8))();\n            (**(*param_1 + 0x6c))();\n            (**(*param_1 + 100))();\n        }\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00446a6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00446a6c(uint arg_8h)\n\n{\n    int16_t in_AX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (in_AX == 1) {\n        uVar3 = 0x200000;\n    }\n    uVar1 = fcn.004360b8(0xfffffff0);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    return uVar2 & 0xffffff00 | (uVar2 & uVar3) != 0;\n}\n",
        "token_count": 145
    },
    "00446b1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00446b1c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar1 = fcn.004360b8(0xfffffff0);\n    sub.user32.dll_GetWindowLongA(uVar1);\n    if (*(in_EAX + 0x18) == '\\x01') {\n        iVar2 = fcn.00446aa0(&stack0xfffffffc);\n        iVar3 = fcn.0042f4f0();\n        iVar2 = iVar2 + iVar3;\n    }\n    else {\n        iVar2 = fcn.00446aa0(&stack0xfffffffc);\n        iVar3 = fcn.0042f4ac();\n        iVar2 = iVar2 + iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 199
    },
    "00446bb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00446bb4(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_4h;\n    \n    var_1ch = 0x1c;\n    var_18h = 0x10;\n    iVar1 = *(*(arg_8h + -8) + 6);\n    uVar2 = fcn.004360b8(*(*(arg_8h + -4) + 0x18) == '\\x01', &var_1ch);\n    iVar3 = (***0x47bda8)(uVar2);\n    iVar4 = iVar1;\n    if (iVar3 != 0) {\n        iVar4 = var_4h;\n    }\n    return iVar4;\n}\n",
        "token_count": 204
    },
    "0044a009": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044a009(void)\n\n{\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if ((unaff_EBX & 8) != 0) {\n        *(unaff_ESI + 8) = *(unaff_ESI + 8) | 0x400;\n    }\n    if ((*(unaff_EDI + 0x1d) & 2) != 0) {\n        *(unaff_ESI + 4) = *(unaff_ESI + 4) & 0xff3fffff;\n    }\n    if (*(unaff_EDI + 0x22f) == '\\x01') {\n        *(unaff_ESI + 0x28) = 0x406d98;\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "0044b2a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b2a4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *in_EDX;\n    \n    if (*(in_EAX + 0x150) == '\\x01') {\n        *in_EDX = 1;\n        *in_ECX = *(in_EAX + 0x158);\n    }\n    else {\n        *in_EDX = 0;\n        fcn.0040435c();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0044dcb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044dcb4(void)\n\n{\n    char in_AL;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 8;\n    iStack4 = -(in_AL != '\\0');\n    sub.user32.dll_SystemParametersInfoA(0x49, 8, &uStack8, 0);\n    return;\n}\n",
        "token_count": 82
    },
    "0044ee6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044ee6c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0xb0) != 0) {\n        iVar1 = sub.user32.dll_IsDialogMessageA(*(in_EAX + 0xb0), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 115
    },
    "0044fbb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044fbb0(int32_t arg_8h)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_IsWindowVisible(*(*(arg_8h + -4) + 0x30));\n    if ((1U - (iVar1 == 0) == *0x46fbec) && (in_AL != *0x46fbec)) {\n        sub.user32.dll_SetWindowPos(*(*(arg_8h + -4) + 0x30), 0, 0, 0, 0, 0, *(in_AL * 2 + 0x46fbf0));\n        *0x46fbec = in_AL;\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00451438": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451438(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *puStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    uStack48 = 0x4514ff;\n    puStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iVar2 = 1;\n    var_4h = in_EAX;\n    var_10h = fcn.004045c0();\n    (**(*var_4h + 0x44))();\n    if (0 < var_10h) {\n        do {\n            iVar4 = 0;\n            var_ch = iVar2;\n            for (iVar3 = iVar2; iVar3 <= var_10h; iVar3 = iVar3 + 1) {\n                cVar1 = *(param_2 + -1 + iVar3);\n                if (cVar1 == '\\\"') {\n                    iVar4 = iVar4 + 1;\n                }\n                if ((cVar1 == ',') && (iVar4 != 1)) break;\n                var_ch = var_ch + 1;\n            }\n            puStack52 = &fcn.00451438::var_18h;\n            var_8h = iVar2;\n            fcn.00404818();\n            fcn.004085dc();\n            iVar2 = fcn.004045c0();\n            if (0 < iVar2) {\n                (**(*var_4h + 0x38))();\n            }\n            iVar2 = var_ch + 1;\n        } while (iVar2 <= var_10h);\n    }\n    *in_FS_OFFSET = puStack52;\n    puStack44 = 0x451506;\n    uStack48 = 0x4514fe;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 519
    },
    "0045a748": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0045a748(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.004269d8(8);\n    if (iVar1 == 0) {\n        sub.comctl32.dll_InitCommonControls();\n    }\n    return CONCAT44(in_EAX, iVar1 != 0);\n}\n",
        "token_count": 77
    },
    "0045bf58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045bf58(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uchar auStack24 [16];\n    \n    if (*(in_EAX + 8) < 1) {\n        while ((param_2 != 0 && (cVar1 = fcn.0045b8c8(),  cVar1 == '\\0'))) {\n            param_2 = fcn.0045b220();\n        }\n        if (param_2 != 0) {\n            fcn.0045b8f8();\n            uVar2 = fcn.004360b8(auStack24, 0xffffffff);\n            sub.user32.dll_InvalidateRect(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "004695ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004695ac(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint *puStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_18h = 0;\n    var_14h = 0;\n    puStack48 = 0x4695ce;\n    var_8h = param_2;\n    fcn.004047a8();\n    uStack52 = 0x46969c;\n    puStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.00416220();\n    iVar2 = 1;\n    var_10h = fcn.004045c0();\n    if (0 < var_10h) {\n        do {\n            iVar5 = 0;\n            iVar4 = iVar2;\n            for (iVar3 = iVar2; iVar3 <= var_10h; iVar3 = iVar3 + 1) {\n                cVar1 = *(var_8h + -1 + iVar3);\n                if (cVar1 == '\\\"') {\n                    iVar5 = iVar5 + 1;\n                }\n                if ((cVar1 == ',') && (iVar5 != 1)) break;\n                iVar4 = iVar4 + 1;\n            }\n            puStack56 = &fcn.004695ac::var_18h;\n            var_ch = iVar2;\n            fcn.00404818();\n            fcn.004085dc();\n            iVar2 = fcn.004045c0();\n            if (0 < iVar2) {\n                fcn.0046958c();\n                fcn.0040862c();\n                fcn.00469320();\n            }\n            iVar2 = iVar4 + 1;\n        } while (iVar2 <= var_10h);\n    }\n    *in_FS_OFFSET = puStack56;\n    puStack48 = 0x4696a3;\n    uStack52 = 0x469693;\n    fcn.0040432c();\n    uStack52 = 0x46969b;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 569
    },
    "0046a128": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_17h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0046a128(void)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint8_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uchar uStack28;\n    uint var_17h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 8;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    _uStack28 = 0x46a147;\n    unique0x10000268 = unaff_EDI;\n    var_10h = unaff_ESI;\n    var_4h = in_EAX;\n    fcn.004047a8();\n    var_1ch = 0x46a41a;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046a128::var_20h;\n    _uStack28 = &stack0xfffffffc;\n    fcn.004083f4();\n    iVar4 = fcn.004048fc();\n    if (iVar4 < 1) {\n        fcn.0040435c();\n    }\n    else {\n        iVar4 = 1;\n        do {\n            fcn.004048fc();\n            var_20h = &fcn.0046a128::var_4h;\n            fcn.004045c0();\n            fcn.00404818();\n            if (iVar4 == 1) {\n                var_20h = &fcn.0046a128::var_ch;\n                fcn.004048fc();\n                fcn.00404818();\n            }\n            else if (iVar4 == 2) {\n                fcn.004044e8();\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 != 4);\n        cVar1 = fcn.004085a4();\n        if (cVar1 == '\\0') {\n            while (iVar4 = fcn.004045c0(),  3 < iVar4) {\n                uVar2 = fcn.0046a110();\n                _uStack28 = CONCAT11(uVar2, uStack28);\n                _uStack28 = _uStack28 & 0xffff0000 | _uStack28;\n                uVar2 = fcn.0046a110();\n                _uStack28 = CONCAT12(uVar2, _uStack28);\n                _uStack28 = _uStack28 & 0xff000000 | _uStack28;\n                uVar3 = fcn.0046a110();\n                _uStack28 = _uStack28 & 0xffffff | uVar3 << 0x18;\n                uVar3 = fcn.0046a110();\n                unique0x1000024b =\n                     CONCAT13(var_17h._2_1_ << 6 | uVar3, \n                              CONCAT12(var_17h._1_1_ << 4 | var_17h._2_1_ >> 2, \n                                       CONCAT11((_uStack28 >> 8 & 0xff) << 2 | var_17h._1_1_ >> 4, uVar3)));\n                fcn.004045c0(&fcn.0046a128::var_4h);\n                fcn.00404818();\n                fcn.004044e8(var_10h);\n                fcn.004044e8(var_38h);\n                fcn.004044e8(var_3ch);\n                var_20h = var_40h;\n                var_38h = 0x46a3a1;\n                fcn.00404680();\n            }\n        }\n        else {\n            iVar4 = 1;\n            do {\n                if (*(var_4h + -1 + iVar4) == '_') {\n                    fcn.004045c8();\n                }\n                else if (*(var_4h + -1 + iVar4) == '=') {\n                    fcn.00402cf8();\n                    fcn.00402cc8();\n                    fcn.00402cf8();\n                    fcn.00402cc8();\n                    fcn.00404564();\n                    fcn.004088bc();\n                    fcn.004044e8();\n                    fcn.004045c8();\n                    iVar4 = iVar4 + 2;\n                }\n                else {\n                    fcn.004044e8();\n                    fcn.004045c8();\n                }\n                iVar4 = iVar4 + 1;\n            } while ((*(var_4h + -1 + iVar4) != '?') || (*(var_4h + iVar4) != '='));\n        }\n        cVar1 = fcn.004085a4();\n        if (cVar1 == '\\0') {\n            fcn.0040435c();\n        }\n        else {\n            fcn.0046a474();\n        }\n    }\n    *in_FS_OFFSET = var_20h;\n    _uStack28 = 0x46a421;\n    var_1ch = 0x46a3ff;\n    fcn.0040432c();\n    var_1ch = 0x46a40c;\n    fcn.0040432c();\n    var_1ch = 0x46a419;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 1389
    },
    "0046e2ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046e2ac(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x46e343;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    (**(*in_EAX + 0xb0))(&var_ch, &var_8h);\n    if (var_8h == 1) {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n    }\n    (**(*in_EAX + 0x84))();\n    (**(*in_EAX + 0xa8))(var_ch, var_8h);\n    *in_FS_OFFSET = var_ch;\n    fcn.00404308(0x46e34a);\n    return;\n}\n",
        "token_count": 245
    },
    "0040896c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040896c(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (((param_2 & 3) < 3) && ((param_2 & 0xf0) >> 4 < 0x41)) {\n        uVar1 = fcn.004047b8(*((param_2 & 3) * 4 + 0x46f124), *(((param_2 & 0xf0) >> 4) * 4 + 0x46f130), 0, 3, 0x80, 0);\n        uVar1 = sub.kernel32.dll_CreateFileA_1(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 174
    },
    "00408aa4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00408aa4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.004045c0();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    while (cVar1 = fcn.0040b9e8(),  cVar1 == '\\x02') {\n        iVar2 = iVar2 + -1;\n    }\n    return in_EAX + -1 + iVar2;\n}\n",
        "token_count": 117
    },
    "00408ad4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00408ad4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.004045c0();\n    fcn.004047b8();\n    do {\n        if (iVar2 < 1) {\n            return iVar2;\n        }\n        if ((*(param_2 + -1 + iVar2) != '\\0') && (iVar3 = fcn.00408d54(),  iVar3 != 0)) {\n            cVar1 = fcn.0040b9e8();\n            if (cVar1 != '\\x02') {\n                return iVar2;\n            }\n            iVar2 = iVar2 + -1;\n        }\n        iVar2 = iVar2 + -1;\n    } while( true );\n}\n",
        "token_count": 190
    },
    "004095eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004095eb(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    char *unaff_EDI;\n    char *pcVar5;\n    char *pcVar6;\n    uint var_2ch;\n    uint var_5h;\n    \n    uVar3 = *(unaff_EBP + 8);\n    if (0x11 < uVar3) {\n        uVar3 = 0x12;\n    }\n    iVar2 = *(unaff_EBP + -0x2c);\n    if (iVar2 < 1) {\n        pcVar5 = unaff_EDI + 1;\n        *unaff_EDI = '0';\n    }\n    else {\n        iVar4 = 0;\n        if (*(unaff_EBP + 0x10) != '\\x02') {\n            iVar4 = (*(unaff_EBP + -0x2c) - 1U) % 3 + 1;\n        }\n        while( true ) {\n            pcVar6 = unaff_EDI;\n            cVar1 = fcn.0040953e();\n            pcVar5 = pcVar6 + 1;\n            *pcVar6 = cVar1;\n            iVar2 = extraout_ECX + -1;\n            uVar3 = extraout_EDX;\n            if (iVar2 == 0) break;\n            iVar4 = iVar4 + -1;\n            unaff_EDI = pcVar5;\n            if ((iVar4 == 0) && (*(unaff_EBP + -6) != '\\0')) {\n                *pcVar5 = *(unaff_EBP + -6);\n                iVar4 = 3;\n                unaff_EDI = pcVar6 + 2;\n            }\n        }\n    }\n    if (uVar3 != 0) {\n        pcVar6 = pcVar5;\n        if (*(unaff_EBP + -5) != '\\0') {\n            pcVar6 = pcVar5 + 1;\n            *pcVar5 = *(unaff_EBP + -5);\n        }\n        for (; iVar2 != 0; iVar2 = iVar2 + 1) {\n            *pcVar6 = '0';\n            uVar3 = uVar3 - 1;\n            if (uVar3 == 0) {\n                return;\n            }\n            pcVar6 = pcVar6 + 1;\n        }\n        do {\n            cVar1 = fcn.0040953e();\n            *pcVar6 = cVar1;\n            pcVar6 = pcVar6 + 1;\n        } while (extraout_EDX_00 != 1);\n    }\n    return;\n}\n",
        "token_count": 642
    },
    "0040a070": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a070(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char **in_EDX;\n    uint *in_FS_OFFSET;\n    char **ppcStackY328;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x40a14e;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    fcn.00404308();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    if (in_EAX < 3) {\n        fcn.004043a0();\n    }\n    else {\n        fcn.004043a0();\n    }\n    uVar1 = fcn.004047b8(&fcn.0040a070::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040a070::var_14h, uVar1);\n    ppcStackY328 = 0x40a101;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        ppcStackY328 = 0x40a117;\n        fcn.00404570();\n        if ((in_EAX == 1) && (**in_EDX == '0')) {\n            fcn.004045c0();\n            fcn.00404818();\n            ppcStackY328 = in_EDX;\n        }\n    }\n    *in_FS_OFFSET = ppcStackY328;\n    fcn.00404308(0x40a155);\n    return;\n}\n",
        "token_count": 492
    },
    "0040bef8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040bef8(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uchar uVar6;\n    uint lpCharType;\n    uint lpSrcStr;\n    \n    *0x47d7f0 = 0x409;\n    *0x47d7f4 = 9;\n    *0x47d7f8 = 1;\n    uVar2 = sub.kernel32.dll_GetThreadLocale_1();\n    if (uVar2 != 0) {\n        *0x47d7f0 = uVar2;\n    }\n    if (uVar2 != 0) {\n        *0x47d7f4 = uVar2 & 0x3ff;\n        *0x47d7f8 = (uVar2 & 0xffff) >> 10;\n    }\n    puVar4 = 0x40c04c;\n    puVar5 = 0x46f0f0;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    if (*0x46f0ac == 2) {\n        cVar1 = fcn.0040bee0();\n        uVar6 = cVar1 == '\\0';\n        if (uVar6) {\n            fcn.0040be80(&stack0xfffffffc);\n            fcn.00403068();\n            *0x47d7fc = !uVar6;\n            if (*0x47d7fc) {\n                *0x47d7fd = 0;\n            }\n            else {\n                iVar3 = 0x80;\n                puVar4 = &lpSrcStr;\n                do {\n                    *puVar4 = iVar3;\n                    iVar3 = iVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                } while (iVar3 != 0x100);\n                sub.kernel32.dll_GetStringTypeExA(*0x47d7f0, 2, &lpSrcStr, 0x80, &lpCharType);\n                iVar3 = 0x80;\n                puVar4 = &lpCharType;\n                do {\n                    *0x47d7fd = *puVar4 == 2;\n                    if (*0x47d7fd) {\n                        return;\n                    }\n                    puVar4 = puVar4 + 2;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        }\n        else {\n            *0x47d7fd = 0;\n            *0x47d7fc = 0;\n        }\n    }\n    else {\n        iVar3 = sub.user32.dll_GetSystemMetrics(0x4a);\n        *0x47d7fd = iVar3 != 0;\n        iVar3 = sub.user32.dll_GetSystemMetrics(0x2a);\n        *0x47d7fc = iVar3 != 0;\n        if (*0x47d7fc) {\n            fcn.0040be80(&stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 729
    },
    "00411950": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411950(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    \n    pcVar1 = **param_2;\n    uVar4 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar4 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar2 & 0xffffff);\n        *puVar3 = param_1;\n        if ((1 < uVar4) && (*puVar3 = param_1,  3 < uVar4)) {\n            *puVar3 = param_1;\n        }\n    }\n    else if (*(param_2 + 0xb) < 0xfe) {\n        (*pcVar2)();\n    }\n    else {\n        (**(pcVar2 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "0041e6a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e6a8(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41e712;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if ((arg_14h < 0) || (2 < arg_14h)) {\n        uVar2 = 0x80030001;\n        *in_FS_OFFSET = uStack36;\n    }\n    else {\n        iVar1 = (**(**(arg_8h + 0xc) + 0x10))();\n        if (arg_18h != NULL) {\n            *arg_18h = iVar1;\n            arg_18h[1] = iVar1 >> 0x1f;\n        }\n        uVar2 = 0;\n        *in_FS_OFFSET = uStack36;\n    }\n    return uVar2;\n}\n",
        "token_count": 286
    },
    "00422470": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422470(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint lpSystemInfo;\n    int16_t iStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    sub.kernel32.dll_GetSystemInfo(&lpSystemInfo);\n    var_8h = var_8h + -1;\n    if (-1 < var_8h) {\n        if (iStack16 == 3) {\n            do {\n                uVar1 = *(var_4h + var_8h * 4);\n                *(var_4h + var_8h * 4) = uVar1 >> 0x10 & 0xff | CONCAT11(uVar1, uVar1 >> 8) << 8;\n                var_8h = var_8h + -1;\n            } while (-1 < var_8h);\n        }\n        else {\n            do {\n                uVar1 = *(var_4h + var_8h * 4);\n                *(var_4h + var_8h * 4) = ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;\n                var_8h = var_8h + -1;\n            } while (-1 < var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "0042d7cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d7cc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint lParam;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_EAX != 0) {\n        uVar1 = sub.user32.dll_SendMessageA();\n    }\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "00432bac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00432bac(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack32 = 0x432bc3;\n    iVar1 = fcn.00432f40();\n    if (iVar1 == 0) {\n        return;\n    }\n    puStack32 = 0x432bd7;\n    iVar1 = fcn.00403500();\n    puStack32 = 0x432be2;\n    fcn.00432aa8();\n    uStack36 = 0x432c93;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.00432f40();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00432f04();\n            if (*(iVar3 + 0x5b) - 3U < 2) {\n                fcn.00432f04();\n                fcn.0041516c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0040372c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x432c9a;\n    while (0 < *(iVar1 + 8)) {\n        uStack36 = 0x432c53;\n        iVar2 = fcn.004152c8();\n        if (*(iVar2 + 0x5b) == '\\x03') {\n            uStack36 = 0x432c60;\n            fcn.0042efbc();\n        }\n        else {\n            uStack36 = 0x432c69;\n            fcn.0042efbc();\n        }\n        uStack36 = 0x432c78;\n        fcn.004151b8();\n    }\n    uStack36 = 0x432c8a;\n    fcn.00403530();\n    uStack36 = 0x432c92;\n    fcn.00432ab0();\n    return;\n}\n",
        "token_count": 507
    },
    "00442434": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00442434(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar7 = 0;\n    piVar4 = fcn.00442378();\n    if (piVar4 == NULL) {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            cVar3 = fcn.004036bc();\n            if (cVar3 != '\\0') {\n                fcn.0044144c();\n            }\n        }\n    }\n    else {\n        if ((*(piVar4 + 7) & 0x10) == 0) {\n            fcn.0044144c();\n        }\n        (**(*piVar4 + 0x44))();\n        uVar5 = fcn.00441ae4();\n        uVar2 = fcn.00441fe0();\n        if ((uVar5 | uVar2) != 0) {\n            fcn.0043f4bc();\n        }\n        uVar1 = *(**0x47c0d4 + 0x44);\n        uVar5 = uVar5 & 0xffffff00;\n        if (((uVar1 != 0) && (uVar5 = uVar1,  *(uVar1 + 0x22f) == '\\x02')) && (piVar4 == *(uVar1 + 600))) {\n            iVar6 = sub.user32.dll_SendMessageA(*(uVar1 + 0x254), 0x234, 0, 0);\n            if (iVar6 != 0) {\n                uVar7 = fcn.004360b8();\n                sub.user32.dll_DrawMenuBar(uVar7);\n            }\n        }\n        uVar7 = CONCAT31(uVar5 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 450
    },
    "0044900c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044900c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00449420();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0044946c();\n            if (*(iVar2 + 0x22b) == '\\x02') {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 124
    },
    "004499f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.004499f8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0x80000005;\n    if (*(in_EAX + 0x22f) == '\\x02') {\n        uVar1 = 0x8000000c;\n    }\n    return uVar1;\n}\n",
        "token_count": 80
    },
    "004511a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.004511a0(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004045c0();\n    uVar1 = fcn.004047b8(uVar1);\n    uVar1 = fcn.004045c0(uVar1);\n    uVar1 = fcn.004047b8(uVar1);\n    uVar2 = sub.kernel32.dll_CompareStringA(0x400, 1, uVar1);\n    return uVar2 & 0xffffff00 | uVar2 == 2;\n}\n",
        "token_count": 134
    },
    "004515c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.004515c4(void)\n\n{\n    int32_t iVar1;\n    unkbyte3 Var3;\n    uint uVar2;\n    \n    iVar1 = *(*0x47c2c8 + 4);\n    if (iVar1 == 4) {\n        if (*(*0x47c2c8 + 8) != 2) {\n            return CONCAT31(*0x47c2c8 >> 8, 1);\n        }\n        uVar2 = 0;\n    }\n    else {\n        if (iVar1 == 0x11) {\n            return 2;\n        }\n        Var3 = iVar1 + -0x12 >> 8;\n        if (iVar1 + -0x12 == 0) {\n            return CONCAT31(Var3, 3);\n        }\n        uVar2 = CONCAT31(Var3, 4);\n    }\n    return uVar2;\n}\n",
        "token_count": 198
    },
    "00455e4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid fcn.00455e4c(void)\n\n{\n    char cVar1;\n    ushort uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *var_28h;\n    uint var_24h;\n    uchar *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_20h = &stack0xfffffffc;\n    var_10h = 4;\n    do {\n        var_8h = 0;\n        var_10h = var_10h + -1;\n    } while (var_10h != 0);\n    var_24h = 0x455fee;\n    var_28h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_28h;\n    var_4h = var_10h;\n    (**(*in_EAX[0x1e] + 0x44))();\n    fcn.00456484();\n    (**(*in_EAX[0x1e] + 0x38))();\n    iVar3 = fcn.004045c0();\n    if ((3 < iVar3) && (*(var_4h + 3) == '-')) {\n        fcn.00404818(&var_ch);\n        fcn.0040460c();\n        do {\n            fcn.00456484();\n            (**(*in_EAX[0x1e] + 0x38))();\n            iVar3 = fcn.004045c0();\n            if (iVar3 < 4) break;\n            var_28h = &var_10h;\n            fcn.00404818();\n            cVar1 = fcn.004085a4();\n        } while (cVar1 == '\\0');\n    }\n    fcn.00455e08(&var_14h);\n    fcn.00404818();\n    cVar1 = fcn.004085a4();\n    if (cVar1 == '\\0') {\n        fcn.00455e08(&var_1ch);\n        fcn.00404818();\n        cVar1 = fcn.004085a4();\n        if (cVar1 == '\\0') {\n            fcn.00455e08(&var_24h);\n            fcn.00404818();\n            uVar2 = fcn.004088f8();\n            *(in_EAX + 0x26) = uVar2;\n        }\n        else {\n            *(in_EAX + 0x26) = 0;\n        }\n    }\n    else {\n        *(in_EAX + 0x26) = 1;\n    }\n    (**(*in_EAX + 0x50))();\n    *in_FS_OFFSET = 0;\n    fcn.0040432c(0x455ff5);\n    return;\n}\n",
        "token_count": 705
    },
    "0045fed0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0045fed0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t uStack84;\n    uint uStack40;\n    uint uStack36;\n    \n    fcn.00413c30();\n    *(in_EAX + 0x2c0) = uStack40;\n    *(in_EAX + 0x2c4) = uStack36;\n    uStack84 = 0;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = fcn.00424298();\n            *(in_EAX + uStack84 * 0x10 + 0x214 + uVar3 * 4) = uVar1;\n            uVar1 = fcn.004092b0(1);\n            uVar4 = *0x47d714;\n            sub.user32.dll_LoadBitmapA(*0x47d714, uVar1);\n            fcn.00425460();\n            iVar2 = (**(**(in_EAX + (uVar4 & 0xff) * 0x10 + 0x214 + uVar3 * 4) + 0x2c))();\n            if (*(in_EAX + 0x2c0) < iVar2) {\n                uVar1 = (**(**(in_EAX + (uVar4 & 0xff) * 0x10 + 0x214 + uVar3 * 4) + 0x2c))();\n                *(in_EAX + 0x2c0) = uVar1;\n            }\n            iVar2 = (**(**(in_EAX + (uVar4 & 0xff) * 0x10 + 0x214 + uVar3 * 4) + 0x20))();\n            if (*(in_EAX + 0x2c4) < iVar2) {\n                uVar1 = (**(**(in_EAX + uStack84 * 0x10 + 0x214 + uVar3 * 4) + 0x20))();\n                *(in_EAX + 0x2c4) = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 3);\n        uStack84 = uStack84 + 1;\n    } while (uStack84 != 9);\n    *(in_EAX + 0x2c0) = *(in_EAX + 0x2c0) + 8;\n    *(in_EAX + 0x2c4) = *(in_EAX + 0x2c4) + 4;\n    return;\n}\n",
        "token_count": 601
    },
    "00460040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00460040(void)\n\n{\n    char cVar1;\n    char cVar2;\n    \n    cVar1 = '\\0';\n    do {\n        cVar2 = '\\0';\n        do {\n            fcn.00403530();\n            cVar2 = cVar2 + '\\x01';\n        } while (cVar2 != '\\x03');\n        cVar1 = cVar1 + '\\x01';\n    } while (cVar1 != '\\t');\n    return;\n}\n",
        "token_count": 107
    },
    "0046d354": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0046d354(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uchar *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 0x9;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    var_20h = 0x46d5d1;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046d354::var_24h;\n    var_28h = 0x46d381;\n    var_14h = unaff_ESI;\n    fcn.0046c208();\n    var_28h = 0x46d389;\n    iVar1 = fcn.004045c0();\n    if (iVar1 == 0) {\n        var_28h = 0x46d399;\n        fcn.0046c26c();\n    }\n    var_28h = 0x46d3a3;\n    fcn.0046c1cc();\n    var_28h = 0x46d3ab;\n    iVar1 = fcn.004045c0();\n    if (iVar1 == 0) {\n        var_28h = 0x46d3bb;\n        fcn.0046c238();\n    }\n    var_28h = 0x46d3c5;\n    fcn.0046c208();\n    var_28h = 0x46d3cf;\n    fcn.0046c1cc();\n    var_28h = 0;\n    var_2ch = 0x46d3e3;\n    iVar1 = fcn.00464484(0);\n    var_2ch = 0x46d3ed;\n    var_ch = (**(*(iVar1 + 0x18) + 0x2c))();\n    *(var_ch + 0x5d) = 1;\n    var_2ch = 0x46d401;\n    fcn.0046c208();\n    var_2ch = 0x46d411;\n    fcn.0040460c();\n    var_2ch = 0x46d422;\n    (**(**(arg_8h + -4) + 0x84))();\n    var_2ch = 0x46d42c;\n    fcn.0046c1cc();\n    var_2ch = 0x46d43c;\n    fcn.0040460c();\n    var_2ch = 0x46d44d;\n    (**(**(arg_8h + -4) + 0x84))();\n    var_2ch = 0x46d45b;\n    fcn.00456b64();\n    var_2ch = 0x46d46b;\n    (**(**(arg_8h + -4) + 0x84))();\n    var_30h = 0x46d59a;\n    var_34h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046d354::var_34h;\n    var_38h = 0x46d481;\n    var_2ch = &stack0xfffffffc;\n    iVar1 = (**(**(in_EAX + 0x40) + 0x14))();\n    if (-1 < iVar1 + -1) {\n        uVar2 = true;\n        var_14h = iVar1;\n        do {\n            var_38h = &fcn.0046d354::var_30h;\n            var_3ch = 0x46d4a1;\n            (**(**(in_EAX + 0x40) + 0xc))();\n            var_3ch = 0x46d4b3;\n            fcn.00404818();\n            var_3ch = 0x46d4c0;\n            fcn.00404704();\n            if (uVar2) {\n                var_3ch = 0x46d4cf;\n                (**(**(in_EAX + 0x40) + 0xc))();\n                var_3ch = 0x46d4df;\n                fcn.0040460c();\n                var_3ch = 0x46d4ec;\n                (**(**(in_EAX + 0x40) + 0x20))();\n            }\n            var_3ch = 0x46d4f9;\n            (**(**(in_EAX + 0x40) + 0xc))();\n            var_3ch = 0x46d506;\n            fcn.004045c8();\n            var_3ch = 0x46d514;\n            fcn.00463d38();\n            var_3ch = 0x46d51f;\n            (**(*var_ch + 0x38))();\n            var_3ch = &fcn.0046d354::var_48h;\n            var_40h = 0x46d532;\n            fcn.00451720(var_3ch);\n            if (*(arg_8h + -5) == '\\x02') {\n                var_40h = 0x46d546;\n                fcn.0046a960();\n                var_40h = 0x46d557;\n                (**(**(arg_8h + -4) + 0x80))();\n            }\n            else {\n                var_40h = 0x46d56a;\n                (**(**(arg_8h + -4) + 0x80))();\n            }\n            var_14h = var_14h + -1;\n            uVar2 = var_14h == 0;\n        } while (!uVar2);\n    }\n    var_38h = 0x46d584;\n    (**(**(arg_8h + -4) + 0x84))();\n    *in_FS_OFFSET = var_34h;\n    var_2ch = 0x46d5a1;\n    var_30h = 0x46d599;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 1603
    },
    "00403974": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403974(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00403d90": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00403d90(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 54
    },
    "004187f0": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004187f0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x418867;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00406130();\n    if (param_2 != 0) {\n        iVar2 = fcn.00411638();\n        fcn.00406130(iVar2 + 5);\n        cVar1 = fcn.0040cbec();\n        if (cVar1 == '\\0') {\n            fcn.00406130();\n        }\n    }\n    fcn.0041230c();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41886e;\n    uStack24 = 0x418866;\n    fcn.00406130();\n    return;\n}\n",
        "token_count": 250
    },
    "0041eae8": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041eae8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 51
    },
    "004391a8": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004391a8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 0x14) + 0x5b) - 1U < 2) {\n        fcn.004390c8(&stack0xfffffffc);\n        fcn.00439120(*(arg_8h + 0xc) + -2, &stack0xfffffffc);\n        fcn.00439120(*(arg_8h + 0xc) + -2, &stack0xfffffffc);\n    }\n    else {\n        fcn.004390c8(&stack0xfffffffc);\n        fcn.00439120(*(arg_8h + 4) + 5, &stack0xfffffffc);\n        fcn.00439120(*(arg_8h + 4) + 8, &stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00401cac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401cac(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *in_EAX;\n    \n    puVar1 = (param_2 - 4) + in_EAX;\n    if (0xf < param_2) {\n        *puVar1 = 0x80000007;\n        fcn.00401e80();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n        *puVar1 = param_2 | 0x80000002;\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00401cdc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00401cdc(void)\n\n{\n    int32_t in_EAX;\n    \n    *0x47d5b0 = *0x47d5b0 + 1;\n    *0x47d5b4 = *0x47d5b4 + ((*(in_EAX + -4) & 0x7ffffffc) - 4);\n    fcn.004022f0();\n    return;\n}\n",
        "token_count": 95
    },
    "00401dd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t fcn.00401dd0(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uStack28;\n    int32_t iStack27;\n    int32_t iStack23;\n    \n    uStack28 = 0;\n    uVar1 = fcn.00401c7c();\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        if (in_EAX - *(uVar1 + 8) < 0xc) {\n            uVar2 = fcn.004019e8();\n        }\n        else {\n            uVar2 = fcn.004019e8();\n        }\n        if (iStack27 != 0) {\n            fcn.00401cac();\n            if (iStack27 + iStack23 < *(uVar1 + 8) + *(uVar1 + 0xc)) {\n                fcn.00401d00();\n            }\n            uVar2 = fcn.004014fc();\n            uStack28 = 1;\n        }\n    }\n    return uVar2 & 0xffffff00 | uStack28;\n}\n",
        "token_count": 259
    },
    "00401f54": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00401f54(void)\n\n{\n    uint32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    \n    uStack28 = *in_EAX;\n    uStack24 = in_EAX[1];\n    fcn.00401f08();\n    fcn.00401488();\n    if (uStack20 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (uStack20 < uStack28) {\n            iVar2 = fcn.00401d28();\n            uStack28 = uStack28 - iVar2;\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack28 + uStack24 < uStack20 + iStack16) {\n            iVar2 = fcn.00401d98();\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack20 + iStack16 == uStack28 + uStack24) {\n            fcn.00401cac();\n            uStack24 = uStack24 - 4;\n        }\n        *0x47d618 = uStack28;\n        *0x47d614 = uStack24;\n        uVar1 = CONCAT31(uStack24 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 317
    },
    "0040206c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040206c(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    while ((puVar1 = *0x47d610,  puVar3 = *0x47d608,  (*0x47d608)[2] < in_EAX &&\n           (uVar4 = (*0x47d610)[2],  puVar3 = *0x47d610,  uVar4 < in_EAX))) {\n        (*0x47d610)[2] = in_EAX;\n        puVar3 = puVar1;\n        do {\n            puVar3 = puVar3[1];\n        } while (puVar3[2] < in_EAX);\n        (*0x47d610)[2] = uVar4;\n        puVar1 = puVar3;\n        if ((puVar3 != *0x47d610) ||\n           ((in_EAX < 0x1001 && (puVar3 = fcn.00402040(),  puVar1 = *0x47d610,  puVar3 != NULL)))) break;\n        cVar2 = fcn.00401fe0();\n        puVar3 = *0x47d618;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        if (in_EAX <= *0x47d614) {\n            *0x47d614 = *0x47d614 - in_EAX;\n            if (*0x47d614 < 0xc) {\n                in_EAX = in_EAX + *0x47d614;\n                *0x47d614 = 0;\n            }\n            *0x47d618 = *0x47d618 + in_EAX;\n            *puVar3 = in_EAX | 2;\n            *0x47d5b0 = *0x47d5b0 + 1;\n            *0x47d5b4 = *0x47d5b4 + (in_EAX - 4);\n            return puVar3 + 1;\n        }\n    }\n    *0x47d610 = puVar1;\n    fcn.00401c18();\n    uVar4 = puVar3[2];\n    if (uVar4 - in_EAX < 0xc) {\n        if (puVar3 == *0x47d610) {\n            *0x47d610 = puVar3[1];\n        }\n        *(puVar3 + uVar4) = *(puVar3 + uVar4) & 0xfffffffe;\n    }\n    else {\n        fcn.00401e80();\n        uVar4 = in_EAX;\n    }\n    *puVar3 = uVar4 | 2;\n    *0x47d5b0 = *0x47d5b0 + 1;\n    *0x47d5b4 = *0x47d5b4 + (uVar4 - 4);\n    return puVar3 + 1;\n}\n",
        "token_count": 686
    },
    "00402494": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402494(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    uint uVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    uVar7 = param_2 + 7U & 0xfffffffc;\n    if (uVar7 < 0xc) {\n        uVar7 = 0xc;\n    }\n    puVar6 = in_EAX + -4;\n    uVar9 = *puVar6 & 0x7ffffffc;\n    puVar3 = puVar6 + uVar9;\n    uVar8 = uVar7;\n    if (uVar9 < uVar7) {\n        do {\n            iStack20 = uVar7 - uVar9;\n            if (puVar6 + uVar9 == *0x47d618) {\n                if (iStack20 <= *0x47d614) {\n                    *0x47d614 = *0x47d614 - iStack20;\n                    *0x47d618 = *0x47d618 + iStack20;\n                    if (*0x47d614 < 0xc) {\n                        *0x47d618 = *0x47d618 + *0x47d614;\n                        uVar7 = uVar7 + *0x47d614;\n                        *0x47d614 = 0;\n                    }\n                    *0x47d5b4 = *0x47d5b4 + (uVar7 - uVar9);\n                    uVar8 = *puVar6;\n                    *puVar6 = uVar7 | uVar8 & 0x80000003;\n                    uVar4 = CONCAT31((uVar8 & 0x80000003) >> 8, 1);\n                    goto code_r0x0040265c;\n                }\n                fcn.00401f08();\n            }\n            puVar5 = puVar6 + uVar9;\n            if ((*puVar5 & 2) == 0) {\n                uVar1 = puVar5[2];\n                if (iStack20 <= uVar1) {\n                    fcn.00401c18();\n                    if (uVar1 - iStack20 < 0xc) {\n                        uVar8 = uVar7 + (uVar1 - iStack20);\n                        puVar5 = puVar6 + uVar8;\n                        *puVar5 = *puVar5 & 0xfffffffe;\n                    }\n                    else {\n                        fcn.00401e80();\n                    }\n                    goto code_r0x00402643;\n                }\n                puVar5 = puVar5 + uVar1;\n                iStack20 = iStack20 - uVar1;\n            }\n        } while (((*puVar5 & 0x80000000) != 0) && (cVar2 = fcn.0040200c(),  cVar2 != '\\0'));\n        uVar4 = 0;\n    }\n    else {\n        uStack24 = uVar9 - uVar7;\n        if (puVar3 == *0x47d618) {\n            *0x47d618 = *0x47d618 + -uStack24;\n            *0x47d614 = *0x47d614 + uStack24;\n            if (*0x47d614 < 0xc) {\n                *0x47d618 = *0x47d618 + uStack24;\n                *0x47d614 = *0x47d614 - uStack24;\n                uVar8 = uVar9;\n            }\n        }\n        else {\n            if ((*puVar3 & 2) == 0) {\n                uStack24 = uStack24 + *(puVar3 + 8);\n                fcn.00401c18();\n            }\n            uVar8 = uVar9;\n            if (0xb < uStack24) {\n                *(puVar6 + uVar7) = uStack24 | 2;\n                fcn.00401cdc();\n                uVar8 = uVar7;\n            }\n        }\ncode_r0x00402643:\n        *0x47d5b4 = *0x47d5b4 + (uVar8 - uVar9);\n        uVar7 = *puVar6;\n        *puVar6 = uVar8 | uVar7 & 0x80000003;\n        uVar4 = CONCAT31((uVar7 & 0x80000003) >> 8, 1);\n    }\ncode_r0x0040265c:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 1073
    },
    "00405964": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405964(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00405984(param_1, *(in_EAX + -4));\n        return;\n    }\n    fcn.00405a78();\n    return;\n}\n",
        "token_count": 73
    },
    "004087b8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.004087b8(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    uVar3 = 0;\n    iVar2 = fcn.004045c0();\n    if ((iVar2 != 0) && (((cVar1 = *in_EAX,  cVar1 + 0xbfU < 0x1a || (cVar1 == '_')) || (cVar1 + 0x9fU < 0x1a)))) {\n        iVar2 = fcn.004045c0();\n        if (1 < iVar2) {\n            iVar2 = iVar2 + -1;\n            iVar4 = 2;\n            do {\n                cVar1 = in_EAX[iVar4 + -1];\n                if (((9 < cVar1 - 0x30U) && (0x19 < cVar1 + 0xbfU)) && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))) {\n                    return 0;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 295
    },
    "00408ddc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00408ddc(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -4) + -4;\n}\n",
        "token_count": 38
    },
    "00408e14": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00408e14(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00402748();\n    }\n    return;\n}\n",
        "token_count": 46
    },
    "0040acfc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040acfc(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack44 = 0x40aec6;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar5 = 1;\n    fcn.00404308();\n    arg_8h = &fcn.0040acfc::var_8h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040a9c4(arg_8h);\n    iVar3 = fcn.004088f8();\n    if (iVar3 - 3U < 3) {\n        while (iVar3 = fcn.004045c0(),  iVar5 <= iVar3) {\n            uVar4 = *(in_EAX + -1 + iVar5);\n            if ((*((uVar4 >> 3) + 0x46f0f0) >> (uVar4 & 7) & 1) == 0) {\n                iVar3 = fcn.00408d10();\n                if (iVar3 == 0) {\n                    fcn.004045c8();\n                    iVar5 = iVar5 + 1;\n                }\n                else {\n                    iVar3 = fcn.00408d10();\n                    if (iVar3 == 0) {\n                        fcn.004045c8();\n                        iVar5 = iVar5 + 3;\n                    }\n                    else {\n                        iVar3 = fcn.00408d10();\n                        if (iVar3 == 0) {\n                            fcn.004045c8();\n                            iVar5 = iVar5 + 1;\n                        }\n                        else {\n                            cVar1 = *(in_EAX + -1 + iVar5);\n                            if ((cVar1 == 'Y') || (cVar1 == 'y')) {\n                                fcn.004045c8();\n                            }\n                            else {\n                                fcn.004044e8();\n                                fcn.004045c8();\n                            }\n                        }\n                    }\n                }\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                var_4h = fcn.0040bc20();\n                arg_8h = &fcn.0040acfc::var_10h;\n                fcn.00404818();\n                fcn.004045c8();\n                iVar5 = iVar5 + var_4h;\n            }\n        }\n    }\n    else {\n        if ((*0x47d7f4 == 4) || (*0x47d7f4 - 0x11U < 2)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if (bVar2) {\n            for (; iVar3 = fcn.004045c0(),  iVar5 <= iVar3; iVar5 = iVar5 + 1) {\n                cVar1 = *(in_EAX + -1 + iVar5);\n                if ((cVar1 != 'G') && (cVar1 != 'g')) {\n                    fcn.004044e8();\n                    fcn.004045c8();\n                }\n            }\n        }\n        else {\n            fcn.0040435c();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x40aecd;\n    iStack48 = 0x40aec5;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 889
    },
    "004220f8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004220f8(void)\n\n{\n    int16_t in_AX;\n    \n    if (((in_AX != 1) && (in_AX != 4)) && (in_AX != 8)) {\n        return 0;\n    }\n    return 1 << (in_AX & 0x1f);\n}\n",
        "token_count": 71
    },
    "00409e64": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e64(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    \n    ppcVar2 = arg_8h + -4;\n    pcVar1 = *ppcVar2;\n    while (**ppcVar2 == *(arg_8h + -5)) {\n        *ppcVar2 = *ppcVar2 + 1;\n    }\n    *(arg_8h + -0xc) = *ppcVar2 + (1 - pcVar1);\n    return;\n}\n",
        "token_count": 126
    },
    "0041aa60": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aa60(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.00418e54();\n        if (cVar1 != '\\0') break;\n        fcn.0041ab14();\n    }\n    fcn.00419c0c();\n    return;\n}\n",
        "token_count": 81
    },
    "0041aab8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aab8(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.00418e54();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.00419198();\n        if (cVar1 - 2U < 3) {\n            fcn.0041ab14();\n        }\n        fcn.0041af0c();\n        while( true ) {\n            cVar1 = fcn.00418e54();\n            if (cVar1 != '\\0') break;\n            fcn.0041acb0();\n        }\n        fcn.00419c0c();\n    }\n    fcn.00419c0c();\n    return;\n}\n",
        "token_count": 172
    },
    "00431884": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431884(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00413c30();\n    fcn.0042f5c0();\n    iVar1 = *(*(arg_8h + -8) + 8);\n    fcn.00413c80(&var_20h, \n                 ((*(iVar1 + 0x50) - *(iVar1 + 0x48)) + *(*(*(arg_8h + -4) + 0x30) + 0x4c)) - *(*(arg_8h + -4) + 0x4c));\n    fcn.0042f468();\n    return;\n}\n",
        "token_count": 184
    },
    "004418d0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004418d0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = fcn.0040bccc();\n    if (iVar1 != 0) {\n        fcn.00404858();\n    }\n    return unaff_EBX & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 88
    },
    "004473c4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004473c4(uint param_1, int32_t param_2)\n\n{\n    fcn.0043309c();\n    *(param_2 + 0x24) = *(param_2 + 0x24) & 0xfffffffc;\n    return;\n}\n",
        "token_count": 65
    },
    "0046ab9c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0046ab9c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar5 = 6;\n    do {\n        var_4h = 0;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    var_1ch = 0x46af4e;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046ab9c::var_20h;\n    var_14h = unaff_EDI;\n    var_10h = unaff_ESI;\n    fcn.004045c8();\n    if (*(arg_8h + -0xc) < in_EAX) {\n        in_EAX = *(arg_8h + -0xc) + 1;\n    }\n    iVar5 = *(arg_8h + -0x10);\n    *(arg_8h + -0x10) = 0;\n    iVar2 = fcn.004045c0();\n    iVar2 = iVar2 + 2;\n    fcn.004044e8();\n    var_24h = 0x46ac1a;\n    cVar1 = fcn.004085a4();\n    if (cVar1 == '\\0') {\n        for (; iVar5 < in_EAX; iVar5 = iVar5 + 3) {\n            if (0x4b < iVar2 + 4) {\n                var_24h = *(arg_8h + -4);\n                var_28h = *(arg_8h + -0x3c);\n                var_2ch = 0x46af88;\n                var_10h = *(arg_8h + -8);\n                fcn.00404680();\n                iVar2 = fcn.004045c0();\n                iVar2 = iVar2 + 2;\n            }\n            *(arg_8h + -0x40) = *(*(arg_8h + -0x18) + -1 + iVar5);\n            if (in_EAX - iVar5 == 1) {\n                var_14h = *(arg_8h + -4);\n                var_18h = 0x46ad8d;\n                fcn.004044e8();\n                var_18h = var_10h;\n                var_1ch = 0x46adaa;\n                fcn.004044e8();\n                var_1ch = var_14h;\n                var_20h = 0x46af94;\n                var_24h = 0x46adc2;\n                fcn.00404680();\n            }\n            else if (in_EAX - iVar5 == 2) {\n                *(arg_8h + -0x44) = *(*(arg_8h + -0x18) + iVar5);\n                var_14h = *(arg_8h + -4);\n                var_18h = 0x46adf4;\n                fcn.004044e8();\n                var_1ch = 0x46ae1c;\n                fcn.004044e8();\n                var_20h = 0x46ae39;\n                fcn.004044e8();\n                var_20h = 0x46af7c;\n                var_28h = 0x46ae51;\n                fcn.00404680();\n            }\n            else {\n                *(arg_8h + -0x44) = *(*(arg_8h + -0x18) + iVar5);\n                *(arg_8h + -0x48) = *(*(arg_8h + -0x18) + 1 + iVar5);\n                var_14h = *(arg_8h + -4);\n                var_18h = 0x46ae94;\n                fcn.004044e8();\n                var_18h = var_24h;\n                var_1ch = 0x46aebc;\n                fcn.004044e8();\n                var_1ch = var_28h;\n                var_20h = 0x46aee4;\n                fcn.004044e8();\n                var_20h = var_2ch;\n                var_24h = 0x46aefe;\n                fcn.004044e8();\n                var_20h = var_30h;\n                var_28h = 0x46af11;\n                fcn.00404680();\n            }\n            iVar2 = iVar2 + 4;\n        }\n    }\n    else {\n        for (; iVar5 < in_EAX; iVar5 = iVar5 + 1) {\n            uVar3 = *(*(arg_8h + -0x18) + -1 + iVar5);\n            if ((*(arg_8h + -0x38 + (uVar3 >> 3)) >> (uVar3 & 7) & 1) == 0) {\n                fcn.004044e8();\n            }\n            else if (*(*(arg_8h + -0x18) + -1 + iVar5) == ' ') {\n                fcn.004043a0();\n            }\n            else {\n                fcn.00408880();\n                fcn.0040460c();\n            }\n            iVar4 = fcn.004045c0();\n            if (0x4b < iVar4 + iVar2) {\n                var_20h = *(arg_8h + -8);\n                fcn.00404680();\n                iVar2 = fcn.004045c0();\n                iVar2 = iVar2 + 2;\n            }\n            fcn.004045c8();\n            iVar4 = fcn.004045c0();\n            iVar2 = iVar2 + iVar4;\n        }\n    }\n    fcn.004045c8();\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x46af55;\n    var_1ch = 0x46af4d;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 1515
    },
    "0040f780": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040f780(uint param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint var_3ch;\n    uint var_2ch;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    uint var_12h;\n    uchar var_dh;\n    int32_t var_ch;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    uVar3 = *in_EAX & 0xfff;\n    uVar4 = *param_2 & 0xfff;\n    var_dh = 1;\n    puStack80 = 0x40f7b4;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0040d3a4();\n    uStack84 = 0x40fb20;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    if (uVar3 < 0x10f) {\n        if (uVar4 < 0x10f) {\n            if ((uVar3 == 0x101) || (uVar4 == 0x101)) {\n                puStack92 = 0x40f7f2;\n                puStack80 = &stack0xfffffffc;\n                fcn.0040d3a4();\n                uStack96 = 0x40f870;\n                uStack100 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff9c;\n                puStack92 = &stack0xfffffffc;\n                fcn.0040d7d8();\n                if (uVar3 == 0x101) {\n                    (**0x47d86c)();\n                }\n                if (uVar4 == 0x101) {\n                    fcn.0040d7d8();\n                    (**0x47d86c)();\n                    var_dh = fcn.0040f780();\n                }\n                else {\n                    var_dh = fcn.0040f780();\n                }\n                *in_FS_OFFSET = uStack100;\n                puStack92 = 0x40fb0a;\n                uStack96 = 0x40f86f;\n                fcn.0040d3ac();\n                return;\n            }\n            puStack92 = 0x40f882;\n            puStack80 = &stack0xfffffffc;\n            var_dh = fcn.0040fc50();\n        }\n        else {\n            puStack92 = 0x40f894;\n            puStack80 = &stack0xfffffffc;\n            cVar1 = fcn.004110d0();\n            if (cVar1 == '\\0') {\n                puStack92 = 0x40f89d;\n                fcn.0040d39c();\n            }\n            else {\n                puStack92 = &fcn.0040f780::var_12h + 2;\n                uStack96 = 0x40f8b6;\n                cVar1 = (**(*var_1ch + 4))();\n                if (cVar1 == '\\0') {\n                    puStack92 = 0x40f950;\n                    fcn.0040dd5c();\n                    if (uVar3 != (var_2ch & 0xfff)) {\n                        puStack92 = 0x40f962;\n                        fcn.0040d394();\n                    }\n                    puStack92 = 0x40f96d;\n                    var_dh = fcn.0040fc50();\n                }\n                else if (*var_4h == var_12h._2_2_) {\n                    puStack92 = var_ch;\n                    uStack96 = 0x40f929;\n                    uVar2 = (**(*var_1ch + 0x34))();\n                    var_dh = *(var_ch * 2 + 0x46f44c + (uVar2 & 0x7f));\n                }\n                else {\n                    puStack92 = 0x40f8d9;\n                    fcn.0040dd5c();\n                    if ((var_2ch & 0xfff) != var_12h._2_2_) {\n                        puStack92 = 0x40f8ec;\n                        fcn.0040d394();\n                    }\n                    puStack92 = var_ch;\n                    uStack96 = 0x40f8fe;\n                    uVar2 = (**(*var_1ch + 0x34))();\n                    var_dh = *(var_ch * 2 + 0x46f44c + (uVar2 & 0x7f));\n                }\n            }\n        }\n    }\n    else {\n        puStack92 = 0x40f97f;\n        puStack80 = &stack0xfffffffc;\n        cVar1 = fcn.004110d0();\n        if (cVar1 == '\\0') {\n            puStack92 = 0x40f988;\n            fcn.0040d39c();\n        }\n        else {\n            puStack92 = &fcn.0040f780::var_12h;\n            uStack96 = 0x40f9a1;\n            cVar1 = (**(*var_18h + 8))();\n            if (cVar1 == '\\0') {\n                if (uVar4 < 0x10f) {\n                    puStack92 = 0x40fa38;\n                    fcn.0040dd5c();\n                    if (uVar4 != (var_2ch & 0xfff)) {\n                        puStack92 = 0x40fa4a;\n                        fcn.0040d394();\n                    }\n                    puStack92 = 0x40fa55;\n                    var_dh = fcn.0040fc50();\n                }\n                else {\n                    puStack92 = 0x40fa67;\n                    cVar1 = fcn.004110d0();\n                    if (cVar1 == '\\0') {\n                        puStack92 = 0x40fa70;\n                        fcn.0040d39c();\n                    }\n                    else {\n                        puStack92 = &fcn.0040f780::var_12h + 2;\n                        uStack96 = 0x40fa89;\n                        cVar1 = (**(*var_1ch + 4))();\n                        if (cVar1 == '\\0') {\n                            puStack92 = 0x40fb0a;\n                            fcn.0040d39c();\n                        }\n                        else if (uVar3 == var_12h._2_2_) {\n                            puStack92 = var_ch;\n                            uStack96 = 0x40faef;\n                            uVar2 = (**(*var_1ch + 0x34))();\n                            var_dh = *(var_ch * 2 + 0x46f44c + (uVar2 & 0x7f));\n                        }\n                        else {\n                            puStack92 = 0x40faa2;\n                            fcn.0040dd5c();\n                            if ((var_2ch & 0xfff) != var_12h._2_2_) {\n                                puStack92 = 0x40fab5;\n                                fcn.0040d394();\n                            }\n                            puStack92 = var_ch;\n                            uStack96 = 0x40fac7;\n                            uVar2 = (**(*var_1ch + 0x34))();\n                            var_dh = *(var_ch * 2 + 0x46f44c + (uVar2 & 0x7f));\n                        }\n                    }\n                }\n            }\n            else if (uVar4 == var_12h) {\n                puStack92 = var_ch;\n                uStack96 = 0x40fa0a;\n                uVar2 = (**(*var_18h + 0x34))();\n                var_dh = *(var_ch * 2 + 0x46f44c + (uVar2 & 0x7f));\n            }\n            else {\n                puStack92 = 0x40f9ba;\n                fcn.0040dd5c();\n                if ((var_2ch & 0xfff) != var_12h) {\n                    puStack92 = 0x40f9cd;\n                    fcn.0040d394();\n                }\n                puStack92 = var_ch;\n                uStack96 = 0x40f9df;\n                uVar2 = (**(*var_18h + 0x34))();\n                var_dh = *(var_ch * 2 + 0x46f44c + (uVar2 & 0x7f));\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x40fb27;\n    uStack84 = 0x40fb1f;\n    fcn.0040d3ac();\n    return;\n}\n",
        "token_count": 2018
    },
    "0040fc50": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong fcn.0040fc50(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    float10 fVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint32_t in_stack_ffffffdc;\n    \n    uVar2 = fcn.0040fb3c(1);\n    uVar1 = *((uVar2 & 0xffff) + 0x46f3f8);\n    uVar3 = fcn.0040fb3c();\n    uVar2 = uVar3 & 0xff00;\n    // switch table (9 cases) at 0x40fca5\n    switch(*(uVar1 * 9 + 0x46f410 + *((uVar3 & 0xffff) + 0x46f3f8))) {\n    case 0:\n        uVar2 = fcn.0040d39c();\n        break;\n    case 1:\n        uVar2 = fcn.0040fb60();\n        break;\n    case 2:\n        fcn.0040dee0();\n        fcn.0040dee0();\n        uVar2 = fcn.0040fb60();\n        break;\n    case 3:\n    case 7:\n        fVar4 = fcn.0040e144();\n        fVar4 = fcn.0040e144(fVar4);\n        uVar3 = SUB84(fVar4, 0);\n        uVar2 = fcn.0040fbb0();\n        in_stack_ffffffdc = uVar3 & 0xffffff00 | uVar2 & 0xff;\n        break;\n    case 4:\n        fVar4 = fcn.0040e280();\n        fVar4 = fcn.0040e280(fVar4 / *0x40fdb0);\n        uVar3 = SUB84(fVar4 / *0x40fdb0, 0);\n        uVar2 = fcn.0040fbb0();\n        in_stack_ffffffdc = uVar3 & 0xffffff00 | uVar2 & 0xff;\n        break;\n    case 5:\n        uVar2 = fcn.0040fbd8();\n        break;\n    case 6:\n        fcn.0040e108();\n        fcn.0040e108();\n        uVar2 = fcn.0040fb60();\n        break;\n    case 8:\n        uVar5 = fcn.0040dfbc();\n        uVar6 = fcn.0040dfbc();\n        uVar3 = uVar6;\n        uVar2 = fcn.0040fb74(uVar3, uVar6 >> 0x20, uVar5, uVar5 >> 0x20);\n        in_stack_ffffffdc = uVar3 & 0xffffff00 | uVar2 & 0xff;\n    }\n    return CONCAT44(in_stack_ffffffdc, uVar2 & 0xffffff00 | in_stack_ffffffdc & 0xff);\n}\n",
        "token_count": 662
    },
    "00411f24": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411f24(float arg_8h, float arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    uint8_t *puVar2;\n    int32_t in_EDX;\n    double *pdVar3;\n    code *var_8h;\n    uint var_4h;\n    \n    var_8h = *(in_EDX + 8);\n    puVar2 = fcn.00411638();\n    uVar1 = *puVar2;\n    if ((var_8h & 0xff000000) == 0xff000000) {\n        pdVar3 = (var_8h & 0xffffff) + in_EAX;\n    // switch table (5 cases) at 0x411f6c\n        switch(uVar1 & 0x7f) {\n        case 0:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 1:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 2:\n            *pdVar3 = arg_8h;\n            *(pdVar3 + 4) = arg_ch;\n            *(pdVar3 + 1) = arg_10h;\n            break;\n        case 3:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n            break;\n        case 4:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x412118);\n        }\n    }\n    else {\n        if ((var_8h & 0xff000000) == 0xfe000000) {\n            var_8h = *(*in_EAX + var_8h);\n        }\n        if (*(in_EDX + 0x10) == -0x80000000) {\n    // switch table (5 cases) at 0x412008\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x412118));\n            }\n        }\n        else {\n    // switch table (5 cases) at 0x41209b\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x412118));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 810
    },
    "00415af0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00415af0(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 4) + 0x1f;\n    if (iVar1 < 0) {\n        iVar1 = *(in_EAX + 4) + 0x3e;\n    }\n    iStack16 = param_1;\n    if (-1 < (iVar1 >> 5) + -1) {\n        iVar3 = 0;\n        iStack16 = iVar1 >> 5;\n        do {\n            if (*0x415b64 != *(*(in_EAX + 8) + iVar3 * 4)) {\n                uVar2 = 0;\n                do {\n                    bVar4 = uVar2 < 0x1f;\n                    if (uVar2 < 0x20) {\n                        bVar4 = (*(*(in_EAX + 8) + iVar3 * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                    }\n                    if (!bVar4) {\n                        iVar1 = iVar3 * 0x20 + (uVar2 & 0x7f);\n                        if (*(in_EAX + 4) <= iVar1) {\n                            iVar1 = *(in_EAX + 4);\n                        }\n                        goto code_r0x00415b5c;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 != ' ');\n            }\n            iVar3 = iVar3 + 1;\n            iStack16 = iStack16 + -1;\n        } while (iStack16 != 0);\n    }\n    iVar1 = *(in_EAX + 4);\ncode_r0x00415b5c:\n    return CONCAT44(iStack16, iVar1);\n}\n",
        "token_count": 436
    },
    "004180f0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004180f0(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00408a4c(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 71
    },
    "00419a54": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419a54(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041aa04(param_1);\n    // switch table (6 cases) at 0x419a89\n    switch(uVar1 & 0x7f) {\n    case 0:\n        fcn.0040435c();\n        break;\n    default:\n        fcn.00418cac();\n        break;\n    case 7:\n        fcn.004191bc();\n        fcn.004043f8();\n        fcn.00404810();\n        fcn.004191bc();\n        break;\n    case 8:\n        fcn.0040435c();\n        break;\n    case 9:\n        fcn.0040435c();\n        break;\n    case 0xd:\n        fcn.0040435c();\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0041ab14": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041ab14(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x41aca3;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.0041aa04();\n    // switch table (21 cases) at 0x41ab4b\n    switch(uVar1 & 0x7f) {\n    case 1:\n        fcn.0041aa60(&stack0xfffffffc);\n        break;\n    case 2:\n        fcn.0041af0c();\n        break;\n    case 3:\n        fcn.0041af0c();\n        break;\n    case 4:\n        fcn.0041af0c();\n        break;\n    case 5:\n        fcn.0041af0c();\n        break;\n    case 6:\n    case 7:\n        fcn.0041a828();\n        break;\n    case 10:\n        fcn.0041aa88(&stack0xfffffffc);\n        break;\n    case 0xb:\n        fcn.0041aa18();\n        break;\n    case 0xc:\n        fcn.0041aa88(&stack0xfffffffc);\n        break;\n    case 0xe:\n        fcn.0041aab8(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.0041af0c();\n        break;\n    case 0x10:\n        fcn.0041af0c();\n        break;\n    case 0x11:\n        fcn.0041af0c();\n        break;\n    case 0x12:\n        fcn.0041aa88(&stack0xfffffffc);\n        break;\n    case 0x13:\n        fcn.0041af0c();\n        break;\n    case 0x14:\n        fcn.0041aa88(&stack0xfffffffc);\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41acaa;\n    uStack20 = 0x41aca2;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 533
    },
    "0045c1b0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c1b0(uint param_1, uint8_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0045bcf0(0xb, (param_2 ^ 1) & 0x7f, 0);\n    sub.user32.dll_SendMessageA(uVar1);\n    if (param_2 != 1) {\n        fcn.0042ffd4();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004600a0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004600a0(uint param_1, ushort param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    bool bVar2;\n    \n    *(in_EAX + 0x2a2) = param_2;\n    uVar1 = 0;\n    do {\n        bVar2 = uVar1 < 0xf;\n        if (uVar1 < 0x10) {\n            bVar2 = (*(in_EAX + ((uVar1 & 0x7f) >> 3) + 0x2a2) >> (uVar1 & 7) & 1) != 0;\n        }\n        *(in_EAX + (uVar1 & 0xff) * 0x10 + 0x211) = bVar2;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 != '\\t');\n    (**(*in_EAX + 0x7c))();\n    return;\n}\n",
        "token_count": 225
    },
    "004600e4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.004600e4(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    bool bVar2;\n    \n    uVar1 = 0;\n    do {\n        bVar2 = uVar1 < 0xf;\n        if (uVar1 < 0x10) {\n            bVar2 = (*(in_EAX + ((uVar1 & 0x7f) >> 3) + 0x2a6) >> (uVar1 & 7) & 1) != 0;\n        }\n        *(in_EAX + (uVar1 & 0xff) * 0x10 + 0x213) = bVar2;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 != '\\t');\n    (**(*in_EAX + 0x7c))();\n    return;\n}\n",
        "token_count": 197
    },
    "00403f08": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00403f08(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0x47d634 != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0x47d634 == ppiVar1) {\n            *in_FS_OFFSET = **0x47d634;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0x47d634) {\n                *ppiVar1 = **0x47d634;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00406750": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00406750(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406748();\n    if (iVar1 != 0) {\n        if (*0x47d70c == -1) {\n            fcn.00404278();\n        }\n        iVar1 = fcn.0040673c();\n        if (iVar1 == 0) {\n            fcn.00404278();\n        }\n        else {\n            sub.kernel32.dll_TlsSetValue(*0x47d70c, iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0040abd4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040abd4(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40ac39;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    for (iVar2 = 1; *(iVar2 * 4 + 0x47d818) != -1; iVar2 = iVar2 + 1) {\n        if (iVar2 == 7) goto code_r0x0040ac23;\n    }\n    fcn.004044f8();\n    uVar1 = fcn.004088f8();\n    *(iVar2 * 4 + 0x47d818) = uVar1;\ncode_r0x0040ac23:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40ac40;\n    uStack24 = 0x40ac38;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 266
    },
    "00413ca8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00413ca8(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*in_EAX == -1) && (in_EAX[1] == -1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "00418974": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418974(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00415324();\n    if (iVar1 != -1) {\n        fcn.004151b8();\n    }\n    iVar1 = fcn.00415324();\n    if (iVar1 < 0) {\n        fcn.0041516c();\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0042f3b8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f3b8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004036bc();\n    if (cVar1 == '\\0') {\n        fcn.0042fee0();\n    }\n    if (param_2 == in_EAX[0xc]) {\n        fcn.0042f468();\n    }\n    else {\n        fcn.00430cf0();\n    }\n    if ((param_2 == 0) || (param_2 == -1)) {\n        (**(*in_EAX + 0x68))();\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "004412bc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004412bc(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00441288();\n    if (iVar1 == -1) {\n        fcn.0043e6a0();\n    }\n    fcn.00441164();\n    return;\n}\n",
        "token_count": 65
    },
    "00442b34": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442b34(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((in_EDX & 0x10) == 0) {\n        iVar1 = sub.user32.dll_GetMenuItemID();\n        if (iVar1 != -1) {\n            iVar3 = fcn.00442378();\n        }\n    }\n    else {\n        sub.user32.dll_GetSubMenu();\n        iVar3 = fcn.00442378();\n    }\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00446684();\n    }\n    return uVar2;\n}\n",
        "token_count": 180
    },
    "0044cff4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0044cff4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    *(in_EAX + 0x60) = uVar1;\n    iVar2 = -0x16;\n    do {\n        sub.user32.dll_LoadCursorA();\n        fcn.0044d0ac();\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != -1);\n    return;\n}\n",
        "token_count": 127
    },
    "0044d35c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044d35c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = 0;\n    if (param_2 != -1) {\n        for (puVar2 = *(in_EAX + 0x5c); (puVar2 != NULL && (param_2 != puVar2[1])); puVar2 = *puVar2) {\n        }\n        if (puVar2 == NULL) {\n            uVar1 = *(in_EAX + 0x60);\n        }\n        else {\n            uVar1 = puVar2[2];\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "00453e14": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453e14(uint param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x453e73;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    iVar1 = (**(*in_EAX + 0x60))();\n    if (iVar1 == -1) {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n    }\n    *in_FS_OFFSET = param_1;\n    uStack20 = 0x453e7a;\n    uStack24 = 0x453e72;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 215
    },
    "00456f50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456f50(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int16_t *in_ECX;\n    int16_t in_DX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        bVar1 = false;\n        if (-1 < arg_8h) {\n            arg_8h = arg_8h + 1;\n            do {\n                if (in_DX == *in_ECX) {\n                    bVar1 = true;\n                    break;\n                }\n                in_ECX = in_ECX + 1;\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n        }\n        if (!bVar1) {\n            (**(*in_EAX + 0x68))();\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "004664b4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004664b4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x466530;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.004044e8();\n    iVar1 = (***0x47bdcc)();\n    if (iVar1 == 0) {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x466537;\n    uStack28 = 0x46652f;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 211
    },
    "00469b50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00469b50(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = 0x469b71;\n    fcn.004047a8();\n    uStack44 = 0x469c25;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x469b89;\n    puStack40 = &stack0xfffffffc;\n    piVar1 = fcn.00469c34();\n    uStack56 = 0x469bfb;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    iVar2 = (**(*piVar1 + 0x14))();\n    (**(*piVar1 + 0xc))();\n    (**(*in_EAX + 0x20))();\n    uVar3 = iVar2 - 2;\n    if (-1 < uVar3) {\n        do {\n            (**(*piVar1 + 0xc))();\n            (**(*in_EAX + 0x60))();\n            uVar3 = uVar3 - 1;\n        } while (uVar3 < 0x80000000);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x469c02;\n    uStack56 = 0x469bfa;\n    fcn.0040cbb8();\n    return;\n}\n",
        "token_count": 429
    },
    "00402d04": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d04(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    \n    if (*param_2 < param_1) {\n        param_1 = *param_2;\n    }\n    *in_EAX = param_1;\n    fcn.004028e0();\n    return;\n}\n",
        "token_count": 84
    },
    "00403068": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403068(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    \n    param_1 = param_1 & 0xff;\n    do {\n        if (param_1 == 0) {\n            return;\n        }\n        param_1 = param_1 - 1;\n        cVar1 = *in_EAX;\n        cVar2 = *param_2;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + 1;\n    } while (cVar1 == cVar2);\n    return;\n}\n",
        "token_count": 148
    },
    "00403da8": {
        "rules": [
            "calculate modulo 256 via x86 assembly",
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403da8(int32_t *arg_8h)\n\n{\n    fcn.0040282c();\n    return;\n}\n",
        "token_count": 34
    },
    "0040b74c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040b74c(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40b807;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    uVar2 = fcn.0040b4e8();\n    uVar2 = uVar2 & 0xff;\n    if (7 < uVar2 - 3) {\n        if (uVar2 == 0xb) {\n            in_stack_ffffffd4 = 0x40b7a5;\n            iVar3 = fcn.0040b580(&stack0xfffffffc);\n            goto code_r0x0040b7da;\n        }\n        if (9 < uVar2 - 0xc) {\n            var_ch = *var_4h;\n            var_8h._0_1_ = 0;\n            arg_ch = &fcn.0040b74c::var_ch;\n            in_stack_ffffffd4 = 0;\n            fcn.004065fc();\n            iVar3 = fcn.0040b1a8(in_stack_ffffffd4, arg_ch);\n            goto code_r0x0040b7da;\n        }\n    }\n    iVar3 = fcn.0040b16c();\ncode_r0x0040b7da:\n    cVar1 = fcn.004036bc();\n    if (cVar1 != '\\0') {\n        *(iVar3 + 0xc) = var_4h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x40b80e;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 489
    },
    "0040baa4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040baa4(int32_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004045c0();\n    iVar4 = 1;\n    iVar3 = 1;\n    while ((iVar3 < iVar1 && (iVar4 < in_EDX))) {\n        iVar4 = iVar4 + 1;\n        uVar2 = *(in_EAX + -1 + iVar3);\n        if ((*((uVar2 >> 3) + 0x46f0f0) >> (uVar2 & 7) & 1) == 0) {\n            iVar3 = iVar3 + 1;\n        }\n        else {\n            iVar3 = fcn.0040bc5c();\n        }\n    }\n    if (((iVar4 == in_EDX) && (iVar3 < iVar1)) &&\n       (uVar2 = *(in_EAX + -1 + iVar3),  (*((uVar2 >> 3) + 0x46f0f0) >> (uVar2 & 7) & 1) != 0)) {\n        iVar3 = fcn.0040bc5c();\n        iVar3 = iVar3 + -1;\n    }\n    *in_ECX = iVar4;\n    *arg_8h = iVar3;\n    return;\n}\n",
        "token_count": 358
    },
    "0040be80": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040be80(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint uVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint var_1h;\n    \n    uVar3 = fcn.0040be0c(arg_8h + -0x14);\n    sub.kernel32.dll_GetCPInfo(uVar3);\n    for (iVar5 = 0; (iVar5 < 0xc && ((*(arg_8h + -0xe + iVar5) | *(arg_8h + -0xd + iVar5)) != 0)); iVar5 = iVar5 + 2) {\n        var_1h._0_1_ = *(arg_8h + -0xe + iVar5);\n        uVar1 = *(arg_8h + -0xd + iVar5);\n        if (var_1h <= uVar1) {\n            cVar4 = (uVar1 - var_1h) + '\\x01';\n            do {\n                puVar2 = (var_1h >> 3) + 0x46f0f0;\n                *puVar2 = *puVar2 | '\\x01' << (var_1h & 7);\n                var_1h._0_1_ = var_1h + 1;\n                cVar4 = cVar4 + -1;\n            } while (cVar4 != '\\0');\n        }\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "0040c714": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c714(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    \n    uVar1 = fcn.0040c5fc();\n    piVar2 = in_EAX + 4 + (uVar1 & 0xff) * 4;\n    do {\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) break;\n    } while (piVar2 != *param_2);\n    fcn.0040c548();\n    *(*param_2 + 4) = *param_2;\n    uVar3 = fcn.0040c548();\n    *(*param_2 + 4) = uVar3;\n    return;\n}\n",
        "token_count": 188
    },
    "0042057c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0042057c(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (in_EAX < 0) {\n        sub.user32.dll_GetSysColor(in_EAX & 0xff);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "0043af54": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0043af54(void)\n\n{\n    uint8_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x43afda;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar2 = *0x47db78 == 0;\n    *0x47db78 = *0x47db78 + -1;\n    if (bVar2) {\n        uVar1 = sub.kernel32.dll_GetVersion();\n        *0x47db74 = 3 < uVar1;\n        fcn.0043ad20();\n        fcn.004148f8();\n        fcn.00414998();\n        fcn.00414944();\n        fcn.00414944();\n        fcn.00414944();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 231
    },
    "004439e0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.004439e0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.00404308();\n    iVar3 = 1;\n    iVar1 = fcn.004045c0();\n    if (0 < iVar1) {\n        do {\n            uVar2 = *(in_EAX + -1 + iVar3);\n            if ((*(*0x47c2a8 + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) {\n                if (((*(in_EAX + -1 + iVar3) == '&') && (0 < iVar1 - iVar3)) &&\n                   (iVar3 = iVar3 + 1,  *(in_EAX + -1 + iVar3) != '&')) {\n                    fcn.004044e8();\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= iVar1);\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "00450f3c": {
        "rules": [
            "calculate modulo 256 via x86 assembly",
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00450f3c(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 8;\n    do {\n        var_ch = var_ch - 1;\n    } while (var_ch != 0);\n    var_20h = 0x451176;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00450f3c::var_24h;\n    _var_8h = 0.0;\n    var_28h = 0x450f71;\n    fcn.004085dc();\n    var_28h = 0x450f7b;\n    fcn.0040435c();\n    var_28h = 0x450f82;\n    iVar3 = fcn.004045c0();\n    if (iVar3 != 0) {\n        var_2ch = 0x451149;\n        var_30h = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00450f3c::var_30h;\n        var_34h = &fcn.00450f3c::var_18h;\n        var_38h = 0x450fad;\n        var_28h = &stack0xfffffffc;\n        fcn.00404818();\n        var_38h = 0x450fb5;\n        cVar1 = fcn.004518f8();\n        if (cVar1 != '\\0') {\n            var_38h = &fcn.00450f3c::var_1ch;\n            var_3ch = 0x450fcb;\n            fcn.00451720(var_38h);\n        }\n        var_3ch = &fcn.00450f3c::var_20h;\n        var_40h = 0x450fdd;\n        fcn.00451720(var_3ch);\n        var_40h = 0x450fea;\n        fcn.004088f8();\n        var_40h = 0x450ff6;\n        fcn.0040862c();\n        var_40h = 0x451000;\n        fcn.0040435c();\n        var_40h = &fcn.00450f3c::var_28h;\n        fcn.00451720(var_40h);\n        uVar2 = fcn.004519e8();\n        var_ch = var_ch & 0xffff | (uVar2 & 0xff) << 0x10;\n        fcn.0040862c();\n        fcn.0040435c();\n        fcn.00451720(&fcn.00450f3c::var_30h);\n        fcn.004088f8();\n        fVar4 = fcn.00409ba0();\n        _var_8h = fVar4;\n        fcn.0040862c();\n        fcn.0040435c();\n        iVar3 = (**0x46fc04)();\n        if (0 < iVar3) {\n            var_34h = &fcn.00450f3c::var_10h;\n            var_38h = 0x4510b6;\n            fcn.00451720(var_34h);\n            var_38h = &fcn.00450f3c::var_38h;\n            var_3ch = 0x4510c9;\n            fcn.00451720(var_38h);\n            var_3ch = 0x4510d3;\n            fcn.004088f8();\n            var_3ch = &fcn.00450f3c::var_3ch;\n            var_40h = 0x4510e8;\n            fcn.00451720(var_3ch);\n            var_40h = 0x4510f2;\n            fcn.004088f8();\n            var_40h = &fcn.00450f3c::var_40h;\n            fcn.00451720(var_40h);\n            uVar2 = fcn.004088f8();\n            var_ch = var_ch & 0xffff0000 | uVar2;\n            var_30h = 0;\n            fVar4 = fcn.00409a00(0);\n            _var_8h = fVar4 + _var_8h;\n        }\n        var_34h = 0x451135;\n        fcn.0040862c();\n        var_34h = 0x45113f;\n        fcn.0040435c();\n        *in_FS_OFFSET = var_30h;\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x45117d;\n    var_20h = 0x451175;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 1367
    },
    "004665f8": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004665f8(uchar *arg_8h, uchar *arg_ch, uchar *arg_10h, uchar *arg_14h, uint arg_18h)\n\n{\n    int32_t in_EAX;\n    uint32_t in_ECX;\n    uint8_t in_DL;\n    \n    *arg_14h = *(*(in_EAX + 0x80) + (in_DL >> 2));\n    *arg_10h = *(*(in_EAX + 0x80) + ((in_DL & 3) << 4 | (in_ECX & 0xff) >> 4));\n    *arg_ch = *(*(in_EAX + 0x80) + ((in_ECX & 0xf) << 2 | arg_18h >> 6));\n    *arg_8h = *(*(in_EAX + 0x80) + (arg_18h & 0x3f));\n    return;\n}\n",
        "token_count": 211
    },
    "00402d20": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402d20(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    uVar2 = *param_2;\n    piVar4 = in_EAX + 1;\n    piVar5 = param_2 + 1;\n    iVar1 = *in_EAX - uVar2;\n    if (*in_EAX < uVar2 || iVar1 == 0) {\n        uVar2 = uVar2 + iVar1;\n    }\n    uVar3 = uVar2 >> 2;\n    do {\n        if (uVar3 == 0) {\ncode_r0x00402d63:\n            uVar3 = uVar2 & 3;\n            uVar2 = uVar3;\n            if ((uVar3 == 0) ||\n               ((*piVar4 == *piVar5 &&\n                ((uVar2 = uVar3 - 1,  uVar2 == 0 ||\n                 ((*(piVar4 + 1) == *(piVar5 + 1) &&\n                  ((uVar2 = uVar3 - 2,  uVar2 == 0 || (*(piVar4 + 2) == *(piVar5 + 2))))))))))) {\n                iVar1 = iVar1 * 2;\n            }\ncode_r0x00402d9e:\n            return CONCAT44(uVar2, iVar1);\n        }\n        if (*piVar4 != *piVar5) goto code_r0x00402d9e;\n        if (uVar3 == 1) {\n            piVar4 = piVar4 + 1;\n            piVar5 = piVar5 + 1;\n            goto code_r0x00402d63;\n        }\n        if (piVar4[1] != piVar5[1]) goto code_r0x00402d9e;\n        piVar4 = piVar4 + 2;\n        piVar5 = piVar5 + 2;\n        uVar3 = uVar3 - 2;\n    } while( true );\n}\n",
        "token_count": 491
    },
    "00402da4": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00402da4(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x00402dd4:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x00402dd4;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 325
    },
    "0040353c": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403571)\n// WARNING: Removing unreachable block (ram,0x00403577)\n// WARNING: Removing unreachable block (ram,0x0040357e)\n// WARNING: Removing unreachable block (ram,0x00403584)\n// WARNING: Removing unreachable block (ram,0x0040358a)\n\nvoid __fastcall fcn.0040353c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    *param_2 = in_EAX;\n    uVar2 = *(in_EAX + -0x28);\n    uVar1 = uVar2 >> 2;\n    piVar3 = param_2 + 1;\n    while (uVar1 = uVar1 - 1,  uVar1 != 0) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (; *(in_EAX + -0x24) != NULL; in_EAX = **(in_EAX + -0x24)) {\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00404704": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404704(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00404bd0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404bd0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00408c0c": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408c0c(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    uVar2 = 0xffffffff;\n    puVar4 = param_2;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    for (uVar3 = ~uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = ~uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "00408c34": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408c34(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    \n    bVar4 = param_1 == 0;\n    iVar1 = param_1;\n    puVar3 = param_2;\n    if (!bVar4) {\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar4 = *puVar3 == '\\0';\n            puVar3 = puVar3 + 1;\n        } while (!bVar4);\n        if (bVar4) {\n            iVar1 = iVar1 + 1;\n        }\n    }\n    for (uVar2 = param_1 - iVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = param_1 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 336
    },
    "004191bc": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004191bc(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0x14) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.00419208();\n            uVar2 = *(in_EAX + 0x14);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "0041b404": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b404(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0xc) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0xc) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041b4d8();\n            uVar2 = *(in_EAX + 0xc);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "00466d68": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00466d68(void)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    uint8_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t arg_18h;\n    uint32_t arg_14h;\n    uint32_t unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    ulong uVar7;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    ppcVar1 = *0x47bdcc;\n    var_1ch = &stack0xfffffffc;\n    var_ch = 9;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x46715f;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00466d68::var_24h;\n    *(in_EAX + 0x5e) = 1;\n    puVar2 = &stack0xfffffffc;\n    var_10h = unaff_EBX;\n    if (*(in_EAX + 0x50) != 0) {\n        var_18h = unaff_EDI;\n        var_14h = unaff_ESI;\n        fcn.00463e84();\n        var_28h = &fcn.00466d68::var_8h;\n        fcn.00404818();\n        while (iVar4 = (**ppcVar1)(),  0 < iVar4) {\n            fcn.0046638c();\n            fcn.0040460c();\n        }\n        while (iVar4 = (**ppcVar1)(),  0 < iVar4) {\n            fcn.0046638c();\n            fcn.0040460c();\n        }\n        uVar5 = fcn.004045c0();\n        *(in_EAX + 0x50) = uVar5;\n        fcn.00404308();\n        while (iVar4 = fcn.004045c0(),  4 < iVar4) {\n            fcn.00404818(&fcn.00466d68::var_4h);\n            fcn.004045c0(&fcn.00466d68::var_8h);\n            fcn.00404818();\n            fcn.0046667c(&stack0xffffffec, &fcn.00466d68::var_ch + -3, &fcn.00466d68::var_ch + -2, \n                         var_4h & 0xffffff00 | *(var_4h + 3), var_4h & 0xffffff00 | *(var_4h + 2));\n            fcn.004044e8(var_ch);\n            fcn.004044e8(var_14h);\n            fcn.004044e8(var_18h);\n            var_28h = var_1ch;\n            fcn.00404680();\n        }\n        while ((iVar4 = fcn.004045c0(),  0 < iVar4 && (iVar4 = fcn.004045c0(),  *((var_8h - 1) + iVar4) == '='))) {\n            var_28h = &fcn.00466d68::var_8h;\n            fcn.004045c0();\n            fcn.00404818();\n        }\n        uVar7 = fcn.004045c0();\n        iVar4 = uVar7;\n        if (0 < iVar4) {\n            uVar3 = **(in_EAX + 0x80);\n            arg_14h = uVar7 >> 0x20 & 0xffffff00 | uVar3;\n            uVar6 = var_10h & 0xffffff;\n            var_10h = uVar6 | uVar3 << 0x18;\n            if (iVar4 == 1) {\n                fcn.0046667c(&stack0xffffffec, &fcn.00466d68::var_ch + -3, &fcn.00466d68::var_ch + -2, arg_14h, \n                             var_8h & 0xffffff00 | uVar3);\n                fcn.004044e8();\n                fcn.004045c8();\n            }\n            else if (iVar4 == 2) {\n                arg_18h = var_8h & 0xffffff00 | uVar3;\n                fcn.0046667c(&stack0xffffffec, &fcn.00466d68::var_ch + -3, &fcn.00466d68::var_ch + -2, arg_14h, arg_18h)\n                ;\n                uVar6 = fcn.004664b4();\n                if ((uVar6 & 0xf) == 0) {\n                    fcn.004044e8();\n                    fcn.004045c8();\n                }\n                else {\n                    fcn.004044e8(var_ch);\n                    fcn.004044e8(var_28h);\n                    fcn.00404680(arg_18h);\n                }\n            }\n            else if (iVar4 == 3) {\n                var_10h = uVar6 | *(var_8h + 2) << 0x18;\n                fcn.0046667c(&stack0xffffffec, &fcn.00466d68::var_ch + -3, &fcn.00466d68::var_ch + -2, arg_14h, \n                             var_8h & 0xffffff00 | *(var_8h + 2));\n                uVar3 = fcn.004664b4();\n                iVar4 = var_ch;\n                var_10h = var_10h & 0xffffff | uVar3 << 0x18;\n                if (*(in_EAX + 0x84) >> 2 < uVar3) {\n                    fcn.004044e8(var_ch);\n                    fcn.004044e8(&fcn.00466d68::var_ch + -3);\n                    fcn.004044e8(&stack0xffffffec);\n                    fcn.00404680(iVar4);\n                }\n                else {\n                    fcn.004044e8(var_ch);\n                    fcn.004044e8(arg_14h);\n                    fcn.00404680(&fcn.00466d68::var_ch + -2);\n                }\n            }\n            else if (iVar4 == 4) {\n                var_10h = uVar6 | *(var_8h + 2) << 0x18;\n                fcn.0046667c(&stack0xffffffec, &fcn.00466d68::var_ch + -3, &fcn.00466d68::var_ch + -2, \n                             var_8h & 0xffffff00 | *(var_8h + 3), var_8h & 0xffffff00 | *(var_8h + 2));\n                fcn.004044e8(var_ch);\n                fcn.004044e8(0x4670fc);\n                fcn.004044e8(0x46710a);\n                fcn.00404680(0x467118);\n            }\n        }\n        fcn.00463f7c();\n        *(in_EAX + 0x50) = 0;\n        puVar2 = var_1ch;\n    }\n    var_1ch = puVar2;\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x467166;\n    var_24h = 0x467151;\n    fcn.0040432c();\n    var_24h = 0x46715e;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 2038
    },
    "00407214": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.00407214(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX >> 0x10;\n}\n",
        "token_count": 34
    },
    "00408318": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408318(ushort *arg_8h)\n\n{\n    uint32_t in_EAX;\n    ushort *in_ECX;\n    uint32_t in_EDX;\n    \n    *in_ECX = in_EAX / (in_EDX & 0xffff);\n    *arg_8h = in_EAX % (in_EDX & 0xffff);\n    return;\n}\n",
        "token_count": 86
    },
    "00402e14": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402e14(uchar param_1, uint32_t param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = param_2 >> 2;\n    if (-1 < iVar1) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *in_EAX = CONCAT22(CONCAT11(param_1, param_1), CONCAT11(param_1, param_1));\n            in_EAX = in_EAX + 1;\n        }\n        for (param_2 = param_2 & 3; param_2 != 0; param_2 = param_2 - 1) {\n            *in_EAX = param_1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00407208": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00407208(uint param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffff | param_2 << 0x10;\n}\n",
        "token_count": 54
    },
    "0043e6f8": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043e6f8(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint lpString;\n    uint var_2h;\n    \n    var_2h._0_1_ = in_AL;\n    fcn.00404308();\n    iVar1 = sub.user32.dll_MapVirtualKeyA(var_2h, 0);\n    if (iVar1 << 0x10 != 0) {\n        sub.user32.dll_GetKeyNameTextA(iVar1 << 0x10, &lpString, 0x100);\n        fcn.00404570();\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00402e34": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402e34(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x00402eaa:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 != 0x2d) {\n            if (uVar3 == 0x2b) goto code_r0x00402eba;\n            if (((uVar3 != 0x24) && (uVar3 != 0x78)) && (uVar3 != 0x58)) {\n                if (uVar3 == 0x30) {\n                    uVar3 = *puVar6;\n                    puVar6 = puVar5 + 2;\n                    if ((uVar3 != 0x78) && (uVar3 != 0x58)) goto joined_r0x00402e7e;\n                    goto code_r0x00402ebf;\n                }\n                goto code_r0x00402e82;\n            }\ncode_r0x00402ebf:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 == 0) goto code_r0x00402eaa;\n            do {\n                if (0x60 < uVar3) {\n                    uVar3 = uVar3 - 0x20;\n                }\n                uVar4 = uVar3 - 0x30;\n                if (9 < uVar4) {\n                    if (5 < uVar3 + 0xbf) goto code_r0x00402eb3;\n                    uVar4 = uVar3 - 0x37;\n                }\n                if (0xfffffff < uVar2) goto code_r0x00402eb3;\n                uVar2 = uVar2 * 0x10 + uVar4;\n                uVar3 = *puVar6;\n                puVar6 = puVar6 + 1;\n            } while (uVar3 != 0);\n            goto code_r0x00402ef6;\n        }\n        bVar1 = true;\ncode_r0x00402eba:\n        uVar3 = *puVar6;\n        puVar6 = puVar5 + 2;\ncode_r0x00402e82:\n        if (uVar3 != 0) {\n            do {\n                if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x00402eb3;\n                uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n                uVar3 = *puVar6;\n                puVar6 = puVar6 + 1;\njoined_r0x00402e7e:\n            } while (uVar3 != 0);\n            if (bVar1) {\n                if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x00402ef6;\n            }\n            else if (-1 < uVar2) {\ncode_r0x00402ef6:\n                iVar7 = 0;\n                goto code_r0x00402ef9;\n            }\n        }\n    }\ncode_r0x00402eb3:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x00402ef9:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 878
    },
    "00410b54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00410b54(void)\n\n{\n    uchar uVar1;\n    char cVar2;\n    ushort uVar3;\n    int32_t arg_8h;\n    int32_t iVar4;\n    int32_t iVar5;\n    double *pdVar6;\n    float fVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *in_FS_OFFSET;\n    float10 fVar10;\n    uint *arg_8h_00;\n    uint uVar11;\n    uint var_28h;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    iVar8 = 4;\n    do {\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    var_8h = 0;\n    uStack40 = 0x410dfd;\n    var_28h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_28h;\n    iVar8 = fcn.004102b0();\n    arg_8h = fcn.00402728();\n    if (-1 < iVar8 + -1) {\n        iVar9 = 0;\n        do {\n            iVar4 = fcn.00410300();\n            iVar5 = fcn.004102d8();\n            *(arg_8h + iVar9 * 4) = (iVar4 - iVar5) + 1;\n            iVar9 = iVar9 + 1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    fcn.004057cc(arg_8h);\n    fcn.00410678();\n    iVar8 = fcn.00410818();\n    fcn.00410700();\n    fcn.00405964();\n    do {\n        arg_8h_00 = &var_28h;\n        fcn.004057a4();\n        fcn.00410488(arg_8h_00);\n        uVar11 = var_8h;\n        fcn.004057a4();\n        pdVar6 = fcn.0041061c();\n        if (iVar8 < 0xb) {\n    // switch table (10 cases) at 0x410c5e\n            switch(iVar8) {\n            case 0:\n            case 1:\n                break;\n            case 2:\n                uVar3 = fcn.004052c0();\n                *pdVar6 = uVar3;\n                break;\n            case 3:\n                fVar7 = fcn.004052c0();\n                *pdVar6 = fVar7;\n                break;\n            case 4:\n                fVar10 = fcn.004052d8();\n                *pdVar6 = fVar10;\n                break;\n            case 5:\n                fVar10 = fcn.004052d8();\n                *pdVar6 = fVar10;\n                break;\n            case 6:\n                fVar10 = fcn.004052e0();\n                *pdVar6 = ROUND(fVar10);\n                break;\n            case 7:\n                fVar10 = fcn.004052d8();\n                *pdVar6 = fVar10;\n                break;\n            case 8:\n                fcn.004052f0();\n                break;\n            case 9:\n                fcn.00405300();\n                break;\n            default:\n                fVar7 = fcn.004052c0();\n                *pdVar6 = fVar7;\n            }\n        }\n        else if (iVar8 < 0x12) {\n            if (iVar8 == 0x11) {\n                uVar1 = fcn.004052c0();\n                *pdVar6 = uVar1;\n            }\n            else if (iVar8 == 0xb) {\n                uVar3 = fcn.004052d0();\n                *pdVar6 = uVar3;\n            }\n            else if (iVar8 == 0xc) {\n                fcn.004052b8();\n            }\n            else if (iVar8 == 0xd) {\n                fcn.004052f8();\n            }\n            else if (iVar8 == 0x10) {\n                uVar1 = fcn.004052c0();\n                *pdVar6 = uVar1;\n            }\n        }\n        else if (iVar8 == 0x12) {\n            uVar3 = fcn.004052c0();\n            *pdVar6 = uVar3;\n        }\n        else if (iVar8 == 0x13) {\n            fVar7 = fcn.004052c0();\n            *pdVar6 = fVar7;\n        }\n        else if (iVar8 == 0x100) {\n            fcn.004052e8();\n        }\n        cVar2 = fcn.00410754();\n    } while (cVar2 != '\\0');\n    fcn.00402748();\n    *in_FS_OFFSET = uVar11;\n    fcn.00405368(0x410e04);\n    fcn.00404dfc();\n    return;\n}\n",
        "token_count": 1172
    },
    "00419244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t fcn.00419244(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041aa04();\n    return uVar1 & 0xffffff00 | uVar1 == '\\t';\n}\n",
        "token_count": 54
    },
    "0041b114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b114(uint param_1, int16_t *param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uchar uVar3;\n    int16_t iVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    float10 fVar6;\n    ulong uVar7;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x41b2fc;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    fcn.004052b0();\n    uVar1 = fcn.00419198();\n    // switch table (20 cases) at 0x41b15a\n    switch(uVar1) {\n    case 0:\n    case 0xd:\n        cVar2 = fcn.0041aa04();\n        if (cVar2 != '\\r') {\n            fcn.00411258();\n        }\n        break;\n    default:\n        fcn.0040b228();\n        fcn.00403ce4();\n        break;\n    case 2:\n        uVar3 = fcn.00419b54();\n        *(param_2 + 4) = uVar3;\n        break;\n    case 3:\n        iVar4 = fcn.00419b54();\n        param_2[4] = iVar4;\n        break;\n    case 4:\n        uVar5 = fcn.00419b54();\n        *(param_2 + 4) = uVar5;\n        break;\n    case 5:\n        fVar6 = fcn.00419948();\n        *(param_2 + 4) = fVar6;\n        break;\n    case 6:\n    case 0xc:\n        fcn.0041a864();\n        fcn.0040533c();\n        break;\n    case 8:\n    case 9:\n        cVar2 = fcn.0041aa04();\n        param_2[4] = -(cVar2 == '\\t');\n        break;\n    case 10:\n        fcn.0041af54(&stack0xfffffffc);\n        fcn.004052b8();\n        break;\n    case 0xf:\n        fVar6 = fcn.00419988();\n        *(param_2 + 4) = fVar6;\n        break;\n    case 0x10:\n        fVar6 = fcn.004199c8();\n        *(param_2 + 4) = ROUND(fVar6);\n        break;\n    case 0x11:\n        fVar6 = fcn.00419a14();\n        *(param_2 + 4) = fVar6;\n        break;\n    case 0x12:\n        fcn.0041a920();\n        fcn.00405344();\n        break;\n    case 0x13:\n        uVar7 = fcn.00419bc0();\n        *(param_2 + 4) = uVar7;\n        *(param_2 + 6) = uVar7 >> 0x20;\n    }\n    iVar4 = *(uVar1 * 2 + 0x46f4c8);\n    if (iVar4 != 10) {\n        *param_2 = iVar4;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x41b303;\n    uStack48 = 0x41b2eb;\n    fcn.00405368();\n    uStack48 = 0x41b2f3;\n    fcn.004049f8();\n    uStack48 = 0x41b2fb;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 852
    },
    "004262f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t * fcn.004262f0(void)\n\n{\n    uint arg_ch;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x42630a;\n    var_8h = fcn.00424298();\n    uStack48 = 0x4263cf;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    (**(*var_8h + 0x40))();\n    (**(*var_8h + 0x34))();\n    fcn.00424860();\n    fcn.00421324();\n    fcn.00421208();\n    arg_ch = (**(*var_8h + 0x20))();\n    arg_8h = &fcn.004262f0::var_18h;\n    (**(*var_8h + 0x2c))();\n    fcn.00413c58(arg_8h, arg_ch);\n    fcn.0042186c();\n    uVar4 = 0;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = uVar4 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            uVar2 = uVar3 & 0x80000001;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == uVar2) {\n                fcn.00421b54(var_4h);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 9);\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 9);\n    fcn.0042451c();\n    *in_FS_OFFSET = arg_8h;\n    return var_8h;\n}\n",
        "token_count": 538
    },
    "00469ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00469ab0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x469b40;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    while( true ) {\n        iVar1 = (**(*in_EAX + 0x14))();\n        if (iVar1 <= param_2 + 1) break;\n        (**(*in_EAX + 0xc))();\n        iVar1 = fcn.004045c0();\n        if (iVar1 < 1) {\ncode_r0x00469b11:\n            (**(*in_EAX + 0xc))();\n            if (pe_dos_header != 0x9) break;\n        }\n        else {\n            (**(*in_EAX + 0xc))();\n            if (pe_dos_header != 0x20) goto code_r0x00469b11;\n        }\n        (**(*in_EAX + 0x48))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x469b47;\n    uStack36 = 0x469b3f;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 344
    },
    "00419948": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nfloat10 fcn.00419948(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    float10 fStack20;\n    \n    cVar1 = fcn.0041aa04();\n    if (cVar1 == '\\x05') {\n        fcn.004191bc();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar2 = fcn.00419b54();\n        fStack20 = iVar2;\n    }\n    return fStack20;\n}\n",
        "token_count": 134
    },
    "00430a4c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00430a4c(uint *param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    ulong uVar5;\n    \n    if (*(in_EAX + 0x5b) == '\\x05') {\n        uVar4 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = *param_1;\n        uVar5 = (**(*in_EAX + 0x34))();\n        uVar4 = uVar5;\n        uVar1 = *(in_EAX + 0x5b);\n        if ((uVar1 == 0) || (uVar1 - 3 < 2)) {\n            *param_2 = uVar2;\n        }\n        param_2 = uVar5 >> 0x20 & 0xffffff00 | uVar1 - 3;\n        if (uVar1 < 3) {\n            *param_1 = uVar3;\n            param_2 = param_1;\n        }\n    }\n    return CONCAT44(param_2, uVar4);\n}\n",
        "token_count": 278
    },
    "00451d2c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00451d2c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack32 = 0x451d3d;\n    fcn.004047a8();\n    uStack36 = 0x451dc2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fVar2 = fcn.00450f3c();\n    _var_10h = fVar2;\n    iVar1 = fcn.004045c0();\n    if (iVar1 < 5) {\n        _var_18h = 0.0;\n    }\n    else {\n        fVar2 = fcn.00451bf8();\n        _var_18h = fVar2;\n    }\n    if (*0x451dd0 <= _var_18h) {\n        _var_10h = _var_10h - _var_18h;\n    }\n    else {\n        _var_10h = ABS(_var_18h) + _var_10h;\n    }\n    fVar2 = fcn.004515f8();\n    _var_10h = fVar2 + _var_10h;\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x451dc9;\n    uStack36 = 0x451dc1;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 389
    },
    "00403044": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403044(uint8_t param_1, uint8_t param_2)\n\n{\n    uchar *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = param_1;\n    for (uVar1 = uVar2; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n    }\n    if (param_2 >> 3 < uVar2) {\n        in_EAX[(param_2 >> 3) - uVar2] =\n             in_EAX[(param_2 >> 3) - uVar2] | '\\x01' << (param_2 & 7) | 1U >> 8 - (param_2 & 7);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00403088": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00403088(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00403378": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00403378(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetKeyboardType(0);\n    if (iVar1 == 7) {\n        uVar2 = sub.user32.dll_GetKeyboardType(1);\n        if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 135
    },
    "0040382c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040382c(uint param_1, uint8_t *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    \n    uVar3 = 0;\n    uVar6 = 0;\n    uVar4 = *param_2;\n    piVar2 = in_EAX;\n    do {\n        puVar1 = *(*piVar2 + -0x38);\n        if (puVar1 != NULL) {\n            uVar6 = uVar6 & 0xffff0000 | *puVar1;\n            piVar5 = puVar1 + 3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                if (*(piVar5 + 6) == uVar4) {\n                    while (((*(uVar3 + 6 + piVar5) ^ param_2[uVar3]) & 0xdf) == 0) {\n                        uVar3 = uVar3 - 1;\n                        if (uVar3 == 0) {\n                            piVar2 = *piVar5 + in_EAX;\n                            goto code_r0x00403878;\n                        }\n                    }\n                    uVar4 = *param_2;\n                    uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                }\n                piVar5 = uVar3 + 7 + piVar5;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        piVar2 = *(*piVar2 + -0x24);\n    } while (piVar2 != NULL);\ncode_r0x00403878:\n    return CONCAT44(in_EAX, piVar2);\n}\n",
        "token_count": 427
    },
    "0040e6d0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e6d0(int32_t param_1, uint param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if (7 < *in_EAX) {\n        fcn.0040d3ac();\n    }\n    if (param_1 + 3U < 8) {\n    // switch table (8 cases) at 0x40e6f5\n        switch(param_1) {\n        case 1:\n            *in_EAX = 0x11;\n            *(in_EAX + 4) = param_2;\n            break;\n        case 2:\n            *in_EAX = 0x12;\n            in_EAX[4] = param_2;\n            break;\n        case 4:\n            *in_EAX = 0x13;\n            *(in_EAX + 4) = param_2;\n            break;\n        default:\n            *in_EAX = 10;\n            break;\n        case -2:\n            *in_EAX = 2;\n            in_EAX[4] = param_2;\n            break;\n        case -1:\n            *in_EAX = 0x10;\n            *(in_EAX + 4) = param_2;\n        }\n    }\n    else {\n        *in_EAX = 3;\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "0041cd7c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0041cd7c(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    float10 fVar5;\n    ulong uVar6;\n    uint uStackY384;\n    uint uStackY380;\n    uchar *puStackY376;\n    uint uStack368;\n    uint uStack364;\n    uchar *puStack360;\n    uint uStack344;\n    uint uStack340;\n    uchar *puStack336;\n    uint var_13ch;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack336 = &stack0xfffffffc;\n    uStack340 = 0x41d155;\n    uStack344 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffea8;\n    cVar1 = fcn.00410328();\n    if (cVar1 != '\\0') {\n        fcn.0040b228();\n        fcn.00403ce4();\n    }\n    uVar2 = fcn.0040ffd4();\n    uVar3 = uVar2 & 0xfff;\n    if (uVar3 < 8) {\n    // switch table (7 cases) at 0x41cdfa\n        switch(uVar3) {\n        case 0:\n            fcn.0041d3c0();\n            break;\n        case 1:\n            fcn.0041d3c0();\n            break;\n        case 2:\n        case 3:\ncode_r0x0041ce9d:\n            fcn.004052c0();\n            fcn.0041bc9c();\n            break;\n        case 4:\n            fVar5 = fcn.004052d8();\n            fcn.0041bb6c(fVar5);\n            break;\n        case 5:\n            uVar4 = fcn.004052d8();\n            puStack360 = 0x41cee4;\n            fcn.0041bb48(uVar4);\n            break;\n        case 6:\n            fVar5 = fcn.004052e0();\n            fcn.0041bb90(ROUND(fVar5));\n            break;\n        default:\n            fVar5 = fcn.004052d8();\n            fcn.0041bbb4(SUB84(fVar5, 0));\n            break;\n        case 0xbad1abe1:\n            goto code_r0x0041cf68;\n        }\n    }\n    else {\n        if (uVar3 < 0x10) {\n            if (uVar3 == 8) {\n                fcn.004052f0();\n                fcn.0041d30c();\n                goto code_r0x0041d11a;\n            }\n            if (uVar3 == 0xb) {\n                cVar1 = fcn.004052d0();\n                if (cVar1 == '\\0') {\n                    fcn.0041d3c0();\n                }\n                else {\n                    fcn.0041d3c0();\n                }\n                goto code_r0x0041d11a;\n            }\n        }\n        else {\n            if (uVar3 - 0x10 < 3) goto code_r0x0041ce9d;\n            if (uVar3 - 0x13 < 2) {\n                uVar6 = fcn.004052c8();\n                fcn.0041bd10(uVar6, uVar6 >> 0x20);\n                goto code_r0x0041d11a;\n            }\n            if (uVar3 == 0x100) {\n                fcn.004052e8();\n                fcn.0041d2b8();\n                goto code_r0x0041d11a;\n            }\n        }\ncode_r0x0041cf68:\n        uVar4 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffe9c;\n        puStack360 = 0x41cf81;\n        cVar1 = fcn.004110d0();\n        if (cVar1 != '\\0') {\n            puStack360 = 0x41cf8d;\n            puStack360 = fcn.00406130();\n            uStack364 = 0x41cf98;\n            fcn.004052f8();\n            puStack360 = 0x41cfa6;\n            cVar1 = fcn.0040cbc8();\n            if (cVar1 != '\\0') {\n                puStack360 = 0x41cfd0;\n                fcn.00403500();\n                puStack360 = 0x41cfdf;\n                fcn.00403500();\n                uStack364 = 0x41d0e8;\n                uStack368 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffe90;\n                puStackY376 = 0x41d004;\n                puStack360 = &stack0xfffffffc;\n                fcn.004185f4(0x400);\n                uStackY380 = 0x41d08d;\n                uStackY384 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffe80;\n                puStackY376 = &stack0xfffffffc;\n                (**(_pe_dos_header + 0x10))();\n                fcn.00417c7c();\n                fcn.00403480();\n                fcn.00404564();\n                fcn.0041d2b8();\n                fcn.0041b404();\n                fcn.0041b404();\n                *in_FS_OFFSET = uStackY384;\n                puStackY376 = 0x41d094;\n                uStackY380 = 0x41d08c;\n                fcn.00403530();\n                return;\n            }\n        }\n        puStack360 = 0x41cfb4;\n        fcn.004052e8();\n        puStack360 = 0x41cfbf;\n        fcn.0041d2b8();\n        *in_FS_OFFSET = uVar4;\n    }\ncode_r0x0041d11a:\n    *in_FS_OFFSET = uStack344;\n    puStack336 = 0x41d15c;\n    uStack340 = 0x41d134;\n    fcn.0040432c();\n    uStack340 = 0x41d13c;\n    fcn.00406130();\n    uStack340 = 0x41d144;\n    fcn.00404308();\n    uStack340 = 0x41d14c;\n    fcn.004049f8();\n    uStack340 = 0x41d154;\n    fcn.00406130();\n    return;\n}\n",
        "token_count": 1550
    },
    "004033a8": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004033a8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint hKey;\n    \n    var_8h = *0x46f00c;\n    puStack20 = &fcn.004033a8::hKey;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0x403440;\n    uStack36 = 0x80000002;\n    puStack40 = 0x4033cf;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        uStack44 = 0x403419;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = hKey;\n        puStack40 = &stack0xfffffffc;\n        sub.advapi32.dll_RegQueryValueExA(hKey, 0x40345c, 0, 0, &fcn.004033a8::var_8h, &fcn.004033a8::var_ch);\n        *in_FS_OFFSET = uVar2;\n        sub.advapi32.dll_RegCloseKey(hKey, 0x403420);\n        return;\n    }\n    *0x46f00c = *0x46f00c & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 400
    },
    "0040407c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.0040407c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x46f000;\n    do {\n        *((uVar2 & 0xff) + 0x46f054) = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x46f004;\n    do {\n        *((uVar3 & 0xff) + 0x46f054) = *((uVar2 & 0xf) + 0x46f07c);\n        uVar2 = uVar2 >> 4;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 222
    },
    "00408fc6": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040907d: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00409082)\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408fc6(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t *piVar3;\n    char extraout_CL;\n    uint uVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint8_t *puVar8;\n    int64_t iVar9;\n    uint var_71h;\n    uint var_61h;\n    uint var_51h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    int32_t *piVar10;\n    uint var_ch;\n    uint uVar11;\n    uint var_4h;\n    \n    uVar1 = *(unaff_EBP + -0xc);\n    if (uVar1 < *(unaff_EBP + 8) || uVar1 == *(unaff_EBP + 8)) {\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n    // WARNING: Could not recover jumptable at 0x00408fe6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x408fed\n        (**(*(*(unaff_EBP + 0xc) + uVar1 * 8 + 4) * 4 + 0x408fed))();\n        return;\n    }\n    do {\n        fcn.00409290();\n        piVar3 = fcn.00408e24();\n        piVar10 = unaff_EBP + -0x30;\n        *piVar10 = *piVar3;\n        *(unaff_EBP + -0x2c) = piVar3[1];\n        if (extraout_CL == 'D') {\n            if ((*(unaff_EBP + -0x2c) & 0x80000000) != 0) {\n                iVar7 = *piVar10;\n                *piVar10 = -*piVar10;\n                *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + (iVar7 != 0);\n                *(unaff_EBP + -0x2c) = -*(unaff_EBP + -0x2c);\n            }\ncode_r0x00409089:\n            uVar4 = 10;\n            goto code_r0x0040908e;\n        }\n        if (extraout_CL == 'U') goto code_r0x00409089;\n    } while (extraout_CL != 'X');\n    uVar4 = 0x10;\ncode_r0x0040908e:\n    puVar8 = unaff_EBP + -0x51;\n    do {\n        uVar11 = 0;\n        cVar2 = fcn.004054e8(uVar4, 0, uVar4, piVar10);\n        uVar6 = cVar2 + 0x30;\n        if (0x39 < uVar6) {\n            uVar6 = cVar2 + 0x37;\n        }\n        puVar8 = puVar8 + -1;\n        *puVar8 = uVar6;\n        piVar10 = NULL;\n        iVar9 = fcn.00405420(uVar4, 0, uVar4, uVar11);\n        *piVar10 = iVar9;\n        piVar10[1] = iVar9 >> 0x20;\n    } while (iVar9 != 0);\n    uVar5 = (unaff_EBP + -0x51) - puVar8;\n    uVar1 = *(unaff_EBP + -0x24);\n    if (uVar1 < 0x11) {\n        iVar7 = uVar1 - uVar5;\n        if (uVar5 <= uVar1 && iVar7 != 0) {\n            do {\n                puVar8 = puVar8 + -1;\n                *puVar8 = 0x30;\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 999
    },
    "00409404": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00409404(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar2;\n    uint in_EAX;\n    uint32_t uVar1;\n    char unaff_BL;\n    uint32_t *puVar3;\n    uchar *unaff_EDI;\n    char *pcVar4;\n    uint32_t uStack8;\n    \n    *unaff_EDI = in_EAX;\n    if (unaff_BL == '\\0') {\n        param_2 = 0;\ncode_r0x0040941a:\n        cVar2 = in_EAX >> 8;\n        pcVar4 = unaff_EDI + 1;\n        if (cVar2 == '\\0') goto code_r0x00409421;\n    }\n    else {\n        if (-1 < param_2) goto code_r0x0040941a;\n        cVar2 = '-';\n        param_2 = -param_2;\n    }\n    pcVar4 = unaff_EDI + 2;\n    unaff_EDI[1] = cVar2;\ncode_r0x00409421:\n    puVar3 = &uStack8;\n    uStack8 = param_2;\n    do {\n        do {\n            uVar1 = param_2 / *0x46f158;\n            *puVar3 = param_2 % *0x46f158 + '0';\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + -1;\n            param_2 = uVar1;\n        } while (uVar1 != 0);\n    } while (0 < param_1);\n    do {\n        puVar3 = puVar3 + -1;\n        *pcVar4 = *puVar3;\n        pcVar4 = pcVar4 + 1;\n    } while (puVar3 != &uStack8);\n    return uStack8;\n}\n",
        "token_count": 418
    },
    "0040986f": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040986f(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar7;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    int16_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    float10 fVar15;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    uVar6 = *unaff_ESI;\n    uVar10 = unaff_ESI[1];\n    if ((uVar6 | uVar10) != 0) {\n        if (uVar10 < 0) {\n            bVar14 = uVar6 != 0;\n            uVar6 = -uVar6;\n            uVar10 = -bVar14 - uVar10;\n        }\n        iVar8 = 0;\n        iVar11 = *(unaff_EBP + 8);\n        if (iVar11 < 0) {\n            iVar11 = 0;\n        }\n        if (3 < iVar11) {\n            iVar11 = 4;\n            uVar2 = uVar6;\n            iVar3 = iVar8;\n            do {\n                iVar8 = iVar3;\n                uVar6 = uVar2;\n                bVar14 = 0xde0b6b2 < uVar10;\n                uVar1 = uVar10 + 0xf21f494d;\n                uVar10 = uVar1 - (uVar6 < 0xa7640000);\n                uVar2 = uVar6 + 0x589c0000;\n                iVar3 = iVar8 + 1;\n            } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);\n            uVar10 = uVar10 + 0xde0b6b3 + (0x589bffff < uVar6 + 0x589c0000);\n        }\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x1c) = uVar10;\n        fVar15 = *(unaff_EBP + -0x20);\n        if (4 - iVar11 != 0) {\n            fVar15 = fVar15 / *(*(unaff_EBP + -4) + 0x40985b + (4 - iVar11) * 4);\n        }\n        *(unaff_EBP + -0x18) = fVar15;\n        piVar12 = unaff_EBX + 3;\n        if (iVar8 != 0) {\n            piVar13 = unaff_EBX + 2;\n            *piVar12 = iVar8 + '0';\n            iVar8 = 9;\n            goto code_r0x00409906;\n        }\n        iVar8 = 9;\n        do {\n            uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n            uVar4 = CONCAT11(uVar9, uVar9 >> 4);\n            piVar13 = piVar12;\n            if (uVar9 >> 4 != 0) goto code_r0x0040990f;\n            uVar7 = uVar4 >> 8;\n            if ((uVar9 & 0xf) != 0) goto code_r0x00409916;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar5 = 0;\n    uVar9 = 0;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040993c:\n    *unaff_EBX = iVar5;\n    *(unaff_EBX + 1) = uVar9;\n    return;\ncode_r0x00409916:\n    while( true ) {\n        piVar13 = piVar12 + 1;\n        *piVar12 = (uVar7 & 0xf) + 0x30;\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) break;\ncode_r0x00409906:\n        uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n        uVar4 = CONCAT11(uVar9, uVar9 >> 4);\ncode_r0x0040990f:\n        uVar7 = uVar4 >> 8;\n        piVar12 = piVar13 + 1;\n        *piVar13 = uVar4 + '0';\n    }\n    iVar5 = piVar13 - (unaff_EBX + 3 + iVar11);\n    do {\n        *piVar13 = '\\0';\n        piVar13 = piVar13 + -1;\n    } while (*piVar13 == '0');\n    uVar9 = unaff_ESI[1] >> 0x1f;\n    goto code_r0x0040993c;\n}\n",
        "token_count": 1145
    },
    "0044da5c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044da5c(void)\n\n{\n    fcn.0040cbb8();\n    return;\n}\n",
        "token_count": 27
    },
    "00404528": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404528(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x00404551:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x0040454e:\n                piVar2 = piVar2 + 1;\n                goto code_r0x00404551;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x0040454e;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00404308(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00404428(arg_8h),  -1 < iVar1)) {\n        fcn.004043f8();\n    }\n    else {\n        fcn.00404944();\n        fcn.00404428(arg_8h);\n        fcn.00404944();\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00404588": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404588(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00404308(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00404428(arg_8h),  -1 < iVar1)) {\n        fcn.004043f8();\n    }\n    else {\n        fcn.00404944();\n        fcn.00404428(arg_8h);\n        fcn.00404944();\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00404a34": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402858)\n\nvoid __fastcall fcn.00404a34(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 != 0) && (*(param_2 + -4) >> 1 != 0)) {\n        iVar1 = sub.oleaut32.dll_SysReAllocStringLen();\n        if (iVar1 != 0) {\n            return;\n        }\n        if (*0x47d008 != NULL) {\n            (**0x47d008)();\n        }\n        fcn.0040282c();\n        return;\n    }\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        *in_EAX = 0;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00404b08": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402858)\n\nvoid __fastcall fcn.00404b08(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x00404b31:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x00404b2e:\n                piVar4 = piVar4 + 2;\n                goto code_r0x00404b31;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x00404b2e;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar2);\n        }\n        return;\n    }\n    iVar2 = sub.oleaut32.dll_SysAllocStringLen(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n        return;\n    }\n    if (*0x47d008 != NULL) {\n        (**0x47d008)();\n    }\n    fcn.0040282c();\n    return;\n}\n",
        "token_count": 450
    },
    "00404b64": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00404b64(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00404ce4": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402858)\n\nvoid fcn.00404ce4(void)\n\n{\n    int32_t **in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *in_EAX;\n    if (piVar2 != NULL) {\n        iVar1 = sub.oleaut32.dll_SysAllocStringLen(piVar2, piVar2[-1] >> 1);\n        if (iVar1 == 0) {\n            if (*0x47d008 != NULL) {\n                (**0x47d008)();\n            }\n            fcn.0040282c();\n            return;\n        }\n        *piVar2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "0040849c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040849c(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    bool bVar5;\n    \n    uVar1 = 0;\n    uVar2 = param_1 & 3;\n    param_1 = param_1 >> 2;\n    bVar5 = param_1 == 0;\n    do {\n        piVar3 = in_EAX;\n        piVar4 = param_2;\n        if (param_1 == 0) break;\n        param_1 = param_1 - 1;\n        piVar4 = param_2 + 1;\n        piVar3 = in_EAX + 1;\n        bVar5 = *in_EAX == *param_2;\n        in_EAX = piVar3;\n        param_2 = piVar4;\n    } while (bVar5);\n    if (bVar5) {\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            bVar5 = *piVar3 == *piVar4;\n            piVar3 = piVar3 + 1;\n            piVar4 = piVar4 + 1;\n        } while (bVar5);\n        if (bVar5) {\n            uVar1 = 1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 338
    },
    "00417ae8": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417ae8(code *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    do {\n        var_10h = var_8h + in_ECX >> 1;\n        uVar3 = var_8h;\n        uVar4 = in_ECX;\n        do {\n            while (iVar2 = (*arg_8h)(),  iVar2 < 0) {\n                uVar3 = uVar3 + 1;\n            }\n            while (iVar2 = (*arg_8h)(),  0 < iVar2) {\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar3 <= uVar4) {\n                fcn.00417800();\n                uVar1 = uVar4;\n                if ((uVar3 != var_10h) && (uVar1 = var_10h,  uVar4 == var_10h)) {\n                    uVar1 = uVar3;\n                }\n                var_10h = uVar1;\n                uVar3 = uVar3 + 1;\n                uVar4 = uVar4 - 1;\n            }\n        } while (uVar3 <= uVar4);\n        if (var_8h < uVar4) {\n            fcn.00417ae8(arg_8h);\n        }\n        var_8h = uVar3;\n    } while (uVar3 < in_ECX);\n    return;\n}\n",
        "token_count": 396
    },
    "00404d34": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402858)\n\nvoid __fastcall fcn.00404d34(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00404d34();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00404d04();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x47d008 != NULL) {\n                (**0x47d008)();\n            }\n            fcn.0040282c();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 513
    },
    "00404f24": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402858)\n\nvoid __fastcall fcn.00404f24(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            do {\n                fcn.004047a8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\v') {\n            do {\n                fcn.00404ce4();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00405370();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00404f24();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00404ef4();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.004061a0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x47d008 != NULL) {\n                    (**0x47d008)();\n                }\n                fcn.0040282c();\n                return;\n            }\n            do {\n                fcn.00405adc();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 624
    },
    "00404fe4": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402858)\n\nvoid __fastcall fcn.00404fe4(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.004028e0();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.0040435c();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.00404a34();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.004052b8();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.00405100(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00404fe4();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.00406148();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x47d008 != NULL) {\n                    (**0x47d008)(unaff_EDI, unaff_ESI);\n                }\n                fcn.0040282c();\n                return;\n            }\n            fcn.00405ab4();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.004028e0();\n    }\n    return;\n}\n",
        "token_count": 559
    },
    "00405100": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402858)\n\nvoid __thiscall fcn.00405100(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.0040435c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.00404a34();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.004052b8();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00405100();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00404fe4();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00406148();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x47d008 != NULL) {\n                (**0x47d008)();\n            }\n            fcn.0040282c();\n            return;\n        }\n        do {\n            fcn.00405ab4();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "0040f17c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040f32f)\n\nvoid __fastcall fcn.0040f17c(int32_t param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint in_stack_ffffffbc;\n    uint uVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040dfbc();\n    uVar2 = fcn.0040dfbc();\n    uVar3 = uVar2;\n    // switch table (11 cases) at 0x40f1bf\n    switch(param_1) {\n    case 0:\n    case 1:\n    case 2:\n        *in_FS_OFFSET = &stack0xffffffc4;\n        if (param_1 == 0) {\n            uVar1 = uVar1 + uVar2;\n        }\n        else if (param_1 == 1) {\n            uVar1 = uVar1 - uVar2;\n        }\n        else if (param_1 == 2) {\n            uVar1 = fcn.00405380(uVar2);\n            in_stack_ffffffbc = uVar3;\n        }\n        *in_FS_OFFSET = in_stack_ffffffbc;\n        break;\n    case 3:\n        fcn.0040eef0();\n        break;\n    case 4:\n        uVar1 = fcn.004053a4();\n        break;\n    case 5:\n        uVar1 = fcn.0040546c();\n        break;\n    case 6:\n        uVar1 = fcn.00405538();\n        break;\n    case 7:\n        uVar1 = fcn.00405558();\n        break;\n    case 8:\n        uVar1 = uVar2 & uVar1;\n        break;\n    case 9:\n        uVar1 = uVar2 | uVar1;\n        break;\n    case 10:\n        uVar1 = uVar1 ^ uVar2;\n        break;\n    default:\n        fcn.0040eef0();\n    }\n    var_14h = uVar1 >> 0x20;\n    var_18h = uVar1;\n    fcn.00405310(var_18h, var_14h);\n    return;\n}\n",
        "token_count": 541
    },
    "00468960": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00468960(void)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x468aba;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    fcn.00404308();\n    uVar4 = 1;\n    do {\n        if (in_EAX[0x13] <= uVar4 && uVar4 != in_EAX[0x13]) {\n            (**(*in_EAX + 0x50))();\n            in_EAX[0x14] = 0;\ncode_r0x00468a9f:\n            *in_FS_OFFSET = uStack56;\n            puStack48 = 0x468ac1;\n            uStack52 = 0x468ab9;\n            fcn.0040432c();\n            return;\n        }\n        uVar1 = *(in_EAX[0x15] + -1 + uVar4);\n        if ((uVar1 < 0x20) || (0x7e < uVar1)) {\n            if (uVar1 == 0xd) {\n                if (in_EAX[0x13] <= uVar4) {\n                    in_EAX[0x14] = 1;\n                    puVar3 = fcn.00404810();\n                    *puVar3 = 0xd;\n                    (**(*in_EAX + 0x50))();\n                    goto code_r0x00468a9f;\n                }\n                if (*(in_EAX[0x15] + uVar4) == '\\n') {\n                    fcn.004045c8();\n                    uVar4 = uVar4 + 1;\n                }\n                else {\n                    fcn.00468ee0();\n                    fcn.004045c8();\n                }\n            }\n            else {\n                fcn.00468ee0();\n                fcn.004045c8();\n            }\n        }\n        else if (uVar1 == 0x3d) {\n            fcn.00468ee0();\n            fcn.004045c8();\n        }\n        else {\n            fcn.004044e8();\n            iVar2 = (***0x47bdcc)();\n            if (iVar2 < 1) {\n                fcn.004044e8();\n                fcn.004045c8();\n            }\n            else {\n                fcn.00468ee0();\n                fcn.004045c8();\n            }\n        }\n        uVar4 = uVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 665
    },
    "00405420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00405420(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        in_EAX = CONCAT44(param_2, in_EAX) / param_3;\n        param_2 = 0;\n    }\n    else {\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 391
    },
    "004054e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004054e8(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        uVar2 = CONCAT44(param_2, in_EAX) % param_3;\n        uVar3 = 0;\n    }\n    else {\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(uVar3, uVar2);\n}\n",
        "token_count": 392
    },
    "0041bc9c": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bc9c(uint param_1, int32_t param_2)\n\n{\n    if ((-0x81 < param_2) && (param_2 < 0x80)) {\n        fcn.0041d3c0();\n        fcn.0041b404();\n        return;\n    }\n    if ((param_2 < -0x8000) || (0x7fff < param_2)) {\n        fcn.0041d3c0();\n        fcn.0041b404();\n    }\n    else {\n        fcn.0041d3c0();\n        fcn.0041b404();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0040726c": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040726c(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX | (param_2 & 0xff0000) << 8;\n}\n",
        "token_count": 57
    },
    "00426a50": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nint32_t fcn.00426a50(void)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX << 8;\n}\n",
        "token_count": 33
    },
    "0040b324": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0040b324(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iVar1 = fcn.004028c0();\n    for (iVar2 = 0; (iVar2 < 7 && (iVar1 != *(iVar2 * 8 + 0x46f200))); iVar2 = iVar2 + 1) {\n    }\n    if (iVar2 < 7) {\n        iVar2 = fcn.0040b16c();\n    }\n    else {\n        uStack12 = 0;\n        iStack16 = iVar1;\n        iVar2 = fcn.0040b264(0, &iStack16);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    return;\n}\n",
        "token_count": 181
    },
    "00432294": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00432294(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint32_t uVar1;\n    int32_t in_EDX;\n    uint var_1h;\n    \n    uVar1 = 0;\n    // switch table (7 cases) at 0x4322af\n    switch(in_CL) {\n    case 1:\n        uVar1 = *(in_EAX + 0x44) < *(in_EDX + 0x44);\n        break;\n    case 2:\n        uVar1 = *(in_EDX + 0x44) + *(in_EDX + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 <= *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n        break;\n    case 3:\n        uVar1 = *(in_EAX + 0x40) < *(in_EDX + 0x40);\n        break;\n    case 4:\n        uVar1 = *(in_EDX + 0x40) + *(in_EDX + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 <= *(in_EAX + 0x40) + *(in_EAX + 0x48);\n        break;\n    case 6:\n        uVar1 = (**(**(arg_8h + -4) + 0xa4))();\n    }\n    return uVar1;\n}\n",
        "token_count": 357
    },
    "00449dfa": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.00449dfa(uint param_1, int32_t param_2, int32_t param_3, uint param_4, uint param_5, int32_t param_6)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBX;\n    int32_t unaff_EDI;\n    \n    do {\n        (**(*unaff_EBX + 0x84))();\n        while( true ) {\n            while( true ) {\n                do {\n                    unaff_EDI = unaff_EDI + -1;\n                    if (unaff_EDI == 0) {\n                        do {\n                            param_6 = param_6 + -1;\n                            if (param_6 == 0) {\n                                return;\n                            }\n                            iVar1 = fcn.0044cea0();\n                        } while (((*(iVar1 + 4) != param_2) || (param_2 == param_3)) ||\n                                (unaff_EDI = fcn.0044ceb4(),  unaff_EDI + -1 < 0));\n                    }\n                    iVar1 = fcn.0044cea0();\n                } while (*(iVar1 + 4) != param_3);\n                if (*(unaff_EBX + 0x8c) != '\\x04') break;\n                iVar1 = unaff_EBX[0x13];\n                fcn.0044cea0();\n                iVar2 = fcn.0044cbd4();\n                fcn.0044cea0(iVar2);\n                iVar3 = fcn.0044cbb8();\n                iVar4 = iVar3 - iVar1 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((iVar3 - iVar1 & 1U) != 0);\n                }\n                fcn.0044cea0(iVar2 + iVar4);\n                fcn.0044cba0();\n                fcn.0044cea0();\n                fcn.0044cbec();\n                (**(*unaff_EBX + 0x84))();\n            }\n            if (*(unaff_EBX + 0x8c) != '\\x06') break;\n            iVar1 = unaff_EBX[0x13];\n            fcn.0044cea0();\n            iVar2 = fcn.0044cbd4();\n            fcn.0044cea0(iVar2);\n            iVar3 = fcn.0044cbb8();\n            iVar4 = iVar3 - iVar1 >> 1;\n            if (iVar4 < 0) {\n                iVar4 = iVar4 + ((iVar3 - iVar1 & 1U) != 0);\n            }\n            fcn.0044cea0(iVar2 + iVar4);\n            fcn.0044cba0();\n            fcn.0044cea0();\n            fcn.0044cbec();\n            (**(*unaff_EBX + 0x84))();\n        }\n        fcn.0044cea0();\n        iVar2 = fcn.0044cba0();\n        iVar1 = unaff_EBX[0x10];\n        fcn.0044cea0();\n        iVar3 = fcn.0044cba0();\n        fcn.0044cea0();\n        iVar4 = fcn.0044cba0();\n        fcn.0044cea0();\n        iVar5 = fcn.0044cbec();\n        if (iVar4 + iVar5 < unaff_EBX[0x12] + ((iVar2 + iVar1) - iVar3)) {\n            fcn.0044cea0();\n            fcn.0044cba0();\n            fcn.0044cea0();\n            fcn.0044cbec();\n        }\n        fcn.0044cea0();\n        iVar2 = fcn.0044cbd4();\n        iVar1 = unaff_EBX[0x11];\n        fcn.0044cea0();\n        iVar3 = fcn.0044cbd4();\n        fcn.0044cea0();\n        iVar4 = fcn.0044cbd4();\n        fcn.0044cea0();\n        iVar5 = fcn.0044cbb8();\n        if (iVar4 + iVar5 < ((iVar2 + iVar1) - iVar3) + unaff_EBX[0x13]) {\n            fcn.0044cea0();\n            fcn.0044cbd4();\n            fcn.0044cea0();\n            fcn.0044cbb8();\n        }\n    } while( true );\n}\n",
        "token_count": 995
    },
    "00468aec": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nvoid fcn.00468aec(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack36 = 0x468cdf;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.004045c8();\n    iVar2 = (***0x47bdcc)();\n    while (iVar2 != 0) {\n        fcn.00404818(&fcn.00468aec::var_4h);\n        fcn.004045c0(in_EAX + 0x80);\n        fcn.00404818();\n        iVar2 = fcn.004045c0();\n        if (iVar2 == 0) {\n            fcn.004043a0();\n        }\n        else {\n            cVar1 = *(var_4h + -1 + iVar2);\n            if ((cVar1 == '\\t') || (cVar1 == ' ')) {\n                fcn.00468ee0(&fcn.00468aec::var_8h);\n                fcn.00404818();\n                fcn.004045c8();\n                iVar3 = fcn.00404810();\n                *(iVar3 + -1 + iVar2) = 0x3d;\n            }\n            else {\n                fcn.00404680(0x468d0c, 0x468d00, var_4h);\n            }\n        }\n        fcn.00463f7c();\n        iVar2 = (***0x47bdcc)();\n    }\n    while (iVar2 = fcn.004045c0(),  0x4b < iVar2) {\n        fcn.00404818(&fcn.00468aec::var_10h);\n        fcn.004045c8();\n        fcn.00463f7c();\n        iStack40 = in_EAX + 0x80;\n        fcn.004045c0();\n        fcn.00404818();\n    }\n    *in_FS_OFFSET = iStack40;\n    puStack32 = 0x468ce6;\n    uStack36 = 0x468cde;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 594
    },
    "0046b820": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0046b820(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    var_ch = 0xb;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_18h = 0x46ba95;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046b820::var_1ch;\n    fcn.00469de0();\n    fcn.0040435c();\n    fcn.00469de0();\n    fcn.0040435c();\n    fcn.00469de0();\n    fcn.0046a128();\n    fcn.0040435c();\n    fcn.00469de0();\n    fcn.0046a128();\n    fcn.00469320();\n    fcn.00469de0();\n    fcn.0040435c();\n    fcn.00469de0();\n    fcn.00451438();\n    fcn.00469de0();\n    fcn.0046a128();\n    fcn.004695ac();\n    fcn.00469de0();\n    fcn.0046a128();\n    fcn.004695ac();\n    fcn.00469de0();\n    fcn.0040435c();\n    fcn.00469de0();\n    fcn.00469320();\n    fcn.00469280();\n    iVar2 = fcn.004045c0();\n    if (iVar2 == 0) {\n        fcn.00469de0();\n        fcn.00469320();\n    }\n    fcn.00469de0();\n    fcn.0040435c();\n    fcn.00469de0();\n    fcn.004695ac();\n    fcn.00469de0();\n    fVar3 = fcn.00451d2c();\n    *(in_EAX + 0x48) = fVar3;\n    fcn.00469de0();\n    fcn.00469320();\n    fcn.00469de0();\n    iVar2 = fcn.004045c0();\n    if (iVar2 == 0) {\n        fcn.00469de0();\n        uVar1 = fcn.0046b710();\n        *(in_EAX + 0x74) = uVar1;\n    }\n    else {\n        fcn.00469de0();\n        uVar1 = fcn.0046b710();\n        *(in_EAX + 0x74) = uVar1;\n    }\n    *in_FS_OFFSET = var_1ch;\n    var_14h = 0x46ba9c;\n    var_18h = 0x46ba94;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 837
    },
    "00406200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406200(int32_t arg_8h)\n\n{\n    sub.kernel32.dll_InterlockedIncrement(arg_8h + 4);\n    return;\n}\n",
        "token_count": 39
    },
    "00401488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401488(int32_t *param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *in_EAX;\n    uint *puVar3;\n    \n    puVar3 = *in_EAX;\n    *param_1 = *param_2;\n    param_1[1] = param_2[1];\n    do {\n        puVar1 = *puVar3;\n        if (puVar3[2] + puVar3[3] == *param_1) {\n            fcn.00401470();\n            *param_1 = puVar3[2];\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        else if (puVar3[2] == *param_1 + param_1[1]) {\n            fcn.00401470();\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        puVar3 = puVar1;\n    } while (in_EAX != puVar1);\n    cVar2 = fcn.00401440();\n    if (cVar2 == '\\0') {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "0040158c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040158c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (in_EAX < 0x100000) {\n        uVar3 = 0x100000;\n    }\n    else {\n        uVar3 = in_EAX + 0xffffU & 0xffff0000;\n    }\n    param_2[1] = uVar3;\n    iVar2 = sub.kernel32.dll_VirtualAlloc(0, uVar3, 0x2000, 1);\n    *param_2 = iVar2;\n    if (iVar2 != 0) {\n        cVar1 = fcn.00401440();\n        if (cVar1 == '\\0') {\n            sub.kernel32.dll_VirtualFree(*param_2, 0, 0x8000);\n            *param_2 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00401720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401720(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    \n    uVar5 = in_EAX & 0xfffff000;\n    uVar3 = in_EAX + param_2 + 0xfff & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar3 - uVar5;\n    puVar6 = *0x47d5e4;\n    do {\n        if (puVar6 == 0x47d5e4) {\n            return;\n        }\n        uVar1 = puVar6[2];\n        uVar4 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar4 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar3 < puVar6[3] + uVar1) {\n            uVar7 = uVar3;\n        }\n        if (uVar4 < uVar7) {\n            puVar8 = uVar7 - uVar4;\n            iVar2 = sub.kernel32.dll_VirtualAlloc(uVar4, puVar8, 0x1000, 4);\n            if (iVar2 == 0) {\n                *puVar8 = 0;\n                return;\n            }\n        }\n        puVar6 = *puVar6;\n    } while( true );\n}\n",
        "token_count": 384
    },
    "004017b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004017b4(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    \n    uVar5 = in_EAX + 0xfffU & 0xfffff000;\n    uVar4 = in_EAX + param_2 & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar4 - uVar5;\n    for (puVar6 = *0x47d5e4; puVar6 != 0x47d5e4; puVar6 = *puVar6) {\n        uVar1 = puVar6[2];\n        uVar3 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar3 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar4 < puVar6[3] + uVar1) {\n            uVar7 = uVar4;\n        }\n        if (uVar3 < uVar7) {\n            iVar2 = sub.kernel32.dll_VirtualFree(uVar3, uVar7 - uVar3, 0x4000);\n            if (iVar2 == 0) {\n                *0x47d5c0 = 2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "00401c18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401c18(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX == *0x47d610) {\n        *0x47d610 = in_EAX[1];\n    }\n    piVar1 = in_EAX[1];\n    iVar2 = in_EAX[2];\n    if (iVar2 < 0x1001) {\n        if (in_EAX != piVar1) {\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + 3;\n            }\n            *(*0x47d61c + -0xc + (iVar2 >> 2) * 4) = piVar1;\n            iVar2 = *in_EAX;\n            *piVar1 = iVar2;\n            *(iVar2 + 4) = piVar1;\n            return;\n        }\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + 3;\n        }\n        *(*0x47d61c + -0xc + (iVar2 >> 2) * 4) = 0;\n    }\n    else {\n        iVar2 = *in_EAX;\n        *piVar1 = iVar2;\n        *(iVar2 + 4) = piVar1;\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00401c7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00401c7c(void)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = *0x47d620;\n    while( true ) {\n        if (puVar1 == 0x47d620) {\n            *0x47d5c0 = 3;\n            return NULL;\n        }\n        if ((puVar1[2] <= in_EAX) && (in_EAX < puVar1[2] + puVar1[3])) break;\n        puVar1 = *puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 136
    },
    "00401d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401d00(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *in_EAX;\n    \n    if (0xb < param_2) {\n        *in_EAX = param_2 | 2;\n        fcn.00401cdc();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n    }\n    *(in_EAX + param_2) = *(in_EAX + param_2) & 0xfffffffe;\n    return;\n}\n",
        "token_count": 130
    },
    "00401d98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00401d98(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    uVar1 = *in_EAX;\n    if ((uVar1 & 0x80000000) != 0) {\n        uVar3 = uVar1 & 0x7ffffffc;\n        in_EAX = in_EAX + uVar3;\n        uVar1 = *in_EAX;\n    }\n    if ((uVar1 & 2) == 0) {\n        fcn.00401c18();\n        uVar3 = uVar3 + in_EAX[2];\n        puVar2 = in_EAX + in_EAX[2];\n        *puVar2 = *puVar2 & 0xfffffffe;\n    }\n    return uVar3;\n}\n",
        "token_count": 206
    },
    "00401e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401e80(uint param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    char cVar4;\n    int32_t **in_EAX;\n    \n    in_EAX[2] = param_2;\n    *(in_EAX + param_2 + -4) = param_2;\n    if (param_2 < 0x1001) {\n        if (param_2 < 0) {\n            param_2 = param_2 + 3;\n        }\n        ppiVar1 = *(*0x47d61c + -0xc + (param_2 >> 2) * 4);\n        if (ppiVar1 == NULL) {\n            *(*0x47d61c + -0xc + (param_2 >> 2) * 4) = in_EAX;\n            in_EAX[1] = in_EAX;\n            *in_EAX = in_EAX;\n        }\n        else {\n            piVar2 = *ppiVar1;\n            in_EAX[1] = ppiVar1;\n            *in_EAX = piVar2;\n            *ppiVar1 = in_EAX;\n            piVar2[1] = in_EAX;\n        }\n    }\n    else {\n        if ((0x3bff < param_2) && (cVar4 = fcn.00401dd0(),  cVar4 != '\\0')) {\n            return;\n        }\n        ppiVar1 = *0x47d610;\n        piVar2 = **0x47d610;\n        ppiVar3 = in_EAX;\n        in_EAX[1] = *0x47d610;\n        *0x47d610 = ppiVar3;\n        *in_EAX = piVar2;\n        *ppiVar1 = in_EAX;\n        piVar2[1] = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 437
    },
    "00402040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402040(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (in_EAX < 0) {\n        in_EAX = in_EAX + 3;\n    }\n    iVar1 = in_EAX >> 2;\n    if (iVar1 < 0x401) {\n        do {\n            iVar2 = *(*0x47d61c + -0xc + iVar1 * 4);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n    }\n    return iVar2;\n}\n",
        "token_count": 163
    },
    "004028e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004028e0(uint32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    iVar1 = param_1 >> 2;\n    if (in_EAX < param_2) {\n        puVar2 = (param_1 - 4) + in_EAX;\n        param_2 = (param_1 - 4) + param_2;\n        if (-1 < iVar1) {\n            for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *param_2 = *puVar2;\n                puVar2 = puVar2 + -1;\n                param_2 = param_2 + -1;\n            }\n            puVar3 = puVar2 + 3;\n            puVar4 = param_2 + 3;\n            for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + -1;\n                puVar4 = puVar4 + -1;\n            }\n        }\n    }\n    else if ((param_2 != in_EAX) && (-1 < iVar1)) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 438
    },
    "00402cc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402cc8(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    \n    uVar3 = *param_2;\n    uVar2 = *in_EAX + uVar3;\n    if (((!CARRY1(*in_EAX, uVar3)) && (uVar2 <= param_1)) ||\n       (uVar3 = param_1 - *in_EAX,  uVar2 = param_1,  *in_EAX <= param_1 && uVar3 != 0)) {\n        uVar1 = *in_EAX;\n        *in_EAX = uVar2;\n        puVar5 = param_2 + 1;\n        puVar6 = in_EAX + uVar1 + 1;\n        for (uVar4 = uVar3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "00402f44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402f44(int32_t param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00402f00(param_1, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar3 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n            iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n            if (param_1 < iVar2) break;\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n            param_1 = param_1 - iVar2;\n            for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = *param_2;\n                param_2 = param_2 + 1;\n                puVar3 = puVar3 + 1;\n            }\n            iVar2 = (**(in_EAX + 0x1c))();\n            if (iVar2 != 0) {\n                fcn.004028b0();\n                return in_EAX;\n            }\n        }\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_1;\n        for (; param_1 != 0; param_1 = param_1 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 400
    },
    "004034f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004034f8(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x28);\n}\n",
        "token_count": 34
    },
    "00403500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403500(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "004035b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004035b4(int32_t **param_1, code *UNRECOVERED_JUMPTABLE)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if (UNRECOVERED_JUMPTABLE < 0xff000000) {\n        if (0xfdffffff < UNRECOVERED_JUMPTABLE) {\n    // WARNING: Could not recover jumptable at 0x004035cb. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(UNRECOVERED_JUMPTABLE + *in_EAX))();\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x004035cd. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    ppiVar2 = *((UNRECOVERED_JUMPTABLE & 0xffffff) + in_EAX);\n    if (ppiVar2 == NULL) {\n        piVar1 = *param_1;\n        *param_1 = NULL;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        return;\n    }\n    (*(*ppiVar2)[1])(ppiVar2, param_1, ppiVar2);\n    piVar1 = *ppiVar2;\n    *ppiVar2 = param_1;\n    if (piVar1 == NULL) {\n        return;\n    }\n    (**(*piVar1 + 8))(piVar1);\n    return;\n}\n",
        "token_count": 359
    },
    "00403678": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403678(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    do {\n        piVar1 = *(in_EAX + -0x48);\n        if (piVar1 != NULL) {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n            do {\n                if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&\n                   (param_2[3] == piVar1[3])) {\n                    return piVar1;\n                }\n                piVar1 = piVar1 + 7;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return NULL;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 251
    },
    "004036fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004036fc(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint16_t unaff_SI;\n    uint16_t *puVar2;\n    bool bVar3;\n    \n    do {\n        puVar2 = *(in_EAX + -0x30);\n        if (puVar2 != NULL) {\n            uVar1 = *puVar2;\n            bVar3 = puVar2 + 1 == NULL;\n            puVar2 = puVar2 + 1;\n            do {\n                if (uVar1 == 0) break;\n                uVar1 = uVar1 - 1;\n                bVar3 = unaff_SI == *puVar2;\n                puVar2 = puVar2 + 1;\n            } while (!bVar3);\n            if (bVar3) {\n                return;\n            }\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 235
    },
    "00403758": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403758(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x3c);\n}\n",
        "token_count": 34
    },
    "0040379c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040379c(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar1 = 0;\n    uVar5 = 0;\n    uVar3 = *param_2;\n    while( true ) {\n        puVar4 = *(in_EAX + -0x34);\n        if (puVar4 != NULL) {\n            uVar5 = uVar5 & 0xffff0000 | *puVar4;\n            puVar4 = puVar4 + 1;\n            do {\n                uVar2 = uVar1 & 0xffffff00;\n                if (*(puVar4 + 3) == uVar3) {\n                    uVar2 = uVar1 & 0xffff0000 | *(puVar4 + 3);\n                    while (((*(uVar2 + 6 + puVar4) ^ param_2[uVar2]) & 0xdf) == 0) {\n                        uVar2 = uVar2 - 1;\n                        if (uVar2 == 0) {\n                            return *(puVar4 + 1);\n                        }\n                    }\n                    uVar3 = *param_2;\n                }\n                uVar1 = uVar2 & 0xffff0000 | *puVar4;\n                puVar4 = puVar4 + uVar1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "004037ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004037ec(uint8_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    \n    uVar1 = 0;\n    while( true ) {\n        puVar3 = *(in_EAX + -0x34);\n        if (puVar3 != NULL) {\n            uVar1 = uVar1 & 0xffff0000 | *puVar3;\n            puVar3 = puVar3 + 1;\n            do {\n                if (param_2 == *(puVar3 + 1)) {\n                    iVar2 = *(puVar3 + 3) + 1;\n                    puVar3 = puVar3 + 3;\n                    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                        *param_1 = *puVar3;\n                        puVar3 = puVar3 + 1;\n                        param_1 = param_1 + 1;\n                    }\n                    return;\n                }\n                puVar3 = puVar3 + *puVar3;\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 325
    },
    "00403d0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403d0c(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint *in_stack_00000014;\n    int32_t in_stack_00000030;\n    \n    *(in_stack_00000030 + 4) = 0x403d57;\n    piVar3 = fcn.00406794();\n    piVar2 = *piVar3;\n    *piVar3 = *piVar2;\n    piVar2 = piVar2[3];\n    puVar1 = piVar2 + 1;\n    *puVar1 = *puVar1 & 0xfffffffd;\n    if (*piVar2 != 0xeedfade) {\n        fcn.00403530();\n        fcn.004038f4();\n    }\n    *in_stack_00000014 = **in_FS_OFFSET;\n    return 1;\n}\n",
        "token_count": 214
    },
    "00404030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404030(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.004065fc();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 72
    },
    "00404058": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404058(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    ppiVar1 = in_EAX + 1;\n    do {\n        **ppiVar1 = *ppiVar1[1] + ppiVar1[2];\n        ppiVar1 = ppiVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 121
    },
    "0040432c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040432c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.00402748();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 182
    },
    "004043cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.004043cc(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.00402728();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 116
    },
    "0040445c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040445c(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.00404308(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.00404428(param_1),  -1 < iVar1)) {\n        fcn.004043f8();\n    }\n    else {\n        fcn.00404944();\n        fcn.00404428(param_1);\n        fcn.00404944();\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "004044f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004044f8(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.004043cc();\n    if (param_2 != NULL) {\n        fcn.004028e0();\n    }\n    fcn.00404308();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 183
    },
    "00404570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404570(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.004043cc();\n    if (param_2 != NULL) {\n        fcn.004028e0();\n    }\n    fcn.00404308();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 175
    },
    "004045c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004045c8(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    if (*in_EAX != 0) {\n        if (param_2 == *in_EAX) {\n            fcn.00404944();\n        }\n        else {\n            fcn.00404944();\n        }\n        fcn.004028e0();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.004043cc(param_2);\n            fcn.004028e0();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402748();\n        }\n    }\n    return;\n}\n",
        "token_count": 333
    },
    "0040460c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040460c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    \n    iVar3 = param_1;\n    if ((param_2 != 0) && (iVar3 = param_2,  param_1 != 0)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                iVar3 = fcn.004043cc();\n                fcn.004028e0();\n                fcn.004028e0();\n                if (iVar3 != 0) {\n                    *(iVar3 + -8) = *(iVar3 + -8) + -1;\n                }\n                fcn.0040435c();\n                return;\n            }\n            fcn.0040435c();\n        }\n        if (param_1 == 0) {\n            return;\n        }\n        iVar3 = param_1;\n        if (*in_EAX != 0) {\n            if (param_1 == *in_EAX) {\n                fcn.00404944();\n            }\n            else {\n                fcn.00404944();\n            }\n            fcn.004028e0();\n            return;\n        }\n    }\n    if (iVar3 != 0) {\n        iVar2 = *(iVar3 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            iVar3 = fcn.004043cc(iVar3);\n            fcn.004028e0();\n        }\n        else {\n            LOCK();\n            *(iVar3 + -8) = *(iVar3 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = iVar3;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402748();\n        }\n    }\n    return;\n}\n",
        "token_count": 494
    },
    "00404680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404680(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t *piStack24;\n    \n    iVar1 = param_2;\n    piVar2 = NULL;\n    if ((*(&stack0x00000000 + param_2 * 4) != 0) && (*in_EAX == *(&stack0x00000000 + param_2 * 4))) {\n        piVar2 = in_EAX;\n    }\n    do {\n        if ((*(&stack0x00000000 + iVar1 * 4) != NULL) && (piVar2 == *(&stack0x00000000 + iVar1 * 4))) {\n            piVar2 = NULL;\n        }\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    if (piVar2 == NULL) {\n        piStack24 = fcn.004043cc();\n    }\n    else {\n        fcn.00404944();\n        param_2 = param_2 + -1;\n        piStack24 = piVar2;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.004028e0();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar2 == NULL) {\n        if (piStack24 != NULL) {\n            piStack24[-2] = piStack24[-2] + -1;\n        }\n        fcn.0040435c();\n    }\n    // WARNING: Could not recover jumptable at 0x004046fe. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 432
    },
    "00404818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404818(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.00404308();\n    }\n    else {\n        fcn.004043f8();\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00404858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404858(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00404808();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.004028e0();\n            fcn.00404944();\n        }\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "004048a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004048a0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00404944();\n        fcn.004028e0();\n        fcn.004028e0();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00404a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404a10(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 128
    },
    "00404a58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404a58(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.004049f8(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.00404444(param_1),  0 < iVar1)) {\n        fcn.00404ae4();\n    }\n    else {\n        fcn.00404ca0();\n        fcn.00404444(param_1);\n        fcn.00404ca0();\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00404b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404b70(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404b64();\n    if (iVar1 != 0) {\n        iVar1 = fcn.00404b64();\n        fcn.004049d0();\n        if (0 < iVar1) {\n            fcn.004028e0();\n        }\n        fcn.004028e0();\n        fcn.004049e8();\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00404ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404ca0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (0 < param_2) {\n        fcn.004049d0();\n        iVar1 = fcn.00404b64();\n        if (0 < iVar1) {\n            fcn.004028e0();\n        }\n    }\n    fcn.004049e8();\n    return;\n}\n",
        "token_count": 98
    },
    "00404d04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404d04(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00404d34();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00404dc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404dc8(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00404dfc();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00404ef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404ef4(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00404f24();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00405380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00405380(uint param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX * param_3 & 0xffffffff | (in_EAX * param_3 >> 0x20) + param_4 * in_EAX + param_2 * param_3 << 0x20;\n}\n",
        "token_count": 99
    },
    "00405958": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405958(void)\n\n{\n    fcn.004057cc(&stack0x00000004);\n    return;\n}\n",
        "token_count": 30
    },
    "00405ae8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00405ae8(void)\n\n{\n    uchar *puVar1;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    puVar1 = auStack28;\n    sub.kernel32.dll_VirtualQuery();\n    if (iStack24 != 0x1000) {\n        puVar1 = NULL;\n    }\n    return puVar1;\n}\n",
        "token_count": 85
    },
    "004065fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004065fc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack1032 [1024];\n    \n    if (in_EAX != 0) {\n        if (*(in_EAX + 4) < 0x10000) {\n            uVar1 = fcn.00405b60(*(in_EAX + 4), auStack1032, 0x400);\n            sub.user32.dll_LoadStringA(uVar1);\n            fcn.004043f8();\n        }\n        else {\n            fcn.004044f8();\n        }\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00406880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406880(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    *arg_8h = in_EAX;\n    arg_8h[1] = in_EDX;\n    arg_8h[2] = in_ECX + in_EAX;\n    arg_8h[3] = in_EDX + arg_ch;\n    return;\n}\n",
        "token_count": 112
    },
    "0040689c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040689c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = in_EAX[2] - *in_EAX;\n    iVar2 = uVar1 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar1 & 1) != 0);\n    }\n    *param_2 = iVar2 + *in_EAX;\n    uVar1 = in_EAX[3] - in_EAX[1];\n    iVar2 = uVar1 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar1 & 1) != 0);\n    }\n    param_2[1] = iVar2 + in_EAX[1];\n    return;\n}\n",
        "token_count": 204
    },
    "00408430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408430(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    iVar2 = fcn.004045c0();\n    fcn.00404944();\n    puVar3 = *param_2;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        uVar1 = *in_EAX;\n        if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n            uVar1 = uVar1 + 0x20;\n        }\n        *puVar3 = uVar1;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00408694": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408694(int32_t *param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY56;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4087a9;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    iVar2 = 0;\n    fcn.004047b8();\n    iVar1 = fcn.0040bdcc();\n    while (iVar1 != 0) {\n        iVar2 = iVar2 + 1;\n        iVar1 = fcn.0040bdcc();\n    }\n    if (iVar2 == 0) {\n        fcn.004044e8();\n        fcn.004044e8(in_EAX, 0);\n        uStackY56 = 0;\n        fcn.00404680();\n    }\n    else {\n        fcn.004045c0();\n        fcn.00404944();\n        puVar3 = *param_1;\n        *puVar3 = param_2;\n        puVar3 = puVar3 + 1;\n        iVar2 = fcn.0040bdcc();\n        do {\n            iVar1 = iVar2 + 1;\n            fcn.004028e0();\n            puVar3[iVar1 - in_EAX] = param_2;\n            puVar3 = puVar3 + (iVar1 - in_EAX) + 1;\n            iVar2 = fcn.0040bdcc();\n            in_EAX = iVar1;\n        } while (iVar2 != 0);\n        iVar2 = fcn.00408be8();\n        fcn.004028e0();\n        puVar3[iVar2 - iVar1] = param_2;\n    }\n    *in_FS_OFFSET = uStackY56;\n    fcn.0040432c(0x4087b0);\n    return;\n}\n",
        "token_count": 488
    },
    "0040881c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040881c(void)\n\n{\n    fcn.00409344(0);\n    return;\n}\n",
        "token_count": 26
    },
    "0040884c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040884c(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00409344(0);\n    return;\n}\n",
        "token_count": 47
    },
    "00408880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408880(void)\n\n{\n    fcn.00409344(1);\n    return;\n}\n",
        "token_count": 25
    },
    "00408a4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00408a4c(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    uVar1 = sub.kernel32.dll_SetFilePointer_1();\n    return CONCAT44(arg_ch, uVar1);\n}\n",
        "token_count": 72
    },
    "00408b5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408b5c(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    uVar1 = sub.kernel32.dll_GetDiskFreeSpaceA(arg_8h, &var_4h, &var_8h, &var_ch, &var_10h);\n    uVar2 = fcn.00405380(var_ch, 0);\n    *arg_ch = uVar2;\n    arg_ch[1] = uVar2 >> 0x20;\n    uVar2 = fcn.00405380(var_10h, 0);\n    *arg_10h = uVar2;\n    arg_10h[1] = uVar2 >> 0x20;\n    return uVar1;\n}\n",
        "token_count": 247
    },
    "00408dc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00408dc8(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00402728();\n    *piVar1 = in_EAX + 4;\n    return piVar1 + 1;\n}\n",
        "token_count": 68
    },
    "00409344": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409344(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint var_1008h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004045c0();\n    if (iVar1 < 0xc00) {\n        uVar2 = fcn.004045c0();\n        iVar3 = fcn.00408e9c(arg_8h, in_ECX, uVar2);\n        iVar1 = 0x1000;\n    }\n    else {\n        iVar3 = fcn.004045c0();\n        iVar1 = iVar3;\n    }\n    if (iVar3 < iVar1 + -1) {\n        fcn.004043f8();\n    }\n    else {\n        for (; iVar1 + -1 <= iVar3; iVar1 = iVar1 * 2) {\n            fcn.00404308();\n            fcn.00404944();\n            uVar2 = fcn.004045c0();\n            iVar3 = fcn.00408e9c(arg_8h, in_ECX, uVar2);\n        }\n        fcn.00404944();\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "0040994c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040994c(double param_1)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar1 = ROUND(param_1 * *0x46f15c);\n    iStack16 = uVar1;\n    iStack12 = uVar1 >> 0x20;\n    if (uVar1 < 0) {\n        uVar1 = CONCAT44(-(iStack16 != 0) - iStack12, -iStack16);\n        uVar3 = uVar1 % *0x46f160;\n        iVar2 = -(uVar1 / *0x46f160);\n    }\n    else {\n        iVar2 = uVar1 / *0x46f160;\n        uVar3 = uVar1 % *0x46f160;\n    }\n    *in_EAX = uVar3;\n    in_EAX[1] = iVar2 + 0xa955a;\n    return;\n}\n",
        "token_count": 238
    },
    "00409990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00409990(double *arg_8h, uint arg_ch)\n\n{\n    double *in_EAX;\n    uint16_t in_CX;\n    uint16_t in_DX;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((in_EAX < 0x18) && (in_DX < 0x3c)) && (in_CX < 0x3c)) && (arg_ch < 1000)) {\n        *arg_8h = ((in_EAX & 0xffff) * 3600000 + in_DX * 60000 + in_CX * 1000 + arg_ch) / *0x4099fc;\n        var_1h._0_1_ = 1;\n        in_EAX = arg_8h;\n    }\n    return in_EAX & 0xffffff00 | var_1h;\n}\n",
        "token_count": 237
    },
    "00409a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00409a00(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint var_8h;\n    \n    cVar1 = fcn.00409990(&var_8h, in_EAX & 0xffff0000 | arg_8h & 0xffff);\n    if (cVar1 == '\\0') {\n        fcn.00408334();\n    }\n    return _var_8h;\n}\n",
        "token_count": 109
    },
    "00409a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409a40(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EDX;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040994c(arg_ch, arg_10h, &var_4h);\n    fcn.00408318(arg_ch);\n    fcn.00408318(in_EDX);\n    fcn.00408318(arg_8h);\n    return;\n}\n",
        "token_count": 106
    },
    "00409ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00409ba0(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint auStack20 [2];\n    \n    puVar2 = auStack20;\n    cVar1 = fcn.00409ad8(auStack20);\n    if (cVar1 == '\\0') {\n        fcn.00408334();\n    }\n    return CONCAT44(auStack20[0], puVar2);\n}\n",
        "token_count": 98
    },
    "00409bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00409bd0(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t *in_EAX;\n    int32_t iVar4;\n    uint16_t *in_EDX;\n    uint32_t uVar5;\n    int16_t iVar6;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t var_10h;\n    uint16_t var_eh;\n    int16_t *var_ch;\n    uint16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.0040994c(arg_ch, arg_10h);\n    if (var_14h < 1) {\n        *var_4h = 0;\n        *var_8h = 0;\n        *var_ch = 0;\n        *arg_8h = 0;\n        uVar5 = 0;\n    }\n    else {\n        *arg_8h = var_14h % 7 + 1;\n        iVar6 = 1;\n        for (iVar4 = var_14h + -1; 0x23ab0 < iVar4; iVar4 = iVar4 + -0x23ab1) {\n            iVar6 = iVar6 + 400;\n        }\n        fcn.00408318(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x8eac;\n        }\n        iVar2 = var_10h * 0x68;\n        fcn.00408318(&var_eh);\n        fcn.00408318(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x16d;\n        }\n        uVar5 = fcn.00409a9c();\n        uVar3 = 1;\n        for (; uVar1 = *((uVar5 & 0xff) * 0x18 + 0x46f0be + uVar3 * 2),  uVar1 <= var_eh; var_eh = var_eh - uVar1) {\n            uVar3 = uVar3 + 1;\n        }\n        *var_4h = iVar6 + iVar2 + var_10h;\n        *var_8h = uVar3;\n        *var_ch = var_eh + 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 604
    },
    "00409d3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409d3c(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040994c(arg_8h, arg_ch);\n    return var_4h % 7 + 1;\n}\n",
        "token_count": 72
    },
    "00409d64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.00409d64(void)\n\n{\n    ushort extraout_var;\n    float10 fVar1;\n    ushort uStack16;\n    ushort uStack14;\n    uint uStack12;\n    \n    sub.kernel32.dll_GetLocalTime();\n    fVar1 = fcn.00409ba0();\n    uStack12 = SUB84(fVar1, 0);\n    fVar1 = fcn.00409a00(CONCAT22(extraout_var, uStack14));\n    return fVar1 + CONCAT44(uStack12, CONCAT22(uStack14, uStack16));\n}\n",
        "token_count": 127
    },
    "00409db4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409db4(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    iVar1 = 0x100 - *(arg_8h + -0x104);\n    if (in_EDX < iVar1) {\n        iVar1 = in_EDX;\n    }\n    if (iVar1 != 0) {\n        fcn.004028e0();\n    }\n    *(arg_8h + -0x104) = *(arg_8h + -0x104) + iVar1;\n    return;\n}\n",
        "token_count": 130
    },
    "00409e18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409e18(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch._0_1_ = 0;\n    var_14h._0_1_ = 0;\n    arg_8h_00 = 1;\n    fcn.00408e9c(1, &var_20h, 4);\n    fcn.00409db4(arg_8h_00);\n    return;\n}\n",
        "token_count": 152
    },
    "0040a908": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a908(uint param_1, int32_t param_2)\n\n{\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    \n    if (param_2 == 0) {\n        fcn.0040a178(&stack0xfffffffc);\n    }\n    else {\n        fcn.0040a178(&stack0xfffffffc);\n    }\n    fcn.004043f8();\n    return;\n}\n",
        "token_count": 105
    },
    "0040a978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040a978(void)\n\n{\n    int32_t iVar1;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack276;\n    uchar *puStack272;\n    uint uStack268;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0;\n    uStack268 = 0x100;\n    puStack272 = &stack0xfffffefc;\n    uStack276 = 0;\n    uStack284 = 0;\n    uStack288 = 0x3000;\n    uStack292 = 0x40a99c;\n    for (iVar1 = sub.kernel32.dll_FormatMessageA();\n        (0 < iVar1 && (((&stack0xfffffedf)[iVar1] < 0x21 || ((&stack0xfffffedf)[iVar1] == 0x2e)))); iVar1 = iVar1 + -1)\n    {\n    }\n    uStack292 = 0x40a9bb;\n    fcn.004043f8();\n    return;\n}\n",
        "token_count": 237
    },
    "0040a9c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a9c4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (iVar1 < 1) {\n        fcn.0040435c();\n    }\n    else {\n        fcn.004043f8();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0040aa74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040aa74(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack48 = 0x40ab87;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = sub.kernel32.dll_GetThreadLocale_1();\n    iVar1 = 1;\n    do {\n        fcn.0040aa38(&var_ch, 0xb, &stack0xfffffffc);\n        fcn.0040435c();\n        fcn.0040aa38(&var_10h, 0xb, &stack0xfffffffc);\n        fcn.0040435c();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0xd);\n    iVar1 = 1;\n    do {\n        var_8h = (iVar1 + 5) % 7;\n        fcn.0040aa38(&var_14h, 6, &stack0xfffffffc);\n        fcn.0040435c();\n        fcn.0040aa38(&var_18h, 6, &stack0xfffffffc);\n        fcn.0040435c();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 8);\n    *in_FS_OFFSET = uStack52;\n    fcn.0040432c(0x40ab8e);\n    return;\n}\n",
        "token_count": 436
    },
    "0040ac4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ac4c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    code **in_FS_OFFSET;\n    code *in_stack_ffffffc4;\n    code *pcStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x40ace3;\n    pcStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &pcStack24;\n    puVar3 = &var_4h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040a9c4(puVar3);\n    iVar1 = fcn.004088f8();\n    if (iVar1 - 3U < 3) {\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 4);\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040ab98, uVar2);\n        iVar4 = 7;\n        puVar3 = 0x47d81c;\n        do {\n            *puVar3 = 0xffffffff;\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 3);\n        in_stack_ffffffc4 = fcn.0040abd4;\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040abd4, uVar2);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.00404308(0x40acea);\n    return;\n}\n",
        "token_count": 400
    },
    "0040af30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040af30(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EDX;\n    uint var_458h;\n    uint *var_358h;\n    uint var_354h;\n    uint *var_350h;\n    uint var_34ch;\n    int32_t var_348h;\n    uint var_344h;\n    int32_t var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    int32_t var_32ch;\n    int32_t var_320h;\n    uint var_312h;\n    uint var_212h;\n    uint var_10dh;\n    int32_t var_8h;\n    uint var_4h;\n    \n    sub.kernel32.dll_VirtualQuery_1();\n    if (var_320h == 0x1000) {\n        iVar3 = var_32ch;\n        iVar2 = sub.kernel32.dll_GetModuleFileNameA_1(var_32ch, &var_212h, 0x105);\n        if (iVar2 != 0) {\n            var_8h = in_EDX - var_32ch;\n            goto code_r0x0040afa6;\n        }\n    }\n    iVar3 = *0x47d714;\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    var_8h = fcn.0040af24();\ncode_r0x0040afa6:\n    fcn.0040bda4(iVar3);\n    fcn.00408c34();\n    var_340h = 0x40b0b0;\n    var_338h = 0x40b0b0;\n    cVar1 = fcn.004036bc();\n    if (cVar1 != '\\0') {\n        var_340h = fcn.004047b8();\n        iVar3 = fcn.00408bd0();\n        if ((iVar3 != 0) && (*(var_340h + -1 + iVar3) != '.')) {\n            var_338h = 0x40b0b4;\n        }\n    }\n    uVar4 = fcn.00405b60(*(*0x47c288 + 4), &var_312h, 0x100);\n    sub.user32.dll_LoadStringA_1(uVar4);\n    fcn.00403480();\n    var_358h = &var_458h;\n    var_354h._0_1_ = 4;\n    var_350h = &var_10dh;\n    var_34ch._0_1_ = 6;\n    var_348h = var_8h;\n    var_344h._0_1_ = 5;\n    var_33ch._0_1_ = 6;\n    var_334h._0_1_ = 6;\n    fcn.004092f0(4, &var_358h);\n    fcn.00408bd0();\n    return;\n}\n",
        "token_count": 696
    },
    "0040b16c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b16c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0040435c();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "0040b1a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b1a8(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack40 = 0x40b1bc;\n        fcn.0040387c();\n    }\n    uStack44 = 0x40b202;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = &fcn.0040b1a8::var_4h;\n    puStack40 = &stack0xfffffffc;\n    fcn.00409330(arg_8h_00);\n    fcn.0040435c();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x40b209;\n    iStack48 = 0x40b201;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 261
    },
    "0040b228": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b228(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.004065fc();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "0040b264": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b264(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack44 = 0x40b27a;\n        fcn.0040387c();\n    }\n    uStack48 = 0x40b2d0;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h_00 = &fcn.0040b264::var_4h;\n    puStack44 = &stack0xfffffffc;\n    fcn.004065fc();\n    fcn.00409330(arg_8h_00);\n    fcn.0040435c();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x40b2d7;\n    iStack52 = 0x40b2cf;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 277
    },
    "0040b3f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040b3f8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack56 = 0x40b494;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    if (in_EAX == 0) {\n        fcn.004065fc();\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        fcn.004043a0();\n    }\n    var_1ch = var_4h;\n    var_18h._0_1_ = 0xb;\n    var_10h._0_1_ = 0xb;\n    var_8h._0_1_ = 0;\n    arg_ch = &var_1ch;\n    arg_8h = 2;\n    var_14h = param_2;\n    fcn.004065fc();\n    fcn.0040b1a8(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    uStack60 = 0x40b49b;\n    fcn.00404308();\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 389
    },
    "0040b4b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b4b4(uint arg_8h)\n\n{\n    fcn.0040b3f8();\n    fcn.0040b4a4();\n    return;\n}\n",
        "token_count": 46
    },
    "0040b4e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040b4e8(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    unkbyte3 Var3;\n    int32_t iVar2;\n    \n    iVar1 = *in_EAX;\n    Var3 = iVar1 >> 8;\n    if (iVar1 < -0x3fffff6d) {\n        iVar2 = iVar1;\n        if (iVar1 == -0x3fffff6e) {\ncode_r0x0040b54c:\n            return CONCAT31(iVar2 >> 8, 6);\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return CONCAT31(Var3, 7);\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            iVar2 = iVar1 + 0x3fffff73;\n            if (iVar2 == 0) goto code_r0x0040b555;\n        }\n        else {\n            iVar2 = iVar1 + 0x3fffff6f;\n            if (iVar1 + 0x3fffff71U < 2) goto code_r0x0040b54c;\n            if (iVar2 == 0) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return CONCAT31(Var3, 0xc);\n        }\n        iVar2 = iVar1 + 0x3fffff6d;\n        if (iVar2 == 0) {\ncode_r0x0040b555:\n            return CONCAT31(iVar2 >> 8, 9);\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        iVar2 = iVar1 + 0x3fffff6b;\n        if (iVar2 == 0) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        iVar2 = iVar1 + 0x3ffffec6;\n        if (iVar2 == 0) {\n            return 0xd;\n        }\n    }\n    return CONCAT31(iVar2 >> 8, 0x16);\n}\n",
        "token_count": 554
    },
    "0040b918": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get OS version"
        ],
        "decompiled_code": "\nvoid fcn.0040b918(void)\n\n{\n    int32_t iVar1;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    \n    uStack148 = 0x94;\n    iVar1 = sub.kernel32.dll_GetVersionExA(&uStack148);\n    if (iVar1 != 0) {\n        *0x46f0ac = uStack136;\n        *0x46f0b0 = uStack148;\n        *0x46f0b4 = uStack144;\n        *0x46f0b8 = uStack140;\n        fcn.00404570();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0040b919": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.0040b919(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    \n    iVar3 = *(unaff_EDI * 9 + -1);\n    uVar2 = in_EAX & 0xffffff00 | in_EAX + 0x24;\n    (&stack0x0000000d)[iVar3 * 8] = (&stack0x0000000d)[iVar3 * 8] + param_2;\n    piVar1 = iVar3 + -0x74c88b40;\n    *piVar1 = *piVar1 + 1;\n    *0x46f0b0 = *(uVar2 + 5);\n    *0x46f0b4 = *(uVar2 + 9);\n    *0x46f0b8 = *(uVar2 + 0xd);\n    *0x46f0ac = *0x10;\n    *(uVar2 - 3) = 0x40b966;\n    fcn.00404570();\n    return;\n}\n",
        "token_count": 281
    },
    "0040be0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid fcn.0040be0c(void)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint lpLCData;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x40be70;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    uVar1 = 7;\n    sub.kernel32.dll_GetLocaleInfoA_1();\n    fcn.00404570();\n    sub.kernel32.dll_GetACP(0);\n    fcn.004088f8();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00404308(0x40be77, uVar1);\n    return;\n}\n",
        "token_count": 186
    },
    "0040c3ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040c3ec(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x40c47c;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar1 = sub.kernel32.dll_GetLastError_1();\n    if (iVar1 == 0) {\n        iVar2 = fcn.0040b228();\n    }\n    else {\n        var_ch._0_1_ = 0;\n        var_10h = iVar1;\n        fcn.0040a978();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        in_stack_ffffffd0 = 1;\n        iVar2 = fcn.0040b264(1, &var_10h);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    fcn.00403ce4();\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x40c483;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 339
    },
    "0040c558": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c558(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    *(in_EAX + 0x4c) = 60000;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 151
    },
    "0040c7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c7e0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    *(in_EAX + 0xc) = 0xffff;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0xffffffff, 0);\n    *(in_EAX + 0x10) = uVar1;\n    uVar2 = 0;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n    *(in_EAX + 0x14) = uVar1;\n    *(in_EAX + 0x18) = 0xffffffff;\n    uVar1 = fcn.0040c558();\n    *(in_EAX + 0x20) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 292
    },
    "0040cc84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cc84(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x40cc93;\n    uStack24 = param_2;\n    sub.kernel32.dll_SetErrorMode();\n    uStack32 = 0x40ccf6;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x40ccd8;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004047b8();\n    sub.kernel32.dll_LoadLibraryA();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 250
    },
    "0040d3ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d3ac(int32_t *param_1)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint16_t uVar2;\n    \n    uVar2 = *in_EAX & 0xfff;\n    if (uVar2 < 0x10f) {\n        if (((*(in_EAX + 1) & 0x40) == 0) && (7 < uVar2)) {\n            if (uVar2 == 0x100) {\n                *in_EAX = 0;\n                fcn.00404308();\n            }\n            else if (uVar2 == 0x101) {\n                (**0x47d868)();\n            }\n            else {\n                sub.oleaut32.dll_VariantClear();\n            }\n        }\n        else {\n            *in_EAX = 0;\n        }\n    }\n    else {\n        cVar1 = fcn.004110d0();\n        if (cVar1 == '\\0') {\n            fcn.0040d39c();\n        }\n        else {\n            (**(*param_1 + 0x24))();\n        }\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0040d424": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d424(int32_t arg_8h, uint16_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar1 = *arg_ch;\n    if (arg_8h != 0) {\n        fcn.0040d3ac();\n    }\n    if ((uVar1 & 0xfff) < 0x10f) {\n        (**0x47d864)(arg_8h, arg_ch, arg_10h, &arg_14h);\n    }\n    else {\n        cVar2 = fcn.004110d0();\n        if (cVar2 == '\\0') {\n            fcn.0040d39c();\n        }\n        else {\n            (**(*in_ECX + 0x10))(&arg_14h, arg_10h);\n        }\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "0040d490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d490(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) == *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0040d490(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "0040d4ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d4ec(code *param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint plLbound;\n    uint var_31ch;\n    uint ppvData;\n    uint16_t *psa;\n    uint32_t cDims;\n    int32_t plUbound;\n    code *var_308h;\n    ushort *pvargDest;\n    uint rgsabound;\n    uint var_2fch;\n    uint rgIndices;\n    \n    var_308h = param_1;\n    if ((*param_2 & 0xfff) == 0xc) {\n        if ((*param_2 & 0x4000) == 0) {\n            psa = *(param_2 + 4);\n        }\n        else {\n            psa = **(param_2 + 4);\n        }\n        uVar2 = *psa;\n        cDims = uVar2;\n        pvargDest = in_EAX;\n        if (-1 < uVar2 - 1) {\n            iVar7 = 0;\n            piVar6 = &rgsabound;\n            do {\n                iVar3 = sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar7 + 1, piVar6 + 1);\n                if (iVar3 != 0) {\n                    fcn.00402884();\n                }\n                iVar3 = sub.oleaut32.dll_SafeArrayGetUBound();\n                if (iVar3 != 0) {\n                    fcn.00402884();\n                }\n                *piVar6 = (plUbound - piVar6[1]) + 1;\n                iVar7 = iVar7 + 1;\n                piVar6 = piVar6 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        iVar7 = sub.oleaut32.dll_SafeArrayCreate(0xc, cDims, &rgsabound);\n        if (iVar7 == 0) {\n            fcn.00402884();\n        }\n        fcn.0040d3ac();\n        *pvargDest = 0x200c;\n        *(pvargDest + 4) = iVar7;\n        if (-1 < cDims - 1) {\n            puVar4 = &var_2fch;\n            puVar5 = &rgIndices;\n            uVar2 = cDims;\n            do {\n                *puVar5 = *puVar4;\n                puVar5 = puVar5 + 1;\n                puVar4 = puVar4 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            iVar3 = sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &rgIndices, &ppvData);\n            if (iVar3 != 0) {\n                fcn.00402884();\n            }\n            iVar3 = sub.oleaut32.dll_SafeArrayPtrOfIndex(iVar7, &rgIndices, &var_31ch);\n            if (iVar3 != 0) {\n                fcn.00402884();\n            }\n            (*var_308h)();\n            cVar1 = fcn.0040d490(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    else {\n        sub.oleaut32.dll_VariantCopy();\n    }\n    return;\n}\n",
        "token_count": 801
    },
    "0040dafc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040dafc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    \n    puStack36 = 0x40db13;\n    fcn.0040d3a4();\n    uStack40 = 0x40db56;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040d7d8();\n    (**0x47d86c)();\n    fcn.0040db7c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x40db5d;\n    uStack40 = 0x40db55;\n    fcn.0040d3ac();\n    return;\n}\n",
        "token_count": 194
    },
    "0040db7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040db7c(uint16_t param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *puVar5;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint pvargDest;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint16_t var_4h;\n    uint var_2h;\n    \n    uVar1 = *param_2;\n    var_4h = param_1 & 0xfff;\n    puStack48 = 0x40dba8;\n    var_2h._0_2_ = param_1;\n    fcn.0040d3ac();\n    if ((uVar1 & 0xfff) < 0x10f) {\n        if (var_4h == 0x14) {\n            puStack48 = 0x40dc60;\n            fcn.0040d7e8();\n        }\n        else if (var_4h == 0x100) {\n            puStack48 = 0x40dbde;\n            cVar2 = fcn.0040db64();\n            if (cVar2 == '\\0') {\n                puStack48 = 0x40dbee;\n                fcn.0040d3a4();\n                uStack52 = 0x40dc3a;\n                iStack56 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc8;\n                puVar5 = &fcn.0040db7c::pvargDest;\n                puStack48 = &fcn.0040db7c::var_2h + 2;\n                iVar4 = sub.oleaut32.dll_VariantChangeTypeEx(puVar5, param_2, 0x400, 0, var_2h);\n                if (iVar4 != 0) {\n                    fcn.0040d394();\n                }\n                *in_EAX = pvargDest;\n                in_EAX[1] = uStack28;\n                in_EAX[2] = uStack24;\n                in_EAX[3] = uStack20;\n                *in_FS_OFFSET = puVar5;\n                fcn.0040d3ac(0x40dcfc);\n                return;\n            }\n        }\n        else if (var_4h == 0x101) {\n            puStack48 = 0x40dc4e;\n            fcn.0040dafc();\n        }\n        else if (var_4h < 0x10f) {\n            if ((uVar1 & 0xfff) == 0x14) {\n                puStack48 = 0x40dc80;\n                fcn.0040d984();\n            }\n            else {\n                puStack48 = 0x40dc8f;\n                uVar3 = fcn.0040db64();\n                if (uVar3 == '\\0') {\n                    puStack48 = uVar3 & 0xffff0000 | var_2h;\n                    uStack52 = 0;\n                    iStack56 = 0x400;\n                    iVar4 = sub.oleaut32.dll_VariantChangeTypeEx();\n                    if (iVar4 != 0) {\n                        fcn.0040d394();\n                    }\n                }\n            }\n        }\n        else {\n            puStack48 = 0x40dcbd;\n            cVar2 = fcn.004110d0();\n            if (cVar2 == '\\0') {\n                puStack48 = 0x40dcd4;\n                fcn.0040d39c();\n            }\n            else {\n                puStack48 = 0x40dccd;\n                (**(*var_8h + 0x18))();\n            }\n        }\n    }\n    else {\n        puStack48 = 0x40dce0;\n        uVar3 = fcn.004110d0();\n        if (uVar3 == '\\0') {\n            puStack48 = 0x40dcfc;\n            fcn.0040d39c();\n        }\n        else {\n            puStack48 = uVar3 & 0xffff0000 | var_2h;\n            uStack52 = 0x40dcf5;\n            (**(*var_ch + 0x1c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 1029
    },
    "0040dd5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040dd5c(int16_t param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *param_2;\n    puStack44 = 0x40dd7e;\n    fcn.0040d3ac();\n    if (param_1 == iVar1) {\n        puStack44 = 0x40dd8d;\n        fcn.0040d7d8();\n    }\n    else if (iVar1 == 0x100) {\n        if (param_1 != 8) {\n            puStack44 = 0x40ddb6;\n            fcn.0040d3a4();\n            uStack48 = 0x40ddf1;\n            uStack52 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffcc;\n            puStack44 = &stack0xfffffffc;\n            fcn.0040dd34();\n            fcn.0040db7c();\n            *in_FS_OFFSET = uStack52;\n            puStack44 = 0x40de70;\n            uStack48 = 0x40ddf0;\n            fcn.0040d3ac();\n            return;\n        }\n        puStack44 = 0x40dda9;\n        fcn.0040dd34();\n    }\n    else if ((param_1 == 0x100) && (iVar1 != 0x101)) {\n        if (iVar1 != 8) {\n            puStack44 = 0x40de20;\n            fcn.0040d3a4();\n            uStack48 = 0x40de5d;\n            uStack52 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffcc;\n            puStack44 = &stack0xfffffffc;\n            fcn.0040db7c();\n            fcn.0040dd04();\n            *in_FS_OFFSET = uStack52;\n            puStack44 = 0x40de70;\n            uStack48 = 0x40de5c;\n            fcn.0040d3ac();\n            return;\n        }\n        puStack44 = 0x40de16;\n        fcn.0040dd04();\n    }\n    else {\n        puStack44 = 0x40de70;\n        fcn.0040db7c();\n    }\n    return;\n}\n",
        "token_count": 561
    },
    "0040dee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040dee0(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uStack12;\n    \n    // switch table (21 cases) at 0x40def9\n    switch(*in_EAX) {\n    default:\n        fcn.0040d3a4();\n        fcn.0040dd5c();\n        break;\n    case 2:\n        uStack12 = in_EAX[4];\n        break;\n    case 3:\n        uStack12 = *(in_EAX + 4);\n        break;\n    case 4:\n        uStack12 = fcn.0040292c();\n        break;\n    case 5:\n        uStack12 = fcn.0040292c();\n        break;\n    case 6:\n        uStack12 = fcn.0040292c();\n        break;\n    case 0x10:\n        uStack12 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uStack12 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uStack12 = in_EAX[4];\n        break;\n    case 0x13:\n        uStack12 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        uStack12 = *(in_EAX + 4);\n    }\n    return uStack12;\n}\n",
        "token_count": 303
    },
    "0040dfbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040dfbc(void)\n\n{\n    ushort *in_EAX;\n    uint64_t uVar1;\n    int32_t iStack12;\n    \n    // switch table (21 cases) at 0x40dfd5\n    switch(*in_EAX) {\n    default:\n        fcn.0040d3a4();\n        fcn.0040dd5c();\n        uVar1 = iStack12;\n        break;\n    case 2:\n        uVar1 = in_EAX[4];\n        break;\n    case 3:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 4:\n        uVar1 = fcn.0040292c();\n        break;\n    case 5:\n        uVar1 = fcn.0040292c();\n        break;\n    case 6:\n        uVar1 = fcn.0040292c();\n        break;\n    case 0x10:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 320
    },
    "0040e144": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040e144(void)\n\n{\n    ushort *in_EAX;\n    float10 fStack44;\n    double dStack26;\n    \n    // switch table (21 cases) at 0x40e15d\n    switch(*in_EAX) {\n    default:\n        fcn.0040d3a4();\n        fcn.0040dd5c();\n        fStack44 = dStack26;\n        break;\n    case 2:\n        fStack44 = in_EAX[4];\n        break;\n    case 3:\n        fStack44 = *(in_EAX + 4);\n        break;\n    case 4:\n        fStack44 = *(in_EAX + 4);\n        break;\n    case 5:\n        fStack44 = *(in_EAX + 4);\n        break;\n    case 6:\n        fStack44 = *(in_EAX + 4) / *0x40e27c;\n        break;\n    case 7:\n        fStack44 = *(in_EAX + 4);\n        break;\n    case 0x10:\n        fStack44 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        fStack44 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        fStack44 = in_EAX[4];\n        break;\n    case 0x13:\n        fStack44 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        fStack44 = *(in_EAX + 4);\n    }\n    return fStack44;\n}\n",
        "token_count": 347
    },
    "0040e280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040e280(void)\n\n{\n    ushort *in_EAX;\n    int64_t iStack40;\n    uint uStack24;\n    uint uStack20;\n    \n    // switch table (21 cases) at 0x40e299\n    switch(*in_EAX) {\n    default:\n        fcn.0040d3a4();\n        fcn.0040dd5c();\n        iStack40 = CONCAT44(uStack20, uStack24);\n        break;\n    case 2:\n        iStack40 = ROUND(in_EAX[4] * *0x40e3f0);\n        break;\n    case 3:\n        iStack40 = ROUND(*(in_EAX + 4) * *0x40e3f0);\n        break;\n    case 4:\n        iStack40 = ROUND(*(in_EAX + 4) * *0x40e3f0);\n        break;\n    case 5:\n        iStack40 = ROUND(*(in_EAX + 4) * *0x40e3f0);\n        break;\n    case 6:\n        iStack40 = *(in_EAX + 4);\n        break;\n    case 0x10:\n        iStack40 = ROUND(*(in_EAX + 4) * *0x40e3f0);\n        break;\n    case 0x11:\n        iStack40 = ROUND(*(in_EAX + 4) * *0x40e3f0);\n        break;\n    case 0x12:\n        iStack40 = ROUND(in_EAX[4] * *0x40e3f0);\n        break;\n    case 0x13:\n        iStack40 = ROUND(*(in_EAX + 4) * *0x40e3f0);\n        break;\n    case 0x14:\n        iStack40 = ROUND(*(in_EAX + 4) * *0x40e3f0);\n    }\n    return iStack40;\n}\n",
        "token_count": 428
    },
    "0040e3f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e3f4(uint param_1, int16_t *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_8h;\n    \n    if (*param_2 == 0x100) {\n        puStack32 = 0x40e411;\n        fcn.0040435c();\n        return;\n    }\n    puStack32 = 0x40e41b;\n    fcn.0040d3a4();\n    uStack36 = 0x40e458;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.0040dd5c();\n    fcn.0040435c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x40e45f;\n    uStack36 = 0x40e457;\n    fcn.0040d3ac();\n    return;\n}\n",
        "token_count": 245
    },
    "0040e4b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e4b8(uint param_1, int16_t *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_8h;\n    \n    if (*param_2 == 8) {\n        puStack32 = 0x40e4d4;\n        fcn.00404b08();\n        return;\n    }\n    puStack32 = 0x40e4de;\n    fcn.0040d3a4();\n    uStack36 = 0x40e51b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.0040dd5c();\n    fcn.00404b08();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x40e522;\n    uStack36 = 0x40e51a;\n    fcn.0040d3ac();\n    return;\n}\n",
        "token_count": 246
    },
    "0040e528": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e528(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_8h;\n    \n    puStack32 = 0x40e53c;\n    fcn.0040d3a4();\n    uStack36 = 0x40e589;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.0040d7d8();\n    (**0x47d86c)();\n    if (var_10h != 0xd) {\n        fcn.0040d394();\n    }\n    fcn.00406148();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x40e590;\n    uStack36 = 0x40e588;\n    fcn.0040d3ac();\n    return;\n}\n",
        "token_count": 233
    },
    "0040e9dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e9dc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    \n    puStack32 = 0x40e9f0;\n    fcn.0040d3a4();\n    uStack36 = 0x40ea31;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.0040d7d8();\n    (**0x47d86c)();\n    fcn.0040d7d8();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x40ea38;\n    uStack36 = 0x40ea30;\n    fcn.0040d3ac();\n    return;\n}\n",
        "token_count": 197
    },
    "0040ec78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040ec78(uint param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    uVar2 = *in_EAX & 0xfff;\n    uVar3 = *param_2 & 0xfff;\n    puStack60 = 0x40eca8;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0040d3a4();\n    uStack64 = 0x40eedf;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    if (uVar2 < 0x10f) {\n        if (uVar3 < 0x10f) {\n            puStack60 = &stack0xfffffffc;\n            fcn.0040f368();\n        }\n        else {\n            puStack60 = &stack0xfffffffc;\n            cVar1 = fcn.004110d0();\n            if (cVar1 == '\\0') {\n                fcn.0040d39c();\n            }\n            else {\n                cVar1 = (**(*var_18h + 4))(&fcn.0040ec78::var_10h + 2);\n                if (cVar1 == '\\0') {\n                    fcn.0040dd5c();\n                    if (uVar2 != (var_28h & 0xfff)) {\n                        fcn.0040d394();\n                    }\n                    fcn.0040f368();\n                }\n                else {\n                    if (uVar2 != var_10h._2_2_) {\n                        fcn.0040dd5c();\n                        fcn.0040d7d8();\n                        if ((*var_4h & 0xfff) != var_10h._2_2_) {\n                            fcn.0040d394();\n                        }\n                    }\n                    (**(*var_18h + 0x2c))(var_ch);\n                }\n            }\n        }\n    }\n    else {\n        puStack60 = &stack0xfffffffc;\n        cVar1 = fcn.004110d0();\n        if (cVar1 == '\\0') {\n            fcn.0040d39c();\n        }\n        cVar1 = (**(*var_14h + 8))(&fcn.0040ec78::var_10h);\n        if (cVar1 == '\\0') {\n            if (uVar3 < 0x10f) {\n                if (uVar3 != uVar2) {\n                    fcn.0040dd5c();\n                    fcn.0040d7d8();\n                    if (uVar3 != (*var_4h & 0xfff)) {\n                        fcn.0040d394();\n                    }\n                }\n                fcn.0040f368();\n            }\n            else {\n                cVar1 = fcn.004110d0();\n                if (cVar1 == '\\0') {\n                    fcn.0040d39c();\n                }\n                else {\n                    cVar1 = (**(*var_18h + 4))(&fcn.0040ec78::var_10h + 2);\n                    if (cVar1 == '\\0') {\n                        fcn.0040d39c();\n                    }\n                    else {\n                        if (uVar2 != var_10h._2_2_) {\n                            fcn.0040dd5c();\n                            fcn.0040d7d8();\n                            if ((*var_4h & 0xfff) != var_10h._2_2_) {\n                                fcn.0040d394();\n                            }\n                        }\n                        (**(*var_18h + 0x2c))(var_ch);\n                    }\n                }\n            }\n        }\n        else if (uVar3 == var_10h) {\n            (**(*var_14h + 0x2c))(var_ch);\n        }\n        else {\n            fcn.0040dd5c();\n            if ((var_28h & 0xfff) != var_10h) {\n                fcn.0040d394();\n            }\n            (**(*var_14h + 0x2c))(var_ch);\n        }\n    }\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x40eee6;\n    uStack64 = 0x40eede;\n    fcn.0040d3ac();\n    return;\n}\n",
        "token_count": 1075
    },
    "0040eef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040eef4(uint param_1, int16_t *param_2)\n\n{\n    int16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    \n    if (*in_EAX == 0x101) {\n        puStack36 = 0x40ef12;\n        (**0x47d86c)();\n    }\n    if (*param_2 == 0x101) {\n        puStack36 = 0x40ef21;\n        fcn.0040d3a4();\n        puStack36 = 0x40ef2b;\n        fcn.0040d7d8();\n        uStack40 = 0x40ef64;\n        uStack44 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd4;\n        puStack36 = &stack0xfffffffc;\n        (**0x47d86c)();\n        fcn.0040ec78();\n        *in_FS_OFFSET = uStack44;\n        puStack36 = 0x40ef76;\n        uStack40 = 0x40ef63;\n        fcn.0040d3ac();\n        return;\n    }\n    puStack36 = 0x40ef76;\n    fcn.0040ec78();\n    return;\n}\n",
        "token_count": 303
    },
    "0040efc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040efc8(int32_t param_1)\n\n{\n    uint var_10h;\n    \n    fcn.0040e144();\n    fcn.0040e144();\n    if ((((param_1 != 0) && (param_1 != 1)) && (param_1 != 2)) && (param_1 != 3)) {\n        fcn.0040eef0();\n    }\n    fcn.0040532c();\n    return;\n}\n",
        "token_count": 109
    },
    "00410288": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00410288(void)\n\n{\n    char cVar1;\n    ulong uStack12;\n    \n    cVar1 = fcn.0041013c();\n    if (cVar1 == '\\0') {\n        fcn.00402884();\n    }\n    return uStack12;\n}\n",
        "token_count": 65
    },
    "004102b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004102b0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint16_t *puStack8;\n    \n    cVar1 = fcn.0041013c();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *puStack8;\n    }\n    return CONCAT44(puStack8, uVar2);\n}\n",
        "token_count": 99
    },
    "00410330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00410330(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    uint uVar1;\n    uint uStack4;\n    \n    if (param_2 != '\\0') {\n        uVar1 = fcn.0041013c();\n        return CONCAT44(uStack4, uVar1);\n    }\n    return CONCAT44(uStack4, in_EAX & 0xffff0000 | *in_EAX & 0xffff2000 | (*in_EAX & 0xffff2000) == 0x2000);\n}\n",
        "token_count": 129
    },
    "004103b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004103b4(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint rgIndices)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint16_t **in_FS_OFFSET;\n    uint16_t *puStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint ppvData;\n    uint16_t *psa;\n    uint var_12h;\n    uint pv;\n    \n    puStack40 = 0x4103c9;\n    cVar1 = fcn.0041013c();\n    if (cVar1 == '\\0') {\n        puStack40 = 0x4103d4;\n        fcn.00402884();\n    }\n    if (*psa != arg_10h) {\n        puStack40 = 0x4103e6;\n        fcn.00402884();\n    }\n    puStack40 = 0x4103ee;\n    fcn.0040d3a4();\n    uStack44 = 0x410479;\n    puStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_12h._0_2_ = var_12h & 0xfff;\n    if (var_12h == 0xc) {\n        puStack40 = &stack0xfffffffc;\n        iVar2 = sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &fcn.004103b4::rgIndices, &fcn.004103b4::ppvData);\n        if (iVar2 != 0) {\n            fcn.00402884();\n        }\n        fcn.0040d7d8();\n    }\n    else {\n        puStack40 = &stack0xfffffffc;\n        iVar2 = sub.oleaut32.dll_SafeArrayGetElement(psa, &fcn.004103b4::rgIndices, &fcn.004103b4::pv);\n        var_12h._2_2_ = var_12h;\n        if (iVar2 != 0) {\n            fcn.00402884();\n        }\n    }\n    fcn.0040d7d8();\n    *in_FS_OFFSET = psa;\n    fcn.0040d3ac(0x410480);\n    return;\n}\n",
        "token_count": 514
    },
    "004104ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004104ac(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint rgIndices)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint16_t **in_FS_OFFSET;\n    uint16_t *puStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uint *ppvData;\n    uint var_20h;\n    int16_t var_1ah;\n    uint16_t *psa;\n    uint var_12h;\n    uint *var_8h;\n    \n    puStack52 = 0x4104c5;\n    cVar1 = fcn.0041013c();\n    if (cVar1 == '\\0') {\n        puStack52 = 0x4104d0;\n        fcn.00402884();\n    }\n    puStack52 = 0x4104dd;\n    cVar1 = fcn.0041013c();\n    if (cVar1 == '\\0') {\n        puStack52 = 0x4104ea;\n        cVar1 = fcn.0041037c();\n        if ((cVar1 == '\\0') && (var_1ah != 0x100)) {\n            puStack52 = 0x4104fd;\n            fcn.00402884();\n        }\n    }\n    if (*psa != arg_10h) {\n        puStack52 = 0x41050f;\n        fcn.00402884();\n    }\n    uVar3 = var_12h & 0xfff;\n    if (uVar3 == 0xc) {\n        if (var_1ah == 0x100) {\n            puStack52 = 0x410531;\n            cVar1 = fcn.0041003c();\n            if (cVar1 == '\\0') goto code_r0x00410560;\n        }\n        puStack52 = &fcn.004104ac::ppvData;\n        puStack56 = &fcn.004104ac::rgIndices;\n        puStack60 = psa;\n        iVar2 = sub.oleaut32.dll_SafeArrayPtrOfIndex();\n        if (iVar2 != 0) {\n            fcn.00402884();\n        }\n        fcn.004052b8();\n        return;\n    }\ncode_r0x00410560:\n    puStack52 = 0x410568;\n    fcn.0040d3a4();\n    puStack56 = 0x4105e6;\n    puStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    if (uVar3 == 0xc) {\n        puStack52 = &stack0xfffffffc;\n        fcn.0040dd54();\n        ppvData = &fcn.004104ac::var_12h + 2;\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        fcn.0040dd5c();\n        if ((uVar3 - 8 < 2) || (uVar3 - 8 == 5)) {\n            ppvData = var_8h;\n        }\n        else {\n            ppvData = &fcn.004104ac::var_8h;\n        }\n    }\n    iVar2 = sub.oleaut32.dll_SafeArrayPutElement(psa, &fcn.004104ac::rgIndices, ppvData);\n    if (iVar2 != 0) {\n        fcn.00402884();\n    }\n    *in_FS_OFFSET = psa;\n    fcn.0040d3ac(0x4105ed);\n    return;\n}\n",
        "token_count": 805
    },
    "0041061c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0041061c(int32_t param_1, int32_t param_2, int32_t *param_3)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    if (-1 < param_1) goto code_r0x00410633;\n    do {\n        in_EAX = *in_EAX;\ncode_r0x00410633:\n        iVar3 = param_3 + *(param_3 + 1);\n        uVar1 = *(param_2 + iVar2 * 4) * *(iVar3 + 2);\n        param_3 = *(iVar3 + 6);\n        if (param_3 != NULL) {\n            param_3 = *param_3;\n        }\n        in_EAX = in_EAX + uVar1;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 <= param_1);\n    return uVar1 & 0xffffffff00000000 | ZEXT48(in_EAX);\n}\n",
        "token_count": 241
    },
    "0041065c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041065c(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    uVar2 = 0;\n    if ((in_EAX != 0) && (puVar1 = *(in_EAX + *(in_EAX + 1) + 6),  puVar1 != NULL)) {\n        uVar2 = *puVar1;\n    }\n    return uVar2;\n}\n",
        "token_count": 102
    },
    "00410698": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00410698(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t uStack24;\n    uint32_t uStack20;\n    \n    uStack24 = 1;\n    iVar1 = fcn.00410678();\n    uVar2 = iVar1 - 1;\n    uVar3 = uVar2;\n    if (0 < uVar2) {\n        do {\n            uStack20 = uVar3;\n            if (in_EAX != NULL) {\n                iVar1 = fcn.00410690();\n                uVar3 = fcn.00410690();\n                iVar1 = iVar1 + -1;\n                uVar2 = uVar3;\n                if (0 < iVar1) {\n                    do {\n                        uVar2 = fcn.00410690();\n                        if (uVar3 != uVar2) {\n                            uStack24 = 0;\n                            goto code_r0x004106f3;\n                        }\n                        iVar1 = iVar1 + -1;\n                    } while (iVar1 != 0);\n                }\n                in_EAX = *in_EAX;\n            }\n            uStack20 = uStack20 - 1;\n            uVar3 = uStack20;\n        } while (uStack20 != 0);\n    }\ncode_r0x004106f3:\n    return CONCAT44(uStack20, uVar2 & 0xffffff00 | uStack24);\n}\n",
        "token_count": 327
    },
    "00410700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410700(int32_t *param_1, uint param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00410678(param_2);\n    fcn.00405958(iVar1);\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (in_EAX != NULL) {\n                iVar2 = fcn.00410690();\n                *(*param_1 + iVar3 * 4) = iVar2 + -1;\n                in_EAX = *in_EAX;\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "004107c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004107c0(int32_t *param_1)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00410678();\n    fcn.00405958(iVar1 * 2);\n    for (iVar3 = 0; SBORROW4(iVar3, iVar1 * 2) != iVar3 + iVar1 * -2 < 0; iVar3 = iVar3 + 2) {\n        *(*param_1 + iVar3 * 4) = 0;\n        if (in_EAX != NULL) {\n            iVar2 = fcn.00410690();\n            *(*param_1 + (iVar3 + 1) * 4) = iVar2 + -1;\n            in_EAX = *in_EAX;\n        }\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00410818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00410818(void)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    if ((in_EAX != NULL) && (*in_EAX == '\\x11')) {\n        iVar1 = *(in_EAX + in_EAX[1] + 10);\n    }\n    if (iVar1 == 0x48) {\n        iVar1 = 0x100;\n    }\n    return iVar1;\n}\n",
        "token_count": 105
    },
    "00410ee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410ee4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != *(in_EAX + 4)) && (cVar1 = fcn.004110d0(),  cVar1 != '\\0')) {\n        (**(*var_8h + 0x1c))(arg_8h);\n        return;\n    }\n    fcn.00411050();\n    return;\n}\n",
        "token_count": 125
    },
    "00410f38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00410f38(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    (**(*in_EAX + 0x38))(&var_1h);\n    return *(arg_8h * 3 + 0x46f44a + (in_ECX >> 0x18));\n}\n",
        "token_count": 109
    },
    "00410fac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410fac(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_5h;\n    \n    uStack16 = 0x410fb7;\n    *NULL = fcn.004038e4();\n    uStack16 = 0x410fc7;\n    var_5h._0_1_ = extraout_DL;\n    fcn.0040c8e0();\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *(*0x47d9d0 + -0x400 + *(stack0xfffffff8 + 4) * 4) = *0x46f464;\n    *in_FS_OFFSET = uStack24;\n    uStack16 = 0x41100e;\n    uStack20 = 0x411006;\n    fcn.0040c9e0();\n    return;\n}\n",
        "token_count": 232
    },
    "00411170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411170(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_110h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x411246;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    puStack304 = 0x4111a3;\n    fcn.0040ca84();\n    uStack308 = 0x411229;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack304 = &stack0xfffffffc;\n    iVar3 = fcn.004057a4();\n    if (-1 < iVar3) {\n        iVar3 = iVar3 + 1;\n        iVar4 = 0;\n        do {\n            iVar1 = *(*0x47d9d0 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar1 != *0x46f464)) {\n                fcn.00403480();\n                fcn.00404564();\n                cVar2 = fcn.00408510();\n                if (cVar2 != '\\0') {\n                    *param_2 = iVar1;\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack312;\n    puStack304 = 0x411230;\n    uStack308 = 0x411228;\n    fcn.0040cb28();\n    return;\n}\n",
        "token_count": 451
    },
    "004118ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004118ac(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    code *pcVar2;\n    \n    pcVar2 = *(param_2 + 0xc);\n    if ((pcVar2 & 0xffffff00) != 0) {\n        if (*(param_2 + 0xf) < 0xfe) {\n            uVar1 = (*pcVar2)();\n            return uVar1;\n        }\n        if (*(param_2 + 0xf) != 0xff) {\n            uVar1 = (**(pcVar2 + *in_EAX))();\n            return uVar1;\n        }\n        pcVar2 = *((pcVar2 & 0xffffff) + in_EAX);\n    }\n    return in_EAX & 0xffffff00 | pcVar2 & 0xff;\n}\n",
        "token_count": 199
    },
    "004119ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004119ac(uint8_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    pcVar1 = *(param_2 + 4);\n    if (*(param_2 + 7) == 0xff) {\n        puVar3 = (pcVar1 & 0xffffff) + in_EAX;\n        iVar2 = *puVar3 + 1;\n        for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *param_1 = *puVar3;\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + 1;\n        }\n    }\n    else if (*(param_2 + 7) < 0xfe) {\n        (*pcVar1)();\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "004119f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004119f0(uint8_t *param_1, int32_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    piVar3 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar6 = (piVar3 & 0xffffff) + in_EAX;\n        uVar2 = *(**param_2 + 2 + *(**param_2 + 1));\n        uVar4 = *param_1;\n        if (uVar2 <= *param_1) {\n            uVar4 = uVar2;\n        }\n        *puVar6 = uVar4;\n        puVar1 = param_1 + 1;\n        for (uVar5 = uVar4; puVar6 = puVar6 + 1,  uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar6 = *puVar1;\n            puVar1 = puVar1 + 1;\n        }\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(piVar3 + *in_EAX))();\n        return;\n    }\n    (*piVar3)();\n    return;\n}\n",
        "token_count": 331
    },
    "00411a44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411a44(void)\n\n{\n    fcn.004119ac(0xff);\n    fcn.00404564();\n    return;\n}\n",
        "token_count": 35
    },
    "00411a6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411a6c(void)\n\n{\n    fcn.0040459c();\n    fcn.004119f0();\n    return;\n}\n",
        "token_count": 35
    },
    "00411ab4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411ab4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 7) == 0xff) {\n        fcn.00411aa0();\n        return;\n    }\n    if (0xfd < *(param_2 + 7)) {\n        (**(*(param_2 + 4) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 4))();\n    return;\n}\n",
        "token_count": 116
    },
    "00411af4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411af4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00411aa0();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 118
    },
    "00411c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411c50(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    code *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x411d28;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.00411be4();\n        fcn.00404b44();\n    }\n    else if (cVar1 == '\\v') {\n        var_ch = param_2[1];\n        if ((var_ch & 0xff000000) == 0xff000000) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00404a34();\n        }\n        else {\n            if ((var_ch & 0xff000000) == 0xfe000000) {\n                var_ch = *(*in_EAX + var_ch);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack32 = &stack0xfffffffc;\n                (*var_ch)();\n            }\n            else {\n                puStack32 = &stack0xfffffffc;\n                (*var_ch)();\n            }\n        }\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        fcn.004049f8();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x411d2f;\n    uStack36 = 0x411d27;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 423
    },
    "00411d38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411d38(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x411dfe;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.00404588();\n        fcn.00411c24();\n    }\n    else if (cVar1 == '\\v') {\n        var_8h = param_2[2];\n        if ((var_8h & 0xff000000) == 0xff000000) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00404a34();\n        }\n        else {\n            if ((var_8h & 0xff000000) == 0xfe000000) {\n                var_8h = *(*in_EAX + var_8h);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n            else {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x411e05;\n    uStack36 = 0x411dfd;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 402
    },
    "00411e0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.00411e0c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uchar *puVar1;\n    char *pcVar2;\n    float10 *pfVar3;\n    float10 fStack28;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 4);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        pfVar3 = (pcStack16 & 0xffffff) + in_EAX;\n        puVar1 = fcn.00411638();\n    // switch table (5 cases) at 0x411e4c\n        switch(*puVar1) {\n        case 0:\n            fStack28 = *pfVar3;\n            break;\n        case 1:\n            fStack28 = *pfVar3;\n            break;\n        case 2:\n            fStack28 = *pfVar3;\n            break;\n        case 3:\n            fStack28 = *pfVar3;\n            break;\n        case 4:\n            fStack28 = *pfVar3 / *0x411f20;\n            break;\n        default:\n            fStack28 = fStack28 & 0;\n        }\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            fStack28 = (*pcStack16)();\n        }\n        else {\n            fStack28 = (*pcStack16)();\n        }\n        pcVar2 = fcn.00411638();\n        if (*pcVar2 == '\\x04') {\n            fStack28 = fStack28 / *0x411f20;\n        }\n    }\n    return fStack28;\n}\n",
        "token_count": 417
    },
    "00412130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412130(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 7) == 0xff) {\n        fcn.0041211c();\n        return;\n    }\n    if (0xfd < *(param_2 + 7)) {\n        (**(*(param_2 + 4) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 4))();\n    return;\n}\n",
        "token_count": 115
    },
    "00412170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412170(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.0041211c();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 117
    },
    "004121b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004121b0(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 4);\n    if (*(param_2 + 7) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = puVar3[1];\n        *param_1 = *puVar3;\n        param_1[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 7)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 184
    },
    "004121f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004121f0(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 8);\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = param_1[1];\n        *puVar3 = *param_1;\n        puVar3[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)(*param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 196
    },
    "00412228": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00412228(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    \n    pcVar1 = *(param_2 + 4);\n    if (*(param_2 + 7) == 0xff) {\n        return *(in_EAX + (pcVar1 & 0xffffff));\n    }\n    if (0xfd < *(param_2 + 7)) {\n        uVar2 = (**(pcVar1 + *in_EAX))();\n        return uVar2;\n    }\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 150
    },
    "00412250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412250(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    int32_t in_EDX;\n    \n    pcVar1 = *(in_EDX + 8);\n    if (*(in_EDX + 0xb) == 0xff) {\n        puVar2 = in_EAX + (pcVar1 & 0xffffff);\n        *puVar2 = arg_8h;\n        puVar2[1] = arg_ch;\n    }\n    else if (*(in_EDX + 0xb) < 0xfe) {\n        (*pcVar1)(arg_8h, arg_ch);\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0041228c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041228c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 4);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.00406148();\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0041230c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041230c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 8);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.00406148();\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)();\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00413d94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00413d94(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar2 = fcn.004152c8();\n            cVar1 = fcn.00403744();\n            if ((cVar1 != '\\0') && ((iVar3 == 0 || (cVar1 = fcn.00403744(),  cVar1 != '\\0')))) {\n                iVar3 = iVar2;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 205
    },
    "00413fc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413fc4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack288 = 0x41405f;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.00403480();\n    fcn.00404564();\n    iVar1 = fcn.00413f20();\n    if (iVar1 != 0) {\n        var_10ch = var_4h;\n        var_108h._0_1_ = 0xb;\n        in_stack_fffffed4 = 0;\n        fcn.0040b264(0, &var_10ch);\n        fcn.00403ce4();\n    }\n    fcn.0041516c();\n    *in_FS_OFFSET = in_stack_fffffed4;\n    uStack292 = 0x414066;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 294
    },
    "00414194": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00414194(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    uVar1 = fcn.00403500();\n    *(in_EAX + 4) = uVar1;\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    iVar2 = fcn.00413e64();\n    fcn.0041516c();\n    *(iVar2 + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 217
    },
    "004142ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004142ec(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    var_10ch = 0;\n    uStack280 = 0x41436f;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00403480();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.004065fc();\n    fcn.0040b1a8(arg_8h_00, arg_ch);\n    fcn.00403ce4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack284 = 0x414376;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 279
    },
    "00414444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414444(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "004144fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004144fc(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "00414728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00414728(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x414788;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.004065fc();\n    fcn.0040b1a8(arg_8h, arg_ch);\n    fcn.00403ce4();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x41478f;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 227
    },
    "00414878": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __fastcall fcn.00414878(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = param_2;\n    if (-1 < param_2) {\n        do {\n            iVar1 = iVar1 + -1;\n        } while (-1 < iVar1);\n    }\n    if (-1 < param_2) {\n        param_2 = param_2 + 1;\n        do {\n            fcn.00414808();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "00414a4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414a4c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_ch;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack20;\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00414ba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414ba8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        iVar2 = in_ECX + 4;\n        do {\n            cVar1 = fcn.00408510();\n            if (cVar1 != '\\0') {\n                *in_EDX = *(iVar2 + -4);\n                return 1;\n            }\n            iVar2 = iVar2 + 8;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "00414be8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00414be8(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t *in_ECX;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            if (in_EAX == *in_ECX) {\n                var_5h = 1;\n                in_EAX = fcn.0040435c();\n                goto code_r0x00414c1f;\n            }\n            in_ECX = in_ECX + 2;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    var_5h = 0;\ncode_r0x00414c1f:\n    return in_EAX & 0xffffff00 | var_5h;\n}\n",
        "token_count": 209
    },
    "00414e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414e50(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x414ee6;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    if ((in_EAX != *0x413958) && (in_EAX != *(arg_8h + -8))) {\n        fcn.004034bc();\n        fcn.00414e50(arg_8h);\n        fcn.00403480();\n        fcn.00404564();\n        fcn.00405b10(0);\n        fcn.00405b60();\n        fcn.00414ce8();\n    }\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x414eed;\n    uStack280 = 0x414ee5;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 257
    },
    "00415028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00415028(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    ulong uVar4;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    puStack32 = 0x415042;\n    puStack32 = fcn.00403478();\n    uStack36 = 0x41504a;\n    uVar2 = fcn.00403478();\n    if (puStack32 != uVar2) {\ncode_r0x0041513f:\n        return uVar2 & 0xffffff00 | var_1h;\n    }\n    puStack32 = 0x41505a;\n    puStack32 = fcn.004162c4();\n    uStack36 = 0x415062;\n    uVar2 = fcn.004162c4();\n    if (puStack32 != uVar2) goto code_r0x0041513f;\n    puStack32 = 0x415077;\n    fcn.00403500();\n    uStack36 = 0x415138;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x415094;\n    puStack32 = &fcn.00415028::var_1h + 1;\n    fcn.00414fbc();\n    puStack44 = 0x4150a0;\n    fcn.00403500();\n    uStack48 = 0x41511b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &fcn.00415028::var_1h + 1;\n    fcn.00414fbc();\n    uVar3 = fcn.00417c7c();\n    uVar4 = fcn.00417c7c();\n    if (uVar4 >> 0x20 == uVar3 >> 0x20 && uVar4 == uVar3) {\n        fcn.00417c7c();\n        cVar1 = fcn.0040849c();\n        if (cVar1 != '\\0') {\n            var_1h._0_1_ = 1;\n            goto code_r0x00415102;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x00415102:\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x415122;\n    uStack48 = 0x41511a;\n    uVar2 = fcn.00403530();\n    return uVar2;\n}\n",
        "token_count": 677
    },
    "0041521c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041521c(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.00415218();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040b1a8(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00404278();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00403d05. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x47d014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 198
    },
    "00415804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00415804(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    uVar1 = fcn.00403500();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0x20) = 0;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 190
    },
    "00415858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00415858(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    int32_t iStack20;\n    uchar *puStack16;\n    int32_t var_5h;\n    \n    puStack16 = 0x415863;\n    *NULL = fcn.004038e4();\n    puStack16 = 0x415871;\n    var_5h._0_1_ = extraout_DL;\n    fcn.0041595c();\n    iStack20 = 0x4158ba;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00403530();\n    fcn.00403520();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4158c1;\n    iStack20 = 0x4158ad;\n    fcn.004159c0();\n    iStack20 = stack0xfffffff8 + 8;\n    uStack24 = 0x4158b9;\n    sub.kernel32.dll_DeleteCriticalSection_1();\n    return;\n}\n",
        "token_count": 270
    },
    "004159c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004159c0(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "00415ba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00415ba8(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x415c5e;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack300;\n    if (param_2 == 0) {\n        fcn.004043a0();\n    }\n    else {\n        puStack292 = &stack0xfffffffc;\n        fcn.00403480();\n        fcn.00404564();\n    }\n    var_114h = var_4h;\n    var_110h._0_1_ = 0xb;\n    fcn.00403480();\n    var_10ch = &var_104h;\n    var_108h._0_1_ = 4;\n    uVar1 = 1;\n    fcn.0040b264(1, &var_114h);\n    fcn.00403ce4();\n    *in_FS_OFFSET = uVar1;\n    uStack300 = 0x415c65;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 346
    },
    "00415eec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00415eec(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    (**(*in_EAX + 0x10))();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 140
    },
    "004160d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004160d0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 4) = param_1;\n    uVar1 = fcn.00403500();\n    *(in_EAX + 8) = uVar1;\n    fcn.00415e88();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 198
    },
    "004165b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004165b4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 0x18) = in_ECX;\n    fcn.004160d0();\n    if (in_DL != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 172
    },
    "00416674": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416674(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41671b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x41669e;\n    fcn.004167bc();\n    uStack48 = 0x4166fe;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar1 = (**(*param_2 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*param_2 + 0xc))();\n            (**(*param_2 + 0x18))(0);\n            (**(*in_EAX + 0x3c))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x416705;\n    uStack48 = 0x4166fd;\n    fcn.00416878();\n    return;\n}\n",
        "token_count": 354
    },
    "0041682c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041682c(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.004174fc;\n    fcn.004167d4(&stack0xfffffffc);\n    (**(*param_2 + 4))(pcVar1);\n    return;\n}\n",
        "token_count": 91
    },
    "0041688c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041688c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x416921;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    iVar2 = (**(*param_2 + 0x14))();\n    if ((iVar1 == iVar2) && (-1 < iVar1 + -1)) {\n        uVar3 = true;\n        do {\n            (**(*in_EAX + 0xc))();\n            (**(*param_2 + 0xc))(0);\n            fcn.00404704();\n            if (!uVar3) break;\n            iVar1 = iVar1 + -1;\n            uVar3 = iVar1 == 0;\n        } while (!uVar3);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x416928;\n    uStack44 = 0x416920;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 334
    },
    "00416938": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416938(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.00416934();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040b1a8(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00404278();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00403d05. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x47d014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 197
    },
    "004169c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004169c8(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x416aa0;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x4169f6;\n    fcn.004167bc();\n    uStack52 = 0x416a7e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x24))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x24))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x416a85;\n    uStack52 = 0x416a7d;\n    fcn.00416878();\n    return;\n}\n",
        "token_count": 356
    },
    "00416ab8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416ab8(void)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    uVar1 = *(in_EAX + 5);\n    uVar2 = *(in_EAX + 6);\n    puStack20 = 0x416ae6;\n    fcn.004175b0();\n    puStack20 = 0x416af0;\n    fcn.004175cc();\n    uStack24 = 0x416b34;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00416b40();\n    *in_FS_OFFSET = uStack28;\n    *(in_EAX + 5) = uVar1;\n    *(in_EAX + 6) = uVar2;\n    *(in_EAX + 4) = *(in_EAX + 4);\n    return;\n}\n",
        "token_count": 248
    },
    "00416d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00416d88(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x416e93;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar1 = (**(*in_EAX + 0x14))();\n    fcn.004043a0();\n    iVar2 = iVar1;\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.004045c0();\n            fcn.004045c0();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.004043f8();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = fcn.004045c0();\n            if (iVar2 != 0) {\n                fcn.004028e0();\n            }\n            iVar2 = fcn.004045c0();\n            if (iVar2 != 0) {\n                fcn.004028e0();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x416e9a;\n    uStack56 = 0x416e92;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 433
    },
    "00416eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00416eb0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x416f28;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = (**(*in_EAX + 0x34))();\n            if (iVar2 == 0) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x416f2f;\n    uStack36 = 0x416f27;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 266
    },
    "00416f3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416f3c(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_14h = 0;\n    var_ch = 0;\n    uStack40 = 0x416fe8;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_4h = param_2;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_10h = iVar1;\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar1 = fcn.0040bccc();\n            if (iVar1 != 0) {\n                fcn.00404818(&fcn.00416f3c::var_14h);\n                iVar1 = (**(*in_EAX + 0x34))();\n                if (iVar1 == 0) goto code_r0x00416fca;\n            }\n            var_8h = var_8h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    var_8h = -1;\ncode_r0x00416fca:\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x416fef;\n    uStack40 = 0x416fdf;\n    fcn.00404308();\n    uStack40 = 0x416fe7;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 440
    },
    "004170bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004170bc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41715a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x4170e4;\n    fcn.004167bc();\n    uStack40 = 0x41713d;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00417c7c();\n    fcn.00417c48();\n    fcn.004043f8();\n    (**(*param_2 + 8))();\n    (**(*in_EAX + 0x2c))();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x417144;\n    uStack40 = 0x41713c;\n    fcn.00416878();\n    return;\n}\n",
        "token_count": 304
    },
    "00417168": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417168(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x417209;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_1 != param_2) {\n        puStack40 = 0x417197;\n        fcn.004167bc();\n        uStack44 = 0x4171ec;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0xc))();\n        uVar1 = (**(*in_EAX + 0x18))();\n        (**(*in_EAX + 0x48))();\n        (**(*in_EAX + 100))();\n        *in_FS_OFFSET = uVar1;\n        uStack44 = 0x4171f3;\n        uStack48 = 0x4171eb;\n        fcn.00416878();\n        return;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x417210;\n    uStack32 = 0x417208;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 366
    },
    "0041724c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041724c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x4172f0;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x417273;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00419c04();\n    puStack32 = 0x41727b;\n    fcn.004167bc();\n    uStack36 = 0x4172cb;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*var_4h + 0x44))();\n    while( true ) {\n        cVar1 = fcn.00418e54();\n        if (cVar1 != '\\0') break;\n        fcn.0041a864();\n        (**(*var_4h + 0x38))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4172d2;\n    uStack36 = 0x4172ca;\n    fcn.00416878();\n    return;\n}\n",
        "token_count": 382
    },
    "004174fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004174fc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x417572;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.0041bd68();\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.0041d2b8();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    fcn.0041bd70();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x417579;\n    uStack36 = 0x417571;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 256
    },
    "00417900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417900(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x28))();\n    return;\n}\n",
        "token_count": 38
    },
    "00417c48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00417c48(void)\n\n{\n    ulong uVar1;\n    int32_t *in_EAX;\n    \n    uVar1 = (**(*in_EAX + 0x14))(0, 0);\n    return uVar1;\n}\n",
        "token_count": 56
    },
    "00417c7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00417c7c(void)\n\n{\n    int32_t *in_EAX;\n    ulong uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    uVar2 = 0;\n    uVar1 = (**(*in_EAX + 0x14))();\n    uVar1 = (**(*in_EAX + 0x14))(0, 0, uVar2, uVar3, uVar1);\n    (**(*in_EAX + 0x14))(uVar2, uVar3, uVar1);\n    return CONCAT44(uVar3, uVar2);\n}\n",
        "token_count": 144
    },
    "00417d34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417d34(uint arg_8h)\n\n{\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00403480();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    fcn.0040b264(0, &var_8h);\n    fcn.00403ce4();\n    return;\n}\n",
        "token_count": 115
    },
    "00417fd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417fd8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY32;\n    uint uStackY28;\n    uchar *puStackY24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY24 = 0x417ff4;\n    fcn.004185f4(0x1000);\n    uStackY28 = 0x418028;\n    uStackY32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY24 = &stack0xfffffffc;\n    fcn.0041a41c();\n    *in_FS_OFFSET = uStackY32;\n    puStackY24 = 0x41802f;\n    uStackY28 = 0x418027;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 189
    },
    "00418094": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00418094(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "00418158": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00418158(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.0041819c(0, in_EAX & 0xffff0000 | arg_8h & 0xffff);\n    if (in_DL != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 163
    },
    "00418470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418470(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_DL = extraout_DL;\n    }\n    fcn.00403500();\n    fcn.004047b8();\n    fcn.00418538(arg_8h);\n    if (in_DL != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 147
    },
    "004184c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004184c8(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x41852b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = *(arg_8h + -4);\n    var_4h._0_1_ = 6;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.004065fc();\n    fcn.0040b1a8(arg_8h_00, arg_ch);\n    fcn.00403ce4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack28 = 0x418532;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 265
    },
    "004185f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004185f4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.00402728();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "00418740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418740(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_14h;\n    *(in_EAX + 0xc) = arg_10h;\n    fcn.0040435c();\n    fcn.0040435c();\n    if (in_DL != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 225
    },
    "00418cb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418cb8(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040b264(0, auStack12);\n    fcn.00403ce4();\n    return;\n}\n",
        "token_count": 64
    },
    "00418f6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00418f6c(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    uStack36 = 0x41907b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar4 = in_EAX[0xc];\n    if (iVar4 != 0) {\n        uStack48 = 0x41905e;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        var_ch = *(iVar4 + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < var_ch + -1) {\n            do {\n                puStack32 = puVar1;\n                puVar3 = fcn.004152c8();\n                fcn.004043a0();\n                (**(*in_EAX + 0x20))();\n                iVar4 = fcn.00418874();\n                fcn.004152c8();\n                fcn.00418ef0();\n                if ((iVar4 == 0) && (cVar2 = fcn.00418798(),  cVar2 != '\\0')) {\n                    fcn.004152c8();\n                    fcn.004158d4();\n                    fcn.00415414();\n                }\n                else {\n                    (***puVar3)();\n                }\n                var_ch = var_ch + -1;\n                puVar1 = puStack32;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x419065;\n        uStack48 = 0x41905d;\n        fcn.004190b0();\n        return;\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x419082;\n    uStack36 = 0x41907a;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 532
    },
    "004190ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004190ec(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    iVar2 = fcn.00403478();\n    do {\n        if (iVar2 == *0x412b18) {\n            if (*(in_EAX + 0x74) == 0) {\n                uVar4 = fcn.00414794();\n            }\n            else {\n                uVar4 = fcn.00414694();\n            }\n            return uVar4;\n        }\n        piVar3 = fcn.0041471c();\n        if ((piVar3 != NULL) && (iVar2 = *piVar3,  -1 < iVar2 + -1)) {\n            iStack20 = 0;\n            do {\n                uVar4 = **(piVar3 + iStack20 * 2 + 1);\n                cVar1 = fcn.00403494();\n                if (cVar1 != '\\0') {\n                    return uVar4;\n                }\n                iStack20 = iStack20 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = fcn.004034bc();\n    } while( true );\n}\n",
        "token_count": 298
    },
    "004192b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004192b0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4192c3;\n    (**(*param_2 + 0x20))();\n    uStack24 = 0x419350;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.00418e54();\n    if (cVar1 == '\\0') {\n        fcn.00416220();\n    }\n    while( true ) {\n        cVar1 = fcn.00418e54();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.00419198();\n        if (cVar1 - 2U < 3) {\n            fcn.00419b54();\n        }\n        fcn.00416168();\n        fcn.00419c04();\n        while( true ) {\n            cVar1 = fcn.00418e54();\n            if (cVar1 != '\\0') break;\n            fcn.00419d70();\n        }\n        fcn.00419c0c();\n    }\n    fcn.00419c0c();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x419357;\n    uStack24 = 0x41934f;\n    (**(*param_2 + 0x24))();\n    return;\n}\n",
        "token_count": 370
    },
    "00419878": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419878(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        puStack32 = 0x41989a;\n        cVar3 = fcn.00418e54();\n        if (cVar3 != '\\0') break;\n        puStack32 = 0x419892;\n        fcn.00419d70();\n    }\n    puStack32 = 0x4198a6;\n    fcn.00419c0c();\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = *(in_EAX + 0x28);\n    puStack32 = 0x4198c3;\n    uVar4 = fcn.0040372c();\n    *(in_EAX + 0x2c) = uVar4;\n    uStack36 = 0x41993a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar5 = fcn.0040372c();\n    *(in_EAX + 0x28) = iVar5;\n    if (iVar5 == 0) {\n        *(in_EAX + 0x28) = *(in_EAX + 0x18);\n    }\n    while( true ) {\n        cVar3 = fcn.00418e54();\n        if (cVar3 != '\\0') break;\n        fcn.00419630();\n    }\n    fcn.00419c0c();\n    *in_FS_OFFSET = uStack40;\n    *(in_EAX + 0x2c) = uVar1;\n    *(in_EAX + 0x28) = uVar2;\n    return;\n}\n",
        "token_count": 463
    },
    "00419988": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00419988(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    float fStack12;\n    \n    cVar1 = fcn.0041aa04();\n    if (cVar1 == '\\x0f') {\n        fcn.004191bc();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar2 = fcn.00419b54();\n        fStack12 = iVar2;\n    }\n    return fStack12;\n}\n",
        "token_count": 134
    },
    "00419a14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00419a14(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    double dStack16;\n    \n    cVar1 = fcn.0041aa04();\n    if (cVar1 == '\\x11') {\n        fcn.004191bc();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar2 = fcn.00419b54();\n        dStack16 = iVar2;\n    }\n    return dStack16;\n}\n",
        "token_count": 134
    },
    "00419b54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00419b54(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    char cStack8;\n    uchar uStack7;\n    int16_t iStack6;\n    \n    cVar1 = fcn.0041aa04();\n    if (cVar1 == '\\x02') {\n        fcn.004191bc();\n        iStack12 = cStack8;\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.004191bc();\n        iStack12 = iStack6;\n    }\n    else if (cVar1 == '\\x04') {\n        fcn.004191bc();\n    }\n    else {\n        fcn.00418cac();\n    }\n    return CONCAT26(iStack6, CONCAT15(uStack7, CONCAT14(cStack8, iStack12)));\n}\n",
        "token_count": 184
    },
    "00419bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00419bc0(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.00419198();\n    if (cVar1 == '\\x13') {\n        fcn.0041aa04();\n        fcn.004191bc();\n    }\n    else {\n        iStack12 = fcn.00419b54();\n        iStack8 = iStack12 >> 0x1f;\n    }\n    return CONCAT44(iStack8, iStack12);\n}\n",
        "token_count": 124
    },
    "00419f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419f50(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = fcn.00414b2c();\n    if ((pcVar2 != NULL) && (cVar1 = (*pcVar2)(),  cVar1 != '\\0')) {\n        fcn.00411950();\n        return;\n    }\n    fcn.00418cac();\n    return;\n}\n",
        "token_count": 109
    },
    "0041a3bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a3bc(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040435c();\n    while( true ) {\n        cVar1 = fcn.00414cc4();\n        if (cVar1 != '\\0') break;\n        fcn.00409330(param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041a864": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a864(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41a911;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.00419198();\n    if ((cVar1 == '\\x12') || (cVar1 == '\\x14')) {\n        fcn.0041a920();\n        fcn.00404588();\n    }\n    else {\n        cVar1 = fcn.0041aa04();\n        if (cVar1 == '\\x06') {\n            fcn.004191bc();\n        }\n        else if (cVar1 == '\\f') {\n            fcn.004191bc();\n        }\n        else {\n            fcn.00418cac();\n        }\n        fcn.00404944();\n        fcn.004191bc();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41a918;\n    uStack28 = 0x41a910;\n    fcn.004049f8();\n    return;\n}\n",
        "token_count": 296
    },
    "0041a920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a920(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41a9f7;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.00419198();\n    if ((cVar1 == '\\x06') || (cVar1 == '\\f')) {\n        fcn.0041a864();\n        fcn.00404b44();\n    }\n    else {\n        cVar1 = fcn.0041aa04();\n        if (cVar1 == '\\x12') {\n            fcn.004191bc();\n            fcn.00404ca0();\n            fcn.004191bc();\n        }\n        else if (cVar1 == '\\x14') {\n            fcn.004191bc();\n            fcn.00404944();\n            fcn.004191bc();\n            fcn.00406508();\n        }\n        else {\n            fcn.00418cac();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41a9fe;\n    uStack32 = 0x41a9ee;\n    fcn.00404308();\n    uStack32 = 0x41a9f6;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 351
    },
    "0041acf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.0041acf8(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0041acf8::var_1h + 1;\n    uStack36 = 0x41ad90;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &fcn.0041acf8::var_1h + 1;\n    if (param_2 != '\\0') {\n        (**(*in_EAX + 0x24))();\n        fcn.0041a828();\n        fcn.0041a828();\n        puVar1 = puStack32;\n    }\n    while( true ) {\n        puStack32 = puVar1;\n        cVar2 = fcn.00418e54();\n        if (cVar2 != '\\0') break;\n        fcn.0041acb0();\n        puVar1 = puStack32;\n    }\n    fcn.00419c0c();\n    while( true ) {\n        cVar2 = fcn.00418e54();\n        if (cVar2 != '\\0') break;\n        fcn.0041acf8();\n    }\n    fcn.00419c0c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41ad97;\n    uStack36 = 0x41ad8f;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 413
    },
    "0041af0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041af0c(uint param_1, int32_t param_2)\n\n{\n    if (0 < param_2) {\n        do {\n            if (param_2 < 0x101) {\n                fcn.004191bc();\n                param_2 = 0;\n            }\n            else {\n                fcn.004191bc();\n                param_2 = param_2 + -0x100;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0041af54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041af54(uint arg_8h)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41b0f8;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x41af80;\n    fcn.00418d20();\n    puStack52 = 0x41af8c;\n    fcn.00403500();\n    puStack52 = 0x41af9b;\n    fcn.00403500();\n    uStack56 = 0x41b0d3;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.004191bc();\n    fcn.00417ccc(var_10h, var_10h >> 0x1f);\n    fcn.004191bc();\n    puStack76 = 0x41aff5;\n    fcn.004185f4(0x400);\n    uStack80 = 0x41b0ae;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0041a864();\n    fcn.004191bc();\n    fcn.00417ccc(var_10h, var_10h >> 0x1f);\n    fcn.004191bc();\n    cVar1 = fcn.00411170();\n    if (cVar1 != '\\0') {\n        fcn.00406130();\n        cVar1 = fcn.0040cbec();\n        if (cVar1 != '\\0') goto code_r0x0041b081;\n    }\n    fcn.0040b228();\n    fcn.00403ce4();\ncode_r0x0041b081:\n    *in_EAX = *(var_14h + 4);\n    (**(_pe_dos_header + 0xc))();\n    *in_FS_OFFSET = var_10h;\n    iStack84 = 0x41b0b5;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 630
    },
    "0041b398": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041b398(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.00417c48();\n    return iVar1 + *(in_EAX + 0x10);\n}\n",
        "token_count": 58
    },
    "0041b3b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b3b0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.00417c48();\n    if ((iVar1 <= param_2) && (param_2 <= *(in_EAX + 0x10) + iVar1)) {\n        *(in_EAX + 0x10) = param_2 - iVar1;\n        return;\n    }\n    fcn.0041b4d8();\n    fcn.00417c68(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 146
    },
    "0041b450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b450(code *arg_8h, uint arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x41b465;\n    fcn.00403500();\n    uStack24 = 0x41b4c8;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (*arg_8h)();\n    fcn.0041d3c0();\n    fcn.00417c7c();\n    fcn.0041b404();\n    fcn.0041b404();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41b4cf;\n    uStack24 = 0x41b4c7;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 227
    },
    "0041b554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b554(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uVar1 = *(in_EAX + 0x20);\n    *(in_EAX + 0x20) = 0;\n    uStack32 = 0x41b5e6;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    fcn.0041d3c0();\n    if ((param_2 != 0) && (iVar2 = fcn.004162c4(),  -1 < iVar2 + -1)) {\n        do {\n            fcn.0041bd68();\n            fcn.004162cc();\n            fcn.0041bdbc();\n            fcn.0041bd70();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0041bd70();\n    *in_FS_OFFSET = uStack36;\n    *(in_EAX + 0x20) = uVar1;\n    return;\n}\n",
        "token_count": 306
    },
    "0041becc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041becc(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x41bf14;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    fcn.00404564();\n    fcn.0041d174();\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x41bf1b;\n    uStack16 = 0x41bf13;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 170
    },
    "0041c020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c020(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x41c0b6;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStackY32 = 0x41c03f;\n    fcn.0041becc(arg_8h);\n    fcn.004043a0();\n    uStackY32 = 0x41c099;\n    uStackY36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00404308();\n    fcn.0041b554();\n    *in_FS_OFFSET = uStackY36;\n    uStackY32 = 0x41c098;\n    fcn.0040435c();\n    return;\n}\n",
        "token_count": 240
    },
    "0041c120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c120(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x41c1e9;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    var_4h = fcn.004118dc();\n    cVar1 = fcn.0041c0c4(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        fcn.0041becc(arg_8h);\n        cVar1 = **(arg_8h + -0xc);\n        if (cVar1 == '\\x01') {\n            fcn.0041bfb4(arg_8h);\n        }\n        else if (cVar1 == '\\x02') {\n            fcn.0041b504();\n        }\n        else if (cVar1 == '\\x03') {\n            fcn.00411644();\n            fcn.0041bbd8();\n        }\n        else if (cVar1 == '\\x06') {\n            fcn.0041bf20(arg_8h);\n        }\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41c1f0;\n    uStack20 = 0x41c1e8;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 362
    },
    "0041c24c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c24c(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    arg_8h_00 = fcn.00411e0c();\n    cVar1 = fcn.0041c1f4(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        fcn.0041becc(arg_8h);\n        fcn.0041bb48(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "0041c2e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c2e8(uint arg_8h)\n\n{\n    char cVar1;\n    ulong uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.00412228();\n    cVar1 = fcn.0041c298(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        fcn.0041becc(arg_8h);\n        fcn.0041bd10(uVar2, uVar2 >> 0x20);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0041cab4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cab4(uint arg_8h)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_10ch;\n    uint var_ch;\n    int32_t var_8h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x41cb5a;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.004121b0();\n    cVar1 = fcn.0041ca30(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        fcn.0041becc(arg_8h);\n        if (var_8h == 0) {\n            fcn.0041d3c0();\n        }\n        else {\n            fcn.004037ec();\n            fcn.00404564();\n            fcn.0041bbd8();\n        }\n    }\n    *in_FS_OFFSET = uStack288;\n    puStack280 = 0x41cb61;\n    uStack284 = 0x41cb59;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 274
    },
    "0041cb68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cb68(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41cbe3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.0041be84(*(arg_8h + 8));\n    if (cVar1 == '\\0') {\n        fcn.0040ffd8();\n    }\n    else {\n        fcn.00412130();\n        fcn.00410068();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41cbea;\n    uStack32 = 0x41cbe2;\n    fcn.00405368();\n    return;\n}\n",
        "token_count": 218
    },
    "0041d30c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d30c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41d3b2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.0040645c();\n    iVar1 = fcn.004045c0();\n    iVar2 = fcn.00404b64();\n    if (SBORROW4(iVar1, iVar2 * 2) == iVar1 + iVar2 * -2 < 0) {\n        fcn.0041d3c0();\n        fcn.00404b64();\n        fcn.0041b404();\n        fcn.0041b404();\n    }\n    else {\n        fcn.00404588();\n        fcn.0041d220();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41d3b9;\n    uStack36 = 0x41d3a9;\n    fcn.00404308();\n    uStack36 = 0x41d3b1;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 319
    },
    "0041d64c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041d64c(uchar param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar extraout_CL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb4;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x41d665;\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n        param_1 = extraout_CL;\n    }\n    uStack52 = 0x41d6f6;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &fcn.0041d64c::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.00403500();\n    fcn.0041d3d4();\n    *(in_EAX + 0xe) = param_1;\n    *(in_EAX + 0xc) = param_1;\n    iVar1 = fcn.004042bc(in_EAX + 8, 4, in_EAX);\n    *(in_EAX + 4) = iVar1;\n    if (iVar1 == 0) {\n        sub.kernel32.dll_GetLastError_1();\n        fcn.0040a978();\n        var_ch = 0;\n        var_8h._0_1_ = 0xb;\n        in_stack_ffffffb4 = 0;\n        fcn.0040b264(0, &fcn.0041d64c::var_ch);\n        fcn.00403ce4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    fcn.00404308(0x41d6fd);\n    return;\n}\n",
        "token_count": 483
    },
    "0041d790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041d790(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41d7fe;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 != 0) {\n        fcn.0040a978();\n        var_10h = 0;\n        var_ch._0_1_ = 0xb;\n        var_4h._0_1_ = 0;\n        in_stack_ffffffd0 = 1;\n        var_8h = param_2;\n        fcn.0040b264(1, &var_10h);\n        fcn.00403ce4();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x41d805;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 328
    },
    "0041da6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041da6c(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x24) = *0x41dab4;\n    if (param_1 != 0) {\n        fcn.0041dc24();\n    }\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 190
    },
    "0041dfc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041dfc4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    bool bVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    bVar2 = *0x10 == 0x14;\n    fcn.00404704();\n    if (!bVar2) {\n        if (param_2 != 0) {\n            cVar1 = fcn.004087b8();\n            if (cVar1 == '\\0') {\n                uStack16 = 0xb;\n                iStack20 = param_2;\n                fcn.0040b264(0, &iStack20);\n                fcn.00403ce4();\n            }\n        }\n        if (in_EAX[1] == NULL) {\n            (**(*in_EAX + 0x20))(param_2);\n        }\n        else {\n            (**(*in_EAX[1] + 0x20))(param_2);\n        }\n        fcn.0041e144();\n        fcn.0041e050();\n        fcn.0041e144();\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "0041e144": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e144(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        fcn.0040459c();\n        piVar1 = fcn.0040382c();\n        if (piVar1 != NULL) {\n            if (param_2 == '\\0') {\n                *piVar1 = 0;\n            }\n            else {\n                *piVar1 = in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0041e394": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041e394(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041da6c();\n    uVar1 = fcn.00403500();\n    *(in_EAX + 0x50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 170
    },
    "0041e558": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041e558(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00403500();\n    *(in_EAX + 0xc) = in_ECX;\n    *(in_EAX + 0x10) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "0041eac8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041eac8(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 68
    },
    "0041fd74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041fd74(ushort param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    ushort extraout_CX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_CX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x20) = param_1;\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 170
    },
    "0041fdd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fdd4(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "0041fde0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fde0(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 43
    },
    "0041ff80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ff80(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x41ff99;\n    fcn.0041fdd4();\n    uStack32 = 0x41ffe9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = *(param_2 + 0x10);\n    puStack28 = &stack0xfffffffc;\n    iVar2 = fcn.0041fdec();\n    *(param_2 + 0x10) = iVar2;\n    if (iVar1 != iVar2) {\n        fcn.0040372c();\n    }\n    fcn.0041fed0();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41fff0;\n    uStack32 = 0x41ffe8;\n    fcn.0041fde0();\n    return;\n}\n",
        "token_count": 265
    },
    "004200d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004200d0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puStack24 = 0x4200e7;\n    iVar1 = fcn.0041595c();\n    uStack28 = 0x42016d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while (var_4h < *(iVar1 + 8)) {\n        fcn.004152c8();\n        fcn.004218e0();\n        var_4h = var_4h + 1;\n        fcn.00421bbc();\n    }\n    fcn.00420064();\n    fcn.00420064();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x420174;\n    if (-1 < var_4h + -1) {\n        do {\n            uStack28 = 0x420159;\n            fcn.004152c8();\n            uStack28 = 0x42015e;\n            fcn.00421a94();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    uStack28 = 0x42016c;\n    fcn.004159c0();\n    return;\n}\n",
        "token_count": 348
    },
    "00420868": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420868(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    *0x46f524 = 0;\n    uVar1 = fcn.0041fdec();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 0x80000008;\n    *(in_EAX + 0x1c) = *0x47da34;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 210
    },
    "00420900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420900(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x42091b;\n    cVar1 = fcn.004036bc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x42092b;\n        fcn.004205c0();\n        uStack24 = 0x4209bb;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x420943;\n        puStack20 = &stack0xfffffffc;\n        fcn.004205c0();\n        uStack36 = 0x42099e;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0041fff8();\n        fcn.00420a3c();\n        if (*(in_EAX + 0x1c) != *(param_2 + 0x1c)) {\n            fcn.00420cc0();\n            fcn.00420cdc();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x4209a5;\n        uStack36 = 0x42099d;\n        fcn.004205d0();\n        return;\n    }\n    puStack20 = 0x4209cd;\n    fcn.00415b94();\n    return;\n}\n",
        "token_count": 403
    },
    "00420bf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420bf8(void)\n\n{\n    fcn.004207b4();\n    fcn.004209ec();\n    return;\n}\n",
        "token_count": 33
    },
    "00420c24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420c24(void)\n\n{\n    fcn.004209d4();\n    fcn.004209ec();\n    return;\n}\n",
        "token_count": 33
    },
    "00420d08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420d08(uint param_1, uchar param_2)\n\n{\n    fcn.004209d4(param_2);\n    fcn.004209ec();\n    return;\n}\n",
        "token_count": 46
    },
    "00420d94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420d94(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.0041fdec();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 4;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 176
    },
    "00420e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420e00(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x420e1b;\n    cVar1 = fcn.004036bc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x420e2b;\n        fcn.004205c0();\n        uStack24 = 0x420e9f;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x420e43;\n        puStack20 = &stack0xfffffffc;\n        fcn.004205c0();\n        uStack36 = 0x420e82;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0041fff8();\n        fcn.00420fe8();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x420e89;\n        uStack36 = 0x420e81;\n        fcn.004205d0();\n        return;\n    }\n    puStack20 = 0x420eb1;\n    fcn.00415b94();\n    return;\n}\n",
        "token_count": 341
    },
    "00420f28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420f28(void)\n\n{\n    fcn.00420eb8();\n    fcn.00420ed0();\n    return;\n}\n",
        "token_count": 34
    },
    "00421004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421004(void)\n\n{\n    fcn.00420eb8();\n    fcn.00420ed0();\n    return;\n}\n",
        "token_count": 33
    },
    "00421034": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421034(uint param_1, int32_t param_2)\n\n{\n    if (-1 < param_2) {\n        fcn.00420eb8();\n        fcn.00420ed0();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "00421060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421060(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.0041fdec();\n    *(in_EAX + 0x10) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 160
    },
    "004210c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004210c8(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4210e3;\n    cVar1 = fcn.004036bc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x4210ef;\n        fcn.004205c0();\n        uStack24 = 0x421158;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x421107;\n        puStack20 = &stack0xfffffffc;\n        fcn.004205c0();\n        uStack36 = 0x42113b;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0041fff8();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x421142;\n        uStack36 = 0x42113a;\n        fcn.004205d0();\n        return;\n    }\n    puStack20 = 0x42116a;\n    fcn.00415b94();\n    return;\n}\n",
        "token_count": 327
    },
    "004211dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004211dc(uint param_1, uint param_2)\n\n{\n    fcn.0042118c(*0x46f78c, *0x46f790, param_2, *0x46f798);\n    return;\n}\n",
        "token_count": 59
    },
    "00421358": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421358(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    iVar1 = fcn.00420868();\n    *(in_EAX + 0xc) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x421de4;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.00420d94();\n    *(in_EAX + 0x10) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x421e04;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.00421060();\n    *(in_EAX + 0x14) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x421e24;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    *(in_EAX + 0x20) = 0xcc0020;\n    *(in_EAX + 8) = *0x421418;\n    fcn.004158d4();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = in_EAX + 0x38;\n    }\n    return in_EAX;\n}\n",
        "token_count": 423
    },
    "004217c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004217c0(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        cVar1 = (**(*arg_8h + 0x1c))();\n        if (cVar1 == '\\0') {\n            (**(*in_EAX + 0x10))();\n            fcn.00421c70();\n            fcn.00421200();\n            uVar2 = fcn.0042057c();\n            sub.gdi32.dll_SetBkColor(in_EAX[1], uVar2);\n            uVar2 = fcn.0042057c();\n            sub.gdi32.dll_SetTextColor(in_EAX[1], uVar2);\n            iVar3 = (**(*arg_8h + 0x20))();\n            iVar3 = iVar3 + var_4h;\n            arg_8h_00 = &var_14h;\n            (**(*arg_8h + 0x2c))();\n            fcn.00413c58(arg_8h_00, iVar3);\n            (**(*arg_8h + 0x14))();\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "004219fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004219fc(void)\n\n{\n    ulong uStack16;\n    \n    fcn.004219b8();\n    return uStack16;\n}\n",
        "token_count": 34
    },
    "00421a18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00421a18(void)\n\n{\n    uint uStack12;\n    \n    fcn.004219b8();\n    return CONCAT44(uStack12, uStack12);\n}\n",
        "token_count": 41
    },
    "00421b08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421b08(uint param_1, uint *param_2)\n\n{\n    fcn.00421908(*param_2, param_2[1]);\n    return;\n}\n",
        "token_count": 45
    },
    "00421c1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421c1c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack16;\n    uint uStack12;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (*(in_EAX + 4) != 0) {\n            fcn.00421bbc();\n            fcn.00421ae4();\n            *(in_EAX + 0x18) = uStack16;\n            *(in_EAX + 0x1c) = uStack12;\n            *(in_EAX + 4) = 0;\n            *(in_EAX + 8) = *(in_EAX + 8) & 0xfe;\n        }\n        if (param_2 != 0) {\n            *(in_EAX + 8) = *(in_EAX + 8) | 1;\n            *(in_EAX + 4) = param_2;\n            fcn.00421b08();\n        }\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00421ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421ee0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffecc;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack272 = &stack0xfffffffc;\n    uStack276 = 0x421f7c;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack280;\n    iVar1 = sub.kernel32.dll_GetLastError_1();\n    if (iVar1 != 0) {\n        in_stack_fffffecc = 0x1000;\n        iVar1 = sub.kernel32.dll_FormatMessageA(0x1000, 0, iVar1, 0x400, &var_100h, 0x100, 0);\n        if (iVar1 != 0) {\n            fcn.00404570();\n            fcn.0040b16c();\n            fcn.00403ce4();\n            goto code_r0x00421f63;\n        }\n    }\n    fcn.00421e8c();\ncode_r0x00421f63:\n    *in_FS_OFFSET = in_stack_fffffecc;\n    fcn.00404308(0x421f83);\n    return;\n}\n",
        "token_count": 295
    },
    "00422118": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00422118(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX * param_2 + (param_1 - 1U) & ~(param_1 - 1U);\n    if (uVar1 < 0) {\n        uVar1 = uVar1 + 7;\n    }\n    return in_EAX * param_2 & 0xffffffff00000000U | uVar1 >> 3;\n}\n",
        "token_count": 127
    },
    "004223f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004223f8(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_2 + -1;\n    if (0 < iVar4) {\n        iVar3 = 1;\n        do {\n            puVar1 = in_EAX + iVar3 * 4;\n            puVar2 = in_EAX + iVar3 * 3;\n            puVar2[2] = puVar1[2];\n            puVar2[1] = puVar1[1];\n            *puVar2 = *puVar1;\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    if (*param_2 < 0x100) {\n        fcn.00402e14();\n        *param_2 = 0x100;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "004224c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004224c8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffbb8;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint uStack1044;\n    uint var_408h;\n    uchar var_404h [28];\n    int32_t lppe;\n    uint var_3e4h;\n    uchar auStack996 [988];\n    uint hdc;\n    \n    uStack1044 = 0x4224f4;\n    fcn.004028e0();\n    uStack1044 = 0;\n    puStack1048 = 0x4224fb;\n    hdc = sub.user32.dll_GetDC();\n    uStack1052 = 0x4225c5;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    iVar1 = sub.gdi32.dll_GetDeviceCaps();\n    if (0xf < iVar1) {\n        sub.gdi32.dll_GetSystemPaletteEntries(hdc, 0, 8, &stack0xfffffbf8);\n        in_stack_fffffbb8 = hdc;\n        if (lppe == 0xc0c0c0) {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 1, &fcn.004224c8::lppe);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -7, 7, &stack0xfffffc1c);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, 7, 1, &fcn.004224c8::var_3e4h);\n        }\n        else {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 8, &fcn.004224c8::var_3e4h);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffbb8;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x4225cc);\n    return;\n}\n",
        "token_count": 481
    },
    "00422938": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422938(int32_t arg_8h)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t *in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_EDX - **(arg_8h + 8);\n    uVar5 = in_EDX[1] - *(*(arg_8h + 8) + 4);\n    uVar6 = *in_EAX - **(arg_8h + 8);\n    uVar1 = in_EAX[1] - *(*(arg_8h + 8) + 4);\n    if ((((uVar6 ^ uVar6 >> 0x1f) - (uVar6 >> 0x1f) < (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f)) ||\n        (((0 < uVar4 && (uVar6 < uVar4)) ||\n         (iVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f),  iVar2 < (uVar5 ^ uVar5 >> 0x1f) - (uVar5 >> 0x1f))))) ||\n       ((0 < uVar5 && (uVar1 < uVar5)))) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 387
    },
    "00422db4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00422db4(uint arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint var_28h;\n    uint var_1ah;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.00422cd0();\n    if (var_1ah < 9) {\n        if (var_8h == 0) {\n            *in_EDX = (1 << (var_1ah & 0x1f)) * 4 + 0x28;\n        }\n        else {\n            *in_EDX = var_8h * 4 + 0x28;\n        }\n    }\n    else {\n        *in_EDX = 0x28;\n        if ((var_1ah._2_1_ & 3) != 0) {\n            *in_EDX = *in_EDX + 0xc;\n        }\n    }\n    *in_ECX = var_14h;\n    return;\n}\n",
        "token_count": 235
    },
    "004230f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004230f0(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "00423198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423198(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(*in_EAX + 0x44);\n    fcn.00423140(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 100
    },
    "004235fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004235fc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00421358();\n    *(in_EAX + 0x58) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "004238bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004238bc(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack1080;\n    uint uStack1076;\n    uchar *puStack1072;\n    uint uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint var_410h;\n    uint hgdiobj;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EAX != 0) && (*(param_1 + 0x26) < 9)) {\n        uStack1056 = 0x4238f2;\n        var_4h = param_2;\n        iVar1 = fcn.0042271c();\n        if (iVar1 != 0) {\n            uStack1056 = 0;\n            uStack1060 = 0x4238ff;\n            uStack1060 = sub.user32.dll_GetDC();\n            uStack1064 = 0x42390b;\n            var_8h = uStack1060;\n            uStack1068 = sub.gdi32.dll_CreateCompatibleDC();\n            puStack1072 = 0x423918;\n            hdc = uStack1068;\n            hgdiobj = sub.gdi32.dll_SelectObject();\n            uStack1076 = 0x42396b;\n            uStack1080 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbc8;\n            uVar2 = hdc;\n            puStack1072 = &stack0xfffffffc;\n            sub.gdi32.dll_SetDIBColorTable(hdc, 0, iVar1, &fcn.004238bc::var_410h);\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_SelectObject(hdc, hgdiobj, 0x423972);\n            sub.gdi32.dll_DeleteDC(hdc);\n            sub.user32.dll_ReleaseDC(0, var_8h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "0042433c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042433c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint var_58h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if (param_2 != 0) {\n        uStack104 = 0x42435a;\n        cVar1 = fcn.004036bc();\n        if (cVar1 == '\\0') {\n            uStack104 = 0x424425;\n            fcn.00415b94();\n            return;\n        }\n    }\n    uStack104 = 0x47da48;\n    puStack108 = 0x42436c;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack112 = 0x4243f4;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (param_2 == 0) {\n        puStack108 = &stack0xfffffffc;\n        fcn.00402e14();\n        in_stack_ffffff80 = 0;\n        fcn.00424d60(0, 0, &fcn.0042433c::var_58h);\n    }\n    else {\n        puStack108 = &stack0xfffffffc;\n        fcn.004237f0();\n        fcn.004237f4();\n        *(var_4h + 0x28) = *(param_2 + 0x28);\n        *(var_4h + 0x21) = *(param_2 + 0x21);\n        *(var_4h + 0x34) = *(param_2 + 0x34);\n        *(var_4h + 0x38) = *(param_2 + 0x38);\n    }\n    *in_FS_OFFSET = in_stack_ffffff80;\n    sub.kernel32.dll_LeaveCriticalSection_1(0x47da48, 0x4243fb);\n    return;\n}\n",
        "token_count": 484
    },
    "0042442c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042442c(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint var_5ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = &fcn.0042442c::var_5ch;\n    for (iVar1 = 0x15; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    puStack112 = 0x424451;\n    fcn.00424a10();\n    var_4h = 0;\n    var_8h = 0;\n    uStack116 = 0x4244bb;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    iVar1 = in_ECX;\n    if (in_ECX != *0x47da2c) {\n        puStack112 = &stack0xfffffffc;\n        iVar1 = fcn.00424028();\n    }\n    var_8h = iVar1;\n    var_4h = fcn.004239c4(*(in_EAX + 0x2c), &fcn.0042442c::var_5ch);\n    uVar3 = 0;\n    fcn.00424d60(0, *(in_EAX + 0x28) & 0xffffff00 | *(*(in_EAX + 0x28) + 0x70), &fcn.0042442c::var_5ch);\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 446
    },
    "004244ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004244ec(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    fcn.004247e0();\n    iVar1 = *(in_EAX + 0x28);\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x54) = 0;\n    fcn.0040cbb8();\n    return;\n}\n",
        "token_count": 92
    },
    "0042451c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.0042451c(void)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    uint arg_8h;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    \n    arg_8h = fcn.00403500();\n    (**(*in_EAX + 0x58))();\n    uVar4 = fcn.00417c7c();\n    fcn.00417ccc(uVar4, uVar4 >> 0x20);\n    puVar3 = in_EAX[10] + 0x18;\n    puVar1 = &stack0xffffff98;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar1 = puVar1 + 1;\n    }\n    fcn.00424a10();\n    fcn.0040cbb8();\n    fcn.00424d60(arg_8h, in_EAX[10] & 0xffffff00U | *(in_EAX[10] + 0x70), &stack0xffffff98);\n    return;\n}\n",
        "token_count": 276
    },
    "00424ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424ac0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint lpvObject;\n    int32_t var_8h;\n    uint hgdiobj;\n    \n    puStack112 = &stack0xfffffffc;\n    hgdiobj = 0;\n    var_8h = 0;\n    uStack116 = 0x424b6a;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack120;\n    fcn.00424a10();\n    fcn.00424a20();\n    fcn.0042057c();\n    hgdiobj = fcn.0042408c();\n    fcn.00402e14();\n    sub.gdi32.dll_GetObjectA(hgdiobj, 0x54, &lpvObject);\n    iVar1 = *(in_EAX[10] + 0x10);\n    if (*(in_EAX[10] + 0x10) != *0x47da2c) {\n        iVar1 = fcn.00424028();\n    }\n    var_8h = iVar1;\n    uVar2 = 0;\n    fcn.00424d60(0, in_EAX[10] & 0xffffff00U | *(in_EAX[10] + 0x70), &lpvObject);\n    *in_FS_OFFSET = uVar2;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 358
    },
    "004253f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004253f0(int32_t param_1)\n\n{\n    int16_t aiStack112 [7];\n    uchar auStack98 [86];\n    \n    fcn.00424a10();\n    if (param_1 == 0) {\n        fcn.00402e14();\n        fcn.00424d60(0, 0, auStack98);\n    }\n    else {\n        fcn.00417e74();\n        if (aiStack112[0] != 0x4d42) {\n            fcn.00421e74();\n        }\n        fcn.00424e88(aiStack112);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00425b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425b20(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY124;\n    uint uStackY120;\n    uchar *puStackY116;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_4h;\n    \n    *in_EDX = 2;\n    fcn.00424a20();\n    puVar3 = *(in_EAX + 0x28) + 0x18;\n    puVar4 = &fcn.00425b20::var_58h;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_40h = 0;\n    var_44h = 0;\n    puStackY116 = 0x425b6d;\n    uVar1 = fcn.004239c4(*(in_EAX + 0x2c), &fcn.00425b20::var_58h);\n    *var_4h = uVar1;\n    uStackY120 = 0x425b9a;\n    uStackY124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStackY116 = &stack0xfffffffc;\n    uVar1 = fcn.00424028();\n    *arg_8h = uVar1;\n    *in_FS_OFFSET = uStackY124;\n    return;\n}\n",
        "token_count": 407
    },
    "00425c08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425c08(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.004230f0();\n    *(in_EAX + 0x21) = 1;\n    uVar1 = fcn.00403500();\n    *(in_EAX + 0x28) = uVar1;\n    fcn.004237f0();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 193
    },
    "00425eac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00425eac(void)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack32 = 0x425ec5;\n    puVar1 = fcn.00403500();\n    uStack36 = 0x425f3b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = fcn.00417c7c();\n    fcn.00417c48(uVar2);\n    (***puVar1)();\n    fcn.00417c7c();\n    fcn.00417e74();\n    fcn.00417e74();\n    if (1 < var_ah._2_2_) {\n        fcn.00421e80();\n    }\n    fcn.00425f64();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x425f5b;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 290
    },
    "004260b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.004260b0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack32;\n    \n    uVar3 = 1;\n    uStack68 = 0;\n    uStack72 = 0x4260be;\n    iVar1 = sub.user32.dll_GetDC();\n    if (iVar1 != 0) {\n        uStack72 = *0x47da40;\n        iStack76 = iVar1;\n        iVar2 = sub.gdi32.dll_SelectObject();\n        if (iVar2 != 0) {\n            iVar2 = sub.gdi32.dll_GetTextMetricsA(iVar1, &stack0xffffffb4);\n            if (iVar2 != 0) {\n                uVar3 = uStack32;\n            }\n        }\n        sub.user32.dll_ReleaseDC(0, iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 219
    },
    "004261c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004261c0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 136
    },
    "00426224": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426224(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "00426230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426230(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "004263f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004263f0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_ch = *(in_EAX + 4);\n    if (var_ch == NULL) {\n        return;\n    }\n    uStack20 = 0x42640c;\n    var_8h = var_ch;\n    var_4h = in_EAX;\n    fcn.00426224();\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(var_4h + 4) = *var_ch;\n    *in_FS_OFFSET = uStack28;\n    uStack20 = 0x426442;\n    uStack24 = 0x42643a;\n    fcn.00426230();\n    return;\n}\n",
        "token_count": 217
    },
    "004267e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004267e8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    *(in_EAX + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "00426884": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00426884(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    uVar1 = fcn.00403500();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "00427a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427a00(int32_t *param_1, char param_2)\n\n{\n    int32_t *extraout_ECX;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack36 = 0x427a12;\n        fcn.0040387c();\n        param_1 = extraout_ECX;\n    }\n    puStack36 = 0x427a21;\n    fcn.004061a0();\n    uStack40 = 0x427a59;\n    piStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00406148();\n    (**(*param_1 + 4))();\n    *in_FS_OFFSET = param_1;\n    uStack40 = 0x427a60;\n    piStack44 = 0x427a58;\n    fcn.00406130();\n    return;\n}\n",
        "token_count": 250
    },
    "00427a7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427a7c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    uVar1 = fcn.004267e8();\n    *(in_EAX + 0x10) = uVar1;\n    uVar1 = fcn.004267e8();\n    *(in_EAX + 0x14) = uVar1;\n    uVar1 = fcn.004267e8();\n    *(in_EAX + 0x18) = uVar1;\n    fcn.00404308();\n    *(in_EAX + 0x1c) = 1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 252
    },
    "00427af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427af0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x427b10;\n    fcn.004061a0();\n    uStack36 = 0x427c0a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.00427a00();\n    *(iVar2 + 8) = *(in_EAX + 0x1c);\n    fcn.00426838();\n    (**(*param_2 + 0x24))();\n    fcn.00406130();\n    cVar1 = fcn.0040cbc8();\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00427a00();\n        *(iVar2 + 8) = *(in_EAX + 0x1c);\n        fcn.00426838();\n    }\n    fcn.00406130();\n    cVar1 = fcn.0040cbc8();\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00427a00();\n        *(iVar2 + 8) = *(in_EAX + 0x1c);\n        fcn.00426838();\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    fcn.00406174();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x427c11;\n    uStack36 = 0x427bf9;\n    fcn.00406130();\n    uStack36 = 0x427c01;\n    fcn.00406130();\n    uStack36 = 0x427c09;\n    fcn.00406130();\n    return;\n}\n",
        "token_count": 490
    },
    "00428278": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428278(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x428353;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.0040435c();\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040b228();\n        fcn.00403ce4();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.00426824();\n            fcn.00406148();\n            fcn.00406174();\n            cVar2 = (**(_pe_dos_header + 0x30))();\n            if (cVar2 != '\\0') {\n                fcn.00406174();\n                (**(_pe_dos_header + 0x34))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42835a;\n    uStack40 = 0x42834a;\n    fcn.00404dfc();\n    uStack40 = 0x428352;\n    fcn.00406130();\n    return;\n}\n",
        "token_count": 428
    },
    "004291c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004291c8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041da6c();\n    *(in_EAX + 0x40) = 1;\n    *(in_EAX + 0x30) = 1000;\n    pcVar2 = fcn.00429250;\n    uVar1 = fcn.0041ebac(fcn.00429250, in_EAX);\n    *(in_EAX + 0x34) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = pcVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 225
    },
    "00429708": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429708(uint param_1, code *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint extraout_var;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = 0x42971c;\n    sub.user32.dll_GetActiveWindow();\n    puStack40 = 0x429726;\n    fcn.00446310();\n    puStack40 = 0x42972e;\n    fcn.0044622c();\n    uStack44 = 0x4297cb;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0044f0e0(*(*in_EAX + 0x34), in_EAX);\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *0x46f814 = in_EAX;\n    (*param_2)();\n    *in_FS_OFFSET = extraout_var;\n    fcn.0044f13c(*(*in_EAX + 0x34), in_EAX);\n    return;\n}\n",
        "token_count": 297
    },
    "004298a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004298a8(void)\n\n{\n    uint uVar1;\n    \n    *0x47db44 = sub.user32.dll_RegisterWindowMessageA(0x42990c);\n    *0x47db48 = sub.user32.dll_RegisterWindowMessageA(0x42991c);\n    uVar1 = 1;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    uVar1 = fcn.004092b0(uVar1);\n    *0x46f818 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00429c44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00429c44(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0043bb34();\n    *(in_EAX + 0x60) = 0;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 150
    },
    "00429e5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00429e5c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "0042a618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042a618(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_100h;\n    \n    sub.user32.dll_GetClassNameA(arg_8h, &var_100h, 0x100);\n    iVar1 = fcn.00408cd0();\n    if (iVar1 == 0) {\n        *(arg_ch + 4) = arg_8h;\n        *(arg_ch + 0xc) = 1;\n    }\n    return -(*(arg_ch + 0xc) != '\\x01');\n}\n",
        "token_count": 133
    },
    "0042a674": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042a674(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_100h;\n    \n    sub.user32.dll_GetClassNameA(arg_8h, &var_100h, 0x100);\n    iVar1 = fcn.00408cac();\n    if (iVar1 == 0) {\n        *(arg_ch + 0xd) = 1;\n        *(arg_ch + 8) = arg_8h;\n    }\n    return -(*(arg_ch + 0xd) != '\\x01');\n}\n",
        "token_count": 132
    },
    "0042a910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a910(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42a973;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x47db68 == 0;\n    *0x47db68 = *0x47db68 + -1;\n    if (bVar1) {\n        *0x47db6c = fcn.00429e5c();\n        fcn.00406130();\n        fcn.00427908();\n        fcn.00406130();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 188
    },
    "0042c8d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042c8d4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    *(*0x46f88c + 0x180) = arg_8h;\n    sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffffc, *(*0x46f88c + 0x18c));\n    uVar1 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff0);\n    if ((uVar1 & 0x40000000) != 0) {\n        iVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff4);\n        if (iVar2 == 0) {\n            sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffff4, arg_8h);\n        }\n    }\n    sub.user32.dll_SetPropA(arg_8h, *0x47db7e, *0x46f88c);\n    sub.user32.dll_SetPropA(arg_8h, *0x47db7c, *0x46f88c);\n    iVar2 = *0x46f88c;\n    *0x46f88c = 0;\n    uVar3 = (**(iVar2 + 0x18c))(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 346
    },
    "0042cd94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042cd94(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.00402728();\n    *puVar2 = param_2;\n    uVar3 = fcn.0042cd6c(&stack0xfffffffc);\n    puVar2[1] = uVar3;\n    cVar1 = fcn.0042cd38();\n    if (cVar1 == '\\0') {\n        fcn.0041516c();\n    }\n    else {\n        fcn.00415344();\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0042cf24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042cf24(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42cfee;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar1 = *param_2;\n    if (iVar1 < 0x216) {\n        if (iVar1 == 0x215) {\n            puStack32 = &stack0xfffffffc;\n            fcn.0042e030();\n        }\n        else if (iVar1 == 0x200) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00407278();\n            in_stack_ffffffd0 = *0x47db98;\n            sub.user32.dll_ClientToScreen(*0x47db98, &var_ch);\n            fcn.0042d9b8();\n        }\n        else if ((iVar1 == 0x202) || (iVar1 == 0x205)) {\n            puStack32 = &stack0xfffffffc;\n            fcn.0042e030();\n        }\n    }\n    else if (iVar1 == 0xbd00) {\n        if (param_2[1] == 0x11) {\n            fcn.0042d9b8();\n        }\n        else if (param_2[1] == 0x1b) {\n            param_2[3] = 1;\n            puStack32 = &stack0xfffffffc;\n            fcn.0042e030();\n        }\n    }\n    else if ((iVar1 == 0xbd01) && (param_2[1] == 0x11)) {\n        puStack32 = &stack0xfffffffc;\n        fcn.0042d9b8();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    return;\n}\n",
        "token_count": 468
    },
    "0042d0bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d0bc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x38) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0042e354": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042e354(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    uint uStack24;\n    \n    iVar1 = fcn.0042e320();\n    iVar3 = 0;\n    if (iVar1 != 0) {\n        arg_8h = 0;\n        fcn.0042f5ec();\n        iVar2 = fcn.00433a40(arg_8h);\n        iVar3 = iVar1;\n        if (iVar2 != 0) {\n            iVar3 = iVar2;\n        }\n    }\n    return CONCAT44(uStack24, iVar3);\n}\n",
        "token_count": 151
    },
    "0042e3e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e3e4(void)\n\n{\n    sub.gdi32.dll_GetWindowOrgEx();\n    sub.gdi32.dll_SetWindowOrgEx();\n    return;\n}\n",
        "token_count": 40
    },
    "0042e414": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042e414(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack24 = 0x42e424;\n    var_8h = fcn.0041595c();\n    uStack28 = 0x42e4c4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (-1 < *(var_8h + 8) + -1) {\n        var_4h = 0;\n        puStack24 = &stack0xfffffffc;\n        var_ch = *(var_8h + 8);\n        do {\n            puStack36 = 0x42e456;\n            var_10h = fcn.004152c8();\n            puStack36 = 0x42e461;\n            cVar1 = fcn.00421a38();\n            if (cVar1 != '\\0') {\n                uStack40 = 0x42e49d;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.0042e650();\n                fcn.00403d90();\n                fcn.00403d90();\n                return;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x42e4cb;\n    uStack28 = 0x42e4c3;\n    fcn.004159c0();\n    return;\n}\n",
        "token_count": 441
    },
    "0042e6c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042e6c8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 167
    },
    "0042ec80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ec80(void)\n\n{\n    int32_t *arg_8h;\n    char extraout_DL;\n    \n    arg_8h = fcn.004038e4();\n    fcn.0044e1c8();\n    if ((arg_8h[0x28] == 0) || ((*(arg_8h[0x28] + 0x1c) & 8) != 0)) {\n        (**(*arg_8h + 0x68))();\n    }\n    else {\n        fcn.00430c4c(arg_8h);\n        (**(*arg_8h + 0x68))();\n        fcn.0042f448();\n        fcn.0040372c();\n        arg_8h[0x28] = 0;\n    }\n    fcn.00403530();\n    arg_8h[0x1b] = 0;\n    fcn.00403530();\n    fcn.00403530();\n    fcn.00408e14();\n    fcn.0041dab8();\n    if ('\\0' < extraout_DL) {\n        fcn.004038cc();\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "0042f448": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f448(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *(in_EAX + 0x40);\n    param_2[1] = *(in_EAX + 0x44);\n    param_2[2] = *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    param_2[3] = *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    return;\n}\n",
        "token_count": 129
    },
    "0042f4ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042f4ac(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack12;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack12;\n}\n",
        "token_count": 49
    },
    "0042f4c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f4c4(void)\n\n{\n    fcn.0042f4f0();\n    fcn.00413c30();\n    fcn.0042f924();\n    return;\n}\n",
        "token_count": 47
    },
    "0042f4f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042f4f0(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack8;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack8;\n}\n",
        "token_count": 50
    },
    "0042f508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f508(void)\n\n{\n    fcn.0042f4ac();\n    fcn.00413c30();\n    fcn.0042f924();\n    return;\n}\n",
        "token_count": 44
    },
    "0042f5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f5c0(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 + iStack20;\n    param_1[1] = param_2[1] + iStack16;\n    return;\n}\n",
        "token_count": 107
    },
    "0042f5ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f5ec(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 - iStack20;\n    param_1[1] = param_2[1] - iStack16;\n    return;\n}\n",
        "token_count": 106
    },
    "0042f924": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f924(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    iVar1 = *param_2;\n    iVar2 = param_2[1];\n    (**(*in_EAX + 0x44))(iVar1, iVar2);\n    (**(*in_EAX + 0x84))((in_EAX[0x13] - iStack16) + iVar2, (in_EAX[0x12] - iStack20) + iVar1);\n    return;\n}\n",
        "token_count": 154
    },
    "00430978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00430978(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack28 [16];\n    \n    uVar3 = *param_2;\n    uVar4 = param_2[1];\n    uVar5 = param_2[2];\n    uVar6 = param_2[3];\n    if (*(in_EAX + 0xa0) != 0) {\n        cVar1 = fcn.0040372c(uVar3, uVar4, uVar5, uVar6);\n        if (cVar1 == '\\0') {\n            cVar1 = '\\0';\n            goto code_r0x004309ac;\n        }\n    }\n    cVar1 = '\\x01';\ncode_r0x004309ac:\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00431800();\n        if (iVar2 == 0) {\n            fcn.0040372c(uVar3, uVar4, uVar5, uVar6);\n        }\n        else {\n            uVar3 = fcn.0042f4f0();\n            arg_8h = auStack28;\n            fcn.0042f4ac();\n            fcn.00413c58(arg_8h, uVar3);\n            fcn.0040372c();\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 355
    },
    "00430b18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430b18(uint param_1, int32_t param_2)\n\n{\n    uint uStack16;\n    \n    sub.user32.dll_GetCursorPos();\n    fcn.0042f5ec();\n    *param_2 = param_2;\n    *(param_2 + 4) = uStack16;\n    return;\n}\n",
        "token_count": 78
    },
    "00430c4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00430c4c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        (**(in_EAX + 0x38))();\n    }\n    return 0;\n}\n",
        "token_count": 86
    },
    "00430f88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430f88(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x430f4c;\n    fcn.00430f58(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1);\n    return;\n}\n",
        "token_count": 91
    },
    "0043109c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043109c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        if ((*(in_EAX + 0x48) < 0x8001) && (*(in_EAX + 0x4c) < 0x8001)) {\n            fcn.00446588(*(in_EDX + 10), *(in_EDX + 8));\n            fcn.0040372c();\n        }\n        else {\n            fcn.00430b18();\n            fcn.00446588(var_4h, var_8h);\n            fcn.0040372c();\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00431800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00431800(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**(*in_EAX + 0x58))(*param_2, param_2[1], param_2[2], param_2[3]);\n    if (iVar1 != 0) {\n        iVar1 = (**(*in_EAX + 0x58))();\n        iVar2 = fcn.00403478();\n        if (iVar1 != iVar2) {\n            iVar1 = (**(*in_EAX + 0x58))();\n            uVar3 = (**(iVar1 + 0x2c))();\n            fcn.0042f23c();\n            fcn.0042f218();\n            fcn.0042f4c4();\n            fcn.0042f508();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 228
    },
    "00431c1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00431c1c(uint param_1, int32_t param_2)\n\n{\n    double *in_EAX;\n    double *pdVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < param_2) {\n        iVar3 = 1;\n        pdVar1 = in_EAX;\n        do {\n            pdVar1 = pdVar1 + 1;\n            if (*pdVar1 < in_EAX[iVar2]) {\n                iVar2 = iVar3;\n            }\n            iVar3 = iVar3 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 175
    },
    "00431f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00431f50(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar2;\n    code *pcStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack40 = 0x431f69;\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    uStack44 = 0x432048;\n    pcStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.00431f50::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.0042eba8();\n    pcVar2 = fcn.00433910;\n    uVar1 = fcn.0041eaf0(fcn.00433910, in_EAX);\n    *(in_EAX + 0x18c) = uVar1;\n    uVar1 = fcn.00421060();\n    *(in_EAX + 0x170) = uVar1;\n    fcn.00421208();\n    *(in_EAX + 0x1a9) = 1;\n    *(in_EAX + 0x1a0) = 0xffffffff;\n    *(in_EAX + 0x184) = 3;\n    if (*(*0x47c2c8 + 4) == 0x11) {\n        fcn.00404308();\n    }\n    else {\n        fcn.0044d2d4();\n        fcn.0040435c();\n    }\n    *(in_EAX + 0x1a7) = 0;\n    *(in_EAX + 0x162) = *0x432070;\n    *(in_EAX + 0x163) = 2;\n    *(in_EAX + 0x164) = 1;\n    *(in_EAX + 0x168) = 1;\n    *(in_EAX + 0x150) = 1;\n    *in_FS_OFFSET = pcVar2;\n    pcStack48 = 0x43204f;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 568
    },
    "00432ad8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00432ad8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00403500();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.0042f4ac();\n    iVar2 = fcn.00432f40();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00432f04();\n            if (*(iVar3 + 4) == *(in_EAX + 4)) {\n                fcn.00432f04();\n                fcn.0041516c();\n                fcn.0042f218();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar1 = *(iVar1 + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.004152c8();\n            fcn.00430c4c(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 332
    },
    "00432f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00432f40(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (*(in_EAX + 0x198) != 0) {\n        iVar1 = *(*(in_EAX + 0x198) + 8);\n    }\n    if (*(in_EAX + 0x19c) != 0) {\n        iVar1 = iVar1 + *(*(in_EAX + 0x19c) + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 124
    },
    "00432fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432fa0(uint param_1, ushort param_2)\n\n{\n    fcn.00432f60(param_2, 0, 0, 0);\n    return;\n}\n",
        "token_count": 47
    },
    "0043351c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043351c(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00430f88();\n    uVar2 = 0x4333a4;\n    uVar1 = 0x4333dc;\n    uVar3 = in_EAX;\n    fcn.00433444(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 150
    },
    "00433718": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433718(uint arg_8h)\n\n{\n    uint var_10h;\n    \n    return;\n}\n",
        "token_count": 29
    },
    "00433dd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00433dd4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0042c9bc();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00430c4c(*(param_2 + 8));\n        *(param_2 + 0xc) = uVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 108
    },
    "00435ae4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435ae4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_10h;\n    \n    if ((((in_EDX == *(in_EAX + 0x40)) && (in_ECX == *(in_EAX + 0x44))) && (arg_ch == *(in_EAX + 0x48))) &&\n       (arg_8h == *(in_EAX + 0x4c))) {\n        return;\n    }\n    cVar1 = fcn.004363bc();\n    if ((cVar1 == '\\0') || (iVar2 = sub.user32.dll_IsIconic(*(in_EAX + 0x180)),  iVar2 != 0)) {\n        *(in_EAX + 0x40) = in_EDX;\n        *(in_EAX + 0x44) = in_ECX;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x4c) = arg_8h;\n        cVar1 = fcn.004363bc();\n        if (cVar1 != '\\0') {\n            var_2ch = 0x2c;\n            sub.user32.dll_GetWindowPlacement(*(in_EAX + 0x180), &var_2ch);\n            fcn.0042f448();\n            sub.user32.dll_SetWindowPlacement();\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowPos(*(in_EAX + 0x180), 0);\n    }\n    fcn.0042f0fc();\n    fcn.0040372c();\n    return;\n}\n",
        "token_count": 405
    },
    "00435bbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435bbc(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00432f40(param_2, param_1);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00432f04();\n            fcn.0040372c();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00435fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435fc0(void)\n\n{\n    int32_t in_EAX;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    uStack24 = 0x435fcf;\n    fcn.0042f448();\n    uStack24 = 1;\n    uStack28 = 1;\n    sub.user32.dll_InflateRect();\n    sub.user32.dll_InvalidateRect(*(*(in_EAX + 0x30) + 0x180), &stack0xffffffe0, 0xffffffff);\n    return;\n}\n",
        "token_count": 145
    },
    "004363c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004363c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack76 = *(in_EAX + 0x180);\n    puStack80 = 0x4363dc;\n    iVar1 = sub.user32.dll_IsIconic();\n    if (iVar1 == 0) {\n        uStack84 = *(in_EAX + 0x180);\n        uStack88 = 0x436412;\n        puStack80 = &stack0xffffffb4;\n        sub.user32.dll_GetWindowRect();\n    }\n    else {\n        uStack60 = 0x2c;\n        puStack80 = &stack0xffffffc4;\n        uStack84 = *(in_EAX + 0x180);\n        uStack88 = 0x4363f9;\n        sub.user32.dll_GetWindowPlacement();\n        uStack84 = uStack40;\n        puStack80 = puStack36;\n        uStack76 = uStack32;\n        uStack72 = uStack28;\n    }\n    uStack88 = 0xfffffff0;\n    uStack92 = *(in_EAX + 0x180);\n    uStack96 = 0x436420;\n    uVar2 = sub.user32.dll_GetWindowLongA();\n    if ((uVar2 & 0x40000000) != 0) {\n        uStack96 = 0xfffffff8;\n        uStack100 = *(in_EAX + 0x180);\n        puStack104 = 0x436435;\n        iVar1 = sub.user32.dll_GetWindowLongA();\n        if (iVar1 != 0) {\n            sub.user32.dll_ScreenToClient();\n            sub.user32.dll_ScreenToClient();\n            iStack116 = iVar1;\n            puStack112 = &stack0xffffff9c;\n            iStack108 = iVar1;\n            puStack104 = &stack0xffffff9c;\n        }\n    }\n    *(in_EAX + 0x40) = iStack116;\n    *(in_EAX + 0x44) = puStack112;\n    *(in_EAX + 0x48) = iStack108 - iStack116;\n    *(in_EAX + 0x4c) = puStack104 - puStack112;\n    fcn.0042f0fc();\n    return;\n}\n",
        "token_count": 626
    },
    "00436618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436618(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00432f40();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00432f04();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "004373b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004373b0(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack16 = 0x4373c1;\n    var_4h = in_EAX;\n    uStack16 = fcn.004360b8();\n    puStack20 = 0x4373c7;\n    var_8h = sub.user32.dll_GetWindowDC();\n    uStack24 = 0x437406;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 200))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x43740d;\n    uStack24 = var_8h;\n    uStack28 = 0x4373ff;\n    uStack28 = fcn.004360b8();\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 260
    },
    "00437414": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437414(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4374ad;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    (**(*in_EAX + 0x44))();\n    var_10h = var_10h + 2;\n    var_ch = var_ch + 2;\n    fcn.00420a3c();\n    uVar1 = fcn.00431d5c();\n    fcn.0042fa98(0xffffffff, &var_10h, uVar1 | 0x810);\n    uVar2 = fcn.004047b8();\n    uVar2 = fcn.00421b9c(uVar2);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar2;\n    fcn.00404308(0x4374b4);\n    return;\n}\n",
        "token_count": 284
    },
    "00437798": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437798(void)\n\n{\n    int32_t *in_EAX;\n    uint var_10h;\n    \n    (**(*in_EAX + 0xcc))();\n    return;\n}\n",
        "token_count": 44
    },
    "004377c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004377c0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.00413c58(arg_8h, 0);\n    uVar1 = fcn.00431d5c();\n    uVar2 = fcn.004047b8(0xffffffff, arg_8h, uVar1 | 0xc10);\n    uVar2 = fcn.00421b9c(uVar2);\n    sub.user32.dll_DrawTextA(uVar2);\n    *(arg_8h + 8) = *(arg_8h + 8) + 6;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 2;\n    return;\n}\n",
        "token_count": 185
    },
    "00437874": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437874(int32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t lpRect;\n    int32_t var_14h;\n    uint lpPoint;\n    uint var_4h;\n    \n    sub.user32.dll_ClientToScreen();\n    sub.user32.dll_GetWindowRect();\n    *arg_8h = in_EDX - lpRect;\n    arg_8h[1] = in_ECX - var_14h;\n    return;\n}\n",
        "token_count": 119
    },
    "004378cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004378cc(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint dxHotspot;\n    uint dyHotspot;\n    uint himlDrag;\n    \n    if (*(in_EAX + 0x68) != -1) {\n        uStack24 = 1;\n        uStack28 = 1;\n        uStack32 = 1;\n        uStack36 = 0xe;\n        uStack40 = 0x4378f1;\n        uStack40 = (***0x47bf10)();\n        uStack44 = 0xd;\n        uStack48 = 0x4378fd;\n        uStack48 = (***0x47bf10)();\n        puStack52 = 0x437903;\n        himlDrag = sub.comctl32.dll_ImageList_Create();\n        uStack56 = 0x43798c;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        fcn.0044d35c();\n        fcn.00426a44();\n        fcn.0044d35c();\n        fcn.00426a44();\n        sub.comctl32.dll_ImageList_SetDragCursorImage(himlDrag, 0, 0, 0);\n        sub.comctl32.dll_ImageList_GetDragImage(0, &fcn.004378cc::dxHotspot);\n        uVar1 = himlDrag;\n        sub.comctl32.dll_ImageList_SetDragCursorImage(himlDrag, 1, dxHotspot, dyHotspot);\n        *in_FS_OFFSET = uVar1;\n        sub.comctl32.dll_ImageList_Destroy(himlDrag, 0x437993);\n        return;\n    }\n    return;\n}\n",
        "token_count": 458
    },
    "00437d64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437d64(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "004390c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004390c8(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t in_EDX;\n    uint *arg_8h_00;\n    uint uVar1;\n    uint uVar2;\n    uint var_10h;\n    \n    uVar2 = 0;\n    uVar1 = 1;\n    arg_ch = *(*(arg_8h + -8) + 0x18) + in_EDX + -2;\n    arg_8h_00 = &var_10h;\n    fcn.00413c58(arg_8h_00, arg_ch);\n    uVar1 = fcn.00421b9c(&var_10h, arg_8h_00, arg_ch, uVar1, uVar2);\n    sub.user32.dll_DrawFrameControl(uVar1);\n    return;\n}\n",
        "token_count": 194
    },
    "00439a34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439a34(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x439ae3;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(**(arg_8h + -4) + 0xc))();\n    (**(**(arg_8h + -4) + 0xc))();\n    (**(**(arg_8h + -4) + 0xc))();\n    arg_8h_00 = arg_8h;\n    fcn.00438040();\n    fcn.004399bc(arg_8h_00);\n    if (*(in_EAX + 8) != 0) {\n        fcn.00439a34(arg_8h);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.00439a34(arg_8h);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x439aea;\n    uStack28 = 0x439ae2;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 321
    },
    "00439d34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439d34(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *(in_EAX + 0x60) = param_2;\n    fcn.004360b8(uVar1, uVar2);\n    fcn.0043a898();\n    uVar1 = fcn.004360b8();\n    *(in_EAX + 0x5c) = uVar1;\n    uVar3 = 0;\n    uVar2 = sub.user32.dll_GetDCEx(uVar1, 0, 0x412);\n    *(in_EAX + 0x58) = uVar2;\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x54) = uVar3;\n    fcn.00439e48();\n    return;\n}\n",
        "token_count": 235
    },
    "00439fc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00439fc4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        var_8h = fcn.004382b0();\n        iVar1 = fcn.00437e34();\n        var_8h = var_8h + iVar1;\n    }\n    else {\n        var_8h = fcn.004382b0();\n    }\n    fcn.00439f34(&stack0xfffffffc);\n    return var_8h;\n}\n",
        "token_count": 149
    },
    "0043a014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043a014(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 4;\n    if (param_2 != 0) {\n        fcn.0042f448();\n        fcn.0042f448();\n        if (((var_1ch < var_ch) || (var_14h <= var_4h)) || (var_8h < var_18h)) {\n            if (((var_20h < var_10h) || (var_18h <= var_8h)) || (var_4h < var_14h)) {\n                iVar1 = var_1ch + var_14h >> 1;\n                if (iVar1 < 0) {\n                    iVar1 = iVar1 + ((var_1ch + var_14h & 1U) != 0);\n                }\n                if (iVar1 <= var_ch) {\n                    uVar2 = 2;\n                }\n            }\n            else {\n                uVar2 = 3;\n            }\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 333
    },
    "0043a248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a248(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004385fc();\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.00413c30();\n            iVar1 = fcn.00438df0();\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = *(iVar1 + 4);\n            }\n            fcn.0043a014(uVar2);\n            (**(*in_EAX + 8))();\n        }\n    }\n    else {\n        if (param_1 == '\\0') {\n            fcn.0043a090(&stack0xfffffffc);\n        }\n        else {\n            fcn.0043a110(&stack0xfffffffc);\n        }\n        (**(*in_EAX[5] + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "0043ad20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043ad20(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    uint *puVar3;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack48 = 0x43ae98;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    puVar3 = &var_4h;\n    var_ch = sub.kernel32.dll_GetCurrentProcessId();\n    var_8h._0_1_ = 0;\n    fcn.00409330(puVar3);\n    fcn.0040435c();\n    uVar1 = fcn.004047b8();\n    *0x47db7c = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    puVar3 = &var_10h;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    fcn.00409330(puVar3);\n    fcn.0040435c();\n    uVar1 = fcn.004047b8();\n    *0x47db7e = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    uVar1 = fcn.004047b8();\n    *0x47db88 = sub.user32.dll_RegisterWindowMessageA(uVar1);\n    *0x47dbc0 = fcn.00415804();\n    fcn.0043a924();\n    *0x47db70 = fcn.0043a74c();\n    uVar1 = fcn.0044cc38();\n    **0x47c298 = uVar1;\n    uVar1 = fcn.0044dd1c();\n    **0x47c0d4 = uVar1;\n    fcn.0044f828();\n    fcn.00414a84();\n    iVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x43aed4);\n    if (iVar2 != 0) {\n        *0x46f888 = sub.kernel32.dll_GetProcAddress_1(iVar2, 0x43aedc);\n        in_stack_ffffffac = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00404308(0x43ae9f);\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 623
    },
    "0043b7b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b7b0(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x30) + 8);\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if (*(*(*(*(in_EAX + 0x30) + 4) + iVar2 * 4) + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0043bb34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043bb34(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041e394();\n    *(in_EAX + 0x6a) = 1;\n    *(in_EAX + 0x80) = 0xffffffff;\n    *(in_EAX + 0x86) = 1;\n    *(in_EAX + 0x90) = 0;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 197
    },
    "0043c438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0043c438(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.0041da6c();\n    in_EAX[0xd] = in_ECX;\n    in_EAX[0xc] = arg_8h;\n    (**(*in_EAX + 0x34))();\n    if (in_DL != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 205
    },
    "0043c5c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043c5c4(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint var_18h;\n    uint hdc;\n    int32_t var_4h;\n    \n    uStack36 = 0;\n    puStack40 = 0x43c5d5;\n    var_4h = in_EAX;\n    hdc = sub.user32.dll_GetDC();\n    uStack44 = 0x43c665;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar1 = *(var_4h + 0x50);\n    puStack40 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap(hdc, *(var_4h + 0x34), *(var_4h + 0x30));\n    fcn.00425460();\n    fcn.00424860();\n    fcn.00421208();\n    arg_ch = (**(*piVar1 + 0x20))();\n    arg_8h = &fcn.0043c5c4::var_18h;\n    (**(*piVar1 + 0x2c))();\n    fcn.00413c58(arg_8h, arg_ch);\n    fcn.00424860(&fcn.0043c5c4::var_18h);\n    fcn.0042186c();\n    *in_FS_OFFSET = arg_8h;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x43c66c);\n    return;\n}\n",
        "token_count": 395
    },
    "0043c688": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c688(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = *(in_EAX + 0x34);\n    uStack12 = *(in_EAX + 0x30);\n    puVar1 = &uStack8;\n    sub.comctl32.dll_ImageList_GetIconSize(param_2, puVar1, &uStack12);\n    *(in_EAX + 0x34) = puVar1;\n    *(in_EAX + 0x30) = param_2;\n    fcn.0043c5c4();\n    return;\n}\n",
        "token_count": 161
    },
    "0043c824": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c824(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x43c83f;\n    fcn.00424298();\n    uStack36 = 0x43c8d3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x43c85c;\n    puStack32 = &stack0xfffffffc;\n    fcn.00424298();\n    uStack48 = 0x43c8b6;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.0043c5b8();\n    uVar1 = fcn.0043c6fc();\n    uVar2 = fcn.0043c6fc(uVar1);\n    uVar1 = *(in_EAX + 0x3c);\n    sub.comctl32.dll_ImageList_Add(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00403530(0x43c8bd);\n    return;\n}\n",
        "token_count": 345
    },
    "0043cc50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cc50(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_20h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint himl;\n    uint var_4h;\n    \n    puStack60 = 0x43cc79;\n    himl = param_2;\n    fcn.00413c58(&fcn.0043cc50::var_20h, *(in_EAX + 0x30));\n    puStack60 = 0x43cc81;\n    fcn.0043d6cc();\n    uStack64 = 0x43cdd8;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x43cc9b;\n    puStack60 = &stack0xfffffffc;\n    var_ch = fcn.00424298();\n    uStack76 = 0x43cdbb;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x43ccba;\n    puStack72 = &stack0xfffffffc;\n    (**(*var_ch + 0x34))();\n    puStack84 = 0x43ccc8;\n    (**(*var_ch + 0x40))();\n    puStack84 = 0x43ccd4;\n    var_10h = fcn.00424298();\n    uStack88 = 0x43cd9e;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    fcn.004256b0();\n    (**(*var_10h + 0x34))();\n    (**(*var_10h + 0x40))();\n    uStack96 = himl;\n    iVar1 = sub.comctl32.dll_ImageList_GetImageCount();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            fcn.00424860();\n            fcn.0042186c();\n            uVar2 = fcn.00421b9c(0, 0, 0);\n            sub.comctl32.dll_ImageList_Draw(himl, iVar3, uVar2);\n            fcn.00424860();\n            fcn.0042186c();\n            fcn.00421b9c(0, 0, 0x10);\n            uStack96 = himl;\n            sub.comctl32.dll_ImageList_Draw();\n            fcn.0043c824();\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack96;\n    uStack88 = 0x43cda5;\n    uStack92 = 0x43cd9d;\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 752
    },
    "0043d108": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0043d108(uint param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != 0) {\n        puStack32 = 0x43d120;\n        uVar1 = fcn.0043c8f0();\n        puStack32 = 0x43d129;\n        in_EAX = fcn.0043c8f0();\n        if (uVar1 == in_EAX) {\n            puStack32 = 0x43d13d;\n            iVar2 = fcn.0043c8f0();\n            if (iVar2 != 0) {\ncode_r0x0043d155:\n                puStack32 = 0x43d161;\n                fcn.00403500();\n                uStack36 = 0x43d1e4;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x43d17c;\n                puStack32 = &fcn.0043d108::var_1h + 1;\n                fcn.0043d650();\n                puStack44 = 0x43d188;\n                fcn.00403500();\n                uStack48 = 0x43d1c7;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.0043d108::var_1h + 1;\n                fcn.0043d650();\n                var_1h._0_1_ = fcn.0043d0c0();\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x43d1ce;\n                uStack48 = 0x43d1c6;\n                uVar1 = fcn.00403530();\n                return uVar1;\n            }\n            puStack32 = 0x43d148;\n            in_EAX = fcn.0043c8f0();\n            if (in_EAX != 0) goto code_r0x0043d155;\n            var_1h._0_1_ = 1;\n            goto code_r0x0043d1eb;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x0043d1eb:\n    return in_EAX & 0xffffff00 | var_1h;\n}\n",
        "token_count": 645
    },
    "0043d254": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d254(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0041dde4();\n    uVar2 = 0x43d5c4;\n    pcVar1 = fcn.0043d650;\n    uVar3 = in_EAX;\n    fcn.0043d1f8(&stack0xfffffffc);\n    (**(*param_2 + 8))(pcVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 156
    },
    "0043f388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043f388(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x70) != 0) && (cVar1 = fcn.004036bc(),  cVar1 != '\\0')) {\n        fcn.00441ae4();\n        fcn.00441fe0();\n    }\n    if (*(in_EAX + 0x70) != 0) {\n        fcn.00442b1c();\n    }\n    fcn.0043eb24();\n    return;\n}\n",
        "token_count": 135
    },
    "00440b2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440b2c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_154h;\n    uint var_bch;\n    uint var_b8h;\n    \n    var_154h = 0x154;\n    iVar1 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_154h, 0);\n    if (iVar1 != 0) {\n        **(arg_8h + -4) = var_bch;\n        **(arg_8h + 8) = var_b8h;\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00441900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441900(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    (**(**(arg_8h + -8) + 8))();\n    uVar1 = (**(**(arg_8h + -0xc) + 0x14))();\n    *(arg_8h + -0x10) = uVar1;\n    iVar2 = (**(**(arg_8h + -0x14) + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar1 = (**(**(arg_8h + -0x14) + 0x18))();\n            (**(**(arg_8h + -0x14) + 0x18))(uVar1);\n            (**(**(arg_8h + -8) + 0x3c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.004043a0();\n    return;\n}\n",
        "token_count": 234
    },
    "00442378": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.00442378(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0043eb24();\n    return 0;\n}\n",
        "token_count": 62
    },
    "00446310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446310(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x46faec;\n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    *0x46faec = 0;\n    uStack36 = 0x4463b3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    uStack48 = 0x44637c;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.004462c0, 0);\n    sub.user32.dll_EnumThreadWindows();\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uStack52;\n    *0x46faec = uVar1;\n    return;\n}\n",
        "token_count": 271
    },
    "004464dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004464dc(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint uStack8;\n    uchar uStack4;\n    \n    uStack8 = sub.user32.dll_GetActiveWindow();\n    uStack4 = 0;\n    pcVar3 = fcn.004464bc;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.004464bc, &uStack8);\n    uVar2 = sub.user32.dll_EnumThreadWindows(uVar1);\n    return CONCAT44(pcVar3, uVar2 & 0xffffff00 | pcVar3 & 0xff);\n}\n",
        "token_count": 147
    },
    "00446664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint fcn.00446664(void)\n\n{\n    uint uVar1;\n    uchar auStack260 [256];\n    \n    sub.user32.dll_GetKeyboardState(auStack260);\n    uVar1 = fcn.00446618();\n    return uVar1;\n}\n",
        "token_count": 58
    },
    "0044671c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044671c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44678d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    iVar1 = fcn.004466f4();\n    if (iVar1 == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.004065fc();\n        fcn.0040b1a8(in_stack_ffffffd4, arg_ch);\n        fcn.00403ce4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x446794;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 289
    },
    "0044679c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044679c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00403500();\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 0x18) = arg_8h;\n    *(in_EAX + 10) = 0x50;\n    *(in_EAX + 8) = 8;\n    *(in_EAX + 0x1c) = 1;\n    *(in_EAX + 0x20) = 10;\n    *(in_EAX + 0x40) = 4;\n    *(in_EAX + 0x3c) = 0xc;\n    *(in_EAX + 0x28) = 0x80000014;\n    *(in_EAX + 0x2c) = 1;\n    *(in_EAX + 0x44) = 1;\n    if (in_DL != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 327
    },
    "00447320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00447320(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00431f50();\n    uVar1 = fcn.0044679c(0);\n    *(in_EAX + 0x208) = uVar1;\n    uVar2 = 1;\n    uVar1 = fcn.0044679c(1);\n    *(in_EAX + 0x20c) = uVar1;\n    *(in_EAX + 0x210) = 1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 226
    },
    "004476e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004476e8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_stack_ffffffd0;\n    int32_t iVar6;\n    int32_t in_stack_ffffffd4;\n    int32_t iVar7;\n    int32_t in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 0x44))();\n        uVar1 = *(*(in_EAX + 0x208) + 0x1a);\n        uVar2 = *(*(in_EAX + 0x20c) + 0x1a);\n        fcn.0042f5c0(in_stack_ffffffd0 - uVar1, in_stack_ffffffd4 - uVar2, in_stack_ffffffd8 + uVar1, \n                     in_stack_ffffffdc + uVar2);\n        fcn.0042f5ec();\n        iVar5 = iStack32;\n        iVar7 = iStack28;\n        fcn.0042f5c0();\n        fcn.0042f5ec();\n        if (iVar5 < 0) {\n            fcn.00446f84();\n        }\n        else {\n            iVar6 = iVar5;\n            iVar3 = fcn.0042f4ac();\n            if (iVar3 < iStack32) {\n                iVar3 = iStack32;\n                iVar4 = fcn.0042f4ac();\n                if (iVar4 < iStack32 - iVar5) {\n                    iVar3 = fcn.0042f4ac();\n                    iVar3 = iVar3 + iVar6;\n                }\n                fcn.0042f4ac(iVar6, iVar7, iVar3);\n                fcn.00446f84();\n            }\n        }\n        if (iVar7 < 0) {\n            fcn.00446f84();\n        }\n        else {\n            iVar5 = fcn.0042f4f0();\n            if (iVar5 < iStack28) {\n                iVar5 = fcn.0042f4f0();\n                if (iVar5 < iStack28 - iVar7) {\n                    fcn.0042f4f0();\n                }\n                fcn.0042f4f0();\n                fcn.00446f84();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 583
    },
    "00447a9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447a9c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = *(param_2 + 4);\n    uStack24 = 0x447afd;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = param_2;\n    cVar1 = fcn.004036bc();\n    if (cVar1 == '\\0') {\n        *(var_8h + 4) = 1;\n    }\n    fcn.00435480();\n    *in_FS_OFFSET = uStack28;\n    *(var_8h + 4) = var_ch;\n    return;\n}\n",
        "token_count": 219
    },
    "00447c30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00447c30(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea4;\n    uint *arg_ch;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t *var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack304 = 0x447c4e;\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    uStack308 = 0x447d94;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack316 = 0x447c70;\n    puStack304 = &stack0xfffffffc;\n    var_5h._0_1_ = param_2;\n    unique0x100000eb = in_EAX;\n    fcn.0040c8e0();\n    uStack320 = 0x447d74;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    uStack328 = 0;\n    puStack332 = 0x447c8f;\n    puStack316 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0xdc))();\n    puStack332 = 0x447c97;\n    iVar2 = fcn.00403478();\n    if ((iVar2 != *0x4450f0) && ((*(stack0xfffffff8 + 7) & 0x10) == 0)) {\n        *(stack0xfffffff8 + 0xbb) = *(stack0xfffffff8 + 0xbb) | 1;\n        uStack336 = 0x447d3c;\n        uStack340 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffeac;\n        puStack332 = &stack0xfffffffc;\n        cVar1 = fcn.00414ef8();\n        if (cVar1 == '\\0') {\n            fcn.00403480();\n            var_10h = &fcn.00447c30::var_110h;\n            var_ch._0_1_ = 4;\n            arg_ch = &fcn.00447c30::var_10h;\n            in_stack_fffffea4 = 0;\n            fcn.004065fc();\n            fcn.0040b1a8(in_stack_fffffea4, arg_ch);\n            fcn.00403ce4();\n        }\n        *in_FS_OFFSET = in_stack_fffffea4;\n        *(stack0xfffffff8 + 0xbb) = *(stack0xfffffff8 + 0xbb) & 0xfe;\n        return;\n    }\n    *in_FS_OFFSET = uStack328;\n    uStack320 = 0x447d7b;\n    uStack324 = 0x447d73;\n    fcn.0040c9e0();\n    return;\n}\n",
        "token_count": 770
    },
    "004488b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004488b4(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00436618(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.0041e090(),  -1 < var_8h + -1)) {\n        do {\n            fcn.0041e064();\n            cVar1 = fcn.0040372c();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00449e1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449e1f(void)\n\n{\n    int32_t unaff_EBX;\n    \n    *(unaff_EBX + 0x5f5d14c4) = *(unaff_EBX + 0x5f5d14c4) + 1;\n    return;\n}\n",
        "token_count": 67
    },
    "0044bdcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044bdcc(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44be38;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    cVar1 = (**(*in_EAX + 0xe0))();\n    if (cVar1 != '\\0') {\n        fcn.0040372c();\n        if ((cVar1 != '\\0') == true) {\n            fcn.0044bf00();\n        }\n    }\n    else {\n        in_EAX[0x93] = 0;\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 201
    },
    "0044c934": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c934(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.00434bb8();\n    *arg_8h = iVar1 == 0;\n    return;\n}\n",
        "token_count": 66
    },
    "0044cba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044cba0(void)\n\n{\n    uint uStack20;\n    \n    fcn.0044cc08();\n    return uStack20;\n}\n",
        "token_count": 35
    },
    "0044cbb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0044cbb8(void)\n\n{\n    int32_t iStack16;\n    int32_t iStack8;\n    \n    fcn.0044cc08();\n    return iStack8 - iStack16;\n}\n",
        "token_count": 52
    },
    "0044cbd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044cbd4(void)\n\n{\n    uint uStack16;\n    \n    fcn.0044cc08();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "0044cbec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0044cbec(void)\n\n{\n    int32_t iStack20;\n    int32_t iStack12;\n    \n    fcn.0044cc08();\n    return iStack12 - iStack20;\n}\n",
        "token_count": 51
    },
    "0044cc08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044cc08(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    uStack52 = 0x28;\n    (***0x47bee0)(*(in_EAX + 4));\n    *param_2 = &uStack52;\n    *(param_2 + 4) = uStack52;\n    *(param_2 + 8) = uStack48;\n    *(param_2 + 0xc) = uStack44;\n    return;\n}\n",
        "token_count": 136
    },
    "0044d384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d384(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint auStack24 [2];\n    \n    puVar5 = auStack24;\n    if (param_2 != *(in_EAX + 0x44)) {\n        *(in_EAX + 0x44) = param_2;\n        if (param_2 == 0) {\n            sub.user32.dll_GetCursorPos(auStack24);\n            iVar1 = sub.user32.dll_WindowFromPoint(puVar5, auStack24[0]);\n            if (iVar1 != 0) {\n                iVar2 = sub.user32.dll_GetWindowThreadProcessId(iVar1, 0);\n                iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n                if (iVar2 == iVar3) {\n                    uVar4 = fcn.0040728c();\n                    sub.user32.dll_SendMessageA(iVar1, 0x84, 0, uVar4);\n                    uVar4 = fcn.00407208();\n                    sub.user32.dll_SendMessageA(iVar1, 0x20, iVar1, uVar4);\n                    return;\n                }\n            }\n        }\n        uVar4 = fcn.0044d35c();\n        sub.user32.dll_SetCursor(uVar4);\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) + 1;\n    return;\n}\n",
        "token_count": 357
    },
    "0044d598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __fastcall fcn.0044d598(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint var_1h;\n    \n    uVar1 = 0;\n    if (param_1 == '\\x01') {\n        uVar1 = *(in_EAX + 0x44) < *(param_2 + 0x44);\n    }\n    else if (param_1 == '\\x02') {\n        uVar1 = *(param_2 + 0x44) + *(param_2 + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 < *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    }\n    else if (param_1 == '\\x03') {\n        uVar1 = *(in_EAX + 0x40) < *(param_2 + 0x40);\n    }\n    else if (param_1 == '\\x04') {\n        uVar1 = *(param_2 + 0x40) + *(param_2 + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 < *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    }\n    return uVar1;\n}\n",
        "token_count": 324
    },
    "0044d94c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044d94c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack28 = 0x44d961;\n    cVar1 = fcn.0044d8f4(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        fcn.00403500();\n        uStack28 = 0x44d9c6;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        fcn.0044d7a8(&stack0xfffffffc);\n        fcn.0044d7a8(&stack0xfffffffc);\n        fcn.0044d7a8(&stack0xfffffffc);\n        fcn.0044d7a8(&stack0xfffffffc);\n        fcn.0044d7a8(&stack0xfffffffc);\n        *in_FS_OFFSET = uStack32;\n        uStack28 = 0x44d9c5;\n        fcn.00403530();\n        return;\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "0044e4f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e4f4(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpPaint;\n    \n    uVar1 = sub.user32.dll_BeginPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    uVar2 = fcn.0044ec18();\n    sub.user32.dll_DrawIcon(uVar1, 0, 0, uVar2);\n    sub.user32.dll_EndPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    return;\n}\n",
        "token_count": 136
    },
    "0044eecc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044eecc(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if ((0xff < param_2[1]) && (param_2[1] < 0x109)) {\n        iVar1 = sub.user32.dll_GetCapture();\n        if (iVar1 == 0) {\n            iVar1 = *param_2;\n            if ((*(in_EAX + 0x44) == 0) || (iVar1 != *(*(in_EAX + 0x44) + 0x254))) {\n                while( true ) {\n                    iVar2 = fcn.0042c9bc();\n                    if ((iVar2 != 0) || (iVar1 == 0)) break;\n                    iVar1 = sub.user32.dll_GetParent();\n                }\n                if (iVar1 == 0) {\n                    iVar1 = *param_2;\n                }\n            }\n            else {\n                iVar1 = fcn.004360b8();\n            }\n            iVar1 = sub.user32.dll_SendMessageA(iVar1, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        else {\n            iVar2 = sub.user32.dll_GetWindowLongA(iVar1, 0xfffffffa);\n            if (iVar2 == *0x47d714) {\n                iVar1 = sub.user32.dll_SendMessageA(iVar1, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n                if (iVar1 != 0) {\n                    uVar3 = 1;\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 421
    },
    "0044f0bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f0bc(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0044f024();\n    if (cVar1 == '\\0') {\n        fcn.0044f960();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0044f3e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f3e0(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uStack128;\n    int32_t iStack124;\n    uint *puStack120;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t lpRect;\n    uint *var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t hWnd;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iStack104 = 0x44f3f8;\n    var_4h = in_EAX;\n    iStack108 = sub.user32.dll_GetActiveWindow();\n    iStack104 = 2;\n    uStack112 = 0x44f40a;\n    hWnd = iStack108;\n    var_14h = (***0x47bfcc)();\n    uStack112 = 2;\n    uStack116 = *(var_4h + 0x30);\n    puStack120 = 0x44f41f;\n    var_18h = (***0x47bfcc)();\n    if (var_14h != var_18h) {\n        var_44h = 0x28;\n        puStack120 = &fcn.0044f3e0::var_44h;\n        iStack124 = var_14h;\n        uStack128 = 0x44f442;\n        (***0x47bee0)();\n        var_50h = &fcn.0044f3e0::lpRect;\n        lpRect = *(var_4h + 0x30);\n        sub.user32.dll_GetWindowRect();\n        iStack104 = var_34h - var_3ch >> 1;\n        if (iStack104 < 0) {\n            iStack104 = iStack104 + ((var_34h - var_3ch & 1U) != 0);\n        }\n        iStack104 = iStack104 + var_3ch;\n        iStack108 = var_38h - var_40h >> 1;\n        if (iStack108 < 0) {\n            iStack108 = iStack108 + ((var_38h - var_40h & 1U) != 0);\n        }\n        iStack108 = iStack108 + var_40h;\n        uStack112 = 0;\n        uStack116 = *(var_4h + 0x30);\n        puStack120 = 0x44f48a;\n        sub.user32.dll_SetWindowPos();\n    }\n    puStack120 = 0x44f491;\n    var_10h = fcn.00446310();\n    puStack120 = 0x44f499;\n    var_1ch = fcn.0044622c();\n    puStack120 = 0x44f4a4;\n    cVar1 = fcn.0044e3c4();\n    if (cVar1 != '\\0') {\n        arg_8h = arg_8h | 0x100000;\n    }\n    iStack124 = 0x44f535;\n    uStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    uVar4 = *(var_4h + 0x30);\n    puStack120 = &stack0xfffffffc;\n    var_8h = sub.user32.dll_MessageBoxA_1();\n    *in_FS_OFFSET = uVar4;\n    if (var_14h != var_18h) {\n        iVar2 = var_48h - var_50h >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((var_48h - var_50h & 1U) != 0);\n        }\n        iVar3 = var_4ch - lpRect >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((var_4ch - lpRect & 1U) != 0);\n        }\n        sub.user32.dll_SetWindowPos(*(var_4h + 0x30), 0, iVar3 + lpRect, iVar2 + var_50h, 0, 0, 0x1d, 0x44f53c, arg_8h);\n    }\n    fcn.004463c4();\n    sub.user32.dll_SetActiveWindow(hWnd);\n    fcn.00446234();\n    return;\n}\n",
        "token_count": 1097
    },
    "0044fe38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044fe38(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack12 [8];\n    \n    fcn.0044fd00();\n    if (*(in_EAX + 0x89) == '\\0') {\n        sub.user32.dll_GetCursorPos(auStack12);\n        fcn.004500a0();\n    }\n    else if (*(in_EAX + 0x89) == '\\x01') {\n        fcn.0044fe70();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00450a0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00450a0c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.0040b16c();\n    *(in_EAX + 0xc) = in_ECX;\n    if (in_DL != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 173
    },
    "00450a54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00450a54(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 0xc) = in_ECX;\n    fcn.0040b16c();\n    if (in_DL != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 172
    },
    "00451318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.00451318(uint arg_8h, uint arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint arg_8h_00;\n    double dVar2;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_2h;\n    \n    puStack76 = &var_2h + 2;\n    uStack80 = 0x4513fa;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack84;\n    fcn.00409d1c(arg_8h, arg_ch);\n    fcn.00409d3c(arg_8h, arg_ch);\n    fcn.0040a964(arg_8h, arg_ch);\n    fVar1 = fcn.004515f8();\n    dVar2 = fVar1;\n    fcn.00451b3c(SUB84(dVar2, 0), dVar2 >> 0x20);\n    arg_8h_00 = SUB84(dVar2, 0);\n    fcn.00409330(arg_8h_00);\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.0040432c(0x451401);\n    return;\n}\n",
        "token_count": 398
    },
    "004515f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004515f8(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    uint uVar3;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint var_bch;\n    uint var_b8h;\n    int32_t lpTimeZoneInformation;\n    int32_t var_60h;\n    int32_t var_ch;\n    double dStack12;\n    \n    puStack204 = &stack0xfffffffc;\n    uStack208 = 0x45170b;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack212;\n    iVar1 = sub.kernel32.dll_GetTimeZoneInformation(&lpTimeZoneInformation);\n    if (iVar1 == -1) {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n        lpTimeZoneInformation = unaff_EBX;\n    }\n    else if (iVar1 != 0) {\n        if (iVar1 == 1) {\n            lpTimeZoneInformation = lpTimeZoneInformation + var_60h;\n        }\n        else if (iVar1 == 2) {\n            lpTimeZoneInformation = lpTimeZoneInformation + var_ch;\n        }\n        else {\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n            lpTimeZoneInformation = unaff_EBX;\n        }\n    }\n    uVar3 = 0;\n    fVar2 = fcn.00409a00(0);\n    dStack12 = fVar2;\n    if (0 < lpTimeZoneInformation) {\n        dStack12 = *0x45171c - fVar2;\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack212 = 0x451712;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 420
    },
    "004518f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004518f8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x451983;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h = 1;\n    fcn.004083f4();\n    fcn.004517b8(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack48 = 0x45198a;\n    uStack52 = 0x451982;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 221
    },
    "004519e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004519e8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    uStack68 = 0x451a9b;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    arg_8h = 1;\n    fcn.004083f4();\n    fcn.004517b8(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack68 = 0x451aa2;\n    uStack72 = 0x451a9a;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 261
    },
    "00451b3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451b3c(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t in_AL;\n    uchar *puVar1;\n    uint in_EDX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((CONCAT44(arg_ch, arg_8h) == *0x451bd4 & in_AL) == 0) {\n        fcn.00409a40(&var_8h, arg_8h, arg_ch);\n        fcn.00409330(in_EDX);\n        if (*0x451bd4 <= CONCAT44(arg_ch, arg_8h)) {\n            puVar1 = fcn.00404810();\n            *puVar1 = 0x2b;\n        }\n        else {\n            puVar1 = fcn.00404810();\n            *puVar1 = 0x2d;\n        }\n    }\n    else {\n        fcn.0040435c();\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00451bf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00451bf8(void)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint arg_8h;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    char *var_4h;\n    \n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    puStack48 = 0x451c17;\n    var_4h = in_EAX;\n    fcn.004047a8();\n    uStack52 = 0x451d18;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    _var_10h = 0.0;\n    puStack60 = &fcn.00451bf8::var_4h;\n    puStack64 = 0x451c3c;\n    puStack48 = &stack0xfffffffc;\n    fcn.004085dc();\n    puStack64 = 0x451c4e;\n    fcn.00404818();\n    puStack64 = 0x451c56;\n    iVar1 = fcn.004045c0();\n    if ((0 < iVar1) && ((*var_4h == '+' || (*var_4h == '-')))) {\n        uStack68 = 0x451ce3;\n        uStack72 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb8;\n        puStack64 = &stack0xfffffffc;\n        fcn.00404818(&fcn.00451bf8::var_18h, 0);\n        arg_8h = fcn.004088bc();\n        fcn.00404818(&fcn.00451bf8::var_1ch);\n        fcn.004088bc();\n        fVar2 = fcn.00409a00(arg_8h);\n        _var_10h = fVar2;\n        if (*var_4h == '-') {\n            _var_10h = -_var_10h;\n        }\n        *in_FS_OFFSET = arg_8h;\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x451d1f;\n    uStack68 = 0x451d0f;\n    fcn.0040432c();\n    uStack68 = 0x451d17;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 617
    },
    "00452c94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452c94(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack444;\n    uint uStack440;\n    uchar *puStack436;\n    uint var_194h;\n    uint var_190h;\n    \n    if (param_2 != '\\0') {\n        puStack436 = 0x452cb3;\n        in_EAX = fcn.0040387c();\n    }\n    uStack440 = 0x452d40;\n    uStack444 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe44;\n    puStack436 = &stack0xfffffffc;\n    fcn.00453ee0();\n    fcn.00452398();\n    uVar3 = 0x101;\n    iVar1 = (***0x47c184)(0x101, &fcn.00452c94::var_190h);\n    if (iVar1 == -1) {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n    }\n    uVar2 = fcn.0045376c();\n    *(in_EAX + 4) = uVar2;\n    *in_FS_OFFSET = uVar3;\n    uStack444 = 0x452d47;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 330
    },
    "00452e58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00452e58(uint32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    ushort extraout_var;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x452ed7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_8h = 0x10;\n    puVar2 = &var_8h;\n    (***0x47be0c)();\n    (**(*in_EAX + 0x78))();\n    fcn.0040435c();\n    uVar1 = (***0x47bf1c)();\n    *arg_8h = uVar1 & 0xffff;\n    *in_FS_OFFSET = CONCAT22(extraout_var, var_18h._2_2_);\n    fcn.00404308(0x452ede, puVar2);\n    return;\n}\n",
        "token_count": 292
    },
    "00452ee8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452ee8(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_4h;\n    \n    iVar1 = fcn.004045c0();\n    if (iVar1 == 0) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = fcn.004544c0();\n    }\n    (***0x47bf18)(var_10h & 0xffff0000 | arg_8h & 0xffff);\n    (***0x47bed8)();\n    return;\n}\n",
        "token_count": 156
    },
    "00452f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452f60(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    uVar1 = fcn.004544c0();\n    (***0x47bf18)(uVar1 & 0xffff0000 | arg_8h & 0xffff);\n    (***0x47bd64)();\n    return;\n}\n",
        "token_count": 106
    },
    "004530c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004530c0(uint32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *in_EAX;\n    ushort extraout_var;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint *puVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x45314b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_8h = 0x10;\n    puVar3 = &var_8h;\n    puVar2 = &var_18h;\n    (***0x47c014)();\n    (**(*in_EAX + 0x78))();\n    fcn.0040435c();\n    uVar1 = (***0x47bf1c)();\n    *arg_8h = uVar1 & 0xffff;\n    *in_FS_OFFSET = CONCAT22(extraout_var, var_18h._2_2_);\n    fcn.00404308(0x453152, arg_14h, arg_10h, puVar2, puVar3);\n    return;\n}\n",
        "token_count": 329
    },
    "0045315c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045315c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        (**(*in_EAX + 8))();\n        fcn.00415488();\n        iVar1 = *param_2;\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.0041516c();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00453198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453198(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x45322d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (in_EAX != 0) {\n        puVar2 = &stack0xfffffffc;\n        if (0x40 < *(in_EAX + 8)) {\n            fcn.004065fc();\n            fcn.0040b16c();\n            fcn.00403ce4();\n            puVar2 = puStack32;\n        }\n        puStack32 = puVar2;\n        iVar4 = *(in_EAX + 8);\n        puVar1 = param_2;\n        if (-1 < iVar4 + -1) {\n            do {\n                uVar3 = fcn.004152c8();\n                puVar1[1] = uVar3;\n                iVar4 = iVar4 + -1;\n                puVar1 = puVar1 + 1;\n            } while (iVar4 != 0);\n        }\n        *param_2 = *(in_EAX + 8);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x453234;\n    uStack36 = 0x45322c;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 390
    },
    "0045323c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045323c(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_314h;\n    uint var_210h;\n    uint var_10ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00402e14();\n    fcn.00402e14();\n    fcn.00402e14();\n    fcn.00453198();\n    fcn.00453198();\n    fcn.00453198();\n    if (arg_8h == -2) {\n        uVar1 = (***0x47c2b4)(0, &var_10ch, &var_210h, &var_314h, 0);\n    }\n    else {\n        var_8h = arg_8h / 1000;\n        var_4h = (arg_8h % 1000) * 1000;\n        uVar1 = (***0x47c2b4)(0, &var_10ch, &var_210h, &var_314h, &var_8h);\n    }\n    fcn.0045315c();\n    fcn.0045315c();\n    fcn.0045315c();\n    return uVar1;\n}\n",
        "token_count": 289
    },
    "00453370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453370(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    fcn.00402e14();\n    uVar1 = fcn.004544c0();\n    (***0x47bf18)(uVar1 & 0xffff0000 | arg_8h & 0xffff);\n    (***0x47becc)();\n    return;\n}\n",
        "token_count": 126
    },
    "0045345c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045345c(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x453529;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack48 = 0;\n    uStack52 = 0x453485;\n    uStack52 = fcn.004047b8();\n    puStack56 = 0x45348f;\n    uVar1 = (***0x47be4c)();\n    if (uVar1 == 0) {\n        uStack60 = 0x4534cc;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        fcn.004088bc();\n        *in_FS_OFFSET = uStack64;\n    }\n    else {\n        puStack56 = uVar1 & 0xffff0000 | *(uVar1 + 8);\n        uStack60 = 0x4534a3;\n        (***0x47bf1c)();\n    }\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x453530;\n    uStack48 = 0x453528;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 367
    },
    "0045376c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045376c(ushort *param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    ushort *extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 4) = param_1[0xc4];\n    *(in_EAX + 8) = param_1[0xc3];\n    *(in_EAX + 0xc) = param_1[1];\n    *(in_EAX + 0xe) = *param_1;\n    fcn.0045374c();\n    fcn.0045374c();\n    fcn.004065fc();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 241
    },
    "004537e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "get file size"
        ],
        "decompiled_code": "\nvoid fcn.004537e8(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4537fc;\n    fcn.004047a8();\n    uStack28 = 0x45389e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    uStack36 = 0;\n    uStack40 = 0x8000080;\n    uStack44 = 3;\n    uStack48 = 0;\n    uStack52 = 1;\n    uStack56 = 0x80000000;\n    uStack60 = 0x453829;\n    puStack24 = &stack0xfffffffc;\n    uStack60 = fcn.004047b8();\n    puStack64 = 0x45382f;\n    uVar1 = sub.kernel32.dll_CreateFileA_1();\n    uStack68 = 0x453881;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    uVar6 = 0;\n    uVar5 = 0;\n    uVar4 = 0;\n    uVar3 = 0;\n    puStack64 = &stack0xfffffffc;\n    iVar2 = (***0x47c02c)();\n    if (iVar2 != 0) {\n        sub.kernel32.dll_GetFileSize_1(uVar1, 0);\n    }\n    *in_FS_OFFSET = in_EAX;\n    sub.kernel32.dll_CloseHandle_1(uVar1, 0x453888, uVar3, uVar4, uVar5, uVar6);\n    return;\n}\n",
        "token_count": 503
    },
    "00453990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00453990(uint32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    ushort extraout_var;\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x453a1e;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    (***0x47bde0)();\n    fcn.00453dc0();\n    *in_ECX = var_14h;\n    (**(*in_EAX + 0x78))();\n    fcn.0040435c();\n    uVar1 = (***0x47bf1c)();\n    *arg_8h = uVar1 & 0xffff;\n    *in_FS_OFFSET = CONCAT22(extraout_var, var_14h._2_2_);\n    fcn.00404308(0x453a25);\n    return;\n}\n",
        "token_count": 286
    },
    "00453a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00453a30(uint32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    ushort extraout_var;\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x453abe;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    (***0x47bda4)();\n    fcn.00453dc0();\n    *in_ECX = var_14h;\n    (**(*in_EAX + 0x78))();\n    fcn.0040435c();\n    uVar1 = (***0x47bf1c)();\n    *arg_8h = uVar1 & 0xffff;\n    *in_FS_OFFSET = CONCAT22(extraout_var, var_14h._2_2_);\n    fcn.00404308(0x453ac5);\n    return;\n}\n",
        "token_count": 285
    },
    "00453dcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453dcc(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == -1) {\n        iVar1 = (**(*in_EAX + 0x6c))();\n        if (-1 < arg_8h) {\n            arg_8h = arg_8h + 1;\n            do {\n                if (iVar1 == *in_ECX) {\n                    return 1;\n                }\n                in_ECX = in_ECX + 1;\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n        }\n        fcn.00453e80();\n    }\n    return 0;\n}\n",
        "token_count": 192
    },
    "00453ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453ee0(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00453f88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453f88(uint param_1, uint param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x454382;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00404308();\n    // switch table (63 cases) at 0x453fc8\n    switch(param_2) {\n    case 0x2714:\n        fcn.004065fc();\n        break;\n    case 0x2719:\n        fcn.004065fc();\n        break;\n    case 0x271d:\n        fcn.004065fc();\n        break;\n    case 0x271e:\n        fcn.004065fc();\n        break;\n    case 0x2726:\n        fcn.004065fc();\n        break;\n    case 0x2728:\n        fcn.004065fc();\n        break;\n    case 0x2733:\n        fcn.004065fc();\n        break;\n    case 0x2734:\n        fcn.004065fc();\n        break;\n    case 0x2735:\n        fcn.004065fc();\n        break;\n    case 0x2736:\n        fcn.004065fc();\n        break;\n    case 0x2737:\n        fcn.004065fc();\n        break;\n    case 0x2738:\n        fcn.004065fc();\n        break;\n    case 0x2739:\n        fcn.004065fc();\n        break;\n    case 0x273a:\n        fcn.004065fc();\n        break;\n    case 0x273b:\n        fcn.004065fc();\n        break;\n    case 0x273c:\n        fcn.004065fc();\n        break;\n    case 0x273d:\n        fcn.004065fc();\n        break;\n    case 0x273e:\n        fcn.004065fc();\n        break;\n    case 0x273f:\n        fcn.004065fc();\n        break;\n    case 0x2740:\n        fcn.004065fc();\n        break;\n    case 0x2741:\n        fcn.004065fc();\n        break;\n    case 0x2742:\n        fcn.004065fc();\n        break;\n    case 0x2743:\n        fcn.004065fc();\n        break;\n    case 0x2744:\n        fcn.004065fc();\n        break;\n    case 0x2745:\n        fcn.004065fc();\n        break;\n    case 0x2746:\n        fcn.004065fc();\n        break;\n    case 0x2747:\n        fcn.004065fc();\n        break;\n    case 0x2748:\n        fcn.004065fc();\n        break;\n    case 0x2749:\n        fcn.004065fc();\n        break;\n    case 0x274a:\n        fcn.004065fc();\n        break;\n    case 0x274b:\n        fcn.004065fc();\n        break;\n    case 0x274c:\n        fcn.004065fc();\n        break;\n    case 0x274d:\n        fcn.004065fc();\n        break;\n    case 0x274e:\n        fcn.004065fc();\n        break;\n    case 0x274f:\n        fcn.004065fc();\n        break;\n    case 0x2750:\n        fcn.004065fc();\n        break;\n    case 0x2751:\n        fcn.004065fc();\n        break;\n    case 0x2752:\n        fcn.004065fc();\n    }\n    arg_8h = &fcn.00453f88::var_4h;\n    fcn.004065fc();\n    fcn.00409330(arg_8h);\n    fcn.0040435c();\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x454389;\n    iStack48 = 0x454381;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 1001
    },
    "004544c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004544c0(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4544d4;\n    fcn.004047a8();\n    uStack24 = 0x454505;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*in_EAX + 0x7c))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45450c;\n    uStack24 = 0x454504;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 188
    },
    "00454dc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454dc4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x454e59;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    arg_8h = *(in_EAX + 0x1c);\n    (**(***0x47c1dc + 0x14))(arg_8h, *(in_EAX + 0x14), 0);\n    cVar1 = fcn.00453dcc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n    }\n    fcn.004550d4();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404308(0x454e60);\n    return;\n}\n",
        "token_count": 263
    },
    "00454eec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00454eec(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00415eec();\n    fcn.0045511c();\n    if (param_1 != 0) {\n        *(in_EAX + 0x1c) = *(param_1 + 0x1c);\n    }\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 200
    },
    "0045516c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045516c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    uVar1 = *0x454a5c;\n    fcn.004165b4(*0x454a5c);\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 151
    },
    "004553f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.004553f0(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack16 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack16;\n    *0x47dc68 = *0x47dc68 + 1;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 86
    },
    "00455914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00455914(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4559ad;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x455940;\n    (**(*in_EAX + 0x30))();\n    uStack40 = 0x455990;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00404308();\n    while( true ) {\n        cVar1 = (**(*in_EAX + 0x54))();\n        if (cVar1 == '\\0') break;\n        fcn.00455cac();\n        fcn.004045c8();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x455997;\n    uStack40 = 0x45598f;\n    (**(*in_EAX + 0x38))();\n    return;\n}\n",
        "token_count": 313
    },
    "00455c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00455c20(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00454764();\n    uVar1 = fcn.00454eec();\n    *(in_EAX + 0x6c) = uVar1;\n    uVar1 = fcn.00403500();\n    *(in_EAX + 0x78) = uVar1;\n    uVar1 = fcn.00403500();\n    *(in_EAX + 0x94) = uVar1;\n    fcn.00456634();\n    *(in_EAX + 0x9c) = 0x8000;\n    uVar1 = fcn.00403500();\n    *(in_EAX + 0x70) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 280
    },
    "00456b64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456b64(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x456bcd;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = (**(*param_2 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*param_2 + 0xc))();\n            (**(*in_EAX + 0x84))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x456bd4;\n    uStack36 = 0x456bcc;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 255
    },
    "0045733c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045733c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = in_EAX + 4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 144
    },
    "0045777c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045777c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041da6c();\n    uVar1 = fcn.00403500();\n    *(in_EAX + 0x30) = uVar1;\n    uVar1 = fcn.0045733c();\n    *(in_EAX + 0x34) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 199
    },
    "00457e04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00457e04(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00454764();\n    *(in_EAX + 0x68) = 1000;\n    *(in_EAX + 0x7c) = 5000;\n    uVar1 = fcn.00415804();\n    *(in_EAX + 0x84) = uVar1;\n    uVar1 = fcn.0045516c();\n    *(in_EAX + 0x74) = uVar1;\n    *(in_EAX + 0x80) = *0x457a74;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 249
    },
    "00458120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00458120(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x458139;\n    iVar1 = fcn.0041595c();\n    uStack28 = 0x45818a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_8h = *(iVar1 + 8);\n    puStack24 = &stack0xfffffffc;\n    if (-1 < var_8h + -1) {\n        do {\n            iVar1 = fcn.004152c8();\n            (**(**(iVar1 + 0x48) + 0x5c))();\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x458191;\n    uStack28 = 0x458189;\n    fcn.004159c0();\n    return;\n}\n",
        "token_count": 265
    },
    "00458244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00458244(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00457160();\n    uVar1 = fcn.00403500();\n    *(in_EAX + 0x4c) = uVar1;\n    *(in_EAX + 0x50) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 201
    },
    "004584b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004584b4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x458595;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x458523;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar2 = fcn.00458450();\n    cVar1 = (**(*piVar2 + 0x44))();\n    if (cVar1 == '\\0') {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x458573;\n    cVar1 = (**(**(in_EAX + 0x48) + 0x54))();\n    if (cVar1 == '\\0') {\n        puStack40 = 0x45857f;\n        fcn.004571f8();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45859c;\n    uStack32 = 0x458594;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 377
    },
    "00458e64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458e64(void)\n\n{\n    char cVar1;\n    \n    cVar1 = '\\v';\n    do {\n        fcn.00403530();\n        cVar1 = cVar1 + -1;\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 65
    },
    "0045a944": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045a944(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    *(in_EAX + 0x1c) = 0xffffffff;\n    *(in_EAX + 0x20) = 0xffffffff;\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 198
    },
    "0045b4a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b4a8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x45b536;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    arg_8h = 0x45b4d2;\n    iVar1 = fcn.0045b36c();\n    for (; (iVar1 != 0 && (0 < param_2)); param_2 = param_2 + -1) {\n        arg_8h = 0x45b4df;\n        iVar1 = fcn.0045b35c();\n    }\n    if (iVar1 == 0) {\n        arg_8h = &fcn.0045b4a8::var_4h;\n        fcn.004065fc();\n        fcn.00409330(arg_8h);\n        fcn.0045a92c();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack40 = 0x45b53d;\n    iStack44 = 0x45b535;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 351
    },
    "0045bac4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045bac4(int32_t param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x45bba4;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.0045c584();\n    fcn.00417e74();\n    fcn.00417e74();\n    fcn.00404564();\n    fcn.0045aac8();\n    fcn.0045acfc();\n    fcn.0045ad54();\n    fcn.0045adfc();\n    fcn.0045adac();\n    fcn.0045ab5c();\n    var_ch = *(param_1 + 0x14);\n    if (-1 < var_ch + -1) {\n        do {\n            fcn.0045bd88();\n            fcn.0045bac4();\n            fcn.0040372c();\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x45bbab;\n    uStack40 = 0x45bba3;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 336
    },
    "0045bbb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045bbb4(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.004045c0(param_2);\n    if (0xff < iVar1) {\n        iVar1 = 0xff;\n    }\n    fcn.0040459c(param_2, iVar1 + 0x19);\n    *param_1 = *(in_EAX + 0x14);\n    param_1[1] = *(in_EAX + 0x18);\n    param_1[3] = *(in_EAX + 0x1c);\n    param_1[2] = *(in_EAX + 0x20);\n    param_1[4] = *(in_EAX + 0xc);\n    iVar1 = fcn.0045b57c();\n    param_1[5] = iVar1;\n    fcn.00417eac();\n    fcn.00417eac();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0045b4a8();\n            fcn.0045bbb4();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "0045bc64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045bc64(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "0045bff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bff0(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    \n    fcn.0045c584();\n    puVar2 = &var_2ch;\n    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00429350();\n    fcn.0045bcf0();\n    fcn.00426ad0();\n    return;\n}\n",
        "token_count": 169
    },
    "0045c168": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045c168(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uStack8;\n    \n    fcn.0045bcf0(4, param_2);\n    iVar1 = fcn.00426c8c();\n    if (iVar1 == 0) {\n        uStack8 = 0;\n    }\n    return uStack8;\n}\n",
        "token_count": 92
    },
    "0045c31c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c31c(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00415c80();\n    pcVar2 = fcn.0045c374;\n    pcVar1 = fcn.0045c43c;\n    uVar3 = in_EAX;\n    fcn.0045c28c(&stack0xfffffffc);\n    (**(*param_2 + 8))(pcVar1, in_EAX, pcVar2, uVar3);\n    return;\n}\n",
        "token_count": 157
    },
    "0045c43c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045c43c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.0045c064(0);\n    while (iVar1 != 0) {\n        iVar2 = iVar2 + 1;\n        iVar1 = fcn.0045b25c(iVar2);\n    }\n    fcn.00417eac();\n    iVar2 = fcn.0045c064();\n    while (iVar2 != 0) {\n        fcn.0045bbb4();\n        iVar2 = fcn.0045b25c();\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0045c4ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0045c4ac(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    int32_t iStack20;\n    uint uStack16;\n    \n    uVar3 = fcn.00417c48();\n    iVar1 = uVar3 >> 0x20;\n    uVar4 = fcn.00417c7c();\n    iVar2 = uVar4 >> 0x20;\n    if (iVar2 == iVar1) {\n        if (uVar4 <= uVar3) goto code_r0x0045c522;\n    }\n    else if (iVar2 <= iVar1) goto code_r0x0045c522;\n    fcn.00417e74();\n    iVar2 = 0;\n    iVar1 = fcn.0045c064();\n    while ((iVar2 < iStack20 && (iVar1 != 0))) {\n        fcn.00417e74();\n        fcn.0045b028();\n        iVar2 = iVar2 + 1;\n        iVar1 = fcn.0045b3c8();\n    }\ncode_r0x0045c522:\n    return CONCAT44(uStack16, iVar1);\n}\n",
        "token_count": 271
    },
    "0045c528": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045c528(void)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.0045bccc();\n    fcn.00417eac(uVar2);\n    iVar3 = fcn.0045c064();\n    while (iVar3 != 0) {\n        uVar1 = fcn.0045b020();\n        fcn.00417eac(uVar2, uVar1);\n        iVar3 = fcn.0045b3c8();\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0045d0e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045d0e4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.004360b8(param_2, param_1);\n    iVar1 = fcn.00426cd0();\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0045c168();\n    }\n    return uVar2;\n}\n",
        "token_count": 111
    },
    "0045ec04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045ec04(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint auStack28 [4];\n    \n    iVar1 = *(*(in_EAX + 0x278) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0045ebec();\n            fcn.0045b8f8();\n            auStack28[0] = fcn.004360b8(auStack28, 0);\n            sub.user32.dll_InvalidateRect();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00461a94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461a94(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack12 [8];\n    \n    fcn.00460ca4();\n    sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x807, 0x102, auStack12);\n    return;\n}\n",
        "token_count": 78
    },
    "00461ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00461ac0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack16 [8];\n    uint uStack8;\n    uint uStack4;\n    \n    *(in_EAX + 0x2e8) = 0x112;\n    uStack8 = 2;\n    uVar1 = 0x814;\n    uStack4 = param_2;\n    sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x814, 0x112, auStack16);\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "00461b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461b20(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack20 [4];\n    uint32_t uStack16;\n    \n    *(in_EAX + 0x2e8) = 0x401;\n    uStack16 = param_2;\n    uVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x80d, 0x401, auStack20);\n    *(in_EAX + 0x304) = uVar1;\n    return;\n}\n",
        "token_count": 144
    },
    "00461e58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00461e58(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uchar auStack24 [8];\n    uint uStack16;\n    \n    fcn.00460ca4();\n    *(in_EAX + 0x2e8) = 0x102;\n    uStack16 = 1;\n    uVar2 = 0x814;\n    uVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x814, 0x102, auStack24);\n    *(in_EAX + 0x304) = uVar1;\n    return uVar2;\n}\n",
        "token_count": 156
    },
    "00461ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00461ea0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uchar auStack24 [8];\n    uint uStack16;\n    \n    fcn.00460ca4();\n    *(in_EAX + 0x2e8) = 0x102;\n    uStack16 = 3;\n    uVar2 = 0x814;\n    uVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x814, 0x102, auStack24);\n    *(in_EAX + 0x304) = uVar1;\n    return uVar2;\n}\n",
        "token_count": 156
    },
    "00461ee8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00461ee8(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    char cVar2;\n    uchar auStack24 [8];\n    uint uStack16;\n    \n    *(in_EAX + 0x2e8) = 0x102;\n    uStack16 = 4;\n    cVar2 = '\\x14';\n    uVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x814, 0x102, auStack24);\n    *(in_EAX + 0x304) = uVar1;\n    return uVar1 & 0xffffff00 | cVar2 - 0xc;\n}\n",
        "token_count": 163
    },
    "00461f2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00461f2c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uchar auStack24 [8];\n    uint uStack16;\n    \n    *(in_EAX + 0x2e8) = 0x102;\n    uStack16 = 2;\n    uVar2 = 0x814;\n    uVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x814, 0x102, auStack24);\n    *(in_EAX + 0x304) = uVar1;\n    return uVar2;\n}\n",
        "token_count": 148
    },
    "00461f6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00461f6c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar auStack24 [8];\n    uint uStack16;\n    \n    fcn.00460ca4();\n    *(in_EAX + 0x2e8) = 0x102;\n    uStack16 = 6;\n    uVar2 = 0x814;\n    uVar1 = sub.winmm.dll_mciSendCommandA(*(in_EAX + 0x2f2), 0x814, 0x102, auStack24);\n    *(in_EAX + 0x304) = uVar1;\n    return uVar1 & 0xffffff00 | uVar2 & 0xff;\n}\n",
        "token_count": 176
    },
    "00461fb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461fb4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack4104 [4096];\n    \n    iVar1 = sub.winmm.dll_mciGetErrorStringA(*(in_EAX + 0x304), auStack4104, 0x1000);\n    if (iVar1 == 0) {\n        fcn.004065fc();\n    }\n    else {\n        fcn.00408bd0();\n        fcn.004043f8();\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "004622c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004622c8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 0x18) = 0;\n    *(in_EAX + 0x10) = 0;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 177
    },
    "00463758": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00463758(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00455c20();\n    uVar1 = fcn.004622c8();\n    *(in_EAX + 0xbc) = uVar1;\n    *(in_EAX + 0xc0) = 1;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 183
    },
    "00463b1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463b1c(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 <= param_2) {\n        *in_EAX = param_2;\n        param_2 = uVar1;\n    }\n    if ((*in_EAX & 0x80000000) == 0x80000000) {\n        *in_EAX = *in_EAX + param_2;\n        if ((*(in_EAX + 3) & 0x80) != 0) {\n            if ((in_EAX[1] & 0x80000000) != 0x80000000) {\n                in_EAX[1] = in_EAX[1] + 1;\n                return;\n            }\n            in_EAX[1] = in_EAX[1] + 1;\n            if ((in_EAX[1] & 0x80000000) != 0x80000000) {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n            }\n        }\n    }\n    else {\n        *in_EAX = *in_EAX + param_2;\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "00463b78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00463b78(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041da6c();\n    *(in_EAX + 0x4c) = 0x1000;\n    *(in_EAX + 0x30) = 0;\n    *(in_EAX + 0x31) = 0;\n    *(in_EAX + 0x32) = 0;\n    *(in_EAX + 0x36) = 0;\n    *(in_EAX + 0x3a) = 0;\n    *(in_EAX + 0x3e) = 0;\n    *(in_EAX + 0x42) = 0;\n    *(in_EAX + 0x46) = 0;\n    *(in_EAX + 100) = 0;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x5c) = 0;\n    *(in_EAX + 0x5d) = 0;\n    fcn.00404308();\n    *(in_EAX + 0x7c) = 0;\n    fcn.00404308();\n    *(in_EAX + 0x7d) = 0;\n    *(in_EAX + 0x7e) = 0;\n    uVar1 = fcn.00403500();\n    *(in_EAX + 0x78) = uVar1;\n    fcn.00404944();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 444
    },
    "00463e84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463e84(void)\n\n{\n    fcn.00463b1c();\n    return;\n}\n",
        "token_count": 26
    },
    "00464324": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00464324(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.004160d0();\n    *(in_EAX + 0x18) = 0;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "00466590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00466590(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x84) = 0x40;\n    fcn.00466450();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 150
    },
    "0046667c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046667c(uchar *arg_8h, uchar *arg_ch, uchar *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.004664b4();\n    iVar2 = fcn.004664b4();\n    iVar3 = fcn.004664b4();\n    uVar4 = fcn.004664b4();\n    uVar4 = iVar1 << 0x12 | iVar2 << 0xc | iVar3 << 6 | uVar4;\n    var_8h._2_1_ = uVar4 >> 0x10;\n    *arg_10h = var_8h._2_1_;\n    var_8h._1_1_ = uVar4 >> 8;\n    *arg_ch = var_8h._1_1_;\n    var_8h._0_1_ = uVar4;\n    *arg_8h = var_8h;\n    return;\n}\n",
        "token_count": 292
    },
    "004666e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004666e8(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    \n    fcn.00404944();\n    fcn.00404808();\n    iVar7 = 1;\n    for (uVar8 = 1; uVar8 < *(in_EAX + 0x50) || uVar8 == *(in_EAX + 0x50); uVar8 = uVar8 + 3) {\n        uVar2 = *(in_EAX + 0x54);\n        uVar1 = *(uVar2 + 1 + uVar8);\n        iVar3 = fcn.00404810();\n        iVar4 = fcn.00404810();\n        iVar5 = fcn.00404810();\n        iVar6 = fcn.00404810();\n        fcn.004665f8(iVar6 + 2 + iVar7, iVar5 + 1 + iVar7, iVar4 + iVar7, iVar3 + -1 + iVar7, uVar2 & 0xffffff00 | uVar1\n                    );\n        iVar7 = iVar7 + 4;\n    }\n    *(in_EAX + 0x50) = 0;\n    return;\n}\n",
        "token_count": 318
    },
    "00466944": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00466944(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack12 = 0;\n    uStack44 = 0x466a11;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00404308();\n    for (uVar1 = 1; uVar1 < *(in_EAX + 0x50); uVar1 = uVar1 + 4) {\n        fcn.0046667c(&stack0xfffffff5, &stack0xfffffff6, &stack0xfffffff7, \n                     *(in_EAX + 0x54) & 0xffffff00 | *(*(in_EAX + 0x54) + 2 + uVar1), \n                     *(in_EAX + 0x54) & 0xffffff00 | *(*(in_EAX + 0x54) + 1 + uVar1));\n        fcn.004044e8(var_4h);\n        fcn.004044e8(0);\n        fcn.004044e8(0);\n        uStack48 = 0;\n        fcn.00404680();\n    }\n    fcn.0040435c();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x466a18;\n    uStack44 = 0x466a08;\n    fcn.0040432c();\n    uStack44 = 0x466a10;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 425
    },
    "00467188": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00467188(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00466590();\n    fcn.0040435c();\n    *(in_EAX + 0x8c) = 0x284;\n    *(in_EAX + 0x89) = 1;\n    *(in_EAX + 0x88) = 0;\n    *(in_EAX + 0x30) = 1;\n    fcn.00464074();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 213
    },
    "00467338": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00467338(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack24 = 0x467352;\n    var_4h = param_2;\n    fcn.004047a8();\n    uStack28 = 0x4673d8;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    iVar1 = fcn.004045c0();\n    if (iVar1 < *(in_EAX + 0x84)) {\n        puStack36 = &fcn.00467338::var_8h;\n        fcn.004045c0();\n        fcn.00404818();\n        fcn.0040460c();\n    }\n    else {\n        puStack36 = in_EAX + 0x80;\n        fcn.00404818();\n    }\n    *in_FS_OFFSET = puStack36;\n    uStack28 = 0x4673df;\n    iStack32 = 0x4673d7;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 323
    },
    "00467620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00467620(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00466590();\n    fcn.0040435c();\n    *(in_EAX + 0x9c) = 0x284;\n    *(in_EAX + 0x98) = 1;\n    uVar1 = fcn.00403500();\n    *(in_EAX + 0x8c) = uVar1;\n    *(in_EAX + 0x88) = 0;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x89) = 0;\n    *(in_EAX + 0x90) = 0;\n    *(in_EAX + 0x94) = *(in_EAX + 0x4c);\n    fcn.00464074();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 302
    },
    "004676e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004676e0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack24 = 0x4676fa;\n    var_4h = param_2;\n    fcn.004047a8();\n    uStack28 = 0x467780;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    iVar1 = fcn.004045c0();\n    if (iVar1 < *(in_EAX + 0x84)) {\n        puStack36 = &fcn.004676e0::var_8h;\n        fcn.004045c0();\n        fcn.00404818();\n        fcn.0040460c();\n    }\n    else {\n        puStack36 = in_EAX + 0x80;\n        fcn.00404818();\n    }\n    *in_FS_OFFSET = puStack36;\n    uStack28 = 0x467787;\n    iStack32 = 0x46777f;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 322
    },
    "00468ff8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00468ff8(void)\n\n{\n    char in_AL;\n    \n    if (((9 < in_AL - 0x30U) && (5 < in_AL + 0xbfU)) && (5 < in_AL + 0x9fU)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 72
    },
    "00469a4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00469a4c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403500();\n    fcn.0040435c();\n    *(in_EAX + 0x34) = 0;\n    *(in_EAX + 0x35) = 1;\n    *(in_EAX + 0x36) = 1;\n    *(in_EAX + 0x38) = 0x4e;\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 207
    },
    "00469f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00469f80(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x469fea;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00469d44();\n            cVar1 = fcn.004085a4();\n            if (cVar1 != '\\0') break;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x469ff1;\n    uStack32 = 0x469fe9;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 252
    },
    "0046a89c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.0046a89c(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint arg_ch_00;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_2h;\n    \n    var_8h = 0;\n    puStack28 = 0x46a8bd;\n    fcn.004047a8();\n    uStack32 = 0x46a943;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &fcn.0046a89c::var_2h + 2;\n    fcn.00404308();\n    iVar2 = 0;\n    while( true ) {\n        iVar1 = fcn.004162c4();\n        if (iVar1 <= iVar2) break;\n        arg_8h_00 = &fcn.0046a89c::var_8h;\n        arg_ch_00 = arg_ch;\n        fcn.00469598(arg_8h_00, arg_ch, 0x46a95c, *arg_8h);\n        fcn.0046a6ec(arg_8h_00, arg_ch_00);\n        uStack36 = var_8h;\n        fcn.00404680();\n        iVar2 = iVar2 + 1;\n    }\n    fcn.00404858();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x46a94a;\n    uStack32 = 0x46a93a;\n    fcn.00404308();\n    uStack32 = 0x46a942;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 432
    },
    "0046b710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046b710(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    fcn.004047a8();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00408430();\n    iVar1 = (***0x47bdcc)();\n    if (iVar1 == 0) {\n        fcn.00408430();\n        iVar1 = (***0x47bdcc)();\n        if (iVar1 == 0) {\n            fcn.004085dc();\n            arg_8h = &var_18h;\n            fcn.00451720(arg_8h);\n            fcn.004085dc();\n            fcn.004043a0();\n            fcn.004088f8();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 299
    },
    "0046bcb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046bcb8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack40 = 0x46bccc;\n        in_EAX = fcn.0040387c();\n    }\n    uStack44 = 0x46bd53;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    iVar1 = fcn.00403478();\n    if (iVar1 == *0x46b2b0) {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n    }\n    fcn.00415eec();\n    *(in_EAX + 0x2c) = 0;\n    uVar2 = fcn.00469a4c();\n    *(in_EAX + 0x28) = uVar2;\n    uVar2 = fcn.00469a4c();\n    *(in_EAX + 0x24) = uVar2;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x46bd5a;\n    uStack44 = 0x46bd52;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 349
    },
    "0046bdb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0046bdb0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    float10 fVar5;\n    uint uVar6;\n    double dVar7;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint8_t var_6h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar4 = 7;\n    do {\n        var_4h = 0;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0x46c02e;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046bdb0::var_1ch;\n    var_20h = 0x46bddf;\n    fcn.0046a620();\n    var_20h = 0x46bdeb;\n    piVar2 = fcn.00469a4c();\n    var_20h = var_4h;\n    var_24h = &fcn.0046bdb0::var_ch;\n    var_28h = 0x46be03;\n    fcn.0046a6ec(var_24h, var_4h);\n    var_28h = 0x46be12;\n    uVar3 = fcn.00469ffc();\n    var_28h = uVar3 & 0xffffff00 | var_6h;\n    var_2ch = var_4h;\n    fcn.0046af98(&fcn.0046bdb0::var_10h, var_4h, var_28h);\n    fcn.00469ffc();\n    fcn.0046a89c(&fcn.0046bdb0::var_14h, var_4h);\n    fcn.00469ffc();\n    fcn.0046a89c(&fcn.0046bdb0::var_18h, var_4h);\n    fcn.00469ffc();\n    fcn.00416ab8();\n    fcn.00469ffc();\n    fcn.00469ffc();\n    iVar4 = fcn.004162c4();\n    if (0 < iVar4) {\n        fcn.00469ffc();\n    }\n    fcn.00469ffc();\n    fcn.00469280();\n    fcn.00469ffc();\n    fcn.0046a89c(&fcn.0046bdb0::var_24h, var_4h);\n    uVar3 = fcn.00469ffc();\n    fcn.0046af98(&fcn.0046bdb0::var_28h, var_4h, uVar3 & 0xffffff00 | var_6h);\n    fcn.00469ffc();\n    fcn.0046a6ec(&fcn.0046bdb0::var_2ch, var_4h);\n    fcn.00469ffc();\n    fcn.00469ffc();\n    cVar1 = fcn.0046bc08();\n    if (cVar1 == '\\0') {\n        uVar6 = *(in_EAX + 0x48);\n        fcn.00451318(*(in_EAX + 0x48), *(in_EAX + 0x4c));\n        fcn.00469ffc();\n    }\n    else {\n        fVar5 = fcn.00409d64();\n        dVar7 = fVar5;\n        fcn.00451318(SUB84(dVar7, 0), dVar7 >> 0x20);\n        uVar6 = SUB84(dVar7, 0);\n        fcn.00469ffc();\n    }\n    fcn.0040881c();\n    fcn.00469ffc();\n    fcn.00469ffc();\n    (**(*piVar2 + 0x40))();\n    *in_FS_OFFSET = uVar6;\n    fcn.0040432c(0x46c035);\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 1127
    },
    "0046c35c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c35c(uint arg_8h)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040387c();\n        in_DL = extraout_DL;\n    }\n    fcn.0046bcb8();\n    fcn.0040435c();\n    if (in_DL != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 140
    },
    "0046c57c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0046c57c(void)\n\n{\n    bool bVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar1 = *0x47dd34 == 0;\n    *0x47dd34 = *0x47dd34 + -1;\n    if (bVar1) {\n        fcn.00414878(*0x46b40c, *0x46b51c);\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "0046c704": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046c704(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040387c();\n        param_2 = extraout_DL;\n    }\n    fcn.00463758();\n    *(in_EAX + 200) = 0x4f;\n    fcn.0040435c();\n    if (param_2 != '\\0') {\n        fcn.004038d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 159
    },
    "0046e580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e580(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x46e651;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x46e5aa;\n    fcn.00462bd0();\n    uStack52 = 0x46e61f;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(*in_EAX + 100))();\n    fcn.0040460c();\n    fcn.00456bdc();\n    fcn.0040460c();\n    fcn.00456bdc();\n    *in_FS_OFFSET = uStack56;\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x46e658;\n    uStack40 = 0x46e650;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 312
    },
    "0046e94c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e94c(void)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    // WARNING: Could not recover jumptable at 0x0046e961. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*(in_EAX + 0x4e6))();\n    return;\n}\n",
        "token_count": 81
    },
    "0046e968": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046e968(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        iVar1 = 1;\n        do {\n            *(param_2 + iVar1) = 0xa2;\n            iVar1 = iVar1 + 1;\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0046e984": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid fcn.0046e984(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0x46e993;\n    sub.gdi32.dll_SetMiterLimit();\n    iVar1 = 0x9e5647a;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    uStack32 = 0x46e9a8;\n    iVar1 = fcn.00402728();\n    if (iVar1 != 0) {\n        *0x47dd44 = 0x13933;\n        uStack32 = 0;\n        uStack36 = 0;\n        uStack40 = 0;\n        sub.gdi32.dll_SetMiterLimit();\n        fcn.00402748();\n        iVar1 = 0x8e2b;\n        do {\n            uStack40 = 0;\n            sub.gdi32.dll_SetMiterLimit();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        iVar1 = fcn.00402728();\n        sub.kernel32.dll_VirtualProtect(iVar1, 0x5d57, 0x40, &stack0xffffffd8);\n        *0x47dd4c = 0;\n        iVar2 = 0;\n        do {\n            *(iVar1 + iVar2) = *(*0x47dd4c + 0x470278) ^ 0x8b;\n            *0x47dd4c = *0x47dd4c + 2;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x5d57);\n        fcn.0046e94c();\n    }\n    return;\n}\n",
        "token_count": 446
    },
    "0042d2e8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0042d2e8(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if ((in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f) < (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f)) {\n        return in_EAX;\n    }\n    return param_2;\n}\n",
        "token_count": 110
    },
    "0040d7d8": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d760)\n// WARNING: Removing unreachable block (ram,0x0040d776)\n// WARNING: Removing unreachable block (ram,0x0040d781)\n// WARNING: Removing unreachable block (ram,0x0040d766)\n\nvoid __fastcall fcn.0040d7d8(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint16_t uVar2;\n    \n    if (in_EAX != param_2) {\n        uVar2 = *param_2 & 0xfff;\n        fcn.0040d3ac();\n        if (uVar2 < 0x10f) {\n            if (uVar2 < 8) {\n                *in_EAX = *param_2;\n                in_EAX[1] = param_2[1];\n                in_EAX[2] = param_2[2];\n                in_EAX[3] = param_2[3];\n            }\n            else if (uVar2 == 0x14) {\n                *in_EAX = 0x14;\n                in_EAX[2] = param_2[2];\n                in_EAX[3] = param_2[3];\n            }\n            else if (uVar2 == 0x100) {\n                *in_EAX = 0x100;\n                in_EAX[2] = 0;\n                fcn.0040435c();\n            }\n            else if (uVar2 == 0x101) {\n                *in_EAX = *param_2;\n                in_EAX[1] = param_2[1];\n                in_EAX[2] = param_2[2];\n                in_EAX[3] = param_2[3];\n                (**0x47d870)();\n            }\n            else if (((*param_2 & 0x2000) == 0) || ((*param_2 & 0x4000) != 0)) {\n                sub.oleaut32.dll_VariantCopy();\n            }\n            else {\n                fcn.0040d4ec();\n            }\n        }\n        else {\n            cVar1 = fcn.004110d0();\n            if (cVar1 == '\\0') {\n                fcn.0040d39c();\n            }\n            else {\n                (**(_pe_dos_header + 0x28))(0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 539
    },
    "0040d7e8": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d7e8(ushort param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    ushort *in_EAX;\n    uint *in_FS_OFFSET;\n    ulong uVar4;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x40d970;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    // switch table (21 cases) at 0x40d81e\n    switch(*param_2 & 0xfff) {\n    case 0:\n        break;\n    default:\n        puStack24 = &stack0xfffffffc;\n        fcn.0040d394();\n        break;\n    case 2:\n        uVar2 = param_2[4];\n        *(in_EAX + 4) = uVar2;\n        *(in_EAX + 6) = uVar2 >> 0x1f;\n        break;\n    case 3:\n        iVar3 = *(param_2 + 4);\n        *(in_EAX + 4) = iVar3;\n        *(in_EAX + 6) = iVar3 >> 0x1f;\n        break;\n    case 4:\n        puStack24 = &stack0xfffffffc;\n        uVar4 = fcn.0040292c();\n        *(in_EAX + 4) = uVar4;\n        *(in_EAX + 6) = uVar4 >> 0x20;\n        break;\n    case 5:\n        puStack24 = &stack0xfffffffc;\n        uVar4 = fcn.0040292c();\n        *(in_EAX + 4) = uVar4;\n        *(in_EAX + 6) = uVar4 >> 0x20;\n        break;\n    case 6:\n        puStack24 = &stack0xfffffffc;\n        uVar4 = fcn.0040292c();\n        *(in_EAX + 4) = uVar4;\n        *(in_EAX + 6) = uVar4 >> 0x20;\n        break;\n    case 7:\n        puStack24 = &stack0xfffffffc;\n        uVar4 = fcn.0040292c();\n        *(in_EAX + 4) = uVar4;\n        *(in_EAX + 6) = uVar4 >> 0x20;\n        break;\n    case 8:\n        fcn.00404528();\n        uVar4 = fcn.00408910();\n        *(in_EAX + 4) = uVar4;\n        *(in_EAX + 6) = uVar4 >> 0x20;\n        break;\n    case 0xb:\n        uVar2 = param_2[4];\n        *(in_EAX + 4) = uVar2;\n        *(in_EAX + 6) = uVar2 >> 0x1f;\n        break;\n    case 0x10:\n        cVar1 = *(param_2 + 4);\n        *(in_EAX + 4) = cVar1;\n        *(in_EAX + 6) = cVar1 >> 0x1f;\n        break;\n    case 0x11:\n        *(in_EAX + 4) = *(param_2 + 4);\n        *(in_EAX + 6) = 0;\n        break;\n    case 0x12:\n        *(in_EAX + 4) = param_2[4];\n        *(in_EAX + 6) = 0;\n        break;\n    case 0x13:\n        *(in_EAX + 4) = *(param_2 + 4);\n        *(in_EAX + 6) = 0;\n        break;\n    case 0x14:\n        *(in_EAX + 4) = *(param_2 + 4);\n        *(in_EAX + 6) = *(param_2 + 6);\n    }\n    *in_EAX = param_1;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x40d977;\n    uStack28 = 0x40d96f;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 965
    },
    "0040ef80": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ef80(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint16_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = in_EAX & 0xffff0fff;\n    uVar1 = uVar2;\n    if (0x14 < uVar1) {\n        if (uVar1 == 0x100) {\n            uVar2 = CONCAT22(uVar2 >> 0x10, 8);\n        }\n        else if (uVar1 == 0x101) {\n            fcn.0040eef4();\n        }\n        else {\n            fcn.0040d39c();\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 165
    },
    "0040fb3c": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nuint32_t fcn.0040fb3c(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX & 0xffff0fff;\n    if (0x14 < uVar1) {\n        if (uVar1 == 0x100) {\n            uVar1 = CONCAT22(uVar1 >> 0x10, 8);\n        }\n        else {\n            fcn.0040d39c();\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 117
    },
    "0040fdf8": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid fcn.0040fdf8(void)\n\n{\n    uint16_t *in_EAX;\n    uint16_t uVar1;\n    ulong uVar2;\n    \n    uVar1 = *in_EAX & 0xfff;\n    if (0x14 < uVar1) {\n        if (uVar1 == 0x100) {\n            uVar1 = 8;\n        }\n        else {\n            fcn.0040d39c();\n        }\n    }\n    // switch table (9 cases) at 0x40fe36\n    switch(*(uVar1 + 0x46f3f8)) {\n    case 0:\n        fcn.0040d39c();\n        return;\n    case 2:\n    case 6:\n        fcn.0040dee0();\n        fcn.0040e6d0();\n        return;\n    case 3:\n    case 5:\n        fcn.0040e144();\n        fcn.0040532c();\n        return;\n    case 4:\n        *(in_EAX + 4) = ROUND(-*(in_EAX + 4));\n        return;\n    case 7:\n        *(in_EAX + 4) = -*(in_EAX + 4);\n        break;\n    case 8:\n        uVar2 = fcn.0040dfbc();\n        fcn.0040e780(-uVar2, -((uVar2 >> 0x20) + (uVar2 != 0)));\n        return;\n    }\n    return;\n}\n",
        "token_count": 332
    },
    "0040fec4": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fec4(int32_t *param_1)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xfff) < 0x10f) {\n        fcn.0040ff08();\n    }\n    else {\n        cVar1 = fcn.004110d0();\n        if (cVar1 == '\\0') {\n            fcn.0040d39c();\n        }\n        else {\n            (**(*param_1 + 0x30))();\n        }\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0041003c": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041003c(uint param_1)\n\n{\n    uint16_t in_AX;\n    uint uVar1;\n    \n    if (0x10e < (in_AX & 0xfff)) {\n        uVar1 = fcn.004110d0();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00410062;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00410062:\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 132
    },
    "004112d0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid fcn.004112d0(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x4114ca;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    bVar1 = *0x47d874 == 0;\n    *0x47d874 = *0x47d874 + -1;\n    if (bVar1) {\n        fcn.004100ac();\n        *0x47d864 = fcn.0040d38c;\n        *0x47d868 = fcn.0040d39c;\n        *0x47d86c = fcn.0040d394;\n        *0x47d870 = fcn.0040d39c;\n        *0x47d878 = fcn.0040d3ac;\n        *0x47d87c = fcn.0040d7d8;\n        *0x47d880 = 0x40ffa8;\n        *0x47d884 = fcn.0040dd5c;\n        *0x47d888 = 0x40de78;\n        *0x47d88c = fcn.0040dee0;\n        *0x47d890 = fcn.0040dfbc;\n        *0x47d894 = fcn.0040e108;\n        *0x47d898 = fcn.0040e144;\n        *0x47d89c = fcn.0040e280;\n        *0x47d8a0 = fcn.0040e468;\n        *0x47d8a4 = fcn.0040e3f4;\n        *0x47d8a8 = fcn.0040e4b8;\n        *0x47d8ac = 0x40e598;\n        *0x47d8b0 = 0x40e63c;\n        *0x47d8b4 = 0x40e6c0;\n        *0x47d8b8 = fcn.0040e6d0;\n        *0x47d8bc = fcn.0040e780;\n        *0x47d8c0 = 0x40e7ac;\n        *0x47d8c4 = 0x40e7d4;\n        *0x47d8c8 = 0x40e7ec;\n        *0x47d8cc = 0x40e804;\n        *0x47d8d0 = fcn.0040e848;\n        *0x47d8d4 = fcn.0040e81c;\n        *0x47d8d8 = fcn.0040e898;\n        *0x47d8dc = 0x40e8d0;\n        *0x47d8e0 = 0x40e8fc;\n        *0x47d8e4 = 0x40e928;\n        *0x47d8e8 = fcn.0040e98c;\n        *0x47d8ec = fcn.0040e93c;\n        *0x47d8f0 = fcn.0040ea88;\n        *0x47d8f4 = 0x40e760;\n        *0x47d8f8 = fcn.0040ec78;\n        *0x47d8fc = 0x40fb34;\n        *0x47d900 = 0x40fdb4;\n        *0x47d904 = fcn.0040fec4;\n        *0x47d908 = fcn.0040d424;\n        *0x47d90c = 0x40ffb0;\n        *0x47d910 = 0x410234;\n        *0x47d914 = fcn.004103b4;\n        *0x47d918 = fcn.004104ac;\n        *0x47d91c = fcn.004100bc;\n        *0x47d920 = 0x410134;\n        fcn.00405288();\n        fcn.0040529c();\n        *0x47d9d4 = fcn.0040c7e0();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 995
    },
    "0041e9c0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e9c0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41ea24;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch != 0) {\n        *(arg_ch + 4) = 2;\n        uVar1 = fcn.00417c7c();\n        *(arg_ch + 8) = uVar1;\n        *(arg_ch + 0xc) = uVar1 >> 0x20;\n        *(arg_ch + 0x10) = 0;\n        *(arg_ch + 0x14) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 0;\n        *(arg_ch + 0x2c) = 1;\n    }\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 289
    },
    "0042141c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0042141c(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.004038e4();\n    fcn.00415970();\n    fcn.00421c1c();\n    fcn.00403530();\n    fcn.00403530();\n    fcn.00403530();\n    sub.kernel32.dll_DeleteCriticalSection_1(iVar1 + 0x38);\n    fcn.00415b68();\n    if ('\\0' < extraout_DL) {\n        fcn.004038cc();\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0042186c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042186c(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00421c70();\n    uVar1 = fcn.0042123c();\n    sub.user32.dll_FillRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 111
    },
    "0042197c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042197c(int32_t *param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 != NULL) {\n        (**(*in_EAX + 0x10))();\n        fcn.00421c70();\n        (**(*param_1 + 0x14))();\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0042ce88": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ce88(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 4) = *(param_2 + 4);\n    *(in_EAX + 8) = *(param_2 + 8);\n    *(in_EAX + 0xc) = *(param_2 + 0xc);\n    *(in_EAX + 0x10) = *(param_2 + 0x10);\n    *(in_EAX + 0x14) = *(param_2 + 0x14);\n    *(in_EAX + 0x18) = *(param_2 + 0x18);\n    *(in_EAX + 0x20) = *(param_2 + 0x20);\n    *(in_EAX + 0x24) = *(param_2 + 0x24);\n    *(in_EAX + 0x28) = *(param_2 + 0x28);\n    *(in_EAX + 0x2c) = *(param_2 + 0x2c);\n    return;\n}\n",
        "token_count": 249
    },
    "00433360": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433360(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_CreateWindowExA\n                      (param_2[2], param_2 + 0x13, *param_2, param_2[1], param_2[3], param_2[4], param_2[5], param_2[6]\n                       , param_2[7], 0, param_2[0xd], param_2[8]);\n    *(in_EAX + 0x180) = uVar1;\n    return;\n}\n",
        "token_count": 147
    },
    "00454eac": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00454eac(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = (**(***0x47c1dc + 0x10))(in_EAX + 0x1c);\n    fcn.00453dc0();\n    *(in_EAX + 0xc) = uVar1;\n    *(in_EAX + 0x10) = 1;\n    fcn.004550d4();\n    fcn.004550f8();\n    return;\n}\n",
        "token_count": 118
    },
    "00463a98": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00463a98(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uchar in_CL;\n    uchar in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_1h;\n    \n    puStack24 = 0x463aae;\n    fcn.004047a8();\n    puStack24 = 0x463ab6;\n    fcn.004047a8();\n    uStack28 = 0x463b0d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &fcn.00463a98::var_1h + 1;\n    iVar1 = fcn.00464384();\n    *(iVar1 + 0x18) = in_EAX;\n    *(iVar1 + 0xc) = in_DL;\n    *(iVar1 + 0xd) = in_CL;\n    fcn.0040435c();\n    fcn.0040435c();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x463b14;\n    uStack28 = 0x463b0c;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 312
    },
    "004089c8": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004089c8(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004047b8(0xc0000000, 0, 0, 2, 0x80, 0);\n    sub.kernel32.dll_CreateFileA_1(uVar1);\n    return;\n}\n",
        "token_count": 73
    },
    "004040d8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.004040d8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0x46f000;\n    *0x46f000 = 0;\n    puVar3 = *0x47d630;\n    puVar4 = 0x47d630;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 171
    },
    "0040c8d0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040c8d0(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x14), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 57
    },
    "004164c4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004164c4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004036bc();\n    if (cVar1 == '\\0') {\n        fcn.00415254();\n    }\n    fcn.0041516c();\n    *(param_2 + 4) = in_EAX;\n    *(param_2 + 8) = in_EAX[4];\n    in_EAX[4] = in_EAX[4] + 1;\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x14))();\n    fcn.00416210();\n    fcn.00415e88();\n    return;\n}\n",
        "token_count": 177
    },
    "004179d4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004179d4(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    (**(*in_EAX + 0x84))();\n    if (in_EAX[5] == in_EAX[6]) {\n        fcn.00417900();\n    }\n    if (in_EDX < in_EAX[5]) {\n        fcn.004028e0();\n    }\n    puVar1 = in_EAX[4] + in_EDX * 8;\n    *puVar1 = 0;\n    puVar1[1] = arg_8h;\n    fcn.0040435c();\n    in_EAX[5] = in_EAX[5] + 1;\n    (**(*in_EAX + 0x80))();\n    return;\n}\n",
        "token_count": 193
    },
    "00427c28": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00427c28(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00426824();\n            (**(**(iVar1 + 4) + 0x2c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    (**(**(in_EAX + 0x10) + 8))();\n    (**(**(in_EAX + 0x14) + 8))();\n    (**(**(in_EAX + 0x18) + 8))();\n    return;\n}\n",
        "token_count": 178
    },
    "00438ab8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438ab8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    if ((in_ECX == 0) && (in_ECX = *(*(in_EAX + 100) + 8),  iVar1 = in_ECX,  arg_8h != '\\0')) {\n        do {\n            in_ECX = iVar1;\n            iVar1 = *(in_ECX + 0xc);\n        } while (*(in_ECX + 0xc) != 0);\n    }\n    if (arg_8h == '\\0') {\n        *(in_EDX + 0xc) = in_ECX;\n        iVar1 = *(in_ECX + 0x18);\n        *(in_EDX + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = in_EDX;\n        }\n        *(in_ECX + 0x18) = in_EDX;\n        iVar1 = *(in_ECX + 0x14);\n        *(in_EDX + 0x14) = iVar1;\n        if (in_ECX == *(iVar1 + 8)) {\n            *(iVar1 + 8) = in_EDX;\n        }\n    }\n    else {\n        *(in_EDX + 0x14) = *(in_ECX + 0x14);\n        *(in_EDX + 0x18) = in_ECX;\n        iVar1 = *(in_ECX + 0xc);\n        *(in_EDX + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = in_EDX;\n        }\n        *(in_ECX + 0xc) = in_EDX;\n    }\n    fcn.00437f98();\n    fcn.00438328();\n    return;\n}\n",
        "token_count": 431
    },
    "004042bc": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042bc(uint lpThreadId, uint dwCreationFlags, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint in_ECX;\n    \n    puVar1 = fcn.00402728();\n    *puVar1 = in_ECX;\n    puVar1[1] = arg_10h;\n    *0x47d049 = 1;\n    sub.kernel32.dll_CreateThread();\n    return;\n}\n",
        "token_count": 98
    },
    "0040c8c0": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040c8c0(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x10), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 57
    },
    "00451dd4": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00451dd4(void)\n\n{\n    sub.kernel32.dll_Sleep();\n    return;\n}\n",
        "token_count": 24
    },
    "0040846c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040846c(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    bool bVar6;\n    \n    pcVar1 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar1 = *(in_EAX + -4);\n    }\n    pcVar3 = param_2;\n    if (param_2 != NULL) {\n        pcVar3 = *(param_2 + -4);\n    }\n    pcVar2 = pcVar1;\n    if (pcVar3 < pcVar1) {\n        pcVar2 = pcVar3;\n    }\n    bVar6 = true;\n    do {\n        pcVar4 = in_EAX;\n        pcVar5 = param_2;\n        if (pcVar2 == NULL) break;\n        pcVar2 = pcVar2 + -1;\n        pcVar5 = param_2 + 1;\n        pcVar4 = in_EAX + 1;\n        bVar6 = *in_EAX == *param_2;\n        in_EAX = pcVar4;\n        param_2 = pcVar5;\n    } while (bVar6);\n    if (!bVar6) {\n        pcVar1 = pcVar4[-1];\n        pcVar3 = pcVar5[-1];\n    }\n    return pcVar1 - pcVar3;\n}\n",
        "token_count": 333
    },
    "004084bc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004084bc(uint param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char *in_EAX;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint8_t uVar6;\n    uint16_t uVar7;\n    uint8_t uVar8;\n    bool bVar9;\n    \n    pcVar3 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar3 = *(in_EAX + -4);\n    }\n    pcVar5 = param_2;\n    if (param_2 != NULL) {\n        pcVar5 = *(param_2 + -4);\n    }\n    pcVar4 = pcVar3;\n    if (pcVar5 < pcVar3) {\n        pcVar4 = pcVar5;\n    }\n    bVar9 = true;\ncode_r0x004084db:\n    do {\n        if (pcVar4 != NULL) {\n            pcVar4 = pcVar4 + -1;\n            pcVar2 = param_2 + 1;\n            pcVar1 = in_EAX + 1;\n            bVar9 = *in_EAX == *param_2;\n            in_EAX = pcVar1;\n            param_2 = pcVar2;\n            if (bVar9) goto code_r0x004084db;\n        }\n        if (bVar9) goto code_r0x00408509;\n        uVar6 = in_EAX[-1];\n        if ((0x60 < uVar6) && (uVar6 < 0x7b)) {\n            uVar6 = uVar6 - 0x20;\n        }\n        uVar7 = CONCAT11(param_2[-1], uVar6);\n        uVar8 = uVar7 >> 8;\n        if ((0x60 < uVar8) && (uVar8 < 0x7b)) {\n            uVar7 = CONCAT11(uVar8 - 0x20, uVar6);\n        }\n        uVar6 = uVar7 >> 8;\n        bVar9 = uVar7 == uVar6;\n        if (!bVar9) {\n            pcVar3 = uVar7;\n            pcVar5 = uVar6;\ncode_r0x00408509:\n            return pcVar3 - pcVar5;\n        }\n    } while( true );\n}\n",
        "token_count": 532
    },
    "00421d38": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00421d38(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.00420f50();\n    sub.gdi32.dll_SelectObject(*(in_EAX + 4), uVar1);\n    sub.gdi32.dll_SetROP2(*(in_EAX + 4), *(*(*(in_EAX + 0x10) + 0x18) * 2 + 0x46f79c));\n    return;\n}\n",
        "token_count": 110
    },
    "00435358": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00435358(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    sub.user32.dll_RemovePropA(in_EAX[0x60], *0x47db7e);\n    sub.user32.dll_RemovePropA(in_EAX[0x60], *0x47db7c);\n    return;\n}\n",
        "token_count": 86
    },
    "00429670": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00429670(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x42969a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x30))();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 125
    },
    "0043c788": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043c788(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43c817;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    uVar2 = *(in_EAX + 0x34);\n    iVar1 = sub.comctl32.dll_ImageList_Create\n                      (uVar2, *(in_EAX + 0x30), *(*(in_EAX + 0x41) * 4 + 0x46f9dc) | 0xfe, *(in_EAX + 0x38), \n                       *(in_EAX + 0x38));\n    *(in_EAX + 0x3c) = iVar1;\n    if (iVar1 == 0) {\n        fcn.004065fc();\n        fcn.0040b16c();\n        fcn.00403ce4();\n    }\n    if (*(in_EAX + 0x44) != 0x1fffffff) {\n        fcn.0043c9ac();\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00404308(0x43c81e);\n    return;\n}\n",
        "token_count": 321
    },
    "004574e0": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.004574e0(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = 0x4574f1;\n    var_8h = (**(*in_EAX + 0x30))();\n    puStack16 = 0x4574ff;\n    fcn.004573c4();\n    uStack20 = 0x457534;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.0041516c();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x45753b;\n    uStack20 = 0x457533;\n    fcn.004573cc();\n    return;\n}\n",
        "token_count": 213
    },
    "00457544": {
        "rules": [
            "PEB access",
            "PEB access"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457544(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x457555;\n    cVar1 = fcn.0045187c();\n    if (cVar1 == '\\0') {\n        puStack16 = 0x457560;\n        (**(*param_2 + 0x18))();\n        puStack16 = 0x457567;\n        fcn.00403530();\n    }\n    else {\n        *(param_2 + 0xf) = 1;\n    }\n    puStack16 = 0x457578;\n    fcn.004573c4();\n    uStack20 = 0x4575ac;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00415468();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4575b3;\n    uStack20 = 0x4575ab;\n    fcn.004573cc();\n    return;\n}\n",
        "token_count": 284
    },
    "00469188": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00469188(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack24 = 0x4691f2;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x5e) = 1;\n    (**(*in_EAX + 0x30))();\n    if (*(in_EAX + 0x21) != '\\0') {\n        fcn.00404818(&fcn.00469188::var_4h);\n        fcn.00463f7c();\n        in_EAX[0x14] = 0;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4691f9;\n    uStack24 = 0x4691f1;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 248
    },
    "00431120": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.00431120(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    fcn.0042f618();\n    uVar1 = (**(*in_EAX + -0x10))();\n    if ((*(in_EAX + 0x14) & 2) != 0) {\n        uVar1 = fcn.0042fcd0();\n    }\n    if ((*(in_EAX + 0x14) & 8) != 0) {\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 2;\n    }\n    fcn.0043109c(uVar1 & 0xffffff00 | *0x431168);\n    return;\n}\n",
        "token_count": 170
    },
    "00431b70": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431b70(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x431c0c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.004036bc();\n    if (cVar1 == '\\0') {\n        fcn.00415c78();\n    }\n    else {\n        (**(*in_EAX + 0x50))();\n        fcn.0043bdec();\n        fcn.0043bf24();\n        fcn.0042fa98();\n        fcn.0043bc84();\n        fcn.0043c044();\n        (**(*param_2 + 0x34))(in_EAX[0x48], in_EAX[0x49]);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x431c13;\n    uStack28 = 0x431c0b;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 293
    },
    "00434a24": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434a24(uint param_1, int32_t *param_2)\n\n{\n    (**(*param_2 + 0x68))();\n    return;\n}\n",
        "token_count": 42
    },
    "0043bf24": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043bf24(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00404704(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004036e0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x68))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.0040435c();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00453e80": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.00453e80(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x453ed2;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + 0x68))();\n    uVar1 = 0;\n    fcn.00450a54(0);\n    fcn.00403ce4();\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x453ed9;\n    uStack28 = 0x453ed1;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 194
    },
    "0046498c": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.0046498c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uchar uVar2;\n    uint *arg_8h;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uVar2 = 1;\n    uStack36 = 0x464a8b;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack40;\n    fcn.004043a0();\n    fcn.00451720(&var_4h);\n    fcn.004043a0();\n    arg_8h = &var_8h;\n    fcn.00451720(arg_8h);\n    fcn.00404704();\n    if (uVar2) {\n        fcn.00404704();\n        if (uVar2) goto code_r0x00464a54;\n    }\n    fcn.00403530();\n    iVar1 = fcn.00464484(0x80);\n    iVar1 = (**(*(iVar1 + 0x18) + 0x2c))();\n    *(in_EAX + 0xac) = iVar1;\n    *(iVar1 + 0x7e) = 1;\n    *(iVar1 + 0x6c) = in_EAX;\n    *(iVar1 + 0x68) = 0x4658f8;\ncode_r0x00464a54:\n    fcn.0040435c();\n    fcn.0040435c();\n    *in_FS_OFFSET = arg_8h;\n    iStack40 = 0x464a92;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 432
    },
    "00464ad0": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.00464ad0(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x464b40;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *(in_EAX + 0x5e) = 1;\n    while (in_EAX[0x14] != 0) {\n        fcn.00464074();\n        in_EAX[0x14] = in_EAX[0x13];\n        (**(*in_EAX + 0x30))();\n    }\n    (**(*in_EAX[0x2b] + 0x38))();\n    fcn.00463ed4();\n    in_EAX[0x14] = 0;\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x464b47;\n    uStack20 = 0x464b3f;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 262
    },
    "0041d984": {
        "rules": [
            "suspend thread"
        ],
        "decompiled_code": "\nvoid fcn.0041d984(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xe) = 1;\n    sub.kernel32.dll_SuspendThread(*(in_EAX + 4));\n    fcn.0041d80c();\n    return;\n}\n",
        "token_count": 65
    },
    "0041d9a4": {
        "rules": [
            "resume thread"
        ],
        "decompiled_code": "\nvoid fcn.0041d9a4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_ResumeThread(*(in_EAX + 4));\n    fcn.0041d80c();\n    if (iVar1 == 1) {\n        *(in_EAX + 0xe) = 0;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0041fd60": {
        "rules": [
            "encode data using XOR",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.0041fd60(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint8_t *in_EAX;\n    \n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 << 5 & 0xff00 | (uVar1 << 5 | uVar1 >> 0xb) ^ *in_EAX;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "0044fe70": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0044fe70(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x84) != 0) {\n        cVar1 = fcn.004363bc();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.004360b8();\n            iVar3 = sub.user32.dll_IsWindowVisible(uVar2);\n            if (iVar3 != 0) {\n                uVar2 = fcn.004360b8(0);\n                sub.user32.dll_ShowWindow(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00403020": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403020(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 176
    },
    "0040307c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040307c(char param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    \n    do {\n        uVar1 = *param_2;\n        param_2 = param_2 + 1;\n        *in_EAX = *in_EAX | uVar1;\n        in_EAX = in_EAX + 1;\n        param_1 = param_1 + -1;\n    } while (param_1 != '\\0');\n    return;\n}\n",
        "token_count": 122
    },
    "00403494": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403494(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = 0;\n    if (param_2 != 0) {\n        in_EAX = *(in_EAX + -0x2c);\n        uVar1 = *in_EAX;\n        if (uVar1 == *(param_2 + -4)) {\n            do {\n                uVar2 = 0;\n                if (((in_EAX[uVar1] ^ *(uVar1 + param_2 + -1)) & 0xdf) != 0) goto code_r0x004034b7;\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            uVar2 = 1;\n        }\n    }\ncode_r0x004034b7:\n    return in_EAX & 0xffffff00 | uVar2;\n}\n",
        "token_count": 225
    },
    "00403594": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403594(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        in_EAX = *(iVar1 + -0x24);\n        if (*(iVar1 + -0x40) != 0) {\n            fcn.00404dc8();\n        }\n    } while (in_EAX != NULL);\n    return;\n}\n",
        "token_count": 95
    },
    "004036e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402858)\n\nvoid __fastcall fcn.004036e0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        while (*in_EAX != param_2) {\n            in_EAX = *(*in_EAX + -0x24);\n            if (in_EAX == NULL) {\n                if (*0x47d008 != NULL) {\n                    (**0x47d008)();\n                }\n                fcn.0040282c();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00403744": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403744(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == param_2) {\n            return 0x1;\n        }\n        piVar1 = *(in_EAX + -0x24);\n        if (piVar1 == NULL) break;\n        in_EAX = *piVar1;\n    }\n    return piVar1;\n}\n",
        "token_count": 116
    },
    "00403f30": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403f30(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0x47d63c;\n    puStack20 = &stack0xfffffffc;\n    if (*0x47d638 != 0) {\n        iVar1 = *(*0x47d638 + 4);\n        uStack24 = 0x403f76;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x47d63c = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00403f90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403f90(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x47d638 != NULL) {\n        iVar1 = **0x47d638;\n        iVar4 = 0;\n        iVar2 = (*0x47d638)[1];\n        uStack24 = 0x403fd6;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar1) {\n            do {\n                pcVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0x47d63c = iVar4;\n                if (pcVar3 != NULL) {\n                    (*pcVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "004048fc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004048fc(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    bool bVar7;\n    \n    if (in_EAX != NULL) {\n        if (param_2 == NULL) {\n            return 0;\n        }\n        iVar3 = *(in_EAX + -4) + -1;\n        if (-1 < iVar3) {\n            iVar1 = *(param_2 + -4) - iVar3;\n            bVar7 = iVar1 == 0;\n            pcVar5 = param_2;\n            if (!bVar7 && iVar3 <= *(param_2 + -4)) {\ncode_r0x0040491c:\n                do {\n                    if (iVar1 != 0) {\n                        iVar1 = iVar1 + -1;\n                        pcVar4 = pcVar5 + 1;\n                        bVar7 = *in_EAX == *pcVar5;\n                        pcVar5 = pcVar4;\n                        if (!bVar7) goto code_r0x0040491c;\n                    }\n                    iVar2 = iVar3;\n                    pcVar4 = in_EAX + 1;\n                    pcVar6 = pcVar5;\n                    if (!bVar7) goto code_r0x00404930;\n                    do {\n                        if (iVar2 == 0) break;\n                        bVar7 = *pcVar4 == *pcVar6;\n                        iVar2 = iVar2 + -1;\n                        pcVar4 = pcVar4 + 1;\n                        pcVar6 = pcVar6 + 1;\n                    } while (bVar7);\n                } while (!bVar7);\n                in_EAX = pcVar5 + -param_2;\n                goto code_r0x00404940;\n            }\n        }\ncode_r0x00404930:\n        in_EAX = NULL;\n    }\ncode_r0x00404940:\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 461
    },
    "004049a8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004049a8(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    \n    iVar3 = 0;\n    if (param_2 != NULL) {\n        iVar3 = *(param_2 + -4);\n    }\n    iVar2 = fcn.00402f98();\n    if ((*(iVar2 + 4) == -0x284e) || (cVar1 = fcn.00402f00(iVar3, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar5 = *(iVar2 + 0x14) + *(iVar2 + 0xc);\n            iVar4 = *(iVar2 + 8) - *(iVar2 + 0xc);\n            if (iVar3 < iVar4) break;\n            *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar4;\n            iVar3 = iVar3 - iVar4;\n            for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar5 = *param_2;\n                param_2 = param_2 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            iVar4 = (**(iVar2 + 0x1c))();\n            if (iVar4 != 0) {\n                fcn.004028b0();\n                return iVar2;\n            }\n        }\n        *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar3;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *param_2;\n            param_2 = param_2 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 428
    },
    "00404ee8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402858)\n// WARNING: Removing unreachable block (ram,0x00404e6a)\n// WARNING: Removing unreachable block (ram,0x00404e50)\n\nvoid __fastcall fcn.00404ee8(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if (cVar1 == '\\n') {\n        fcn.00404308();\n    }\n    else if (cVar1 == '\\v') {\n        fcn.004049f8();\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00405368();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00404dfc();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00404dc8();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00406130();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x47d008 != NULL) {\n                (**0x47d008)();\n            }\n            fcn.0040282c();\n            return;\n        }\n        do {\n            fcn.00405a78();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    return;\n}\n",
        "token_count": 544
    },
    "00405268": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405268(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        *(iVar1 * 4 + 0x47d65c) = fcn.00405248;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0x2b);\n    *0x47d65c = 0x405250;\n    return;\n}\n",
        "token_count": 95
    },
    "004057bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402858)\n\nvoid __fastcall fcn.004057bc(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00404308();\n            }\n            else {\n                fcn.0040432c();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.004049f8();\n            }\n            else {\n                fcn.00404a10();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00405368();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00404dfc();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00404dc8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00406130();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x47d008 != NULL) {\n                    (**0x47d008)();\n                }\n                fcn.0040282c();\n                return;\n            }\n            do {\n                fcn.00405a78();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "00405b60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405b60(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = *0x46f024;\n    if (*0x46f024 != NULL) {\n        do {\n            if (((in_EAX == piVar1[1]) || (in_EAX == piVar1[2])) || (in_EAX == piVar1[3])) {\n                fcn.00405b18();\n                return;\n            }\n            piVar1 = *piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00405b88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405b88(void)\n\n{\n    char *in_EAX;\n    \n    while ((*in_EAX != '\\0' && (*in_EAX != '\\\\'))) {\n        in_EAX = sub.user32.dll_CharNextA();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00405ff4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405ff4(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if ((*0x46f028 != NULL) && ((*0x46f028)[1] == in_EAX)) {\n        *0x46f028 = **0x46f028;\n        fcn.00402748();\n        return;\n    }\n    ppiVar2 = *0x46f028;\n    if (*0x46f028 != NULL) {\n        do {\n            ppiVar1 = *ppiVar2;\n            if ((ppiVar1 != NULL) && (ppiVar1[1] == in_EAX)) {\n                *ppiVar2 = *ppiVar1;\n                fcn.00402748();\n                return;\n            }\n            ppiVar2 = *ppiVar2;\n        } while (ppiVar2 != NULL);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "004060c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004060c0(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x406124;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.00406054();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0x46f024;\n    if (var_4h == *0x46f024) {\n        *0x46f024 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "004083f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004083f4(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    iVar2 = fcn.004045c0();\n    fcn.00404944();\n    puVar3 = *param_2;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        uVar1 = *in_EAX;\n        if ((0x60 < uVar1) && (uVar1 < 0x7b)) {\n            uVar1 = uVar1 - 0x20;\n        }\n        *puVar3 = uVar1;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "004085dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004085dc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004045c0();\n    for (iVar2 = 1; (iVar2 <= iVar1 && (*(in_EAX + -1 + iVar2) < 0x21)); iVar2 = iVar2 + 1) {\n    }\n    if (iVar1 < iVar2) {\n        fcn.00404308();\n    }\n    else {\n        for (; *(in_EAX + -1 + iVar1) < 0x21; iVar1 = iVar1 + -1) {\n        }\n        fcn.00404818(param_2);\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "0040862c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040862c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004045c0();\n    for (iVar2 = 1; (iVar2 <= iVar1 && (*(in_EAX + -1 + iVar2) < 0x21)); iVar2 = iVar2 + 1) {\n    }\n    fcn.00404818(param_2);\n    return;\n}\n",
        "token_count": 117
    },
    "00408660": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408660(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = fcn.004045c0(); (0 < iVar1 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + -1) {\n    }\n    fcn.00404818(param_2);\n    return;\n}\n",
        "token_count": 101
    },
    "00408cd0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408cd0(uint param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar6 = 0xffffffff;\n    uVar4 = 0;\n    pcVar7 = param_2;\n    do {\n        if (uVar6 == 0) break;\n        uVar6 = uVar6 - 1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    uVar6 = ~uVar6;\n    bVar8 = true;\ncode_r0x00408ce5:\n    do {\n        if (uVar6 != 0) {\n            uVar6 = uVar6 - 1;\n            pcVar1 = param_2 + 1;\n            pcVar7 = in_EAX + 1;\n            bVar8 = *in_EAX == *param_2;\n            in_EAX = pcVar7;\n            param_2 = pcVar1;\n            if (bVar8) goto code_r0x00408ce5;\n        }\n        if (bVar8) {\n            return;\n        }\n        uVar3 = in_EAX[-1];\n        uVar5 = uVar4 & 0xffffff00 | uVar3;\n        if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n            uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n        }\n        uVar3 = param_2[-1];\n        uVar4 = uVar3;\n        if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n            uVar4 = uVar3 - 0x20;\n        }\n        uVar4 = uVar5 - uVar4;\n        bVar8 = uVar4 == 0;\n        if (!bVar8) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 499
    },
    "00408d10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408d10(int32_t param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = 0;\n    iVar6 = param_1;\n    pcVar7 = param_2;\n    if (param_1 != 0) {\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        param_1 = param_1 - iVar6;\n        bVar8 = true;\ncode_r0x00408d29:\n        do {\n            if (param_1 != 0) {\n                param_1 = param_1 + -1;\n                pcVar1 = param_2 + 1;\n                pcVar7 = in_EAX + 1;\n                bVar8 = *in_EAX == *param_2;\n                in_EAX = pcVar7;\n                param_2 = pcVar1;\n                if (bVar8) goto code_r0x00408d29;\n            }\n            if (bVar8) {\n                return;\n            }\n            uVar3 = in_EAX[-1];\n            uVar5 = uVar4 & 0xffffff00 | uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n            }\n            uVar3 = param_2[-1];\n            uVar4 = uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar4 = uVar3 - 0x20;\n            }\n            uVar4 = uVar5 - uVar4;\n            bVar8 = uVar4 == 0;\n        } while (bVar8);\n    }\n    return;\n}\n",
        "token_count": 503
    },
    "00408d74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00408d74(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    if ((in_EAX != NULL) && (param_2 != NULL)) {\n        uVar2 = 0xffffffff;\n        pcVar7 = param_2;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        if (uVar3 != 0) {\n            uVar4 = 0xffffffff;\n            pcVar7 = in_EAX;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar5 = ~uVar4 - uVar3;\n            bVar9 = iVar5 == 0;\n            if (uVar3 <= ~uVar4 && !bVar9) {\n                do {\n                    pcVar7 = param_2 + 1;\n                    pcVar8 = in_EAX;\n                    do {\n                        in_EAX = pcVar8;\n                        if (iVar5 == 0) break;\n                        iVar5 = iVar5 + -1;\n                        in_EAX = pcVar8 + 1;\n                        bVar9 = *param_2 == *pcVar8;\n                        pcVar8 = in_EAX;\n                    } while (!bVar9);\n                    iVar6 = ~uVar2 - 2;\n                    pcVar8 = in_EAX;\n                    if (!bVar9) {\n                        return NULL;\n                    }\n                    do {\n                        if (iVar6 == 0) break;\n                        bVar9 = *pcVar7 == *pcVar8;\n                        iVar6 = iVar6 + -1;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar7 = pcVar7 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        return in_EAX + -1;\n                    }\n                } while( true );\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 579
    },
    "0040bda4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040bda4(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.0040bdcc();\n    iVar3 = iVar2;\n    if (param_2 != '\\0') {\n        while (iVar1 = iVar3,  iVar1 != 0) {\n            iVar3 = fcn.0040bdcc();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 123
    },
    "0040bdcc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040bdcc(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00408d54();\n    while ((iVar2 != 0 && (cVar1 = fcn.0040ba0c(),  cVar1 != '\\0'))) {\n        iVar2 = fcn.00408d54();\n    }\n    return iVar2;\n}\n",
        "token_count": 92
    },
    "0040c498": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040c498(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    cVar1 = '\\x01';\n    for (puVar2 = *0x46f2ec; (cVar1 != '\\0' && (puVar2 != NULL)); puVar2 = *puVar2) {\n        cVar1 = (*puVar2[1])();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "0040c614": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c614(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    fcn.0040c530();\n    uVar1 = fcn.0040c5fc();\n    puVar3 = *(in_EAX + 4 + (uVar1 & 0xff) * 4);\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    for (; (puVar3 != NULL && (iVar2 != puVar3[2])); puVar3 = *puVar3) {\n    }\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040c788();\n        if (puVar3 == NULL) {\n            puVar3 = fcn.00408370();\n        }\n        puVar3[2] = iVar2;\n        *puVar3 = puVar3;\n        uVar4 = fcn.0040c548();\n        *puVar3 = uVar4;\n    }\n    *param_2 = puVar3;\n    return;\n}\n",
        "token_count": 262
    },
    "0040c75c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c75c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = param_2;\n    if (param_2 != 0) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = *(iVar3 + 4);\n        } while (*(iVar3 + 4) != 0);\n        *(iVar3 + 4) = param_2;\n        uVar2 = fcn.0040c548();\n        *(iVar3 + 4) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00410488": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410488(uint arg_8h)\n\n{\n    uint in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint unaff_EBX;\n    int32_t arg_10h;\n    \n    arg_10h = in_ECX + 1;\n    if (arg_10h != 0 && SCARRY4(in_ECX, 1) == arg_10h < 0) {\n        do {\n            unaff_EBX = *(in_EDX + in_ECX * 4);\n            in_ECX = in_ECX + -1;\n        } while (-1 < in_ECX);\n    }\n    fcn.004103b4(arg_8h, in_EAX, arg_10h, unaff_EBX);\n    return;\n}\n",
        "token_count": 176
    },
    "004105f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004105f4(int32_t arg_8h)\n\n{\n    uint in_EAX;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (-1 < arg_8h) {\n        do {\n            unaff_EBX = *(in_ECX + iVar1 * 4);\n            iVar1 = iVar1 + -1;\n        } while (-1 < iVar1);\n    }\n    fcn.004104ac(in_EAX, in_EDX, arg_8h + 1, unaff_EBX);\n    return;\n}\n",
        "token_count": 148
    },
    "00410678": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00410678(void)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    while ((in_EAX != NULL && (*in_EAX == '\\x11'))) {\n        iVar1 = iVar1 + 1;\n        in_EAX = fcn.0041065c();\n    }\n    return iVar1;\n}\n",
        "token_count": 85
    },
    "00411738": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00411738(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    \n    if (param_2 != 0) {\n        iVar2 = **(in_EAX + 0xb + *(in_EAX + 1));\n        uVar3 = *(iVar2 + 1);\n        puVar4 = iVar2 + 0xf + uVar3;\n        piVar1 = iVar2 + 7 + uVar3;\n        iVar2 = 0;\n        do {\n            uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            if (uVar3 == *(param_2 + -4)) {\n                while (((*((uVar3 - 1) + param_2) ^ puVar4[uVar3]) & 0xdf) == 0) {\n                    uVar3 = uVar3 - 1;\n                    if (uVar3 == 0) {\n                        return iVar2;\n                    }\n                }\n                uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + uVar3 + 1;\n        } while (iVar2 <= *piVar1);\n    }\n    return -1;\n}\n",
        "token_count": 321
    },
    "004117e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004117e8(uint param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar4;\n    uchar *puVar3;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if (in_EAX != 0) {\n        puVar3 = param_2;\n        if (param_2 != NULL) {\n            puVar3 = CONCAT11(*param_2, param_2[-4]) & 0xdfff;\n        }\n        while( true ) {\n            iVar1 = in_EAX + 2 + *(in_EAX + 1);\n            uVar6 = *(iVar1 + 10);\n            uVar7 = *(iVar1 + 0xb + uVar6);\n            if (uVar7 != 0) {\n                iVar2 = iVar1 + 0xd + uVar6;\n                do {\n                    puVar5 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffffdfff;\n                    if (puVar5 == puVar3) {\n                        uVar6 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffff00ff;\n                        while( true ) {\n                            uVar4 = param_2[uVar6 - 1] ^ *(iVar2 + 0x1a + uVar6);\n                            if ((uVar4 & 0xdf) != 0) break;\n                            uVar6 = uVar6 - 1;\n                            puVar3 = puVar3 & 0xffff0000 | CONCAT11(uVar4, puVar3);\n                            if (uVar6 == 0) {\n                                return;\n                            }\n                        }\n                        puVar3 = puVar3 & 0xffff0000 | CONCAT11(*param_2, puVar3) & 0xffffdfff;\n                        puVar5 = uVar6 & 0xffffff00 | *(iVar2 + 0x1a);\n                    }\n                    uVar6 = puVar5 & 0xffff00ff;\n                    uVar7 = uVar7 - 1;\n                    iVar2 = iVar2 + 0x1b + uVar6;\n                } while (uVar7 != 0);\n            }\n            if (*(iVar1 + 4) == NULL) break;\n            in_EAX = **(iVar1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "00413f20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00413f20(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            uVar2 = fcn.004152c8();\n            cVar1 = fcn.00403494();\n            if (cVar1 != '\\0') goto code_r0x00413f77;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = (**(**(in_EAX + 8) + 0x54))();\n    if (iVar3 < 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(**(in_EAX + 8) + 0x18))();\n    }\ncode_r0x00413f77:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 239
    },
    "00413f80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.00413f80(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uVar1 = *(in_EAX + 0xc);\n    iVar2 = *(uVar1 + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004152c8();\n            uVar1 = fcn.00403744();\n            if (uVar1 != '\\0') goto code_r0x00413fba;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00413fba:\n    return CONCAT44(uStack20, uVar1 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 248
    },
    "00414148": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414148(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x20) != param_2) {\n        *(in_EAX + 0x20) = param_2;\n        iVar3 = *(*(in_EAX + 4) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar2 = fcn.004152c8();\n                uVar1 = fcn.00413f80();\n                *(iVar2 + 0x10) = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00414264": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00414264(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004152c8();\n            uVar2 = fcn.00413df4(param_2);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 143
    },
    "00414468": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.00414468(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uVar1 = *(in_EAX + 4);\n    iVar2 = *(uVar1 + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004152c8();\n            uVar1 = fcn.0041406c();\n            if (uVar1 != '\\0') goto code_r0x004144a0;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x004144a0:\n    return CONCAT44(uStack20, uVar1 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 247
    },
    "004144ac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004144ac(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004152c8();\n            iVar1 = fcn.00415324();\n            if (-1 < iVar1) {\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00413e64();\n    fcn.0041516c();\n    return;\n}\n",
        "token_count": 144
    },
    "00414808": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00414808(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = 0x414818;\n    fcn.00414444();\n    uStack16 = 0x41486d;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = fcn.00414468();\n        if (cVar1 != '\\0') break;\n        fcn.00414450();\n        if (in_EAX == *0x412b18) break;\n        in_EAX = fcn.004034bc();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x414874;\n    uStack16 = 0x41486c;\n    fcn.004144fc();\n    return;\n}\n",
        "token_count": 229
    },
    "00414dc4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00414dc4(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.00406794();\n    iVar1 = *(*(iVar1 + 8) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.004152c8();\n            (**(*piVar2 + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00415324": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00415324(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 126
    },
    "004154c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004154c4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.00415254();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.00415488();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00402e14();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.004151b8();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 244
    },
    "00415df0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415df0(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    fcn.00406130();\n    if (in_EAX != NULL) {\n        iVar2 = fcn.0040372c();\n        if (iVar2 == 0) {\n            cVar1 = fcn.004036bc();\n            if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 0x10) != 0)) {\n                fcn.00406130();\n                (**(*in_EAX + 0x28))();\n            }\n        }\n        else {\n            cVar1 = fcn.004036bc();\n            if ((cVar1 == '\\0') || ((*(in_EAX + 7) & 0x10) != 0)) {\n                fcn.00406130();\n                fcn.00415df0();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "00416174": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00416174(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x41618d;\n    cVar1 = fcn.004036bc();\n    if (cVar1 == '\\0') {\n        puStack24 = 0x416203;\n        fcn.00415b94();\n        return;\n    }\n    puStack24 = 0x416199;\n    (**(*in_EAX + 0x20))();\n    uStack28 = 0x4161f2;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00416220();\n    iVar2 = fcn.004162c4();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar3 = fcn.004162cc();\n            piVar4 = fcn.00416168(uVar3);\n            (**(*piVar4 + 8))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x416203;\n    uStack28 = 0x4161f1;\n    (**(*in_EAX + 0x24))();\n    return;\n}\n",
        "token_count": 359
    },
    "004190b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004190b0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar1 = *(*(in_EAX + 0x30) + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.004152c8();\n                fcn.00403530();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00403530();\n        *(in_EAX + 0x30) = 0;\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0041b5f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b5f4(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = *(*(*(arg_8h + -4) + 0x30) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            uVar2 = fcn.004152c8();\n            cVar1 = fcn.00408510();\n            if (cVar1 != '\\0') {\n                return uVar2;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 160
    },
    "0041bf20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bf20(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41bfa6;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00411638();\n    fcn.0041d3c0();\n    uVar1 = 0;\n    do {\n        bVar2 = uVar1 < 0x1f;\n        if (uVar1 < 0x20) {\n            bVar2 = (in_EAX >> (uVar1 & 0x1f) & 1) != 0;\n        }\n        if (bVar2) {\n            fcn.00411644();\n            fcn.0041d1d8();\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 != 0x20);\n    fcn.0041d1d8();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41bfad;\n    uStack28 = 0x41bfa5;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 322
    },
    "0041c424": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041c424(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (param_2 == in_EAX) {\n                return 1;\n            }\n            in_EAX = *(in_EAX + 4);\n        } while (in_EAX != 0);\n    }\n    return 0;\n}\n",
        "token_count": 98
    },
    "0041dd0c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041dd0c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x1c) & 8) == 0) {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 8;\n        if ((*(in_EAX + 0x10) != 0) && (iVar1 = *(*(in_EAX + 0x10) + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.004152c8();\n                fcn.0041dd0c();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "0041e49c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e49c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((arg_8h != in_EAX[0x10]) || (arg_ch != in_EAX[0x11])) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004152c8(arg_8h, arg_ch);\n                (**(*piVar1 + 0x10))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x10] = arg_8h;\n        in_EAX[0x11] = arg_ch;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0041e518": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e518(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x50) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.004152c8();\n            if (param_2 == iVar1) {\n                *(param_2 + 0x10) = 0;\n                fcn.004151b8();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0041ea54": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041ea54(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x41ea64;\n    iVar1 = fcn.0041595c();\n    uStack24 = 0x41eaa9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8);\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004152c8();\n            fcn.00403530();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41eab0;\n    uStack24 = 0x41eaa8;\n    fcn.004159c0();\n    return;\n}\n",
        "token_count": 231
    },
    "004223c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004223c0(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = 0xff;\n    do {\n        puVar1 = in_EAX + iVar3 * 4;\n        puVar2 = in_EAX + iVar3 * 3;\n        puVar1[2] = puVar2[2];\n        puVar1[1] = puVar2[1];\n        *puVar1 = *puVar2;\n        puVar1[3] = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *(in_EAX + 3) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "00427c70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00427c70(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00426824();\n            (**(**(iVar1 + 4) + 0x28))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0042cd38": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0042cd38(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    bool bVar2;\n    \n    *param_1 = 0;\n    uVar1 = 0;\n    while( true ) {\n        if (*(in_EAX + 8) <= *param_1) {\n            return uVar1;\n        }\n        uVar1 = fcn.004152c8();\n        bVar2 = param_2 == *(uVar1 + 4);\n        uVar1 = uVar1 & 0xffffff00 | bVar2;\n        if (bVar2) break;\n        *param_1 = *param_1 + 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 180
    },
    "0042cd6c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042cd6c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.004360b8();\n    iVar2 = iVar3;\n    while (iVar1 = iVar3,  iVar1 != 0) {\n        iVar3 = sub.user32.dll_GetParent();\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 105
    },
    "0042ce24": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042ce24(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStackY20;\n    \n    iVar5 = 0;\n    if (*(in_EAX + 8) != 0) {\n        if (*(in_EAX + 8) == 1) {\n            iStackY20 = 0x42ce3f;\n            piVar2 = fcn.004152c8();\n            iVar5 = *piVar2;\n        }\n        else {\n            iStackY20 = sub.user32.dll_GetDesktopWindow(param_1);\n            iVar3 = sub.user32.dll_GetTopWindow();\n            while ((iVar4 = iVar3,  iVar5 == 0 && (iVar4 != 0))) {\n                cVar1 = fcn.0042cd38();\n                if (cVar1 == '\\0') {\n                    iVar3 = sub.user32.dll_GetWindow();\n                    iStackY20 = iVar4;\n                }\n                else {\n                    iVar5 = **(*(in_EAX + 4) + iStackY20 * 4);\n                    iVar3 = iVar4;\n                }\n            }\n        }\n    }\n    return CONCAT44(iStackY20, iVar5);\n}\n",
        "token_count": 301
    },
    "0042d86c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0042d86c(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    while ((iVar2 != 0 && (cVar1 = fcn.0042d824(),  cVar1 == '\\0'))) {\n        iVar2 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 108
    },
    "0042e320": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0042e320(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    iVar2 = 0;\n    while ((iVar1 != 0 && (iVar2 = fcn.0042c9bc(),  iVar2 == 0))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 114
    },
    "0042f618": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042f618(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            cVar1 = fcn.004036bc();\n            if (cVar1 != '\\0') {\n                fcn.0044a7d0();\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00432cec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00432cec(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    for (; (param_2 != 0 && (in_EAX != param_2)); param_2 = *(param_2 + 0x30)) {\n    }\n    return in_EAX & 0xffffff00 | param_2 != 0;\n}\n",
        "token_count": 90
    },
    "00433634": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00433634(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00415324();\n    iVar2 = *(*(in_EAX + 0x19c) + 8) + -1;\n    if (iVar1 + 1 <= iVar2) {\n        iVar1 = (iVar2 - (iVar1 + 1)) + 1;\n        do {\n            iVar2 = fcn.004152c8();\n            if (*(iVar2 + 0x180) != 0) {\n                return *(iVar2 + 0x180);\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 175
    },
    "00437d24": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00437d24(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == 0) {\n            return 0;\n        }\n        cVar1 = fcn.00437db8();\n        if (cVar1 != '\\0') break;\n        in_EAX = *(in_EAX + 0xc);\n    }\n    return in_EAX;\n}\n",
        "token_count": 101
    },
    "00437d88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00437d88(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 94
    },
    "00437d9c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00437d9c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.004383b0();\n    while (iVar1 != 0) {\n        iVar1 = fcn.00438388();\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 88
    },
    "00437db8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar fcn.00437db8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    if (*(in_EAX + 4) == 0) {\n        for (iVar2 = fcn.004383b0(); iVar2 != 0; iVar2 = *(iVar2 + 0xc)) {\n            cVar1 = fcn.00437db8();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(in_EAX + 4) + 0x57);\n    }\n    return uVar3;\n}\n",
        "token_count": 162
    },
    "00438108": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00438108(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x14);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.00438388();\n        if (iVar2 != 0) break;\n        iVar1 = *(iVar1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 120
    },
    "004382dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004382dc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        iVar1 = *(iVar1 + 0xc);\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 68
    },
    "004382ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004382ec(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.004382d8();\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = fcn.00437d88();\n        if (0 < iVar2) {\n            fcn.004382dc();\n            fcn.004382ec();\n        }\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00438328": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00438328(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = fcn.004382b0();\n        iVar3 = fcn.00437dec();\n        if (iVar2 < iVar3) {\ncode_r0x0043835c:\n            fcn.00437f98();\n            fcn.00438664(0x439e38, *(in_EAX + 0x1c));\n        }\n        else {\n            iVar2 = fcn.004382b0();\n            iVar3 = fcn.00437e34();\n            if (iVar3 < iVar2) goto code_r0x0043835c;\n        }\n        fcn.00438328();\n        iVar1 = *(iVar1 + 0xc);\n    } while( true );\n}\n",
        "token_count": 224
    },
    "00438394": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00438394(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 0x18);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        cVar1 = fcn.00437db8();\n        if (cVar1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x18);\n    }\n    return iVar2;\n}\n",
        "token_count": 118
    },
    "00438628": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438628(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    (**(arg_8h + 8))();\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.00438628(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.00438628(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0043955c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043955c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0043955c(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0043955c(arg_8h);\n    }\n    fcn.00403530();\n    return;\n}\n",
        "token_count": 100
    },
    "00439c38": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439c38(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        iVar2 = fcn.00438388();\n        if ((iVar2 == 0) && (in_EAX != *(*(arg_8h + -4) + 100))) {\n            cVar1 = fcn.00437db8();\n            if (cVar1 != '\\0') {\n                if (*(*(arg_8h + -4) + 100) == *(in_EAX + 0x14)) {\n                    fcn.004382d8();\n                }\n                else {\n                    fcn.004382b0();\n                    fcn.004382d8();\n                }\n            }\n        }\n        iVar2 = arg_8h;\n        fcn.004383b0();\n        fcn.00439c38(iVar2);\n        fcn.00438388();\n        fcn.00439c38(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0043a090": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a090(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    cVar1 = fcn.00437d40();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x24) = 0;\n    }\n    else {\n        iVar2 = fcn.00437dec();\n        *(in_EAX + 0x24) = *(in_EAX + 0x20) - iVar2;\n    }\n    if (*(in_EAX + 0x14) != 0) {\n        cVar1 = fcn.00437db8();\n        if (cVar1 == '\\0') {\n            fcn.0043a090(arg_8h);\n        }\n    }\n    iVar2 = fcn.00438394();\n    if (iVar2 != 0) {\n        fcn.00438394();\n        fcn.004382ec();\n    }\n    fcn.00438664(0x439e38, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 249
    },
    "0043bc84": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043bc84(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00404704(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004036e0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x4c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.0040435c();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0043bf84": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043bf84(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != in_EAX[0x20]) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004036e0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x6c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x20] = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0043bfe0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043bfe0(uint param_1, int16_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x21)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.004036e0();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x70))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x21) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0043c044": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c044(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x86)) {\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar1 = fcn.004036e0();\n                if (iVar1 != 0) {\n                    piVar2 = fcn.004152c8();\n                    (**(*piVar2 + 0x74))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x86) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0043c1c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043c1c0(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iStack20 = -1;\n    iVar3 = (**(*in_EAX + 0x14))();\n    iVar1 = iStack20;\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            iVar2 = (**(*in_EAX + 0x18))();\n            iVar1 = iVar4;\n            if (param_2 == iVar2) break;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n            iVar1 = iStack20;\n        } while (iVar3 != 0);\n    }\n    iStack20 = iVar1;\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 222
    },
    "0043d068": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d068(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 0x4c) != 0) && (iVar2 = *(*(in_EAX + 0x4c) + 8),  -1 < iVar2 + -1)) {\n        do {\n            iVar1 = fcn.004152c8();\n            if (param_2 == iVar1) {\n                *(param_2 + 4) = 0;\n                fcn.004151b8();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0043f58c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f58c(uint8_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00440f24();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (iVar3 < param_2) {\n                iVar2 = fcn.00440f34();\n                if (param_1 < *(iVar2 + 0x3f)) {\n                    fcn.0043e6a0();\n                }\n            }\n            else {\n                iVar2 = fcn.00440f34();\n                if (*(iVar2 + 0x3f) <= param_1 && param_1 != *(iVar2 + 0x3f)) {\n                    iVar2 = fcn.00440f34();\n                    *(iVar2 + 0x3f) = param_1;\n                }\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00440fec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440fec(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00440f24();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00440f34();\n            (*arg_8h)();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0044144c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044144c(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.00440f24();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.00440f34();\n            (**(*piVar2 + 0x40))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "004414e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004414e0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        in_EAX = *(iVar1 + 100);\n    } while (in_EAX != 0);\n    return *(iVar1 + 0x70);\n}\n",
        "token_count": 74
    },
    "00442510": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442510(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    for (; (0 < param_2 && (in_EAX != 0)); in_EAX = *(in_EAX + 100)) {\n        param_2 = param_2 + -1;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00443824": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443824(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            piVar1 = fcn.004152c8();\n            if (param_2 == *piVar1) {\n                puVar2 = fcn.004152c8();\n                *puVar2 = 0;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "004463c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004463c4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        do {\n            iVar1 = sub.user32.dll_IsWindow(in_EAX[1]);\n            if (iVar1 != 0) {\n                sub.user32.dll_EnableWindow(in_EAX[1], 0xffffffff);\n            }\n            in_EAX = *in_EAX;\n            fcn.00402748();\n        } while (in_EAX != NULL);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "004466f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004466f4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    do {\n        iVar2 = in_EAX;\n        in_EAX = *(iVar2 + 0x30);\n    } while (in_EAX != 0);\n    cVar1 = fcn.004036bc();\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 108
    },
    "004494ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.004494ec(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack28;\n    \n    uStack28 = fcn.004360b8(2, 0);\n    iVar1 = (***0x47bfcc)();\n    iVar2 = fcn.0044ceb4();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0044cea0();\n            if (iVar1 == *(iVar3 + 4)) {\n                uStack28 = fcn.0044cea0();\n                goto code_r0x004495ca;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = fcn.0044ceb4();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004152c8();\n            fcn.00403530();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    (**(**(*0x47dc0c + 0x58) + 8))();\n    (***0x47c034)(0, 0, fcn.004494bc, *(*0x47dc0c + 0x58));\n    iVar2 = fcn.0044ceb4();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0044cea0();\n            if (iVar1 == *(iVar3 + 4)) {\n                uStack28 = fcn.0044cea0();\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\ncode_r0x004495ca:\n    return CONCAT44(uStack28, uStack28);\n}\n",
        "token_count": 404
    },
    "0044a8c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a8c8(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        do {\n            iVar3 = param_2;\n            param_2 = *(iVar3 + 0x30);\n            if (param_2 == 0) break;\n            cVar1 = fcn.004036bc();\n        } while (cVar1 == '\\0');\n        if ((iVar3 != 0) && (param_1 != iVar3)) {\n            uVar2 = fcn.004360b8();\n            sub.user32.dll_SendMessageA(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "0044c4d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c4d4(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(arg_8h + -4) + 0x2e8);\n    if ((iVar2 != 0) && (iVar2 = *(iVar2 + 8),  -1 < iVar2 + -1)) {\n        do {\n            fcn.004152c8();\n            cVar1 = fcn.0043b970();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 161
    },
    "0044ca78": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ca78(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x44cb3e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + -0x10))();\n    if (**(param_2 + 8) == 0xc) {\n        fcn.0042fa0c();\n        fcn.004043f8();\n        uVar1 = fcn.004045c0();\n        fcn.004047b8(uVar1);\n        fcn.0042fa1c();\n        iVar2 = fcn.004045c0();\n        if (0 < iVar2) {\n            iVar3 = 1;\n            do {\n                if ((*(iVar3 + -1) == '\\n') || (*(iVar3 + -1) == '\\r')) {\n                    fcn.00404944();\n                    break;\n                }\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.0042fac8();\n    }\n    else if (**(param_2 + 8) == 0xb00b) {\n        fcn.00448a68();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x44cb45;\n    uStack24 = 0x44cb3d;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 410
    },
    "0044d050": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044d050(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    puVar1 = *(in_EAX + 0x5c);\n    while (puVar1 != NULL) {\n        iVar2 = puVar1[1];\n        if ((((-0x12 < iVar2) && (iVar2 < -0xb)) || (iVar2 == -0x15)) || (0 < iVar2)) {\n            sub.user32.dll_DestroyCursor();\n        }\n        puVar1 = *puVar1;\n        fcn.00402748();\n    }\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    if (iVar2 != *(in_EAX + 0x60)) {\n        sub.user32.dll_DestroyCursor(*(in_EAX + 0x60));\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0044f878": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044f878(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar2 = fcn.0044cf00();\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar3 = fcn.0044ceec();\n            cVar1 = fcn.004363bc();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.004360b8();\n                iVar5 = sub.user32.dll_IsWindowVisible(uVar4);\n                if (iVar5 != 0) {\n                    uVar4 = fcn.004360b8();\n                    iVar5 = sub.user32.dll_IsWindowEnabled(uVar4);\n                    if (iVar5 != 0) {\n                        (**(*piVar3 + 0xd8))();\n                    }\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0044fa7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044fa7c(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    iVar1 = fcn.0044cee4();\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.0044ced0();\n            fcn.00430c4c(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00453564": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453564(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x45365c;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x45358c;\n    piVar1 = fcn.00403500();\n    puStack48 = 0x45359d;\n    fcn.00405a78();\n    uStack52 = 0x453621;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    uVar2 = (***0x47bf18)(param_2, 0);\n    iVar3 = (***0x47c1b4)();\n    if (iVar3 != 0) {\n        fcn.004044f8();\n        (**(*piVar1 + 0x38))();\n        fcn.00405ab4();\n        for (iVar3 = 0; *(iVar3 * 4) != 0; iVar3 = iVar3 + 1) {\n            fcn.004044f8();\n            (**(*piVar1 + 0x38))();\n        }\n    }\n    *in_FS_OFFSET = uVar2 & 0xffff;\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x453663;\n    uStack52 = 0x45364d;\n    fcn.0040432c();\n    uStack52 = 0x45365b;\n    fcn.00405a78();\n    return;\n}\n",
        "token_count": 471
    },
    "004560e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004560e0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((0 < param_1) && (param_2 != 0)) {\n        while (iVar1 = fcn.00455cf0(),  iVar1 < param_1) {\n            (**(*in_EAX + 0x70))(0, 1);\n        }\n        fcn.004028e0();\n        (**(*in_EAX + 0x78))();\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00456484": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00456484(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x4564e4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00404308();\n    while( true ) {\n        iVar1 = fcn.004045c0();\n        if (iVar1 != 0) break;\n        (**(*in_EAX + 0x74))(&fcn.00456484::var_4h);\n        fcn.004085dc();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4564eb;\n    uStack28 = 0x4564e3;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 235
    },
    "00456d18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00456d18(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uVar2 = 1;\n    uStack32 = 0x456e07;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00404308();\n    while( true ) {\n        while( true ) {\n            fcn.00456e30();\n            fcn.00404704();\n            if (!uVar2) break;\n            iVar1 = fcn.004045c0();\n            uVar2 = iVar1 == 0;\n            if (0 < iVar1) {\n                iVar1 = fcn.004045c0();\n                uVar2 = iVar1 == 1;\n                fcn.00404944();\n                (**(*in_EAX + 0x80))();\n            }\n        }\n        fcn.00404704();\n        if (uVar2) break;\n        fcn.004045c8();\n        iVar1 = fcn.004045c0();\n        uVar2 = iVar1 == 0;\n        if (uVar2) {\n            (**(*in_EAX + 0x80))();\n        }\n        else {\n            (**(*in_EAX + 0x80))();\n        }\n    }\n    fcn.00456e30();\n    (**(*in_EAX + 0x84))();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x456e0e;\n    uStack32 = 0x456e06;\n    fcn.0040432c();\n    return;\n}\n",
        "token_count": 416
    },
    "0045aa88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045aa88(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = fcn.0045b220();\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            iVar1 = fcn.0045b220();\n            if (param_2 != iVar1) {\n                fcn.0045b220();\n                uVar2 = fcn.0045aa88();\n                return uVar2;\n            }\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 169
    },
    "0045ae50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045ae50(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.0045b36c();\n    do {\n        if (iVar1 == 0) {\n            if (param_2 != iVar2) {\n                return 0;\n            }\n            return 1;\n        }\n        iVar2 = iVar2 + 1;\n        iVar1 = fcn.0045b35c();\n    } while (iVar2 <= param_2);\n    return 0;\n}\n",
        "token_count": 137
    },
    "0045b3a8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045b3a8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.0045b36c();\n    iVar2 = iVar3;\n    while (iVar1 = iVar3,  iVar1 != 0) {\n        iVar3 = fcn.0045b25c();\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 103
    },
    "0045b440": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045b440(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0045b298();\n    if (iVar1 == 0) {\n        iVar2 = fcn.0045b220();\n    }\n    else {\n        do {\n            iVar2 = iVar1;\n            iVar1 = fcn.0045b3a8();\n        } while (iVar1 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 110
    },
    "0045b470": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045b470(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (in_EAX == *(*(in_EAX + 4) + 0xc)) {\n        iVar3 = *(*(in_EAX + 4) + 0x10);\n    }\n    else {\n        cVar1 = fcn.0045b8a0();\n        if (cVar1 == '\\0') {\n            iVar3 = -1;\n            if (in_EAX != 0) {\n                do {\n                    iVar3 = iVar3 + 1;\n                    iVar2 = fcn.0045b440();\n                } while (iVar2 != 0);\n            }\n        }\n        else {\n            iVar3 = 0;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 192
    },
    "0045b548": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045b548(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = -1;\n    iVar1 = fcn.0045b36c();\n    while ((iVar1 != 0 && (iVar2 = iVar2 + 1,  param_2 != iVar1))) {\n        iVar1 = fcn.0045b35c();\n    }\n    if (iVar1 == 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 129
    },
    "0045b57c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045b57c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.0045b36c();\n    while (iVar1 != 0) {\n        iVar2 = iVar2 + 1;\n        iVar1 = fcn.0045b35c();\n    }\n    return iVar2;\n}\n",
        "token_count": 91
    },
    "0045c28c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.0045c28c(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        iVar2 = fcn.0045bccc();\n        uVar1 = 0 < iVar2;\n    }\n    else {\n        iVar2 = fcn.0045bccc();\n        iVar3 = fcn.0045bccc();\n        if (iVar2 == iVar3) {\n            uVar1 = 0;\n            var_4h = fcn.0045bccc();\n            if (-1 < var_4h + -1) {\n                do {\n                    uVar4 = fcn.0045c080();\n                    fcn.0045c080(uVar4);\n                    uVar1 = fcn.0045ba9c();\n                    uVar1 = uVar1 ^ 1;\n                    if (uVar1 != 0) {\n                        return uVar1;\n                    }\n                    var_4h = var_4h + -1;\n                } while (var_4h != 0);\n            }\n        }\n        else {\n            uVar1 = 1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 307
    },
    "0045d218": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d218(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045c064();\n    while (iVar1 != 0) {\n        fcn.0045b008();\n        iVar1 = fcn.0045b25c();\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0045f354": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045f354(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = in_EAX;\n    if (in_EAX != 0) {\n        do {\n            iVar1 = fcn.00415324();\n            in_EAX = iVar1 + 1;\n            if (in_EAX != 0) break;\n            in_EAX = fcn.0045b220();\n            uVar2 = in_EAX;\n        } while (in_EAX != 0);\n    }\n    return in_EAX & 0xffffff00 | uVar2 != 0;\n}\n",
        "token_count": 155
    },
    "0045f384": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045f384(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0045b25c();\n    while ((iVar2 != 0 && (cVar1 = fcn.0045f354(arg_8h),  cVar1 != '\\0'))) {\n        iVar2 = fcn.0045b25c();\n    }\n    if (iVar2 == 0) {\n        iVar2 = fcn.0045b298();\n        while ((iVar2 != 0 && (cVar1 = fcn.0045f354(arg_8h),  cVar1 != '\\0'))) {\n            iVar2 = fcn.0045b298();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 176
    },
    "0045f478": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f478(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    (**(*param_2 + 8))();\n    iVar1 = fcn.0045ebe0();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0045ebec();\n            fcn.0041516c();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    fcn.0045d2e0();\n    return;\n}\n",
        "token_count": 127
    },
    "0046438c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046438c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x4643b0;\n    fcn.004047a8();\n    puStack48 = 0x4643b8;\n    fcn.004047a8();\n    uStack52 = 0x46446e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar2 = 0;\n    puStack48 = &stack0xfffffffc;\n    do {\n        iVar1 = fcn.004162c4();\n        if (iVar1 <= iVar2) {\ncode_r0x00464446:\n            *in_FS_OFFSET = uStack56;\n            puStack48 = 0x464475;\n            uStack52 = 0x464460;\n            fcn.0040432c();\n            uStack52 = 0x46446d;\n            fcn.0040432c();\n            return;\n        }\n        iVar1 = fcn.00464370();\n        uVar3 = arg_8h == *(iVar1 + 0xc);\n        if (uVar3) {\n            fcn.00408430();\n            fcn.00408430(0);\n            fcn.00404704();\n            if (uVar3) {\n                fcn.00408430();\n                fcn.00408430(0);\n                fcn.00404704();\n                if (uVar3) {\n                    fcn.00464370();\n                    goto code_r0x00464446;\n                }\n            }\n        }\n        iVar2 = iVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 455
    },
    "00469320": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00469320(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uchar uVar2;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 5;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_18h = 0x46933f;\n    var_4h = param_2;\n    fcn.004047a8();\n    uVar2 = 1;\n    var_1ch = 0x46954d;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00469320::var_20h;\n    var_24h = 0x469355;\n    var_18h = &stack0xfffffffc;\n    fcn.00404308();\n    var_24h = 0x46935d;\n    fcn.00404308();\n    var_24h = &fcn.00469320::var_8h;\n    var_28h = 0x469369;\n    fcn.004045c0();\n    var_28h = 0x469378;\n    fcn.00404818();\n    var_28h = 0x469385;\n    fcn.00404704();\n    if (uVar2) {\n        var_28h = 0x469399;\n        iVar1 = (***0x47bdcc)();\n        if (0 < iVar1) {\n            var_2ch = &fcn.00469320::var_10h;\n            fcn.004045c0();\n            fcn.00404818();\n            fcn.004085dc();\n            fcn.0040435c();\n            var_28h = &fcn.00469320::var_18h;\n            fcn.00404818();\n            fcn.004085dc();\n            fcn.0040435c();\n        }\n    }\n    else {\n        var_28h = &fcn.00469320::var_1ch;\n        var_2ch = 0x469410;\n        fcn.004045c0();\n        var_2ch = 0x46941f;\n        fcn.00404818();\n        var_2ch = 0x46942c;\n        fcn.00404704();\n        if (uVar2) {\n            var_2ch = 0x469440;\n            iVar1 = (***0x47bdcc)();\n            if (0 < iVar1) {\n                var_2ch = &fcn.00469320::var_24h;\n                fcn.004045c0();\n                fcn.00404818();\n                fcn.004085dc();\n                fcn.0040435c();\n                var_28h = &fcn.00469320::var_2ch;\n                fcn.00404818();\n                fcn.004085dc();\n                fcn.0040435c();\n            }\n        }\n        else {\n            var_2ch = 0x4694b3;\n            fcn.0040435c();\n        }\n    }\ncode_r0x00469527:\n    do {\n        var_2ch = 0x46952f;\n        iVar1 = fcn.004045c0();\n        if (iVar1 < 2) {\ncode_r0x00469532:\n            *in_FS_OFFSET = var_28h;\n            var_20h = 0x469554;\n            var_24h = 0x46954c;\n            fcn.0040432c();\n            return;\n        }\n        if (**(in_EAX + 0x10) == '\\\"') {\n            var_2ch = 0x4694c5;\n            iVar1 = fcn.004045c0();\n            if (*(*(in_EAX + 0x10) + -1 + iVar1) == '\\\"') {\n                var_28h = in_EAX + 0x10;\n                fcn.004045c0();\n                fcn.00404818();\n                goto code_r0x00469527;\n            }\n        }\n        if (**(in_EAX + 0x10) != '\\'') goto code_r0x00469532;\n        var_2ch = 0x4694ff;\n        iVar1 = fcn.004045c0();\n        if (*(*(in_EAX + 0x10) + -1 + iVar1) != '\\'') goto code_r0x00469532;\n        var_28h = in_EAX + 0x10;\n        fcn.004045c0();\n        fcn.00404818();\n    } while( true );\n}\n",
        "token_count": 1143
    },
    "0046a110": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0046a110(void)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = 0;\n    pcVar2 = 0x470218;\n    do {\n        if (in_AL == *pcVar2) {\n            return iVar1;\n        }\n        iVar1 = iVar1 + 1;\n        pcVar2 = pcVar2 + 1;\n    } while (iVar1 != 0x41);\n    return 0;\n}\n",
        "token_count": 114
    },
    "004089f4": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nulong fcn.004089f4(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_ReadFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 88
    },
    "00408a20": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nulong fcn.00408a20(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_WriteFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 88
    },
    "00428694": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.00428694(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x4287f8);\n    if (iVar1 != 0) {\n        *0x47db14 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x428808);\n        *0x47db18 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42881c);\n        *0x47db0c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x428830);\n        *0x47db10 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x428848);\n        *0x47dae8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x428860);\n        if (*0x47dae8 == 0) {\n            *0x47dae8 = 0x406e18;\n        }\n        *0x47daec = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x428878);\n        if (*0x47daec == 0) {\n            *0x47daec = 0x4071a8;\n        }\n        *0x47daf0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x428890);\n        if (*0x47daf0 == 0) {\n            *0x47daf0 = 0x406f58;\n        }\n        *0x47daf4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4288a8);\n        if (*0x47daf4 == 0) {\n            *0x47daf4 = 0x406f48;\n        }\n        *0x47daf8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4288c0);\n        if (*0x47daf8 == 0) {\n            *0x47daf8 = 0x406f50;\n        }\n        *0x47dafc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4288d4);\n        if (*0x47dafc == 0) {\n            *0x47dafc = 0x407160;\n        }\n        *0x47db00 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4288e8);\n        if (*0x47db00 == 0) {\n            *0x47db00 = 0x407158;\n        }\n        *0x47db04 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x428900);\n        if (*0x47db04 == 0) {\n            *0x47db04 = 0x407168;\n        }\n    }\n    return;\n}\n",
        "token_count": 617
    },
    "00450578": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00450578(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x45059c);\n    if (iVar1 != 0) {\n        *0x46fadc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4505a8);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0040aa10": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040aa10(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (0 < uVar1) {\n        param_1 = uVar1 & 0xffffff00 | in_EAX & 0xff;\n    }\n    return CONCAT44(in_EAX, param_1);\n}\n",
        "token_count": 99
    },
    "00406794": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t fcn.00406794(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    if (*0x47d708 == '\\0') {\n        return *(*(in_FS_OFFSET + 0x2c) + *0x47d70c * 4);\n    }\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x47d70c);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.00406750();\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x47d70c);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return *0x47d71c;\n}\n",
        "token_count": 161
    },
    "00418538": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418538(uint lpType)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint lpName;\n    \n    iVar1 = sub.kernel32.dll_FindResourceA();\n    *(in_EAX + 0x10) = iVar1;\n    if (iVar1 == 0) {\n        fcn.004184c8(&stack0xfffffffc);\n    }\n    iVar1 = sub.kernel32.dll_LoadResource();\n    *(in_EAX + 0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.004184c8(&stack0xfffffffc);\n    }\n    uVar2 = sub.kernel32.dll_SizeofResource();\n    sub.kernel32.dll_LockResource(*(in_EAX + 0x14), uVar2);\n    fcn.00418298();\n    return;\n}\n",
        "token_count": 194
    },
    "0042a6cc": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.0042a6cc(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0xd) = 0;\n    *(in_EAX + 4) = 0;\n    sub.user32.dll_EnumWindows(fcn.0042a618);\n    return;\n}\n",
        "token_count": 83
    },
    "004465dc": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint32_t fcn.004465dc(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *0x446614;\n    iVar1 = sub.user32.dll_GetKeyState(0x10);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 1;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x11);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 0x20000000) != 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 187
    },
    "00451510": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.00451510(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x45156f;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    fcn.00404944();\n    uVar1 = fcn.004047b8();\n    uVar1 = fcn.004045c0(uVar1);\n    sub.kernel32.dll_GetTempPathA();\n    fcn.00404944();\n    fcn.004511dc();\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x451576;\n    fcn.00404308();\n    return;\n}\n",
        "token_count": 191
    },
    "0045157c": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0045157c(void)\n\n{\n    uint uVar1;\n    \n    fcn.00404944();\n    uVar1 = fcn.004047b8();\n    uVar1 = fcn.004047b8(0x4515bc, 0, uVar1);\n    sub.kernel32.dll_GetTempFileNameA(uVar1);\n    fcn.004047b8();\n    fcn.004044f8();\n    return;\n}\n",
        "token_count": 101
    }
}