{
    "05f011c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f011c0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.05f08ad0(arg_8h, arg_ch, arg_10h << 1);\n    return;\n}\n",
        "token_count": 60
    },
    "05f044e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f044e0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.05f07780(arg_8h, arg_ch, arg_10h << 1);\n    return;\n}\n",
        "token_count": 59
    },
    "05f01200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f01200(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = fcn.05f011c0(arg_8h, arg_ch, arg_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 103
    },
    "05f01250": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.05f01250(char *arg_8h)\n\n{\n    char cVar1;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    char *var_8h;\n    uint var_1h;\n    \n    if (*arg_8h == '\\0') {\n        var_ch = 0;\n    }\n    else {\n        var_8h = arg_8h;\n        do {\n            cVar1 = *var_8h;\n            var_8h = var_8h + 1;\n        } while (cVar1 != '\\0');\n        var_ch = var_8h - (arg_8h + 1);\n    }\n    return var_ch;\n}\n",
        "token_count": 180
    },
    "05f012a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f012a0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = fcn.05f08ad0(arg_8h, arg_ch, arg_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 104
    },
    "05f012d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f012d0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = fcn.05f07780(arg_8h, arg_ch, arg_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 103
    },
    "05f01570": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f01570(uint arg_8h, uint arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.05f07276(arg_ch);\n    if (var_8h == NULL) {\n        var_8h = \"unknown error\";\n    }\n    fcn.05f03370(var_8h);\n    return arg_8h;\n}\n",
        "token_count": 110
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl method.std::_System_error_category.virtual_8(uint arg_8h, uint arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.05f072a0(arg_ch);\n    if (var_8h == NULL) {\n        var_8h = \"unknown error\";\n    }\n    fcn.05f03370(var_8h);\n    return arg_8h;\n}\n",
        "token_count": 113
    },
    "05f01840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f01840(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = fcn.05f018e0(arg_8h, arg_ch, 0x7fffffff);\n    if (-1 < var_4h) {\n        var_4h = fcn.05f01910(arg_8h, arg_ch, 0, arg_10h, 0x7ffffffe);\n    }\n    return var_4h;\n}\n",
        "token_count": 125
    },
    "05f01890": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f01890(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.05f018e0(arg_8h, arg_ch, 0x7fffffff);\n    if (-1 < var_4h) {\n        var_4h = fcn.05f019c0(arg_8h, arg_ch, 0, arg_10h, &arg_14h);\n    }\n    return var_4h;\n}\n",
        "token_count": 138
    },
    "05f018e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f018e0(uint noname_0, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    var_4h = 0;\n    if ((arg_ch == 0) || (arg_10h < arg_ch)) {\n        var_4h = 0x80070057;\n    }\n    return var_4h;\n}\n",
        "token_count": 93
    },
    "05f01910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f01910(int16_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, int16_t *arg_14h, int32_t arg_18h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    for (; ((arg_ch != 0 && (arg_18h != 0)) && (*arg_14h != 0)); arg_14h = arg_14h + 1) {\n        *arg_8h = *arg_14h;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + -1;\n        arg_18h = arg_18h + -1;\n        var_4h = var_4h + 1;\n    }\n    if (arg_ch == 0) {\n        arg_8h = arg_8h + -1;\n        var_4h = var_4h + -1;\n        var_8h = 0x8007007a;\n    }\n    *arg_8h = 0;\n    if (arg_10h != NULL) {\n        *arg_10h = var_4h;\n    }\n    return var_8h;\n}\n",
        "token_count": 295
    },
    "05f019c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f019c0(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t arg_ch_00;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    arg_ch_00 = arg_ch - 1;\n    var_ch = fcn.05f07f04(arg_8h, arg_ch_00, arg_14h, arg_18h);\n    if ((var_ch < 0) || (arg_ch_00 < var_ch)) {\n        *(arg_8h + arg_ch_00 * 2) = 0;\n        var_10h = 0x8007007a;\n        var_ch = arg_ch_00;\n    }\n    else if (var_ch == arg_ch_00) {\n        *(arg_8h + arg_ch_00 * 2) = 0;\n        var_ch = arg_ch_00;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = var_ch;\n    }\n    return var_10h;\n}\n",
        "token_count": 277
    },
    "05f01c10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.05f01c10(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *arg_ch = 0;\n    fcn.05f04130(in_ECX + 0xb4, arg_8h);\n    fcn.05f04100(in_ECX + 0xb0);\n    var_8h = (**(**(in_ECX + 0xb4) + 0x4c))(*(in_ECX + 0xb4), in_ECX + 0xb0, 0);\n    if (-1 < var_8h) {\n        var_8h = (**(**(in_ECX + 0xb4) + 0x6c))(*(in_ECX + 0xb4), in_ECX + 4, 0x55);\n    }\n    if (-1 < var_8h) {\n        var_8h = (*_sym.imp.USER32.dll_DialogBoxParamW)(*0x5f52510, L\"ChooseFont\", 0, fcn.05f02b90, in_ECX);\n    }\n    if (var_8h == 0) {\n        uVar1 = fcn.05f04160(in_ECX + 0xb4);\n        *arg_ch = uVar1;\n    }\n    return var_8h;\n}\n",
        "token_count": 339
    },
    "05f01d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.05f01d40(uint hWnd)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_100h;\n    int32_t wParam;\n    int32_t var_f8h;\n    uint var_f1h;\n    uint lpString;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b6db;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x5f36008 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_f8h = 0;\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x140, 0, 0, var_10h);\n    (*_sym.imp.USER32.dll_GetWindowTextW)(hWnd, &lpString, 100);\n    arg_8h = 0x158;\n    wParam = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x158, 0xffffffff, &lpString);\n    var_f1h._0_1_ = '\\0';\n    if (wParam == -1) {\n        var_104h = 0;\n        var_f8h = fcn.05f04840(*(var_100h + 0xb0), &lpString, &var_104h);\n        if (var_f8h == 0) {\n            var_f1h._0_1_ = '\\x01';\n            fcn.05f033d0();\n            var_4h = 0;\n            var_f8h = fcn.05f04780(var_104h, var_100h + 4, &var_f1h + 1);\n            if (-1 < var_f8h) {\n                uVar2 = fcn.05f03420();\n                wParam = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x158, 0xffffffff, uVar2);\n            }\n            var_4h = 0xffffffff;\n            fcn.05f03400();\n        }\n        else if (var_f8h == -0x7767affe) {\n            var_f8h = 0;\n        }\n        fcn.05f04100(&var_104h);\n    }\n    if ((-1 < var_f8h) && (wParam != -1)) {\n        (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x14e, wParam, 0);\n        if (var_f1h != '\\0') {\n            (*_sym.imp.USER32.dll_SetWindowTextW)(hWnd, &lpString);\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x142, 0, uVar1);\n        var_f8h = fcn.05f01fa0();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.05f07768(arg_8h);\n    return;\n}\n",
        "token_count": 737
    },
    "05f01fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.05f01fa0(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_14h;\n    uint arg_ch;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    int32_t var_1f8h;\n    uint var_1f4h;\n    uint32_t var_1e8h;\n    uint var_1e4h;\n    int32_t var_1d8h;\n    uint32_t var_1d4h;\n    int32_t var_1d0h;\n    int32_t wParam;\n    uint hWnd;\n    uint32_t var_1c4h;\n    int32_t var_1c0h;\n    int32_t var_1bch;\n    uint var_1b8h;\n    int32_t var_1b4h;\n    uint *hDlg;\n    uint var_1ach;\n    uint lParam;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b726;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x5f36008 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_1b4h = 0;\n    hDlg = param_1;\n    hWnd = (*_sym.imp.USER32.dll_GetDlgItem)(*param_1, 1000, var_10h);\n    var_1b8h = (*_sym.imp.USER32.dll_GetDlgItem)(*hDlg, 0x3e9);\n    wParam = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x147, 0, 0);\n    arg_8h = 0x149;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x149, wParam, 0);\n    var_1d4h = iVar1 + 1;\n    if (100 < var_1d4h) {\n        var_1b4h = fcn.05f01800(0x7a);\n    }\n    if (-1 < var_1b4h) {\n        (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x148, wParam, &lParam);\n    }\n    var_200h = 0;\n    fcn.05f03440();\n    var_4h = 0;\n    if (wParam != -1) {\n        var_1b4h = fcn.05f048a0(hDlg[0x2c], &lParam, &var_1f4h);\n    }\n    fcn.05f03440();\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    if (-1 < var_1b4h) {\n        (*_sym.imp.USER32.dll_SendMessageW)(var_1b8h, 0x14b, 0, 0);\n        fcn.05f049d0(&var_1f4h, hDlg + 1, &var_1e4h);\n    }\n    if (-1 < var_1b4h) {\n        var_1bch = 0;\n        while( true ) {\n            iVar1 = fcn.05f034f0();\n            if (var_1bch == iVar1) break;\n            uVar2 = fcn.05f03510(var_1bch);\n            var_1fch = (*_sym.imp.USER32.dll_SendMessageW)(var_1b8h, 0x143, 0, uVar2);\n            fcn.05f03510(var_1bch);\n            uVar2 = fcn.05f01b40();\n            (*_sym.imp.USER32.dll_SendMessageW)(var_1b8h, 0x151, var_1fch, uVar2);\n            var_1bch = var_1bch + 1;\n        }\n    }\n    if (-1 < var_1b4h) {\n        uVar2 = (**(*hDlg[0x2d] + 0x60))(hDlg[0x2d]);\n        arg_14h = (**(*hDlg[0x2d] + 0x5c))(hDlg[0x2d], uVar2);\n        uVar2 = hDlg[0x2d];\n        arg_ch = (**(*hDlg[0x2d] + 0x58))();\n        fcn.05f01a70(0x5f33104, arg_ch, uVar2, arg_14h);\n        var_1d0h = 0;\n        var_1f8h = fcn.05f04ed0(hDlg[0x2c], &lParam, &var_1ach);\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(var_1b8h, 0x146, 0, 0);\n        for (var_1c0h = 0; var_1c0h != iVar1; var_1c0h = var_1c0h + 1) {\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(var_1b8h, 0x150, var_1c0h, 0);\n            if (iVar3 == var_1f8h) {\n                var_1d0h = var_1c0h;\n                break;\n            }\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(var_1b8h, 0x14e, var_1d0h, 0);\n        fcn.05f01d00();\n    }\n    var_1c4h = 0;\n    var_1e8h = fcn.05f03490();\n    for (; var_1c4h < var_1e8h; var_1c4h = var_1c4h + 1) {\n        uVar2 = fcn.05f034b0(var_1c4h);\n        fcn.05f04100(uVar2);\n    }\n    fcn.05f04100(&var_200h);\n    var_1d8h = var_1b4h;\n    var_4h = var_4h & 0xffffff00;\n    fcn.05f034d0();\n    var_4h = 0xffffffff;\n    fcn.05f03470();\n    *in_FS_OFFSET = var_ch;\n    fcn.05f07768(arg_8h);\n    return;\n}\n",
        "token_count": 1526
    },
    "05f02620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f02620(uint hdcDest)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_ECX;\n    int32_t arg_14h;\n    int32_t *in_FS_OFFSET;\n    float10 fVar7;\n    float fVar8;\n    float fVar9;\n    uint *arg_8h;\n    uint var_2f0h;\n    uint var_2e8h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint wParam;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint hWnd;\n    float var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint hDC;\n    int32_t *var_294h;\n    int32_t var_290h;\n    int32_t var_28ch;\n    uint *hDlg;\n    uint var_284h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    int32_t lpRect;\n    int32_t var_1ach;\n    int32_t var_1a8h;\n    int32_t var_1a4h;\n    uint var_1a0h;\n    uint lpString;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b765;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x5f36008 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_28ch = 0;\n    hDlg = in_ECX;\n    uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*in_ECX, 1000, var_10h);\n    uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(*hDlg, 0x3e9);\n    uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*hDlg, 0x3ea);\n    uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(*hDlg, 0x3eb);\n    iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x147, 0, 0);\n    if (iVar5 != -1) {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(uVar1, &lpString, 100);\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x147, 0, 0);\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x150, uVar1, 0);\n        (*_sym.imp.USER32.dll_GetWindowTextW)(uVar3, &var_1a0h, 100);\n        fVar7 = fcn.05f08516(&var_1a0h, 0);\n        var_2a4h = fVar7;\n        if (var_2a4h <= *0x5f334d4) {\n            var_2a4h = *0x5f334d8;\n        }\n        fVar8 = (var_2a4h * *0x5f334e0) / *0x5f334dc;\n        fcn.05f01ac0(&lpString, uVar1);\n        fcn.05f04100(hDlg + 0x2d);\n        var_28ch = (**(**0x5f5250c + 0x3c))\n                             (*0x5f5250c, &lpString, hDlg[0x2c], var_1bch, var_1b8h, var_1b4h, fVar8, hDlg + 1, \n                              hDlg + 0x2d);\n    }\n    lpRect = 0;\n    var_1ach = 0;\n    var_1a8h = 0;\n    var_1a4h = 0;\n    arg_8h = &lpRect;\n    (*_sym.imp.USER32.dll_GetClientRect)(uVar4);\n    iVar5 = var_1a8h - lpRect;\n    arg_14h = var_1a4h - var_1ach;\n    var_294h = NULL;\n    if (-1 < var_28ch) {\n        fVar8 = (arg_14h + *((arg_14h >> 0x1f) * -8 + 0x5f334f0)) * *0x5f334e0;\n        iVar6 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(hdcDest, 0x5a, &var_294h);\n        fVar9 = (iVar5 + *((iVar5 >> 0x1f) * -8 + 0x5f334f0)) * *0x5f334e0;\n        iVar6 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(hdcDest, 0x5a, fVar8 / iVar6);\n        var_28ch = (**(**0x5f5250c + 0x48))\n                             (*0x5f5250c, L\"The quick brown fox jumps over the lazy dog\", 0x2b, hDlg[0x2d], \n                              fVar9 / iVar6);\n    }\n    var_290h = 0;\n    if (-1 < var_28ch) {\n        iVar6 = fcn.05f088d0(0x10);\n        var_4h = 0;\n        if (iVar6 == 0) {\n            var_2b0h = 0;\n        }\n        else {\n            var_2b0h = fcn.05f06e80();\n        }\n        var_4h = 0xffffffff;\n        var_290h = fcn.05f04180(var_2b0h);\n        if (var_290h == 0) {\n            var_28ch = -0x7fffbffb;\n        }\n        else {\n            var_28ch = fcn.05f06f40(*hDlg, hdcDest, iVar5, arg_14h);\n        }\n    }\n    if (-1 < var_28ch) {\n        uVar1 = fcn.05f06f20();\n        uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n        (*_sym.imp.GDI32.dll_SetDCBrushColor)(uVar1, uVar2);\n        uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x12);\n        (*_sym.imp.USER32.dll_FillRect)(uVar1, &lpRect, uVar2);\n        var_28ch = (**(*var_294h + 0xe8))(var_294h, 0, var_290h, *0x5f334d4, *0x5f334d4);\n        (*_sym.imp.GDI32.dll_BitBlt)(hdcDest, 0, 0, iVar5, arg_14h, uVar1, 0, 0, 0x80cc0020);\n    }\n    fcn.05f04100(&var_290h);\n    fcn.05f04100(&var_294h);\n    *in_FS_OFFSET = var_ch;\n    fcn.05f07768(arg_8h);\n    return;\n}\n",
        "token_count": 1768
    },
    "05f02b90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f02b90(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetWindowLongW)(arg_8h, 0xffffffeb, arg_14h);\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(arg_8h, 0xffffffeb);\n    if (iVar1 != 0) {\n        if (arg_ch == 0x2b) {\n            fcn.05f031b0(arg_8h, 0);\n        }\n        else if (arg_ch == 0x110) {\n            fcn.05f02d90(arg_8h);\n        }\n        else if (arg_ch == 0x111) {\n            fcn.05f030c0(arg_8h, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 244
    },
    "05f030c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f030c0(uint hDlg, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint var_4h;\n    \n    if ((arg_ch == 2) && (arg_14h == 0)) {\n        (*_sym.imp.USER32.dll_EndDialog)(hDlg, 1);\n    }\n    else if ((arg_ch == 1) && (arg_14h == 0)) {\n        (*_sym.imp.USER32.dll_EndDialog)(hDlg, 0);\n    }\n    else if ((arg_ch == 1000) && (arg_14h == 1)) {\n        fcn.05f01fa0();\n    }\n    else if ((arg_ch == 1000) && (arg_14h == 5)) {\n        fcn.05f01d40(arg_10h);\n    }\n    else if ((arg_ch == 0x3e9) && (arg_14h == 1)) {\n        fcn.05f01d00();\n    }\n    else if ((arg_ch == 0x3e9) && (arg_14h == 5)) {\n        fcn.05f023e0(arg_10h);\n    }\n    else if ((arg_ch == 0x3ea) && (arg_14h == 1)) {\n        fcn.05f01d00();\n    }\n    else if ((arg_ch == 0x3ea) && (arg_14h == 5)) {\n        fcn.05f02500(arg_10h);\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "05f03260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Removing unreachable block (ram,0x05f03291)\n// WARNING: Removing unreachable block (ram,0x05f032b6)\n\nint32_t __cdecl fcn.05f03260(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = 0;\n    uVar1 = fcn.05f04100(in_ECX + 0xb0);\n    fcn.05f02c20(uVar1, 0xffffffff);\n    iVar2 = (*_sym.imp.USER32.dll_DialogBoxParamW)(*0x5f52510, 0xde, 0, fcn.05f02b90, in_ECX);\n    if (iVar2 == 0) {\n        uVar1 = fcn.05f04160(in_ECX + 0xb4);\n        *arg_8h = uVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 248
    },
    "05f037c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f037c0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_ch_00;\n    uint *in_ECX;\n    uchar *arg_8h_00;\n    uint arg_8h_01;\n    int32_t arg_10h;\n    uint *arg_8h_02;\n    uint var_ch;\n    uint var_8h;\n    uchar var_2h;\n    uint var_1h;\n    \n    if ((arg_8h != '\\0') && (7 < in_ECX[5])) {\n        arg_8h_01 = *in_ECX;\n        arg_8h_02 = &var_1h;\n        fcn.05f03760(arg_8h_02);\n        fcn.05f041d0(arg_8h_02);\n        if (arg_ch != 0) {\n            arg_10h = arg_ch;\n            arg_ch_00 = fcn.05f041f0(arg_8h_01);\n            fcn.05f01200(in_ECX, arg_ch_00, arg_10h);\n        }\n        arg_8h_00 = &var_2h;\n        fcn.05f03760(arg_8h_00);\n        fcn.05f03d10(arg_8h_00, arg_8h_01);\n    }\n    in_ECX[5] = 7;\n    fcn.05f03d60(arg_ch);\n    return;\n}\n",
        "token_count": 345
    },
    "05f03940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.05f03940(int32_t *param_1)\n\n{\n    uint *arg_8h;\n    int32_t arg_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*param_1 != 0) {\n        fcn.05f01310();\n        fcn.05f03e00(*param_1, param_1[1]);\n        arg_ch = *param_1;\n        arg_8h = &var_1h;\n        fcn.05f03760(arg_8h);\n        fcn.05f03d10(arg_8h, arg_ch);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "05f039c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.05f039c0(int32_t *param_1)\n\n{\n    uint *arg_8h;\n    int32_t arg_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*param_1 != 0) {\n        fcn.05f01310();\n        fcn.05f03e30(*param_1, param_1[1]);\n        arg_ch = *param_1;\n        arg_8h = &var_1h;\n        fcn.05f03760(arg_8h);\n        fcn.05f03d10(arg_8h, arg_ch);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "05f03e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.05f03e60(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_8h = &var_1h;\n    fcn.05f03760(arg_8h);\n    uVar1 = fcn.05f040a0(arg_8h, param_1);\n    if (uVar1 < 2) {\n        var_ch = 1;\n    }\n    else {\n        var_ch = uVar1 - 1;\n    }\n    return var_ch;\n}\n",
        "token_count": 186
    },
    "05f03ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.05f03ea0(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uchar *arg_8h_00;\n    uint32_t uStack68;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uchar var_13h [2];\n    uint32_t *var_11h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b7d0;\n    var_ch_3 = *in_FS_OFFSET;\n    uStack68 = *0x5f36008 ^ &stack0xfffffffc;\n    *0x10 = &uStack68;\n    *in_FS_OFFSET = &var_ch_3;\n    var_1ch = var_8h | 0xf;\n    uVar1 = fcn.05f03e60();\n    if (uVar1 < var_1ch) {\n        var_1ch = var_8h;\n    }\n    else if (var_1ch / 3 < *(param_1 + 0x14) >> 1) {\n        uVar1 = *(param_1 + 0x14);\n        iVar2 = fcn.05f03e60();\n        uVar1 = iVar2 - (uVar1 >> 1);\n        if (*(param_1 + 0x14) < uVar1 || *(param_1 + 0x14) == uVar1) {\n            var_1ch = (*(param_1 + 0x14) >> 1) + *(param_1 + 0x14);\n        }\n        else {\n            var_1ch = fcn.05f03e60();\n        }\n    }\n    var_4h = 0;\n    fcn.05f03760(&var_11h);\n    arg_8h = fcn.05f04080(var_1ch + 1);\n    var_4h = 0xffffffff;\n    if (var_ch_2 != 0) {\n        iVar2 = var_ch_2;\n        arg_ch = fcn.05f03780();\n        fcn.05f012a0(arg_8h, arg_ch, iVar2);\n    }\n    fcn.05f03690(1, 0);\n    arg_8h_00 = var_13h;\n    iVar2 = param_1;\n    fcn.05f03760(arg_8h_00);\n    fcn.05f041a0(arg_8h_00, iVar2);\n    *(param_1 + 0x14) = var_1ch;\n    fcn.05f03b80(var_ch_2);\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 715
    },
    "05f04100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f04100(int32_t **arg_8h)\n\n{\n    if (*arg_8h != NULL) {\n        (**(**arg_8h + 8))(*arg_8h);\n        *arg_8h = NULL;\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "05f04180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.05f04180(int32_t *arg_8h)\n\n{\n    if (arg_8h != NULL) {\n        (**(*arg_8h + 4))(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 61
    },
    "05f043b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f043b0(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b801;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    puVar1 = fcn.05f011e0(4, arg_8h);\n    var_4h = 0;\n    if (puVar1 != NULL) {\n        puVar2 = fcn.05f041f0(arg_ch);\n        *puVar1 = *puVar2;\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 220
    },
    "05f04540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f04540(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = fcn.05f044e0(arg_8h, arg_ch, arg_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 103
    },
    "05f04630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.05f04630(int32_t *param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t *var_8h;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x5f2b840;\n    var_ch_3 = *in_FS_OFFSET;\n    uStack72 = *0x5f36008 ^ &stack0xfffffffc;\n    puStack20 = &uStack72;\n    *in_FS_OFFSET = &var_ch_3;\n    var_14h = 0;\n    var_20h = 0;\n    var_4h = 0;\n    var_14h = (**(*var_8h + 0x10))(var_8h, var_ch_2, &var_18h, &var_1ch);\n    if (-1 < var_14h) {\n        if (var_1ch == 0) {\n            var_14h = (**(*var_8h + 0x10))(var_8h, L\"en-us\", &var_18h, &var_1ch);\n        }\n        if (var_1ch == 0) {\n            var_18h = 0;\n        }\n    }\n    if (-1 < var_14h) {\n        var_14h = (**(*var_8h + 0x1c))(var_8h, var_18h, &var_20h);\n    }\n    if (-1 < var_14h) {\n        fcn.05f050a0(var_20h + 1);\n        uVar1 = fcn.05f05080(0);\n        uVar2 = fcn.05f03670();\n        var_14h = (**(*var_8h + 0x20))(var_8h, var_18h, uVar1, uVar2);\n    }\n    *in_FS_OFFSET = var_ch_3;\n    return var_14h;\n}\n",
        "token_count": 577
    },
    "05f04780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f04780(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    var_4h = (**(*arg_8h + 0x18))(arg_8h, &var_8h);\n    if (-1 < var_4h) {\n        var_4h = fcn.05f04630(var_8h, arg_ch, arg_10h);\n    }\n    fcn.05f04100(&var_8h);\n    return var_4h;\n}\n",
        "token_count": 158
    },
    "05f047e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f047e0(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    var_4h = (**(*arg_8h + 0x20))(arg_8h, &var_8h);\n    if (-1 < var_4h) {\n        var_4h = fcn.05f04630(var_8h, arg_ch, arg_10h);\n    }\n    fcn.05f04100(&var_8h);\n    return var_4h;\n}\n",
        "token_count": 159
    },
    "05f04840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f04840(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = (**(*arg_8h + 0x14))(arg_8h, arg_ch, &var_ch, &var_8h);\n    if (var_8h == 0) {\n        var_4h = -0x7767affe;\n    }\n    else if (-1 < var_4h) {\n        var_4h = (**(*arg_8h + 0x10))(arg_8h, var_ch, arg_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 173
    },
    "05f048a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.05f048a0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b860;\n    var_ch_3 = *in_FS_OFFSET;\n    uStack60 = *0x5f36008 ^ &stack0xfffffffc;\n    puStack20 = &uStack60;\n    *in_FS_OFFSET = &var_ch_3;\n    var_18h = 0;\n    var_14h = NULL;\n    var_20h = 0;\n    var_18h = fcn.05f04840(var_8h, var_ch_2, &var_14h);\n    if (-1 < var_18h) {\n        iVar1 = (**(*var_14h + 0x10))(var_14h);\n        var_4h = 0;\n        var_1ch = 0;\n        while ((var_1ch != iVar1 && (var_18h = (**(*var_14h + 0x14))(var_14h, var_1ch, &var_20h),  -1 < var_18h))) {\n            fcn.05f050f0(&var_20h);\n            fcn.05f04160(&var_20h);\n            var_1ch = var_1ch + 1;\n        }\n        var_4h = 0xffffffff;\n    }\n    fcn.05f04100(&var_20h);\n    fcn.05f04100(&var_14h);\n    *in_FS_OFFSET = var_ch_3;\n    return var_18h;\n}\n",
        "token_count": 503
    },
    "05f049d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.05f049d0(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    int32_t **ppiVar8;\n    uint arg_ch;\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_3;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint in_stack_fffffb10;\n    uint32_t uStack1200;\n    uint var_49ch;\n    uint var_498h;\n    uint var_494h;\n    uint var_490h;\n    uint var_48ch;\n    uint var_488h;\n    uint var_484h;\n    uint var_480h;\n    uint var_47ch;\n    uint var_478h;\n    uint var_474h;\n    uint var_470h;\n    uint var_46ch;\n    uint var_468h;\n    uint var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_458h;\n    int32_t var_454h;\n    uint var_450h;\n    uint var_37ch;\n    uint var_2a8h;\n    uint var_1d4h;\n    uint var_100h;\n    uint var_2ch;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uStack12 = 0x5f2b888;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack1200 = *0x5f36008 ^ &stack0xfffffffc;\n    puStack20 = &uStack1200;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h = 0;\n    var_14h_2 = uStack1200;\n    cVar4 = fcn.05f050c0();\n    if (cVar4 == '\\0') {\n        var_454h = 0;\n        while( true ) {\n            iVar6 = fcn.05f03490();\n            if (var_454h == iVar6) break;\n            fcn.05f033d0();\n            var_4h._0_1_ = 1;\n            puVar7 = fcn.05f034b0(var_454h);\n            iVar6 = fcn.05f047e0(*puVar7, var_ch_3, &var_2ch);\n            if (iVar6 < 0) {\n                var_4h = var_4h._1_3_ << 8;\n                fcn.05f03400();\n                break;\n            }\n            ppiVar8 = fcn.05f034b0(var_454h);\n            piVar1 = *ppiVar8;\n            ppiVar8 = fcn.05f034b0(var_454h);\n            piVar2 = *ppiVar8;\n            ppiVar8 = fcn.05f034b0(var_454h);\n            piVar3 = *ppiVar8;\n            in_stack_fffffb10 = (**(*piVar1 + 0x14))(piVar1);\n            uVar5 = (**(*piVar2 + 0x18))(piVar2);\n            arg_ch = (**(*piVar3 + 0x10))(piVar3);\n            arg_8h = fcn.05f03420();\n            uVar5 = fcn.05f01a70(arg_8h, arg_ch, uVar5, in_stack_fffffb10);\n            fcn.05f05200(uVar5);\n            var_4h = var_4h._1_3_ << 8;\n            fcn.05f03400();\n            var_454h = var_454h + 1;\n        }\n        var_4h = -1;\n    }\n    else {\n        uVar5 = fcn.05f01a70(L\"Regular\", 400, 0, 5);\n        fcn.05f05200(uVar5);\n        uVar5 = fcn.05f01a70(L\"Bold\", 700, 0, 5);\n        fcn.05f05200(uVar5);\n        uVar5 = fcn.05f01a70(L\"Italic\", 400, 2, 5);\n        fcn.05f05200(uVar5);\n        in_stack_fffffb10 = 5;\n        uVar5 = fcn.05f01a70(L\"Bold Italic\", 700, 2, 5);\n        fcn.05f05200(uVar5);\n    }\n    *in_FS_OFFSET = var_ch_2;\n    fcn.05f07768(in_stack_fffffb10);\n    return;\n}\n",
        "token_count": 1130
    },
    "05f04cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.05f04cd0(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    int32_t *var_8h;\n    uint var_ch_3;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack92;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b8b8;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack92 = *0x5f36008 ^ &stack0xfffffffc;\n    puStack20 = &uStack92;\n    *in_FS_OFFSET = &var_ch_2;\n    var_30h = 0;\n    var_14h_2 = uStack92;\n    fcn.05f033d0();\n    var_4h = 0;\n    iVar1 = (**(*var_8h + 0xc))(var_8h);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    for (var_34h = 0; var_34h != iVar1; var_34h = var_34h + 1) {\n        var_38h = 0;\n        var_30h = (**(*var_8h + 0x10))(var_8h, var_34h, &var_38h);\n        if (-1 < var_30h) {\n            var_30h = fcn.05f04780(var_38h, var_ch_3, &var_2ch);\n        }\n        fcn.05f04100(&var_38h);\n        if (var_30h < 0) break;\n        fcn.05f05330(&var_2ch);\n    }\n    var_4h = 0xffffffff;\n    fcn.05f03400();\n    *in_FS_OFFSET = var_ch_2;\n    fcn.05f07768(unaff_EBX);\n    return;\n}\n",
        "token_count": 579
    },
    "05f05670": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f05670(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x5f3346c - *(in_ECX + 0x10) <= arg_8h) {\n        fcn.05f03cb0();\n    }\n    if (arg_8h != 0) {\n        arg_8h_00 = *(in_ECX + 0x10) + arg_8h;\n        cVar1 = fcn.05f05db0(arg_8h_00, 0);\n        if (cVar1 != '\\0') {\n            fcn.05f05d60(*(in_ECX + 0x10), arg_8h, arg_ch & 0xffff);\n            fcn.05f03d60(arg_8h_00);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 236
    },
    "05f05790": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.05f05790(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_10h;\n    uint var_ch;\n    uchar *arg_8h;\n    int32_t arg_ch;\n    uint *arg_8h_00;\n    uint32_t uStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar var_13h [2];\n    uint32_t *var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b900;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack52 = *0x5f36008 ^ &stack0xfffffffc;\n    *0x10 = &uStack52;\n    *in_FS_OFFSET = &var_ch_2;\n    arg_8h_00 = &var_11h;\n    fcn.05f03760(arg_8h_00);\n    arg_10h = fcn.05f05e90(arg_8h_00);\n    var_4h = 0;\n    fcn.05f06450(*param_1, param_1[1], arg_10h);\n    var_4h = 0xffffffff;\n    iVar1 = fcn.05f03490();\n    if (*param_1 != 0) {\n        fcn.05f03da0(*param_1, param_1[1]);\n        arg_ch = *param_1;\n        arg_8h = var_13h;\n        fcn.05f03760(arg_8h);\n        fcn.05f03d10(arg_8h, arg_ch);\n    }\n    fcn.05f01310();\n    param_1[2] = arg_10h + var_8h * 4;\n    param_1[1] = arg_10h + iVar1 * 4;\n    *param_1 = arg_10h;\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 510
    },
    "05f05990": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.05f05990(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_10h;\n    uint var_ch;\n    uchar *arg_8h;\n    int32_t arg_ch;\n    uint *arg_8h_00;\n    uint32_t uStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar var_13h [2];\n    uint32_t *var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b920;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack52 = *0x5f36008 ^ &stack0xfffffffc;\n    *0x10 = &uStack52;\n    *in_FS_OFFSET = &var_ch_2;\n    arg_8h_00 = &var_11h;\n    fcn.05f03760(arg_8h_00);\n    arg_10h = fcn.05f05ef0(arg_8h_00);\n    var_4h = 0;\n    fcn.05f06490(*param_1, param_1[1], arg_10h);\n    var_4h = 0xffffffff;\n    iVar1 = fcn.05f034f0();\n    if (*param_1 != 0) {\n        fcn.05f03e00(*param_1, param_1[1]);\n        arg_ch = *param_1;\n        arg_8h = var_13h;\n        fcn.05f03760(arg_8h);\n        fcn.05f03d10(arg_8h, arg_ch);\n    }\n    fcn.05f01310();\n    param_1[2] = var_8h * 0xd4 + arg_10h;\n    param_1[1] = iVar1 * 0xd4 + arg_10h;\n    *param_1 = arg_10h;\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 515
    },
    "05f05b70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.05f05b70(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_10h;\n    uint var_ch;\n    uchar *arg_8h;\n    int32_t arg_ch;\n    uint *arg_8h_00;\n    uint32_t uStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar var_13h [2];\n    uint32_t *var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b940;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack52 = *0x5f36008 ^ &stack0xfffffffc;\n    *0x10 = &uStack52;\n    *in_FS_OFFSET = &var_ch_2;\n    arg_8h_00 = &var_11h;\n    fcn.05f03760(arg_8h_00);\n    arg_10h = fcn.05f05f50(arg_8h_00);\n    var_4h = 0;\n    fcn.05f064d0(*param_1, param_1[1], arg_10h);\n    var_4h = 0xffffffff;\n    iVar1 = fcn.05f03550();\n    if (*param_1 != 0) {\n        fcn.05f03e30(*param_1, param_1[1]);\n        arg_ch = *param_1;\n        arg_8h = var_13h;\n        fcn.05f03760(arg_8h);\n        fcn.05f03d10(arg_8h, arg_ch);\n    }\n    fcn.05f01310();\n    param_1[2] = var_8h * 0x18 + arg_10h;\n    param_1[1] = iVar1 * 0x18 + arg_10h;\n    *param_1 = arg_10h;\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 516
    },
    "05f05d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f05d60(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_10h_00;\n    uint *arg_ch_00;\n    uint var_4h;\n    \n    if (arg_ch == 1) {\n        arg_ch_00 = &arg_10h;\n        iVar1 = fcn.05f03860();\n        fcn.05f01230(iVar1 + arg_8h * 2, arg_ch_00);\n    }\n    else {\n        arg_10h_00 = arg_10h & 0xffff;\n        iVar1 = fcn.05f03860();\n        fcn.05f04570(iVar1 + arg_8h * 2, arg_ch, arg_10h_00);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "05f05db0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.05f05db0(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t in_ECX;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.05f06050();\n    if (uVar1 < arg_8h) {\n        fcn.05f03cb0();\n    }\n    if (*(in_ECX + 0x14) < arg_8h) {\n        in_ECX = fcn.05f06090(arg_8h, *(in_ECX + 0x10));\n    }\n    else if ((arg_ch == '\\0') || (7 < arg_8h)) {\n        if (arg_8h == 0) {\n            in_ECX = fcn.05f03d60(0);\n        }\n    }\n    else {\n        if (arg_8h < *(in_ECX + 0x10)) {\n            var_8h = arg_8h;\n        }\n        else {\n            var_8h = *(in_ECX + 0x10);\n        }\n        in_ECX = fcn.05f037c0(1, var_8h);\n    }\n    var_ch = arg_8h != 0;\n    return in_ECX & 0xffffff00 | var_ch;\n}\n",
        "token_count": 311
    },
    "05f05fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f05fc0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x10) < arg_8h) {\n        fcn.05f03cd0();\n    }\n    if (arg_ch < *(in_ECX + 0x10) - arg_8h) {\n        if (arg_ch != 0) {\n            iVar1 = fcn.05f03860();\n            iVar1 = iVar1 + arg_8h * 2;\n            arg_8h_00 = *(in_ECX + 0x10) - arg_ch;\n            fcn.05f04540(iVar1, iVar1 + arg_ch * 2, arg_8h_00 - arg_8h);\n            fcn.05f03d60(arg_8h_00);\n        }\n    }\n    else {\n        fcn.05f03d60(arg_8h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 267
    },
    "05f06050": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.05f06050(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_8h = &var_1h;\n    fcn.05f03760(arg_8h);\n    uVar1 = fcn.05f06300(arg_8h, param_1);\n    if (uVar1 < 2) {\n        var_ch = 1;\n    }\n    else {\n        var_ch = uVar1 - 1;\n    }\n    return var_ch;\n}\n",
        "token_count": 184
    },
    "05f06090": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.05f06090(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uchar *arg_8h_00;\n    uint32_t uStack68;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uchar var_13h [2];\n    uint32_t *var_11h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b960;\n    var_ch_3 = *in_FS_OFFSET;\n    uStack68 = *0x5f36008 ^ &stack0xfffffffc;\n    *0x10 = &uStack68;\n    *in_FS_OFFSET = &var_ch_3;\n    var_1ch = var_8h | 7;\n    uVar1 = fcn.05f06050();\n    if (uVar1 < var_1ch) {\n        var_1ch = var_8h;\n    }\n    else if (var_1ch / 3 < *(param_1 + 0x14) >> 1) {\n        uVar1 = *(param_1 + 0x14);\n        iVar2 = fcn.05f06050();\n        uVar1 = iVar2 - (uVar1 >> 1);\n        if (*(param_1 + 0x14) < uVar1 || *(param_1 + 0x14) == uVar1) {\n            var_1ch = (*(param_1 + 0x14) >> 1) + *(param_1 + 0x14);\n        }\n        else {\n            var_1ch = fcn.05f06050();\n        }\n    }\n    var_4h = 0;\n    fcn.05f03760(&var_11h);\n    arg_8h = fcn.05f062e0(var_1ch + 1);\n    var_4h = 0xffffffff;\n    if (var_ch_2 != 0) {\n        iVar2 = var_ch_2;\n        arg_ch = fcn.05f03860();\n        fcn.05f01200(arg_8h, arg_ch, iVar2);\n    }\n    fcn.05f037c0(1, 0);\n    arg_8h_00 = var_13h;\n    iVar2 = param_1;\n    fcn.05f03760(arg_8h_00);\n    fcn.05f041a0(arg_8h_00, iVar2);\n    *(param_1 + 0x14) = var_1ch;\n    fcn.05f03d60(var_ch_2);\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 709
    },
    "05f06550": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f06550(uint32_t arg_8h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if ((arg_8h != 0) && ((0x13521cf < arg_8h || (var_4h = fcn.05f0887f(arg_8h * 0xd4),  var_4h == 0)))) {\n        fcn.05f07607();\n    }\n    return var_4h;\n}\n",
        "token_count": 118
    },
    "05f065a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f065a0(uint32_t arg_8h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if ((arg_8h != 0) && ((0xaaaaaaa < arg_8h || (var_4h = fcn.05f0887f(arg_8h * 0x18),  var_4h == 0)))) {\n        fcn.05f07607();\n    }\n    return var_4h;\n}\n",
        "token_count": 118
    },
    "05f06790": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06790(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.05f011e0(4, arg_8h);\n    if (puVar1 != NULL) {\n        *puVar1 = *arg_ch;\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "05f067d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f067d0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b801;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = fcn.05f011e0(0x18, arg_8h);\n    var_4h = 0;\n    if (iVar1 != 0) {\n        fcn.05f06850(arg_ch);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 198
    },
    "05f06930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06930(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b991;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    puVar1 = fcn.05f011e0(0xd4, arg_8h);\n    var_4h = 0;\n    if (puVar1 != NULL) {\n        puVar2 = fcn.05f041f0(arg_ch);\n        for (iVar3 = 0x35; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar1 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar1 = puVar1 + 1;\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 281
    },
    "05f069d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f069d0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b801;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = fcn.05f011e0(0x18, arg_8h);\n    var_4h = 0;\n    if (iVar1 != 0) {\n        arg_8h_00 = fcn.05f041f0(arg_ch);\n        fcn.05f06850(arg_8h_00);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 230
    },
    "05f06d90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06d90(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b801;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = fcn.05f011e0(0x18, arg_8h);\n    var_4h = 0;\n    if (iVar1 != 0) {\n        arg_8h_00 = fcn.05f041f0(arg_ch);\n        fcn.05f05030(arg_8h_00);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 230
    },
    "05f06e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.05f06e20(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.05f25b55(arg_8h, arg_ch, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 79
    },
    "05f06f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f06f40(uint hwnd, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_8h = NULL;\n    var_4h = (**(**0x5f5250c + 0x44))(*0x5f5250c, &var_8h);\n    if (-1 < var_4h) {\n        var_4h = (**(*var_8h + 0x1c))(var_8h, arg_ch, arg_10h, arg_14h, in_ECX + 4);\n    }\n    if (-1 < var_4h) {\n        uVar1 = (*_sym.imp.USER32.dll_MonitorFromWindow)(hwnd, 0, in_ECX + 8);\n        var_4h = (**(**0x5f5250c + 0x2c))(*0x5f5250c, uVar1);\n    }\n    fcn.05f04100(&var_8h);\n    return var_4h;\n}\n",
        "token_count": 273
    },
    "05f07276": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f07276(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x5f2c930;\n    if (*0x5f2c934 != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 139
    },
    "05f072a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f072a0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x5f2c6d8;\n    if (*0x5f2c6dc != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 143
    },
    "05f09964": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.05f09964(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.05f0b868(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 83
    },
    "05f0b868": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f0b868(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x5f519a4, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.05f0b528();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.05f0b581(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "05f0944f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.05f0944f(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_38h_2;\n    code *pcStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *var_18h_2;\n    int32_t var_14h_2;\n    uint *var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    var_18h_2 = &stack0xfffffffc;\n    puStack32 = &stack0xffffffc0;\n    if (var_34h == 0x123) {\n        *var_30h = 0x5f094f8;\n        var_4h = 1;\n    }\n    else {\n        pcStack56 = fcn.05f09349;\n        uStack52 = *0x5f36008 ^ &fcn.05f0944f::var_38h_2;\n        uStack48 = var_24h;\n        puStack44 = var_30h;\n        uStack40 = var_20h;\n        uStack36 = var_1ch;\n        var_14h_2 = 0;\n        var_38h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.05f0944f::var_38h_2;\n        var_4h = 1;\n        var_10h = var_34h;\n        var_ch = var_2ch;\n        iVar1 = fcn.05f0cb71();\n        var_8h = *(iVar1 + 0x80);\n        (*var_8h)(*var_34h, &fcn.05f0944f::var_10h);\n        var_4h = 0;\n        if (var_14h_2 == 0) {\n            *in_FS_OFFSET = var_38h_2;\n        }\n        else {\n            *var_38h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_38h_2;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 705
    },
    "05f09fa4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x05f0a099: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x05f0a09e)\n// WARNING: Removing unreachable block (ram,0x05f0a0cd)\n// WARNING: Removing unreachable block (ram,0x05f0a0a4)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.05f09fa4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.05f0a280(0x5f34748, 0x1c);\n    fcn.05f10b0e(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x5f5193c != 1) {\n        *0x5f51964 = 1;\n        *0x5f51960 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x5f535f0);\n            *(unaff_EBP + -0x2c) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar5)(*0x5f535ec);\n                *(unaff_EBP + -0x1c) = piVar2;\n                *(unaff_EBP + -0x20) = piVar3;\n                do {\n                    *(unaff_EBP + -0x24) = piVar3;\n                    piVar7 = piVar3;\n                    do {\n                        do {\n                            piVar7 = piVar7 + -1;\n                            *(unaff_EBP + -0x24) = piVar7;\n                            if (piVar7 < piVar2) goto code_r0x05f0a070;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        } while (*piVar7 == iVar4);\n                        if (piVar7 < piVar2) goto code_r0x05f0a070;\n                        pcVar5 = (*pcVar5)(*piVar7);\n                        iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        *piVar7 = iVar4;\n                        (*pcVar5)();\n                        pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n                        uVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x5f535f0);\n                        *(unaff_EBP + -0x28) = uVar6;\n                        piVar3 = (*pcVar5)(*0x5f535ec);\n                        piVar1 = *(unaff_EBP + -0x28);\n                    } while ((*(unaff_EBP + -0x1c) == piVar1) && (*(unaff_EBP + -0x20) == piVar3));\n                    *(unaff_EBP + -0x1c) = piVar1;\n                    *(unaff_EBP + -0x2c) = piVar1;\n                    *(unaff_EBP + -0x20) = piVar3;\n                    piVar2 = piVar1;\n                } while( true );\n            }\ncode_r0x05f0a070:\n            fcn.05f09f3a(0x5f2c1e8, 0x5f2c1f8);\n        }\n        fcn.05f09f3a(0x5f2c1fc, 0x5f2c200);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.05f10c98(8);\n    }\n    return;\n}\n",
        "token_count": 974
    },
    "05f0ce0d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong __fastcall fcn.05f0ce0d(uint param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((param_4 & 0xfffff) != 0) || (param_3 != 0)) {\n            uVar1 = fcn.05f17a2c();\n            goto code_r0x05f0ce8b;\n        }\n        uVar1 = param_4 & 0x80000000;\n        if (uVar1 != 0) goto code_r0x05f0ce7e;\n    }\n    else {\n        uVar1 = param_4;\n        if (in_FPUControlWord != 0x27f) {\n            uVar1 = fcn.05f17a15();\n        }\n        if (((uVar1 & 0x80000000) != 0) && ((((uVar1 & 0x7ff00000) != 0 || ((uVar1 & 0xfffff) != 0)) || (param_3 != 0)))\n           ) {\ncode_r0x05f0ce7e:\n            uVar1 = 1;\ncode_r0x05f0ce8b:\n            if (*0x5f51930 == 0) {\n                uVar3 = fcn.05f179b7(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            goto code_r0x05f17a9e;\n        }\n    }\n    if (*0x5f51930 == 0) {\n        uVar2 = uVar1 & 0xffff0000 | arg_8h & 0xffff;\n        if ((arg_8h & 0xffff) != 0x27f) {\n            if (((arg_8h & 0x20) != 0) &&\n               (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                uVar3 = fcn.05f179b7(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            uVar2 = uVar2 & 0xffff0020;\n        }\n        return CONCAT44(arg_8h, uVar2);\n    }\ncode_r0x05f17a9e:\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 663
    },
    "05f0df96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f0df96(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.05f0ec64();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "05f0eef5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f0eef5(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x28);\n    fcn.05f09655(*(unaff_EBP + -0x2c));\n    iVar1 = fcn.05f0cb71();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x30);\n    iVar1 = fcn.05f0cb71();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x34);\n    if (((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n         ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n        (*(unaff_EBP + -0x38) == 0)) &&\n       ((*(unaff_EBP + -0x1c) != 0 && (iVar1 = fcn.05f096a5(unaff_ESI[6]),  iVar1 != 0)))) {\n        fcn.05f0ecbc(unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "05f0fcff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.05f0fcff(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.05f0a280(0x5f34918, 0x10);\n    if (*(*(unaff_EBP + 0x10) + 4) < 0x81) {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    else {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar4;\n    iVar3 = fcn.05f0cb71();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar4 != *(unaff_EBP + 0x14)) {\n        if ((iVar4 < 0) || (*(*(unaff_EBP + 0x10) + 4) <= iVar4)) {\n            fcn.05f0ec2c();\n        }\n        iVar3 = *(unaff_EBP + 0x10);\n        iVar1 = *(iVar3 + 8);\n        uVar2 = *(iVar1 + iVar4 * 8);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + iVar4 * 8) != 0) {\n            iVar1 = *(unaff_EBP + 8);\n            *(iVar1 + 8) = uVar2;\n            fcn.05f0ebe0(*(*(iVar3 + 8) + 4 + iVar4 * 8), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        iVar4 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = iVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.05f0fdbe();\n    if (iVar4 != *(unaff_EBP + 0x14)) {\n        fcn.05f0ec2c();\n    }\n    *(*(unaff_EBP + 8) + 8) = iVar4;\n    fcn.05f0a2c5();\n    return;\n}\n",
        "token_count": 627
    },
    "05f0fdbe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.05f0fdbe(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.05f0cb71();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.05f0cb71();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "05f12c25": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.05f12c25(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    code *pcVar6;\n    char *pcVar7;\n    uint8_t *puVar8;\n    uint *puVar9;\n    int32_t *piVar10;\n    int32_t extraout_ECX;\n    int32_t iVar11;\n    uint unaff_EBX;\n    uint32_t uVar12;\n    int32_t *piVar13;\n    char *pcVar14;\n    bool bVar15;\n    int64_t iVar16;\n    uint var_27ch;\n    int32_t *var_278h;\n    int32_t *var_274h;\n    uint var_270h;\n    int32_t var_268h;\n    uint var_264h;\n    int32_t var_260h;\n    uint var_25ch;\n    uint var_258h;\n    int32_t var_254h;\n    int32_t *var_250h;\n    int32_t var_24ch;\n    uint32_t var_248h;\n    int32_t var_244h;\n    int32_t *var_240h;\n    char *var_23ch;\n    int32_t var_238h;\n    int32_t var_234h;\n    int32_t var_230h;\n    uint var_22ch;\n    int32_t *var_228h;\n    char *var_224h;\n    int32_t var_220h;\n    int32_t **var_21ch;\n    uint32_t var_218h;\n    uint8_t var_211h;\n    uint8_t *var_210h;\n    uint var_20ch;\n    uchar var_dh;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x5f36008 ^ &stack0xfffffffc;\n    var_230h = arg_8h;\n    var_210h = arg_ch;\n    uVar12 = 0;\n    var_21ch = arg_14h;\n    var_254h = 0;\n    piVar13 = NULL;\n    var_218h = 0;\n    var_240h = NULL;\n    var_228h = NULL;\n    var_234h = 0;\n    var_25ch = 0;\n    var_24ch = 0;\n    var_238h = 0;\n    fcn.05f08385(arg_10h);\n    var_258h = fcn.05f0b528();\n    if (var_230h != 0) {\n        if ((*(var_230h + 0xc) & 0x40) == 0) {\n            uVar4 = fcn.05f11a06(var_230h);\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar11 = 0x5f36a50;\n            }\n            else {\n                iVar11 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x5f519a8);\n            }\n            if ((*(iVar11 + 0x24) & 0x7f) == 0) {\n                if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                    iVar11 = 0x5f36a50;\n                }\n                else {\n                    iVar11 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x5f519a8);\n                }\n                if ((*(iVar11 + 0x24) & 0x80) == 0) goto code_r0x05f12d1c;\n            }\n        }\n        else {\ncode_r0x05f12d1c:\n            if (var_210h != NULL) {\n                var_211h = *var_210h;\n                var_224h = NULL;\n                iVar11 = 0;\n                var_220h = 0;\n                var_244h = 0;\n                var_250h = NULL;\n                var_248h = var_248h & 0xffffff00 | var_211h;\n                puVar3 = var_210h;\n                while ((var_211h != 0 && (var_210h = puVar3 + 1,  -1 < iVar11))) {\n                    if (var_211h - 0x20 < 0x59) {\n                        uVar4 = *(var_211h + 0x5f2ebd8) & 0xf;\n                    }\n                    else {\n                        uVar4 = 0;\n                    }\n                    var_244h = *(var_244h + 0x5f2ebf8 + uVar4 * 8) >> 4;\n                    puVar8 = var_210h;\n    // switch table (8 cases) at 0x5f13785\n                    switch(var_244h) {\n                    case 0:\ncode_r0x05f12fb8:\n                        var_238h = 0;\n                        iVar11 = fcn.05f12587(var_211h, &var_270h);\n                        if (iVar11 != 0) {\n                            fcn.05f137b6(var_248h, var_230h, &var_220h);\n                            uVar1 = *var_210h;\n                            var_210h = var_210h + 1;\n                            var_248h = var_248h & 0xffffff00 | uVar1;\n                            if (uVar1 == 0) goto code_r0x05f13770;\n                        }\n                        fcn.05f137b6(var_248h, var_230h, &var_220h);\n                        puVar8 = var_210h;\n                        iVar11 = var_220h;\n                        break;\n                    case 1:\n                        var_228h = 0xffffffff;\n                        uVar12 = 0;\n                        var_25ch = 0;\n                        var_24ch = 0;\n                        var_240h = NULL;\n                        var_234h = 0;\n                        var_218h = 0;\n                        var_238h = 0;\n                        break;\n                    case 2:\n                        if (var_211h == 0x20) {\n                            uVar12 = uVar12 | 2;\n                            var_218h = uVar12;\n                        }\n                        else if (var_211h == 0x23) {\n                            uVar12 = uVar12 | 0x80;\n                            var_218h = uVar12;\n                        }\n                        else if (var_211h == 0x2b) {\n                            uVar12 = uVar12 | 1;\n                            var_218h = uVar12;\n                        }\n                        else if (var_211h == 0x2d) {\n                            uVar12 = uVar12 | 4;\n                            var_218h = uVar12;\n                        }\n                        else if (var_211h == 0x30) {\n                            uVar12 = uVar12 | 8;\n                            var_218h = uVar12;\n                        }\n                        break;\n                    case 3:\n                        if (var_211h == 0x2a) {\n                            var_240h = *var_21ch;\n                            var_21ch = var_21ch + 1;\n                            if (var_240h < 0) {\n                                uVar12 = uVar12 | 4;\n                                var_240h = -var_240h;\n                                var_218h = uVar12;\n                            }\n                        }\n                        else {\n                            var_240h = var_211h + var_240h * 10 + -0x30;\n                            iVar11 = var_220h;\n                        }\n                        break;\n                    case 4:\n                        var_228h = NULL;\n                        break;\n                    case 5:\n                        if (var_211h == 0x2a) {\n                            var_228h = *var_21ch;\n                            var_21ch = var_21ch + 1;\n                            if (var_228h < 0) {\n                                var_228h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_228h = var_211h + var_228h * 10 + -0x30;\n                            iVar11 = var_220h;\n                        }\n                        break;\n                    case 6:\n                        if (var_211h == 0x49) {\n                            uVar1 = *var_210h;\n                            if ((uVar1 == 0x36) && (puVar3[2] == 0x34)) {\n                                uVar12 = uVar12 | 0x8000;\n                                puVar8 = puVar3 + 3;\n                                var_218h = uVar12;\n                            }\n                            else if ((uVar1 == 0x33) && (puVar3[2] == 0x32)) {\n                                uVar12 = uVar12 & 0xffff7fff;\n                                puVar8 = puVar3 + 3;\n                                var_218h = uVar12;\n                            }\n                            else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                                     ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                                var_244h = 0;\n                                goto code_r0x05f12fb8;\n                            }\n                        }\n                        else if (var_211h == 0x68) {\n                            uVar12 = uVar12 | 0x20;\n                            var_218h = uVar12;\n                        }\n                        else if (var_211h == 0x6c) {\n                            if (*var_210h == 0x6c) {\n                                uVar12 = uVar12 | 0x1000;\n                                puVar8 = puVar3 + 2;\n                                var_218h = uVar12;\n                            }\n                            else {\n                                uVar12 = uVar12 | 0x10;\n                                var_218h = uVar12;\n                            }\n                        }\n                        else if (var_211h == 0x77) {\n                            uVar12 = uVar12 | 0x800;\n                            var_218h = uVar12;\n                        }\n                        break;\n                    case 7:\n                        if (var_211h < 'e') {\n                            if (var_211h == 100) {\ncode_r0x05f1328f:\n                                uVar12 = uVar12 | 0x40;\n                                var_218h = uVar12;\ncode_r0x05f13298:\n                                var_224h = 0xa;\ncode_r0x05f132a2:\n                                if (((uVar12 & 0x8000) == 0) && ((uVar12 & 0x1000) == 0)) {\n                                    if ((uVar12 & 0x20) == 0) {\n                                        if ((uVar12 & 0x40) == 0) {\n                                            piVar13 = *var_21ch;\n                                            piVar10 = NULL;\n                                            var_21ch = var_21ch + 1;\n                                            goto code_r0x05f13479;\n                                        }\n                                        piVar13 = *var_21ch;\n                                    }\n                                    else if ((uVar12 & 0x40) == 0) {\n                                        piVar13 = *var_21ch;\n                                    }\n                                    else {\n                                        piVar13 = *var_21ch;\n                                    }\n                                    piVar10 = piVar13 >> 0x1f;\n                                    var_21ch = var_21ch + 1;\n                                }\n                                else {\n                                    piVar13 = *var_21ch;\n                                    piVar10 = var_21ch[1];\n                                    var_21ch = var_21ch + 2;\n                                }\ncode_r0x05f13479:\n                                if ((((uVar12 & 0x40) != 0) && (piVar10 < 1)) && (piVar10 < 0)) {\n                                    bVar15 = piVar13 != NULL;\n                                    piVar13 = -piVar13;\n                                    piVar10 = -(piVar10 + bVar15);\n                                    uVar12 = uVar12 | 0x100;\n                                    var_218h = uVar12;\n                                }\n                                if ((uVar12 & 0x9000) == 0) {\n                                    piVar10 = NULL;\n                                }\n                                iVar16 = CONCAT44(piVar10, piVar13);\n                                if (var_228h < 0) {\n                                    var_228h = 0x1;\n                                }\n                                else {\n                                    var_218h = uVar12 & 0xfffffff7;\n                                    if (0x200 < var_228h) {\n                                        var_228h = 0x200;\n                                    }\n                                }\n                                if ((piVar13 | piVar10) == 0) {\n                                    var_234h = 0;\n                                }\n                                piVar10 = &var_dh;\n                                while ((piVar5 = var_228h + -1,  0 < var_228h || (iVar16 != 0))) {\n                                    var_228h = piVar5;\n                                    iVar16 = fcn.05f12b90();\n                                    var_23ch = iVar16;\n                                    iVar11 = extraout_ECX + 0x30;\n                                    if (0x39 < iVar11) {\n                                        iVar11 = iVar11 + var_254h;\n                                    }\n                                    *piVar10 = iVar11;\n                                    piVar10 = piVar10 + -1;\n                                }\n                                var_224h = &var_dh + -piVar10;\n                                piVar13 = piVar10 + 1;\n                                uVar12 = var_218h;\n                                var_228h = piVar5;\n                                if (((var_218h & 0x200) != 0) && ((var_224h == NULL || (*piVar13 != '0')))) {\n                                    var_224h = &var_ch + -piVar10;\n                                    *piVar10 = '0';\n                                    piVar13 = piVar10;\n                                }\n                            }\n                            else if (var_211h < 'T') {\n                                if (var_211h == 0x53) {\n                                    if ((uVar12 & 0x830) == 0) {\n                                        uVar12 = uVar12 | 0x800;\n                                        var_218h = uVar12;\n                                    }\n                                    goto code_r0x05f130d9;\n                                }\n                                if (var_211h == 0x41) {\ncode_r0x05f1305e:\n                                    var_211h = var_211h + 0x20;\n                                    var_25ch = 1;\ncode_r0x05f13071:\n                                    uVar4 = uVar12 | 0x40;\n                                    var_23ch = 0x200;\n                                    piVar5 = &var_20ch;\n                                    pcVar14 = var_23ch;\n                                    var_218h = uVar4;\n                                    if (var_228h < 0) {\n                                        var_228h = 0x6;\n                                    }\n                                    else if (var_228h == NULL) {\n                                        if (var_211h == 0x67) {\n                                            var_228h = 0x1;\n                                        }\n                                    }\n                                    else {\n                                        if (0x200 < var_228h) {\n                                            var_228h = 0x200;\n                                        }\n                                        if (0xa3 < var_228h) {\n                                            pcVar14 = var_228h + 0x15d;\n                                            var_250h = fcn.05f0a160(pcVar14);\n                                            piVar5 = var_250h;\n                                            if (var_250h == NULL) {\n                                                var_228h = 0xa3;\n                                                piVar5 = &var_20ch;\n                                                pcVar14 = var_23ch;\n                                            }\n                                        }\n                                    }\n                                    var_23ch = pcVar14;\n                                    var_278h = *var_21ch;\n                                    var_274h = var_21ch[1];\n                                    var_21ch = var_21ch + 2;\n                                    pcVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)\n                                                       (*0x5f36aa8, &var_278h, piVar5, var_23ch, var_211h, var_228h, \n                                                        var_25ch, &var_270h);\n                                    (*pcVar6)();\n                                    if (((uVar12 & 0x80) != 0) && (var_228h == NULL)) {\n                                        pcVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x5f36ab4, piVar5, &var_270h);\n                                        (*pcVar6)();\n                                    }\n                                    if ((var_211h == 0x67) && ((uVar12 & 0x80) == 0)) {\n                                        pcVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x5f36ab0, piVar5, &var_270h);\n                                        (*pcVar6)();\n                                    }\n                                    if (*piVar5 == '-') {\n                                        var_218h = uVar12 | 0x140;\n                                        uVar4 = var_218h;\n                                        piVar5 = piVar5 + 1;\n                                    }\ncode_r0x05f131f9:\n                                    piVar13 = piVar5;\n                                    uVar12 = uVar4;\n                                    var_224h = fcn.05f09120(piVar13);\n                                }\n                                else if (var_211h == 0x43) {\n                                    if ((uVar12 & 0x830) == 0) {\n                                        uVar12 = uVar12 | 0x800;\n                                        var_218h = uVar12;\n                                    }\ncode_r0x05f13152:\n                                    if ((uVar12 & 0x810) == 0) {\n                                        var_20ch._0_1_ = *var_21ch;\n                                        var_224h = 0x1;\n                                        var_21ch = var_21ch + 1;\n                                    }\n                                    else {\n                                        uVar2 = *var_21ch;\n                                        var_21ch = var_21ch + 1;\n                                        iVar11 = fcn.05f1f82d(&var_224h, &var_20ch, 0x200, uVar2);\n                                        if (iVar11 != 0) {\n                                            var_24ch = 1;\n                                        }\n                                    }\n                                    piVar13 = &var_20ch;\n                                }\n                                else if ((var_211h == 0x45) || (var_211h == 0x47)) goto code_r0x05f1305e;\n                            }\n                            else {\n                                if (var_211h == 0x58) goto code_r0x05f133ed;\n                                if (var_211h == 0x5a) {\n                                    piVar10 = *var_21ch;\n                                    var_21ch = var_21ch + 1;\n                                    uVar4 = uVar12;\n                                    piVar5 = *0x5f36e60;\n                                    if ((piVar10 == NULL) || (piVar13 = piVar10[1],  piVar13 == NULL))\n                                    goto code_r0x05f131f9;\n                                    var_224h = *piVar10;\n                                    if ((uVar12 & 0x800) == 0) {\n                                        var_238h = 0;\n                                    }\n                                    else {\n                                        var_238h = 1;\n                                        var_224h = var_224h / 2;\n                                    }\n                                }\n                                else {\n                                    if (var_211h == 0x61) goto code_r0x05f13071;\n                                    if (var_211h == 99) goto code_r0x05f13152;\n                                }\n                            }\ncode_r0x05f13576:\n                            if (var_24ch == 0) {\n                                if ((uVar12 & 0x40) != 0) {\n                                    if ((uVar12 & 0x100) == 0) {\n                                        if ((uVar12 & 1) == 0) {\n                                            if ((uVar12 & 2) == 0) goto code_r0x05f135bd;\n                                            var_22ch._0_1_ = 0x20;\n                                        }\n                                        else {\n                                            var_22ch._0_1_ = 0x2b;\n                                        }\n                                    }\n                                    else {\n                                        var_22ch._0_1_ = 0x2d;\n                                    }\n                                    var_234h = 1;\n                                }\ncode_r0x05f135bd:\n                                pcVar14 = var_240h + (-var_234h - var_224h);\n                                if ((uVar12 & 0xc) == 0) {\n                                    fcn.05f137fe(0x20, pcVar14, var_230h, &var_220h);\n                                }\n                                fcn.05f240f6(&var_22ch, var_234h, var_230h, &var_220h, var_258h);\n                                if (((uVar12 & 8) != 0) && ((uVar12 & 4) == 0)) {\n                                    fcn.05f137fe(0x30, pcVar14, var_230h, &var_220h);\n                                }\n                                if ((var_238h == 0) || (pcVar7 = var_224h,  piVar10 = piVar13,  var_224h < 1)) {\n                                    fcn.05f240f6(piVar13, var_224h, var_230h, &var_220h, var_258h);\n                                }\n                                else {\n                                    do {\n                                        var_23ch = pcVar7 + -1;\n                                        iVar11 = fcn.05f1f82d(&var_260h, &var_ch, 6, *piVar10);\n                                        if ((iVar11 != 0) || (var_260h == 0)) {\n                                            var_220h = -1;\n                                            break;\n                                        }\n                                        fcn.05f240f6(&var_ch, var_260h, var_230h, &var_220h, var_258h);\n                                        pcVar7 = var_23ch;\n                                        piVar10 = piVar10 + 2;\n                                    } while (var_23ch != NULL);\n                                }\n                                if ((-1 < var_220h) && ((uVar12 & 4) != 0)) {\n                                    fcn.05f137fe(0x20, pcVar14, var_230h, &var_220h);\n                                }\n                            }\n                        }\n                        else {\n                            if ('p' < var_211h) {\n                                if (var_211h == 0x73) {\ncode_r0x05f130d9:\n                                    piVar10 = 0x7fffffff;\n                                    if (var_228h != 0xffffffff) {\n                                        piVar10 = var_228h;\n                                    }\n                                    piVar5 = *var_21ch;\n                                    var_21ch = var_21ch + 1;\n                                    piVar13 = piVar5;\n                                    if ((uVar12 & 0x810) == 0) {\n                                        if (piVar5 == NULL) {\n                                            piVar5 = *0x5f36e60;\n                                            piVar13 = *0x5f36e60;\n                                        }\n                                        for (; (piVar10 != NULL && (piVar10 = piVar10 + -1,  *piVar5 != '\\0'));\n                                            piVar5 = piVar5 + 1) {\n                                        }\n                                        var_224h = piVar5 - piVar13;\n                                    }\n                                    else {\n                                        if (piVar5 == NULL) {\n                                            piVar13 = *0x5f36e64;\n                                        }\n                                        var_238h = 1;\n                                        for (piVar5 = piVar13;\n                                            (piVar10 != NULL && (piVar10 = piVar10 + -1,  *piVar5 != 0));\n                                            piVar5 = piVar5 + 2) {\n                                        }\n                                        var_224h = piVar5 - piVar13 >> 1;\n                                    }\n                                    goto code_r0x05f13576;\n                                }\n                                if (var_211h == 0x75) goto code_r0x05f13298;\n                                if (var_211h != 0x78) goto code_r0x05f13576;\n                                var_254h = 0x27;\ncode_r0x05f1340d:\n                                var_224h = 0x10;\n                                if (uVar12 < '\\0') {\n                                    var_22ch._1_1_ = var_254h + 'Q';\n                                    var_22ch._0_1_ = 0x30;\n                                    var_234h = 2;\n                                }\n                                goto code_r0x05f132a2;\n                            }\n                            if (var_211h == 0x70) {\n                                var_228h = 0x8;\ncode_r0x05f133ed:\n                                var_254h = 7;\n                                goto code_r0x05f1340d;\n                            }\n                            if (var_211h < 'e') goto code_r0x05f13576;\n                            if (var_211h < 'h') goto code_r0x05f13071;\n                            if (var_211h == 0x69) goto code_r0x05f1328f;\n                            if (var_211h != 0x6e) {\n                                if (var_211h != 0x6f) goto code_r0x05f13576;\n                                var_224h = 0x8;\n                                if (uVar12 < '\\0') {\n                                    uVar12 = uVar12 | 0x200;\n                                    var_218h = uVar12;\n                                }\n                                goto code_r0x05f132a2;\n                            }\n                            piVar10 = *var_21ch;\n                            var_21ch = var_21ch + 1;\n                            iVar11 = fcn.05f12711();\n                            if (iVar11 == 0) goto code_r0x05f13770;\n                            if ((uVar12 & 0x20) == 0) {\n                                *piVar10 = var_220h;\n                            }\n                            else {\n                                *piVar10 = var_220h;\n                            }\n                            var_24ch = 1;\n                        }\n                        puVar8 = var_210h;\n                        iVar11 = var_220h;\n                        if (var_250h != NULL) {\n                            fcn.05f0b868(var_250h);\n                            var_250h = NULL;\n                            puVar8 = var_210h;\n                            iVar11 = var_220h;\n                        }\n                    }\n                    var_211h = *puVar8;\n                    var_248h = var_248h & 0xffffff00 | var_211h;\n                    puVar3 = puVar8;\n                }\n                goto code_r0x05f1374c;\n            }\n        }\n    }\ncode_r0x05f13770:\n    puVar9 = fcn.05f0b528();\n    *puVar9 = 0x16;\n    fcn.05f0a63b();\ncode_r0x05f1374c:\n    if (var_264h != '\\0') {\n        *(var_268h + 0x70) = *(var_268h + 0x70) & 0xfffffffd;\n    }\n    fcn.05f07768(unaff_EBX);\n    return;\n}\n",
        "token_count": 6194
    },
    "05f15ceb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.05f15ceb(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x5f36008 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = str.5_v_[1];\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x05f15d60;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = str.5_v_[0] + L'\\xffffffff';\n        bVar5 = false;\n        iVar15 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x05f15e60;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x05f15e60:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x5f36ed0 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x5f36ed0 < iVar15) {\n                if (iVar15 < *0x5f36ecc) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = str.5_v_[3] + iVar15;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = str.5_v_[3] + *0x5f36ecc;\n                }\n                goto code_r0x05f16211;\n            }\n            iVar11 = *0x5f36ed0 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x05f1601b;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x05f1601b:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = str.5_v_[1] + L'\\x01';\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x05f15d60:\n        iVar15 = 0;\n    }\ncode_r0x05f16211:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar16;\n    }\n    fcn.05f07768(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3240
    },
    "05f1625d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.05f1625d(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x5f36008 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = *0x5f36ef0;\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x05f162d2;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = *0x5f36eec + -1;\n        bVar5 = false;\n        iVar15 = (*0x5f36eec >> 0x1f & 0x1fU) + *0x5f36eec >> 5;\n        uVar8 = 0x1f - (*0x5f36eec & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x05f163d2;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x05f163d2:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x5f36ee8 - *0x5f36eec) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x5f36ee8 < iVar15) {\n                if (iVar15 < *0x5f36ee4) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = *0x5f36ef8 + iVar15;\n                    iVar11 = *0x5f36ef0 + (*0x5f36ef0 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = *0x5f36ef0 + (*0x5f36ef0 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = *0x5f36ef8 + *0x5f36ee4;\n                }\n                goto code_r0x05f16783;\n            }\n            iVar11 = *0x5f36ee8 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (*0x5f36eec >> 0x1f & 0x1fU) + *0x5f36eec >> 5;\n            uVar8 = 0x1f - (*0x5f36eec & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x05f1658d;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x05f1658d:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = *0x5f36ef0 + 1;\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x05f162d2:\n        iVar15 = 0;\n    }\ncode_r0x05f16783:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x5f36ef4 == 0x40) {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (*0x5f36ef4 == 0x20) {\n        *arg_ch = uVar16;\n    }\n    fcn.05f07768(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3247
    },
    "05f19909": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.05f19909(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint var_24h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (**0x5f52488 == 0) {\n        fcn.05f1827e(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    var_ch = 0;\n    var_8h = var_8h & 0xffff0000;\n    puVar2 = *0x5f52488 + 1;\n    uVar5 = **0x5f52488;\n    uVar4 = 0xffffffff;\n    var_1h._0_1_ = 0;\n    if (0x4e < uVar5) {\n        if (uVar5 == 0x4f) {\n            *0x5f52488 = puVar2;\n            fcn.05f18014(\"long \");\n            puVar2 = *0x5f52488;\n            goto code_r0x05f19b8a;\n        }\n        if (uVar5 < 0x50) goto code_r0x05f19b58;\n        if (uVar5 < 0x54) {\n            uVar4 = uVar5 & 3;\n            *0x5f52488 = puVar2;\n            goto code_r0x05f19b97;\n        }\n        if (uVar5 == 0x58) {\n            pcVar6 = \"void\";\n            goto code_r0x05f1996b;\n        }\n        if (uVar5 != 0x5f) goto code_r0x05f19b58;\n        uVar3 = *puVar2;\n        puVar2 = *0x5f52488 + 2;\n        uVar4 = uVar3;\n        if (uVar4 < 0x4e) {\n            if (uVar4 < 0x4c) {\n                if (uVar4 < 0x48) {\n                    if (uVar4 < 0x46) {\n                        if (uVar4 == 0) {\n                            *0x5f52488 = *0x5f52488 + 1;\n                            fcn.05f18046(1);\n                            goto code_r0x05f19ba3;\n                        }\n                        if (uVar4 == 0x24) {\n                            *0x5f52488 = puVar2;\n                            uVar7 = fcn.05f19909(&var_1ch, arg_ch);\n                            fcn.05f1825a(arg_8h, \"__w64 \", uVar7);\n                            return arg_8h;\n                        }\n                        if (1 < uVar4 - 0x44) goto code_r0x05f19abc;\n                        pcVar6 = \"__int8\";\n                    }\n                    else {\n                        pcVar6 = \"__int16\";\n                    }\n                }\n                else if (uVar4 < 0x4a) {\n                    pcVar6 = \"__int32\";\n                }\n                else if (uVar4 < 0x4c) {\n                    pcVar6 = \"__int64\";\n                }\n                else {\ncode_r0x05f19abc:\n                    pcVar6 = \"UNKNOWN\";\n                }\n            }\n            else {\n                pcVar6 = \"__int128\";\n            }\n        }\n        else if (uVar4 == 0x4e) {\n            pcVar6 = \"bool\";\n        }\n        else {\n            if (uVar4 == 0x4f) {\n                uVar4 = 0xfffffffe;\n                *0x5f52488 = puVar2;\n                goto code_r0x05f19add;\n            }\n            if (uVar4 == 0x52) {\n                pcVar6 = \"<unknown>\";\n            }\n            else {\n                if (uVar4 != 0x57) {\n                    if (1 < uVar4 - 0x58) goto code_r0x05f19abc;\n                    *0x5f52488 = *0x5f52488 + 1;\n                    piVar1 = fcn.05f1a839(&var_14h);\n                    var_14h = *piVar1;\n                    var_10h = piVar1[1];\n                    goto joined_r0x05f19aa9;\n                }\n                pcVar6 = \"wchar_t\";\n            }\n        }\n        *0x5f52488 = puVar2;\n        fcn.05f18014(pcVar6);\n        goto code_r0x05f19ba3;\n    }\n    // switch table (11 cases) at 0x5f19cbd\n    switch(uVar5) {\n    case 0x43:\n    case 0x44:\n    case 0x45:\n        pcVar6 = \"char\";\n        break;\n    case 0x46:\n    case 0x47:\n        pcVar6 = \"short\";\n        break;\n    case 0x48:\n    case 0x49:\n        pcVar6 = 0x5f31ee4;\n        break;\n    case 0x4a:\n    case 0x4b:\n        pcVar6 = \"long\";\n        break;\n    case 0x4c:\ncode_r0x05f19b58:\n        piVar1 = fcn.05f1a839(&var_24h);\n        var_14h = *piVar1;\n        var_10h = piVar1[1];\n        uVar3 = var_1h;\njoined_r0x05f19aa9:\n        var_ch = var_14h;\n        var_8h = var_10h;\n        if (var_14h == 0) goto code_r0x05f19aaf;\n        goto code_r0x05f19ba3;\n    case 0x4d:\n        pcVar6 = \"float\";\n        break;\n    default:\ncode_r0x05f19b8a:\n        *0x5f52488 = puVar2;\n        fcn.05f18444(\"double\");\ncode_r0x05f19b97:\n        uVar3 = var_1h;\n        if (uVar4 != 0xffffffff) {\ncode_r0x05f19add:\n            var_ch = 0;\n            var_8h = var_8h & 0xffff0000;\n            var_1ch = *arg_ch;\n            var_18h = arg_ch[1];\n            if (uVar4 != 0xfffffffe) {\n                if (*arg_ch == 0) {\n                    if ((uVar4 & 1) == 0) {\n                        if ((uVar4 & 2) != 0) {\n                            fcn.05f18014(\"volatile\");\n                        }\n                    }\n                    else {\n                        fcn.05f18014(\"const\");\n                        if ((uVar4 & 2) != 0) {\n                            fcn.05f18444(\" volatile\");\n                        }\n                    }\n                }\n                fcn.05f1baa3(arg_8h, &var_ch, &var_1ch, 0x5f317b4);\n                return arg_8h;\n            }\n            var_18h = var_18h | 0x800;\n            fcn.05f1baa3(&var_14h, &var_ch, &var_1ch, 0x5f31776);\n            if ((var_10h & 0x800) == 0) {\n                fcn.05f18444(0x5f317a0);\n            }\ncode_r0x05f19aaf:\n            *arg_8h = var_14h;\n            arg_8h[1] = var_10h;\n            return arg_8h;\n        }\n        goto code_r0x05f19ba3;\n    }\ncode_r0x05f1996b:\n    *0x5f52488 = puVar2;\n    fcn.05f18014(pcVar6);\n    uVar3 = var_1h;\ncode_r0x05f19ba3:\n    if (uVar5 == 0x43) {\n        pcVar6 = \"signed \";\n    }\n    else {\n        if (((((uVar5 != 0x45) && (uVar5 != 0x47)) && (uVar5 != 0x49)) && (uVar5 != 0x4b)) &&\n           ((uVar5 != 0x5f ||\n            (((uVar3 != 0x45 && (uVar3 != 0x47)) && ((uVar3 != 0x49 && ((uVar3 != 0x4b && (uVar3 != 0x4d))))))))))\n        goto code_r0x05f19c0f;\n        pcVar6 = \"unsigned \";\n    }\n    puVar8 = &var_1ch;\n    fcn.05f17cda(pcVar6);\n    fcn.05f182a2(pcVar6, puVar8);\n    var_ch = var_1ch;\n    var_8h = var_18h;\ncode_r0x05f19c0f:\n    if (*arg_ch != 0) {\n        puVar8 = &var_1ch;\n        uVar7 = 0x20;\n        fcn.05f17c61(0x20);\n        fcn.05f182a2(uVar7, puVar8);\n        fcn.05f1834c(&var_1ch);\n    }\n    *arg_8h = var_ch;\n    arg_8h[1] = var_8h;\n    return arg_8h;\n}\n",
        "token_count": 2275
    },
    "05f21108": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x05f21412)\n// WARNING: Removing unreachable block (ram,0x05f2141b)\n// WARNING: Removing unreachable block (ram,0x05f2184f)\n// WARNING: Removing unreachable block (ram,0x05f21478)\n// WARNING: Removing unreachable block (ram,0x05f21496)\n// WARNING: Removing unreachable block (ram,0x05f2147d)\n// WARNING: Removing unreachable block (ram,0x05f21484)\n// WARNING: Removing unreachable block (ram,0x05f21489)\n// WARNING: Removing unreachable block (ram,0x05f21499)\n// WARNING: Removing unreachable block (ram,0x05f21845)\n// WARNING: Removing unreachable block (ram,0x05f214a1)\n// WARNING: Removing unreachable block (ram,0x05f214a6)\n// WARNING: Removing unreachable block (ram,0x05f214ad)\n// WARNING: Removing unreachable block (ram,0x05f214b0)\n// WARNING: Removing unreachable block (ram,0x05f214c8)\n// WARNING: Removing unreachable block (ram,0x05f214ca)\n// WARNING: Removing unreachable block (ram,0x05f214d4)\n// WARNING: Removing unreachable block (ram,0x05f214d7)\n// WARNING: Removing unreachable block (ram,0x05f214de)\n// WARNING: Removing unreachable block (ram,0x05f214e1)\n// WARNING: Removing unreachable block (ram,0x05f21837)\n// WARNING: Removing unreachable block (ram,0x05f21855)\n// WARNING: Removing unreachable block (ram,0x05f214ed)\n// WARNING: Removing unreachable block (ram,0x05f21828)\n// WARNING: Removing unreachable block (ram,0x05f214f9)\n// WARNING: Removing unreachable block (ram,0x05f21509)\n// WARNING: Removing unreachable block (ram,0x05f2150b)\n// WARNING: Removing unreachable block (ram,0x05f21515)\n// WARNING: Removing unreachable block (ram,0x05f2151e)\n// WARNING: Removing unreachable block (ram,0x05f2180e)\n// WARNING: Removing unreachable block (ram,0x05f21529)\n// WARNING: Removing unreachable block (ram,0x05f21540)\n// WARNING: Removing unreachable block (ram,0x05f21552)\n// WARNING: Removing unreachable block (ram,0x05f21563)\n// WARNING: Removing unreachable block (ram,0x05f215a2)\n// WARNING: Removing unreachable block (ram,0x05f215ab)\n// WARNING: Removing unreachable block (ram,0x05f217eb)\n// WARNING: Removing unreachable block (ram,0x05f215b9)\n// WARNING: Removing unreachable block (ram,0x05f215cb)\n// WARNING: Removing unreachable block (ram,0x05f215d0)\n// WARNING: Removing unreachable block (ram,0x05f215dd)\n// WARNING: Removing unreachable block (ram,0x05f215e3)\n// WARNING: Removing unreachable block (ram,0x05f215e9)\n// WARNING: Removing unreachable block (ram,0x05f215f4)\n// WARNING: Removing unreachable block (ram,0x05f215f9)\n// WARNING: Removing unreachable block (ram,0x05f21606)\n// WARNING: Removing unreachable block (ram,0x05f2160b)\n// WARNING: Removing unreachable block (ram,0x05f215c3)\n// WARNING: Removing unreachable block (ram,0x05f21802)\n// WARNING: Removing unreachable block (ram,0x05f21808)\n// WARNING: Removing unreachable block (ram,0x05f2160f)\n// WARNING: Removing unreachable block (ram,0x05f2161d)\n// WARNING: Removing unreachable block (ram,0x05f21624)\n// WARNING: Removing unreachable block (ram,0x05f21630)\n// WARNING: Removing unreachable block (ram,0x05f21650)\n// WARNING: Removing unreachable block (ram,0x05f21655)\n// WARNING: Removing unreachable block (ram,0x05f2165a)\n// WARNING: Removing unreachable block (ram,0x05f2165d)\n// WARNING: Removing unreachable block (ram,0x05f21664)\n// WARNING: Removing unreachable block (ram,0x05f21667)\n// WARNING: Removing unreachable block (ram,0x05f21673)\n// WARNING: Removing unreachable block (ram,0x05f2167c)\n// WARNING: Removing unreachable block (ram,0x05f2168b)\n// WARNING: Removing unreachable block (ram,0x05f216a2)\n// WARNING: Removing unreachable block (ram,0x05f216a6)\n// WARNING: Removing unreachable block (ram,0x05f216d8)\n// WARNING: Removing unreachable block (ram,0x05f216dd)\n// WARNING: Removing unreachable block (ram,0x05f216e9)\n// WARNING: Removing unreachable block (ram,0x05f216f8)\n// WARNING: Removing unreachable block (ram,0x05f216fe)\n// WARNING: Removing unreachable block (ram,0x05f216ff)\n// WARNING: Removing unreachable block (ram,0x05f2172a)\n// WARNING: Removing unreachable block (ram,0x05f21734)\n// WARNING: Removing unreachable block (ram,0x05f21746)\n// WARNING: Removing unreachable block (ram,0x05f2174a)\n// WARNING: Removing unreachable block (ram,0x05f21754)\n// WARNING: Removing unreachable block (ram,0x05f21762)\n// WARNING: Removing unreachable block (ram,0x05f2179e)\n// WARNING: Removing unreachable block (ram,0x05f2176a)\n// WARNING: Removing unreachable block (ram,0x05f21795)\n// WARNING: Removing unreachable block (ram,0x05f21775)\n// WARNING: Removing unreachable block (ram,0x05f2178d)\n// WARNING: Removing unreachable block (ram,0x05f21786)\n// WARNING: Removing unreachable block (ram,0x05f21799)\n// WARNING: Removing unreachable block (ram,0x05f217a2)\n// WARNING: Removing unreachable block (ram,0x05f217a5)\n// WARNING: Removing unreachable block (ram,0x05f217d1)\n// WARNING: Removing unreachable block (ram,0x05f217b2)\n// WARNING: Removing unreachable block (ram,0x05f2180b)\n// WARNING: Removing unreachable block (ram,0x05f21816)\n// WARNING: Removing unreachable block (ram,0x05f2185a)\n// WARNING: Variable defined which should be unmapped: var_80h\n\nvoid __cdecl\nfcn.05f21108(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.05f0b528();\n        *puVar2 = 0x16;\n        fcn.05f0a63b();\n        fcn.05f07768(arg_8h);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x05f21197. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x5f21880\n    (**0x5f21880)();\n    return;\n}\n",
        "token_count": 1943
    },
    "05f2aa0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.05f2aa0b(uint8_t *arg_8h, uint8_t **arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint8_t *arg_ch_00;\n    int32_t var_2ch;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x5f36008 ^ &stack0xfffffffc;\n    fcn.05f08385(arg_10h);\n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    iVar4 = var_2ch;\n    arg_ch_00 = arg_8h;\n    if (arg_8h == NULL) {\n        puVar1 = fcn.05f0b528();\n        *puVar1 = 0x16;\n        fcn.05f0a63b();\n    }\n    else {\n        while( true ) {\n            if (*(iVar4 + 0x74) < 2) {\n                uVar2 = *(*(iVar4 + 0x90) + *arg_ch_00 * 2) & 8;\n            }\n            else {\n                uVar2 = fcn.05f20ffc(*arg_ch_00, 8, &var_2ch);\n                iVar4 = var_2ch;\n            }\n            if (uVar2 == 0) break;\n            arg_ch_00 = arg_ch_00 + 1;\n        }\n        puVar3 = fcn.05f2b29f(&var_1ch, arg_ch_00, &var_2ch);\n        if (arg_ch != NULL) {\n            *arg_ch = arg_ch_00 + puVar3[1];\n        }\n        if ((*puVar3 & 0x240) == 0) {\n            if ((*puVar3 & 0x81) == 0) {\n                if (((*puVar3 & 0x100) != 0) && (*(puVar3 + 4) == 0.0)) {\n                    puVar1 = fcn.05f0b528();\n                    *puVar1 = 0x22;\n                }\n            }\n            else {\n                puVar1 = fcn.05f0b528();\n                *puVar1 = 0x22;\n            }\n        }\n        else if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n    }\n    if (var_20h != '\\0') {\n        *(var_24h + 0x70) = *(var_24h + 0x70) & 0xfffffffd;\n    }\n    fcn.05f07768(unaff_EBX);\n    return;\n}\n",
        "token_count": 655
    },
    "05f29dde": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f29dde(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x5f52508 == 0) {\n        arg_8h_00 = 0x5f368e8;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.05f29b4e(arg_8h_00, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 124
    },
    "05f29e35": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f29e35(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x5f52508 == 0) {\n        arg_8h_00 = 0x5f368e8;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.05f29b4e(arg_8h_00, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 125
    },
    "05f2b108": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f2b108(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x5f52508 == 0) {\n        arg_8h_00 = 0x5f368e8;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.05f2ad85(arg_8h_00, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 124
    },
    "05f2b15f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f2b15f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x5f52508 == 0) {\n        arg_8h_00 = 0x5f368e8;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.05f2ad85(arg_8h_00, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 125
    },
    "05f044b0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f044b0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.05f03400();\n    if ((arg_8h & 1) != 0) {\n        fcn.05f08048(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "05f071c0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f071c0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.05f06ee0();\n    if ((arg_8h & 1) != 0) {\n        fcn.05f08048(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 82
    },
    "05f11a7e": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.05f11a7e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.05f0a280(0x5f34af8, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.05f0b4f4();\n        *puVar1 = 0;\n        puVar1 = fcn.05f0b528();\n        *puVar1 = 9;\n    }\n    else {\n        if ((arg_8h_00 < 0) || (*0x5f53548 <= arg_8h_00)) {\n            puVar1 = fcn.05f0b4f4();\n            *puVar1 = 0;\n        }\n        else {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x5f519a8) + 4 + iVar3) & 1) != 0) {\n                fcn.05f1efb2(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x5f519a8) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.05f0b528();\n                    *puVar1 = 9;\n                    puVar1 = fcn.05f0b4f4();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.05f11b6d(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.05f11b45();\n                goto code_r0x05f11b67;\n            }\n            puVar1 = fcn.05f0b4f4();\n            *puVar1 = 0;\n        }\n        puVar1 = fcn.05f0b528();\n        *puVar1 = 9;\n        fcn.05f0a63b();\n    }\ncode_r0x05f11b67:\n    fcn.05f0a2c5();\n    return;\n}\n",
        "token_count": 683
    },
    "05f1d9dd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.05f1d9dd(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    code *var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    pcVar6 = _sym.imp.KERNEL32.dll_EncodePointer;\n    var_4h = *0x5f36008 ^ &stack0xfffffffc;\n    var_1ch = arg_8h;\n    iVar7 = 0;\n    arg_8h_00 = 0;\n    var_20h = arg_ch;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_EncodePointer)();\n    var_18h = pcVar1;\n    var_14h = fcn.05f0bb58();\n    if (*0x5f524f0 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0x800);\n        if (((iVar2 == 0) &&\n            ((iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0x57 ||\n             (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0),  iVar2 == 0)))) ||\n           (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxW\"),  iVar3 == 0)) goto code_r0x05f1dbb2;\n        *0x5f524f0 = (*pcVar6)(iVar3);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetActiveWindow\");\n        *0x5f524f4 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetLastActivePopup\");\n        *0x5f524f8 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetUserObjectInformationW\");\n        *0x5f52500 = (*pcVar6)(uVar4);\n        pcVar1 = var_18h;\n        if (*0x5f52500 != NULL) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetProcessWindowStation\");\n            *0x5f524fc = (*pcVar6)(uVar4);\n            pcVar1 = var_18h;\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 == 0) {\n        if (var_14h != NULL) {\n            (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x5f524f0);\n            goto code_r0x05f1dbb2;\n        }\n    }\n    else {\n        if (var_1ch != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(var_1ch);\n        }\n        if (var_14h != NULL) goto code_r0x05f1dbb2;\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x5f524fc == pcVar1) || (*0x5f52500 == pcVar1)) {\ncode_r0x05f1db68:\n        if ((((*0x5f524f4 != pcVar1) && (pcVar5 = (*pcVar6)(*0x5f524f4),  pcVar5 != NULL)) &&\n            (iVar7 = (*pcVar5)(),  iVar7 != 0)) &&\n           ((*0x5f524f8 != pcVar1 && (pcVar1 = (*pcVar6)(*0x5f524f8),  pcVar1 != NULL)))) {\n            iVar7 = (*pcVar1)(iVar7);\n        }\n    }\n    else {\n        var_14h = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x5f524fc);\n        var_18h = (*pcVar6)(*0x5f52500);\n        if (((var_14h == NULL) || (var_18h == NULL)) ||\n           (((iVar2 = (*var_14h)(),  iVar2 != 0 && (iVar2 = (*var_18h)(iVar2, 1, &var_10h, 0xc, &var_24h),  iVar2 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x05f1db68;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x5f524f0);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(iVar7, var_1ch, var_20h, arg_10h);\n    }\ncode_r0x05f1dbb2:\n    fcn.05f07768(arg_8h_00);\n    return;\n}\n",
        "token_count": 1233
    },
    "05f01ac0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f01ac0(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    *(in_ECX + 200) = arg_ch & 0xffff;\n    *(in_ECX + 0xcc) = arg_ch >> 0x10 & 0xff;\n    *(in_ECX + 0xd0) = arg_ch >> 0x18;\n    fcn.05f01840(in_ECX, 100, arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 130
    },
    "05f023e0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f023e0(uint hWnd)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint wParam;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x5f36008 ^ &stack0xfffffffc;\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x140, 0, 0);\n    (*_sym.imp.USER32.dll_GetWindowTextW)(hWnd, &lpString, 100);\n    arg_8h = hWnd;\n    iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x158, 0xffffffff, &lpString);\n    if (iVar2 != -1) {\n        (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x14e, iVar2, 0);\n        (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x142, 0, uVar1);\n        fcn.05f01d00();\n    }\n    fcn.05f07768(arg_8h);\n    return;\n}\n",
        "token_count": 293
    },
    "05f02500": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f02500(uint hWnd)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint wParam;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x5f36008 ^ &stack0xfffffffc;\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x140, 0, 0);\n    (*_sym.imp.USER32.dll_GetWindowTextW)(hWnd, &lpString, 100);\n    arg_8h = hWnd;\n    iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x158, 0xffffffff, &lpString);\n    if (iVar2 != -1) {\n        (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x14e, iVar2, 0);\n        (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x142, 0, uVar1);\n    }\n    fcn.05f01d00();\n    fcn.05f07768(arg_8h);\n    return;\n}\n",
        "token_count": 292
    },
    "05f02c20": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.05f02c20(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    var_8h = 0;\n    for (var_14h = 0; var_14h < 0x2e8bfaab; var_14h = var_14h + 1) {\n        if (var_14h % 0xf == 0) {\n            var_8h = var_8h + var_14h * 2;\n        }\n        var_8h = (var_8h >> 3 | var_8h << 0x1d) - 0x155ce;\n    }\n    var_10h = var_8h + 0x2b1e4ca4;\n    for (var_ch = 0; var_ch < 0x1a000; var_ch = var_ch + 1) {\n        var_1h._0_1_ = 0;\n        for (var_18h = 0; var_18h < 100; var_18h = var_18h + 1) {\n            var_1h._0_1_ = var_1h + var_10h + (var_10h >> 8) + (var_10h >> 0x10) + (var_10h >> 0x18);\n        }\n        *(var_ch + 0x5f37248) = *(var_ch + 0x5f37248) ^ var_1h;\n        var_10h = var_10h + var_ch + var_1h;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x1a000, 0x3000, 0x40, 0, uVar1);\n    fcn.05f08ad0(iVar2, 0x5f37248, 0x1a000);\n    (*(var_8h + 0xfad2fb71 + iVar2))();\n    return;\n}\n",
        "token_count": 601
    },
    "05f01b40": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.05f01b40(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return *(param_1 + 200) & 0xffff | (*(param_1 + 0xcc) & 0xff | (*(param_1 + 0xd0) & 0xff) << 8) << 0x10;\n}\n",
        "token_count": 85
    },
    "05f02d90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x05f02ed3)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.05f02d90(uint hDlg)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t *in_FS_OFFSET;\n    float10 fVar3;\n    uint arg_8h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    int32_t var_10ch;\n    uint var_108h;\n    uint hWnd;\n    int32_t var_100h;\n    int32_t var_fch;\n    uint var_f8h;\n    uint *var_f4h;\n    uint var_f0h;\n    uint lpString;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b7a6;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x5f36008 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *in_ECX = hDlg;\n    var_f4h = in_ECX;\n    hWnd = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, 1000, var_10h);\n    arg_8h = 0x3ea;\n    var_f8h = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg);\n    fcn.05f03440();\n    var_4h = 0;\n    iVar1 = fcn.05f04cd0(var_f4h[0x2c], var_f4h + 1, &var_118h);\n    if (iVar1 < 0) {\n        var_4h = 0xffffffff;\n        fcn.05f03530();\n    }\n    else {\n        var_100h = 0;\n        while (iVar1 = fcn.05f03550(),  var_100h != iVar1) {\n            fcn.05f03570(var_100h);\n            uVar2 = fcn.05f03420();\n            (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x143, 0, uVar2);\n            var_100h = var_100h + 1;\n        }\n        var_108h = 0;\n        lpString._0_2_ = 0;\n        for (var_fch = 0; var_fch != 0x14; var_fch = var_fch + 1) {\n            fcn.05f01890(&lpString, 100, L\"%.3G\", SUB84(*(var_fch * 4 + 0x5f331b8), 0));\n            (*_sym.imp.USER32.dll_SendMessageW)(var_f8h, 0x143, 0, &lpString);\n        }\n        fVar3 = (**(*var_f4h[0x2d] + 100))(var_f4h[0x2d]);\n        fcn.05f01890(&lpString, 100, L\"%0.0f\", SUB84(fVar3, 0));\n        (*_sym.imp.USER32.dll_SetWindowTextW)(var_f8h, &lpString);\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(var_f8h, 0x14d, 0xffffffff, &lpString);\n        if (iVar1 == -1) {\n            (*_sym.imp.USER32.dll_SetWindowTextW)(var_f8h, &lpString);\n        }\n        var_10ch = -1;\n        fcn.05f033d0();\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        iVar1 = fcn.05f04e10(var_f4h[0x2d], &var_f0h);\n        if (-1 < iVar1) {\n            uVar2 = fcn.05f03420();\n            var_10ch = (*_sym.imp.USER32.dll_SendMessageW)(hWnd, 0x14d, 0xffffffff, uVar2);\n        }\n        if (var_10ch == -1) {\n            uVar2 = fcn.05f03420();\n            (*_sym.imp.USER32.dll_SetWindowTextW)(hWnd, uVar2);\n        }\n        fcn.05f01fa0();\n        var_4h = var_4h & 0xffffff00;\n        fcn.05f03400();\n        var_4h = 0xffffffff;\n        fcn.05f03530();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.05f07768(arg_8h);\n    return;\n}\n",
        "token_count": 1063
    },
    "05f0cb3b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f0cb3b(int32_t arg_8h)\n\n{\n    if (*0x5f366b8 != -1) {\n        if (arg_8h == 0) {\n            arg_8h = fcn.05f0ba20(*0x5f366b8);\n        }\n        fcn.05f0ba3f(*0x5f366b8, 0);\n        fcn.05f0ca06(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "05f1fac0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10ch\n\nvoid __cdecl fcn.05f1fac0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x5f36008 ^ &stack0xfffffffc;\n    if (((arg_8h < 6) && (arg_ch != 0)) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_ch, 0xffffffff, &var_10ch, 0x83),  iVar1 != 0)) {\n        fcn.05f201b2(arg_8h, &var_10ch);\n    }\n    fcn.05f07768(var_10ch);\n    return;\n}\n",
        "token_count": 197
    },
    "05f05930": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.05f05930(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = fcn.05f05ed0();\n    iVar1 = fcn.05f05910();\n    if (iVar1 - (var_ch >> 1) < var_ch) {\n        var_ch = 0;\n    }\n    else {\n        var_ch = (var_ch >> 1) + var_ch;\n    }\n    var_4h = var_ch;\n    if (var_ch < arg_8h) {\n        var_4h = arg_8h;\n    }\n    return var_4h;\n}\n",
        "token_count": 167
    },
    "05f05b10": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.05f05b10(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = fcn.05f05f30();\n    iVar1 = fcn.05f05af0();\n    if (iVar1 - (var_ch >> 1) < var_ch) {\n        var_ch = 0;\n    }\n    else {\n        var_ch = (var_ch >> 1) + var_ch;\n    }\n    var_4h = var_ch;\n    if (var_ch < arg_8h) {\n        var_4h = arg_8h;\n    }\n    return var_4h;\n}\n",
        "token_count": 169
    },
    "05f1f3c7": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.05f1f3c7(void)\n\n{\n    uint8_t *puVar1;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (unaff_EDI == 0) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x5f519a8) + 4 + (unaff_ESI & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.05f1f46e(unaff_ESI);\n    return;\n}\n",
        "token_count": 140
    },
    "05f17a45": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.05f17a45(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 93
    },
    "05f01020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.05f01020(void)\n\n{\n    fcn.05f01540();\n    fcn.05f07eef(fcn.05f2ba50);\n    return;\n}\n",
        "token_count": 43
    },
    "05f01040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.05f01040(void)\n\n{\n    fcn.05f01620();\n    fcn.05f07eef(fcn.05f2ba40);\n    return;\n}\n",
        "token_count": 43
    },
    "05f01060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.05f01060(void)\n\n{\n    fcn.05f01700();\n    fcn.05f07eef(fcn.05f2ba30);\n    return;\n}\n",
        "token_count": 43
    },
    "05f01190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f01190(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint in_stack_00000010;\n    \n    fcn.05f0854a(CONCAT44(noname_1, arg_8h), CONCAT44(in_stack_00000010, arg_10h));\n    return;\n}\n",
        "token_count": 80
    },
    "05f01be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.05f01be0(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    fcn.05f04100(param_1 + 0xb0);\n    fcn.05f04100(param_1 + 0xb4);\n    return;\n}\n",
        "token_count": 66
    },
    "05f03510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f03510(int32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    return arg_8h * 0xd4 + *in_ECX;\n}\n",
        "token_count": 57
    },
    "05f03570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f03570(int32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    return arg_8h * 0x18 + *in_ECX;\n}\n",
        "token_count": 57
    },
    "05f03d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.05f03d60(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint *arg_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_2h._0_2_ = 0;\n    *(in_ECX + 0x10) = arg_8h;\n    arg_ch = &var_2h;\n    iVar1 = fcn.05f03860();\n    fcn.05f01230(iVar1 + arg_8h * 2, arg_ch);\n    return;\n}\n",
        "token_count": 163
    },
    "05f03da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f03da0(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.05f03760(&var_1h);\n    fcn.05f04200(arg_8h, arg_ch, &var_1h);\n    return;\n}\n",
        "token_count": 94
    },
    "05f03e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f03e00(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.05f03760(&var_1h);\n    fcn.05f04240(arg_8h, arg_ch, &var_1h);\n    return;\n}\n",
        "token_count": 94
    },
    "05f03e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f03e30(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.05f03760(&var_1h);\n    fcn.05f04280(arg_8h, arg_ch, &var_1h);\n    return;\n}\n",
        "token_count": 94
    },
    "05f04060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f04060(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.05f08048(arg_8h);\n    return;\n}\n",
        "token_count": 43
    },
    "05f040a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.05f040a0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.05f040e0(param_1);\n    return;\n}\n",
        "token_count": 43
    },
    "05f04130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f04130(uint *arg_8h, uint arg_ch)\n\n{\n    fcn.05f04180(arg_ch);\n    fcn.05f04100(arg_8h);\n    *arg_8h = arg_ch;\n    return;\n}\n",
        "token_count": 61
    },
    "05f041a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f041a0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.05f041f0(arg_ch);\n    fcn.05f04300(in_ECX, arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 87
    },
    "05f041d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f041d0(uint arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.05f04320(in_ECX, arg_8h);\n    return;\n}\n",
        "token_count": 54
    },
    "05f04200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f04200(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uchar uVar1;\n    uint var_1h;\n    \n    uVar1 = fcn.05f04340(arg_8h, arg_ch);\n    fcn.05f011f0(arg_8h, arg_ch, arg_10h, uVar1);\n    return;\n}\n",
        "token_count": 108
    },
    "05f04240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f04240(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.05f04340(arg_8h, arg_ch);\n    fcn.05f04350(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 93
    },
    "05f04280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f04280(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.05f04340(arg_8h, arg_ch);\n    fcn.05f04380(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 93
    },
    "05f04300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f04300(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    \n    arg_ch_00 = fcn.05f041f0(arg_10h);\n    fcn.05f043b0(arg_ch, arg_ch_00);\n    return;\n}\n",
        "token_count": 76
    },
    "05f04350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f04350(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0xd4) {\n        fcn.05f041d0(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "05f04380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f04380(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x18) {\n        fcn.05f04450(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "05f04450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f04450(uint arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.05f04470(in_ECX, arg_8h);\n    return;\n}\n",
        "token_count": 53
    },
    "05f04e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.05f04e10(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t *var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x5f2b8e0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    iVar1 = (**(*var_8h + 0x50))(var_8h);\n    var_4h = 0;\n    fcn.05f050a0(iVar1 + 1);\n    uVar2 = fcn.05f05080(0);\n    uVar2 = (**(*var_8h + 0x54))(var_8h, uVar2, iVar1 + 1);\n    *in_FS_OFFSET = var_ch_3;\n    return uVar2;\n}\n",
        "token_count": 281
    },
    "05f04ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f04ed0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    int32_t *var_e0h;\n    int32_t *var_dch;\n    uint var_d8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x5f36008 ^ &stack0xfffffffc;\n    var_e8h = *(arg_10h + 200);\n    var_ech = *(arg_10h + 0xcc);\n    var_e4h = *(arg_10h + 0xd0);\n    var_e0h = NULL;\n    var_dch = NULL;\n    iVar1 = fcn.05f04840(arg_8h, arg_ch, &var_e0h);\n    if (-1 < iVar1) {\n        iVar1 = (**(*var_e0h + 0x1c))(var_e0h, var_e8h, var_e4h, var_ech, &var_dch);\n        if (-1 < iVar1) {\n            var_e8h = (**(*var_dch + 0x10))(var_dch);\n            var_ech = (**(*var_dch + 0x18))(var_dch);\n            var_e4h = (**(*var_dch + 0x14))(var_dch);\n        }\n    }\n    fcn.05f04100(&var_dch);\n    fcn.05f04100(&var_e0h);\n    arg_8h_00 = 0x5f33188;\n    fcn.05f01a70(0x5f33188, var_e8h, var_ech, var_e4h);\n    fcn.05f01b40();\n    fcn.05f07768(arg_8h_00);\n    return;\n}\n",
        "token_count": 438
    },
    "05f05030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.05f05030(uint arg_8h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.05f03760(&var_1h);\n    fcn.05f03740(uVar1);\n    fcn.05f037c0(0, 0);\n    uVar1 = fcn.05f041f0(arg_8h);\n    fcn.05f05440(uVar1);\n    return in_ECX;\n}\n",
        "token_count": 143
    },
    "05f050f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.05f050f0(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint *arg_8h_01;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    arg_8h_00 = fcn.05f041f0(arg_8h);\n    cVar1 = fcn.05f05500(arg_8h_00);\n    if (cVar1 == '\\0') {\n        if (in_ECX[1] == in_ECX[2]) {\n            fcn.05f05540(1);\n        }\n        fcn.05f055a0(in_ECX[1], in_ECX[1]);\n        iVar3 = in_ECX[1];\n        arg_8h_01 = &var_2h;\n        fcn.05f03760(arg_8h_01);\n        fcn.05f06390(arg_8h_01, iVar3);\n        in_ECX[1] = in_ECX[1] + 4;\n    }\n    else {\n        iVar2 = fcn.05f041f0(arg_8h);\n        iVar3 = *in_ECX;\n        if (in_ECX[1] == in_ECX[2]) {\n            arg_8h = 1;\n            fcn.05f05540(1);\n        }\n        fcn.05f055a0(in_ECX[1], in_ECX[1], arg_8h, arg_8h_00, iVar2 - iVar3 >> 2);\n        iVar2 = in_ECX[1];\n        iVar3 = &var_2h + 1;\n        fcn.05f03760(iVar3);\n        fcn.05f041a0(iVar3, iVar2);\n        in_ECX[1] = in_ECX[1] + 4;\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "05f05200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.05f05200(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint *arg_8h_01;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    arg_8h_00 = fcn.05f041f0(arg_8h);\n    cVar1 = fcn.05f05500(arg_8h_00);\n    if (cVar1 == '\\0') {\n        if (in_ECX[1] == in_ECX[2]) {\n            fcn.05f055b0(1);\n        }\n        fcn.05f055a0(in_ECX[1], in_ECX[1]);\n        fcn.05f041f0(arg_8h);\n        iVar3 = in_ECX[1];\n        arg_8h_01 = &var_2h;\n        fcn.05f03760(arg_8h_01);\n        fcn.05f063c0(arg_8h_01, iVar3);\n        in_ECX[1] = in_ECX[1] + 0xd4;\n    }\n    else {\n        iVar2 = fcn.05f041f0(arg_8h);\n        iVar3 = *in_ECX;\n        if (in_ECX[1] == in_ECX[2]) {\n            fcn.05f055b0(1);\n        }\n        fcn.05f055a0(in_ECX[1], in_ECX[1]);\n        fcn.05f041f0(((iVar2 - iVar3) / 0xd4) * 0xd4 + *in_ECX);\n        iVar2 = in_ECX[1];\n        iVar3 = &var_2h + 1;\n        fcn.05f03760(iVar3);\n        fcn.05f063c0(iVar3, iVar2);\n        in_ECX[1] = in_ECX[1] + 0xd4;\n    }\n    return;\n}\n",
        "token_count": 490
    },
    "05f05330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.05f05330(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint *arg_8h_01;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    arg_8h_00 = fcn.05f041f0(arg_8h);\n    cVar1 = fcn.05f05500(arg_8h_00);\n    if (cVar1 == '\\0') {\n        if (in_ECX[1] == in_ECX[2]) {\n            fcn.05f05610(1);\n        }\n        fcn.05f055a0(in_ECX[1], in_ECX[1]);\n        iVar3 = in_ECX[1];\n        arg_8h_01 = &var_2h;\n        fcn.05f03760(arg_8h_01);\n        fcn.05f06420(arg_8h_01, iVar3);\n        in_ECX[1] = in_ECX[1] + 0x18;\n    }\n    else {\n        iVar2 = fcn.05f041f0(arg_8h);\n        iVar3 = *in_ECX;\n        if (in_ECX[1] == in_ECX[2]) {\n            arg_8h = 1;\n            fcn.05f05610(1);\n        }\n        fcn.05f055a0(in_ECX[1], in_ECX[1], arg_8h, arg_8h_00, (iVar2 - iVar3) / 0x18);\n        iVar2 = in_ECX[1];\n        iVar3 = &var_2h + 1;\n        fcn.05f03760(iVar3);\n        fcn.05f063f0(iVar3, iVar2);\n        in_ECX[1] = in_ECX[1] + 0x18;\n    }\n    return;\n}\n",
        "token_count": 488
    },
    "05f05440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f05440(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    uint *arg_8h_00;\n    int32_t arg_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h[5] < 8) {\n        fcn.05f04540(in_ECX, arg_8h, arg_8h[4] + 1);\n    }\n    else {\n        arg_8h_00 = &var_1h;\n        arg_ch = in_ECX;\n        fcn.05f03760(arg_8h_00);\n        fcn.05f041a0(arg_8h_00, arg_ch);\n        *arg_8h = 0;\n    }\n    *(in_ECX + 0x10) = arg_8h[4];\n    *(in_ECX + 0x14) = arg_8h[5];\n    fcn.05f037c0(0, 0);\n    return;\n}\n",
        "token_count": 248
    },
    "05f05cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f05cb0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.05f03670();\n    if (uVar2 < arg_ch) {\n        fcn.05f03cd0();\n    }\n    iVar3 = fcn.05f03670();\n    var_8h = iVar3 - arg_ch;\n    if (arg_10h < var_8h) {\n        var_8h = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.05f05f90(arg_ch + var_8h);\n        fcn.05f05fc0(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.05f05db0(var_8h, 0);\n        if (cVar1 != '\\0') {\n            uVar2 = var_8h;\n            iVar3 = fcn.05f03860();\n            iVar3 = iVar3 + arg_ch * 2;\n            arg_8h_00 = fcn.05f03860();\n            fcn.05f01200(arg_8h_00, iVar3, uVar2);\n            fcn.05f03d60(var_8h);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 359
    },
    "05f05f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.05f05f10(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.05f062a0(param_1);\n    return;\n}\n",
        "token_count": 43
    },
    "05f05f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.05f05f70(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.05f062d0(param_1);\n    return;\n}\n",
        "token_count": 43
    },
    "05f06280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06280(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.05f06550(arg_8h);\n    return;\n}\n",
        "token_count": 43
    },
    "05f062b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f062b0(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.05f065a0(arg_8h);\n    return;\n}\n",
        "token_count": 45
    },
    "05f06300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.05f06300(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.05f06370(param_1);\n    return;\n}\n",
        "token_count": 41
    },
    "05f06350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06350(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.05f065e0(arg_8h);\n    return;\n}\n",
        "token_count": 44
    },
    "05f06390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06390(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.05f041f0(arg_ch);\n    fcn.05f06620(in_ECX, arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 86
    },
    "05f063c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f063c0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.05f041f0(arg_ch);\n    fcn.05f06640(in_ECX, arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 87
    },
    "05f063f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f063f0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.05f041f0(arg_ch);\n    fcn.05f06660(in_ECX, arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 87
    },
    "05f06420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06420(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.05f041f0(arg_ch);\n    fcn.05f06680(in_ECX, arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 86
    },
    "05f06450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f06450(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.05f03760(&var_1h);\n    fcn.05f066a0(arg_8h, arg_ch, arg_10h, &var_1h);\n    return;\n}\n",
        "token_count": 105
    },
    "05f06490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f06490(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.05f03760(&var_1h);\n    fcn.05f066f0(arg_8h, arg_ch, arg_10h, &var_1h);\n    return;\n}\n",
        "token_count": 105
    },
    "05f064d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f064d0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.05f03760(&var_1h);\n    fcn.05f06740(arg_8h, arg_ch, arg_10h, &var_1h);\n    return;\n}\n",
        "token_count": 105
    },
    "05f06620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06620(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    \n    arg_ch_00 = fcn.05f041f0(arg_10h);\n    fcn.05f06790(arg_ch, arg_ch_00);\n    return;\n}\n",
        "token_count": 75
    },
    "05f06640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06640(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    \n    arg_ch_00 = fcn.05f041f0(arg_10h);\n    fcn.05f06930(arg_ch, arg_ch_00);\n    return;\n}\n",
        "token_count": 75
    },
    "05f06660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06660(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    \n    arg_ch_00 = fcn.05f041f0(arg_10h);\n    fcn.05f069d0(arg_ch, arg_ch_00);\n    return;\n}\n",
        "token_count": 76
    },
    "05f06680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06680(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    \n    arg_ch_00 = fcn.05f041f0(arg_10h);\n    fcn.05f067d0(arg_ch, arg_ch_00);\n    return;\n}\n",
        "token_count": 76
    },
    "05f066a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f066a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = arg_14h;\n    arg_10h_00 = fcn.05f041f0(arg_10h);\n    arg_ch_00 = fcn.05f041f0(arg_ch);\n    arg_8h_00 = fcn.05f041f0(arg_8h);\n    uVar1 = fcn.05f06a60(arg_8h_00, arg_ch_00, arg_10h_00, uVar1);\n    puVar2 = fcn.05f06ab0(&arg_10h, uVar1);\n    return *puVar2;\n}\n",
        "token_count": 210
    },
    "05f066f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f066f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = arg_14h;\n    arg_10h_00 = fcn.05f041f0(arg_10h);\n    arg_ch_00 = fcn.05f041f0(arg_ch);\n    arg_8h_00 = fcn.05f041f0(arg_8h);\n    uVar1 = fcn.05f06ac0(arg_8h_00, arg_ch_00, arg_10h_00, uVar1);\n    puVar2 = fcn.05f06ab0(&arg_10h, uVar1);\n    return *puVar2;\n}\n",
        "token_count": 210
    },
    "05f06740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f06740(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_10h_00;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = arg_14h;\n    arg_10h_00 = fcn.05f041f0(arg_10h);\n    arg_ch_00 = fcn.05f041f0(arg_ch);\n    arg_8h_00 = fcn.05f041f0(arg_8h);\n    uVar1 = fcn.05f06b10(arg_8h_00, arg_ch_00, arg_10h_00, uVar1);\n    puVar2 = fcn.05f06ab0(&arg_10h, uVar1);\n    return *puVar2;\n}\n",
        "token_count": 209
    },
    "05f068a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.05f068a0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_8h_00 = fcn.05f068f0(&var_1h, in_ECX);\n    fcn.05f068d0(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 115
    },
    "05f06a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f06a60(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uchar uVar1;\n    uint var_1h;\n    \n    uVar1 = fcn.05f04340(arg_8h, arg_10h);\n    fcn.05f06b60(arg_8h, uVar1);\n    fcn.05f06b70(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 131
    },
    "05f06ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f06ac0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint var_1h;\n    \n    uVar1 = fcn.05f04340(arg_8h, arg_10h);\n    uVar2 = fcn.05f06b60(arg_8h, uVar1);\n    fcn.05f06bb0(arg_8h, arg_ch, arg_10h, arg_14h, uVar2);\n    return;\n}\n",
        "token_count": 150
    },
    "05f06b10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.05f06b10(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint var_1h;\n    \n    uVar1 = fcn.05f04340(arg_8h, arg_10h);\n    uVar2 = fcn.05f06b60(arg_8h, uVar1);\n    fcn.05f06c80(arg_8h, arg_ch, arg_10h, arg_14h, uVar2);\n    return;\n}\n",
        "token_count": 150
    },
    "05f06bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.05f06bb0(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch_2;\n    int32_t var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x5f2b9b0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_4h = 0;\n    for (; var_8h != var_ch_2; var_8h = var_8h + 0xd4) {\n        fcn.05f063c0(var_10h_2, var_8h);\n        var_10h_2 = var_10h_2 + 0xd4;\n    }\n    *in_FS_OFFSET = var_ch_3;\n    return var_10h_2;\n}\n",
        "token_count": 255
    },
    "05f06c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.05f06c80(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_ch_2;\n    int32_t var_10h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x5f2b9d0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_4h = 0;\n    for (; var_8h != var_ch_2; var_8h = var_8h + 0x18) {\n        fcn.05f06d40(var_10h_2, var_8h);\n        var_10h_2 = var_10h_2 + 0x18;\n    }\n    *in_FS_OFFSET = var_ch_3;\n    return var_10h_2;\n}\n",
        "token_count": 255
    },
    "05f06d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06d40(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.05f041f0(arg_ch);\n    fcn.05f06d70(in_ECX, arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 88
    },
    "05f06d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06d70(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    \n    arg_ch_00 = fcn.05f041f0(arg_10h);\n    fcn.05f06d90(arg_ch, arg_ch_00);\n    return;\n}\n",
        "token_count": 77
    },
    "05f06e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f06e60(uint arg_8h, uint arg_ch)\n\n{\n    fcn.05f06e20(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 44
    },
    "05f06ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.05f06ee0(code **param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = vtable.GdiTextRenderer.0;\n    fcn.05f04100(param_1 + 1);\n    fcn.05f04100(param_1 + 2);\n    return;\n}\n",
        "token_count": 76
    },
    "05f0eaea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.05f0eaea(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0x5f33e7c; ppcVar1 < 0x5f33e7c; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "05f12726": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f12726(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.05f1f55b(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 56
    },
    "05f1273d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f1273d(uint arg_8h, uint arg_ch)\n\n{\n    fcn.05f1f590(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 48
    },
    "05f12753": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f12753(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.05f1f590(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 55
    },
    "05f1276a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f1276a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.05f1f5ab(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 57
    },
    "05f12845": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.05f12845(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.05f1192a();\n    fcn.05f119d9(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 57
    },
    "05f12858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f12858(uint arg_8h, uint arg_ch)\n\n{\n    fcn.05f1f5ab(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 48
    },
    "05f1b7c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f1b7c5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.05f1baa3(arg_8h, arg_ch, arg_10h, 0x5f317b4);\n    return arg_8h;\n}\n",
        "token_count": 71
    },
    "05f1b7e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f1b7e3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.05f1baa3(arg_8h, arg_ch, arg_10h, 0x5f31776);\n    return arg_8h;\n}\n",
        "token_count": 70
    },
    "05f1f55b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f1f55b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.05f1f5e0(fcn.05f12c25, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 67
    },
    "05f1f576": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f1f576(uint arg_8h, uint arg_ch)\n\n{\n    fcn.05f1f5e0(fcn.05f2416e, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 58
    },
    "05f1f590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f1f590(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.05f1f5e0(fcn.05f2416e, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 66
    },
    "05f1f5ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f1f5ab(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.05f1f5e0(fcn.05f2355a, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 67
    },
    "05f1f5c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f1f5c6(uint arg_8h, uint arg_ch)\n\n{\n    fcn.05f1f5e0(fcn.05f12c25, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 60
    },
    "05f1f5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.05f1f5e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.05f0a280(0x5f34ca8, 0x10);\n    iVar1 = fcn.05f1192a();\n    iVar1 = iVar1 + 0x20;\n    *(unaff_EBP + -0x20) = iVar1;\n    *(unaff_EBP + -0x1c) = 0;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.05f0b528();\n        *puVar2 = 0x16;\n        fcn.05f0a63b();\n    }\n    else {\n        fcn.05f11930(iVar1);\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = fcn.05f11461(iVar1);\n        uVar3 = (**(unaff_EBP + 8))(iVar1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x1c) = uVar3;\n        fcn.05f11430(arg_8h_00, iVar1);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.05f1f665();\n    }\n    fcn.05f0a2c5();\n    return;\n}\n",
        "token_count": 459
    },
    "05f1f66d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f1f66d(uint arg_8h, uint arg_ch)\n\n{\n    fcn.05f1f5e0(fcn.05f2355a, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 59
    },
    "05f20f65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f20f65(uint arg_8h, uint arg_ch)\n\n{\n    fcn.05f2a0e3(arg_8h, 0, 10, arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "05f20f85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f20f85(uint arg_8h, uint arg_ch)\n\n{\n    fcn.05f29e08(arg_8h, 0, 10, arg_ch);\n    return;\n}\n",
        "token_count": 50
    },
    "05f20fb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f20fb9(uint arg_8h)\n\n{\n    fcn.05f29dde(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 42
    },
    "05f29e08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f29e08(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.05f29b4e(arg_14h, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 70
    },
    "05f29e5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f29e5f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.05f29b4e(arg_14h, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 71
    },
    "05f29ea2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f29ea2(uint arg_8h, uint arg_ch)\n\n{\n    fcn.05f2aa0b(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 48
    },
    "05f2a615": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f2a615(uint arg_8h)\n\n{\n    fcn.05f2ad55(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 43
    },
    "05f2a60c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f2a60c(uint arg_8h, uint arg_ch)\n\n{\n    fcn.05f2ad55(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 48
    },
    "05f2b132": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f2b132(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.05f2ad85(arg_14h, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 69
    },
    "05f2b189": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f2b189(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.05f2ad85(arg_14h, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 69
    },
    "05f096ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.05f096ce(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.05f0fe2d(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 113
    },
    "05f05500": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.05f05500(uint32_t arg_8h)\n\n{\n    uint32_t *in_ECX;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if ((arg_8h < in_ECX[1]) && (in_ECX = *in_ECX,  in_ECX <= arg_8h)) {\n        var_8h = 1;\n    }\n    else {\n        var_8h = 0;\n    }\n    return in_ECX & 0xffffff00 | var_8h;\n}\n",
        "token_count": 126
    },
    "05f25b55": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f25b55(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\ncode_r0x05f271a2:\n        if (uVar3 == uVar1) {\n            return 0;\n        }\n        return (0 < uVar3 - uVar1) * 2 + -1;\n    }\n    if (arg_10h == 2) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        goto code_r0x05f271a2;\n    }\n    if (arg_10h == 3) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        goto code_r0x05f271a2;\n    }\n    if (arg_10h == 4) {\n        uVar1 = *arg_ch;\n        uVar3 = *arg_8h;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n        goto code_r0x05f271a2;\n    }\n    if (0x1f < arg_10h) {\n        do {\n            if (*arg_8h == *arg_ch) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = *arg_8h & 0xff;\n                uVar1 = *arg_ch;\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 1);\n                uVar1 = *(arg_ch + 1);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 2);\n                uVar1 = *(arg_ch + 2);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 3) - *(arg_ch + 3);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[1] == arg_ch[1]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[1] & 0xff;\n                uVar1 = *(arg_ch + 1);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 5);\n                uVar1 = *(arg_ch + 5);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 6);\n                uVar1 = *(arg_ch + 6);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 7) - *(arg_ch + 7);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[2] == arg_ch[2]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[2] & 0xff;\n                uVar1 = *(arg_ch + 2);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 9);\n                uVar1 = *(arg_ch + 9);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 10);\n                uVar1 = *(arg_ch + 10);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[3] == arg_ch[3]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[3] & 0xff;\n                uVar1 = *(arg_ch + 3);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0xd);\n                uVar1 = *(arg_ch + 0xd);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0xe);\n                uVar1 = *(arg_ch + 0xe);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[4] == arg_ch[4]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar1 = *(arg_ch + 4);\n                uVar3 = *(arg_8h + 4);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x11);\n                uVar1 = *(arg_ch + 0x11);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x12);\n                uVar1 = *(arg_ch + 0x12);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[5] == arg_ch[5]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[5] & 0xff;\n                uVar1 = *(arg_ch + 5);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x15);\n                uVar1 = *(arg_ch + 0x15);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x16);\n                uVar1 = *(arg_ch + 0x16);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[6] == arg_ch[6]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[6] & 0xff;\n                uVar1 = *(arg_ch + 6);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x19);\n                uVar1 = *(arg_ch + 0x19);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1a);\n                uVar1 = *(arg_ch + 0x1a);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[7] == arg_ch[7]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[7] & 0xff;\n                uVar1 = *(arg_ch + 7);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1d);\n                uVar1 = *(arg_ch + 0x1d);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1e);\n                uVar1 = *(arg_ch + 0x1e);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            arg_10h = arg_10h - 0x20;\n            arg_8h = arg_8h + 8;\n            arg_ch = arg_ch + 8;\n        } while (0x1f < arg_10h);\n    }\n    // switch table (32 cases) at 0x5f2724d\n    switch(arg_10h) {\n    default:\n        goto code_r0x05f26457;\n    case 1:\n        goto code_r0x05f26873;\n    case 2:\n        goto code_r0x05f26cb8;\n    case 3:\n        goto code_r0x05f270ee;\n    case 4:\n        goto code_r0x05f263d4;\n    case 5:\n        goto code_r0x05f267dc;\n    case 6:\n        goto code_r0x05f26c21;\n    case 7:\n        goto code_r0x05f27057;\n    case 8:\n        goto code_r0x05f2633d;\n    case 9:\n        goto code_r0x05f26744;\n    case 10:\n        goto code_r0x05f26b89;\n    case 0xb:\n        goto code_r0x05f26fc0;\n    case 0xc:\n        goto code_r0x05f262a5;\n    case 0xd:\n        goto code_r0x05f266ad;\n    case 0xe:\n        goto code_r0x05f26af2;\n    case 0xf:\n        goto code_r0x05f26f28;\n    case 0x10:\n        goto code_r0x05f2620e;\n    case 0x11:\n        goto code_r0x05f26616;\n    case 0x12:\n        goto code_r0x05f26a5b;\n    case 0x13:\n        goto code_r0x05f26e91;\n    case 0x14:\n        goto code_r0x05f26177;\n    case 0x15:\n        goto code_r0x05f2657f;\n    case 0x16:\n        goto code_r0x05f269c4;\n    case 0x17:\n        goto code_r0x05f26dfa;\n    case 0x18:\n        goto code_r0x05f260e0;\n    case 0x1a:\n        goto code_r0x05f2692d;\n    case 0x1b:\n        goto code_r0x05f26d63;\n    case 0x1c:\n        uVar1 = *(arg_8h + (arg_10h - 0x1c));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1c))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1b));\n            uVar1 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1a));\n            uVar1 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x19)) - *(arg_ch + (arg_10h - 0x19));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f260e0:\n        uVar1 = *(arg_8h + (arg_10h - 0x18));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x18))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x17));\n            uVar1 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x16));\n            uVar1 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x15)) - *(arg_ch + (arg_10h - 0x15));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26177:\n        uVar1 = *(arg_8h + (arg_10h - 0x14));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x14))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x13));\n            uVar1 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x12));\n            uVar1 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x11)) - *(arg_ch + (arg_10h - 0x11));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f2620e:\n        uVar1 = *(arg_8h + (arg_10h - 0x10));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x10))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xe));\n            uVar1 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xd)) - *(arg_ch + (arg_10h - 0xd));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f262a5:\n        if (*(arg_8h + (arg_10h - 0xc)) == *(arg_ch + (arg_10h - 0xc))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xb));\n            uVar1 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 9)) - *(arg_ch + (arg_10h - 9));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f2633d:\n        uVar1 = *(arg_8h + (arg_10h - 8));\n        if (uVar1 == *(arg_ch + (arg_10h - 8))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 8));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 7));\n            uVar1 = *(arg_ch + (arg_10h - 7));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 6));\n            uVar1 = *(arg_ch + (arg_10h - 6));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 5)) - *(arg_ch + (arg_10h - 5));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f263d4:\n        uVar1 = *(arg_8h + (arg_10h - 4));\n        if (uVar1 == *(arg_ch + (arg_10h - 4))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 4));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 3));\n            uVar1 = *(arg_ch + (arg_10h - 3));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 2));\n            uVar1 = *(arg_ch + (arg_10h - 2));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 1)) - *(arg_ch + (arg_10h - 1));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 == 0) {\ncode_r0x05f26457:\n            iVar2 = 0;\n        }\n        return iVar2;\n    case 0x1d:\n        uVar1 = *(arg_8h + (arg_10h - 0x1d));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1d))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1c));\n            uVar1 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1b));\n            uVar1 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1a)) - *(arg_ch + (arg_10h - 0x1a));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    case 0x19:\n        uVar1 = *(arg_8h + (arg_10h - 0x19));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x19))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x18));\n            uVar1 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x17));\n            uVar1 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x16)) - *(arg_ch + (arg_10h - 0x16));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f2657f:\n        uVar1 = *(arg_8h + (arg_10h - 0x15));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x15))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x14));\n            uVar1 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x13));\n            uVar1 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x12)) - *(arg_ch + (arg_10h - 0x12));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26616:\n        uVar1 = *(arg_8h + (arg_10h - 0x11));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x11))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x10));\n            uVar1 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xe)) - *(arg_ch + (arg_10h - 0xe));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f266ad:\n        uVar1 = *(arg_8h + (arg_10h - 0xd));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xd))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xb));\n            uVar1 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 10)) - *(arg_ch + (arg_10h - 10));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26744:\n        if (*(arg_8h + (arg_10h - 9)) == *(arg_ch + (arg_10h - 9))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 8));\n            uVar1 = *(arg_ch + (arg_10h - 8));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 7));\n            uVar1 = *(arg_ch + (arg_10h - 7));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 6)) - *(arg_ch + (arg_10h - 6));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f267dc:\n        uVar1 = *(arg_8h + (arg_10h - 5));\n        if (uVar1 == *(arg_ch + (arg_10h - 5))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 5));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 4));\n            uVar1 = *(arg_ch + (arg_10h - 4));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 3));\n            uVar1 = *(arg_ch + (arg_10h - 3));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 2)) - *(arg_ch + (arg_10h - 2));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\ncode_r0x05f2686b:\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26873:\n        uVar1 = *(arg_ch + (arg_10h - 1));\n        uVar3 = *(arg_8h + (arg_10h - 1));\n        if (uVar3 == uVar1) {\n            return 0;\n        }\n        return (0 < uVar3 - uVar1) * 2 + -1;\n    case 0x1e:\n        uVar1 = *(arg_8h + (arg_10h - 0x1e));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1e))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1d));\n            uVar1 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1c));\n            uVar1 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1b)) - *(arg_ch + (arg_10h - 0x1b));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f2692d:\n        uVar1 = *(arg_8h + (arg_10h - 0x1a));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1a))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x19));\n            uVar1 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x18));\n            uVar1 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x17)) - *(arg_ch + (arg_10h - 0x17));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f269c4:\n        uVar1 = *(arg_8h + (arg_10h - 0x16));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x16))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x15));\n            uVar1 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x14));\n            uVar1 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x13)) - *(arg_ch + (arg_10h - 0x13));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26a5b:\n        uVar1 = *(arg_8h + (arg_10h - 0x12));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x12))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x11));\n            uVar1 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x10));\n            uVar1 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xf)) - *(arg_ch + (arg_10h - 0xf));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26af2:\n        uVar1 = *(arg_8h + (arg_10h - 0xe));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xe))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xd));\n            uVar1 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xb)) - *(arg_ch + (arg_10h - 0xb));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26b89:\n        if (*(arg_8h + (arg_10h - 10)) == *(arg_ch + (arg_10h - 10))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar1 = *(arg_ch + (arg_10h - 8));\n            uVar3 = *(arg_8h + (arg_10h - 8));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 7)) - *(arg_ch + (arg_10h - 7));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26c21:\n        uVar1 = *(arg_8h + (arg_10h - 6));\n        if (uVar1 == *(arg_ch + (arg_10h - 6))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 6));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 5));\n            uVar1 = *(arg_ch + (arg_10h - 5));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 4));\n            uVar1 = *(arg_ch + (arg_10h - 4));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26cb8:\n        if (*(arg_8h + (arg_10h - 2)) != *(arg_ch + (arg_10h - 2))) {\ncode_r0x05f27110:\n            uVar1 = *(arg_ch + (arg_10h - 2));\n            uVar3 = *(arg_8h + (arg_10h - 2));\n            if (uVar3 == uVar1) goto code_r0x05f26873;\n            iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1;\n            goto code_r0x05f2686b;\n        }\n        goto code_r0x05f26457;\n    case 0x1f:\n        if (*(arg_8h + (arg_10h - 0x1f)) == *(arg_ch + (arg_10h - 0x1f))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0x1f));\n            uVar3 = *(arg_8h + (arg_10h - 0x1f));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1e));\n            uVar1 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1d));\n            uVar1 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1c)) - *(arg_ch + (arg_10h - 0x1c));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26d63:\n        uVar1 = *(arg_8h + (arg_10h - 0x1b));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1b))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1a));\n            uVar1 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x19));\n            uVar1 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x18)) - *(arg_ch + (arg_10h - 0x18));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26dfa:\n        uVar1 = *(arg_8h + (arg_10h - 0x17));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x17))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x16));\n            uVar1 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x15));\n            uVar1 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x14)) - *(arg_ch + (arg_10h - 0x14));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26e91:\n        uVar1 = *(arg_8h + (arg_10h - 0x13));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x13))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x12));\n            uVar1 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x11));\n            uVar1 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x10)) - *(arg_ch + (arg_10h - 0x10));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26f28:\n        if (*(arg_8h + (arg_10h - 0xf)) == *(arg_ch + (arg_10h - 0xf))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xe));\n            uVar1 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xd));\n            uVar1 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xc)) - *(arg_ch + (arg_10h - 0xc));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f26fc0:\n        uVar1 = *(arg_8h + (arg_10h - 0xb));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xb))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 8)) - *(arg_ch + (arg_10h - 8));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f27057:\n        uVar1 = *(arg_8h + (arg_10h - 7));\n        if (uVar1 == *(arg_ch + (arg_10h - 7))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 7));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 6));\n            uVar1 = *(arg_ch + (arg_10h - 6));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 5));\n            uVar1 = *(arg_ch + (arg_10h - 5));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 4)) - *(arg_ch + (arg_10h - 4));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x05f270ee:\n        uVar3 = *(arg_8h + (arg_10h - 3));\n        uVar1 = *(arg_ch + (arg_10h - 3));\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        goto code_r0x05f27110;\n    }\n}\n",
        "token_count": 16887
    },
    "05f272cd": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.05f272cd(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar3 = 0;\n    if (0x1f < arg_10h) {\n        do {\n            if (*arg_8h == *arg_ch) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = *arg_8h & 0xff;\n                uVar2 = *arg_ch;\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 1);\n                uVar2 = *(arg_ch + 1);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 2);\n                uVar2 = *(arg_ch + 2);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 3) - *(arg_ch + 3);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[1] == arg_ch[1]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[1] & 0xff;\n                uVar2 = *(arg_ch + 1);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 5);\n                uVar2 = *(arg_ch + 5);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 6);\n                uVar2 = *(arg_ch + 6);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 7) - *(arg_ch + 7);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[2] == arg_ch[2]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[2] & 0xff;\n                uVar2 = *(arg_ch + 2);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 9);\n                uVar2 = *(arg_ch + 9);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 10);\n                uVar2 = *(arg_ch + 10);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[3] == arg_ch[3]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[3] & 0xff;\n                uVar2 = *(arg_ch + 3);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0xd);\n                uVar2 = *(arg_ch + 0xd);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0xe);\n                uVar2 = *(arg_ch + 0xe);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[4] == arg_ch[4]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[4] & 0xff;\n                uVar2 = *(arg_ch + 4);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x11);\n                uVar2 = *(arg_ch + 0x11);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x12);\n                uVar2 = *(arg_ch + 0x12);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[5] == arg_ch[5]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[5] & 0xff;\n                uVar2 = *(arg_ch + 5);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x15);\n                uVar2 = *(arg_ch + 0x15);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x16);\n                uVar2 = *(arg_ch + 0x16);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[6] == arg_ch[6]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[6] & 0xff;\n                uVar2 = *(arg_ch + 6);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x19);\n                uVar2 = *(arg_ch + 0x19);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x1a);\n                uVar2 = *(arg_ch + 0x1a);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[7] == arg_ch[7]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[7] & 0xff;\n                uVar2 = *(arg_ch + 7);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x1d);\n                uVar2 = *(arg_ch + 0x1d);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x1e);\n                uVar2 = *(arg_ch + 0x1e);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            arg_10h = arg_10h - 0x20;\n            arg_8h = arg_8h + 8;\n            arg_ch = arg_ch + 8;\n        } while (0x1f < arg_10h);\n    }\n    // switch table (32 cases) at 0x5f289e9\n    switch(arg_10h) {\n    case 1:\n        goto code_r0x05f28083;\n    case 2:\n        goto code_r0x05f284fe;\n    case 3:\n        goto code_r0x05f2899a;\n    case 4:\n        goto code_r0x05f27bbc;\n    case 5:\n        goto code_r0x05f27ffd;\n    case 6:\n        goto code_r0x05f2845f;\n    case 7:\n        goto code_r0x05f2890b;\n    case 8:\n        goto code_r0x05f27b1d;\n    case 9:\n        goto code_r0x05f27f5e;\n    case 10:\n        goto code_r0x05f283c0;\n    case 0xb:\n        goto code_r0x05f2886c;\n    case 0xc:\n        goto code_r0x05f27a7e;\n    case 0xd:\n        goto code_r0x05f27ebf;\n    case 0xe:\n        goto code_r0x05f28321;\n    case 0xf:\n        goto code_r0x05f287cd;\n    case 0x10:\n        goto code_r0x05f279df;\n    case 0x11:\n        goto code_r0x05f27e20;\n    case 0x12:\n        goto code_r0x05f28282;\n    case 0x13:\n        goto code_r0x05f2872e;\n    case 0x14:\n        goto code_r0x05f27940;\n    case 0x15:\n        goto code_r0x05f27d81;\n    case 0x16:\n        goto code_r0x05f281e3;\n    case 0x17:\n        goto code_r0x05f2868f;\n    case 0x1c:\n        if (*(arg_8h + (arg_10h - 0x1c)) == *(arg_ch + (arg_10h - 0x1c))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x1c));\n            uVar4 = *(arg_8h + (arg_10h - 0x1c));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1b));\n            uVar2 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1a));\n            uVar2 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x19)) - *(arg_ch + (arg_10h - 0x19));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n    case 0x18:\n        uVar2 = *(arg_8h + (arg_10h - 0x18));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x18))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x17));\n            uVar2 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x16));\n            uVar2 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x15)) - *(arg_ch + (arg_10h - 0x15));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        goto code_r0x05f27940;\n    case 0x1d:\n        uVar2 = *(arg_8h + (arg_10h - 0x1d));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x1d))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1c));\n            uVar2 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1b));\n            uVar2 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x1a)) - *(arg_ch + (arg_10h - 0x1a));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n    case 0x19:\n        if (*(arg_8h + (arg_10h - 0x19)) == *(arg_ch + (arg_10h - 0x19))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x19));\n            uVar4 = *(arg_8h + (arg_10h - 0x19));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x18));\n            uVar2 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x17));\n            uVar2 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x16)) - *(arg_ch + (arg_10h - 0x16));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        goto code_r0x05f27d81;\n    case 0x1e:\n        uVar2 = *(arg_8h + (arg_10h - 0x1e));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x1e))) {\n            iVar3 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1d));\n            uVar2 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1c));\n            uVar2 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            iVar3 = *(arg_8h + (arg_10h - 0x1b)) - *(arg_ch + (arg_10h - 0x1b));\n            if (iVar3 != 0) {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    case 0x1a:\n        if (*(arg_8h + (arg_10h - 0x1a)) == *(arg_ch + (arg_10h - 0x1a))) {\n            iVar3 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x1a));\n            uVar4 = *(arg_8h + (arg_10h - 0x1a));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x19));\n            uVar2 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x18));\n            uVar2 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            iVar3 = *(arg_8h + (arg_10h - 0x17)) - *(arg_ch + (arg_10h - 0x17));\n            if (iVar3 != 0) {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        goto code_r0x05f281e3;\n    case 0x1f:\n        if (*(arg_8h + (arg_10h - 0x1f)) == *(arg_ch + (arg_10h - 0x1f))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x1f));\n            uVar4 = *(arg_8h + (arg_10h - 0x1f));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1e));\n            uVar2 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1d));\n            uVar2 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x1c)) - *(arg_ch + (arg_10h - 0x1c));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n    case 0x1b:\n        uVar2 = *(arg_8h + (arg_10h - 0x1b));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x1b))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1a));\n            uVar2 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x19));\n            uVar2 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x18)) - *(arg_ch + (arg_10h - 0x18));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        goto code_r0x05f2868f;\n    }\n    goto code_r0x05f27c4b;\ncode_r0x05f2868f:\n    uVar2 = *(arg_8h + (arg_10h - 0x17));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x17))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x17));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x16));\n        uVar2 = *(arg_ch + (arg_10h - 0x16));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x15));\n        uVar2 = *(arg_ch + (arg_10h - 0x15));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x14)) - *(arg_ch + (arg_10h - 0x14));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x05f2872e;\ncode_r0x05f281e3:\n    uVar2 = *(arg_8h + (arg_10h - 0x16));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x16))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x16));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x15));\n        uVar2 = *(arg_ch + (arg_10h - 0x15));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x14));\n        uVar2 = *(arg_ch + (arg_10h - 0x14));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 0x13)) - *(arg_ch + (arg_10h - 0x13));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x05f28282;\ncode_r0x05f27d81:\n    uVar2 = *(arg_8h + (arg_10h - 0x15));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x15))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x15));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x14));\n        uVar2 = *(arg_ch + (arg_10h - 0x14));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x13));\n        uVar2 = *(arg_ch + (arg_10h - 0x13));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x12)) - *(arg_ch + (arg_10h - 0x12));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x05f27e20;\ncode_r0x05f27940:\n    uVar2 = *(arg_8h + (arg_10h - 0x14));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x14))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x14));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x13));\n        uVar2 = *(arg_ch + (arg_10h - 0x13));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x12));\n        uVar2 = *(arg_ch + (arg_10h - 0x12));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x11)) - *(arg_ch + (arg_10h - 0x11));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x05f279df;\ncode_r0x05f2872e:\n    uVar2 = *(arg_8h + (arg_10h - 0x13));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x13))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x13));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x12));\n        uVar2 = *(arg_ch + (arg_10h - 0x12));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x11));\n        uVar2 = *(arg_ch + (arg_10h - 0x11));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x10)) - *(arg_ch + (arg_10h - 0x10));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x05f287cd;\ncode_r0x05f28282:\n    uVar2 = *(arg_8h + (arg_10h - 0x12));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x12))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x12));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x11));\n        uVar2 = *(arg_ch + (arg_10h - 0x11));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x10));\n        uVar2 = *(arg_ch + (arg_10h - 0x10));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 0xf)) - *(arg_ch + (arg_10h - 0xf));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x05f28321;\ncode_r0x05f27e20:\n    uVar2 = *(arg_8h + (arg_10h - 0x11));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x11))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x11));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x10));\n        uVar2 = *(arg_ch + (arg_10h - 0x10));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xf));\n        uVar2 = *(arg_ch + (arg_10h - 0xf));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0xe)) - *(arg_ch + (arg_10h - 0xe));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x05f27ebf;\ncode_r0x05f279df:\n    uVar2 = *(arg_8h + (arg_10h - 0x10));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x10))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x10));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xf));\n        uVar2 = *(arg_ch + (arg_10h - 0xf));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xe));\n        uVar2 = *(arg_ch + (arg_10h - 0xe));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0xd)) - *(arg_ch + (arg_10h - 0xd));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x05f27a7e;\ncode_r0x05f287cd:\n    uVar2 = *(arg_8h + (arg_10h - 0xf));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xf))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xf));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xe));\n        uVar2 = *(arg_ch + (arg_10h - 0xe));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xd));\n        uVar2 = *(arg_ch + (arg_10h - 0xd));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0xc)) - *(arg_ch + (arg_10h - 0xc));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x05f2886c;\ncode_r0x05f28321:\n    uVar2 = *(arg_8h + (arg_10h - 0xe));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xe))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xe));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xd));\n        uVar2 = *(arg_ch + (arg_10h - 0xd));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xc));\n        uVar2 = *(arg_ch + (arg_10h - 0xc));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 0xb)) - *(arg_ch + (arg_10h - 0xb));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x05f283c0;\ncode_r0x05f27ebf:\n    uVar2 = *(arg_8h + (arg_10h - 0xd));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xd))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xd));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xc));\n        uVar2 = *(arg_ch + (arg_10h - 0xc));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xb));\n        uVar2 = *(arg_ch + (arg_10h - 0xb));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 10)) - *(arg_ch + (arg_10h - 10));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x05f27f5e;\ncode_r0x05f27a7e:\n    uVar2 = *(arg_8h + (arg_10h - 0xc));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xc))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xc));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xb));\n        uVar2 = *(arg_ch + (arg_10h - 0xb));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 10));\n        uVar2 = *(arg_ch + (arg_10h - 10));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 9)) - *(arg_ch + (arg_10h - 9));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x05f27b1d;\ncode_r0x05f2886c:\n    uVar2 = *(arg_8h + (arg_10h - 0xb));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xb))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xb));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 10));\n        uVar2 = *(arg_ch + (arg_10h - 10));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 9));\n        uVar2 = *(arg_ch + (arg_10h - 9));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 8)) - *(arg_ch + (arg_10h - 8));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x05f2890b;\ncode_r0x05f283c0:\n    uVar2 = *(arg_8h + (arg_10h - 10));\n    if (uVar2 == *(arg_ch + (arg_10h - 10))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 10));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 9));\n        uVar2 = *(arg_ch + (arg_10h - 9));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 8));\n        uVar2 = *(arg_ch + (arg_10h - 8));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 7)) - *(arg_ch + (arg_10h - 7));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x05f2845f;\ncode_r0x05f27f5e:\n    uVar2 = *(arg_8h + (arg_10h - 9));\n    if (uVar2 == *(arg_ch + (arg_10h - 9))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 9));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 8));\n        uVar2 = *(arg_ch + (arg_10h - 8));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 7));\n        uVar2 = *(arg_ch + (arg_10h - 7));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 6)) - *(arg_ch + (arg_10h - 6));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x05f27ffd;\ncode_r0x05f2890b:\n    uVar2 = *(arg_8h + (arg_10h - 7));\n    if (uVar2 != *(arg_ch + (arg_10h - 7))) {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 7));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 6));\n        uVar2 = *(arg_ch + (arg_10h - 6));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 5));\n        uVar2 = *(arg_ch + (arg_10h - 5));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 4)) - *(arg_ch + (arg_10h - 4));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\ncode_r0x05f2899a:\n    uVar4 = *(arg_8h + (arg_10h - 3));\n    uVar2 = *(arg_ch + (arg_10h - 3));\n    if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n        return iVar3;\n    }\n    uVar4 = *(arg_8h + (arg_10h - 2));\n    uVar2 = *(arg_ch + (arg_10h - 2));\n    if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n        return iVar3;\n    }\n    goto code_r0x05f28083;\ncode_r0x05f2845f:\n    uVar2 = *(arg_8h + (arg_10h - 6));\n    if (uVar2 == *(arg_ch + (arg_10h - 6))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 6));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 5));\n        uVar2 = *(arg_ch + (arg_10h - 5));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 4));\n        uVar2 = *(arg_ch + (arg_10h - 4));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\ncode_r0x05f284fe:\n    iVar1 = *(arg_8h + (arg_10h - 2));\n    if (iVar1 == *(arg_ch + (arg_10h - 2))) {\n        return 0;\n    }\n    uVar4 = iVar1;\n    uVar2 = *(arg_ch + (arg_10h - 2));\n    if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n        return iVar3;\n    }\n    uVar4 = *(arg_8h + (arg_10h - 1));\n    uVar2 = *(arg_ch + (arg_10h - 1));\n    if (uVar4 == uVar2) {\n        return 0;\n    }\n    return (0 < uVar4 - uVar2) * 2 + -1;\ncode_r0x05f27b1d:\n    uVar2 = *(arg_8h + (arg_10h - 8));\n    if (uVar2 == *(arg_ch + (arg_10h - 8))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 8));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 7));\n        uVar2 = *(arg_ch + (arg_10h - 7));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 6));\n        uVar2 = *(arg_ch + (arg_10h - 6));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 5)) - *(arg_ch + (arg_10h - 5));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\ncode_r0x05f27bbc:\n    uVar2 = *(arg_8h + (arg_10h - 4));\n    if (uVar2 != *(arg_ch + (arg_10h - 4))) {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 4));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 3));\n        uVar2 = *(arg_ch + (arg_10h - 3));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 2));\n        uVar2 = *(arg_ch + (arg_10h - 2));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 1)) - *(arg_ch + (arg_10h - 1));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 == 0) {\ncode_r0x05f27c4b:\n        iVar3 = 0;\n    }\n    return iVar3;\ncode_r0x05f27ffd:\n    uVar2 = *(arg_8h + (arg_10h - 5));\n    if (uVar2 != *(arg_ch + (arg_10h - 5))) {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 5));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 4));\n        uVar2 = *(arg_ch + (arg_10h - 4));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 3));\n        uVar2 = *(arg_ch + (arg_10h - 3));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 2)) - *(arg_ch + (arg_10h - 2));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\ncode_r0x05f28083:\n    uVar4 = *(arg_8h + (arg_10h - 1));\n    uVar2 = *(arg_ch + (arg_10h - 1));\n    if (uVar4 == uVar2) {\n        return 0;\n    }\n    return (0 < uVar4 - uVar2) * 2 + -1;\n}\n",
        "token_count": 16439
    },
    "05f0beb5": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f0beb5(uint dwMilliseconds)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n    return;\n}\n",
        "token_count": 36
    },
    "05f2353b": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.05f2353b(void)\n\n{\n    *0x5f371e4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 66
    },
    "05f0dd57": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.05f0dd57(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.05f0a280(0x5f34878, 0xc);\n    fcn.05f10b0e(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x5f5199c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x5f51998;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x05f0dd9c;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.05f0b868(arg_8h_00);\ncode_r0x05f0dd9c:\n        fcn.05f0b868(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.05f0ddbf();\n    fcn.05f0a2c5();\n    return;\n}\n",
        "token_count": 415
    },
    "05f29e2c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.05f29e2c(uint8_t *param_1, uint8_t **param_2, uint param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint8_t *arg_ch;\n    int32_t aiStack48 [2];\n    int32_t iStack40;\n    char cStack36;\n    uchar auStack32 [24];\n    uint32_t uStack8;\n    \n    uStack8 = *0x5f36008 ^ &stack0xfffffffc;\n    fcn.05f08385(param_3);\n    if (param_2 != NULL) {\n        *param_2 = param_1;\n    }\n    iVar4 = aiStack48[0];\n    arg_ch = param_1;\n    if (param_1 == NULL) {\n        puVar1 = fcn.05f0b528();\n        *puVar1 = 0x16;\n        fcn.05f0a63b();\n    }\n    else {\n        while( true ) {\n            if (*(iVar4 + 0x74) < 2) {\n                uVar2 = *(*(iVar4 + 0x90) + *arg_ch * 2) & 8;\n            }\n            else {\n                uVar2 = fcn.05f20ffc(*arg_ch, 8, aiStack48);\n                iVar4 = aiStack48[0];\n            }\n            if (uVar2 == 0) break;\n            arg_ch = arg_ch + 1;\n        }\n        puVar3 = fcn.05f2b29f(auStack32, arg_ch, aiStack48);\n        if (param_2 != NULL) {\n            *param_2 = arg_ch + puVar3[1];\n        }\n        if ((*puVar3 & 0x240) == 0) {\n            if ((*puVar3 & 0x81) == 0) {\n                if (((*puVar3 & 0x100) != 0) && (*(puVar3 + 4) == 0.0)) {\n                    puVar1 = fcn.05f0b528();\n                    *puVar1 = 0x22;\n                }\n            }\n            else {\n                puVar1 = fcn.05f0b528();\n                *puVar1 = 0x22;\n            }\n        }\n        else if (param_2 != NULL) {\n            *param_2 = param_1;\n        }\n    }\n    if (cStack36 != '\\0') {\n        *(iStack40 + 0x70) = *(iStack40 + 0x70) & 0xfffffffd;\n    }\n    fcn.05f07768(unaff_EBX);\n    return;\n}\n",
        "token_count": 619
    },
    "05f0ba20": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.05f0ba20(uint arg_8h)\n\n{\n    if ((*0x5f53568 ^ *0x5f36008) != NULL) {\n        (*(*0x5f53568 ^ *0x5f36008))();\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    return;\n}\n",
        "token_count": 87
    }
}