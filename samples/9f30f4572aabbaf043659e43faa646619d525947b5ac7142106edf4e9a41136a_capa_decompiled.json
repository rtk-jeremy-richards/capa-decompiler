{
    "18000ba2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18000ba24(code **arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    \n    *arg1 = vtable.CSliderCtrl.0;\n    fcn.18000fd54(arg1);\n    uVar3 = 0xfffffffffffffffe;\n    *arg1 = vtable.CWnd.0;\n    if ((((arg1[8] != NULL) && (arg1 != 0x180073820)) && (arg1 != 0x1800738d0)) &&\n       ((arg1 != 0x180073980 && (arg1 != 0x180073a30)))) {\n        fcn.18000fd54(arg1);\n    }\n    piVar1 = arg1[0x13];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1, in_R8, in_R9, uVar3);\n    }\n    pcVar2 = arg1[0x14];\n    if ((pcVar2 != NULL) && (*(pcVar2 + 0x50) == arg1)) {\n        *(pcVar2 + 0x50) = 0;\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 322
    },
    "18001052": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001052c(code **arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    \n    uVar3 = 0xfffffffffffffffe;\n    *arg1 = vtable.CWnd.0;\n    if ((((arg1[8] != NULL) && (arg1 != 0x180073820)) && (arg1 != 0x1800738d0)) &&\n       ((arg1 != 0x180073980 && (arg1 != 0x180073a30)))) {\n        fcn.18000fd54(arg1);\n    }\n    piVar1 = arg1[0x13];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1, in_R8, in_R9, uVar3);\n    }\n    pcVar2 = arg1[0x14];\n    if ((pcVar2 != NULL) && (*(pcVar2 + 0x50) == arg1)) {\n        *(pcVar2 + 0x50) = 0;\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 298
    },
    "1800018b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.1800018b0(int64_t *arg1, char *arg2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    \n    piVar3 = fcn.18001549c();\n    if (piVar3 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar2 = swi(3);\n        piVar3 = (*pcVar2)();\n        return piVar3;\n    }\n    iVar4 = (**(*piVar3 + 0x18))();\n    *arg1 = iVar4 + 0x18;\n    if (arg2 == NULL) {\n        uVar5 = 0;\n    }\n    else {\n        if ((arg2 & 0xffffffffffff0000) == 0) {\n            iVar4 = fcn.180015488(arg2 & 0xffff);\n            if (iVar4 == 0) {\n                return arg1;\n            }\n            fcn.180001510(arg1, iVar4, arg2 & 0xffff);\n            return arg1;\n        }\n        iVar4 = -1;\n        pcVar6 = arg2;\n        do {\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        uVar5 = ~iVar4 - 1;\n    }\n    fcn.180001640(arg1, arg2, uVar5);\n    return arg1;\n}\n",
        "token_count": 375
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "180002d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.180002d90(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    code *pcVar3;\n    ulong uVar4;\n    ulong uStackX32;\n    code *apcStack24 [2];\n    \n    if (arg2 == 1) {\n        iVar1 = fcn.1800027c0();\n        uVar2 = 0;\n        pcVar3 = 0x180002d70;\n        *0x1800705f8 = 0x180002d30;\n        uStackX32 = 0;\n        apcStack24[0] = NULL;\n        *0x1800705f0 = 0x180002d50;\n        uVar4 = uVar2;\n        if (0x12 < *(*(iVar1 + 0x20) + 0x70)) {\n            uVar2 = 0x1e9b;\n            uVar4 = 0x1125;\n            *0x1800705f0 = fcn.180002930;\n            *0x18006d0e0 = 0;\n            *0x18006d0e4 = 0;\n            *0x18006d0e8 = 0;\n            *0x18006d0f0 = 0;\n            *0x1800705f8 = 0x1800028d0;\n            *0x18006d0ec = 0;\n            *0x18006d0f4 = 0;\n            pcVar3 = 0x180002a30;\n        }\n        (*pcVar3)(uVar2, apcStack24);\n        (*pcVar3)(uVar4, &uStackX32);\n        *0x180070610 = uStackX32;\n        *0x180070618 = 0;\n        *0x180070608 = 1;\n        *0x180070600 = arg1;\n        (*apcStack24[0])(0x180070600);\n    }\n    return 1;\n}\n",
        "token_count": 454
    },
    "180002f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180002f00(code **arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    \n    fcn.18001052c(arg1 + 0xa6);\n    fcn.180001000(arg1 + 0x8f);\n    fcn.180001000(arg1 + 0x78);\n    fcn.180001000(arg1 + 0x61);\n    fcn.180001000(arg1 + 0x4a);\n    fcn.180001000(arg1 + 0x33);\n    fcn.18001aaa4(arg1 + 0x1e);\n    *arg1 = vtable.CDialog.0;\n    if (arg1[8] != NULL) {\n        fcn.18000fd54(arg1);\n    }\n    uVar3 = 0xfffffffffffffffe;\n    *arg1 = vtable.CWnd.0;\n    if ((((arg1[8] != NULL) && (arg1 != 0x180073820)) && (arg1 != 0x1800738d0)) &&\n       ((arg1 != 0x180073980 && (arg1 != 0x180073a30)))) {\n        fcn.18000fd54(arg1);\n    }\n    piVar1 = arg1[0x13];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1, in_R8, in_R9, uVar3);\n    }\n    pcVar2 = arg1[0x14];\n    if ((pcVar2 != NULL) && (*(pcVar2 + 0x50) == arg1)) {\n        *(pcVar2 + 0x50) = 0;\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 445
    },
    "180019c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180019c44(code **arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    \n    *arg1 = vtable.CDialog.0;\n    if (arg1[8] != NULL) {\n        fcn.18000fd54(arg1);\n    }\n    uVar3 = 0xfffffffffffffffe;\n    *arg1 = vtable.CWnd.0;\n    if ((((arg1[8] != NULL) && (arg1 != 0x180073820)) && (arg1 != 0x1800738d0)) &&\n       ((arg1 != 0x180073980 && (arg1 != 0x180073a30)))) {\n        fcn.18000fd54(arg1);\n    }\n    piVar1 = arg1[0x13];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1, in_R8, in_R9, uVar3);\n    }\n    pcVar2 = arg1[0x14];\n    if ((pcVar2 != NULL) && (*(pcVar2 + 0x50) == arg1)) {\n        *(pcVar2 + 0x50) = 0;\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 335
    },
    "18000380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180003800(code **arg1)\n\n{\n    fcn.180018928(arg1, 0);\n    *arg1 = vtable.CThreadsApp.0;\n    fcn.180003750(arg1);\n    return arg1;\n}\n",
        "token_count": 57
    },
    "180004af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180004af0(code **arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    \n    fcn.180019d18(arg1, 0x66, arg2);\n    *arg1 = vtable.CThreadsDlg.0;\n    fcn.18000def0(arg1 + 0x1e);\n    arg1[0x1e] = vtable.CListBox.0;\n    fcn.180001280(arg1 + 0x33);\n    fcn.180001280(arg1 + 0x4a);\n    fcn.180001280(arg1 + 0x61);\n    fcn.180001280(arg1 + 0x78);\n    fcn.180001280(arg1 + 0x8f);\n    fcn.18000def0(arg1 + 0xa6);\n    arg1[0xa6] = vtable.CTextToSpeech.0;\n    fcn.18001e94c();\n    iVar1 = fcn.18001e94c();\n    pcVar2 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0x18), 0x80);\n    arg1[0xbb] = pcVar2;\n    return arg1;\n}\n",
        "token_count": 283
    },
    "180004d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180004d00(int64_t arg1, int64_t *arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    fcn.1800026f0(arg1 + 0x530, *arg2);\n    iVar3 = *arg2;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "180009c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180009c60(void)\n\n{\n    fcn.18003524c(0x180070770);\n    *0x180070790 = fcn.18001d330(0x1800054a0, 1, 0, 0);\n    *0x180070798 = fcn.18001d330(0x180006290, 2, 0, 0);\n    *0x1800707a0 = fcn.18001d330(0x180007050, 3, 0, 0);\n    *0x1800707a8 = fcn.18001d330(0x180007f00, 4, 0, 0);\n    *0x1800707b0 = fcn.18001d330(0x180008db0, 5, 0, 0);\n    return;\n}\n",
        "token_count": 196
    },
    "180009d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180009d40(ulong arg1, ulong nIDDlgItem, ulong arg3)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    ulong hWnd;\n    int64_t *piVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    int64_t iStackX32;\n    \n    hWnd = fcn.180013c24(arg1, nIDDlgItem);\n    piVar5 = fcn.18001549c();\n    if (piVar5 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    iStackX32 = (**(*piVar5 + 0x18))(piVar5);\n    iStackX32 = iStackX32 + 0x18;\n    if (arg3 == 0) {\n        iVar6 = -1;\n        pcVar7 = \"... ;                                                              \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001640(&iStackX32, \"... ;                                                              \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar7 = \"for ( int i = 0 ; i <80 ; i++)                               \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"for ( int i = 0 ; i <80 ; i++)                               \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar7 = \"{                                                          \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"{                                                          \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar7 = \"      dcObject .TextOut( ThreadsNr ) ;           \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"      dcObject .TextOut( ThreadsNr ) ;           \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar7 = \"      ... ;                                                                 \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"      ... ;                                                                 \", \n                      ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar7 = \"}                                                                   \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"}                                                                   \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar7 = \"...; \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"...; \", ~iVar6 - 1);\n    }\n    else if (arg3 == 1) {\n        iVar6 = -1;\n        pcVar7 = \"... ;                                                               \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001640(&iStackX32, \"... ;                                                               \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar7 = \"for ( int i = 0 ; i <80 ; i++)                                     \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"for ( int i = 0 ; i <80 ; i++)                                     \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar7 = \"{                                                                      \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"{                                                                      \", ~iVar6 - 1)\n        ;\n        iVar6 = -1;\n        pcVar7 = \"for ( int p = 0 ; p <1*800;p++);\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"for ( int p = 0 ; p <1*800;p++);\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar7 = \"                         dcObject .TextOut( ThreadsNr ) ;\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"                         dcObject .TextOut( ThreadsNr ) ;\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar7 = \"                 ... ;                                                    \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"                 ... ;                                                    \", \n                      ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar7 = \"      }                                                              \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"      }                                                              \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar7 = \"... ; \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"... ; \", ~iVar6 - 1);\n    }\n    iVar6 = iStackX32;\n    fcn.180013d70(hWnd, iStackX32);\n    LOCK();\n    piVar1 = iVar6 + -8;\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 + -1 < 1) {\n        (**(**(iVar6 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 1905
    },
    "18000a0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18000a0b0(ulong arg1, uint64_t arg2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    ulong hWnd;\n    int32_t iVar7;\n    char *pcVar8;\n    char acStackX24 [8];\n    int64_t iStackX32;\n    \n    piVar5 = fcn.18001549c();\n    if (piVar5 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    iVar6 = (**(*piVar5 + 0x18))();\n    iVar6 = iVar6 + 0x18;\n    iVar7 = arg2 & 0xffffffff;\n    iStackX32 = iVar6;\n    hWnd = fcn.180013c24(*0x180070660, arg2 & 0xffffffff);\n    if (iVar7 == 0x3eb) {\n        uVar4 = fcn.180004d50(arg1, 1);\n        fcn.180048830(uVar4, acStackX24, 10);\n        iVar6 = -1;\n        pcVar8 = \"... ;                                                               \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001640(&iStackX32, \"... ;                                                               \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"for ( int i = 0 ; i <80 ; i++)                                     \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"for ( int i = 0 ; i <80 ; i++)                                     \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"{                                                                      \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"{                                                                      \", ~iVar6 - 1)\n        ;\n        iVar6 = -1;\n        pcVar8 = \"for ( int p = 0 ; p <\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"for ( int p = 0 ; p <\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = acStackX24;\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, acStackX24, ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"*800;p++);\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"*800;p++);\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"                         dcObject .TextOut( ThreadsNr ) ;\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"                         dcObject .TextOut( ThreadsNr ) ;\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"                 ... ;                                                    \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"                 ... ;                                                    \", \n                      ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"      }                                                              \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"      }                                                              \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"... ;                                                       \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"... ;                                                       \", ~iVar6 - 1);\n        iVar6 = iStackX32;\n        fcn.180013d70(hWnd, iStackX32);\n        fcn.180013e58(hWnd, 5);\n    }\n    else if (iVar7 == 0x3ec) {\n        uVar4 = fcn.180004d50(arg1, 2);\n        fcn.180048830(uVar4, acStackX24, 10);\n        iVar6 = -1;\n        pcVar8 = \"... ;                                                               \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001640(&iStackX32, \"... ;                                                               \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"for ( int i = 0 ; i <80 ; i++)                                     \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"for ( int i = 0 ; i <80 ; i++)                                     \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"{                                                                      \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"{                                                                      \", ~iVar6 - 1)\n        ;\n        iVar6 = -1;\n        pcVar8 = \"for ( int p = 0 ; p <\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"for ( int p = 0 ; p <\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = acStackX24;\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, acStackX24, ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"*800;p++);\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"*800;p++);\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"                         dcObject .TextOut( ThreadsNr ) ;\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"                         dcObject .TextOut( ThreadsNr ) ;\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"                 ... ;                                                    \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"                 ... ;                                                    \", \n                      ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"      }                                                              \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"      }                                                              \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"... ;                                                       \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"... ;                                                       \", ~iVar6 - 1);\n        iVar6 = iStackX32;\n        fcn.180013d70(hWnd, iStackX32);\n        fcn.180013e58(hWnd, 5);\n    }\n    else if (iVar7 == 0x3ed) {\n        uVar4 = fcn.180004d50(arg1, 3);\n        fcn.180048830(uVar4, acStackX24, 10);\n        iVar6 = -1;\n        pcVar8 = \"... ;                                                               \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001640(&iStackX32, \"... ;                                                               \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"for ( int i = 0 ; i <80 ; i++)                                     \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"for ( int i = 0 ; i <80 ; i++)                                     \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"{                                                                      \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"{                                                                      \", ~iVar6 - 1)\n        ;\n        iVar6 = -1;\n        pcVar8 = \"for ( int p = 0 ; p <\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"for ( int p = 0 ; p <\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = acStackX24;\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, acStackX24, ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"*800;p++);\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"*800;p++);\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"                         dcObject .TextOut( ThreadsNr ) ;\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"                         dcObject .TextOut( ThreadsNr ) ;\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"                 ... ;                                                    \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"                 ... ;                                                    \", \n                      ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"      }                                                              \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"      }                                                              \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"... ;                                                       \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"... ;                                                       \", ~iVar6 - 1);\n        iVar6 = iStackX32;\n        fcn.180013d70(hWnd, iStackX32);\n        fcn.180013e58(hWnd, 5);\n    }\n    else if (iVar7 == 0x3f0) {\n        uVar4 = fcn.180004d50(arg1, 5);\n        fcn.180048830(uVar4, acStackX24, 10);\n        iVar6 = -1;\n        pcVar8 = \"... ;                                                               \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001640(&iStackX32, \"... ;                                                               \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"for ( int i = 0 ; i <80 ; i++)                                     \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"for ( int i = 0 ; i <80 ; i++)                                     \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"{                                                                      \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"{                                                                      \", ~iVar6 - 1)\n        ;\n        iVar6 = -1;\n        pcVar8 = \"for ( int p = 0 ; p <\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"for ( int p = 0 ; p <\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = acStackX24;\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, acStackX24, ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"*800;p++);\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"*800;p++);\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"                         dcObject .TextOut( ThreadsNr ) ;\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"                         dcObject .TextOut( ThreadsNr ) ;\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"                 ... ;                                                    \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"                 ... ;                                                    \", \n                      ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"      }                                                              \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"      }                                                              \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"... ;                                                       \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"... ;                                                       \", ~iVar6 - 1);\n        iVar6 = iStackX32;\n        fcn.180013d70(hWnd, iStackX32);\n        fcn.180013e58(hWnd, 5);\n    }\n    else if (iVar7 == 0x3f3) {\n        uVar4 = fcn.180004d50(arg1, 4);\n        fcn.180048830(uVar4, acStackX24, 10);\n        iVar6 = -1;\n        pcVar8 = \"... ;                                                               \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001640(&iStackX32, \"... ;                                                               \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"for ( int i = 0 ; i <80 ; i++)                                     \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"for ( int i = 0 ; i <80 ; i++)                                     \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"{                                                                      \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"{                                                                      \", ~iVar6 - 1)\n        ;\n        iVar6 = -1;\n        pcVar8 = \"for ( int p = 0 ; p <\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"for ( int p = 0 ; p <\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = acStackX24;\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, acStackX24, ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"*800;p++);\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"*800;p++);\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"                         dcObject .TextOut( ThreadsNr ) ;\";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"                         dcObject .TextOut( ThreadsNr ) ;\", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"                 ... ;                                                    \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"                 ... ;                                                    \", \n                      ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"      }                                                              \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"      }                                                              \", ~iVar6 - 1);\n        iVar6 = -1;\n        pcVar8 = \"... ;                                                       \";\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.180001720(&iStackX32, \"... ;                                                       \", ~iVar6 - 1);\n        iVar6 = iStackX32;\n        fcn.180013d70(hWnd, iStackX32);\n        fcn.180013e58(hWnd, 5);\n    }\n    LOCK();\n    piVar1 = iVar6 + -8;\n    iVar7 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar7 + -1 < 1) {\n        (**(**(iVar6 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 5975
    },
    "18000c5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.18000c5ac(int64_t arg1, uint32_t *arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    \n    iVar1 = fcn.18000c35c();\n    if (iVar1 == 0) {\n        if ((((arg1 == 0x12340042) && (arg2 != NULL)) && (0x27 < *arg2)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &uStack24),  iVar1 != 0)) {\n            arg2[1] = 0;\n            arg2[2] = 0;\n            uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg2[3] = uVar2;\n            uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(1);\n            arg2[9] = 1;\n            arg2[5] = uStack24;\n            arg2[6] = uStack20;\n            arg2[7] = uStack16;\n            arg2[8] = uStack12;\n            arg2[4] = uVar2;\n            if (0x47 < *arg2) {\n                fcn.180035ad8(arg2 + 10, 0x20, \"DISPLAY\", 0x1f);\n            }\n            return 1;\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = (**0x1800737f0)(arg1, arg2);\n    }\n    return uVar3;\n}\n",
        "token_count": 392
    },
    "18001f52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.18001f528(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    int64_t *piVar3;\n    \n    if (arg2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.18001f148(arg1 + 0x30, arg2);\n        if (iVar1 == 0) {\n            iVar1 = fcn.18001f148(arg1 + 0x68, arg2);\n            if (iVar1 == 0) {\n                arg1_00 = fcn.18000b8f4(0x18001f97c);\n                iVar1 = fcn.180030cac(arg1 + 8);\n                iVar2 = iVar1;\n                if (iVar1 == 0) {\n                    iVar2 = fcn.180015240();\n                }\n                (**(arg1 + 0x20))(iVar2);\n                piVar3 = fcn.18001f390(arg1 + 0x68, arg2);\n                *piVar3 = iVar1;\n                fcn.18000b8f4(arg1_00);\n                iVar2 = *(arg1 + 0xa8);\n                *(iVar1 + iVar2) = arg2;\n                if (*(arg1 + 0xb0) == 2) {\n                    *(iVar1 + 8 + iVar2) = arg2;\n                }\n            }\n            else {\n                iVar2 = *(arg1 + 0xa8);\n                *(iVar1 + iVar2) = arg2;\n                if (*(arg1 + 0xb0) == 2) {\n                    *(iVar1 + 8 + iVar2) = arg2;\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 405
    },
    "18000d9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.18000d9e4(ulong lpMultiByteStr, ulong cbMultiByte)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(3, 0, lpMultiByteStr, cbMultiByte, 0, 0);\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(0, uVar1);\n    if (iVar2 != 0) {\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(3, 0, lpMultiByteStr, cbMultiByte, iVar2, uVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 161
    },
    "18000da6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint16_t fcn.18000da60(ulong arg1)\n\n{\n    int16_t iVar1;\n    int16_t extraout_AX;\n    int16_t extraout_AX_00;\n    uint extraout_EAX;\n    int32_t iVar2;\n    uint extraout_var;\n    uint uVar3;\n    ulong in_R8;\n    ulong in_R9;\n    bool bVar4;\n    ulong auStackX24 [2];\n    \n    auStackX24[0] = 0;\n    fcn.18001e94c();\n    iVar2 = fcn.18001dd30(*(CONCAT44(extraout_var, extraout_EAX) + 0xd8), auStackX24);\n    iVar1 = iVar2;\n    uVar3 = 0;\n    if ((iVar2 != 0) && (iVar1 = (*_sym.imp.USER32.dll_RegisterClassA)(arg1),  iVar2 != 2)) {\n        bVar4 = iVar1 == 0;\n        if (bVar4) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.18001dd14(0, auStackX24[0], in_R8, in_R9, iVar1);\n        iVar1 = extraout_AX;\n        if (bVar4) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            iVar1 = extraout_AX_00;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 322
    },
    "18000daf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18000dafc(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    ulong uStack16;\n    \n    uStack16 = 0;\n    iVar4 = fcn.18001e94c();\n    uVar5 = fcn.18001dd30(*(iVar4 + 0xd8), &uStack16);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetClassInfoA)(arg1, arg2, arg3, in_R9, 0);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            if (uVar2 != 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.18001dd14(0, uStack16);\n            if (uVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 288
    },
    "18000dba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18000dba8(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    ulong uStack16;\n    \n    uStack16 = 0;\n    iVar4 = fcn.18001e94c();\n    uVar5 = fcn.18001dd30(*(iVar4 + 0xd8), &uStack16);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetClassInfoExA)(arg1, arg2, arg3, in_R9, 0);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            if (uVar2 != 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.18001dd14(0, uStack16);\n            if (uVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 289
    },
    "18000dd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18000dd80(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong uStack16;\n    \n    uStack16 = 0;\n    iVar4 = fcn.18001e94c();\n    uVar5 = fcn.18001dd30(*(iVar4 + 0xd8), &uStack16);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_MessageBoxA)(arg1, arg2, arg3, arg4, 0);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            if (uVar2 != 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.18001dd14(0, uStack16);\n            if (uVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 284
    },
    "18000de3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.18000de38(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uStackX24;\n    int64_t iVar4;\n    \n    uStackX24 = 0;\n    iVar3 = fcn.18001e94c();\n    iVar1 = fcn.18001dd30(*(iVar3 + 0xd8), &uStackX24);\n    if (iVar1 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(arg1);\n        if (iVar1 != 2) {\n            iVar4 = iVar3;\n            if (iVar3 != 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.18001dd14(0, uStackX24, in_R8, in_R9, iVar4);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 276
    },
    "18000f46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.18000f460(int64_t *arg1, uint64_t arg2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t arg1_00;\n    int64_t iVar6;\n    int32_t iVar7;\n    \n    iVar7 = 0;\n    bVar1 = true;\n    bVar2 = true;\n    if (((arg2 & 4) == 0) || (uVar3 = fcn.180013cd8(arg1),  (uVar3 >> 0x1c & 1) != 0)) {\n        bVar1 = false;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetParent)();\n    *(arg1 + 0xf) = *(arg1 + 0xf) | 0x18;\n    arg1_00 = fcn.18001c53c();\ncode_r0x00018000f53d:\n    while ((!bVar2 || (iVar4 = (*_sym.imp.USER32.dll_PeekMessageA)(arg1_00, 0, 0, 0, 0),  iVar4 != 0))) {\n        do {\n            iVar4 = fcn.18001cc18();\n            if (iVar4 == 0) {\n                fcn.180017ee0(0);\n                return 0xffffffff;\n            }\n            if ((bVar1) && ((*(arg1_00 + 8) == 0x118 || (*(arg1_00 + 8) == 0x104)))) {\n                fcn.180013e58(arg1, 1);\n                (*_sym.imp.USER32.dll_UpdateWindow)(arg1[8]);\n                bVar1 = false;\n            }\n            iVar4 = (**(*arg1 + 0x110))(arg1);\n            if (iVar4 == 0) {\n                *(arg1 + 0xf) = *(arg1 + 0xf) & 0xffffffe7;\n                return *(arg1 + 0x11);\n            }\n            iVar4 = fcn.18001ca00(arg1_00);\n            if (iVar4 != 0) {\n                iVar7 = 0;\n                bVar2 = true;\n            }\n            iVar4 = (*_sym.imp.USER32.dll_PeekMessageA)();\n        } while (iVar4 != 0);\n    }\n    if (bVar1) {\n        fcn.180013e58(arg1, 1);\n        (*_sym.imp.USER32.dll_UpdateWindow)();\n        bVar1 = false;\n    }\n    if ((((arg2 & 1) == 0) && (iVar5 != 0)) && (iVar7 == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)();\n    }\n    if ((arg2 & 2) == 0) goto code_r0x00018000f51e;\n    goto code_r0x00018000f53b;\ncode_r0x00018000f51e:\n    iVar6 = (*_sym.imp.USER32.dll_SendMessageA)();\n    iVar7 = iVar7 + 1;\n    if (iVar6 == 0) {\ncode_r0x00018000f53b:\n        bVar2 = false;\n    }\n    goto code_r0x00018000f53d;\n}\n",
        "token_count": 736
    },
    "18000f7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18000f7dc(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R8;\n    ulong in_R9;\n    code *pcVar6;\n    bool bVar7;\n    ulong uStackX32;\n    uchar auStack16 [8];\n    \n    uStackX32 = 0;\n    iVar4 = fcn.18001e94c();\n    uVar5 = fcn.18001dd30(*(iVar4 + 0xd8), &uStackX32);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        fcn.18000f768(arg1, auStack16);\n        pcVar6 = *(arg1 + 0x28);\n        if (pcVar6 == NULL) {\n            fcn.180015288();\n        }\n        uVar2 = (*pcVar6)(arg2);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            bVar7 = uVar2 != 0;\n            if (bVar7) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.18001dd14(0, uStackX32, in_R8, in_R9, uVar2);\n            if (!bVar7) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 364
    },
    "18000ff5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18000ff5c(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.1800206d0(0x180073ca0, 0x18000d9b0);\n    if (iVar2 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    (**(*arg1 + 0x240))(arg1, *(iVar2 + 0xa0), *(iVar2 + 0xa8), *(iVar2 + 0xb0), arg2);\n    return;\n}\n",
        "token_count": 154
    },
    "1800102b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800102b0(int64_t *arg1, int32_t *arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    ulong arg1_00;\n    int64_t hWnd;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    if (((((arg3 >> 0x1c & 1) == 0) && (uVar2 = fcn.180013cd8(arg1),  (uVar2 & 0x50000000) == 0)) &&\n        ((*_sym.imp.USER32.dll_GetWindowRect)(arg1[8], &iStack24),  *arg2 == iStack24)) && (arg2[1] == iStack20)) {\n        arg1_00 = (*_sym.imp.USER32.dll_GetWindow)(arg1[8]);\n        hWnd = fcn.18000fa14(arg1_00);\n        if (((hWnd == 0) || (iVar1 = fcn.180013e88(hWnd),  iVar1 == 0)) &&\n           (iVar1 = (**(*arg1 + 0x248))(arg1),  iVar1 != 0)) {\n            fcn.18000f208(arg1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "18001079": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180010790(ulong hWnd, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t arg1;\n    int64_t iVar1;\n    int32_t in_stack_00000028;\n    int32_t in_stack_00000030;\n    \n    for (arg1 = (*_sym.imp.USER32.dll_GetTopWindow)(); arg1 != 0; arg1 = (*_sym.imp.USER32.dll_GetWindow)(arg1)) {\n        if (in_stack_00000030 == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)();\n        }\n        else {\n            iVar1 = fcn.18000fa58(arg1);\n            if (iVar1 != 0) {\n                fcn.180010348(iVar1, *(iVar1 + 0x40), arg2, arg3);\n            }\n        }\n        if ((in_stack_00000028 != 0) && (iVar1 = (*_sym.imp.USER32.dll_GetTopWindow)(arg1),  iVar1 != 0)) {\n            fcn.180010790(arg1, arg2, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "18001189": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180011894(int64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uStack24;\n    ulong uStack16;\n    \n    uVar1 = fcn.180013cd8(arg1);\n    if (((uVar1 >> 0x1e & 1) == 0) && (iVar3 = fcn.1800114f4(arg1),  iVar3 != 0)) {\n        if ((arg3 != 0) &&\n           ((iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(arg3 + 0x40)),  iVar2 != 0 &&\n            (iVar4 = fcn.1800114f4(arg3),  iVar3 == iVar4)))) {\n            return;\n        }\n        uStack24 = *(arg1 + 0x40);\n        if (arg3 == 0) {\n            uStack16 = 0;\n        }\n        else {\n            uStack16 = *(arg3 + 0x40);\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(*(iVar3 + 0x40), 0x36e, arg2, &uStack24);\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "18001208": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180012084(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    iVar2 = (**(*arg1 + 0x250))();\n    if (iVar2 != 0) {\n        (**(*arg1 + 0x310))(arg1);\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(arg1[8]);\n    fcn.180010790(arg1[8], 0x1f, 0, 0);\n    iVar3 = fcn.1800114f4(arg1);\n    if (iVar3 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(iVar3 + 0x40));\n    uVar5 = 1;\n    uVar4 = 1;\n    fcn.180010790(*(iVar3 + 0x40), 0x1f, 0, 0);\n    iVar3 = (*_sym.imp.USER32.dll_GetCapture)();\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x1f, 0, 0, uVar4, uVar5);\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "18001330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.180013304(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t *in_stack_00000028;\n    \n    if (*(arg1 + 0xa0) == 0) {\n        iVar1 = fcn.180012f3c(arg1, arg2, arg3, arg4);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x40), arg2 + 0x2000);\n        if ((6 < arg2 - 0x132U) || (iVar1 != 0)) {\n            if (in_stack_00000028 != NULL) {\n                *in_stack_00000028 = iVar1;\n            }\n            iVar1 = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 194
    },
    "18001441": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18001441c(int64_t hWnd, ulong arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t *piVar6;\n    ulong in_R9;\n    int64_t iStackX8;\n    \n    if (*(hWnd + 0xa0) == 0) {\n        uVar5 = (*_sym.imp.USER32.dll_GetWindowTextA)(*(hWnd + 0x40), arg2, arg3, in_R9, 0xfffffffffffffffe);\n    }\n    else {\n        piVar6 = fcn.18001549c();\n        if (piVar6 == NULL) {\n            fcn.180001030(0x80004005);\n            pcVar2 = swi(3);\n            uVar5 = (*pcVar2)();\n            return uVar5;\n        }\n        iStackX8 = (**(*piVar6 + 0x18))(piVar6);\n        iStackX8 = iStackX8 + 0x18;\n        (**(**(hWnd + 0xa0) + 0x118))(*(hWnd + 0xa0), &iStackX8);\n        iVar3 = fcn.1800360d8(arg2, arg3, iStackX8, 0xffffffffffffffff);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.180015240();\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n        }\n        uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        uVar5 = uVar4;\n        LOCK();\n        piVar1 = iStackX8 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStackX8 + -0x18) + 8))();\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 587
    },
    "1800146d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800146d4(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t *arg1_00;\n    int64_t iVar2;\n    code *pcVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    uchar auStack24 [16];\n    \n    iVar1 = *arg1;\n    piVar6 = arg1[1];\n    bVar4 = false;\n    do {\n        if (((piVar6 == NULL) || (piVar6 = *piVar6,  piVar6 == NULL)) ||\n           (uVar5 = fcn.180013fc0(piVar6[2]),  (uVar5 >> 0x11 & 1) != 0)) {\n            piVar6 = fcn.180014520(arg1, auStack24);\n            if (iVar1 != *piVar6) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            piVar6 = piVar6[1];\n            if (piVar6 == NULL) {\n                return;\n            }\n            if (bVar4) {\n                return;\n            }\n            bVar4 = true;\n        }\n        arg1_00 = piVar6[2];\n        iVar2 = *arg1_00;\n        if (((iVar2 == 0) || (uVar7 = (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x87, 0, 0),  (uVar7 >> 8 & 1) == 0))\n           && ((uVar5 = fcn.180013fc0(arg1_00),  (uVar5 >> 0x1c & 1) != 0 && ((uVar5 >> 0x1b & 1) == 0)))) {\n            if (*arg1 == iVar1) {\n                arg1[1] = piVar6;\n                return;\n            }\n            fcn.180015288();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 487
    },
    "1800147a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800147a4(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uchar auStack24 [16];\n    \n    iVar1 = *arg1;\n    iVar8 = arg1[1];\n    bVar4 = false;\n    do {\n        if (iVar8 == 0) goto code_r0x0001800147e4;\n        uVar5 = fcn.180013fc0(*(iVar8 + 0x10));\n        if ((uVar5 >> 0x11 & 1) != 0) goto code_r0x0001800147e4;\n        iVar8 = *(iVar8 + 8);\n        while (iVar8 == 0) {\ncode_r0x0001800147e4:\n            piVar6 = fcn.18001458c(arg1, auStack24);\n            if (iVar1 != *piVar6) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar8 = piVar6[1];\n            if (iVar8 == 0) {\n                return;\n            }\n            if (bVar4) {\n                return;\n            }\n            bVar4 = true;\n        }\n        piVar6 = *(iVar8 + 0x10);\n        iVar2 = *piVar6;\n        if ((((iVar2 == 0) || (uVar7 = (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x87, 0, 0),  (uVar7 >> 8 & 1) == 0))\n            && (uVar5 = fcn.180013fc0(piVar6),  (uVar5 >> 0x1c & 1) != 0)) && ((uVar5 >> 0x1b & 1) == 0)) {\n            if (*arg1 == iVar1) {\n                arg1[1] = iVar8;\n                return;\n            }\n            fcn.180015288();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 522
    },
    "18001487": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.180014878(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    if (*(arg1 + 0x98) != 0) {\n        if (arg2 == 0) {\n            iStack16 = fcn.180014644(arg1);\n        }\n        else {\n            iStack16 = fcn.180014614(arg1, arg2);\n        }\n        if (iStack16 != 0) {\n            iStack24 = *(arg1 + 0x98) + 0x80;\n            fcn.1800147a4(&iStack24);\n            if (iStack16 != 0) {\n                return *(iStack16 + 0x10);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "1800148d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.1800148dc(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    if (*(arg1 + 0x98) != 0) {\n        if (arg2 == 0) {\n            iStack16 = fcn.180014644(arg1);\n        }\n        else {\n            iStack16 = fcn.180014614(arg1, arg2);\n        }\n        if (iStack16 != 0) {\n            iStack24 = *(arg1 + 0x98) + 0x80;\n            fcn.1800146d4(&iStack24);\n            if (iStack16 != 0) {\n                return *(iStack16 + 0x10);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 183
    },
    "1800149c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800149c4(ulong arg1)\n\n{\n    code *pcVar1;\n    code **arg1_00;\n    code **appcStackX16 [3];\n    \n    arg1_00 = fcn.18000b904(0x18);\n    if (arg1_00 == NULL) {\n        arg1_00 = NULL;\n    }\n    else {\n        appcStackX16[0] = arg1_00;\n        fcn.1800152ac(arg1_00);\n        *arg1_00 = vtable.COleException.0;\n        *(arg1_00 + 2) = 0;\n    }\n    *(arg1_00 + 2) = arg1;\n    appcStackX16[0] = arg1_00;\n    fcn.180035f2c(appcStackX16, 0x180068150);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 215
    },
    "180014af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.180014af8(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_bp_20h;\n    uchar auStack56 [32];\n    uchar auStack24 [8];\n    uint64_t uStack16;\n    \n    puVar2 = &stack0xffffffffffffffc8;\n    uStack16 = *0x18006ed40 ^ &stack0xffffffffffffffe8;\n    if (-arg1 - 1U < 0x4000) {\n        auStack24[0] = 0;\n    }\n    else {\n        uVar1 = arg1 + 0x400f;\n        if (uVar1 <= arg1 + 0x4000U) {\n            uVar1 = 0xffffffffffffff0;\n        }\n        uVar1 = uVar1 & 0xfffffffffffffff0;\n        fcn.180048870();\n        puVar2 = &stack0xffffffffffffffc8 + -uVar1;\n    }\n    uVar1 = uStack16 ^ &stack0xffffffffffffffe8;\n    *(puVar2 + -8) = 0x180014b71;\n    fcn.1800349d0(uVar1);\n    return;\n}\n",
        "token_count": 301
    },
    "180014e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.180014e6c(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t noname_2;\n    ulong in_R9;\n    \n    piVar2 = fcn.18001549c();\n    noname_2 = piVar2 != NULL;\n    if (piVar2 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    iVar3 = (**(*piVar2 + 0x18))(piVar2);\n    *arg1 = iVar3 + 0x18;\n    if ((arg2 == 0) || ((arg2 & 0xffffffffffff0000) != 0)) {\n        fcn.180014d90(arg1, arg2, noname_2, in_R9);\n    }\n    else {\n        iVar3 = fcn.180015488(arg2 & 0xffff);\n        if (iVar3 != 0) {\n            fcn.180001510(arg1, iVar3, arg2 & 0xffff);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 286
    },
    "180014f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.180014f00(int64_t *arg1, int64_t lpMultiByteStr, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    if (lpMultiByteStr != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(3, 0, lpMultiByteStr, 0xffffffff, 0, 0);\n        uVar4 = iVar2 - 1;\n    }\n    if (uVar4 < 1) {\n        fcn.180014bdc(arg1);\n    }\n    else {\n        if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar4) < 0) {\n            fcn.180014d48(arg1, uVar4);\n        }\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(3, 0, lpMultiByteStr, 0xffffffff, *arg1, uVar4);\n        if (*(*arg1 + -0xc) < uVar4) {\n            fcn.180001030(0x80070057);\n            pcVar1 = swi(3);\n            piVar3 = (*pcVar1)();\n            return piVar3;\n        }\n        *(*arg1 + -0x10) = uVar4;\n        *(*arg1 + uVar4 * 2) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 354
    },
    "1800150a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.1800150ac(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t noname_2;\n    ulong in_R9;\n    \n    piVar2 = fcn.18001549c();\n    noname_2 = piVar2 != NULL;\n    if (piVar2 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    iVar3 = (**(*piVar2 + 0x18))(piVar2);\n    *arg1 = iVar3 + 0x18;\n    if ((arg2 == 0) || ((arg2 & 0xffffffffffff0000) != 0)) {\n        fcn.180014f00(arg1, arg2, noname_2, in_R9);\n    }\n    else {\n        iVar3 = fcn.180015488(arg2 & 0xffff);\n        if (iVar3 != 0) {\n            fcn.180014fd8(arg1, iVar3, arg2 & 0xffff);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 286
    },
    "180015db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180015dbc(code **arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    code **ppcVar4;\n    int64_t iVar5;\n    uint64_t arg3_00;\n    \n    fcn.1800152ac(arg1);\n    *arg1 = vtable.CFileException.0;\n    piVar3 = fcn.18001549c();\n    arg3_00 = 0;\n    if (piVar3 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar4 = (*pcVar1)();\n        return ppcVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))(piVar3);\n    arg1[3] = iVar5 + 0x18;\n    *(arg1 + 2) = arg2;\n    *(arg1 + 0x14) = arg3;\n    if (arg4 != 0) {\n        uVar2 = fcn.180035930(arg4);\n        arg3_00 = uVar2;\n    }\n    fcn.180001640(arg1 + 3, arg4, arg3_00);\n    return arg1;\n}\n",
        "token_count": 301
    },
    "18001641": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool fcn.180016410(int64_t *arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    ulong in_R8;\n    ulong in_R9;\n    \n    if (arg1[0x13] == 0) {\n        iVar2 = (**(*arg1 + 600))(arg1, arg1 + 0x13, in_R8, in_R9, 0xfffffffffffffffe);\n        if ((iVar2 != 0) && (arg1[0x13] == 0)) {\n            iVar4 = fcn.18001e94c();\n            iVar4 = (**(**(iVar4 + 0x68) + 0x10))(*(iVar4 + 0x68), arg1);\n            arg1[0x13] = iVar4;\n        }\n        if (arg2 == 0) {\n            iVar4 = *arg1[0x13];\n            uVar5 = (**(*arg1 + 0x270))(arg1);\n            (**(iVar4 + 0x140))(arg1[0x13], uVar5);\n        }\n    }\n    piVar1 = arg1 + 0x13;\n    if (*piVar1 != 0) {\n        while ((*(arg1 + 0xf) >> 8 & 1) == 0) {\n            *(arg1 + 0xf) = *(arg1 + 0xf) | 0x100;\n            uVar5 = (*_sym.imp.USER32.dll_GetParent)(arg1[8]);\n            arg1 = fcn.18000fa14(uVar5);\n            iVar4 = 0;\n            if (arg1 != NULL) {\n                iVar4 = arg1[8];\n            }\n            uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0);\n            if (((uVar3 >> 0x1e & 1) == 0) || (arg1 == NULL)) break;\n        }\n    }\n    return *piVar1 != 0;\n}\n",
        "token_count": 474
    },
    "180016ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180016ad4(code **arg1)\n\n{\n    ulong *puVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    ulong *arg2;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong in_R9;\n    int64_t *piStackX16;\n    ulong uVar6;\n    \n    uVar6 = 0xfffffffffffffffe;\n    *arg1 = vtable.COleControlContainer.0;\n    puVar1 = arg1[0x11];\n    while( true ) {\n        arg2 = puVar1;\n        if (arg2 == NULL) {\n            pcVar3 = arg1[0x13];\n            while (pcVar3 != NULL) {\n                iVar5 = fcn.180020c58(arg1 + 0x10);\n                if (iVar5 != 0) {\n                    piVar2 = *(iVar5 + 8);\n                    if (piVar2 != NULL) {\n                        (**(*piVar2 + 8))(piVar2, 1, *piVar2, in_R9, uVar6);\n                    }\n                    fcn.18000b948(iVar5);\n                }\n                pcVar3 = arg1[0x13];\n            }\n            fcn.18001f0d4(arg1 + 9);\n            fcn.1800207b8(arg1 + 0x18);\n            if (0 < *(arg1 + 1)) {\n                piStackX16 = NULL;\n                iVar4 = fcn.180020a70(arg1, 0x180059550, &piStackX16);\n                if (-1 < iVar4) {\n                    fcn.1800207e0(piStackX16);\n                }\n                if (piStackX16 != NULL) {\n                    (**(*piStackX16 + 0x10))();\n                }\n            }\n            fcn.180020d40(arg1 + 0x10);\n            fcn.18001f314(arg1 + 9);\n            if (arg1[4] != NULL) {\n                (**(arg1[4] + 0x38))();\n            }\n            arg1[7] = NULL;\n            return;\n        }\n        if (arg2 == NULL) break;\n        puVar1 = *arg2;\n        iVar5 = arg2[2];\n        if (((iVar5 != 0) && (*(iVar5 + 8) != 0)) && (*(*(iVar5 + 8) + 0xd8) == 0)) {\n            fcn.180020ca4(arg1 + 0x10, arg2);\n            piVar2 = *(iVar5 + 8);\n            if (piVar2 != NULL) {\n                (**(*piVar2 + 8))(piVar2, 1);\n            }\n            fcn.18000b948(iVar5);\n        }\n    }\n    fcn.180015288();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 655
    },
    "18001756": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180017568(code **arg1, code *arg2)\n\n{\n    fcn.18000bea4(arg1);\n    *arg1 = vtable.COleControlContainer.0;\n    arg1[8] = arg2;\n    fcn.18001f2dc(arg1 + 9, 10);\n    fcn.180020d18(arg1 + 0x10, 10);\n    arg1[0x10] = vtable.CTypedPtrList_class_CPtrList__struct_COleControlSiteOrWnd____ptr64_.0;\n    *(arg1 + 0x17) = 0xffffffff;\n    *(arg1 + 0xbc) = 0xffffffff;\n    arg1[0x18] = NULL;\n    arg1[0x19] = NULL;\n    arg1[0x1a] = NULL;\n    arg1[0x1b] = NULL;\n    *(arg1 + 0x1c) = 0;\n    arg1[0x1d] = vtable.COleControlContainer::XOleIPFrame.0;\n    arg1[0x1e] = vtable.COleControlContainer::XOleContainer.0;\n    return arg1;\n}\n",
        "token_count": 271
    },
    "18001805": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001805c(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uStackX8;\n    \n    if (*(arg1 + 0xe8) != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, arg2);\n        if (iVar1 == 0) {\n            iVar1 = sub.WINSPOOL.DRV_OpenPrinterA(arg2, &uStackX8, 0);\n            if (iVar1 != 0) {\n                if (*(arg1 + 0xe0) != 0) {\n                    fcn.18001f938(*(arg1 + 0xe0));\n                }\n                iVar1 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, uStackX8, arg2, 0, 0, 0);\n                uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar1);\n                *(arg1 + 0xe0) = uVar3;\n                uVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                iVar1 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, uStackX8, arg2, uVar3, 0, 2);\n                if (iVar1 != 1) {\n                    fcn.18001f938(*(arg1 + 0xe0));\n                    *(arg1 + 0xe0) = 0;\n                }\n                sub.WINSPOOL.DRV_ClosePrinter(uStackX8);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "18001892": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180018928(code **arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    code **ppcVar4;\n    int64_t iVar5;\n    \n    fcn.18001cb34(arg1);\n    *arg1 = vtable.CWinApp.0;\n    if (arg2 == 0) {\n        arg1[0x14] = NULL;\n    }\n    else {\n        pcVar2 = fcn.1800389f0(arg2);\n        arg1[0x14] = pcVar2;\n    }\n    iVar3 = fcn.18001e94c();\n    if (iVar3 == 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        ppcVar4 = (*pcVar2)();\n        return ppcVar4;\n    }\n    iVar5 = fcn.1800206d0(iVar3 + 0xc0, 0x180018154);\n    if (iVar5 == 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        ppcVar4 = (*pcVar2)();\n        return ppcVar4;\n    }\n    if (iVar5 == 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        ppcVar4 = (*pcVar2)();\n        return ppcVar4;\n    }\n    *(iVar5 + 8) = arg1;\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)();\n    arg1[0xb] = pcVar2;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *(arg1 + 0xc) = uVar1;\n    *(iVar3 + 8) = arg1;\n    arg1[0x11] = NULL;\n    arg1[0x1f] = NULL;\n    arg1[0x19] = NULL;\n    arg1[0x1a] = NULL;\n    arg1[0x15] = NULL;\n    arg1[0x18] = NULL;\n    arg1[0x22] = NULL;\n    arg1[0x16] = NULL;\n    *(arg1 + 0x122) = 0;\n    *(arg1 + 0x24) = 0;\n    arg1[0x12] = NULL;\n    arg1[0x23] = NULL;\n    *(arg1 + 0x20) = 0;\n    arg1[0x21] = NULL;\n    arg1[0x1c] = NULL;\n    arg1[0x1d] = NULL;\n    *(arg1 + 0x124) = 0;\n    arg1[0x26] = NULL;\n    *(arg1 + 0x17) = 0;\n    *(arg1 + 0x1b) = 0;\n    arg1[0x25] = 0x200;\n    return arg1;\n}\n",
        "token_count": 670
    },
    "18001972": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180019724(code **arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    ulong arg2_00;\n    code *pcVar2;\n    \n    arg1[1] = NULL;\n    arg1[2] = NULL;\n    *(arg1 + 3) = 0;\n    *arg1 = vtable.CClientDC.0;\n    if (arg2 == 0) {\n        pcVar2 = NULL;\n    }\n    else {\n        pcVar2 = *(arg2 + 0x40);\n    }\n    arg1[4] = pcVar2;\n    arg2_00 = (*_sym.imp.USER32.dll_GetDC)();\n    iVar1 = fcn.180019660(arg1, arg2_00);\n    if (iVar1 == 0) {\n        fcn.180018ea4();\n    }\n    return arg1;\n}\n",
        "token_count": 196
    },
    "18001978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180019788(code **arg1)\n\n{\n    ulong uVar1;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar2;\n    \n    uVar2 = 0xfffffffffffffffe;\n    *arg1 = vtable.CClientDC.0;\n    uVar1 = fcn.1800196ac(arg1);\n    (*_sym.imp.USER32.dll_ReleaseDC)(arg1[4], uVar1, in_R8, in_R9, uVar2);\n    *arg1 = vtable.CDC.0;\n    if (arg1[1] != NULL) {\n        uVar1 = fcn.1800196ac(arg1);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "1800197c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.1800197c8(code **arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    ulong arg2_00;\n    code *pcVar2;\n    \n    arg1[1] = NULL;\n    arg1[2] = NULL;\n    *(arg1 + 3) = 0;\n    *arg1 = vtable.CWindowDC.0;\n    if (arg2 == 0) {\n        pcVar2 = NULL;\n    }\n    else {\n        pcVar2 = *(arg2 + 0x40);\n    }\n    arg1[4] = pcVar2;\n    arg2_00 = (*_sym.imp.USER32.dll_GetWindowDC)();\n    iVar1 = fcn.180019660(arg1, arg2_00);\n    if (iVar1 == 0) {\n        fcn.180018ea4();\n    }\n    return arg1;\n}\n",
        "token_count": 199
    },
    "18001982": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001982c(code **arg1)\n\n{\n    ulong uVar1;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar2;\n    \n    uVar2 = 0xfffffffffffffffe;\n    *arg1 = vtable.CWindowDC.0;\n    uVar1 = fcn.1800196ac(arg1);\n    (*_sym.imp.USER32.dll_ReleaseDC)(arg1[4], uVar1, in_R8, in_R9, uVar2);\n    *arg1 = vtable.CDC.0;\n    if (arg1[1] != NULL) {\n        uVar1 = fcn.1800196ac(arg1);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "18001986": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18001986c(code **arg1, int64_t hWnd)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong arg2;\n    ulong in_R8;\n    ulong in_R9;\n    \n    arg1[1] = NULL;\n    arg1[2] = NULL;\n    *(arg1 + 3) = 0;\n    *arg1 = vtable.CPaintDC.0;\n    pcVar1 = *(hWnd + 0x40);\n    arg1[4] = pcVar1;\n    arg2 = (*_sym.imp.USER32.dll_BeginPaint)(pcVar1, arg1 + 5, in_R8, in_R9, 0xfffffffffffffffe);\n    iVar2 = fcn.180019660(arg1, arg2);\n    if (iVar2 == 0) {\n        fcn.180018ea4();\n    }\n    return arg1;\n}\n",
        "token_count": 202
    },
    "1800198c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800198cc(code **lpPaint)\n\n{\n    ulong uVar1;\n    ulong in_R8;\n    ulong in_R9;\n    \n    *lpPaint = vtable.CPaintDC.0;\n    (*_sym.imp.USER32.dll_EndPaint)(lpPaint[4], lpPaint + 5, in_R8, in_R9, 0xfffffffffffffffe);\n    fcn.1800196ac(lpPaint);\n    *lpPaint = vtable.CDC.0;\n    if (lpPaint[1] != NULL) {\n        uVar1 = fcn.1800196ac(lpPaint);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "18001a96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001a96c(ulong arg1, ulong hResData, ulong arg3, ulong arg4)\n\n{\n    ulong arg2;\n    \n    arg2 = (*_sym.imp.KERNEL32.dll_LockResource)(hResData);\n    fcn.18001a908(arg1, arg2, arg3, 0);\n    return;\n}\n",
        "token_count": 79
    },
    "18001b6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001b6bc(code **arg1)\n\n{\n    ulong *puVar1;\n    ulong in_R8;\n    ulong in_R9;\n    \n    *arg1 = vtable.CControlSiteFactoryMgr.0;\n    puVar1 = arg1[8];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1, in_R8, in_R9, 0xfffffffffffffffe);\n    }\n    fcn.18001b0d0(arg1 + 1);\n    arg1[1] = vtable.CList_class_IControlSiteFactory____ptr64__class_IControlSiteFactory____ptr64_.0;\n    for (puVar1 = arg1[2]; puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    arg1[3] = NULL;\n    arg1[2] = NULL;\n    fcn.18002f310(arg1[6]);\n    arg1[6] = NULL;\n    return;\n}\n",
        "token_count": 240
    },
    "18001b83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18001b830(code **arg1)\n\n{\n    code **arg2;\n    \n    *arg1 = vtable.CControlSiteFactoryMgr.0;\n    arg1[1] = vtable.CList_class_IControlSiteFactory____ptr64__class_IControlSiteFactory____ptr64_.0;\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    arg1[3] = NULL;\n    arg1[2] = NULL;\n    arg1[6] = NULL;\n    arg1[7] = 0xa;\n    arg2 = fcn.18000b904(8);\n    if (arg2 == NULL) {\n        arg2 = NULL;\n    }\n    else {\n        *arg2 = vtable.COleControlSiteFactory.0;\n    }\n    arg1[8] = arg2;\n    fcn.18001b714(arg1, arg2);\n    return arg1;\n}\n",
        "token_count": 206
    },
    "18001c46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18001c468(uint64_t arg1, uint64_t arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t hModule;\n    int64_t iStackX32;\n    \n    arg1 = arg1 & 0xffffffff;\n    piVar5 = fcn.18001549c();\n    if (piVar5 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar3 = swi(3);\n        uVar6 = (*pcVar3)();\n        return uVar6;\n    }\n    iVar7 = (**(*piVar5 + 0x18))(piVar5);\n    iStackX32 = iVar7 + 0x18;\n    hModule = fcn.180015488(arg1);\n    iVar7 = iVar7 + 0x18;\n    if (hModule != 0) {\n        fcn.180001510(&iStackX32, hModule, arg1);\n        iVar7 = iStackX32;\n    }\n    if (arg3 == 0xffffffff) {\n        arg3._0_4_ = arg1;\n    }\n    uVar4 = fcn.18001c410(iVar7, arg2 & 0xffffffff, arg3);\n    LOCK();\n    piVar1 = iVar7 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar7 + -0x18) + 8))();\n    }\n    return uVar4;\n}\n",
        "token_count": 401
    },
    "18001c6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001c6b0(code **arg1)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = vtable.CWinThread.0;\n    if (arg1[0xb] != NULL) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    iVar1 = fcn.18001e99c();\n    if (*(iVar1 + 8) == arg1) {\n        *(iVar1 + 8) = 0;\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 148
    },
    "18001caa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18001caa8(code **arg1, code *arg2, code *arg3)\n\n{\n    fcn.18000bea4(arg1);\n    *arg1 = vtable.CWinThread.0;\n    arg1[0xe] = arg2;\n    arg1[0xd] = arg3;\n    fcn.18001c65c(arg1);\n    return arg1;\n}\n",
        "token_count": 91
    },
    "18001ceb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.18001ceb8(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    if (arg2 < 1) {\n        iVar5 = *(arg1 + 0x40);\n        if (((iVar5 != 0) && (*(iVar5 + 0x40) != 0)) && (iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(),  iVar2 != 0))\n        {\n            fcn.180010348(iVar5, *(iVar5 + 0x40), 0x363, 1);\n            fcn.180010790(*(iVar5 + 0x40), 0x363, 1, 0);\n        }\n        iVar3 = fcn.18001e94c();\n        iVar3 = fcn.1800206d0(iVar3 + 0xc0, 0x180018154);\n        if (iVar3 == 0) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        for (iVar3 = *(iVar3 + 0x10); iVar3 != 0; iVar3 = *(iVar3 + 200)) {\n            if ((*(iVar3 + 0x40) != 0) && (iVar3 != iVar5)) {\n                if (*(iVar3 + 0x120) == 0) {\n                    fcn.180013e58(iVar3, 0);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x40));\n                if ((iVar2 != 0) || (-1 < *(iVar3 + 0x120))) {\n                    fcn.180010348(iVar3, *(iVar3 + 0x40), 0x363, 1);\n                    fcn.180010790(*(iVar3 + 0x40), 0x363, 1, 0);\n                }\n                if (0 < *(iVar3 + 0x120)) {\n                    fcn.180013e58(iVar3, *(iVar3 + 0x120));\n                }\n                *(iVar3 + 0x120) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        iVar5 = fcn.18001e94c();\n        iVar5 = fcn.1800206d0(iVar5 + 0xc0, 0x180018154);\n        if (iVar5 == 0) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        if (*(iVar5 + 0x20) == 0) {\n            fcn.18001f43c();\n            fcn.18001f704(1);\n        }\n    }\n    return arg2 < 1;\n}\n",
        "token_count": 668
    },
    "18001d33": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.18001d330(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    int64_t *arg1_01;\n    uint32_t in_stack_00000028;\n    ulong in_stack_00000030;\n    \n    arg1_00 = fcn.18000b904(0x88);\n    if (arg1_00 == 0) {\n        arg1_01 = NULL;\n    }\n    else {\n        arg1_01 = fcn.18001caa8(arg1_00, arg1, arg2);\n    }\n    iVar1 = fcn.18001d1bc(arg1_01, in_stack_00000028 | 4, arg4, in_stack_00000030);\n    if (iVar1 == 0) {\n        (**(*arg1_01 + 0xf0))(arg1_01);\n        arg1_01 = NULL;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetThreadPriority)(arg1_01[0xb], arg3);\n        if ((in_stack_00000028 & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(arg1_01[0xb]);\n        }\n    }\n    return arg1_01;\n}\n",
        "token_count": 299
    },
    "18001dfe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18001dfe4(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    ulong in_R8;\n    ulong in_R9;\n    \n    *arg1 = vtable.AFX_MODULE_STATE.0;\n    piVar3 = arg1[0x17];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 0x18))(piVar3, arg1 + 0x10, in_R8, in_R9, 0xfffffffffffffffe);\n        piVar3 = arg1[0x17];\n        if (piVar3 != NULL) {\n            (**(*piVar3 + 8))(piVar3, 1);\n        }\n    }\n    puVar4 = *arg1[0x19];\n    if (puVar4 != NULL) {\n        (***puVar4)(puVar4, 1);\n    }\n    puVar4 = *(arg1[0x19] + 8);\n    if (puVar4 != NULL) {\n        (***puVar4)(puVar4, 1);\n    }\n    fcn.18000b948(arg1[0x19]);\n    if ((arg1[0x1b] != NULL) && (arg1[0x1b] != 0xffffffffffffffff)) {\n        if (*0x180073c78 != NULL) {\n            (**0x180073c78)();\n        }\n        arg1[0x1b] = 0xffffffffffffffff;\n    }\n    fcn.18002078c(arg1 + 0x18);\n    pcVar5 = arg1[0xb];\n    LOCK();\n    piVar1 = pcVar5 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar5 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 456
    },
    "18001e16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18001e164(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iStackX8;\n    \n    fcn.1800018b0(&iStackX8, \"comctl32.dll\");\n    *arg1 = vtable.CDllIsolationWrapperBase.0;\n    iVar3 = fcn.180001450(iStackX8 + -0x18);\n    arg1[3] = iVar3 + 0x18;\n    arg1[1] = NULL;\n    *(arg1 + 2) = 0;\n    LOCK();\n    piVar1 = iStackX8 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStackX8 + -0x18) + 8))();\n    }\n    *arg1 = vtable.CComCtlWrapper.0;\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    arg1[6] = NULL;\n    arg1[7] = NULL;\n    arg1[8] = NULL;\n    arg1[9] = NULL;\n    arg1[10] = NULL;\n    arg1[0xb] = NULL;\n    arg1[0xc] = NULL;\n    arg1[0xd] = NULL;\n    arg1[0xe] = NULL;\n    arg1[0xf] = NULL;\n    arg1[0x10] = NULL;\n    arg1[0x11] = NULL;\n    arg1[0x12] = NULL;\n    arg1[0x13] = NULL;\n    arg1[0x14] = NULL;\n    arg1[0x15] = NULL;\n    arg1[0x16] = NULL;\n    arg1[0x17] = NULL;\n    arg1[0x18] = NULL;\n    arg1[0x19] = NULL;\n    arg1[0x1a] = NULL;\n    arg1[0x1b] = NULL;\n    arg1[0x1c] = NULL;\n    arg1[0x1d] = NULL;\n    arg1[0x1e] = NULL;\n    arg1[0x1f] = NULL;\n    arg1[0x20] = NULL;\n    arg1[0x21] = NULL;\n    arg1[0x22] = NULL;\n    arg1[0x23] = NULL;\n    arg1[0x24] = NULL;\n    arg1[0x25] = NULL;\n    arg1[0x26] = NULL;\n    arg1[0x27] = NULL;\n    arg1[0x28] = NULL;\n    arg1[0x29] = NULL;\n    arg1[0x2a] = NULL;\n    arg1[0x2b] = NULL;\n    arg1[0x2c] = NULL;\n    arg1[0x2d] = NULL;\n    arg1[0x2e] = NULL;\n    arg1[0x2f] = NULL;\n    arg1[0x30] = NULL;\n    arg1[0x31] = NULL;\n    arg1[0x32] = NULL;\n    arg1[0x33] = NULL;\n    arg1[0x34] = NULL;\n    arg1[0x35] = NULL;\n    arg1[0x36] = NULL;\n    arg1[0x37] = NULL;\n    arg1[0x38] = NULL;\n    arg1[0x39] = NULL;\n    arg1[0x3a] = NULL;\n    arg1[0x3b] = NULL;\n    arg1[0x3c] = NULL;\n    arg1[0x3d] = NULL;\n    arg1[0x3e] = NULL;\n    arg1[0x3f] = NULL;\n    arg1[0x40] = NULL;\n    arg1[0x41] = NULL;\n    arg1[0x42] = NULL;\n    arg1[0x43] = NULL;\n    arg1[0x44] = NULL;\n    arg1[0x45] = NULL;\n    arg1[0x46] = NULL;\n    arg1[0x47] = NULL;\n    arg1[0x48] = NULL;\n    arg1[0x49] = NULL;\n    arg1[0x4a] = NULL;\n    arg1[0x4b] = NULL;\n    arg1[0x4c] = NULL;\n    arg1[0x4d] = NULL;\n    arg1[0x4e] = NULL;\n    arg1[0x4f] = NULL;\n    arg1[0x50] = NULL;\n    arg1[0x51] = NULL;\n    arg1[0x52] = NULL;\n    arg1[0x53] = NULL;\n    arg1[0x54] = NULL;\n    arg1[0x55] = NULL;\n    arg1[0x56] = NULL;\n    arg1[0x57] = NULL;\n    arg1[0x58] = NULL;\n    arg1[0x59] = NULL;\n    arg1[0x5a] = NULL;\n    arg1[0x5b] = NULL;\n    arg1[0x5c] = NULL;\n    arg1[0x5d] = NULL;\n    arg1[0x5e] = NULL;\n    arg1[0x5f] = NULL;\n    arg1[0x60] = NULL;\n    arg1[0x61] = NULL;\n    return arg1;\n}\n",
        "token_count": 1280
    },
    "18001e4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18001e4c4(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iStackX8;\n    \n    fcn.1800018b0(&iStackX8, \"comdlg32.dll\");\n    *arg1 = vtable.CDllIsolationWrapperBase.0;\n    iVar3 = fcn.180001450(iStackX8 + -0x18);\n    arg1[3] = iVar3 + 0x18;\n    arg1[1] = NULL;\n    *(arg1 + 2) = 0;\n    LOCK();\n    piVar1 = iStackX8 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStackX8 + -0x18) + 8))();\n    }\n    *arg1 = vtable.CCommDlgWrapper.0;\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    arg1[6] = NULL;\n    arg1[7] = NULL;\n    arg1[8] = NULL;\n    arg1[9] = NULL;\n    arg1[10] = NULL;\n    arg1[0xb] = NULL;\n    arg1[0xc] = NULL;\n    arg1[0xd] = NULL;\n    arg1[0xe] = NULL;\n    arg1[0xf] = NULL;\n    arg1[0x10] = NULL;\n    arg1[0x11] = NULL;\n    arg1[0x12] = NULL;\n    arg1[0x13] = NULL;\n    arg1[0x14] = NULL;\n    arg1[0x15] = NULL;\n    arg1[0x16] = NULL;\n    arg1[0x17] = NULL;\n    arg1[0x18] = NULL;\n    return arg1;\n}\n",
        "token_count": 449
    },
    "18001e62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18001e624(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t aiStackX8 [4];\n    \n    fcn.1800018b0(aiStackX8, \"shell32.dll\");\n    *arg1 = vtable.CDllIsolationWrapperBase.0;\n    iVar3 = fcn.180001450(aiStackX8[0] + -0x18);\n    arg1[3] = iVar3 + 0x18;\n    arg1[1] = NULL;\n    *(arg1 + 2) = 0;\n    LOCK();\n    piVar1 = aiStackX8[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(aiStackX8[0] + -0x18) + 8))();\n    }\n    *arg1 = vtable.CShellWrapper.0;\n    arg1[4] = NULL;\n    return arg1;\n}\n",
        "token_count": 252
    },
    "18001e71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18001e710(code **arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    code **ppcVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    ulong uVar5;\n    \n    *arg1 = vtable.AFX_MODULE_STATE.0;\n    arg1[6] = NULL;\n    arg1[7] = NULL;\n    arg1[8] = NULL;\n    arg1[9] = NULL;\n    piVar1 = fcn.18001549c();\n    if (piVar1 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar4 = swi(3);\n        ppcVar2 = (*pcVar4)();\n        return ppcVar2;\n    }\n    iVar3 = (**(*piVar1 + 0x18))(piVar1);\n    arg1[0xb] = iVar3 + 0x18;\n    arg1[0xe] = NULL;\n    arg1[0xf] = NULL;\n    *(arg1 + 0x11) = 0xffffffff;\n    arg1[0x12] = NULL;\n    arg1[0x15] = NULL;\n    *(arg1 + 0x16) = 0;\n    arg1[9] = 0x40;\n    arg1[7] = 0x20;\n    *(arg1 + 0x2c) = 0;\n    *(arg1 + 5) = arg2;\n    if ((*(arg1[0xb] + -0xc) - 0x1000U | 1U - *(arg1[0xb] + -8)) < 0) {\n        fcn.1800013f0(arg1 + 0xb, 0x1000);\n    }\n    *(arg1 + 0x54) = 1;\n    arg1[0xf] = 0x20;\n    pcVar4 = fcn.18000b904(0x18);\n    arg1[0x19] = pcVar4;\n    iVar3 = fcn.18001ff24(0x310);\n    if (iVar3 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.18001e164(iVar3);\n    }\n    *arg1[0x19] = uVar5;\n    iVar3 = fcn.18001ff24(200);\n    if (iVar3 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.18001e4c4(iVar3);\n    }\n    *(arg1[0x19] + 8) = uVar5;\n    iVar3 = fcn.18001ff24(0x28);\n    if (iVar3 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.18001e624(iVar3);\n    }\n    *(arg1[0x19] + 0x10) = uVar5;\n    *(arg1 + 0x1a) = 1;\n    arg1[0x1b] = NULL;\n    *(arg1 + 0x1c) = 0;\n    *(arg1 + 0xe4) = 0;\n    return arg1;\n}\n",
        "token_count": 741
    },
    "18001f45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18001f450(code **arg1, code *arg2, code *arg3, code *arg4)\n\n{\n    code *pcVar1;\n    code **ppcVar2;\n    code *in_stack_00000028;\n    uint in_stack_00000030;\n    \n    *arg1 = vtable.CHandleMap.0;\n    fcn.180030c54(arg1 + 1, *(arg2 + 8), 0x40);\n    fcn.18001f2dc(arg1 + 6, 10);\n    fcn.18001f2dc(arg1 + 0xd, 4);\n    if (arg3 == NULL) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        ppcVar2 = (*pcVar1)();\n        return ppcVar2;\n    }\n    if (arg4 == NULL) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        ppcVar2 = (*pcVar1)();\n        return ppcVar2;\n    }\n    fcn.18001f054(arg1 + 0xd, 7, 0);\n    arg1[0x14] = arg2;\n    arg1[4] = arg3;\n    arg1[5] = arg4;\n    arg1[0x15] = in_stack_00000028;\n    *(arg1 + 0x16) = in_stack_00000030;\n    return arg1;\n}\n",
        "token_count": 329
    },
    "18001f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool fcn.18001f704(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t arg1_00;\n    ulong uVar5;\n    uint32_t uVar6;\n    \n    iVar1 = fcn.18001e99c();\n    arg1_00 = 0;\n    if (*(iVar1 + 0x20) != 0) {\n        uVar6 = *(iVar1 + 0x20) - 1;\n        uVar4 = uVar6;\n        *(iVar1 + 0x20) = uVar6;\n        if (uVar6 == 0) {\n            if (arg1 != 0) {\n                if (arg1 != -1) {\n                    iVar2 = fcn.18001c528();\n                    if ((iVar2 != 0) && (*(iVar2 + 0x78) != NULL)) {\n                        uVar4 = 0;\n                        (**(iVar2 + 0x78))(0);\n                    }\n                }\n                fcn.18001f60c(*(iVar1 + 0x40), uVar4);\n                fcn.18001f60c(*(iVar1 + 0x38), uVar4);\n                fcn.18001f60c(*(iVar1 + 0x30), uVar4);\n                fcn.18001f60c(*(iVar1 + 0x28), uVar4);\n                fcn.18001f60c(*(iVar1 + 0x48), uVar4);\n            }\n            iVar2 = fcn.18001e94c();\n            iVar2 = *(iVar2 + 8);\n            iVar3 = fcn.18001ffd0(0x180073ca0);\n            if ((iVar3 != 0) && (iVar2 != 0)) {\n                if (*(iVar3 + 0x18) != 0) {\n                    uVar4 = fcn.180038cc4(*(iVar3 + 0x18));\n                    if (*(iVar2 + 0x128) <= uVar4) goto code_r0x00018001f823;\n                }\n                if (*(iVar2 + 0x128) != 0) {\n                    if (*(iVar3 + 0x18) != 0) {\n                        arg1_00 = fcn.180038cc4(*(iVar3 + 0x18));\n                        fcn.1800357dc(*(iVar3 + 0x18));\n                    }\n                    iVar2 = fcn.180035724(*(iVar2 + 0x128));\n                    *(iVar3 + 0x18) = iVar2;\n                    if ((iVar2 == 0) && (arg1_00 != 0)) {\n                        uVar5 = fcn.180035724(arg1_00);\n                        *(iVar3 + 0x18) = uVar5;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00018001f823:\n    return *(iVar1 + 0x20) != 0;\n}\n",
        "token_count": 671
    },
    "18001fa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.18001fa4c(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    ulong auStackX16 [3];\n    uchar auStack24 [16];\n    \n    auStackX16[0] = arg2;\n    (*_sym.imp.USER32.dll_ClientToScreen)(arg1, auStackX16);\n    uVar3 = 5;\n    do {\n        arg1 = (*_sym.imp.USER32.dll_GetWindow)(arg1, uVar3);\n        if (arg1 == 0) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg1);\n        if ((iVar1 != 0xffff) &&\n           (uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg1, 0xfffffff0),  (uVar2 >> 0x1c & 1) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(arg1, auStack24);\n            iVar1 = (*_sym.imp.USER32.dll_PtInRect)(auStack24, auStackX16[0]);\n            if (iVar1 != 0) {\n                return arg1;\n            }\n        }\n        uVar3 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "18001fff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.18001fff4(int64_t *arg1, code *arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*arg1 == 0) {\n        fcn.18001fcbc(0x10);\n        if (*arg1 == 0) {\n            iVar1 = (*arg2)();\n            *arg1 = iVar1;\n        }\n        fcn.18001fd50(0x10);\n    }\n    return *arg1;\n}\n",
        "token_count": 105
    },
    "1800203a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800203a4(uint *lpCriticalSection, ulong arg2, int64_t arg3)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    ulong in_R9;\n    ulong uVar3;\n    \n    uVar3 = 0xfffffffffffffffe;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 10);\n    if ((arg2 < 1) || (lpCriticalSection[3] <= arg2)) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n        return;\n    }\n    ppcVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*lpCriticalSection);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = fcn.18001ff24(0x20);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        *(ppcVar1 + 2) = 0;\n        ppcVar1[3] = NULL;\n        *(ppcVar1 + *(lpCriticalSection + 8)) = *(lpCriticalSection + 6);\n        *(lpCriticalSection + 6) = ppcVar1;\n    }\n    else if ((arg2 < *(ppcVar1 + 2)) || (arg3 == 0)) goto code_r0x0001800204f1;\n    if (ppcVar1[3] == NULL) {\n        if (0xffffffff < lpCriticalSection[3] << 3) {\n            fcn.180001030(0x80070057);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0);\n    }\n    else {\n        if (0xffffffff < lpCriticalSection[3] << 3) {\n            fcn.180001030(0x80070057);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)\n                           (ppcVar1[3], lpCriticalSection[3] << 3 & 0xffffffff, 2, in_R9, uVar3);\n    }\n    if (pcVar2 == NULL) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n        fcn.180015240();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    ppcVar1[3] = pcVar2;\n    fcn.180035830(pcVar2 + *(ppcVar1 + 2) * 8, 0, lpCriticalSection[3] - *(ppcVar1 + 2) << 3);\n    *(ppcVar1 + 2) = lpCriticalSection[3];\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*lpCriticalSection, ppcVar1);\ncode_r0x0001800204f1:\n    if ((ppcVar1[3] != NULL) && (arg2 < *(ppcVar1 + 2))) {\n        *(ppcVar1[3] + arg2 * 8) = arg3;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n    return;\n}\n",
        "token_count": 747
    },
    "1800206d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.1800206d0(uint32_t *arg1, code *arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    \n    if (arg2 == NULL) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    if (*arg1 == 0) {\n        if (*0x180074050 == 0) {\n            *0x180074050 = fcn.180020124(0x180074060);\n            if (*0x180074050 == 0) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                iVar3 = (*pcVar1)();\n                return iVar3;\n            }\n        }\n        uVar2 = fcn.180020174(*0x180074050);\n        *arg1 = uVar2;\n        if (uVar2 == 0) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            iVar3 = (*pcVar1)();\n            return iVar3;\n        }\n    }\n    iVar3 = fcn.18001ff60(*0x180074050, *arg1);\n    if (iVar3 == 0) {\n        iVar3 = (*arg2)();\n        fcn.1800203a4(*0x180074050, *arg1, iVar3);\n    }\n    return iVar3;\n}\n",
        "token_count": 329
    },
    "1800210b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.1800210bc(int64_t *arg1, uint64_t arg2, int64_t *arg3)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    ulong in_R9;\n    \n    if (arg3 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    iVar3 = (**(*arg3 + 0x18))(arg3);\n    *arg1 = iVar3 + 0x18;\n    if ((arg2 == 0) || ((arg2 & 0xffffffffffff0000) != 0)) {\n        fcn.180014f00(arg1, arg2, arg3, in_R9);\n    }\n    else {\n        iVar3 = fcn.180015488(arg2 & 0xffff);\n        if (iVar3 != 0) {\n            fcn.180014fd8(arg1, iVar3, arg2 & 0xffff);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 254
    },
    "1800211d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.1800211d8(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    \n    if ((arg3 == 0) || (arg2 == 0)) {\n        uVar6 = 0;\n    }\n    else {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002279c(4, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            uVar6 = (*pcVar2)();\n            return uVar6;\n        }\n        piVar1 = arg1 + 0x40;\n        uVar8 = *piVar1 - *(arg1 + 0x38);\n        uVar6 = uVar8;\n        if (arg3 < uVar8) {\n            uVar6 = arg3;\n        }\n        iVar3 = fcn.1800341d0(arg2, arg3, *(arg1 + 0x38), uVar6);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.180015240();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n        }\n        *(arg1 + 0x38) = *(arg1 + 0x38) + uVar6;\n        arg2 = arg2 + uVar6;\n        uVar8 = arg3 - uVar6;\n        if (uVar8 != 0) {\n            iVar9 = uVar8 - uVar8 % *(arg1 + 0x28);\n            iVar7 = 0;\n            iVar3 = iVar9;\n            do {\n                uVar4 = (**(**(arg1 + 0x30) + 0x68))(*(arg1 + 0x30), arg2, iVar3);\n                iVar7 = iVar7 + uVar4;\n                iVar3 = iVar3 - uVar4;\n                arg2 = arg2 + uVar4;\n                if (uVar4 == 0) break;\n            } while (iVar3 != 0);\n            uVar8 = uVar8 - iVar7;\n            if ((uVar8 != 0) && (iVar7 == iVar9)) {\n                if (*(arg1 + 0xc) == 0) {\n                    uVar4 = uVar8;\n                    if ((*(arg1 + 0x10) == 0) && (uVar4 = *(arg1 + 0x28),  *(arg1 + 0x28) < uVar8)) {\n                        uVar4 = uVar8;\n                    }\n                    iVar11 = *(arg1 + 0x48);\n                    uVar10 = 0;\n                    do {\n                        uVar5 = (**(**(arg1 + 0x30) + 0x68))(*(arg1 + 0x30), iVar11, uVar4);\n                        uVar10 = uVar10 + uVar5;\n                        uVar4 = uVar4 - uVar5;\n                        iVar11 = iVar11 + uVar5;\n                        if ((uVar5 == 0) || (uVar4 == 0)) break;\n                    } while (uVar10 < uVar8);\n                    iVar11 = *(arg1 + 0x48);\n                    *piVar1 = uVar10 + iVar11;\n                }\n                else {\n                    (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 0, *(arg1 + 0x28), arg1 + 0x48, piVar1);\n                    iVar11 = *(arg1 + 0x48);\n                }\n                uVar4 = *piVar1 - iVar11;\n                *(arg1 + 0x38) = iVar11;\n                if (uVar8 < uVar4) {\n                    uVar4 = uVar8;\n                }\n                iVar3 = fcn.1800341d0(arg2, uVar8, iVar11, uVar4);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.180015240();\n                        pcVar2 = swi(3);\n                        uVar6 = (*pcVar2)();\n                        return uVar6;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        uVar6 = (*pcVar2)();\n                        return uVar6;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        uVar6 = (*pcVar2)();\n                        return uVar6;\n                    }\n                }\n                *(arg1 + 0x38) = *(arg1 + 0x38) + uVar4;\n                uVar8 = uVar8 - uVar4;\n            }\n        }\n        uVar6 = arg3 - uVar8;\n    }\n    return uVar6;\n}\n",
        "token_count": 1307
    },
    "1800213b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800213b4(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        piVar1 = arg1 + 0x48;\n        if (*(arg1 + 0xc) == 0) {\n            iVar2 = *piVar1;\n            if (*(arg1 + 0x38) != iVar2) {\n                (**(**(arg1 + 0x30) + 0x70))(*(arg1 + 0x30), iVar2, *(arg1 + 0x38) - iVar2);\n            }\n        }\n        else {\n            if (*(arg1 + 0x38) != *piVar1) {\n                (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 2, *(arg1 + 0x38) - *piVar1, 0, 0);\n            }\n            (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 1, *(arg1 + 0x28), piVar1, arg1 + 0x40);\n        }\n        iVar2 = *piVar1;\n    }\n    else {\n        if (*(arg1 + 0x40) != *(arg1 + 0x38)) {\n            (**(**(arg1 + 0x30) + 0x50))(*(arg1 + 0x30), *(arg1 + 0x38) - *(arg1 + 0x40), 1);\n        }\n        iVar2 = *(arg1 + 0x40);\n    }\n    *(arg1 + 0x38) = iVar2;\n    return;\n}\n",
        "token_count": 402
    },
    "18002147": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180021474(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint64_t arg1_00;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t arg4;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002279c(4, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    piVar1 = arg1 + 0x40;\n    uVar4 = *piVar1 - *(arg1 + 0x38);\n    arg4 = uVar4;\n    uVar7 = uVar4 + arg2;\n    if (*(arg1 + 0xc) == 0) {\n        arg1_00 = *(arg1 + 0x48);\n        if (arg1_00 < *(arg1 + 0x38)) {\n            if (0 < uVar4) {\n                iVar3 = fcn.180034268(arg1_00, *piVar1 - arg1_00, *(arg1 + 0x38), arg4);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.180015240();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                arg1_00 = *(arg1 + 0x48);\n                *(arg1 + 0x38) = arg1_00;\n                *piVar1 = arg4 + arg1_00;\n            }\n            if (*(arg1 + 0x10) == 0) {\n                arg2._0_4_ = *(arg1 + 0x28);\n            }\n            arg2._0_4_ = arg2 - uVar4;\n            iVar6 = arg4 + arg1_00;\n            do {\n                uVar4 = (**(**(arg1 + 0x30) + 0x68))(*(arg1 + 0x30), iVar6, arg2);\n                uVar5 = arg4 + uVar4;\n                arg4 = uVar5;\n                arg2._0_4_ = arg2 - uVar4;\n                iVar6 = iVar6 + uVar4;\n                if ((uVar4 == 0) || (arg2 == 0)) break;\n            } while (uVar5 < uVar7);\n            *(arg1 + 0x38) = *(arg1 + 0x48);\n            *piVar1 = arg4 + *(arg1 + 0x48);\n        }\n    }\n    else {\n        if (uVar4 != 0) {\n            (**(**(arg1 + 0x30) + 0x50))();\n        }\n        (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 0, *(arg1 + 0x28), arg1 + 0x48, piVar1);\n        *(arg1 + 0x38) = *(arg1 + 0x48);\n    }\n    if (*piVar1 - *(arg1 + 0x38) < uVar7) {\n        fcn.18002279c(3, 0);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 884
    },
    "18002174": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180021740(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t arg4;\n    \n    if ((arg3 != 0) && (arg2 != 0)) {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002279c(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = arg1 + 0x40;\n        uVar4 = *piVar1 - *(arg1 + 0x38);\n        arg4 = uVar4;\n        if (arg3 < uVar4) {\n            arg4 = arg3;\n        }\n        iVar3 = fcn.1800341d0(*(arg1 + 0x38), *piVar1 - *(arg1 + 0x38), arg2, arg4);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.180015240();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        *(arg1 + 0x38) = *(arg1 + 0x38) + arg4;\n        arg3._0_4_ = arg3 - arg4;\n        if (arg3 != 0) {\n            fcn.1800213b4(arg1);\n            uVar4 = arg3 - arg3 % *(arg1 + 0x28);\n            (**(**(arg1 + 0x30) + 0x70))(*(arg1 + 0x30), arg2 + arg4, uVar4);\n            arg3._0_4_ = arg3 - uVar4;\n            if (*(arg1 + 0xc) != 0) {\n                (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 1, *(arg1 + 0x28), arg1 + 0x48, piVar1);\n                *(arg1 + 0x38) = *(arg1 + 0x48);\n            }\n            if (*(arg1 + 0x28) <= arg3) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (*(arg1 + 0x38) != *(arg1 + 0x48)) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            iVar3 = fcn.1800341d0(*(arg1 + 0x38), arg3, arg2 + arg4 + uVar4, arg3);\n            if (iVar3 != 0) {\n                if (iVar3 == 0xc) {\n                    fcn.180015240();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                    fcn.180015288();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                if (iVar3 != 0x50) {\n                    fcn.180015288();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n            }\n            *(arg1 + 0x38) = *(arg1 + 0x38) + arg3;\n        }\n    }\n    return;\n}\n",
        "token_count": 921
    },
    "180021bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180021bb4(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    if ((*(arg1 + 0x30) != 0) && ((*(arg1 + 0x20) & 2) == 0)) {\n        fcn.1800213b4(arg1);\n        *(arg1 + 0x30) = 0;\n    }\n    fcn.180021148(arg1);\n    iVar3 = *(arg1 + 0x18);\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "180021ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.180021ef0(int16_t *arg1, ulong *arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    int16_t iStack24;\n    int16_t iStack22;\n    int16_t iStack18;\n    int16_t iStack16;\n    int16_t iStack14;\n    int16_t iStack12;\n    \n    uVar3 = 0;\n    uVar4 = 0;\n    if (arg2 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    iVar2 = (*_sym.imp.OLEAUT32.dll_VariantTimeToSystemTime)();\n    fcn.180035830(&iStack24, 0, 0x10);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*arg2);\n        if ((((iVar2 != 0) && (*arg1 == iStack24)) && (uVar3 = uVar4,  arg1[1] == iStack22)) &&\n           (((arg1[3] == iStack18 && (arg1[4] == iStack16)) && ((arg1[5] == iStack14 && (arg1[6] == iStack12)))))) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 342
    },
    "1800221c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint32_t fcn.1800221cc(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack18;\n    \n    fcn.180035830(&uStack24, 0, 0x10);\n    uStack24 = arg2;\n    uStack22 = arg3;\n    uStack18 = arg4;\n    iVar1 = fcn.180021ef0(&uStack24, arg1);\n    *(arg1 + 8) = iVar1 == 0;\n    return iVar1 == 0;\n}\n",
        "token_count": 143
    },
    "1800223d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.1800223dc(code **arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.18001549c();\n    *arg1 = vtable.ATL::CFixedStringMgr.0;\n    arg1[1] = pcVar1;\n    arg1[2] = arg1 + 4;\n    *(arg1 + 6) = 0xffffffff;\n    *(arg1[2] + 8) = 0;\n    *(arg1[2] + 0xc) = 0x100;\n    *arg1[2] = arg1;\n    *(arg1[2] + 0x18) = 0;\n    fcn.1800210bc(arg1 + 3, arg2, arg1);\n    *arg1 = \n    vtable.ATL::CFixedStringT_class_ATL::CStringT_wchar_t__class_StrTraitMFC_wchar_t__class_ATL::ChTraitsCRT_wchar_t_____256_.0\n    ;\n    return arg1;\n}\n",
        "token_count": 236
    },
    "1800226a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.1800226a4(code **arg1, ulong arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    code **ppcVar4;\n    int64_t iVar5;\n    uint64_t arg3_00;\n    \n    fcn.1800152ac(arg1);\n    *arg1 = vtable.CArchiveException.0;\n    piVar3 = fcn.18001549c();\n    arg3_00 = 0;\n    if (piVar3 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar4 = (*pcVar1)();\n        return ppcVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))(piVar3);\n    arg1[3] = iVar5 + 0x18;\n    *(arg1 + 2) = arg2;\n    if (arg3 != 0) {\n        uVar2 = fcn.180035930(arg3);\n        arg3_00 = uVar2;\n    }\n    fcn.180001640(arg1 + 3, arg3, arg3_00);\n    return arg1;\n}\n",
        "token_count": 285
    },
    "18002279": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18002279c(ulong arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    ulong uStackX24;\n    int64_t iStackX32;\n    \n    iStackX32 = fcn.18000b904(0x20);\n    uStackX24 = 0;\n    if (iStackX32 != 0) {\n        uStackX24 = fcn.1800226a4(iStackX32, arg1, arg2);\n    }\n    fcn.180035f2c(&uStackX24, 0x180068440);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 151
    },
    "180023e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180023e20(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int64_t arg1_00;\n    ulong uStackX32;\n    \n    arg1_00 = fcn.18000b904(0x20);\n    uStackX32 = 0;\n    if (arg1_00 != 0) {\n        uStackX32 = fcn.180015dbc(arg1_00, arg1, arg2, arg3);\n    }\n    fcn.180035f2c(&uStackX32, 0x1800684b0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 158
    },
    "180023ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180023ea4(code **arg1)\n\n{\n    *arg1 = vtable.CEnumArray.0;\n    if (arg1[9] != NULL) {\n        fcn.1800209e4(arg1[9]);\n    }\n    if (*(arg1 + 0xc) != 0) {\n        fcn.18000b948(arg1[10]);\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 128
    },
    "18002429": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.180024298(int64_t *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    *arg1 = 0;\n    uVar1 = SUB168(ZEXT816(0x10) * ZEXT816(arg2), 0);\n    if (SUB168(ZEXT816(0x10) * ZEXT816(arg2) >> 0x40, 0) != 0) {\n        uVar1 = 0xffffffffffffffff;\n    }\n    iVar2 = fcn.18000b904(uVar1);\n    *arg1 = iVar2;\n    if (*arg1 == 0) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        *(arg1 + 1) = arg2;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 193
    },
    "18002448": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.180024488(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 0x10) = arg3;\n    *(arg1 + 0x30) = arg4;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x28) = 0;\n    fcn.180035830(arg3, 0, arg4);\n    fcn.18000b948(*(arg1 + 0x18));\n    *(arg1 + 0x18) = 0;\n    uVar1 = SUB168(ZEXT816(0x58) * ZEXT816(arg2), 0);\n    if (SUB168(ZEXT816(0x58) * ZEXT816(arg2) >> 0x40, 0) != 0) {\n        uVar1 = 0xffffffffffffffff;\n    }\n    uVar1 = fcn.18000b904(uVar1);\n    *(arg1 + 0x18) = uVar1;\n    if (*(arg1 + 0x18) == 0) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        *(arg1 + 0x20) = arg2;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 304
    },
    "18002480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.180024808(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint auStackX8 [2];\n    int64_t *piStackX32;\n    int64_t *apiStack24 [2];\n    \n    if ((*(arg1 + 0x80) != 0) && (iVar1 = (****(arg1 + 0x80))(*(arg1 + 0x80), 0x180059570, apiStack24),  -1 < iVar1)) {\n        piStackX32 = NULL;\n        auStackX8[0] = 0;\n        iVar1 = (**(*apiStack24[0] + 0x20))(apiStack24[0], arg2, &piStackX32);\n        if (-1 < iVar1) {\n            (**(*piStackX32 + 0x28))(piStackX32, arg3, auStackX8);\n            (**(*piStackX32 + 0x10))();\n        }\n        (**(*apiStack24[0] + 0x10))();\n        return auStackX8[0];\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "18002489": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18002489c(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t *piStackX32;\n    int64_t *apiStack24 [2];\n    \n    if (((arg3 != 0) && (*(arg1 + 0x80) != 0)) &&\n       (iVar1 = (****(arg1 + 0x80))(*(arg1 + 0x80), 0x180059570, apiStack24),  -1 < iVar1)) {\n        piStackX32 = NULL;\n        iVar1 = (**(*apiStack24[0] + 0x20))(apiStack24[0], arg2, &piStackX32);\n        if (-1 < iVar1) {\n            (**(*piStackX32 + 0x30))(piStackX32, arg3);\n            (**(*piStackX32 + 0x10))();\n        }\n        (**(*apiStack24[0] + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "180024e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.180024e10(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    \n    if ((*(arg1 + 0x50) != 0) &&\n       (iVar3 = (**(**(arg1 + 0x50) + 0x18))(*(arg1 + 0x50), *(arg1 + 0x58), 0xfffffffe, arg2, 0),  iVar3 != 0)) {\n        return 1;\n    }\n    iVar1 = *(arg1 + 0x40);\n    if ((iVar1 != 0) && (*(iVar1 + 0x40) != 0)) {\n        uVar4 = (**(**(iVar1 + 0x40) + 0x18))(*(iVar1 + 0x40), *(arg1 + 0x58), 0xfffffffe, arg2, 0);\n        return uVar4;\n    }\n    fcn.180015288();\n    pcVar2 = swi(3);\n    uVar4 = (*pcVar2)();\n    return uVar4;\n}\n",
        "token_count": 262
    },
    "180027eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.180027eb8(int64_t **arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    int64_t **ppiVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t **ppiStackX8;\n    ulong uStackX32;\n    \n    uStackX32 = 0;\n    ppiVar1 = arg1 + 3;\n    if (*ppiVar1 != NULL) {\n        (**(**arg1 + 0x30))(*arg1, 1, ppiVar1, 0, 0, 0);\n        *ppiVar1 = NULL;\n    }\n    ppiStackX8 = ppiVar1;\n    uVar3 = (**(**arg1 + 0x28))(*arg1, 0, arg2, (-(noname_2 != '\\0') & 2) - 1, &uStackX32, &ppiStackX8);\n    if (uVar3 == 0) {\n        uVar2 = fcn.180027dfc(arg1);\n        uVar3 = uVar2;\n        if ((uVar2 < 0) && (*ppiVar1 != NULL)) {\n            (**(**arg1 + 0x30))(*arg1, 1, ppiVar1, 0, 0, 0);\n            *ppiVar1 = NULL;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 323
    },
    "18002883": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.180028830(int64_t *arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    int64_t *apiStackX16 [3];\n    \n    if (arg2 == NULL) {\n        return -0x7fffbffb;\n    }\n    apiStackX16[0] = NULL;\n    iVar1 = (***arg2)(arg2, 0x180055a58, apiStackX16);\n    if (iVar1 < 0) {\ncode_r0x00018002886f:\n        if (apiStackX16[0] != NULL) {\n            (**(*apiStackX16[0] + 0x10))();\n        }\n    }\n    else {\n        if (*arg1 == 0) {\n            iVar1 = fcn.180024298(arg1, 1);\n            if (iVar1 < 0) goto code_r0x00018002886f;\n            *(*arg1 + 8) = 1;\n        }\n        iVar1 = fcn.180024304(arg1[3], arg1[4], *arg1, arg1[6]);\n        if (apiStackX16[0] != NULL) {\n            (**(*apiStackX16[0] + 0x10))();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 288
    },
    "18002b53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18002b53c(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *arg2;\n    \n    piVar1 = arg1[4];\n    if (piVar1 != NULL) {\n        arg2 = *arg1;\n        if (arg2 != NULL) {\n            fcn.180029214(piVar1, arg2);\n            fcn.1800286c4(piVar1, arg2);\n        }\n        piVar1 = arg1[4];\n        if (piVar1 != NULL) {\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(piVar1[5]);\n            piVar1[5] = 0;\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(piVar1[6]);\n            piVar1[6] = 0;\n            fcn.18000b948(piVar1[2]);\n            piVar1[2] = 0;\n            fcn.18000b948(piVar1[4]);\n            piVar1[4] = 0;\n            piVar1[3] = 0;\n            fcn.18000b948(piVar1);\n        }\n        arg1[4] = NULL;\n    }\n    piVar1 = *arg1;\n    if (piVar1 != NULL) {\n        if (arg1[3] != NULL) {\n            (**(*piVar1 + 0x30))(piVar1, 1, arg1 + 3, 0, 0, 0);\n            arg1[3] = NULL;\n        }\n        piVar1 = *arg1;\n        if (piVar1 != NULL) {\n            *arg1 = NULL;\n            (**(*piVar1 + 0x10))();\n        }\n        piVar1 = arg1[1];\n        if (piVar1 != NULL) {\n            arg1[1] = NULL;\n            (**(*piVar1 + 0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "18002b87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.18002b878(code **arg1, code *arg2)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    code **ppcVar3;\n    int64_t iVar4;\n    \n    fcn.18000bea4(arg1);\n    *arg1 = vtable.COleControlSite.0;\n    arg1[8] = arg2;\n    arg1[10] = NULL;\n    *(arg1 + 0xb) = 0xffffffff;\n    arg1[0x10] = NULL;\n    arg1[0x11] = NULL;\n    arg1[0x12] = NULL;\n    arg1[0x13] = NULL;\n    *(arg1 + 0x14) = 0;\n    *(arg1 + 0xa4) = 0;\n    *(arg1 + 0x16) = 0;\n    *(arg1 + 0xb4) = 0;\n    *(arg1 + 0x1a) = 0;\n    *(arg1 + 0xd4) = 0;\n    arg1[0x1b] = NULL;\n    arg1[0x1c] = NULL;\n    arg1[0x1d] = NULL;\n    *(arg1 + 0x1e) = 0;\n    *(arg1 + 0xf4) = 0;\n    piVar2 = fcn.18001549c();\n    if (piVar2 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar3 = (*pcVar1)();\n        return ppcVar3;\n    }\n    iVar4 = (**(*piVar2 + 0x18))(piVar2);\n    arg1[0x1f] = iVar4 + 0x18;\n    *(arg1 + 0x20) = 0;\n    fcn.18002d388(arg1 + 0x24);\n    arg1[0x26] = NULL;\n    arg1[0x27] = vtable.COleControlSite::XOleClientSite.0;\n    arg1[0x28] = vtable.COleControlSite::XOleIPSite.0;\n    arg1[0x29] = vtable.COleControlSite::XOleControlSite.0;\n    arg1[0x2a] = vtable.COleControlSite::XAmbientProps.0;\n    arg1[0x2b] = vtable.COleControlSite::XPropertyNotifySink.0;\n    arg1[0x2c] = vtable.COleControlSite::XEventSink.0;\n    arg1[0x2d] = vtable.COleControlSite::XBoundObjectSite.0;\n    arg1[0x2e] = vtable.COleControlSite::XNotifyDBEvents.0;\n    arg1[0x2f] = vtable.COleControlSite::XRowsetNotify.0;\n    fcn.180035830(arg1 + 0x21, 0, 0x18);\n    *(arg1 + 0x21) = 0;\n    return arg1;\n}\n",
        "token_count": 709
    },
    "18002bdd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18002bdd8(code **arg1)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    ulong *puVar5;\n    ulong arg2;\n    int32_t iVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    ulong in_R9;\n    int64_t **ppiStackX16;\n    int64_t *apiStackX24 [2];\n    \n    *arg1 = vtable.CDataSourceControl.0;\n    uVar10 = 0;\n    if ((((*(arg1 + 0x16) != 0) && (arg1[0x14] != NULL)) &&\n        (puVar1 = *arg1[0x14],  iVar6 = (***puVar1)(puVar1, 0x180059570, apiStackX24, in_R9, 0xfffffffffffffffe), \n        -1 < iVar6)) && (apiStackX24[0] != NULL)) {\n        ppiStackX16 = NULL;\n        iVar6 = (**(*apiStackX24[0] + 0x20))(apiStackX24[0], 0x180059790, &ppiStackX16);\n        if ((-1 < iVar6) && (ppiStackX16 != NULL)) {\n            (*(*ppiStackX16)[6])(ppiStackX16, *(arg1 + 0x16));\n            (*(*ppiStackX16)[2])();\n        }\n        (**(*apiStackX24[0] + 0x10))();\n    }\n    pcVar2 = arg1[9];\n    while (((pcVar2 != NULL && (ppiVar3 = *(arg1[7] + 0x10),  ppiVar3 != NULL)) && (piVar4 = *ppiVar3,  piVar4 != NULL))\n          ) {\n        (**(*piVar4 + 0x178))(piVar4, *(ppiVar3 + 0xc), 0);\n        (*ppiVar3)[0x1d] = 0;\n        pcVar2 = arg1[9];\n    }\n    fcn.180020bf8(arg1 + 6);\n    if (arg1[0x10] != NULL) {\n        uVar7 = uVar10;\n        uVar9 = uVar10;\n        if (0 < arg1[0xe]) {\n            do {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg1[0x10] + uVar7 * 0x18);\n                uVar8 = uVar9 + 1;\n                uVar7 = uVar8;\n                uVar9 = uVar8;\n            } while (uVar8 < arg1[0xe]);\n        }\n        if (arg1[0xe] != NULL) {\n            fcn.18000b948(arg1[0xf]);\n            fcn.18000b948(arg1[0x10]);\n        }\n    }\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 0x10))();\n    }\n    if (arg1[3] != NULL) {\n        (**(*arg1[3] + 0x10))();\n    }\n    if (arg1[5] != NULL) {\n        uVar7 = uVar10;\n        if (0 < arg1[4]) {\n            do {\n                puVar1 = *(*(arg1[5] + uVar10 + 0x38) + 8);\n                while (puVar1 != NULL) {\n                    if (puVar1 == NULL) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    puVar5 = *puVar1;\n                    *(puVar1[2] + 0xe8) = 0;\n                    puVar1 = puVar5;\n                }\n                fcn.180020bf8(*(arg1[5] + uVar10 + 0x38));\n                piVar4 = *(arg1[5] + uVar10 + 0x38);\n                if (piVar4 != NULL) {\n                    (**(*piVar4 + 8))(piVar4, 1);\n                }\n                uVar8 = uVar7 + 1;\n                uVar7 = uVar8;\n                uVar10 = uVar10 + 0x40;\n            } while (uVar8 < arg1[4]);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(arg1[5]);\n    }\n    if (arg1[0xd] != NULL) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)();\n    }\n    pcVar2 = arg1[0x15];\n    if (pcVar2 != NULL) {\n        arg2 = *arg1[0x14];\n        fcn.180029214(pcVar2, arg2);\n        fcn.1800286c4(pcVar2, arg2);\n        pcVar2 = arg1[0x15];\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(pcVar2 + 0x28));\n        *(pcVar2 + 0x28) = 0;\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(pcVar2 + 0x30));\n        *(pcVar2 + 0x30) = 0;\n        fcn.18000b948(*(pcVar2 + 0x10));\n        *(pcVar2 + 0x10) = 0;\n        fcn.18000b948(*(pcVar2 + 0x20));\n        *(pcVar2 + 0x20) = 0;\n        *(pcVar2 + 0x18) = 0;\n    }\n    pcVar2 = arg1[0x15];\n    if (pcVar2 != NULL) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(pcVar2 + 0x28));\n        *(pcVar2 + 0x28) = 0;\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(pcVar2 + 0x30));\n        *(pcVar2 + 0x30) = 0;\n        fcn.18000b948(*(pcVar2 + 0x10));\n        *(pcVar2 + 0x10) = 0;\n        fcn.18000b948(*(pcVar2 + 0x20));\n        *(pcVar2 + 0x20) = 0;\n        *(pcVar2 + 0x18) = 0;\n        fcn.18000b948(pcVar2);\n    }\n    ppiVar3 = arg1[0x14];\n    ppiStackX16 = ppiVar3;\n    if (ppiVar3 != NULL) {\n        fcn.18002b53c(ppiVar3);\n        if (ppiVar3[1] != NULL) {\n            (**(*ppiVar3[1] + 0x10))();\n        }\n        if (*ppiVar3 != NULL) {\n            (**(**ppiVar3 + 0x10))();\n        }\n        fcn.18000b948(ppiVar3);\n    }\n    if (arg1[0x13] != NULL) {\n        (**(*arg1[0x13] + 0x10))();\n    }\n    if (arg1[0x12] != NULL) {\n        (**(*arg1[0x12] + 0x10))();\n    }\n    arg1[6] = vtable.CPtrList.0;\n    arg1[9] = NULL;\n    arg1[10] = NULL;\n    arg1[8] = NULL;\n    arg1[7] = NULL;\n    fcn.18002f310(arg1[0xb]);\n    arg1[0xb] = NULL;\n    return;\n}\n",
        "token_count": 1763
    },
    "18002d0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18002d0c4(code **arg1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    int64_t *piStackX16;\n    int64_t *piStackX24;\n    \n    *arg1 = vtable.COleControlSite.0;\n    pcVar2 = arg1[8];\n    if ((pcVar2 != NULL) && (*(pcVar2 + 0xd0) == arg1)) {\n        *(pcVar2 + 0xd0) = 0;\n    }\n    pcVar2 = arg1[0x1b];\n    if (pcVar2 != NULL) {\n        fcn.18002bdd8(pcVar2);\n        fcn.18000b948(pcVar2);\n    }\n    fcn.180024da0(arg1);\n    fcn.18002489c(arg1, arg1 + 0x6c, *(arg1 + 0x14));\n    fcn.18002489c(arg1, 0x1800595d0, *(arg1 + 0xa4));\n    fcn.18002489c(arg1, 0x1800594d0, *(arg1 + 0xd4));\n    if (arg1[0x13] != NULL) {\n        (**(*arg1[0x13] + 0x10))();\n        arg1[0x13] = NULL;\n    }\n    if (arg1[0x11] != NULL) {\n        (**(*arg1[0x11] + 0x28))();\n        (**(*arg1[0x11] + 0x10))();\n        arg1[0x11] = NULL;\n    }\n    if (arg1[0x12] != NULL) {\n        (**(*arg1[0x12] + 0x10))();\n        arg1[0x12] = NULL;\n    }\n    piVar3 = arg1[0x10];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 0x18))(piVar3, 0);\n        (**(*arg1[0x10] + 0x30))(arg1[0x10], 1);\n        (**(*arg1[0x10] + 0x10))();\n        arg1[0x10] = NULL;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg1 + 0x21);\n    pcVar2 = arg1[0x1c];\n    if (pcVar2 != NULL) {\n        arg1[0x1c] = *(pcVar2 + 0x20);\n        iVar4 = *(pcVar2 + 0x10);\n        if ((iVar4 != 0) && (*(iVar4 + 0xd8) != 0)) {\n            (**(**(iVar4 + 0xd8) + 8))(*(iVar4 + 0xd8), pcVar2, 0);\n        }\n        fcn.18000b948(pcVar2);\n    }\n    if (((*(arg1 + 0x1e) != 0) && (pcVar2 = arg1[0x1d],  pcVar2 != NULL)) && (*(pcVar2 + 0xd8) != 0)) {\n        (**(**(pcVar2 + 0xd8) + 0x10))(*(pcVar2 + 0xd8), arg1, 0);\n    }\n    if ((arg1[8] != NULL) && (*(arg1 + 0xb4) != 0)) {\n        piVar1 = arg1[8] + 0xe0;\n        *piVar1 = *piVar1 + -1;\n    }\n    piStackX24 = NULL;\n    iVar5 = (**arg1[0x2b])(arg1 + 0x2b, 0x180059550, &piStackX24);\n    if (-1 < iVar5) {\n        fcn.1800207e0(piStackX24);\n    }\n    piStackX16 = NULL;\n    iVar5 = (**arg1[0x2c])(arg1 + 0x2c, 0x180059550, &piStackX16);\n    if (-1 < iVar5) {\n        fcn.1800207e0(piStackX16);\n    }\n    if (piStackX16 != NULL) {\n        (**(*piStackX16 + 0x10))();\n    }\n    if (piStackX24 != NULL) {\n        (**(*piStackX24 + 0x10))();\n    }\n    fcn.18002d398(arg1 + 0x24);\n    pcVar2 = arg1[0x1f];\n    LOCK();\n    piVar1 = pcVar2 + -8;\n    iVar5 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar5 + -1 < 1) {\n        (**(**(pcVar2 + -0x18) + 8))();\n    }\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 1168
    },
    "1800303c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.1800303cc(code **arg1, code *arg2, ulong arg3, ulong arg4)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    \n    fcn.180022bc8(arg1);\n    *arg1 = vtable.CMemFile.0;\n    if ((arg2 == NULL) && (arg3 != 0)) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        ppcVar1 = (*pcVar2)();\n        return ppcVar1;\n    }\n    arg1[4] = arg4;\n    arg1[5] = NULL;\n    arg1[6] = arg3;\n    pcVar2 = NULL;\n    if (arg4 == 0) {\n        pcVar2 = arg3;\n    }\n    arg1[7] = pcVar2;\n    arg1[8] = arg2;\n    *(arg1 + 9) = 0;\n    return arg1;\n}\n",
        "token_count": 219
    },
    "18003086": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.18003086c(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uchar auStack616 [56];\n    code **ppcStack560;\n    ulong uStack544;\n    ulong uStack64;\n    uint64_t uStack24;\n    \n    uStack24 = 0xfffffffffffffffe;\n    *arg1 = vtable.CMemFile.0;\n    if (arg1[8] != NULL) {\n        uStack64 = 0x180030898;\n        fcn.1800306dc(arg1);\n    }\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    arg1[6] = NULL;\n    arg1[7] = NULL;\n    uStack544 = 0xfffffffffffffffe;\n    uStack24 = *0x18006ed40 ^ &stack0xfffffffffffffd98;\n    *arg1 = vtable.CFile.0;\n    ppcStack560 = arg1;\n    if ((arg1[1] != 0xffffffffffffffff) && (*(arg1 + 2) != 0)) {\n        fcn.180022b40(arg1);\n    }\n    pcVar3 = arg1[3];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    fcn.1800349d0(uStack24 ^ &stack0xfffffffffffffd98);\n    return;\n}\n",
        "token_count": 371
    },
    "180030b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.180030b44(ulong arg1, uint64_t arg2, ulong arg3, uint64_t arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t hModule;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    uStack16 = 0xfffffffffffffffe;\n    piVar4 = fcn.18001549c();\n    if (piVar4 != NULL) {\n        iVar5 = (**(*piVar4 + 0x18))(piVar4);\n        iStack24 = iVar5 + 0x18;\n        hModule = fcn.180015488(arg2 & 0xffffffff);\n        iVar5 = iVar5 + 0x18;\n        if ((hModule == 0) ||\n           (iVar3 = fcn.180001510(&iStack24, hModule, arg2 & 0xffffffff),  iVar5 = iStack24,  iVar3 == 0)) {\n            LOCK();\n            piVar1 = iVar5 + -8;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar3 + -1 < 1) {\n                (**(**(iVar5 + -0x18) + 8))();\n            }\n        }\n        else {\n            fcn.180030938(arg1, iStack24, arg3, arg4 & 0xffffffff);\n            LOCK();\n            piVar1 = iVar5 + -8;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar3 + -1 < 1) {\n                (**(**(iVar5 + -0x18) + 8))();\n            }\n        }\n        return;\n    }\n    fcn.180001030(0x80004005);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 447
    },
    "18003120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.180031208(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    \n    iVar2 = fcn.18001dfbc();\n    iVar3 = fcn.18001e94c();\n    uVar4 = 0;\n    if (*(iVar3 + 0x28) == '\\0') {\n        iVar1 = (*_sym.imp.ole32.dll_OleInitialize)();\n        if (iVar1 < 0) {\n            fcn.18003113c(0);\n            uVar4 = 0;\n        }\n        else {\n            *(iVar2 + 0x17c) = 1;\n            iVar2 = fcn.18001c528();\n            *(iVar2 + 0x78) = 0x1800311b0;\n            if (*(iVar2 + 0x80) == 0) {\n                iVar3 = fcn.18000b904(0x68);\n                if (iVar3 != 0) {\n                    uVar4 = fcn.18003383c(iVar3);\n                }\n                *(iVar2 + 0x80) = uVar4;\n                iVar2 = fcn.18001c528();\n                fcn.180033368(*(iVar2 + 0x80));\n            }\n            uVar4 = 1;\n        }\n    }\n    else {\n        *(iVar2 + 0x17c) = 0xffffffff;\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 338
    },
    "180031e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.180031e9c(code **arg1, int64_t arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    code **ppcVar4;\n    int64_t iVar5;\n    int16_t in_R9W;\n    \n    fcn.1800152ac(arg1);\n    *arg1 = vtable.COleDispatchException.0;\n    piVar3 = fcn.18001549c();\n    if (piVar3 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar4 = (*pcVar1)();\n        return ppcVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))();\n    arg1[3] = iVar5 + 0x18;\n    piVar3 = fcn.18001549c();\n    if (piVar3 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar4 = (*pcVar1)();\n        return ppcVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))();\n    arg1[5] = iVar5 + 0x18;\n    piVar3 = fcn.18001549c();\n    if (piVar3 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar4 = (*pcVar1)();\n        return ppcVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))(piVar3);\n    arg1[6] = iVar5 + 0x18;\n    *(arg1 + 4) = -(arg3 != 0) & arg3 + 0x60000U;\n    *(arg1 + 2) = in_R9W;\n    if (arg2 != 0) {\n        uVar2 = fcn.180035930(arg2);\n        fcn.180001640(arg1 + 3, arg2, uVar2);\n    }\n    *(arg1 + 7) = ~-(in_R9W != 0) & 0x8000ffff;\n    return arg1;\n}\n",
        "token_count": 518
    },
    "1800327d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800327d4(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    uint64_t *puVar5;\n    ulong uStackX8;\n    int64_t aiStackX24 [2];\n    \n    if ((~*(arg1 + 0x20) & 1) == 0) {\n        uVar3 = 0;\n        if (*(arg1 + 0x58) == 0) {\n            uStackX8 = fcn.18000b904(0x28);\n            if (uStackX8 != 0) {\n                uVar3 = fcn.180033c08(uStackX8);\n            }\n            *(arg1 + 0x58) = uVar3;\n            fcn.180033c28(uVar3, 1, *(arg1 + 0x68));\n            if (*(*(arg1 + 0x58) + 0x10) < 1) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            **(*(arg1 + 0x58) + 8) = 0;\n            *(arg1 + 0x50) = 1;\n            aiStackX24[0] = 0;\n            fcn.1800326b8(arg1, aiStackX24);\n            uStackX8 = uStackX8 & 0xffffffff00000000;\n            fcn.180032468(aiStackX24[0], 0, &uStackX8, 1);\n        }\n        if (arg2 != 0) {\n            fcn.180032218(arg1);\n            fcn.180033dcc(*(arg1 + 0x58), *(arg1 + 0x50), arg2, 1);\n            aiStackX24[0] = 0;\n            fcn.18001f190(*(arg1 + 0x60), 1, aiStackX24);\n            if (aiStackX24[0] == 0) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            uStackX8 = CONCAT44(uStackX8._4_4_, 2);\n            fcn.180032468(aiStackX24[0], *(arg1 + 0x50), &uStackX8, 1);\n            *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (*(arg1 + 0x58) == 0) {\n            uStackX8 = fcn.18000b904(0x38);\n            if (uStackX8 != 0) {\n                uVar3 = fcn.18001f2dc(uStackX8, *(arg1 + 0x68));\n            }\n            *(arg1 + 0x58) = uVar3;\n            fcn.18001f054(uVar3, *(arg1 + 0x6c), 1);\n            puVar4 = fcn.18001f390(*(arg1 + 0x58), 0);\n            *puVar4 = 0;\n            *(arg1 + 0x50) = 1;\n        }\n        if (arg2 != 0) {\n            fcn.180032218(arg1);\n            uVar1 = *(arg1 + 0x50);\n            puVar5 = fcn.18001f390(*(arg1 + 0x58), arg2);\n            *puVar5 = uVar1;\n            *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 860
    },
    "180032b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.180032b10(int64_t arg1, int64_t arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t auStackX8 [2];\n    ulong uStack56;\n    int64_t iStack48;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002279c(1, *(arg1 + 0x18));\n        pcVar3 = swi(3);\n        iVar5 = (*pcVar3)();\n        return iVar5;\n    }\n    if ((arg2 != 0) && (*(arg2 + 0xc) == 0xffff)) {\n        fcn.180015264();\n        pcVar3 = swi(3);\n        iVar5 = (*pcVar3)();\n        return iVar5;\n    }\n    fcn.1800327d4(arg1, 0);\n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002279c(4, *(arg1 + 0x18));\n        pcVar3 = swi(3);\n        iVar5 = (*pcVar3)();\n        return iVar5;\n    }\n    uVar6 = *(arg1 + 0x38) + 2;\n    if (*(arg1 + 0x40) <= uVar6 && uVar6 != *(arg1 + 0x40)) {\n        fcn.180021474(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n    }\n    puVar2 = *(arg1 + 0x38);\n    uVar1 = *puVar2;\n    *(arg1 + 0x38) = puVar2 + 1;\n    if (uVar1 == 0x7fff) {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002279c(4, *(arg1 + 0x18));\n            pcVar3 = swi(3);\n            iVar5 = (*pcVar3)();\n            return iVar5;\n        }\n        if (*(arg1 + 0x40) <= puVar2 + 3 && puVar2 + 3 != *(arg1 + 0x40)) {\n            fcn.180021474(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 4);\n        }\n        uVar9 = **(arg1 + 0x38);\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n    }\n    else {\n        uVar9 = (uVar1 & 0x8000) << 0x10 | uVar1 & 0xffff7fff;\n    }\n    if (uVar9 < 0) {\n        if (uVar1 == 0xffff) {\n            iVar5 = fcn.18002163c(arg1, auStackX8);\n            if (iVar5 == 0) {\n                fcn.18002279c(6, *(arg1 + 0x18));\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            if ((*(iVar5 + 0xc) & 0x7fffffff) != auStackX8[0]) {\n                if (-1 < *(iVar5 + 0xc)) {\n                    fcn.18002279c(7, *(arg1 + 0x18));\n                    pcVar3 = swi(3);\n                    iVar5 = (*pcVar3)();\n                    return iVar5;\n                }\n                fcn.1800326b8(arg1, 0);\n                uVar6 = auStackX8[0];\n                puVar7 = fcn.18001f390(*(arg1 + 0x60), iVar5);\n                *puVar7 = uVar6;\n            }\n            fcn.180032218(arg1);\n            fcn.180033dcc(*(arg1 + 0x58), *(arg1 + 0x50), iVar5, 1);\n            iStack48 = 0;\n            fcn.18001f190(*(arg1 + 0x60), 1, &iStack48);\n            if (iStack48 == 0) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            uStack56 = CONCAT44(uStack56._4_4_, 1);\n            fcn.180032468(iStack48, *(arg1 + 0x50), &uStack56, 1);\n            *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n        }\n        else {\n            uVar8 = uVar9 & 0x7fffffff;\n            if ((uVar8 == 0) || (*(*(arg1 + 0x58) + 0x10) - 1U < uVar8)) {\n                fcn.18002279c(5, *(arg1 + 0x18));\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            uStack56 = 0;\n            fcn.18001f190(*(arg1 + 0x60), 1, &uStack56);\n            if (uStack56 == 0) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            if (*(uStack56 + 0x10) <= uVar8) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            if (*(*(uStack56 + 8) + uVar8 * 4) == 2) {\n                fcn.18002279c(5, *(arg1 + 0x18));\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            if (*(*(arg1 + 0x58) + 0x10) <= uVar8) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            iVar5 = *(*(*(arg1 + 0x58) + 8) + uVar8 * 8);\n            auStackX8[0] = 0;\n            if ((*(arg1 + 0x60) == 0) || (iVar4 = fcn.18001f190(*(arg1 + 0x60), iVar5, &uStack56),  iVar4 == 0)) {\n                auStackX8[0] = *(iVar5 + 0xc) & 0x7fffffff;\n            }\n            else {\n                auStackX8[0] = uStack56;\n            }\n        }\n        if ((arg2 != 0) && (iVar4 = fcn.18001ef80(iVar5, arg2),  iVar4 == 0)) {\n            fcn.18002279c(6, *(arg1 + 0x18));\n            pcVar3 = swi(3);\n            iVar5 = (*pcVar3)();\n            return iVar5;\n        }\n        if (arg3 == NULL) {\n            *(arg1 + 0x14) = auStackX8[0];\n        }\n        else {\n            *arg3 = auStackX8[0];\n        }\n        if (arg4 != NULL) {\n            *arg4 = uVar9;\n        }\n    }\n    else {\n        if (arg4 == NULL) {\n            fcn.18002279c(5, *(arg1 + 0x18));\n            pcVar3 = swi(3);\n            iVar5 = (*pcVar3)();\n            return iVar5;\n        }\n        *arg4 = uVar9;\n        iVar5 = 0;\n    }\n    return iVar5;\n}\n",
        "token_count": 1874
    },
    "180037d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.180037d44(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    \n    iVar5 = 0;\n    iVar3 = 0;\n    fcn.18003ff44(1);\n    for (uVar4 = 0; uVar4 < *0x1800760a0; uVar4 = uVar4 + 1) {\n        iVar6 = uVar4;\n        if ((*(*0x180075088 + iVar6 * 8) != 0) && (iVar1 = *(*0x180075088 + iVar6 * 8),  (*(iVar1 + 0x18) & 0x83) != 0))\n        {\n            fcn.18004013c(uVar4, iVar1);\n            iVar1 = *(*0x180075088 + iVar6 * 8);\n            if ((*(iVar1 + 0x18) & 0x83) != 0) {\n                if (arg1 == 1) {\n                    iVar2 = fcn.180037cfc(iVar1);\n                    if (iVar2 != -1) {\n                        iVar5 = iVar5 + 1;\n                    }\n                }\n                else if (((arg1 == 0) && ((*(iVar1 + 0x18) & 2) != 0)) && (iVar2 = fcn.180037cfc(iVar1),  iVar2 == -1))\n                {\n                    iVar3 = -1;\n                }\n            }\n            fcn.1800401c4(uVar4, *(*0x180075088 + iVar6 * 8));\n        }\n    }\n    fcn.18003fe44(1);\n    if (arg1 == 1) {\n        iVar3 = iVar5;\n    }\n    return iVar3;\n}\n",
        "token_count": 424
    },
    "18000137": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180001370(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    \n    iVar5 = *arg1;\n    piVar3 = *(iVar5 + -0x18);\n    if (*(iVar5 + -0x10) != 0) {\n        if (*(iVar5 + -8) < 0) {\n            if (*(iVar5 + -0xc) < 0) {\n                fcn.180001030(0x80070057);\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            *(iVar5 + -0x10) = 0;\n            **arg1 = 0;\n            return;\n        }\n        LOCK();\n        piVar1 = iVar5 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iVar5 + -0x18) + 8))();\n        }\n        iVar5 = (**(*piVar3 + 0x18))(piVar3);\n        *arg1 = iVar5 + 0x18;\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "1800013f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800013f0(int64_t *arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    uint64_t arg2_00;\n    int32_t iVar8;\n    uint64_t uVar9;\n    \n    uVar9 = arg2;\n    iVar6 = *arg1;\n    if (arg2 < *(iVar6 + -0x10)) {\n        uVar9 = *(iVar6 + -0x10);\n    }\n    iVar8 = uVar9;\n    if (1 < *(iVar6 + -8)) {\n        iVar6 = *arg1;\n        iVar2 = *(iVar6 + -0x10);\n        puVar4 = (**(**(iVar6 + -0x18) + 0x20))();\n        iVar5 = (***puVar4)(puVar4, uVar9, 1);\n        if (iVar5 == 0) {\n            fcn.180001170();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        if (iVar2 < iVar8) {\n            iVar8 = iVar2;\n        }\n        fcn.1800341d0(iVar5 + 0x18, iVar8 + 1, iVar6, iVar8 + 1);\n        *(iVar5 + 8) = iVar2;\n        LOCK();\n        piVar1 = iVar6 + -8;\n        iVar8 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar8 + -1 < 1) {\n            (**(**(iVar6 + -0x18) + 8))(*(iVar6 + -0x18), iVar6 + -0x18);\n        }\n        *arg1 = iVar5 + 0x18;\n        return;\n    }\n    iVar2 = *(iVar6 + -0xc);\n    if (iVar2 < iVar8) {\n        if (0x400 < iVar2) {\n            iVar7 = iVar2 + 0x400;\n            if (iVar2 + 0x400 < iVar8) {\n                iVar7 = iVar8;\n            }\n            if ((*(*arg1 + -0xc) < iVar7) && (0 < iVar7)) {\n                iVar6 = (**(**(*arg1 + -0x18) + 0x10))();\n                if (iVar6 == 0) {\n                    fcn.180001170();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                *arg1 = iVar6 + 0x18;\n                return;\n            }\n            fcn.180001170();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        arg2_00 = iVar2 * 2;\n        if (iVar2 * 2 < iVar8) {\n            arg2_00 = uVar9;\n        }\n        fcn.180001230(arg1, arg2_00);\n    }\n    return;\n}\n",
        "token_count": 696
    },
    "18000145": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t ** fcn.180001450(int64_t **arg1)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t **ppiVar3;\n    \n    piVar2 = (**(**arg1 + 0x20))();\n    if ((-1 < *(arg1 + 2)) && (piVar2 == *arg1)) {\n        LOCK();\n        *(arg1 + 2) = *(arg1 + 2) + 1;\n        return arg1;\n    }\n    ppiVar3 = (***piVar2)(piVar2, *(arg1 + 1), 1);\n    if (ppiVar3 == NULL) {\n        fcn.180001170();\n        pcVar1 = swi(3);\n        ppiVar3 = (*pcVar1)();\n        return ppiVar3;\n    }\n    *(ppiVar3 + 1) = *(arg1 + 1);\n    fcn.1800341d0(ppiVar3 + 3, *(arg1 + 1) + 1, arg1 + 3, *(arg1 + 1) + 1);\n    return ppiVar3;\n}\n",
        "token_count": 258
    },
    "18000182": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t * fcn.180001820(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t **arg1_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t **ppiVar5;\n    \n    iVar4 = *arg2;\n    iVar3 = *arg1;\n    arg1_00 = iVar4 + -0x18;\n    ppiVar5 = iVar3 + -0x18;\n    if (arg1_00 != ppiVar5) {\n        if ((-1 < *(iVar3 + -8)) && (*arg1_00 == *ppiVar5)) {\n            iVar4 = fcn.180001450(arg1_00);\n            LOCK();\n            piVar1 = iVar3 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**ppiVar5 + 8))(*ppiVar5, ppiVar5);\n            }\n            *arg1 = iVar4 + 0x18;\n            return arg1;\n        }\n        fcn.180001640(arg1, iVar4, *(iVar4 + -0x10));\n    }\n    return arg1;\n}\n",
        "token_count": 297
    },
    "1800027d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.1800027d0(int16_t *arg1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = *arg1;\n    while (iVar1 != 0) {\n        arg1 = arg1 + 1;\n        iVar2 = iVar2 + 1;\n        iVar1 = *arg1;\n    }\n    return iVar2;\n}\n",
        "token_count": 96
    },
    "18000375": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180003750(int64_t arg1)\n\n{\n    if (*(arg1 + 0x158) == '\\0') {\n        *(arg1 + 0x158) = 0;\n    }\n    if (*(arg1 + 0x158) == '\\0') {\n        *(arg1 + 0x148) = 0;\n        *(arg1 + 0x150) = 0;\n    }\n    *(arg1 + 0x141) = 0;\n    *(arg1 + 0x16c) = 2;\n    *(arg1 + 0x168) = 2;\n    *(arg1 + 0x164) = 2;\n    *(arg1 + 0x160) = 2;\n    *(arg1 + 0x15c) = 2;\n    *(arg1 + 0x146) = 1;\n    *(arg1 + 0x145) = 1;\n    *(arg1 + 0x144) = 1;\n    *(arg1 + 0x143) = 1;\n    *(arg1 + 0x142) = 1;\n    fcn.180003350(arg1);\n    *(arg1 + 0x140) = 0;\n    return;\n}\n",
        "token_count": 277
    },
    "180013eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013eb8(int64_t hWnd, ulong bEnable)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x150))();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "18001ec6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001ec68(int64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t aiStackX24 [2];\n    \n    if (*(arg3 + 0x40) != 0) {\n        return;\n    }\n    iVar4 = fcn.180013bbc(arg3);\n    if (iVar4 != 0) {\n        return;\n    }\n    fcn.18001ec14(arg1, arg2);\n    fcn.180013c5c(*(arg1 + 8), arg2, aiStackX24);\n    if (aiStackX24[0] != 0) {\n        iVar3 = fcn.1800109b4(arg3, aiStackX24[0]);\n        if (iVar3 == 0) {\n            fcn.180015264();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (aiStackX24[0] != 0) {\n            iVar4 = *(arg1 + 8);\n            iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(arg3 + 0x40));\n            if (*(iVar4 + 0x40) == iVar2) {\n                return;\n            }\n            goto code_r0x00018001ed08;\n        }\n    }\n    iVar4 = fcn.180013bfc(*(arg1 + 8));\n    if (iVar4 == 0) {\n        return;\n    }\n    iVar4 = *(arg1 + 8);\ncode_r0x00018001ed08:\n    fcn.180013f8c(arg3, iVar4);\n    return;\n}\n",
        "token_count": 388
    },
    "180004d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.180004d50(ulong noname_0, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t auStackX24 [2];\n    uchar auStack48 [40];\n    \n    fcn.180015540(auStack48);\n    piVar4 = fcn.18001549c();\n    if (piVar4 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar3 = swi(3);\n        uVar5 = (*pcVar3)();\n        return uVar5;\n    }\n    iVar6 = (**(*piVar4 + 0x18))(piVar4);\n    auStackX24[0] = iVar6 + 0x18;\n    if (arg2 == 1) {\n        fcn.180015568(auStack48, \"slider1.txt\", 0, 0);\n        fcn.180015bcc(auStack48, auStackX24);\n        fcn.180015a84(auStack48);\n        uVar5 = fcn.180035484(auStackX24[0]);\n        uVar5 = uVar5 & 0xffffffff;\n    }\n    else if (arg2 == 2) {\n        fcn.180015568(auStack48, \"slider2.txt\", 0, 0);\n        fcn.180015bcc(auStack48, auStackX24);\n        fcn.180015a84(auStack48);\n        uVar5 = fcn.180035484(auStackX24[0]);\n        uVar5 = uVar5 & 0xffffffff;\n    }\n    else if (arg2 == 3) {\n        fcn.180015568(auStack48, \"slider3.txt\", 0, 0);\n        fcn.180015bcc(auStack48, auStackX24);\n        fcn.180015a84(auStack48);\n        uVar5 = fcn.180035484(auStackX24[0]);\n        uVar5 = uVar5 & 0xffffffff;\n    }\n    else if (arg2 == 4) {\n        fcn.180015568(auStack48, \"slider4.txt\", 0, 0);\n        fcn.180015bcc(auStack48, auStackX24);\n        fcn.180015a84(auStack48);\n        uVar5 = fcn.180035484(auStackX24[0]);\n        uVar5 = uVar5 & 0xffffffff;\n    }\n    else if (arg2 == 5) {\n        fcn.180015568(auStack48, \"slider5.txt\", 0, 0);\n        fcn.180015bcc(auStack48, auStackX24);\n        fcn.180015a84(auStack48);\n        uVar5 = fcn.180035484(auStackX24[0]);\n        uVar5 = uVar5 & 0xffffffff;\n    }\n    else {\n        uVar5 = auStackX24[0] & 0xffffffff;\n    }\n    LOCK();\n    piVar1 = auStackX24[0] - 8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(auStackX24[0] - 0x18) + 8))();\n    }\n    fcn.180015b28(auStack48);\n    return uVar5;\n}\n",
        "token_count": 813
    },
    "18000bc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.18000bc40(int64_t *arg1, uint64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong *puVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int64_t *piVar8;\n    ulong in_stack_00000028;\n    \n    arg2 = arg2 & 0xffffffff;\n    if (arg3 == 0xfffffffe) {\n        iVar3 = fcn.18001e94c();\n        if (*(iVar3 + 0x68) != 0) {\n            iVar3 = fcn.18001e94c();\n            uVar4 = (**(**(iVar3 + 0x68) + 8))(*(iVar3 + 0x68), arg1, arg2, arg4, in_stack_00000028);\n            return uVar4;\n        }\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    if (arg3 == 0xfffffffd) {\n        uVar7 = 0;\n        if (arg4 == 0) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        iVar3 = *(arg4 + 0x50);\n        puVar5 = (**(*arg1 + 0x58))();\n        do {\n            if ((puVar5 == NULL) || (uVar7 != 0)) {\n                return uVar7;\n            }\n            piVar8 = puVar5[1];\n            while (((*(piVar8 + 1) != 0 && (*(piVar8 + 0xc) != 0)) && (uVar7 == 0))) {\n                if (arg2 == *(piVar8 + 1)) {\n                    if (iVar3 == 0) {\n                        if (*piVar8 == 0) {\ncode_r0x00018000bd0e:\n                            uVar7 = 1;\n                            *(arg4 + 8) = *(piVar8 + 0xc);\n                        }\n                    }\n                    else if ((*piVar8 != 0) && (iVar2 = fcn.180035a10(iVar3, *piVar8, 0x10),  iVar2 == 0))\n                    goto code_r0x00018000bd0e;\n                }\n                piVar8 = piVar8 + 2;\n            }\n            puVar5 = *puVar5;\n        } while( true );\n    }\n    uVar7 = arg3;\n    if (arg3 != 0xffffffff) {\n        uVar7 = arg3 & 0xffff;\n        uVar4 = arg3 >> 0x10;\n        if (arg3 >> 0x10 != 0) goto code_r0x00018000bd4c;\n    }\n    uVar4 = 0x111;\ncode_r0x00018000bd4c:\n    ppcVar6 = (**(*arg1 + 0x50))();\n    while( true ) {\n        if (*ppcVar6 == NULL) {\n            return 0;\n        }\n        iVar3 = fcn.18000d310(ppcVar6[1], uVar4, uVar7, arg2);\n        if (iVar3 != 0) break;\n        ppcVar6 = (**ppcVar6)();\n    }\n    uVar4 = fcn.18000babc(arg1, arg2, uVar7, *(iVar3 + 0x18));\n    return uVar4;\n}\n",
        "token_count": 828
    },
    "18000c2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.18000c2fc(void)\n\n{\n    uchar auStack216 [32];\n    uint uStack184;\n    uchar auStack180 [156];\n    uint64_t uStack24;\n    \n    uStack24 = *0x18006ed40 ^ auStack216;\n    fcn.180035830(auStack180, 0, 0x90);\n    uStack184 = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack184);\n    fcn.1800349d0(uStack24 ^ auStack216);\n    return;\n}\n",
        "token_count": 131
    },
    "18000c4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18000c4c0(int32_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.18000c35c();\n    if (iVar1 == 0) {\n        if (((arg2 & 3) == 0) &&\n           ((((arg1[2] < 1 || (arg1[3] < 1)) || (iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0),  iVar1 <= *arg1))\n            || (iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(1),  iVar1 <= arg1[1])))) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0x12340042;\n        }\n        return uVar2;\n    }\n    uVar2 = (**0x1800737e0)(arg1, arg2);\n    return uVar2;\n}\n",
        "token_count": 213
    },
    "18000c65": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.18000c65c(int64_t *arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    ushort *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint32_t *puVar11;\n    uint *puVar12;\n    uint auStackX8 [2];\n    uint16_t in_stack_00000028;\n    int64_t *in_stack_00000030;\n    ushort *in_stack_00000038;\n    uint *in_stack_00000048;\n    int64_t iStack200;\n    int64_t iStack192;\n    int64_t iStack184;\n    int64_t *apiStack168 [4];\n    int64_t *piStack136;\n    int64_t aiStack128 [3];\n    int64_t iStack104;\n    int64_t iStack96;\n    int64_t iStack88;\n    ulong uStack80;\n    ushort auStack72 [16];\n    uint64_t uVar10;\n    \n    uVar10 = 0;\n    auStack72[0] = 0;\n    if (arg1 == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (in_stack_00000030 == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar1 = *(in_stack_00000030 + 2);\n    if (5 < uVar1) {\n        return -0x7ffdfff2;\n    }\n    if (*(in_stack_00000030 + 0x14) != 0) {\n        puVar11 = in_stack_00000030[1];\n        uVar9 = uVar10;\n        do {\n            if (uVar1 <= *puVar11) {\n                return -0x7ffdfff2;\n            }\n            uVar7 = uVar9 + 1;\n            uVar10 = uVar7;\n            uVar8 = *puVar11;\n            puVar11 = puVar11 + 1;\n            apiStack168[uVar8] = *in_stack_00000030 + uVar9 * 0x18;\n            uVar9 = uVar10;\n        } while (uVar7 < *(in_stack_00000030 + 0x14));\n    }\n    if (uVar10 < uVar1) {\n        piVar5 = *in_stack_00000030 + uVar10 * 0x18;\n        do {\n            iVar3 = uVar10;\n            uVar8 = iVar3 + 1;\n            uVar10 = uVar8;\n            apiStack168[(uVar1 - iVar3) - 1] = piVar5;\n            piVar5 = piVar5 + 3;\n        } while (uVar8 < uVar1);\n    }\n    iVar3 = -0x7ffdfffd;\n    puVar12 = auStackX8;\n    if (in_stack_00000048 != NULL) {\n        puVar12 = in_stack_00000048;\n    }\n    puVar6 = auStack72;\n    if (in_stack_00000038 != NULL) {\n        puVar6 = in_stack_00000038;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    if (0x12 < arg2 + 0x139aU) goto code_r0x00018000cefc;\n    // switch table (19 cases) at 0x18000cf2c\n    switch(*((arg2 + 0x139aU) * 4 + 0x18000cf2c) + 0x180000000) {\n    case 0x18000c799:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 200))(arg1, &iStack200);\n            goto code_r0x00018000cefc;\n        }\n        break;\n    case 0x18000c7da:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (*apiStack168[0] != 3) {\n                iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack128, apiStack168[0], 0, 3);\n                if (iVar3 < 0) goto code_r0x00018000cae3;\n                apiStack168[0] = aiStack128;\n            }\n            uVar2 = *(apiStack168[0] + 1);\n            if (*apiStack168[1] != 3) {\n                iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack128, apiStack168[1], 0, 3);\n                if (iVar3 < 0) {\ncode_r0x00018000ce28:\n                    *puVar12 = 1;\n                    goto code_r0x00018000cefc;\n                }\n                apiStack168[1] = aiStack128;\n            }\n            iVar3 = (**(*arg1 + 0xc0))(arg1, uVar2, *(apiStack168[1] + 1), puVar6);\n            goto code_r0x00018000cefc;\n        }\n        break;\n    case 0x18000c866:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (*apiStack168[0] != 3) {\n                iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack128, apiStack168[0], 0, 3);\n                if (iVar3 < 0) goto code_r0x00018000cae3;\n                apiStack168[0] = aiStack128;\n            }\n            iStack200 = *apiStack168[1];\n            iStack192 = apiStack168[1][1];\n            iStack184 = apiStack168[1][2];\n            iVar3 = (**(*arg1 + 0xb8))(arg1, *(apiStack168[0] + 1), &iStack200, puVar6);\n            goto code_r0x00018000cefc;\n        }\n        break;\n    case 0x18000c8df:\n        iVar4 = iStack104;\n        if (*(in_stack_00000030 + 2) == 5) {\n            while (((*apiStack168[0] & 0x4000) != 0 && ((*apiStack168[0] & 0xf) != 0))) {\n                if ((*apiStack168[0] & 0xc) == 0) {\n                    iVar4 = apiStack168[0][1];\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(apiStack168[0][1]);\n                    *apiStack168[0][1] = 3;\n                    iVar4 = apiStack168[0][1] + 8;\n                }\n            }\n            *puVar12 = 0;\n            iStack200 = *piStack136;\n            iStack192 = piStack136[1];\n            iStack184 = piStack136[2];\n            iVar3 = (**(*arg1 + 0xb0))(arg1, iVar4, iStack96, iStack88, uStack80, &iStack200);\n            goto code_r0x00018000cefc;\n        }\n        break;\n    case 0x18000c994:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (*apiStack168[0] != 3) {\n                iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack128, apiStack168[0], 0, 3);\n                if (iVar3 < 0) goto code_r0x00018000cae3;\n                apiStack168[0] = aiStack128;\n            }\n            iStack200 = *apiStack168[1];\n            iStack192 = apiStack168[1][1];\n            iStack184 = apiStack168[1][2];\n            iVar3 = (**(*arg1 + 0xa8))(arg1, *(apiStack168[0] + 1), &iStack200);\n            goto code_r0x00018000cefc;\n        }\n        break;\n    case 0x18000ca0a:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0xa0))(arg1, &iStack200, puVar6 + 4);\ncode_r0x00018000cdb0:\n            if (-1 < iVar3) {\n                *puVar6 = 8;\n            }\n            goto code_r0x00018000cefc;\n        }\n        break;\n    case 0x18000ca4f:\n        iVar3 = (**(*arg1 + 0x98))(arg1, puVar6);\n        goto code_r0x00018000cefc;\n    case 0x18000ca64:\n        iVar3 = (**(*arg1 + 0x90))(arg1, puVar6);\n        goto code_r0x00018000cefc;\n    case 0x18000ca79:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x88))(arg1, &iStack200, puVar6 + 4);\n            goto code_r0x00018000cdb0;\n        }\n        break;\n    case 0x18000cabe:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (((*apiStack168[0] & 0x4000) != 0) && ((*apiStack168[0] & 0xc) == 0)) {\n                iVar3 = -0x7ffdfffb;\ncode_r0x00018000cae3:\n                *puVar12 = 0;\n                goto code_r0x00018000cefc;\n            }\n            if (*apiStack168[0] == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(apiStack168[0][1]);\n                *apiStack168[0][1] = 8;\n                piVar5 = apiStack168[0][1] + 8;\n            }\n            else if (*apiStack168[0] == 0x4008) {\n                piVar5 = apiStack168[0][1];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(apiStack168[0]);\n                piVar5 = apiStack168[0] + 1;\n                *apiStack168[0] = 8;\n            }\n            iStack200 = *apiStack168[1];\n            iStack192 = apiStack168[1][1];\n            iStack184 = apiStack168[1][2];\n            iVar3 = (**(*arg1 + 0x80))(arg1, piVar5, &iStack200, puVar6 + 4);\n            goto code_r0x00018000cecc;\n        }\n        break;\n    case 0x18000cb76:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x78))(arg1, &iStack200, puVar6 + 4);\n            goto code_r0x00018000cdb0;\n        }\n        break;\n    case 0x18000cbb8:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x70))(arg1, &iStack200, puVar6);\n            goto code_r0x00018000cefc;\n        }\n        break;\n    case 0x18000cbf9:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x68))(arg1, &iStack200, puVar6);\n            goto code_r0x00018000cefc;\n        }\n        break;\n    case 0x18000cc3a:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x60))(arg1, &iStack200, puVar6 + 4);\n            goto code_r0x00018000cdb0;\n        }\n        break;\n    case 0x18000cc7c:\n        if ((in_stack_00000028 & 2) == 0) {\n            if ((in_stack_00000028 & 4) == 0) goto code_r0x00018000cd69;\n            if (*(in_stack_00000030 + 2) == 2) {\n                iStack200 = *apiStack168[0];\n                iStack192 = apiStack168[0][1];\n                iStack184 = apiStack168[0][2];\n                if (*apiStack168[1] != 8) {\n                    iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack128, apiStack168[1], 0, 3);\n                    if (iVar3 < 0) goto code_r0x00018000ce28;\n                    apiStack168[1] = aiStack128;\n                }\n                iStack104 = iStack200;\n                iStack96 = iStack192;\n                iStack88 = iStack184;\n                iVar3 = (**(*arg1 + 0xd8))(arg1, &iStack104, apiStack168[1][1]);\n                goto code_r0x00018000cefc;\n            }\n        }\n        else if (*(in_stack_00000030 + 2) == 1) {\n            iStack200 = *apiStack168[0];\n            iStack192 = apiStack168[0][1];\n            iStack184 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x58))(arg1, &iStack200, puVar6 + 4);\n            goto code_r0x00018000cdb0;\n        }\n        break;\n    case 0x18000cd69:\ncode_r0x00018000cd69:\n        if ((in_stack_00000028 & 2) == 0) {\n            if ((in_stack_00000028 & 4) == 0) goto code_r0x00018000ce76;\n            if (*(in_stack_00000030 + 2) == 2) {\n                iStack104 = *apiStack168[0];\n                iStack96 = apiStack168[0][1];\n                iStack88 = apiStack168[0][2];\n                if (*apiStack168[1] != 8) {\n                    iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack128, apiStack168[1], 0, 3);\n                    if (iVar3 < 0) goto code_r0x00018000ce28;\n                    apiStack168[1] = aiStack128;\n                }\n                iStack200 = iStack104;\n                iStack192 = iStack96;\n                iStack184 = iStack88;\n                iVar3 = (**(*arg1 + 0xd0))(arg1, &iStack200, apiStack168[1][1]);\n                goto code_r0x00018000cefc;\n            }\n        }\n        else if (*(in_stack_00000030 + 2) == 1) {\n            iStack104 = *apiStack168[0];\n            iStack96 = apiStack168[0][1];\n            iStack88 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x50))(arg1, &iStack104, puVar6 + 4);\n            goto code_r0x00018000cdb0;\n        }\n        break;\n    case 0x18000ce76:\ncode_r0x00018000ce76:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack104 = *apiStack168[0];\n            iStack96 = apiStack168[0][1];\n            iStack88 = apiStack168[0][2];\n            iVar3 = (**(*arg1 + 0x48))(arg1, &iStack104, puVar6 + 4);\n            goto code_r0x00018000ceed;\n        }\n        break;\n    case 0x18000cebe:\n        iVar3 = (**(*arg1 + 0x40))(arg1, puVar6 + 4);\ncode_r0x00018000cecc:\n        if (-1 < iVar3) {\n            *puVar6 = 3;\n        }\n        goto code_r0x00018000cefc;\n    case 0x18000cedf:\n        iVar3 = (**(*arg1 + 0x38))(arg1, puVar6 + 4);\ncode_r0x00018000ceed:\n        if (-1 < iVar3) {\n            *puVar6 = 9;\n        }\n        goto code_r0x00018000cefc;\n    }\n    iVar3 = -0x7ffdfff2;\ncode_r0x00018000cefc:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(aiStack128);\n    return iVar3;\n}\n",
        "token_count": 4107
    },
    "18000d31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.18000d312(int32_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    while( true ) {\n        if (*(arg1 + 4) == 0) {\n            return NULL;\n        }\n        if ((((*arg1 == arg2) && (arg1[1] == arg3)) && (arg1[2] <= arg4)) && (arg4 < arg1[3] || arg4 == arg1[3])) break;\n        arg1 = arg1 + 8;\n    }\n    return arg1;\n}\n",
        "token_count": 129
    },
    "18000dc5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.18000dc54(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    uint in_stack_00000038;\n    uint in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong uStack32;\n    int64_t iStack24;\n    \n    uStack32 = 0;\n    iVar3 = fcn.18001e94c();\n    iVar1 = fcn.18001dd30(*(iVar3 + 0xd8), &uStack32);\n    iStack24 = 0;\n    if (iVar1 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                           in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060\n                           , iVar1);\n        if (iVar1 != 2) {\n            iStack24 = iVar3;\n            if (iVar3 != 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.18001dd14(0, uStack32);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 417
    },
    "18000ded": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18000ded4(ulong *arg1)\n\n{\n    if (*(arg1 + 1) != 0) {\n        fcn.18001dd14(0, *arg1);\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "18000f67": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong * fcn.18000f67c(int64_t lpModuleName, ulong *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    if (*(lpModuleName + 0x20) == 0) {\n        if (*(lpModuleName + 8) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(lpModuleName + 0x18));\n            *(lpModuleName + 8) = iVar1;\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(lpModuleName + 0x18));\n                *(lpModuleName + 8) = iVar1;\n                *(lpModuleName + 0x10) = iVar1 != 0;\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(lpModuleName + 8), \"InitCommonControls\");\n        *(lpModuleName + 0x20) = uVar2;\n    }\n    *arg2 = *(lpModuleName + 0x20);\n    return arg2;\n}\n",
        "token_count": 238
    },
    "18000f6f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.18000f6f0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    ulong uStackX24;\n    uchar auStackX32 [8];\n    \n    uStackX24 = 0;\n    iVar1 = fcn.18001e94c();\n    iVar2 = fcn.18001dd30(*(iVar1 + 0xd8), &uStackX24);\n    if (iVar2 != 0) {\n        fcn.18000f67c(arg1, auStackX32);\n        pcVar3 = *(arg1 + 0x20);\n        if (pcVar3 == NULL) {\n            fcn.180015288();\n        }\n        (*pcVar3)();\n        if (iVar2 != 2) {\n            fcn.18001dd14(0, uStackX24);\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "18000f76": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong * fcn.18000f768(int64_t lpModuleName, ulong *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    if (*(lpModuleName + 0x28) == 0) {\n        if (*(lpModuleName + 8) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(lpModuleName + 0x18));\n            *(lpModuleName + 8) = iVar1;\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(lpModuleName + 0x18));\n                *(lpModuleName + 8) = iVar1;\n                *(lpModuleName + 0x10) = iVar1 != 0;\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(lpModuleName + 8), \"InitCommonControlsEx\");\n        *(lpModuleName + 0x28) = uVar2;\n    }\n    *arg2 = *(lpModuleName + 0x28);\n    return arg2;\n}\n",
        "token_count": 238
    },
    "18000fb3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.18000fb30(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    bool bVar5;\n    \n    iVar2 = fcn.1800206d0(0x180073ca0, 0x18000d9b0);\n    if (iVar2 != 0) {\n        iVar4 = fcn.18001e94c();\n        if ((*(iVar4 + 0x28) != '\\0') && (*(iVar2 + 0x48) != 0)) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n            *(iVar2 + 0x48) = 0;\n        }\n        bVar5 = *(iVar2 + 0x28) == 0;\n        if (!bVar5) {\n            *(iVar2 + 0x28) = 0;\n        }\n        return bVar5;\n    }\n    fcn.180015288();\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 249
    },
    "18001034": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.180010348(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_stack_00000028;\n    uint32_t auStack120 [2];\n    int64_t iStack112;\n    ulong uStack104;\n    uchar auStack96 [24];\n    uchar auStack72 [48];\n    \n    uStack104 = 0xfffffffffffffffe;\n    iVar3 = fcn.1800206d0(0x180073ca0, 0x18000d9b0);\n    iStack112 = iVar3;\n    if (iVar3 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    fcn.180035bc0(auStack72, iVar3 + 0x98, 0x30);\n    *(iVar3 + 0x98) = arg2;\n    *(iVar3 + 0xa0) = arg3;\n    *(iVar3 + 0xa8) = arg4;\n    *(iVar3 + 0xb0) = in_stack_00000028;\n    if ((arg3 == 2) && (arg1[0x13] != 0)) {\n        (**(*arg1[0x13] + 0xc0))(arg1[0x13], 0);\n    }\n    auStack120[0] = 0;\n    if (arg3 == 0x110) {\n        fcn.18000df64(arg1, auStack96, auStack120);\n    }\n    uVar2 = auStack120[0];\n    uVar4 = (**(*arg1 + 0x220))(arg1, arg3, arg4, in_stack_00000028);\n    if (arg3 == 0x110) {\n        fcn.1800102b0(arg1, auStack96, uVar2);\n    }\n    fcn.180035bc0(iVar3 + 0x98, auStack72, 0x30);\n    return uVar4;\n}\n",
        "token_count": 491
    },
    "18001073": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t * fcn.18001073c(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    int32_t iVar1;\n    int64_t *piVar2;\n    \n    if ((arg1 == NULL) || (arg1[8] == 0)) {\n        arg1 = NULL;\n    }\n    else {\n        iVar1 = (**(*arg1 + 0x250))();\n        piVar2 = arg1;\n        if (iVar1 == 0) {\n            arg1 = fcn.1800106ec(arg1);\n            piVar2 = arg1;\n        }\n        while (arg1_00 = piVar2,  arg1_00 != NULL) {\n            piVar2 = fcn.1800106ec(arg1_00);\n            arg1 = arg1_00;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 192
    },
    "1800109b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.1800109b4(int64_t *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    uVar1 = fcn.18000fa84(arg1, arg2);\n    if (uVar1 != 0) {\n        (**(*arg1 + 0xa0))(arg1);\n        piVar2 = (**(*arg1 + 0x1f0))(arg1);\n        iVar3 = (*_sym.imp.USER32.dll_SetWindowLongPtrA)(arg2, 0xfffffffc, 0x1800104a8);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar3;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 181
    },
    "18001120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180011204(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    fcn.18001fcbc(0xc);\n    iVar2 = fcn.18001fff4(0x180073ae0, 0x180010288);\n    if (iVar2 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    if (*(iVar2 + 0x10) == 0) {\n        iVar4 = fcn.18000de38(\"hhctrl.ocx\");\n        *(iVar2 + 8) = iVar4;\n        if (iVar4 != 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"HtmlHelpA\");\n            *(iVar2 + 0x10) = iVar4;\n            if (iVar4 != 0) goto code_r0x00018001129e;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(iVar2 + 8));\n            *(iVar2 + 8) = 0;\n        }\n        uVar3 = 0;\n    }\n    else {\ncode_r0x00018001129e:\n        fcn.18001fd50(0xc);\n        uVar3 = (**(iVar2 + 0x10))(arg1, arg2, arg3, arg4);\n    }\n    return uVar3;\n}\n",
        "token_count": 354
    },
    "180011e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180011e50(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar3 = fcn.1800206d0(0x180073ca0, 0x18000d9b0);\n    if (iVar3 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (*(iVar3 + 0x28) != arg1) {\n        if (*(iVar3 + 0x48) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar4 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x180011b4c, 0, uVar2);\n            *(iVar3 + 0x48) = iVar4;\n            if (iVar4 == 0) {\n                fcn.180015240();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        *(iVar3 + 0x28) = arg1;\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "18001215": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180012154(int64_t *arg1, ulong arg2, uint64_t arg3, int64_t *arg4)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    code **ppcVar7;\n    uchar *puVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int16_t iVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint64_t *in_stack_00000028;\n    uint64_t *in_stack_fffffffffffffee8;\n    uint64_t uStack264;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint uStack248;\n    uchar auStack240 [8];\n    int64_t iStack232;\n    ulong uStack208;\n    uchar auStack200 [64];\n    int64_t iStack136;\n    int64_t iStack40;\n    \n    uStack208 = 0xfffffffffffffffe;\n    uStack264 = 0;\n    uStack248 = 0x7fffffff;\n    if (arg2 == 0x111) {\n        iVar4 = (**(*arg1 + 0x1e0))(arg1, arg3, arg4);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        uStack264 = 1;\n    }\n    else if (arg2 == 0x4e) {\n        if ((*arg4 == 0) || (iVar4 = (**(*arg1 + 0x1e8))(arg1, arg3, arg4, &uStack264),  iVar4 == 0)) {\n            return 0;\n        }\n    }\n    else {\n        if (arg2 == 6) {\n            uVar6 = fcn.18000fa14(arg4);\n            fcn.180011894(arg1, arg3, uVar6);\n        }\n        iVar13 = arg4;\n        if ((arg2 == 0x20) && (iVar4 = fcn.180011938(arg1, iVar13, arg4 >> 0x10 & 0xffff),  iVar4 != 0)) {\n            uStack264 = 1;\n        }\n        else {\n            if (((arg1[0x13] != 0) && (0 < *(arg1[0x13] + 0xe0))) &&\n               ((((0x1ff < arg2 && (arg2 < 0x20a)) || ((0xff < arg2 && (arg2 < 0x110)))) || (arg2 - 0x281 < 0x11)))) {\n                in_stack_fffffffffffffee8 = &uStack264;\n                iVar4 = (**(*arg1[0x13] + 0x128))(arg1[0x13], arg2, arg3, arg4, in_stack_fffffffffffffee8);\n                if (iVar4 != 0) goto code_r0x000180012ee7;\n            }\n            ppcVar7 = (**(*arg1 + 0x50))();\n            uVar12 = (ppcVar7 ^ arg2) & 0x1ff;\n            uStack248 = 7;\n            fcn.18001fcbc(7);\n            uVar11 = 0x1800707d0;\n            if ((arg2 != *(uVar12 * 0x18 + 0x1800707d0)) || (ppcVar7 != *(uVar12 * 0x18 + 0x1800707e0))) {\n                *(uVar12 * 0x18 + 0x1800707d0) = arg2;\n                *(uVar12 * 0x18 + 0x1800707e0) = ppcVar7;\n                pcVar2 = *ppcVar7;\n                do {\n                    if (pcVar2 == NULL) {\n                        *(uVar12 * 0x18 + 0x1800707d8) = 0;\n                        fcn.18001fd50(7);\n                        return 0;\n                    }\n                    if (arg2 < 0xc000) {\n                        puVar14 = ppcVar7[1];\n                        iVar9 = *(puVar14 + 4);\n                        for (; (puVar15 = NULL,  iVar9 != 0 &&\n                               (((*puVar14 != arg2 || (puVar14[1] != 0)) || (puVar15 = puVar14,  puVar14[2] != 0))));\n                            puVar14 = puVar14 + 8) {\n                            iVar9 = *(puVar14 + 0xc);\n                        }\n                        if (puVar15 != NULL) {\n                            *(uVar12 * 0x18 + 0x1800707d8) = puVar15;\n                            fcn.18001fd50(7);\n                            goto code_r0x0001800123da;\n                        }\n                    }\n                    else {\n                        puVar14 = ppcVar7[1];\n                        while( true ) {\n                            iVar9 = *(puVar14 + 4);\n                            for (; (puVar15 = NULL,  iVar9 != 0 &&\n                                   (((*puVar14 != 0xc000 || (puVar14[1] != 0)) || (puVar15 = puVar14,  puVar14[2] != 0))\n                                   )); puVar14 = puVar14 + 8) {\n                                iVar9 = *(puVar14 + 0xc);\n                            }\n                            if (puVar15 == NULL) break;\n                            if (**(puVar15 + 4) == arg2) {\n                                *(uVar12 * 0x18 + 0x1800707d8) = puVar15;\n                                fcn.18001fd50(7);\n                                goto code_r0x000180012ed2;\n                            }\n                            puVar14 = puVar15 + 8;\n                        }\n                    }\n                    ppcVar7 = (*pcVar2)();\n                    pcVar2 = *ppcVar7;\n                } while( true );\n            }\n            puVar15 = *(uVar12 * 0x18 + 0x1800707d8);\n            fcn.18001fd50(7);\n            if (puVar15 == NULL) {\n                return 0;\n            }\n            if (arg2 < 0xc000) {\ncode_r0x0001800123da:\n                uStack248 = 0x7fffffff;\n                pcVar2 = *(puVar15 + 6);\n                uVar12 = *(puVar15 + 4);\n                iVar3 = arg4 >> 0x10;\n                if (uVar12 < 0x25) {\n                    if (uVar12 == 0x24) {\n                        uVar6 = fcn.18000fa14(arg4);\n                        (*pcVar2)(arg1, uVar6);\n                    }\n                    else if (uVar12 < 0x13) {\n                        if (uVar12 == 0x12) {\n                            (*pcVar2)(arg1, arg3, arg4);\n                        }\n                        else if (uVar12 < 10) {\n                            if (uVar12 == 9) {\n                                fcn.180018ee0(auStack240);\n                                iStack232 = arg4[1];\n                                uStack264 = (*pcVar2)(arg1, auStack240, *(arg4 + 2));\n                                iStack232 = 0;\n                                fcn.1800196fc(auStack240);\n                            }\n                            else if (uVar12 == 1) {\n                                uVar6 = fcn.18001963c(arg3);\n                                iVar4 = (*pcVar2)(arg1, uVar6);\n                                uStack264 = iVar4;\n                            }\n                            else if (uVar12 == 2) {\n                                iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                                uStack264 = iVar4;\n                            }\n                            else if (uVar12 == 3) {\n                                iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                                uStack264 = iVar4;\n                            }\n                            else if (uVar12 == 4) {\n                                iVar4 = (*pcVar2)(arg1, arg3);\n                                uStack264 = iVar4;\n                            }\n                            else if (uVar12 == 5) {\n                                uVar6 = fcn.18000fa14(arg3);\n                                iVar4 = (*pcVar2)(arg1, uVar6, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                                uStack264 = iVar4;\n                            }\n                            else if (uVar12 == 6) {\n                                uVar6 = fcn.18000fa14(arg3);\n                                iVar4 = (*pcVar2)(arg1, uVar6, arg4);\n                                uStack264 = iVar4;\n                            }\n                            else if (uVar12 == 7) {\n                                iVar4 = (*pcVar2)(arg1, arg4);\n                                uStack264 = iVar4;\n                            }\n                            else if (uVar12 == 8) {\n                                fcn.180018ee0(auStack240);\n                                iStack232 = arg4[1];\n                                fcn.18000def0(auStack200);\n                                iStack136 = *arg4;\n                                uVar1 = *(arg4 + 2);\n                                puVar8 = fcn.18000fa58(iStack136);\n                                if (puVar8 == NULL) {\n                                    if ((arg1[0x13] != 0) &&\n                                       (iVar9 = fcn.18001f148(arg1[0x13] + 0x48, iStack136),  iVar9 != 0)) {\n                                        iStack40 = iVar9;\n                                    }\n                                    puVar8 = auStack200;\n                                }\n                                uStack264 = (*pcVar2)(arg1, auStack240, puVar8, uVar1);\n                                iStack232 = 0;\n                                iStack136 = 0;\n                                fcn.18001052c(auStack200);\n                                fcn.1800196fc(auStack240);\n                            }\n                        }\n                        else if (uVar12 == 10) {\n                            uVar6 = fcn.18000fa14(arg4);\n                            iVar4 = (*pcVar2)(arg1, arg3 & 0xffff, uVar6, arg3 >> 0x10 & 0xffff);\n                            uStack264 = iVar4;\n                        }\n                        else if (uVar12 == 0xb) {\n                            iVar4 = (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff);\n                            uStack264 = iVar4;\n                        }\n                        else if (uVar12 == 0xc) {\n                            uVar6 = fcn.18000fa14(arg3);\n                            iVar4 = (*pcVar2)(arg1, uVar6, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                            uStack264 = iVar4;\n                        }\n                        else if (uVar12 == 0xd) {\n                            iVar4 = (*pcVar2)(arg1, arg4);\n                            uStack264 = iVar4;\n                        }\n                        else if (uVar12 == 0xe) {\n                            uStack264 = (*pcVar2)(arg1, arg3, arg4);\n                        }\n                        else if (uVar12 == 0xf) {\n                            uVar6 = fcn.18001eb20(arg4);\n                            uStack264 = (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff, uVar6);\n                        }\n                        else if (uVar12 == 0x10) {\n                            (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                        }\n                        else if (uVar12 == 0x11) {\n                            (*pcVar2)(arg1, arg3);\n                        }\n                    }\n                    else if (uVar12 < 0x1c) {\n                        if (uVar12 == 0x1b) {\n                            iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                            uStack264 = iVar4;\n                        }\n                        else if (uVar12 == 0x13) {\n                            (*pcVar2)(arg1);\n                        }\n                        else if (uVar12 == 0x14) {\n                            (*pcVar2)(arg1, arg3 & 0xffffffff);\n                        }\n                        else if (uVar12 == 0x15) {\n                            (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffffffff);\n                        }\n                        else if (uVar12 == 0x16) {\n                            (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff);\n                        }\n                        else if (uVar12 == 0x17) {\n                            (*pcVar2)(arg1, iVar13, iVar3);\n                        }\n                        else if (uVar12 == 0x18) {\n                            (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                        }\n                        else if (uVar12 == 0x19) {\n                            (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                        }\n                        else if (uVar12 == 0x1a) {\n                            uVar6 = fcn.18000fa14(arg4);\n                            (*pcVar2)(arg1, arg3 & 0xffffffff, uVar6);\n                        }\n                    }\n                    else if (uVar12 == 0x1c) {\n                        uVar5 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                        uStack264 = uVar5;\n                    }\n                    else if (uVar12 == 0x1d) {\n                        iVar4 = (*pcVar2)(arg1);\n                        uStack264 = iVar4;\n                    }\n                    else if (uVar12 == 0x1e) {\n                        (*pcVar2)(arg1, arg3, arg4);\n                    }\n                    else if (uVar12 == 0x1f) {\n                        uVar6 = fcn.18000fa14(arg3);\n                        uVar10 = fcn.18000fa14(arg4);\n                        (*pcVar2)(arg1, arg1[8] == arg4, uVar10, uVar6);\n                    }\n                    else if (uVar12 == 0x20) {\n                        uVar6 = fcn.18001963c(arg3);\n                        (*pcVar2)(arg1, uVar6);\n                    }\n                    else if (uVar12 == 0x21) {\n                        uVar6 = fcn.18001eb20(arg3);\n                        (*pcVar2)(arg1, uVar6);\n                    }\n                    else if (uVar12 == 0x22) {\n                        uVar6 = fcn.18001eb20(arg3);\n                        (*pcVar2)(arg1, uVar6, iVar13, iVar3);\n                    }\n                    else if (uVar12 == 0x23) {\n                        uVar6 = fcn.18000fa14(arg3);\n                        (*pcVar2)(arg1, uVar6);\n                    }\n                }\n                else if (uVar12 < 0x38) {\n                    if (uVar12 == 0x37) {\n                        iStack256 = iVar13;\n                        iStack252 = iVar3;\n                        iVar4 = (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10, CONCAT44(iStack252, iStack256));\n                        uStack264 = iVar4;\n                        if (uStack264 == 0) {\n                            return 0;\n                        }\n                    }\n                    else if (uVar12 < 0x2f) {\n                        if (uVar12 == 0x2e) {\n                            (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                            uStack264 = 1;\n                        }\n                        else if (uVar12 == 0x25) {\n                            uVar6 = fcn.18000fa14(arg3);\n                            (*pcVar2)(arg1, uVar6, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                        }\n                        else if (uVar12 == 0x26) {\n                            iStack256 = iVar13;\n                            iStack252 = iVar3;\n                            uVar6 = fcn.18000fa14(arg3);\n                            (*pcVar2)(arg1, uVar6, CONCAT44(iStack252, iStack256));\n                        }\n                        else if (uVar12 == 0x27) {\n                            uVar6 = fcn.18000fa14(arg3);\n                            (*pcVar2)(arg1, uVar6, arg4);\n                        }\n                        else if (uVar12 == 0x28) {\n                            uStack264 = (*pcVar2)(arg1);\n                        }\n                        else if (uVar12 == 0x29) {\n                            uVar6 = fcn.18000fa14(arg4);\n                            (*pcVar2)(arg1, arg3 & 0xffff, uVar6, arg3 >> 0x10 & 0xffff);\n                        }\n                        else if (0x29 < uVar12) {\n                            if (uVar12 < 0x2c) {\n                                iVar4 = arg3 >> 0x10;\n                                if (uVar12 == 0x2a) {\n                                    uVar6 = fcn.18000fa14(arg4);\n                                    (*pcVar2)(arg1, arg3, iVar4, uVar6);\n                                }\n                                else {\n                                    (*pcVar2)(arg1, arg3, iVar4);\n                                }\n                            }\n                            else if (uVar12 == 0x2c) {\n                                (*pcVar2)(arg1, arg4);\n                            }\n                            else if (uVar12 == 0x2d) {\n                                (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                            }\n                        }\n                    }\n                    else if (uVar12 == 0x2f) {\n                        iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                        uStack264 = iVar4;\n                    }\n                    else if (uVar12 == 0x30) {\n                        iStack256 = iVar13;\n                        iStack252 = iVar3;\n                        uVar5 = (*pcVar2)(arg1, CONCAT44(iStack252, iStack256));\n                        uStack264 = uVar5;\n                    }\n                    else if (uVar12 == 0x31) {\n                        uVar5 = (*pcVar2)(arg1);\n                        uStack264 = uVar5;\n                    }\n                    else if (uVar12 == 0x32) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                    }\n                    else if (uVar12 == 0x33) {\n                        (*pcVar2)(arg1, arg4);\n                    }\n                    else if (uVar12 == 0x34) {\n                        (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff, arg4);\n                    }\n                    else if (uVar12 == 0x35) {\n                        iStack256 = iVar13;\n                        iStack252 = iVar3;\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, CONCAT44(iStack252, iStack256));\n                    }\n                    else if (uVar12 == 0x36) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                        uStack264 = 1;\n                    }\n                }\n                else if (uVar12 < 0x4d) {\n                    if (uVar12 == 0x4c) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                    }\n                    else if (uVar12 == 0x38) {\n                        iStack256 = iVar13;\n                        iStack252 = iVar3;\n                        (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10, CONCAT44(iStack252, iStack256));\n                    }\n                    else if (uVar12 == 0x45) {\n                        uStack264 = (*pcVar2)(arg1);\n                        if (uStack264 != 0) {\n                            return 0;\n                        }\n                    }\n                    else if (uVar12 == 0x46) {\n                        iStack256 = iVar13;\n                        iStack252 = iVar3;\n                        uStack264 = (*pcVar2)(arg1, CONCAT44(iStack252, iStack256));\n                    }\n                    else if (uVar12 == 0x47) {\n                        uVar6 = fcn.18000fa14(arg3);\n                        uVar5 = (*pcVar2)(arg1, uVar6, arg4 & 0xffffffff);\n                        uStack264 = uVar5;\n                    }\n                    else if (uVar12 == 0x48) {\n                        uVar6 = fcn.18001eb20(arg4);\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, uVar6);\n                    }\n                    else if (uVar12 == 0x49) {\n                        uVar6 = fcn.18001eb20(arg4);\n                        uVar5 = (*pcVar2)(arg1, arg3 & 0xffffffff, uVar6);\n                        uStack264 = uVar5;\n                    }\n                    else if (uVar12 == 0x4a) {\n                        uVar5 = (*pcVar2)(arg1, arg4);\n                        uStack264 = uVar5;\n                    }\n                    else if (uVar12 == 0x4b) {\n                        uVar6 = fcn.18001eb20(arg3);\n                        (*pcVar2)(arg1, uVar6, arg4 & 0xffffffff);\n                    }\n                }\n                else if (uVar12 == 0x4d) {\n                    uVar5 = arg4 >> 0x10;\n                    uVar6 = fcn.18000fa14(arg3);\n                    (*pcVar2)(arg1, uVar6, uVar5 & 0xfff, uVar5 & 0xf000, \n                              in_stack_fffffffffffffee8 & 0xffffffff00000000 | arg4 & 0xffff);\n                    uStack264 = 1;\n                }\n                else if (uVar12 == 0x4e) {\n                    (*pcVar2)(arg1, arg3 & 0xff, arg4);\n                }\n                else if (uVar12 == 0x4f) {\n                    uVar5 = (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffffffff);\n                    uStack264 = uVar5;\n                }\n                else if (uVar12 == 0x50) {\n                    iStack256 = iVar13;\n                    iStack252 = iVar3;\n                    (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff, CONCAT44(iStack252, iStack256));\n                    uStack264 = 1;\n                }\n                else if (uVar12 == 0x51) {\n                    iStack256 = iVar13;\n                    iStack252 = iVar3;\n                    (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff, CONCAT44(iStack252, iStack256));\n                    uStack264 = 1;\n                }\n                else if (uVar12 == 0x52) {\n                    (*pcVar2)(arg1, uVar11 & 0xffffffffffffff00 | arg3 & 0xff, arg4 & 0xffffffff);\n                    uStack264 = 1;\n                }\n                else if (uVar12 == 0x53) {\n                    (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                }\n                else if (uVar12 == 0x54) {\n                    (*pcVar2)(arg1, arg3 & 0xffff);\n                }\n            }\n            else {\ncode_r0x000180012ed2:\n                uStack248 = 0x7fffffff;\n                uStack264 = (**(puVar15 + 6))(arg1, arg3, arg4);\n            }\n        }\n    }\ncode_r0x000180012ee7:\n    if (in_stack_00000028 != NULL) {\n        *in_stack_00000028 = uStack264;\n    }\n    return 1;\n}\n",
        "token_count": 5459
    },
    "180013bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180013bd4(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 0x98) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(**(arg1 + 0x98) + 0x130))();\n    }\n    return uVar1;\n}\n",
        "token_count": 84
    },
    "180013bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180013bfc(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 0x98) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(**(arg1 + 0x98) + 0xa8))();\n    }\n    return uVar1;\n}\n",
        "token_count": 84
    },
    "180013c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013c24(int64_t hDlg, ulong nIDDlgItem)\n\n{\n    ulong arg1;\n    \n    if (*(hDlg + 0x98) == 0) {\n        arg1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(hDlg + 0x40));\n        fcn.18000fa14(arg1);\n    }\n    else {\n        (**(**(hDlg + 0x98) + 0xe8))();\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "180013c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013c5c(int64_t hDlg, ulong nIDDlgItem, ulong *arg3)\n\n{\n    ulong uVar1;\n    \n    if (*(hDlg + 0x98) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(hDlg + 0x40));\n        *arg3 = uVar1;\n    }\n    else {\n        (**(**(hDlg + 0x98) + 0xe0))();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "180013cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013cd8(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(hWnd + 0x40), 0xfffffff0);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0xf0))();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "180013d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013d0c(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(hWnd + 0x40), 0xffffffec);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0xf8))();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "180013d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013d40(int64_t arg1)\n\n{\n    ulong in_RDX;\n    ulong in_R8;\n    ulong in_R9;\n    \n    if (*(arg1 + 0xa0) == 0) {\n        fcn.18000d148(*(arg1 + 0x40), in_RDX, in_R8, in_R9);\n    }\n    else {\n        (**(**(arg1 + 0xa0) + 0x108))();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "180013d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013d70(int64_t hWnd, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (hWnd == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(hWnd + 0x40));\n    if (iVar2 == 0) {\n        if (*(hWnd + 0xa0) == 0) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    else if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextA)(*(hWnd + 0x40), arg2);\n        return;\n    }\n    (**(**(hWnd + 0xa0) + 0x110))(*(hWnd + 0xa0), arg2);\n    return;\n}\n",
        "token_count": 233
    },
    "180013de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013de0(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x120))();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "180013e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013e10(int64_t hWnd, ulong X, ulong Y, ulong nWidth)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_MoveWindow)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x130))();\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "180013e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013e58(int64_t hWnd, ulong nCmdShow)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x140))();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "180013e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013e88(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x148))();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "180013ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013ee8(int64_t hWnd)\n\n{\n    ulong arg1;\n    \n    if (*(hWnd + 0xa0) == 0) {\n        arg1 = (*_sym.imp.USER32.dll_SetFocus)(*(hWnd + 0x40));\n        fcn.18000fa14(arg1);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x160))();\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "180013f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013f5c(int64_t arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    if (*(arg1 + 0xa0) != 0) {\n        fcn.180013f20(arg1);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "180013f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013f8c(int64_t arg1, int64_t arg2)\n\n{\n    if ((*(arg1 + 0xa0) == 0) && (*(arg2 + 0x98) != 0)) {\n        (**(**(arg2 + 0x98) + 0x138))(*(arg2 + 0x98), arg1);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "180013fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180013fc0(ulong *arg1)\n\n{\n    if (arg1[1] == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*arg1, 0xfffffff0);\n    }\n    else {\n        (**(*arg1[1] + 0xf0))();\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "1800140c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800140cc(int64_t hWnd, int64_t arg2)\n\n{\n    ulong arg2_00;\n    int64_t iVar1;\n    \n    if ((hWnd != 0) && (*(hWnd + 0xa0) == 0)) {\n        arg2_00 = (*_sym.imp.USER32.dll_GetParent)(*(hWnd + 0x40));\n        iVar1 = fcn.18001f148(arg2 + 0x30, arg2_00);\n        if ((iVar1 != 0) && (*(iVar1 + 0x98) != 0)) {\n            (**(**(iVar1 + 0x98) + 0x138))(*(iVar1 + 0x98), hWnd, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "18001415": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t * fcn.180014158(int64_t arg1, int64_t *arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *arg1_00;\n    uint32_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t **ppiVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    code *pcVar8;\n    code *pcVar9;\n    bool bVar10;\n    int64_t iStackX8;\n    \n    if (*(arg1 + 0x98) != 0) {\n        if ((*(arg1 + 0x78) >> 0xb & 1) == 0) {\n            uVar3 = *(arg1 + 0x40);\n            uVar7 = 5;\n            while( true ) {\n                uVar3 = (*_sym.imp.USER32.dll_GetWindow)(uVar3, uVar7);\n                iVar4 = fcn.18000fa14(uVar3);\n                if (iVar4 == 0) break;\n                uVar2 = fcn.180013d0c(iVar4);\n                if ((((uVar2 >> 0x10 & 1) != 0) && (uVar2 = fcn.180013cd8(iVar4),  (uVar2 >> 0x1c & 1) != 0)) &&\n                   (uVar2 = fcn.180013cd8(iVar4),  (uVar2 >> 0x1b & 1) == 0)) {\n                    return NULL;\n                }\n                uVar3 = *(iVar4 + 0x40);\n                uVar7 = 2;\n            }\n        }\n        if (arg3 == 0) {\n            pcVar9 = 0x18000d980;\n            pcVar8 = 0x18000d450;\n        }\n        else {\n            pcVar9 = 0x180014134;\n            pcVar8 = 0x18001404c;\n        }\n        iStackX8 = (*pcVar8)(*(arg1 + 0x98) + 0x80);\ncode_r0x000180014220:\n        do {\n            if (iStackX8 == 0) {\n                return NULL;\n            }\n            ppiVar5 = (*pcVar9)(*(arg1 + 0x98) + 0x80, &iStackX8);\n            piVar1 = *ppiVar5;\n            if (arg2 == NULL) {\n                if (piVar1[1] == 0) {\n                    iVar4 = *piVar1;\n                }\n                else {\n                    iVar4 = *(piVar1[1] + 0x48);\n                }\n                if ((iVar4 != 0) && (iVar6 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar4 == iVar6)) break;\n                if (piVar1[1] == 0) goto code_r0x000180014220;\n                bVar10 = piVar1[1] == *(*(arg1 + 0x98) + 0xd8);\n            }\n            else {\n                bVar10 = arg2 == piVar1;\n            }\n        } while (!bVar10);\n        if (piVar1 != NULL) {\n            while( true ) {\n                if (iStackX8 == 0) {\n                    iStackX8 = (*pcVar8)(*(arg1 + 0x98) + 0x80);\n                }\n                ppiVar5 = (*pcVar9)(*(arg1 + 0x98) + 0x80, &iStackX8);\n                arg1_00 = *ppiVar5;\n                uVar2 = fcn.180013fc0(arg1_00);\n                if (arg1_00 == piVar1) break;\n                if ((((uVar2 >> 0x10 & 1) != 0) && ((uVar2 >> 0x1b & 1) == 0)) && ((uVar2 >> 0x1c & 1) != 0)) {\n                    return arg1_00;\n                }\n            }\n            return arg1_00;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 930
    },
    "1800142f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800142fc(int64_t arg1, ulong *arg2)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    ulong uVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    ulong *arg1_00;\n    \n    if (*(arg1 + 0x98) == 0) {\n        return;\n    }\n    if (arg2 == NULL) {\n        return;\n    }\n    if ((*(arg2 + 2) != 0) && (iVar8 = (*_sym.imp.USER32.dll_SendMessageA)(*arg2, 0xf0, 0, 0),  iVar8 == 1)) {\n        uVar6 = *arg2;\ncode_r0x0001800143b4:\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar6, 0xf1, 0, 0);\n        return;\n    }\n    puVar5 = fcn.180020cf0(*(arg1 + 0x98) + 0x80, arg2, 0);\n    if (puVar5 == NULL) {\n        fcn.180015288();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    puVar7 = *puVar5;\ncode_r0x000180014374:\n    if (puVar7 == NULL) {\ncode_r0x0001800143c7:\n        iVar8 = puVar5[1];\n        while( true ) {\n            if (iVar8 == 0) {\n                return;\n            }\n            iVar2 = *(iVar8 + 8);\n            arg1_00 = *(iVar8 + 0x10);\n            if ((*(arg1_00 + 2) != 0) &&\n               (iVar8 = (*_sym.imp.USER32.dll_SendMessageA)(*arg1_00, 0xf0, 0, 0),  iVar8 == 1)) break;\n            uVar4 = fcn.180013fc0(arg1_00);\n            iVar8 = iVar2;\n            if ((uVar4 >> 0x11 & 1) != 0) {\n                return;\n            }\n        }\n    }\n    else {\n        puVar1 = *puVar7;\n        arg1_00 = puVar7[2];\n        uVar4 = fcn.180013fc0(arg1_00);\n        if ((uVar4 >> 0x11 & 1) != 0) goto code_r0x0001800143c7;\n        puVar7 = puVar1;\n        if ((*(arg1_00 + 2) == 0) || (iVar8 = (*_sym.imp.USER32.dll_SendMessageA)(*arg1_00, 0xf0),  iVar8 != 1))\n        goto code_r0x000180014374;\n    }\n    uVar6 = *arg1_00;\n    goto code_r0x0001800143b4;\n}\n",
        "token_count": 674
    },
    "18001458": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t * fcn.18001458c(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    ulong *puVar7;\n    \n    iVar1 = *arg1;\n    *arg2 = iVar1;\n    if (iVar1 != *arg1) {\n        fcn.180015288();\n        pcVar3 = swi(3);\n        piVar6 = (*pcVar3)();\n        return piVar6;\n    }\n    puVar2 = arg1[1];\n    iVar4 = 1;\n    arg2[1] = puVar2;\n    puVar7 = puVar2;\n    do {\n        if (puVar2 == NULL) break;\n        if (puVar7 != NULL) {\n            puVar7 = *puVar7;\n        }\n        iVar4 = iVar4 + -1;\n    } while (0 < iVar4);\n    while( true ) {\n        if (puVar7 == NULL) {\n            return arg2;\n        }\n        uVar5 = fcn.180013fc0(puVar7[2]);\n        if ((uVar5 >> 0x11 & 1) != 0) break;\n        puVar7 = *puVar7;\n        if (arg2[1] != 0) {\n            if (arg2[1] == NULL) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                piVar6 = (*pcVar3)();\n                return piVar6;\n            }\n            arg2[1] = *arg2[1];\n        }\n    }\n    return arg2;\n}\n",
        "token_count": 392
    },
    "180014d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180014d48(int64_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint64_t arg2_00;\n    \n    iVar2 = *arg1;\n    if (*(iVar2 + -0x10) != arg2 && arg2 <= *(iVar2 + -0x10)) {\n        arg2._0_4_ = *(iVar2 + -0x10);\n    }\n    if (*(iVar2 + -8) < 2) {\n        iVar1 = *(iVar2 + -0xc);\n        if (iVar1 < arg2) {\n            if (iVar1 < 0x401) {\n                uVar3 = iVar1 * 2;\n            }\n            else {\n                uVar3 = iVar1 + 0x400;\n            }\n            arg2_00 = uVar3;\n            if (uVar3 < arg2) {\n                arg2_00 = arg2;\n            }\n            fcn.180014cfc(arg1, arg2_00);\n        }\n    }\n    else {\n        fcn.180014c4c(arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "18001514": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180015140(int64_t *arg1)\n\n{\n    if (0 < *(arg1 + 1)) {\n        (**(*arg1 + 8))(arg1, 1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "18001556": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180015568(int64_t arg1, int64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    ulong arg1_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint32_t *puVar5;\n    ulong uVar6;\n    uchar auStackX16 [8];\n    \n    if (arg2 == 0) {\n        return 0;\n    }\n    *(arg1 + 0x20) = 0;\n    iVar1 = fcn.180023200(arg1, arg2, arg3 & 0xffffbfff, arg4);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = 1;\n    if ((arg3 >> 0xc & 1) == 0) {\n        if ((arg3 & 1) != 0) goto code_r0x0001800155bd;\n        auStackX16[0] = 0x72;\n        if ((arg3 & 2) == 0) goto code_r0x0001800155df;\n    }\n    else {\n        if ((arg3 >> 0xd & 1) == 0) {\n            auStackX16[0] = 0x77;\n        }\n        else {\ncode_r0x0001800155bd:\n            auStackX16[0] = 0x61;\n        }\n        if ((arg3 & 1) != 0) goto code_r0x0001800155df;\n    }\n    auStackX16[1] = 0x2b;\n    iVar1 = 2;\ncode_r0x0001800155df:\n    uVar6 = 0x4000;\n    if ((arg3 >> 0xf & 1) == 0) {\n        auStackX16[iVar1] = 0x74;\n    }\n    else {\n        auStackX16[iVar1] = 0x62;\n        uVar6 = 0;\n    }\n    arg1_00 = *(arg1 + 8);\n    auStackX16[iVar1 + 1] = 0;\n    uVar2 = fcn.180036a10(arg1_00, uVar6);\n    if (uVar2 != 0xffffffff) {\n        uVar6 = fcn.180036b40(uVar2, auStackX16);\n        *(arg1 + 0x20) = uVar6;\n    }\n    if (*(arg1 + 0x20) == 0) {\n        if (arg4 != 0) {\n            puVar4 = fcn.180036070();\n            *(arg4 + 0x14) = *puVar4;\n            puVar5 = fcn.180036070();\n            uVar3 = fcn.1800239e8(*puVar5);\n            *(arg4 + 0x10) = uVar3;\n        }\n        fcn.180022b9c(arg1);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 677
    },
    "180015b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180015b28(code **arg1)\n\n{\n    uchar auStack616 [56];\n    code **ppcStack560;\n    ulong uStack544;\n    uint64_t uStack24;\n    \n    uStack544 = 0xfffffffffffffffe;\n    uStack24 = *0x18006ed40 ^ auStack616;\n    *arg1 = vtable.CStdioFile.0;\n    ppcStack560 = arg1;\n    if ((arg1[4] != NULL) && (*(arg1 + 2) != 0)) {\n        fcn.180015a84(arg1);\n    }\n    fcn.180022dbc(arg1);\n    fcn.1800349d0(uStack24 ^ auStack616);\n    return;\n}\n",
        "token_count": 165
    },
    "1800209e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.1800209e4(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    ulong uStack32;\n    int32_t iStack24;\n    \n    uVar3 = 0xfffffffffffffffe;\n    if (*(arg1 + 1) == 0) {\n        iVar2 = 0;\n    }\n    else {\n        LOCK();\n        piVar1 = arg1 + 1;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        iVar2 = iVar2 + -1;\n        if (iVar2 == 0) {\n            fcn.18001e9c8(&uStack32, arg1[7]);\n            (**(*arg1 + 0x20))(arg1);\n            if (iStack24 != 0) {\n                fcn.18001dd14(0, uStack32, in_R8, in_R9, uVar3);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 247
    },
    "1800163a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.1800163ac(int32_t *arg1)\n\n{\n    return *arg1 != 2;\n}\n",
        "token_count": 27
    },
    "18001652": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.180016524(int64_t arg1, ulong arg2, uint64_t arg3, int32_t *arg4)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong *arg2_00;\n    int64_t **ppiVar4;\n    bool bVar5;\n    ulong in_stack_00000028;\n    uint32_t in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    uint in_stack_00000048;\n    int64_t **in_stack_00000068;\n    uint64_t uVar6;\n    int64_t *piStack72;\n    ulong uStack64;\n    \n    uStack64 = 0xfffffffffffffffe;\n    piStack72 = NULL;\n    uVar6 = arg3;\n    iVar2 = (**(**(arg1 + 0x40) + 0x260))(*(arg1 + 0x40), arg1, &piStack72, in_stack_00000048, arg3);\n    if ((iVar2 != 0) && (piStack72 == NULL)) {\n        iVar3 = fcn.18001e94c();\n        if (*(iVar3 + 0x68) == 0) {\n            fcn.180015288();\n        }\n        iVar3 = fcn.18001e94c();\n        piStack72 = (**(**(iVar3 + 0x68) + 0x18))(*(iVar3 + 0x68), arg1, arg4);\n    }\n    if (piStack72 == NULL) {\n        bVar5 = false;\n    }\n    else {\n        if (*arg4 == 2) {\n            iVar2 = (**(*piStack72 + 0xa0))\n                              (piStack72, arg2, arg3, in_stack_00000028, uVar6 & 0xffffffff00000000 | in_stack_00000030\n                               , in_stack_00000038, in_stack_00000040);\n        }\n        else {\n            iVar2 = fcn.180024604(piStack72, arg2, arg4, in_stack_00000030);\n        }\n        bVar5 = -1 < iVar2;\n        if (bVar5) {\n            arg2_00 = fcn.18000b904(0x18);\n            if (arg2_00 == NULL) {\n                arg2_00 = NULL;\n            }\n            else {\n                *arg2_00 = 0;\n                arg2_00[1] = piStack72;\n                *(arg2_00 + 2) = 0;\n            }\n            fcn.180020e18(arg1 + 0x80, arg2_00);\n            piVar1 = piStack72;\n            if (piStack72[9] != 0) {\n                ppiVar4 = fcn.18001f390(arg1 + 0x48, piStack72[9]);\n                *ppiVar4 = piVar1;\n            }\n            if (in_stack_00000068 != NULL) {\n                *in_stack_00000068 = piStack72;\n            }\n        }\n        else if (piStack72 != NULL) {\n            (**(*piStack72 + 8))(piStack72, 1);\n        }\n    }\n    return bVar5;\n}\n",
        "token_count": 730
    },
    "18001767": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180017674(int64_t arg1, code **arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar auStack232 [32];\n    code *pcStack200;\n    int64_t iStack192;\n    int64_t iStack184;\n    uint auStack176 [2];\n    int64_t iStack168;\n    int32_t iStack160;\n    uint uStack156;\n    ushort uStack152;\n    uint16_t uStack150;\n    uint32_t uStack148;\n    uint32_t uStack144;\n    uint32_t uStack140;\n    ulong uStack136;\n    uchar auStack128 [16];\n    ulong uStack112;\n    int32_t aiStack88 [4];\n    ushort uStack72;\n    uint8_t uStack68;\n    uint8_t uStack67;\n    uint8_t uStack66;\n    uint8_t uStack65;\n    uchar auStack60 [36];\n    uint64_t uStack24;\n    \n    uStack136 = 0xfffffffffffffffe;\n    uStack24 = *0x18006ed40 ^ auStack232;\n    iStack192 = 0;\n    pcStack200 = vtable.CFont.0;\n    if ((arg2 == NULL) || (arg2[1] == NULL)) {\n        iStack192 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n        if (iStack192 == 0) {\n            iStack192 = (*_sym.imp.GDI32.dll_GetStockObject)(0xd);\n            if (iStack192 == 0) {\n                *(arg1 + 0xc0) = 0;\n                pcStack200 = vtable.CFont.0;\n                fcn.180003120(&pcStack200);\n                goto code_r0x000180017838;\n            }\n        }\n        arg2 = &pcStack200;\n    }\n    (*_sym.imp.GDI32.dll_GetObjectA)(arg2[1], 0x3c, aiStack88);\n    auStack176[0] = 0x28;\n    fcn.1800150ac(&iStack184, auStack60);\n    iStack168 = iStack184;\n    uStack152 = uStack72;\n    uStack150 = uStack65;\n    uStack148 = uStack68;\n    uStack144 = uStack67;\n    uStack140 = uStack66;\n    if (aiStack88[0] < 0) {\n        aiStack88[0] = -aiStack88[0];\n    }\n    fcn.1800197c8(auStack128, *(arg1 + 0x40));\n    iStack160 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uStack112);\n    iStack160 = (aiStack88[0] * 720000) / iStack160;\n    uStack156 = 0;\n    fcn.1800207b8(arg1 + 0xc0);\n    iVar2 = (*_sym.imp.OLEAUT32.dll_OleTranslateColor)(auStack176, 0x180059610, arg1 + 0xc0);\n    if (iVar2 < 0) {\n        *(arg1 + 0xc0) = 0;\n    }\n    fcn.18001982c(auStack128);\n    LOCK();\n    piVar1 = iStack184 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStack184 + -0x18) + 8))();\n    }\n    pcStack200 = vtable.CFont.0;\n    fcn.180003120(&pcStack200);\ncode_r0x000180017838:\n    fcn.1800349d0(uStack24 ^ auStack232);\n    return;\n}\n",
        "token_count": 849
    },
    "180017bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong * fcn.180017bb8(ulong *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    arg1[1] = 0;\n    *arg1 = arg2;\n    if (*0x180073b18 == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32\");\n        if (iVar2 == 0) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            puVar3 = (*pcVar1)();\n            return puVar3;\n        }\n        *0x180073af8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CreateActCtxA\");\n        *0x180073b00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"ReleaseActCtx\");\n        *0x180073b08 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"ActivateActCtx\");\n        *0x180073b10 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"DeactivateActCtx\");\n        if (*0x180073af8 == 0) {\n            if (((*0x180073b00 != 0) || (*0x180073b08 != 0)) || (*0x180073b10 != 0)) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                puVar3 = (*pcVar1)();\n                return puVar3;\n            }\n        }\n        else if (((*0x180073b00 == 0) || (*0x180073b08 == 0)) || (*0x180073b10 == 0)) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            puVar3 = (*pcVar1)();\n            return puVar3;\n        }\n        *0x180073b18 = '\\x01';\n    }\n    return arg1;\n}\n",
        "token_count": 443
    },
    "180017e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180017e18(int64_t arg1)\n\n{\n    if (*(arg1 + 0x110) != 0) {\n        (**(**(arg1 + 0x110) + 0x28))();\n    }\n    if (*(arg1 + 0x124) != 0) {\n        fcn.18002e694(arg1, \"Settings\", \"PreviewPages\", *(arg1 + 0x124));\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "1800183c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800183c8(int64_t *arg1)\n\n{\n    if ((*0x180073b00 != NULL) && (*arg1 != -1)) {\n        if ((*0x180073b10 != NULL) && (arg1[1] != 0)) {\n            arg1[1] = 0;\n            (**0x180073b10)(0);\n        }\n        (**0x180073b00)(*arg1);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "1800196f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800196fc(code **arg1)\n\n{\n    ulong uVar1;\n    \n    *arg1 = vtable.CDC.0;\n    if (arg1[1] != NULL) {\n        uVar1 = fcn.1800196ac(arg1);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "180019a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180019a58(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 8) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.180019a14(arg1);\n        uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "18001a1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001a1ac(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong uVar4;\n    uchar auStack24 [24];\n    \n    iVar2 = fcn.18001e94c();\n    if (*(iVar2 + 8) == 0) {\n        uVar4 = 0;\n    }\n    else {\n        piVar3 = fcn.18001c528();\n        if (piVar3 == NULL) {\n            piVar3 = NULL;\n        }\n        else {\n            piVar3 = (**(*piVar3 + 0xe8))(piVar3);\n        }\n        if ((piVar3 != NULL) && (iVar1 = (**(*piVar3 + 0x18))(piVar3, 0xe146, 0, 0, auStack24),  iVar1 != 0)) {\n            return 1;\n        }\n        iVar2 = fcn.18001e94c();\n        uVar4 = (**(**(iVar2 + 8) + 0x18))(*(iVar2 + 8), 0xe146, 0, 0, auStack24);\n    }\n    return uVar4;\n}\n",
        "token_count": 271
    },
    "18001a66": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t fcn.18001a66c(int64_t *arg1)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    int64_t *hWnd;\n    ulong arg3;\n    uint32_t uVar11;\n    ulong uStack104;\n    \n    iVar8 = arg1[0x18];\n    iVar7 = arg1[0x17];\n    iVar6 = fcn.18001e94c();\n    uStack104 = *(iVar6 + 0x18);\n    if (arg1[0x16] != 0) {\n        iVar7 = fcn.18001e94c();\n        uStack104 = *(iVar7 + 0x18);\n        (*_sym.imp.KERNEL32.dll_FindResourceA)(uStack104, arg1[0x16], 5);\n        iVar7 = (*_sym.imp.KERNEL32.dll_LoadResource)(uStack104);\n    }\n    if (iVar7 != 0) {\n        iVar8 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar7);\n    }\n    if (iVar8 == 0) {\n        iVar8 = -1;\n    }\n    else {\n        iVar6 = fcn.18001a000(arg1);\n        fcn.18000fb30();\n        hWnd = NULL;\n        bVar3 = false;\n        bVar1 = false;\n        bVar2 = false;\n        if (((iVar6 != 0) &&\n            (iVar9 = (*_sym.imp.USER32.dll_GetDesktopWindow)(),  bVar1 = bVar3,  bVar2 = false,  iVar6 != iVar9)) &&\n           (iVar4 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar6),  iVar4 != 0)) {\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar6);\n            bVar2 = true;\n            piVar10 = fcn.18001c528();\n            if (piVar10 != NULL) {\n                hWnd = (**(*piVar10 + 0xe8))(piVar10);\n            }\n            if (((hWnd != NULL) && (iVar4 = (**(*hWnd + 0x250))(hWnd),  iVar4 != 0)) &&\n               (iVar4 = fcn.180013e88(hWnd),  iVar4 != 0)) {\n                fcn.180013eb8(hWnd, 0);\n                bVar1 = bVar2;\n            }\n        }\n        fcn.180011e50(arg1);\n        arg3 = fcn.18000fa14(iVar6);\n        iVar4 = fcn.18001a400(arg1, iVar8, arg3, uStack104);\n        if (iVar4 != 0) {\n            if ((*(arg1 + 0xf) & 0x10) != 0) {\n                uVar5 = fcn.180013cd8(arg1);\n                uVar11 = 4;\n                if ((uVar5 >> 8 & 1) != 0) {\n                    uVar11 = 5;\n                }\n                fcn.18000f460(arg1, uVar11);\n            }\n            if (arg1[8] != 0) {\n                fcn.180014054(arg1, 0, 0, 0);\n            }\n        }\n        if (bVar1) {\n            fcn.180013eb8(hWnd, 1);\n        }\n        if (bVar2) {\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar6, 1);\n        }\n        if ((iVar6 != 0) && (iVar8 = (*_sym.imp.USER32.dll_GetActiveWindow)(),  iVar8 == arg1[8])) {\n            (*_sym.imp.USER32.dll_SetActiveWindow)(iVar6);\n        }\n        (**(*arg1 + 0xc0))(arg1);\n        fcn.18001a05c(arg1);\n        if (arg1[0x16] != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)(iVar7);\n        }\n        iVar8 = *(arg1 + 0x11);\n    }\n    return iVar8;\n}\n",
        "token_count": 951
    },
    "18001b10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001b10c(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    \n    if (*(arg1 + 0x20) == 0) {\n        iVar3 = fcn.18002f2d8(arg1 + 0x28, *(arg1 + 0x30), 0x18);\n        iVar1 = *(arg1 + 0x30);\n        puVar4 = iVar3 + -0x10 + iVar1 * 0x18;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(arg1 + 0x20);\n            *(arg1 + 0x20) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(arg1 + 0x20);\n    if (puVar4 != NULL) {\n        *(arg1 + 0x20) = *puVar4;\n        puVar4[1] = arg2;\n        *puVar4 = arg3;\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n        return;\n    }\n    fcn.180015288();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 322
    },
    "18001c10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001c10c(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    \n    piVar2 = fcn.18001c528();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        piVar2 = (**(*piVar2 + 0xe8))(piVar2);\n    }\n    if (piVar2 != NULL) {\n        iVar1 = (**(*piVar2 + 0x250))(piVar2);\n        if ((iVar1 != 0) && (piVar2[0x1c] != 0)) {\n            (**(*piVar2[0x1c] + 200))(piVar2[0x1c], arg1);\n        }\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "18001c28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001c280(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uchar *arg3_00;\n    uchar auStack392 [32];\n    int32_t aiStack360 [2];\n    int64_t iStack352;\n    uchar auStack344 [259];\n    uchar uStack85;\n    uint64_t uStack72;\n    \n    uStack72 = *0x18006ed40 ^ auStack392;\n    fcn.18001c10c(0);\n    arg1_00 = fcn.18001c174(0, &iStack352);\n    if (arg1_00 != iStack352) {\n        (*_sym.imp.USER32.dll_EnableWindow)(arg1_00, 1);\n    }\n    iVar3 = 0;\n    aiStack360[0] = 0;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg1_00, aiStack360);\n    if ((((arg1_00 == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  aiStack360[0] != iVar1)) ||\n        (piVar2 = (*_sym.imp.USER32.dll_SendMessageA)(arg1_00, 0x376, 0),  piVar2 == NULL)) &&\n       (piVar2 = NULL,  arg1 != 0)) {\n        piVar2 = arg1 + 0xf0;\n    }\n    if ((piVar2 != NULL) && (iVar3 = *piVar2,  arg4 != 0)) {\n        *piVar2 = arg4 + 0x30000;\n    }\n    if ((arg3 & 0xf0) == 0) {\n        if ((arg3 & 0xf) < 2) {\n            arg3._0_4_ = arg3 | 0x30;\n        }\n        else if ((arg3 & 0xf) - 3 < 2) {\n            arg3._0_4_ = arg3 | 0x20;\n        }\n    }\n    auStack344[0] = 0;\n    if (arg1 == 0) {\n        arg3_00 = auStack344;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack344, 0x104);\n        if (iVar1 == 0x104) {\n            uStack85 = 0;\n        }\n    }\n    else {\n        arg3_00 = *(arg1 + 0xa0);\n    }\n    fcn.18000dd80(arg1_00, arg2, arg3_00, arg3);\n    if (piVar2 != NULL) {\n        *piVar2 = iVar3;\n    }\n    if (iStack352 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStack352, 1);\n    }\n    fcn.18001c10c(1);\n    fcn.1800349d0(uStack72 ^ auStack392);\n    return;\n}\n",
        "token_count": 699
    },
    "18001c55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001c550(ulong noname_0, ulong *arg2)\n\n{\n    ulong uVar1;\n    \n    if (*(arg2 + 1) == 1) {\n        uVar1 = 0xffffffffffffffff;\n    }\n    else {\n        if (*(arg2 + 1) == 0xf) {\n            (*_sym.imp.USER32.dll_ValidateRect)(*arg2, 0);\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "18001c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001c800(int64_t *arg1, int64_t arg2)\n\n{\n    code **ppcVar1;\n    int64_t iVar2;\n    code *arg1_00;\n    \n    ppcVar1 = (**(*arg1 + 0x50))();\n    do {\n        if (*ppcVar1 == NULL) {\n            return 0;\n        }\n        arg1_00 = ppcVar1[1];\n        if (*(arg2 + 8) < 0xc000) {\n            iVar2 = fcn.18000d310(arg1_00, *(arg2 + 8), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x00018001c846:\n                (**(iVar2 + 0x18))(arg1, *(arg2 + 0x10), *(arg2 + 0x18));\n                return 1;\n            }\n        }\n        else {\n            while (iVar2 = fcn.18000d310(arg1_00, 0xc000, 0, 0),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(arg2 + 8)) goto code_r0x00018001c846;\n                arg1_00 = iVar2 + 0x20;\n            }\n        }\n        ppcVar1 = (**ppcVar1)();\n    } while( true );\n}\n",
        "token_count": 312
    },
    "18001c8b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001c8b0(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong uVar4;\n    int64_t *piVar5;\n    \n    iVar2 = fcn.18001e99c();\n    if (((*(iVar2 + 8) == 0) || (*arg1 != 0)) || (iVar1 = fcn.18001c800(*(iVar2 + 8), arg1),  iVar1 == 0)) {\n        iVar2 = fcn.18001e99c();\n        if (*(iVar2 + 8) == NULL) {\n            piVar3 = NULL;\n        }\n        else {\n            piVar3 = (**(**(iVar2 + 8) + 0xe8))();\n        }\n        if (piVar3 == NULL) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = piVar3[8];\n        }\n        iVar1 = fcn.18000feec(iVar2, arg1);\n        if (iVar1 == 0) {\n            if (piVar3 != NULL) {\n                uVar4 = fcn.18000fa14(*arg1);\n                piVar5 = fcn.1800114f4(uVar4);\n                if (piVar5 != piVar3) {\n                    uVar4 = (**(*piVar3 + 0x210))(piVar3, arg1);\n                    return uVar4;\n                }\n            }\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 349
    },
    "180038ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180038ab0(ulong arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    \n    if (*0x180057768 != NULL) {\n        iVar2 = fcn.18003d040(0x180057768);\n        if (iVar2 != 0) {\n            (**0x180057768)();\n        }\n    }\n    arg1_00 = fcn.180039adc();\n    if (arg1_00 != 0) {\n        fcn.180039cbc(arg1_00);\n    }\n    (*_sym.imp.KERNEL32.dll_ExitThread)(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 166
    },
    "18001ce7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001ce78(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.18001e94c();\n    if (*(iVar1 + 0x28) == '\\0') {\n        iVar1 = fcn.18001dfbc();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x18001cc40, 0, uVar3);\n        *(iVar1 + 0x50) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "18001d1b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001d1bc(int64_t arg1, ulong arg2, uint64_t arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong uStack72;\n    int64_t iStack64;\n    uint32_t uStack56;\n    int64_t iStack40;\n    int64_t iStack32;\n    int32_t iStack24;\n    \n    if (*(arg1 + 0x58) != 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    fcn.180035830(&uStack72, 0, 0x38);\n    uStack72 = fcn.18001dfbc();\n    iStack64 = arg1;\n    iStack40 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0);\n    iStack32 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0);\n    uStack56 = arg2;\n    if (iStack40 != 0) {\n        if (iStack32 != 0) {\n            iVar3 = fcn.180038bc0(arg4, arg3 & 0xffffffff, 0x18001d050, &uStack72);\n            *(arg1 + 0x58) = iVar3;\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iStack40);\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_ResumeThread)(iVar3);\n                (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(iStack40, 0xffffffff);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iStack40);\n                if ((arg2 & 4) != 0) {\n                    (*_sym.imp.KERNEL32.dll_SuspendThread)(*(arg1 + 0x58));\n                }\n                if (iStack24 == 0) {\n                    (*_sym.imp.KERNEL32.dll_SetEvent)(iStack32);\n                    return 1;\n                }\n                (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(arg1 + 0x58), 0xffffffff);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(arg1 + 0x58));\n                *(arg1 + 0x58) = 0;\n            }\n            goto code_r0x00018001d310;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    if (iStack32 == 0) {\n        return 0;\n    }\ncode_r0x00018001d310:\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iStack32);\n    return 0;\n}\n",
        "token_count": 620
    },
    "18001d3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001d3f0(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 0xb0) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(**(arg1 + 0xb0) + 0x20))();\n    }\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "18001d66": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001d664(int64_t arg1, int64_t *arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ulong arg2_00;\n    uchar auStack392 [32];\n    int64_t aiStack360 [2];\n    ulong uStack344;\n    int64_t iStack336;\n    int64_t iStack328;\n    int64_t iStack320;\n    ulong uStack312;\n    uchar auStack296 [272];\n    uint64_t uStack24;\n    \n    uStack312 = 0xfffffffffffffffe;\n    uStack24 = *0x18006ed40 ^ auStack392;\n    iStack336 = arg1;\n    aiStack360[0] = fcn.180001450(*arg2 + -0x18);\n    aiStack360[0] = aiStack360[0] + 0x18;\n    if ((arg1 == -0x80000000) && (iVar3 = fcn.18001dda8(),  iVar3 == 1)) {\n        arg2_00 = fcn.18001d590(&iStack320, \"Software\\\\Classes\\\\\", aiStack360);\n        fcn.180001820(aiStack360, arg2_00);\n        LOCK();\n        piVar1 = iStack320 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack320 + -0x18) + 8))();\n        }\n        arg1 = -0x7fffffff;\n        iStack336 = -0x7fffffff;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(arg1, aiStack360[0], &uStack344);\n    if (iVar3 == 0) {\n        do {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(uStack344, 0, auStack296, 0x104);\n            if (iVar3 != 0) break;\n            fcn.1800018b0(&iStack328, auStack296);\n            iVar3 = fcn.18001d664(uStack344, &iStack328);\n            LOCK();\n            piVar1 = iStack328 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iStack328 + -0x18) + 8))();\n            }\n        } while (iVar3 == 0);\n        if ((iVar3 == 0x103) || (iVar3 == 0x3f2)) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(arg1, aiStack360[0]);\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack344);\n    }\n    LOCK();\n    piVar1 = aiStack360[0] + -8;\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 + -1 < 1) {\n        (**(**(aiStack360[0] + -0x18) + 8))();\n    }\n    fcn.1800349d0(uStack24 ^ auStack392);\n    return;\n}\n",
        "token_count": 752
    },
    "18001de2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001de28(code **arg1)\n\n{\n    ulong *puVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    \n    *arg1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (arg1[0xf] != NULL) {\n        (**(*arg1[0xf] + 0x288))();\n    }\n    fcn.18000b948(arg1[0x12]);\n    puVar1 = arg1[5];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[6];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[7];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[8];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[9];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    if (arg1[0xe] != NULL) {\n        iVar3 = *(arg1[0xe] + 0x18);\n        while (iVar3 != 0) {\n            arg1_00 = fcn.180020c58(arg1[0xe]);\n            fcn.18000b948(arg1_00);\n            iVar3 = *(arg1[0xe] + 0x18);\n        }\n    }\n    piVar2 = arg1[0xc];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2, 1);\n    }\n    piVar2 = arg1[0xd];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2, 1);\n    }\n    piVar2 = arg1[0xe];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2, 1);\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "18001ebb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001ebb4(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 8) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.18001eb70(arg1);\n        uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "18001ed2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001ed20(int64_t *pvarg, uint *arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar2 = *0x180073fe8;\n    uVar3 = *0x180073fec;\n    if (pvarg != NULL) {\n        iVar1 = (*_sym.imp.GDI32.dll_GetMapMode)(pvarg[2]);\n        if ((iVar1 < 7) && (iVar1 != 1)) {\n            (**(*pvarg + 0x68))(pvarg, 3);\n            fcn.18001942c(pvarg, arg2);\n            (**(*pvarg + 0x68))(pvarg, iVar1);\n            return;\n        }\n        uVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(pvarg[2], 0x58);\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(pvarg[2], 0x5a);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg2, 0x9ec, uVar2);\n    *arg2 = uVar2;\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg2[1], 0x9ec, uVar3);\n    arg2[1] = uVar2;\n    return;\n}\n",
        "token_count": 312
    },
    "18001ede": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001ede0(int64_t *pvarg, uint *arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar2 = *0x180073fe8;\n    uVar3 = *0x180073fec;\n    if (pvarg != NULL) {\n        iVar1 = (*_sym.imp.GDI32.dll_GetMapMode)(pvarg[2]);\n        if ((iVar1 < 7) && (iVar1 != 1)) {\n            (**(*pvarg + 0x68))(pvarg, 3);\n            fcn.1800193a8(pvarg, arg2);\n            (**(*pvarg + 0x68))(pvarg, iVar1);\n            return;\n        }\n        uVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(pvarg[2], 0x58);\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(pvarg[2], 0x5a);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg2, uVar2, 0x9ec);\n    *arg2 = uVar2;\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg2[1], uVar3, 0x9ec);\n    arg2[1] = uVar2;\n    return;\n}\n",
        "token_count": 313
    },
    "18001ef3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18001ef3c(int64_t arg1)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    \n    if (arg1 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (*(arg1 + 0x10) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(arg1 + 0x10))();\n    }\n    return uVar2;\n}\n",
        "token_count": 131
    },
    "18001f32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001f324(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    \n    if (*(arg1 + 0x20) == 0) {\n        iVar3 = fcn.18002f2d8(arg1 + 0x28, *(arg1 + 0x30), 0x18);\n        iVar1 = *(arg1 + 0x30);\n        puVar4 = iVar3 + -0x10 + iVar1 * 0x18;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(arg1 + 0x20);\n            *(arg1 + 0x20) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(arg1 + 0x20);\n    uVar2 = *puVar4;\n    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    *(arg1 + 0x20) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 284
    },
    "18001f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.18001f60c(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t iStackX8;\n    int64_t iStackX16;\n    uchar auStackX24 [8];\n    \n    if (arg1 != 0) {\n        iStackX16 = -(*(arg1 + 0x80) != 0);\n        while (iStackX16 != 0) {\n            fcn.18001f224(arg1 + 0x68, &iStackX16, auStackX24, &iStackX8);\n            iVar1 = *(arg1 + 0xa8);\n            *(iStackX8 + iVar1) = 0;\n            if (*(arg1 + 0xb0) == 2) {\n                *(iStackX8 + 8 + iVar1) = 0;\n            }\n            (**(arg1 + 0x28))(iStackX8);\n        }\n        fcn.18001f0d4(arg1 + 0x68);\n        fcn.180030c80(arg1 + 8);\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "18001f9e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.18001f9e0(ulong hWnd, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    uchar auStack104 [32];\n    ulong uStack72;\n    uint uStack64;\n    uchar auStack56 [32];\n    uint64_t uStack24;\n    \n    uStack24 = *0x18006ed40 ^ auStack104;\n    (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, auStack56, 0x20);\n    uStack64 = 0xffffffff;\n    uStack72 = arg2;\n    (*_sym.imp.KERNEL32.dll_CompareStringA)(0x409, 1, auStack56);\n    fcn.1800349d0(uStack24 ^ auStack104);\n    return;\n}\n",
        "token_count": 171
    },
    "18001fcb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18001fcbc(ulong arg1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    \n    iVar3 = arg1;\n    if (0x10 < arg1) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (*0x180073cac == 0) {\n        fcn.18001fc8c();\n    }\n    if (*(iVar3 * 4 + 0x180073f80) == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x180073f58);\n        if (*(iVar3 * 4 + 0x180073f80) == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(iVar3 * 0x28 + 0x180073cb0);\n            piVar1 = iVar3 * 4 + 0x180073f80;\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x180073f58);\n    }\n    // WARNING: Could not recover jumptable at 0x00018001fd46. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar3 * 0x28 + 0x180073cb0);\n    return;\n}\n",
        "token_count": 327
    },
    "18002055": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180020554(uint *arg1, ulong *arg2, int64_t arg3)\n\n{\n    ulong *puVar1;\n    bool bVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    bVar2 = true;\n    iVar4 = 1;\n    if (1 < *(arg2 + 2)) {\n        iVar3 = 8;\n        iVar5 = 0x10;\n        do {\n            if ((arg3 == 0) || (*(*(arg1 + 4) + 8 + iVar5) == arg3)) {\n                puVar1 = *(iVar3 + arg2[3]);\n                if (puVar1 != NULL) {\n                    (***puVar1)(puVar1, 1);\n                }\n                *(iVar3 + arg2[3]) = 0;\n            }\n            else if (*(iVar3 + arg2[3]) != 0) {\n                bVar2 = false;\n            }\n            iVar4 = iVar4 + 1;\n            iVar5 = iVar5 + 0x10;\n            iVar3 = iVar3 + 8;\n        } while (iVar4 < *(arg2 + 2));\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 + 10);\n    fcn.1800200a8(arg1 + 6, arg2);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg1 + 10);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg2[3]);\n    (***arg2)(arg2, 1);\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*arg1, 0);\n    return;\n}\n",
        "token_count": 386
    },
    "18002085": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.180020858(int64_t *arg1, int32_t *arg2)\n\n{\n    int32_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t *piVar3;\n    int32_t **ppiVar4;\n    \n    piVar1 = (**(*arg1 + 0x88))();\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*arg1 + 0x70))();\n        if ((((*0x180059550 == *arg2) && (arg2[1] == *0x180059554)) && (arg2[2] == *0x180059558)) &&\n           (arg2[3] == *0x18005955c)) {\n            do {\n                for (piVar3 = ppiVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n                    if (*(piVar3[1] + arg1) != 0) {\n                        return piVar3[1] + arg1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar4 = ppiVar2[1]; piVar1 = *ppiVar4,  piVar1 != NULL; ppiVar4 = ppiVar4 + 2) {\n                    if (((*piVar1 == *arg2) && (piVar1[1] == arg2[1])) &&\n                       ((piVar1[2] == arg2[2] && ((piVar1[3] == arg2[3] && (*(ppiVar4[1] + arg1) != 0)))))) {\n                        return ppiVar4[1] + arg1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 441
    },
    "18002092": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t fcn.18002092c(int64_t *arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t iStackX8;\n    \n    piVar3 = (**(*arg1 + 0x70))();\n    do {\n        for (piVar4 = piVar3[1]; *piVar4 != 0; piVar4 = piVar4 + 2) {\n        }\n        for (piVar4 = piVar4 + 1; *piVar4 != -1; piVar4 = piVar4 + 2) {\n            puVar1 = *(arg1 + *piVar4);\n            if (puVar1 != NULL) {\n                iStackX8 = 0;\n                iVar2 = (***puVar1)(puVar1, arg2, &iStackX8);\n                if ((iVar2 == 0) && (iStackX8 != 0)) {\n                    return iStackX8;\n                }\n            }\n        }\n        piVar3 = *piVar3;\n        if (piVar3 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 276
    },
    "1800209b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.1800209bc(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    \n    if (*(arg1 + 0x10) == 0) {\n        LOCK();\n        piVar1 = arg1 + 8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        uVar3 = iVar2 + 1;\n    }\n    else {\n        uVar3 = (**(**(arg1 + 0x10) + 8))();\n    }\n    return uVar3;\n}\n",
        "token_count": 142
    },
    "180020a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180020a4c(int64_t psa)\n\n{\n    if (*(psa + 0x10) == 0) {\n        fcn.1800209e4(psa);\n    }\n    else {\n        (**(**(psa + 0x10) + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "180020ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180020ac8(int64_t arg1)\n\n{\n    ulong in_RDX;\n    ulong in_R8;\n    \n    if (*(arg1 + 0x10) == 0) {\n        fcn.180020a70(arg1, in_RDX, in_R8);\n    }\n    else {\n        (****(arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "180020b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180020b28(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.18001e94c();\n    if (*(iVar2 + 0x54) == 0) {\n        iVar2 = fcn.18001e94c();\n        *(iVar2 + 0x54) = 1;\n        iVar2 = fcn.18001e94c();\n        iVar2 = *(iVar2 + 8);\n        if ((iVar2 == 0) || (*(iVar2 + 0x40) == 0)) {\n            iVar2 = fcn.18001e94c();\n            if (*(iVar2 + 0x28) == '\\0') {\n                fcn.180017ee0(0);\n            }\n        }\n        else {\n            iVar1 = fcn.180013e88(*(iVar2 + 0x40));\n            if (iVar1 != 0) {\n                (**(**(iVar2 + 0x40) + 0xc0))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "180020ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180020ba8(void)\n\n{\n    uint uVar1;\n    uchar auStack72 [32];\n    uchar auStack40 [24];\n    uint64_t uStack16;\n    \n    uStack16 = *0x18006ed40 ^ auStack72;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)();\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar1, auStack40);\n    fcn.1800349d0(uStack16 ^ auStack72);\n    return;\n}\n",
        "token_count": 120
    },
    "180020d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180020d50(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    if (*(arg1 + 0x20) == 0) {\n        iVar2 = fcn.18002f2d8(arg1 + 0x28, *(arg1 + 0x30), 0x18);\n        iVar1 = *(arg1 + 0x30);\n        puVar3 = iVar2 + -0x10 + iVar1 * 0x18;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(arg1 + 0x20);\n            *(arg1 + 0x20) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(arg1 + 0x20);\n    *(arg1 + 0x20) = *puVar3;\n    puVar3[1] = arg2;\n    *puVar3 = arg3;\n    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 286
    },
    "18002114": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180021148(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t *apiStackX8 [4];\n    \n    *(arg1 + 0x30) = 0;\n    if (*(arg1 + 0x24) == 0) {\n        fcn.18000b948(*(arg1 + 0x48));\n        *(arg1 + 0x48) = 0;\n        *(arg1 + 0x38) = 0;\n    }\n    if (*(arg1 + 0x60) != 0) {\n        iVar2 = fcn.18001f190(*(arg1 + 0x60), 1, apiStackX8);\n        if ((iVar2 != 0) && (apiStackX8[0] != NULL)) {\n            (**(*apiStackX8[0] + 8))(apiStackX8[0], 1);\n        }\n    }\n    piVar1 = *(arg1 + 0x60);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    piVar1 = *(arg1 + 0x58);\n    *(arg1 + 0x60) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    *(arg1 + 0x58) = 0;\n    return;\n}\n",
        "token_count": 333
    },
    "180021c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong * fcn.180021c10(ulong *arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    ulong in_stack_00000028;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    uStack32 = 0xfffffffffffffffe;\n    piVar4 = fcn.18001549c();\n    if (piVar4 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar2 = swi(3);\n        puVar5 = (*pcVar2)();\n        return puVar5;\n    }\n    iVar6 = (**(*piVar4 + 0x18))(piVar4);\n    arg1[3] = iVar6 + 0x18;\n    if (arg2 == NULL) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        puVar5 = (*pcVar2)();\n        return puVar5;\n    }\n    uVar7 = (**(*arg2 + 0x30))(arg2, &iStack40);\n    fcn.180001820(arg1 + 3, uVar7);\n    LOCK();\n    piVar1 = iStack40 + -8;\n    iVar9 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar9 + -1 < 1) {\n        (**(**(iStack40 + -0x18) + 8))();\n    }\n    *(arg1 + 4) = arg3;\n    arg1[6] = arg2;\n    arg1[0xc] = 0;\n    arg1[0xb] = 0;\n    *arg1 = 0;\n    *(arg1 + 1) = 1;\n    *(arg1 + 0x14) = 0xffffffff;\n    *(arg1 + 0xd) = (-((~arg3 & 1) != 0) & 0xffffffd0) + 0x40;\n    *(arg1 + 0x6c) = 0x89;\n    arg1[9] = in_stack_00000028;\n    *(arg1 + 0x24) = 1;\n    *(arg1 + 0xc) = 0;\n    uVar3 = (**(*arg2 + 0xa0))(arg2, 3, 0, 0, 0);\n    *(arg1 + 2) = uVar3 & 2;\n    if (arg4 < 0x80) {\n        *(arg1 + 5) = 0x80;\n        arg1[9] = 0;\n    }\n    else {\n        *(arg1 + 5) = arg4;\n    }\n    iVar9 = *(arg1 + 5);\n    if (arg1[9] == 0) {\n        uVar3 = (**(*arg1[6] + 0xa0))(arg1[6], 3, 0, 0, 0);\n        *(arg1 + 0xc) = uVar3 & 1;\n        if ((uVar3 & 1) == 0) {\n            uVar7 = fcn.18000b904(*(arg1 + 5));\n            arg1[9] = uVar7;\n            *(arg1 + 0x24) = 0;\n        }\n        else {\n            iVar9 = 0;\n        }\n    }\n    iVar8 = iVar9 + arg1[9];\n    arg1[8] = iVar8;\n    iVar6 = arg1[9];\n    if ((*(arg1 + 4) & 1) != 0) {\n        iVar6 = iVar8;\n    }\n    arg1[7] = iVar6;\n    return arg1;\n}\n",
        "token_count": 889
    },
    "180022db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180022dbc(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uchar auStack616 [56];\n    code **ppcStack560;\n    ulong uStack544;\n    uint64_t uStack24;\n    \n    uStack544 = 0xfffffffffffffffe;\n    uStack24 = *0x18006ed40 ^ auStack616;\n    *arg1 = vtable.CFile.0;\n    ppcStack560 = arg1;\n    if ((arg1[1] != 0xffffffffffffffff) && (*(arg1 + 2) != 0)) {\n        fcn.180022b40(arg1);\n    }\n    pcVar3 = arg1[3];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    fcn.1800349d0(uStack24 ^ auStack616);\n    return;\n}\n",
        "token_count": 259
    },
    "18002320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180023200(int64_t arg1, char *arg2, ulong arg3, int64_t arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uchar auStack440 [32];\n    int32_t iStack408;\n    uint32_t uStack400;\n    ulong uStack392;\n    uint auStack376 [2];\n    ulong uStack368;\n    uint32_t uStack360;\n    uchar auStack344 [272];\n    uint64_t uStack72;\n    \n    uStack72 = *0x18006ed40 ^ auStack440;\n    *(arg1 + 8) = 0xffffffffffffffff;\n    uVar6 = 0;\n    uVar2 = 0;\n    *(arg1 + 0x10) = 0;\n    fcn.180001370(arg1 + 0x18);\n    if (arg2 != NULL) {\n        iVar4 = 0x104;\n        pcVar3 = arg2;\n        do {\n            if (*pcVar3 == '\\0') break;\n            pcVar3 = pcVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        if (iVar4 != 0) {\n            iVar1 = fcn.180022ed4(auStack344, arg2, arg4);\n            if (iVar1 != 0) {\n                uVar2 = fcn.180035930(auStack344);\n                fcn.180001640(arg1 + 0x18, auStack344, uVar2);\n                iStack408 = 3;\n                uVar2 = arg3 & 3;\n                if (uVar2 == 0) {\n                    uVar5 = 0x80000000;\n                }\n                else if (uVar2 == 1) {\n                    uVar5 = 0x40000000;\n                }\n                else {\n                    uVar5 = uVar6;\n                    if (uVar2 == 2) {\n                        uVar5 = 0xc0000000;\n                    }\n                }\n                uVar2 = arg3 & 0x70;\n                if ((uVar2 != 0) && (uVar2 != 0x10)) {\n                    if (uVar2 == 0x20) {\n                        uVar6 = 1;\n                    }\n                    else if (uVar2 == 0x30) {\n                        uVar6 = 2;\n                    }\n                    else if (uVar2 == 0x40) {\n                        uVar6 = 3;\n                    }\n                }\n                auStack376[0] = 0x18;\n                uStack368 = 0;\n                uStack360 = ~((arg3 & 0xffff7fff) >> 7) & 1;\n                if (((arg3 & 0xffff7fff) >> 0xc & 1) != 0) {\n                    iStack408 = (-((arg3 & 0x2000) != 0) & 2) + 2;\n                }\n                uStack400 = 0x80;\n                if ((arg3 >> 0x10 & 1) != 0) {\n                    uStack400 = 0x20000080;\n                }\n                if ((arg3 >> 0x11 & 1) != 0) {\n                    uStack400 = uStack400 | 0x80000000;\n                }\n                if ((arg3 >> 0x12 & 1) != 0) {\n                    uStack400 = uStack400 | 0x10000000;\n                }\n                if ((arg3 >> 0x13 & 1) != 0) {\n                    uStack400 = uStack400 | 0x8000000;\n                }\n                uStack392 = 0;\n                iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg2, uVar5, uVar6, auStack376);\n                if (iVar4 == -1) {\n                    fcn.180022e74(arg4, arg2);\n                }\n                else {\n                    *(arg1 + 8) = iVar4;\n                    *(arg1 + 0x10) = 1;\n                }\n            }\n            goto code_r0x0001800233d2;\n        }\n    }\n    if (arg4 != 0) {\n        *(arg4 + 0x10) = 3;\n        if (arg2 != NULL) {\n            uVar2 = fcn.180035930(arg2);\n        }\n        fcn.180001640(arg4 + 0x18, arg2, uVar2);\n    }\ncode_r0x0001800233d2:\n    fcn.1800349d0(uStack72 ^ auStack440);\n    return;\n}\n",
        "token_count": 1061
    },
    "1800239e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.1800239e8(ulong arg1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    if (arg1 < 0x10c) {\n        if (arg1 == 0x10b) {\n            return 3;\n        }\n        if (0x3e < arg1) {\n            if (arg1 < 0x6c) {\n                if (arg1 == 0x6b) {\n                    return 2;\n                }\n                if (0x47 < arg1) {\n                    if (arg1 == 0x50) {\n                        return 5;\n                    }\n                    if (arg1 == 0x52) {\n                        return 5;\n                    }\n                    if (arg1 == 0x55) {\n                        return 3;\n                    }\n                    if (arg1 != 0x56) {\n                        if (arg1 == 0x58) {\n                            return 10;\n                        }\n                        return 1;\n                    }\n                    return 5;\n                }\n                if (arg1 == 0x47) {\n                    return 5;\n                }\n                if (arg1 == 0x40) {\n                    return 5;\n                }\n                if (arg1 == 0x41) {\n                    return 5;\n                }\n                if (arg1 == 0x42) {\n                    return 6;\n                }\n                if (arg1 == 0x43) {\n                    return 3;\n                }\n                iVar1 = arg1 - 0x44;\n                if (iVar1 == 0) {\n                    return 4;\n                }\n            }\n            else {\n                if (arg1 < 0x91) {\n                    if (arg1 == 0x90) {\n                        return 3;\n                    }\n                    if (arg1 < 0x76) {\n                        if (arg1 == 0x75) {\n                            return 10;\n                        }\n                        if (arg1 == 0x6c) {\n                            return 0xc;\n                        }\n                        if (arg1 == 0x6f) {\n                            return 3;\n                        }\n                        if (arg1 == 0x70) {\n                            return 0xd;\n                        }\n                        iVar1 = arg1 - 0x71;\n                        if (iVar1 == 0) {\n                            return 4;\n                        }\n                        goto code_r0x000180023be7;\n                    }\n                    if (arg1 == 0x7b) {\n                        return 3;\n                    }\n                    if (arg1 == 0x7c) {\n                        return 3;\n                    }\n                    if (arg1 == 0x7d) {\n                        return 3;\n                    }\n                    iVar1 = arg1 - 0x83;\n                    if (iVar1 == 0) {\n                        return 9;\n                    }\ncode_r0x000180023aa0:\n                    if (iVar1 == 1) {\n                        return 9;\n                    }\n                    return 1;\n                }\n                if (arg1 < 0xb7) {\n                    if (arg1 == 0xb6) {\n                        return 6;\n                    }\n                    if (arg1 == 0x91) {\n                        return 7;\n                    }\n                    if (arg1 == 0x9a) {\n                        return 3;\n                    }\n                    if (arg1 == 0xa1) {\n                        return 3;\n                    }\n                    if (arg1 == 0xa7) {\n                        return 0xc;\n                    }\n                    bVar2 = arg1 == 0xaa;\n                    goto code_r0x000180023c54;\n                }\n                if (arg1 == 0xb7) {\n                    return 5;\n                }\n                if (arg1 == 0xbf) {\n                    return 6;\n                }\n                if (arg1 == 0xc1) {\n                    return 6;\n                }\n                iVar1 = arg1 - 0xce;\n                if (iVar1 == 0) {\n                    return 3;\n                }\n            }\n            bVar2 = iVar1 == 2;\ncode_r0x000180023a46:\n            if (bVar2) {\n                return 3;\n            }\n            return 1;\n        }\n        if (arg1 == 0x3e) {\n            return 8;\n        }\n        if (arg1 < 0x1a) {\n            if (arg1 == 0x19) {\n                return 9;\n            }\n            if (arg1 < 0x11) {\n                if (arg1 == 0x10) {\n                    return 7;\n                }\n                if (arg1 == 0) {\n                    return 0;\n                }\n                if (arg1 == 2) {\n                    return 2;\n                }\n                if (arg1 == 3) {\n                    return 3;\n                }\n                if (arg1 == 4) {\n                    return 4;\n                }\n                if (arg1 == 5) {\n                    return 5;\n                }\n                if (arg1 == 6) {\n                    return 2;\n                }\n                if (arg1 == 0xb) {\n                    return 6;\n                }\n                if (arg1 == 0xc) {\n                    return 5;\n                }\n                bVar2 = arg1 == 0xf;\n                goto code_r0x000180023a46;\n            }\n            if (arg1 == 0x11) {\n                return 3;\n            }\n            if (arg1 == 0x12) {\n                return 2;\n            }\n            if (arg1 == 0x13) {\n                return 5;\n            }\n            if (((arg1 != 0x14) && (arg1 != 0x15)) && ((arg1 != 0x16 && (iVar1 = arg1 - 0x17,  iVar1 != 0))))\n            goto code_r0x000180023aa0;\n        }\n        else {\n            if (arg1 < 0x28) {\n                if (arg1 == 0x27) {\n                    return 0xd;\n                }\n                if (arg1 == 0x1a) {\n                    return 6;\n                }\n                if (arg1 == 0x1b) {\n                    return 9;\n                }\n                if (arg1 == 0x1d) {\n                    return 5;\n                }\n                if (arg1 == 0x1e) {\n                    return 9;\n                }\n                if (arg1 == 0x20) {\n                    return 0xb;\n                }\n                if (arg1 == 0x21) {\n                    return 0xc;\n                }\n                if (arg1 != 0x22) {\n                    if (arg1 == 0x24) {\n                        return 4;\n                    }\n                    if (arg1 == 0x26) {\n                        return 0xe;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (arg1 == 0x34) {\n                return 3;\n            }\n            if (arg1 == 0x35) {\n                return 3;\n            }\n            if (arg1 == 0x36) {\n                return 5;\n            }\n            if (arg1 == 0x37) {\n                return 3;\n            }\n            if (arg1 != 0x39) {\n                if (arg1 == 0x3a) {\n                    return 5;\n                }\n                iVar1 = arg1 - 0x3b;\n                if (iVar1 != 0) {\ncode_r0x000180023be7:\n                    if (iVar1 == 1) {\n                        return 6;\n                    }\n                    return 1;\n                }\n            }\n        }\n    }\n    else if (((arg1 != 0x3e3) && (arg1 != 0x3e4)) && (arg1 != 0x3e5)) {\n        bVar2 = arg1 == 999;\ncode_r0x000180023c54:\n        if (bVar2) {\n            return 5;\n        }\n        return 1;\n    }\n    return 10;\n}\n",
        "token_count": 1750
    },
    "18002492": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool fcn.180024928(int64_t arg1, ulong *arg2)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    uint auStackX8 [2];\n    uint auStackX16 [2];\n    int64_t *piStackX24;\n    int64_t *piStackX32;\n    int64_t *piStack56;\n    int64_t iStack48;\n    int64_t *piStack40;\n    ulong *puStack32;\n    \n    uVar2 = *0x180059498;\n    uVar1 = *0x180059490;\n    uVar4 = 0;\n    piStack56 = NULL;\n    *arg2 = *0x180059490;\n    arg2[1] = uVar2;\n    iVar3 = (****(arg1 + 0x80))(uVar1, *(arg1 + 0x80), 0x1800595a0, &piStack56);\n    if (-1 < iVar3) {\n        (**(*piStack56 + 0x20))(piStack56, 1, arg2);\n        (**(*piStack56 + 0x10))();\n    }\n    piStack40 = NULL;\n    iVar3 = fcn.180035a10(arg2, 0x180059490, 0x10);\n    if (iVar3 == 0) {\n        iVar3 = (****(arg1 + 0x80))(*(arg1 + 0x80), 0x180059590, &piStack40);\n        if (-1 < iVar3) {\n            piStackX24 = NULL;\n            iVar3 = (**(*piStack40 + 0x18))(piStack40, &piStackX24);\n            if (-1 < iVar3) {\n                iVar3 = (**(*piStackX24 + 0x18))(piStackX24, &iStack48);\n                if (-1 < iVar3) {\n                    bVar5 = *(iStack48 + 0x34) != 0;\n                    while (bVar5) {\n                        iVar3 = (**(*piStackX24 + 0x48))(piStackX24, uVar4, auStackX8);\n                        if ((-1 < iVar3) && ((auStackX8[0] & 7) == 3)) {\n                            piStackX32 = NULL;\n                            iVar3 = (**(*piStackX24 + 0x40))(piStackX24, uVar4, auStackX16);\n                            if (-1 < iVar3) {\n                                iVar3 = (**(*piStackX24 + 0x70))(piStackX24, auStackX16[0], &piStackX32);\n                                if (-1 < iVar3) {\n                                    iVar3 = (**(*piStackX32 + 0x18))(piStackX32, &puStack32);\n                                    if (-1 < iVar3) {\n                                        uVar1 = *puStack32;\n                                        uVar2 = puStack32[1];\n                                        *arg2 = uVar1;\n                                        arg2[1] = uVar2;\n                                        (**(*piStackX32 + 0x98))(uVar1);\n                                    }\n                                    (**(*piStackX32 + 0x10))();\n                                }\n                            }\n                            break;\n                        }\n                        uVar4 = uVar4 + 1;\n                        bVar5 = uVar4 < *(iStack48 + 0x34);\n                    }\n                    (**(*piStackX24 + 0x98))(piStackX24, iStack48);\n                }\n                (**(*piStackX24 + 0x10))();\n            }\n            (**(*piStack40 + 0x10))();\n        }\n    }\n    iVar3 = fcn.180035a10(arg2, 0x180059490, 0x10);\n    return iVar3 != 0;\n}\n",
        "token_count": 857
    },
    "180024c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180024c58(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t *piStackX8;\n    \n    if ((*(arg1 + 0x16) >> 0xe & 1) == 0) {\n        (**(*arg1 + 0x160))();\n    }\n    piStackX8 = NULL;\n    if (arg1[0x10] == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar2 = (***arg1[0x10])(arg1[0x10], 0x1800595b0, &piStackX8);\n    if (-1 < iVar2) {\n        if (piStackX8 == NULL) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        (**(*piStackX8 + 0x20))(piStackX8, arg2);\n        (**(*piStackX8 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "180024cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180024cdc(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t *apiStackX8 [4];\n    \n    if (*(arg1 + 0x80) == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    apiStackX8[0] = NULL;\n    iVar2 = (****(arg1 + 0x80))(*(arg1 + 0x80), 0x1800595b0, apiStackX8);\n    if (-1 < iVar2) {\n        if (apiStackX8[0] == NULL) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        (**(*apiStackX8[0] + 0x30))(apiStackX8[0], arg2);\n        (**(*apiStackX8[0] + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "180024da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180024da0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    \n    *(arg1 + 0x48) = 0;\n    piVar2 = *(arg1 + 0x50);\n    if (piVar2 != NULL) {\n        if (piVar2[8] != 0) {\n            piVar2 = (**(*piVar2 + 0x1f0))();\n            iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(*(arg1 + 0x50) + 0x40));\n            if ((iVar1 != 0) && (*piVar2 != 0)) {\n                fcn.180010244(*(arg1 + 0x50));\n            }\n            fcn.18000fae4(*(arg1 + 0x50));\n        }\n        *(*(arg1 + 0x50) + 0xa0) = 0;\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "1800258f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.1800258f4(ulong noname_0, uint *arg2, uint *arg3)\n\n{\n    uint64_t arg2_00;\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    \n    arg2[4] = arg3[4];\n    iVar1 = arg3[4];\n    if (iVar1 == 0) {\n        uVar3 = arg3[1];\n        uVar4 = arg3[2];\n        uVar5 = arg3[3];\n        *arg2 = *arg3;\n        arg2[1] = uVar3;\n        arg2[2] = uVar4;\n        arg2[3] = uVar5;\ncode_r0x00018002593f:\n        iVar6 = fcn.1800360ec(*(arg3 + 6));\n        arg2_00 = iVar6 + 1;\n        if (arg2_00 < 0x100000000) {\n            uVar2 = (arg2_00 & 0xffffffff) * 2;\n            if (uVar2 < 0x100000000) {\n                iVar6 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(uVar2 & 0xffffffff);\n            }\n            else {\n                iVar6 = 0;\n            }\n            *(arg2 + 6) = iVar6;\n            if (iVar6 != 0) {\n                fcn.180036108(iVar6, arg2_00, *(arg3 + 6));\n                goto code_r0x000180025988;\n            }\n        }\n        uVar7 = 0;\n    }\n    else {\n        if (iVar1 == 1) {\n            uVar3 = arg3[1];\n            uVar4 = arg3[2];\n            uVar5 = arg3[3];\n            *arg2 = *arg3;\n            arg2[1] = uVar3;\n            arg2[2] = uVar4;\n            arg2[3] = uVar5;\n            arg2[6] = arg3[6];\n        }\n        else if (iVar1 == 2) goto code_r0x00018002593f;\ncode_r0x000180025988:\n        uVar7 = 1;\n    }\n    return uVar7;\n}\n",
        "token_count": 533
    },
    "180025a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180025a28(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    ulong uVar2;\n    \n    if (*(arg1 + 0x10) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        (**(**(arg1 + 0x10) + 0x168))();\n        piVar1 = *(*(arg1 + 0x10) + 0xd8);\n        (**(*piVar1 + 8))(piVar1, arg1, 1);\n        uVar2 = (****(*(arg1 + 0x10) + 0xd8))();\n    }\n    return uVar2;\n}\n",
        "token_count": 153
    },
    "18002d39": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002d398(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        if (*(arg1 + 1) != 0) {\n            (**(**arg1 + 0x10))();\n        }\n        *arg1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "180025c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180025c74(int64_t arg1, uint64_t arg2, ushort *arg3)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    \n    if (*(arg1 + 0x38) == '\\0') {\n        iVar2 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar2 + 0x10)) {\n            arg2 = arg2 - *(iVar2 + 0x10);\ncode_r0x000180025cd0:\n            if (arg3 != NULL) {\n                *arg3 = *(iVar2 + 0x28 + arg2 * 0x50);\n                return 1;\n            }\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (*(arg1 + 0x18) != 0) {\n            iVar2 = *(arg1 + 0x28);\n            puVar1 = iVar2 + 0x10;\n            do {\n                if (*puVar1 == arg2) {\n                    arg2 = uVar3;\n                    goto code_r0x000180025cd0;\n                }\n                uVar3 = uVar3 + 1;\n                puVar1 = puVar1 + 10;\n            } while (uVar3 < *(arg1 + 0x18));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 318
    },
    "180027df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.180027dfc(int64_t **arg1)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    \n    uVar4 = 0;\n    uVar5 = 0;\n    uVar1 = *(arg1[2] + 1);\n    if (uVar1 != 0) {\n        iVar6 = 0;\n        do {\n            piVar2 = arg1[2];\n            if (((uVar5 < *(piVar2 + 1)) && (*piVar2 != 0)) && (*(iVar6 + 8 + *piVar2) != '\\0')) {\n                if (uVar5 < *(piVar2 + 1)) {\n                    uVar7 = *(iVar6 + *piVar2);\n                }\n                else {\n                    uVar7 = 0;\n                }\n                uVar3 = (**(**arg1 + 0x20))(*arg1, arg1[3], uVar7, piVar2[2]);\n                uVar4 = uVar3 & 0xffffffff;\n                if (uVar3 < 0) {\n                    return uVar3;\n                }\n            }\n            uVar5 = uVar5 + 1;\n            iVar6 = iVar6 + 0x10;\n        } while (uVar5 < uVar1);\n    }\n    return uVar4;\n}\n",
        "token_count": 336
    },
    "1800286c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.1800286c4(int64_t *arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t *piStackX16;\n    \n    if (arg2 == NULL) {\ncode_r0x0001800286e3:\n        iVar1 = -0x7fffbffb;\n    }\n    else {\n        if (*(arg1 + 1) == 0) {\n            return 0;\n        }\n        piStackX16 = NULL;\n        iVar1 = (***arg2)(arg2, 0x180055a58, &piStackX16);\n        if (-1 < iVar1) {\n            if (*arg1 == 0) {\n                if (piStackX16 != NULL) {\n                    (**(*piStackX16 + 0x10))();\n                }\n                goto code_r0x0001800286e3;\n            }\n            uVar3 = 0;\n            if (*(arg1 + 1) != 0) {\n                iVar2 = 0;\n                do {\n                    (**(*piStackX16 + 0x30))(piStackX16, *(*arg1 + iVar2), 0);\n                    uVar3 = uVar3 + 1;\n                    iVar2 = iVar2 + 0x10;\n                } while (uVar3 < *(arg1 + 1));\n            }\n        }\n        *(arg1 + 1) = 0;\n        fcn.18000b948(*arg1);\n        *arg1 = 0;\n        if (piStackX16 != NULL) {\n            (**(*piStackX16 + 0x10))();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 381
    },
    "18002921": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.180029214(int64_t arg1, ulong arg2)\n\n{\n    uint16_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    \n    uVar3 = 0;\n    if (*(arg1 + 0x18) != 0) {\n        iVar5 = 0;\n        do {\n            if ((*(arg1 + 0x20) == 0) || (*(*(arg1 + 0x20) + uVar3) != '\\x01')) {\n                iVar2 = *(arg1 + 0x28);\n                if ((*(iVar2 + 0x28 + iVar5) == 0xd) || (*(iVar2 + 0x28 + iVar5) == 9)) {\n                    if (*((*(iVar2 + 0x20 + iVar5) + 7 + *(iVar2 + 8 + iVar5) & 0xfffffffffffffff8U) + 8 +\n                         *(arg1 + 0x10)) != 0) goto code_r0x000180029307;\n                    uVar1 = *(*(arg1 + 0x28) + 0x28 + iVar5);\n                    iVar2 = *(arg1 + 0x10) + *(*(arg1 + 0x28) + 8 + iVar5);\n                }\n                else {\n                    uVar1 = *(iVar2 + 0x28 + iVar5);\n                    iVar2 = *(iVar2 + 8 + iVar5) + *(arg1 + 0x10);\n                }\n                fcn.18002911c(uVar1, iVar2, arg2);\n            }\n            else if (((*((*(*(arg1 + 0x28) + 0x20 + iVar5) + 7 + *(*(arg1 + 0x28) + 8 + iVar5) & 0xfffffffffffffff8U) +\n                         8 + *(arg1 + 0x10)) != 3) &&\n                     (piVar4 = *(*(arg1 + 0x28) + 8 + iVar5) + *(arg1 + 0x10),  piVar4 != NULL)) && (*piVar4 != 0)) {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(*piVar4);\n                *piVar4 = 0;\n            }\ncode_r0x000180029307:\n            uVar3 = uVar3 + 1;\n            iVar5 = iVar5 + 0x50;\n        } while (uVar3 < *(arg1 + 0x18));\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "18002977": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180029770(int64_t *arg1, ulong *arg2)\n\n{\n    uint64_t *puVar1;\n    uint16_t *puVar2;\n    int64_t *piVar3;\n    uchar uVar4;\n    uchar uVar5;\n    uint8_t uVar6;\n    int64_t iVar7;\n    code *pcVar8;\n    ulong uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    ulong uVar12;\n    int64_t *arg1_00;\n    int64_t iVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int64_t *piVar17;\n    uint64_t arg1_01;\n    uchar auStack344 [32];\n    ulong uStack312;\n    uchar uStack304;\n    uint uStack296;\n    uint64_t uStack288;\n    uint64_t uStack280;\n    int64_t iStack272;\n    uint *puStack264;\n    char cStack248;\n    uint16_t uStack246;\n    uint *puStack240;\n    uint32_t uStack232;\n    int64_t *piStack224;\n    int64_t *piStack216;\n    uint64_t uStack208;\n    ulong *puStack200;\n    int64_t *piStack192;\n    uint *puStack184;\n    ushort uStack176;\n    int64_t *piStack168;\n    uint64_t uStack160;\n    int64_t *piStack152;\n    ulong *puStack144;\n    int32_t iStack136;\n    int32_t iStack132;\n    uint uStack128;\n    uint uStack124;\n    ulong uStack120;\n    ulong uStack72;\n    ulong uStack64;\n    uint64_t uStack56;\n    \n    uStack120 = 0xfffffffffffffffe;\n    uStack56 = *0x18006ed40 ^ auStack344;\n    uStack72 = CONCAT44(*0x180055d9c, *0x180055d98);\n    uStack64 = CONCAT44(*0x180055da4, *0x180055da0);\n    uVar14 = 0;\n    cStack248 = '\\0';\n    puStack200 = arg2;\n    piStack168 = arg1;\n    puStack144 = arg2;\n    if (arg2 != NULL) {\n        piStack224 = NULL;\n        iVar10 = (***arg2)(uStack72, arg2, 0x180055a58);\n        if (iVar10 < 0) {\n            if (piStack224 != NULL) {\n                (**(*piStack224 + 0x10))();\n            }\n        }\n        else {\n            uStack208 = 0;\n            if (arg1[5] == 0) {\n                piStack216 = NULL;\n                iVar10 = (***arg2)(arg2, 0x180055a38, &piStack216);\n                if (iVar10 < 0) {\n                    if (piStack216 != NULL) {\n                        (**(*piStack216 + 0x10))();\n                    }\n                    if (piStack224 != NULL) {\n                        (**(*piStack224 + 0x10))();\n                    }\n                    goto code_r0x00018002a2d3;\n                }\n                iVar10 = (**(*piStack216 + 0x18))(piStack216, arg1 + 3, arg1 + 5, arg1 + 6);\n                if (iVar10 < 0) {\n                    if (piStack216 != NULL) {\n                        (**(*piStack216 + 0x10))();\n                    }\n                    if (piStack224 != NULL) {\n                        (**(*piStack224 + 0x10))();\n                    }\n                    goto code_r0x00018002a2d3;\n                }\n                *(arg1 + 7) = 0;\n                if (piStack216 != NULL) {\n                    (**(*piStack216 + 0x10))();\n                }\n            }\n            else {\n                *(arg1 + 7) = 1;\n            }\n            piStack216 = NULL;\n            uVar12 = SUB168(ZEXT816(0x58) * ZEXT816(arg1[3]), 0);\n            if (SUB168(ZEXT816(0x58) * ZEXT816(arg1[3]) >> 0x40, 0) != 0) {\n                uVar12 = 0xffffffffffffffff;\n            }\n            arg1_00 = fcn.18000b904(uVar12);\n            piStack216 = arg1_00;\n            if (arg1_00 == NULL) {\n                if (piStack224 != NULL) {\n                    (**(*piStack224 + 0x10))();\n                }\n            }\n            else {\n                piStack152 = arg1_00;\n                iVar13 = fcn.18000b904(arg1[3]);\n                arg1[4] = iVar13;\n                if (arg1[4] == 0) {\n                    fcn.18000b948(arg1_00);\n                    if (piStack224 != NULL) {\n                        (**(*piStack224 + 0x10))();\n                    }\n                }\n                else {\n                    uStack232 = 0;\n                    uVar15 = uVar14;\n                    arg1_01 = uVar14;\n                    piStack192 = arg1_00;\n                    while (piVar17 = piStack192,  uVar15 < arg1[3]) {\n                        *(uVar15 + arg1[4]) = 0;\n                        puStack240 = uVar15 * 0x50;\n                        iVar13 = arg1[5];\n                        puVar1 = puStack240 + iVar13 + 0x20;\n                        if ((*puVar1 < arg1[8] || *puVar1 == arg1[8]) || (*(puStack240 + iVar13 + 0x28) == 0xd)) {\n                            if (*(puStack240 + iVar13 + 0x28) == 0xd) {\n                                puStack240 = NULL;\n                                puStack184 = fcn.18000b904(0x14);\n                                if (puStack184 == NULL) {\n                                    uVar14 = uStack232;\n                                    puStack240 = puStack184;\n                                    if (uStack232 != 0) {\n                                        piVar17 = arg1_00 + 5;\n                                        do {\n                                            fcn.18000b948(*piVar17);\n                                            piVar17 = piVar17 + 0xb;\n                                            uVar14 = uVar14 - 1;\n                                        } while (uVar14 != 0);\n                                    }\n                                    fcn.18000b948(arg1[4]);\n                                    arg1[4] = 0;\n                                    fcn.18000b948(arg1_00);\n                                    if (piStack224 != NULL) {\n                                        (**(*piStack224 + 0x10))();\n                                    }\n                                    goto code_r0x00018002a2d3;\n                                }\n                                *puStack184 = 0;\n                                uVar9 = *0x180055d80;\n                                uVar12 = *0x180055d78;\n                                *(puStack184 + 1) = *0x180055d78;\n                                *(puStack184 + 3) = uVar9;\n                                puStack240 = uStack232 * 0x50;\n                                *(puStack240 + arg1[5] + 0x28) = 0xd;\n                                *(puStack240 + arg1[5] + 0x20) = 8;\n                                iVar13 = arg1[5];\n                                uVar11 = fcn.18002438c(uVar12);\n                                uStack288 = (uVar11 - 1) + arg1_01 & ~(uVar11 - 1);\n                                iVar7 = *(puStack240 + iVar13 + 0x20);\n                                uStack280 = iVar7 + 7 + uStack288 & 0xfffffffffffffff8;\n                                iStack272 = uStack280 + 8;\n                                arg1_01 = uStack280 + 0xc;\n                                puStack264 = puStack184;\n                                uStack296 = 0;\n                                uStack304 = *(puStack240 + iVar13 + 0x2b);\n                                uStack312 = uStack312 & 0xffffffffffffff00 | *(puStack240 + iVar13 + 0x2a);\n                                uStack208 = arg1_01;\n                                uStack160 = uStack288;\n                                fcn.180025bb8(piVar17, *(puStack240 + iVar13 + 0x10), *(puStack240 + iVar13 + 0x28), \n                                              iVar7);\n                                uVar15 = uStack160;\n                            }\n                            else {\n                                if (*(puStack240 + iVar13 + 0x28) == 0x81) {\n                                    piVar3 = puStack240 + iVar13 + 0x20;\n                                    *piVar3 = *piVar3 + 1;\n                                }\n                                iVar13 = arg1[5];\n                                if (*(puStack240 + iVar13 + 0x28) == 0x82) {\n                                    *(puStack240 + iVar13 + 0x20) = *(puStack240 + iVar13 + 0x20) * 2 + 2;\n                                }\n                                iVar13 = arg1[5];\n                                uVar11 = fcn.18002438c();\n                                uStack288 = (uVar11 - 1) + arg1_01 & ~(uVar11 - 1);\n                                iVar7 = *(puStack240 + iVar13 + 0x20);\n                                uStack280 = iVar7 + 7 + uStack288 & 0xfffffffffffffff8;\n                                iStack272 = uStack280 + 8;\n                                arg1_01 = uStack280 + 0xc;\n                                puStack264 = NULL;\n                                uStack296 = 0;\n                                uStack304 = *(puStack240 + iVar13 + 0x2b);\n                                uStack312 = uStack312 & 0xffffffffffffff00 | *(puStack240 + iVar13 + 0x2a);\n                                uStack208 = arg1_01;\n                                uStack160 = uStack288;\n                                fcn.180025bb8(piVar17, *(puStack240 + iVar13 + 0x10), *(puStack240 + iVar13 + 0x28), \n                                              iVar7);\n                                uVar15 = uStack160;\n                            }\n                        }\n                        else if (*(arg1 + 0x3c) == 2) {\n                            uVar16 = arg1_01 + 7 & 0xfffffffffffffff8;\n                            arg1_01 = uVar16 + 0xc;\n                            *(puStack240 + iVar13 + 0x20) = 0;\n                            iVar13 = arg1[5];\n                            uVar4 = *(puStack240 + iVar13 + 0x2b);\n                            uVar5 = *(puStack240 + iVar13 + 0x2a);\n                            puStack184 = *(puStack240 + iVar13 + 0x20);\n                            uStack246 = *(puStack240 + iVar13 + 0x28);\n                            iVar13 = *(puStack240 + iVar13 + 0x10);\n                            uStack208 = arg1_01;\n                            if (piStack192 == NULL) {\n                                fcn.180001030(0x80004005);\n                                pcVar8 = swi(3);\n                                (*pcVar8)();\n                                return;\n                            }\n                            *(piStack192 + 0x3c) = 0;\n                            piStack192[5] = 0;\n                            *(piStack192 + 8) = 0;\n                            *piStack192 = iVar13;\n                            *(piStack192 + 0x54) = uStack246;\n                            *(piStack192 + 0x56) = uVar5;\n                            *(piStack192 + 0x57) = uVar4;\n                            *(piStack192 + 10) = 0;\n                            piStack192[1] = 0;\n                            piStack192[2] = 0;\n                            piStack192[3] = 0;\n                            piStack192[4] = 0;\n                            piStack192[6] = 0;\n                            piStack192[9] = puStack184;\n                            *(piStack192 + 7) = 0;\n                            if (uVar16 != 0) {\n                                *(piStack192 + 7) = 2;\n                                piStack192[2] = uVar16;\n                            }\n                            uVar15 = uVar14;\n                            if (uVar16 + 8 != 0) {\n                                *(piStack192 + 7) = *(piStack192 + 7) | 4;\n                                piStack192[3] = uVar16 + 8;\n                            }\n                        }\n                        else if (*(arg1 + 0x3c) == 1) {\n                            puVar2 = puStack240 + iVar13 + 0x28;\n                            *puVar2 = *puVar2 | 0x4000;\n                            *(puStack240 + arg1[5] + 0x20) = 8;\n                            *(uVar15 + arg1[4]) = 1;\n                            iVar13 = arg1[5];\n                            uStack176 = *(puStack240 + iVar13 + 0x28);\n                            uVar11 = fcn.18002438c();\n                            uVar15 = (uVar11 - 1) + arg1_01 & ~(uVar11 - 1);\n                            iVar7 = *(puStack240 + iVar13 + 0x20);\n                            uVar16 = iVar7 + 7 + uVar15 & 0xfffffffffffffff8;\n                            arg1_01 = uVar16 + 0xc;\n                            uVar4 = *(puStack240 + iVar13 + 0x2b);\n                            uVar6 = *(puStack240 + iVar13 + 0x2a);\n                            uStack246 = uStack246 & 0xff00 | uVar6;\n                            iVar13 = *(puStack240 + iVar13 + 0x10);\n                            uStack208 = arg1_01;\n                            if (piVar17 == NULL) {\n                                fcn.180001030(0x80004005);\n                                pcVar8 = swi(3);\n                                (*pcVar8)();\n                                return;\n                            }\n                            *(piVar17 + 0x3c) = 0;\n                            piVar17[5] = 0;\n                            *(piVar17 + 8) = 0;\n                            *piVar17 = iVar13;\n                            *(piVar17 + 0x54) = uStack176;\n                            *(piVar17 + 0x56) = uVar6;\n                            *(piVar17 + 0x57) = uVar4;\n                            *(piVar17 + 10) = 0;\n                            piVar17[2] = 0;\n                            piVar17[3] = 0;\n                            piVar17[4] = 0;\n                            piVar17[6] = 0;\n                            piVar17[9] = iVar7;\n                            *(piVar17 + 7) = 1;\n                            piVar17[1] = uVar15;\n                            if (uVar16 != 0) {\n                                *(piVar17 + 7) = 3;\n                                piVar17[2] = uVar16;\n                            }\n                            if (uVar16 + 8 != 0) {\n                                *(piVar17 + 7) = *(piVar17 + 7) | 4;\n                                piVar17[3] = uVar16 + 8;\n                            }\n                        }\n                        else {\n                            if (cStack248 == '\\0') {\n                                uStack128 = 0x89;\n                                uStack124 = 0x8b;\n                                iStack136 = 0;\n                                iStack132 = 0;\n                                uStack312 = CONCAT44(uStack312._4_4_, 2);\n                                fcn.180029630(arg1, arg2, &uStack128, &iStack136);\n                                if (iStack136 == 0) {\n                                    if (iStack132 != 0) {\n                                        uStack72 = CONCAT44(*0x180055d8c, *0x180055d88);\n                                        uStack64 = CONCAT44(*0x180055d94, *0x180055d90);\n                                    }\n                                }\n                                else {\n                                    uStack72 = CONCAT44(*0x180055d9c, *0x180055d98);\n                                    uStack64 = CONCAT44(*0x180055da4, *0x180055da0);\n                                }\n                                cStack248 = '\\x01';\n                            }\n                            puStack240 = NULL;\n                            puStack184 = fcn.18000b904(0x14);\n                            if (puStack184 == NULL) {\n                                uVar14 = uStack232;\n                                puStack240 = puStack184;\n                                if (uStack232 != 0) {\n                                    piVar17 = arg1_00 + 5;\n                                    do {\n                                        fcn.18000b948(*piVar17);\n                                        piVar17 = piVar17 + 0xb;\n                                        uVar14 = uVar14 - 1;\n                                    } while (uVar14 != 0);\n                                }\n                                fcn.18000b948(arg1[4]);\n                                arg1[4] = 0;\n                                fcn.18000b948(arg1_00);\n                                if (piStack224 != NULL) {\n                                    (**(*piStack224 + 0x10))();\n                                }\n                                goto code_r0x00018002a2d3;\n                            }\n                            *puStack184 = 0;\n                            *(puStack184 + 1) = uStack72;\n                            *(puStack184 + 3) = uStack64;\n                            puStack240 = uStack232 * 0x50;\n                            *(puStack240 + arg1[5] + 0x28) = 0xd;\n                            *(puStack240 + arg1[5] + 0x20) = 8;\n                            iVar13 = arg1[5];\n                            uVar11 = fcn.18002438c(uStack72);\n                            uStack288 = (uVar11 - 1) + arg1_01 & ~(uVar11 - 1);\n                            iVar7 = *(puStack240 + iVar13 + 0x20);\n                            uStack280 = iVar7 + 7 + uStack288 & 0xfffffffffffffff8;\n                            iStack272 = uStack280 + 8;\n                            arg1_01 = uStack280 + 0xc;\n                            puStack264 = puStack184;\n                            uStack296 = 0;\n                            uStack304 = *(puStack240 + iVar13 + 0x2b);\n                            uStack312 = uStack312 & 0xffffffffffffff00 | *(puStack240 + iVar13 + 0x2a);\n                            uStack208 = arg1_01;\n                            uStack160 = uStack288;\n                            fcn.180025bb8(piVar17, *(puStack240 + iVar13 + 0x10), *(puStack240 + iVar13 + 0x28), iVar7);\n                            uVar15 = uStack160;\n                        }\n                        piStack192 = piVar17 + 0xb;\n                        *(puStack240 + arg1[5] + 8) = uVar15;\n                        uStack232 = uStack232 + 1;\n                        arg2 = puStack200;\n                        uVar15 = uStack232;\n                    }\n                    if (*arg1 == 0) {\n                        iVar10 = fcn.180024298(arg1, 1);\n                        if (iVar10 < 0) {\n                            if (arg1[3] != 0) {\n                                piVar17 = arg1_00 + 5;\n                                do {\n                                    fcn.18000b948(*piVar17);\n                                    uVar14 = uVar14 + 1;\n                                    piVar17 = piVar17 + 0xb;\n                                } while (uVar14 < arg1[3]);\n                            }\n                            fcn.18000b948(arg1[4]);\n                            arg1[4] = 0;\n                            fcn.18000b948(arg1_00);\n                            if (piStack224 != NULL) {\n                                (**(*piStack224 + 0x10))();\n                            }\n                            goto code_r0x00018002a2d3;\n                        }\n                        *(*arg1 + 8) = 1;\n                    }\n                    arg1[2] = 0;\n                    iVar13 = fcn.18000b904(arg1_01);\n                    arg1[2] = iVar13;\n                    if (arg1[2] == 0) {\n                        if (arg1[3] != 0) {\n                            piVar17 = arg1_00 + 5;\n                            do {\n                                fcn.18000b948(*piVar17);\n                                uVar14 = uVar14 + 1;\n                                piVar17 = piVar17 + 0xb;\n                            } while (uVar14 < arg1[3]);\n                        }\n                        fcn.18000b948(arg1[4]);\n                        arg1[4] = 0;\n                        fcn.18000b948(arg1_00);\n                        if (piStack224 != NULL) {\n                            (**(*piStack224 + 0x10))();\n                        }\n                    }\n                    else {\n                        fcn.180035830(arg1[2], 0, arg1_01);\n                        uStack312 = piStack224;\n                        iVar10 = fcn.180024304(arg1_00, arg1[3], *arg1, arg1_01);\n                        if (iVar10 < 0) {\n                            fcn.18000b948(arg1[4]);\n                            arg1[4] = 0;\n                        }\n                        fcn.18000b948(arg1_00);\n                        if (piStack224 != NULL) {\n                            (**(*piStack224 + 0x10))();\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00018002a2d3:\n    fcn.1800349d0(uStack56 ^ auStack344);\n    return;\n}\n",
        "token_count": 4841
    },
    "18002b63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.18002b634(int64_t arg1)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong arg1_00;\n    int64_t iVar7;\n    bool bVar8;\n    int64_t *piStackX8;\n    int64_t *piStackX16;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    int32_t iStack48;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    if (*(arg1 + 8) == 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    iVar6 = *(*(arg1 + 8) + 0x50);\n    if (iVar6 == 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    iVar6 = fcn.1800114f4(iVar6);\n    if (iVar6 == 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar6 + 0x40));\n    bVar8 = iVar3 == 0;\n    if (bVar8) {\n        arg1_00 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        iVar7 = fcn.18000fa14(arg1_00);\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(iVar7 + 0x40), &iStack40);\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(iVar6 + 0x40));\n        fcn.180013e10(iVar6, (iStack32 - iStack40) / 2, (iStack28 - iStack36) / 2, 0);\n        fcn.180013e58(iVar6, 1);\n    }\n    puVar1 = *(*(arg1 + 8) + 0x80);\n    iVar3 = (***puVar1)(puVar1, 0x180055850, arg1 + 0x90);\n    if (iVar3 < 0) {\n        puVar1 = *(*(arg1 + 8) + 0x80);\n        uVar5 = (***puVar1)(puVar1, 0x1800558b0, &piStackX8);\n        if (uVar5 < 0) {\n            return uVar5;\n        }\n        (**(*piStackX8 + 0x28))(piStackX8, &piStackX16);\n        (**(*piStackX8 + 0x10))();\n        if (piStackX16 == NULL) {\n            return 0x80004005;\n        }\n        uVar4 = (***piStackX16)(piStackX16, 0x1800594b0, arg1 + 0x10);\n        (**(*piStackX16 + 0x10))();\n        if (uVar4 < 0) {\n            return uVar4;\n        }\n        (****(arg1 + 0x10))();\n    }\n    else {\n        uVar4 = (**(**(arg1 + 0x90) + 0x18))();\n        if (*(arg1 + 0x98) == 0) {\n            uVar4 = 0x80004003;\n        }\n        if (uVar4 < 0) {\n            if (bVar8) {\n                fcn.180013e10(iVar6, uStack56, uStack52, iStack48 - uStack56);\n                fcn.180013e58(iVar6, 0);\n            }\n            return uVar4;\n        }\n    }\n    uVar4 = fcn.18002a300(arg1);\n    if (bVar8) {\n        fcn.180013e10(iVar6, uStack56, uStack52, iStack48 - uStack56);\n        fcn.180013e58(iVar6, 0);\n    }\n    return uVar4;\n}\n",
        "token_count": 989
    },
    "18002c34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.18002c348(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    code *pcVar3;\n    char cVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    uint64_t arg2_00;\n    ulong *puVar8;\n    uint64_t *puVar9;\n    uchar auStack616 [32];\n    uint32_t uStack584;\n    uint32_t uStack576;\n    uint32_t uStack568;\n    int32_t iStack552;\n    uint16_t auStack548 [2];\n    uchar auStack544 [24];\n    uint16_t uStack520;\n    uint16_t uStack518;\n    uint16_t uStack516;\n    int16_t iStack512;\n    uint16_t uStack510;\n    uint16_t uStack508;\n    int16_t iStack504;\n    uint16_t uStack502;\n    uint16_t uStack500;\n    uint16_t uStack498;\n    uint16_t uStack496;\n    uint16_t uStack494;\n    int64_t iStack488;\n    ulong uStack480;\n    uint uStack472;\n    ulong uStack464;\n    uint uStack456;\n    int64_t iStack448;\n    ushort auStack440 [4];\n    ulong uStack432;\n    ushort auStack416 [4];\n    ulong uStack408;\n    ushort auStack392 [4];\n    uint uStack384;\n    ushort auStack368 [4];\n    double dStack360;\n    ushort auStack344 [4];\n    uchar uStack336;\n    ushort auStack320 [4];\n    ulong uStack312;\n    ushort auStack296 [4];\n    ulong uStack288;\n    ushort auStack272 [4];\n    ulong uStack264;\n    ushort auStack248 [4];\n    ulong uStack240;\n    ulong uStack224;\n    ulong auStack216 [2];\n    uchar auStack200 [24];\n    uchar auStack176 [24];\n    uchar auStack152 [24];\n    uchar auStack128 [24];\n    uchar auStack104 [24];\n    uchar auStack80 [24];\n    uchar uStack56;\n    char cStack55;\n    char cStack54;\n    int64_t iStack53;\n    uint64_t uStack32;\n    \n    uStack224 = 0xfffffffffffffffe;\n    uStack32 = *0x18006ed40 ^ auStack616;\n    arg2_00 = arg3;\n    puVar7 = NULL;\n    iStack552 = 0;\n    if (*(arg1 + 0x90) == 0) {\n        fcn.180015288();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    if (*(arg1 + 0xa8) == 0) {\n        fcn.180015288();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    fcn.180021ee4(auStack544);\n    iStack552 = 3;\n    fcn.180028790(*(arg1 + 0xa8), arg2_00, &iStack552);\n    if (iStack552 == 3) {\n        fcn.1800222d8(arg2, auStack544);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack544);\n        goto code_r0x00018002ce40;\n    }\n    arg1_00 = *(arg1 + 0xa8);\n    cVar4 = fcn.180025c74(arg1_00, arg2_00, auStack548);\n    if (cVar4 == '\\0') {\n        fcn.1800222d8(arg2, auStack544);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack544);\n        goto code_r0x00018002ce40;\n    }\n    if (auStack548[0] < 0x82) {\n        if (auStack548[0] == 0x81) {\n            if (*(arg1_00 + 0x38) == '\\0') {\n                iVar6 = *(arg1_00 + 0x28);\n                if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                    puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x00018002ca40:\n                    puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                }\n            }\n            else if (*(arg1_00 + 0x18) != 0) {\n                iVar6 = *(arg1_00 + 0x28);\n                puVar9 = iVar6 + 0x10;\n                puVar8 = puVar7;\n                do {\n                    if (*puVar9 == arg2_00) goto code_r0x00018002ca40;\n                    puVar8 = puVar8 + 1;\n                    puVar9 = puVar9 + 10;\n                } while (puVar8 < *(arg1_00 + 0x18));\n            }\n            puVar7 = fcn.1800018b0(&iStack488, puVar7);\n            uVar5 = fcn.180022464(auStack80, *puVar7);\n            fcn.180021ec0(auStack544, uVar5);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack80);\n            LOCK();\n            piVar1 = iStack488 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iStack488 + -0x18) + 8))();\n            }\n        }\n        else if (auStack548[0] < 9) {\n            if (auStack548[0] == 8) goto code_r0x00018002cd63;\n            if (auStack548[0] == 2) {\ncode_r0x00018002c7c3:\n                if ((*(arg1_00 + 0x38) != '\\0') && (*(arg1_00 + 0x18) != 0)) {\n                    puVar9 = *(arg1_00 + 0x28) + 0x10;\n                    do {\n                        if (*puVar9 == arg2_00) break;\n                        puVar7 = puVar7 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar7 < *(arg1_00 + 0x18));\n                }\n                uVar5 = fcn.180021dd4(auStack200);\n                fcn.180021ec0(auStack544, uVar5);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack200);\n            }\n            else if (auStack548[0] == 3) {\ncode_r0x00018002c735:\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x00018002c77c:\n                        puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar9 = iVar6 + 0x10;\n                    puVar8 = puVar7;\n                    do {\n                        if (*puVar9 == arg2_00) goto code_r0x00018002c77c;\n                        puVar8 = puVar8 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar8 < *(arg1_00 + 0x18));\n                }\n                uVar5 = fcn.180021e04(auStack152, *puVar7);\n                fcn.180021ec0(auStack544, uVar5);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack152);\n            }\n            else if (auStack548[0] == 4) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x00018002c6a9:\n                        puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar9 = iVar6 + 0x10;\n                    puVar8 = puVar7;\n                    do {\n                        if (*puVar9 == arg2_00) goto code_r0x00018002c6a9;\n                        puVar8 = puVar8 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar8 < *(arg1_00 + 0x18));\n                }\n                uStack384 = *puVar7;\n                auStack392[0] = 4;\n                fcn.180021ec0(auStack544, auStack392);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack392);\n            }\n            else if (auStack548[0] == 5) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x00018002c612:\n                        puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar9 = iVar6 + 0x10;\n                    puVar8 = puVar7;\n                    do {\n                        if (*puVar9 == arg2_00) goto code_r0x00018002c612;\n                        puVar8 = puVar8 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar8 < *(arg1_00 + 0x18));\n                }\n                uStack312 = *puVar7;\n                auStack320[0] = 5;\n                fcn.180021ec0(auStack544, auStack320);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack320);\n            }\n            else if (auStack548[0] == 6) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x00018002c57d:\n                        puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar9 = iVar6 + 0x10;\n                    puVar8 = puVar7;\n                    do {\n                        if (*puVar9 == arg2_00) goto code_r0x00018002c57d;\n                        puVar8 = puVar8 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar8 < *(arg1_00 + 0x18));\n                }\n                uStack264 = *puVar7;\n                auStack272[0] = 6;\n                fcn.180021ec0(auStack544, auStack272);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack272);\n            }\n            else if (auStack548[0] == 7) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x00018002c4e6:\n                        puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar9 = iVar6 + 0x10;\n                    puVar8 = puVar7;\n                    do {\n                        if (*puVar9 == arg2_00) goto code_r0x00018002c4e6;\n                        puVar8 = puVar8 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar8 < *(arg1_00 + 0x18));\n                }\n                uStack432 = *puVar7;\n                auStack440[0] = 7;\n                fcn.180021ec0(auStack544, auStack440);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack440);\n            }\n        }\n        else if (auStack548[0] == 0xb) {\n            if ((*(arg1_00 + 0x38) != '\\0') && (*(arg1_00 + 0x18) != 0)) {\n                puVar9 = *(arg1_00 + 0x28) + 0x10;\n                do {\n                    if (*puVar9 == arg2_00) break;\n                    puVar7 = puVar7 + 1;\n                    puVar9 = puVar9 + 10;\n                } while (puVar7 < *(arg1_00 + 0x18));\n            }\n            uVar5 = fcn.180021dd4(auStack128);\n            fcn.180021ec0(auStack544, uVar5);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack128);\n        }\n        else if (auStack548[0] == 0xc) {\n            if (*(arg1_00 + 0x38) == '\\0') {\n                iVar6 = *(arg1_00 + 0x28);\n                if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                    puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x00018002c928:\n                    puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                }\n            }\n            else if (*(arg1_00 + 0x18) != 0) {\n                iVar6 = *(arg1_00 + 0x28);\n                puVar9 = iVar6 + 0x10;\n                puVar8 = puVar7;\n                do {\n                    if (*puVar9 == arg2_00) goto code_r0x00018002c928;\n                    puVar8 = puVar8 + 1;\n                    puVar9 = puVar9 + 10;\n                } while (puVar8 < *(arg1_00 + 0x18));\n            }\n            uVar5 = fcn.18002229c(auStack176, puVar7);\n            fcn.180021ec0(auStack544, uVar5);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack176);\n        }\n        else if (0xf < auStack548[0]) {\n            if (auStack548[0] < 0x12) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x00018002c899:\n                        puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar9 = iVar6 + 0x10;\n                    puVar8 = puVar7;\n                    do {\n                        if (*puVar9 == arg2_00) goto code_r0x00018002c899;\n                        puVar8 = puVar8 + 1;\n                        puVar9 = puVar9 + 10;\n                    } while (puVar8 < *(arg1_00 + 0x18));\n                }\n                uStack336 = *puVar7;\n                auStack344[0] = 0x11;\n                fcn.180021ec0(auStack544, auStack344);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack344);\n            }\n            else {\n                if (auStack548[0] == 0x12) goto code_r0x00018002c7c3;\n                if (auStack548[0] == 0x13) goto code_r0x00018002c735;\n            }\n        }\n    }\n    else if (auStack548[0] == 0x82) {\ncode_r0x00018002cd63:\n        if (*(arg1_00 + 0x38) == '\\0') {\n            iVar6 = *(arg1_00 + 0x28);\n            if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                puVar8 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x00018002cdaa:\n                puVar7 = *(iVar6 + 8 + puVar8 * 0x50) + *(arg1_00 + 0x10);\n            }\n        }\n        else if (*(arg1_00 + 0x18) != 0) {\n            iVar6 = *(arg1_00 + 0x28);\n            puVar9 = iVar6 + 0x10;\n            puVar8 = puVar7;\n            do {\n                if (*puVar9 == arg2_00) goto code_r0x00018002cdaa;\n                puVar8 = puVar8 + 1;\n                puVar9 = puVar9 + 10;\n            } while (puVar8 < *(arg1_00 + 0x18));\n        }\n        puVar7 = fcn.180014e6c(&iStack448, puVar7);\n        uVar5 = fcn.180022464(auStack104, *puVar7);\n        fcn.180021ec0(auStack544, uVar5);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack104);\n        LOCK();\n        piVar1 = iStack448 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack448 + -0x18) + 8))();\n        }\n    }\n    else if (auStack548[0] == 0x83) {\n        cVar4 = fcn.180027f80(arg1_00, arg2_00, &uStack56);\n        if (cVar4 != '\\0') {\n            dStack360 = iStack53;\n            for (; cStack55 != '\\0'; cStack55 = cStack55 + -1) {\n                dStack360 = dStack360 / *0x180056148;\n            }\n            if (cStack54 == '\\0') {\n                dStack360 = *0x180056140 - dStack360;\n            }\n            auStack368[0] = 5;\n            fcn.180021ec0(auStack544, auStack368);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack368);\n        }\n    }\n    else if (auStack548[0] == 0x85) {\n        cVar4 = fcn.18002800c(arg1_00, arg2_00, &iStack512);\n        if (cVar4 != '\\0') {\n            uStack480 = 0;\n            uStack472 = 0;\n            uStack568 = 0;\n            uStack576 = 0;\n            uStack584 = 0;\n            fcn.1800221cc(&uStack480, iStack512, uStack510, uStack508);\n            auStack248[0] = 7;\n            uStack240 = uStack480;\n            fcn.180021ec0(auStack544, auStack248);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack248);\n        }\n    }\n    else if (auStack548[0] == 0x86) {\n        cVar4 = fcn.180028088(arg1_00, arg2_00, &uStack520);\n        if (cVar4 != '\\0') {\n            uStack464 = 0;\n            uStack456 = 0;\n            uStack568 = uStack516;\n            uStack576 = uStack518;\n            uStack584 = uStack520;\n            fcn.1800221cc(&uStack464, 0x76b, 0xc, 0x1e);\n            auStack416[0] = 7;\n            uStack408 = uStack464;\n            fcn.180021ec0(auStack544, auStack416);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack416);\n        }\n    }\n    else if ((auStack548[0] == 0x87) && (cVar4 = fcn.180028104(arg1_00, arg2_00, &iStack504),  cVar4 != '\\0')) {\n        uStack568 = uStack494;\n        uStack576 = uStack496;\n        uStack584 = uStack498;\n        fcn.1800221cc(auStack216, iStack504, uStack502, uStack500);\n        auStack296[0] = 7;\n        uStack288 = auStack216[0];\n        fcn.180021ec0(auStack544, auStack296);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack296);\n    }\n    fcn.1800222d8(arg2, auStack544);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack544);\ncode_r0x00018002ce40:\n    fcn.1800349d0(uStack32 ^ auStack616);\n    return;\n}\n",
        "token_count": 5385
    },
    "18002d3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002d3e0(ulong *arg1)\n\n{\n    if (*(arg1 + 2) != 0) {\n        fcn.18000b948(*arg1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "18002d7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002d7fc(code **arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    *arg1 = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const____ptr64_.0;\n    if (arg1[1] != NULL) {\n        iVar1 = 0;\n        if (0 < arg1[2]) {\n            iVar2 = 0;\n            do {\n                if (*(arg1[1] + iVar2 + 0x10) != 0) {\n                    fcn.18000b948(*(arg1[1] + iVar2));\n                }\n                iVar1 = iVar1 + 1;\n                iVar2 = iVar2 + 0x18;\n            } while (iVar1 < arg1[2]);\n        }\n        fcn.18000b948(arg1[1]);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "18002d8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002d8f0(int64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    ulong *puVar1;\n    ulong uVar2;\n    code *pcVar3;\n    \n    if (arg2 < 0) {\n        fcn.180015288();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    if (*(arg1 + 0x10) <= arg2) {\n        fcn.18002d3f8(arg1, arg2 + 1, 0xffffffffffffffff);\n    }\n    puVar1 = *(arg1 + 8) + arg2 * 0x18;\n    if (puVar1 != arg3) {\n        uVar2 = *arg3;\n        if (*(arg3 + 2) != 0) {\n            *arg3 = 0;\n        }\n        *puVar1 = uVar2;\n        puVar1[1] = arg3[1];\n        *(puVar1 + 2) = *(arg3 + 2);\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "18002d9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18002d9dc(int64_t **arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint32_t *puVar4;\n    ulong *puVar5;\n    code *pcVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    ulong *puVar10;\n    uint32_t **ppuVar11;\n    int64_t iVar12;\n    uint16_t in_R8W;\n    ulong uVar13;\n    uint16_t in_R9W;\n    uint64_t arg4;\n    uint8_t *puVar14;\n    uint auStackX8 [2];\n    uint uStackX16;\n    ulong *in_stack_00000028;\n    uint8_t *in_stack_00000030;\n    int64_t in_stack_00000038;\n    ulong uStack264;\n    uchar uStack256;\n    uchar uStack255;\n    ushort uStack254;\n    uint uStack252;\n    ulong uStack248;\n    int64_t iStack240;\n    uint *puStack232;\n    uint32_t uStack224;\n    uint uStack220;\n    uint uStack216;\n    int64_t iStack208;\n    int64_t iStack200;\n    uint32_t *puStack192;\n    uint32_t *puStack184;\n    int32_t iStack176;\n    uint16_t auStack168 [4];\n    ulong uStack160;\n    ulong uStack152;\n    ulong uStack144;\n    uint uStack136;\n    code *pcStack120;\n    uint uStack112;\n    code *pcStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    ulong uStack64;\n    \n    uStack64 = 0xfffffffffffffffe;\n    if (*arg1 != NULL) {\n        iStack240 = 0;\n        puStack232 = NULL;\n        uStack224 = 0;\n        uStack220 = 0;\n        uStackX16 = arg2;\n        fcn.180035830(&iStack240, 0, 0x18);\n        if (in_stack_00000030 != NULL) {\n            uStack224 = (*_sym.imp.KERNEL32.dll_lstrlenA)(in_stack_00000030);\n        }\n        auStackX8[0] = 0xfffffffd;\n        if ((in_R8W & 0xc) != 0) {\n            uStack220 = 1;\n            puStack232 = auStackX8;\n        }\n        pcStack104 = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const____ptr64_.0;\n        uStack96 = 0;\n        uStack72 = 0;\n        uStack80 = 0;\n        uStack88 = 0;\n        if (uStack224 != 0) {\n            uVar13 = SUB168(ZEXT816(0x18) * ZEXT416(uStack224), 0);\n            if (SUB168(ZEXT816(0x18) * ZEXT416(uStack224) >> 0x40, 0) != 0) {\n                uVar13 = 0xffffffffffffffff;\n            }\n            iVar9 = fcn.18000b904(uVar13);\n            iStack240 = iVar9;\n            fcn.180035830(iVar9, 0, uStack224 * 0x18);\n            puVar10 = iVar9 + (uStack224 - 1) * 0x18;\n            if (*in_stack_00000030 != 0) {\n                ppuVar11 = in_stack_00000038 + -8;\n                puVar14 = in_stack_00000030;\n                do {\n                    uVar2 = *puVar14;\n                    *puVar10 = uVar2;\n                    if ((uVar2 & 0x40) != 0) {\n                        *puVar10 = uVar2 & 0xffbf | 0x4000;\n                    }\n                    uVar3 = *puVar10;\n                    if (uVar3 < 0x4003) {\n                        if (uVar3 == 0x4002) {\n                            puVar10[1] = ppuVar11[1];\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 < 0xc) {\n                            if (uVar3 == 0xb) {\n                                *(puVar10 + 1) = -(*(ppuVar11 + 1) != 0);\n                                ppuVar11 = ppuVar11 + 1;\n                            }\n                            else if (uVar3 == 2) {\n                                *(puVar10 + 1) = *(ppuVar11 + 1);\n                                ppuVar11 = ppuVar11 + 1;\n                            }\n                            else if (uVar3 == 3) {\n                                *(puVar10 + 1) = *(ppuVar11 + 1);\n                                ppuVar11 = ppuVar11 + 1;\n                            }\n                            else if (uVar3 == 4) {\n                                *(puVar10 + 1) = ppuVar11[1];\n                                ppuVar11 = ppuVar11 + 1;\n                            }\n                            else if (uVar3 == 5) {\n                                puVar10[1] = ppuVar11[1];\n                                ppuVar11 = ppuVar11 + 1;\n                            }\n                            else if (uVar3 == 6) {\n                                puVar10[1] = *ppuVar11[1];\n                                ppuVar11 = ppuVar11 + 1;\n                            }\n                            else if (uVar3 == 7) {\n                                puVar10[1] = ppuVar11[1];\n                                ppuVar11 = ppuVar11 + 1;\n                            }\n                            else if (uVar3 == 8) {\n                                ppuVar11 = ppuVar11 + 1;\n                                puVar4 = *ppuVar11;\n                                iVar9 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                                puVar10[1] = iVar9;\n                                if ((puVar4 != NULL) && (iVar9 == 0)) {\n                                    fcn.180015240();\n                                    goto code_r0x00018002e069;\n                                }\n                            }\n                            else if (uVar3 == 9) {\n                                puVar10[1] = ppuVar11[1];\n                                ppuVar11 = ppuVar11 + 1;\n                            }\n                            else if (uVar3 == 10) {\n                                *(puVar10 + 1) = *(ppuVar11 + 1);\n                                ppuVar11 = ppuVar11 + 1;\n                            }\n                        }\n                        else if (uVar3 == 0xc) {\n                            puVar5 = ppuVar11[1];\n                            *puVar10 = *puVar5;\n                            puVar10[1] = puVar5[1];\n                            puVar10[2] = puVar5[2];\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0xd) {\n                            puVar10[1] = ppuVar11[1];\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0xe) {\n                            puVar4 = ppuVar11[1];\n                            fcn.1800150ac(&iStack200, puVar4);\n                            iVar9 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                            puVar10[1] = iVar9;\n                            if ((puVar4 != NULL) && (iVar9 == 0)) {\ncode_r0x00018002e069:\n                                fcn.180015240();\n                                break;\n                            }\n                            *puVar10 = 8;\n                            LOCK();\n                            piVar1 = iStack200 + -8;\n                            iVar8 = *piVar1;\n                            *piVar1 = *piVar1 + -1;\n                            if (0 < iVar8 + -1) goto code_r0x00018002df79;\n                            (**(**(iStack200 + -0x18) + 8))();\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0x10) {\n                            *(puVar10 + 1) = *(ppuVar11 + 1);\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0x11) {\n                            *(puVar10 + 1) = *(ppuVar11 + 1);\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0x12) {\n                            *(puVar10 + 1) = *(ppuVar11 + 1);\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0x13) {\n                            *(puVar10 + 1) = *(ppuVar11 + 1);\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0x14) {\n                            puVar10[1] = ppuVar11[1];\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0x15) {\n                            puVar10[1] = ppuVar11[1];\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                    }\n                    else if (uVar3 < 0x400c) {\n                        if (uVar3 == 0x400b) {\n                            puStack192 = ppuVar11[1];\n                            *puStack192 = -(*puStack192 != 0) & 0xffff;\n                            puVar10[1] = puStack192;\n                            iStack176 = 0;\n                            puStack184 = puStack192;\n                            fcn.18002d8f0(&pcStack104, uStack88, &puStack192);\n                            if (iStack176 == 0) {\ncode_r0x00018002df79:\n                                ppuVar11 = ppuVar11 + 1;\n                            }\n                            else {\n                                fcn.18000b948(puStack192);\n                                ppuVar11 = ppuVar11 + 1;\n                            }\n                        }\n                        else if (uVar3 == 0x4003) {\n                            puVar10[1] = ppuVar11[1];\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0x4004) {\n                            puVar10[1] = ppuVar11[1];\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0x4005) {\n                            puVar10[1] = ppuVar11[1];\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0x4006) {\n                            puVar10[1] = ppuVar11[1];\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0x4007) {\n                            puVar10[1] = ppuVar11[1];\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0x4008) {\n                            puVar10[1] = ppuVar11[1];\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0x4009) {\n                            puVar10[1] = ppuVar11[1];\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                        else if (uVar3 == 0x400a) {\n                            puVar10[1] = ppuVar11[1];\n                            ppuVar11 = ppuVar11 + 1;\n                        }\n                    }\n                    else if (uVar3 == 0x400c) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x400d) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x4010) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x4011) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x4012) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x4013) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x4014) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x4015) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    puVar10 = puVar10 + -3;\n                    puVar14 = puVar14 + 1;\n                } while (*puVar14 != 0);\n            }\n        }\n        iVar9 = 0;\n        fcn.180021ee4(&uStack264);\n        fcn.180035830(auStack168, 0, 0x40);\n        uStack216 = 0xffffffff;\n        arg4 = 0;\n        uVar13 = 0x180059490;\n        uVar7 = (**(**arg1 + 0x30))();\n        fcn.18002d96c(&pcStack104);\n        if (uStack224 != 0) {\n            iVar12 = iStack240 + -0x18 + uStack224 * 0x18;\n            uVar2 = *in_stack_00000030;\n            while (uVar2 != 0) {\n                if ((*in_stack_00000030 == 8) || (*in_stack_00000030 == 0xe)) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar12);\n                }\n                iVar12 = iVar12 + -0x18;\n                in_stack_00000030 = in_stack_00000030 + 1;\n                uVar2 = *in_stack_00000030;\n            }\n        }\n        fcn.18000b948(iStack240);\n        iStack240 = 0;\n        if (uVar7 < 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n            if (uVar7 == 0x80020009) {\n                if (pcStack120 != NULL) {\n                    (*pcStack120)(auStack168);\n                }\n                iStack208 = fcn.18000b904(0x40);\n                if (iStack208 != 0) {\n                    arg4 = auStack168[0];\n                    uVar13 = 0;\n                    iVar9 = fcn.180031e9c(iStack208, 0, 0);\n                }\n                iVar8 = (*_sym.imp.OLEAUT32.dll_VariantInit)(uStack160);\n                if (iVar8 != 0) {\n                    fcn.180014d90(iVar9 + 0x30, uStack160, uVar13, arg4);\n                }\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(uStack160);\n                iVar8 = (*_sym.imp.OLEAUT32.dll_VariantInit)(uStack152);\n                if (iVar8 != 0) {\n                    fcn.180014d90(iVar9 + 0x18, uStack152, uVar13, arg4);\n                }\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(uStack152);\n                iVar8 = (*_sym.imp.OLEAUT32.dll_VariantInit)(uStack144);\n                if (iVar8 != 0) {\n                    fcn.180014d90(iVar9 + 0x28, uStack144, uVar13, arg4);\n                }\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(uStack144);\n                *(iVar9 + 0x20) = uStack136;\n                *(iVar9 + 0x38) = uStack112;\n                iStack208 = iVar9;\n                fcn.180035f2c(&iStack208, 0x180068520);\n                pcVar6 = swi(3);\n                (*pcVar6)();\n                return;\n            }\n            fcn.1800149c4(uVar7);\n            pcVar6 = swi(3);\n            (*pcVar6)();\n            return;\n        }\n        if (in_R9W != 0) {\n            if (in_R9W != 0xc) {\n                uVar7 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&uStack264, &uStack264, 0, in_R9W);\n                if (uVar7 < 0) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                    fcn.1800149c4(uVar7);\n                    pcVar6 = swi(3);\n                    (*pcVar6)();\n                    return;\n                }\n            }\n            if (in_R9W < 0xc) {\n                if (in_R9W == 0xb) {\n                    *in_stack_00000028 = CONCAT11(uStack255, uStack256) != 0;\n                }\n                else if (in_R9W == 2) {\n                    *in_stack_00000028 = CONCAT11(uStack255, uStack256);\n                }\n                else if (in_R9W == 3) {\n                    *in_stack_00000028 = CONCAT22(uStack254, CONCAT11(uStack255, uStack256));\n                }\n                else if (in_R9W == 4) {\n                    *in_stack_00000028 = CONCAT22(uStack254, CONCAT11(uStack255, uStack256));\n                }\n                else if (in_R9W == 5) {\n                    *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n                }\n                else if (in_R9W == 6) {\n                    *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n                }\n                else if (in_R9W == 7) {\n                    *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n                }\n                else if (in_R9W == 8) {\n                    fcn.180020fa0(in_stack_00000028, \n                                  CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256))));\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)\n                              (CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256))));\n                }\n                else if (in_R9W == 9) {\n                    *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n                }\n                else if (in_R9W == 10) {\n                    *in_stack_00000028 = CONCAT22(uStack254, CONCAT11(uStack255, uStack256));\n                }\n            }\n            else if (in_R9W == 0xc) {\n                *in_stack_00000028 = uStack264;\n                in_stack_00000028[1] = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n                in_stack_00000028[2] = uStack248;\n            }\n            else if (in_R9W == 0xd) {\n                *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n            }\n            else if (in_R9W == 0x10) {\n                *in_stack_00000028 = uStack256;\n            }\n            else if (in_R9W == 0x11) {\n                *in_stack_00000028 = uStack256;\n            }\n            else if (in_R9W == 0x12) {\n                *in_stack_00000028 = CONCAT11(uStack255, uStack256);\n            }\n            else if (in_R9W == 0x13) {\n                *in_stack_00000028 = CONCAT22(uStack254, CONCAT11(uStack255, uStack256));\n            }\n            else if (in_R9W == 0x14) {\n                *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n            }\n            else if (in_R9W == 0x15) {\n                *in_stack_00000028 = CONCAT44(uStack252, CONCAT22(uStack254, CONCAT11(uStack255, uStack256)));\n            }\n        }\n        fcn.18002d7fc(&pcStack104);\n        if (iStack240 != 0) {\n            fcn.18000b948(iStack240);\n        }\n    }\n    return;\n}\n",
        "token_count": 4844
    },
    "18002fc5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t * fcn.18002fc5c(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    int32_t iVar9;\n    ulong *puVar10;\n    int64_t *piVar11;\n    \n    piVar11 = NULL;\n    piVar5 = fcn.18002fa38(arg1, arg2);\n    piVar8 = piVar5;\n    if ((piVar5 == NULL) && (iVar6 = fcn.18000d970(arg1),  iVar6 != 0)) {\n        puVar10 = *(iVar6 + 0x88);\n        while (piVar8 = piVar5,  puVar10 != NULL) {\n            puVar1 = *puVar10;\n            piVar8 = puVar10[2];\n            if (((piVar8[1] != 0) && (piVar8[1] == *(iVar6 + 0xd8))) ||\n               ((puVar10 = puVar1,  *piVar8 != 0 && (iVar7 = (*_sym.imp.USER32.dll_GetFocus)(),  *piVar8 == iVar7))))\n            break;\n        }\n    }\n    iVar9 = 0;\n    do {\n        piVar8 = fcn.18002fa98(arg1, piVar8, arg3);\n        if (piVar8 == NULL) {\n            return NULL;\n        }\n        iVar3 = fcn.18002f360(piVar8);\n        if ((iVar3 != 0) && (piVar8 = fcn.180014158(arg1, piVar8, 0),  piVar8 == NULL)) {\n            return NULL;\n        }\n        if (piVar8 == NULL) {\ncode_r0x00018002fd43:\n            if (piVar8[1] == 0) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                piVar8 = (*pcVar2)();\n                return piVar8;\n            }\n            uVar4 = (**(*piVar8[1] + 0xf0))();\n            uVar4 = uVar4 >> 0x1b & 1;\n        }\n        else {\n            if (piVar8[1] == 0) {\n                iVar6 = *piVar8;\n            }\n            else {\n                iVar6 = *(piVar8[1] + 0x48);\n            }\n            if (iVar6 == 0) goto code_r0x00018002fd43;\n            uVar4 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n        }\n        if (uVar4 == 0) {\n            return piVar8;\n        }\n        if (piVar8 == piVar11) {\n            return NULL;\n        }\n        if (piVar11 == NULL) {\n            piVar11 = piVar8;\n        }\n        iVar9 = iVar9 + 1;\n        if (0x1ff < iVar9) {\n            return NULL;\n        }\n    } while( true );\n}\n",
        "token_count": 713
    },
    "1800306d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800306dc(int64_t *arg1)\n\n{\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    if ((arg1[8] != 0) && (*(arg1 + 9) != 0)) {\n        (**(*arg1 + 0xc0))();\n    }\n    arg1[8] = 0;\n    return;\n}\n",
        "token_count": 110
    },
    "180030c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t * fcn.180030c54(uint32_t *arg1, ulong arg2, ulong arg3)\n\n{\n    if (arg2 < 8) {\n        arg2._0_4_ = 8;\n    }\n    if (arg3 < 2) {\n        arg3._0_4_ = 0x40;\n    }\n    *(arg1 + 4) = 0;\n    *(arg1 + 2) = 0;\n    arg1[1] = arg3;\n    *arg1 = arg2;\n    return arg1;\n}\n",
        "token_count": 126
    },
    "180030ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180030cac(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    if (*(arg1 + 4) == 0) {\n        iVar2 = fcn.18002f2d8(arg1 + 2, arg1[1], *arg1);\n        uVar1 = arg1[1];\n        puVar3 = iVar2 + 8 + (uVar1 - 1) * *arg1;\n        while (uVar1 = uVar1 - 1,  -1 < uVar1) {\n            *puVar3 = *(arg1 + 4);\n            *(arg1 + 4) = puVar3;\n            puVar3 = puVar3 - *arg1;\n        }\n    }\n    *(arg1 + 4) = **(arg1 + 4);\n    return;\n}\n",
        "token_count": 202
    },
    "18003113": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.18003113c(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    fcn.180033338();\n    fcn.180033270();\n    fcn.1800331ec();\n    if (arg1 == 0) {\n        iVar2 = fcn.18001c528();\n        if (iVar2 != 0) {\n            piVar1 = *(iVar2 + 0x80);\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 8))(piVar1, 1);\n            }\n            *(iVar2 + 0x80) = 0;\n        }\n        iVar2 = fcn.18001dfbc();\n        if (*(iVar2 + 0x17c) == 1) {\n            (*_sym.imp.ole32.dll_CoFreeUnusedLibraries)();\n            (*_sym.imp.ole32.dll_OleUninitialize)();\n            *(iVar2 + 0x17c) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "1800314b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.1800314b0(ulong arg1, ulong *arg2, uint8_t *arg3, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    bool bVar6;\n    uint32_t uVar7;\n    ulong uVar8;\n    uint32_t *puVar9;\n    uint32_t *puVar10;\n    uint16_t uVar11;\n    uint32_t **ppuVar12;\n    uint16_t uVar13;\n    uint64_t uVar14;\n    int32_t iVar15;\n    int16_t in_stack_00000028;\n    int32_t in_stack_00000030;\n    uint in_stack_00000034;\n    int32_t *in_stack_00000038;\n    int64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    ulong uVar16;\n    uint32_t *puStack64;\n    int64_t iStack56;\n    int32_t iStack48;\n    \n    uVar16 = 0xfffffffffffffffe;\n    *arg2 = arg1;\n    ppuVar12 = arg2 + 1;\n    if ((in_stack_00000028 == 6) || (in_stack_00000028 == 0xc)) {\n        *ppuVar12 = arg4;\n        ppuVar12 = arg2 + 2;\n    }\n    piVar5 = CONCAT44(in_stack_00000034, in_stack_00000030);\n    iVar3 = *piVar5;\n    bVar6 = false;\n    iVar15 = *(piVar5 + 2);\n    in_stack_00000030 = *(piVar5 + 0x14);\n    uVar1 = *arg3;\n    do {\n        if (uVar1 == 0) {\ncode_r0x0001800318e3:\n            if (iVar15 < 1) {\n                if (*arg3 == 0) {\n                    uVar14 = 0;\n                }\n                else {\n                    *in_stack_00000038 = *(piVar5 + 2);\n                    uVar14 = 0x8002000f;\n                }\n            }\n            else {\n                uVar14 = 0x8002000e;\ncode_r0x0001800318ee:\n                *in_stack_00000038 = iVar15;\n            }\n            return uVar14;\n        }\n        iVar15 = iVar15 + -1;\n        uVar1 = *arg3;\n        uVar11 = uVar1;\n        if ((uVar1 != 0xff) && ((uVar1 & 0x40) != 0)) {\n            uVar11 = uVar1 & 0xffbf | 0x4000;\n        }\n        if (iVar15 < in_stack_00000030) {\n            if (uVar11 != 0xff) {\n                if ((!bVar6) && (uVar11 == 0xc)) {\n                    *0x1800740f0 = 10;\n                    *0x1800740f8 = 0x80020004;\n                    puVar10 = 0x1800740f0;\n                    goto code_r0x00018003168b;\n                }\n                goto code_r0x0001800318e3;\n            }\n            iVar15 = *(piVar5 + 0x14);\n            in_stack_00000030 = 0;\n            bVar6 = true;\n        }\n        else {\n            if (uVar11 == 0xff) goto code_r0x0001800318e3;\n            puVar9 = iVar3 + iVar15 * 0x18;\n            puVar10 = puVar9;\n            if ((uVar11 != 0xc) && (uVar11 != *puVar9)) {\n                puVar10 = in_stack_00000040 + iVar15 * 0x18;\n                uVar13 = uVar11;\n                if (uVar11 == 0xe) {\n                    uVar13 = 8;\n                }\n                if (*puVar9 != uVar13) {\n                    uVar7 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(puVar10, puVar9, 0, uVar13, uVar16);\n                    uVar14 = uVar7;\n                    if (uVar7 < 0) goto code_r0x0001800318ee;\n                }\n                if (uVar11 == 0xe) {\n                    if (*puVar9 == uVar13) {\n                        uVar8 = fcn.180020ef8(*(puVar9 + 2));\n                        *(puVar10 + 2) = uVar8;\n                        *puVar10 = 8;\n                    }\n                    else {\n                        uVar8 = fcn.180020ef8(*(puVar10 + 2));\n                        *(puVar10 + 2) = uVar8;\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n                    }\n                    uVar11 = 8;\n                }\n            }\ncode_r0x00018003168b:\n            if ((uVar11 & 0x4000) == 0) {\n                if (uVar11 < 0xc) {\n                    if (uVar11 == 0xb) {\n                        *ppuVar12 = *(puVar10 + 2) != 0;\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else if (uVar11 == 2) {\n                        *ppuVar12 = *(puVar10 + 2);\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else if (uVar11 == 3) {\n                        *ppuVar12 = puVar10[2];\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else if (uVar11 == 4) {\n                        *ppuVar12 = puVar10[2];\n                        ppuVar12 = ppuVar12 + 4;\n                    }\n                    else if (uVar11 == 5) {\n                        *ppuVar12 = *(puVar10 + 2);\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else if (uVar11 == 6) {\n                        *ppuVar12 = *(puVar10 + 2);\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else if (uVar11 == 7) {\n                        *ppuVar12 = *(puVar10 + 2);\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else if (uVar11 == 8) {\n                        *ppuVar12 = *(puVar10 + 2);\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else {\n                        if (uVar11 == 9) goto code_r0x000180031897;\n                        if (uVar11 == 10) {\n                            *ppuVar12 = puVar10[2];\n                            ppuVar12 = ppuVar12 + 1;\n                        }\n                    }\n                }\n                else if (uVar11 == 0xc) {\n                    *ppuVar12 = puVar10;\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0xd) {\ncode_r0x000180031897:\n                    *ppuVar12 = *(puVar10 + 2);\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0x10) {\n                    *ppuVar12 = *(puVar10 + 2);\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0x11) {\n                    *ppuVar12 = *(puVar10 + 2);\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0x12) {\n                    *ppuVar12 = *(puVar10 + 2);\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0x13) {\n                    *ppuVar12 = puVar10[2];\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0x14) {\n                    *ppuVar12 = *(puVar10 + 2);\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0x15) {\n                    *ppuVar12 = *(puVar10 + 2);\n                    ppuVar12 = ppuVar12 + 1;\n                }\n            }\n            else {\n                if ((uVar11 == 0x400b) && (in_stack_00000048 != 0)) {\n                    iVar2 = **(puVar10 + 2);\n                    puVar9 = fcn.18000b904(4);\n                    if (puVar9 == NULL) {\n                        puVar9 = NULL;\n                    }\n                    else {\n                        *puVar9 = iVar2 != 0;\n                    }\n                    iStack56 = *(puVar10 + 2);\n                    iStack48 = 1;\n                    puStack64 = puVar9;\n                    if ((puVar9 == NULL) || (iStack56 == 0)) {\n                        fcn.180015288();\n                        pcVar4 = swi(3);\n                        uVar14 = (*pcVar4)();\n                        return uVar14;\n                    }\n                    fcn.18002d8f0(in_stack_00000048, *(in_stack_00000048 + 0x10), &puStack64);\n                    if (iStack48 != 0) {\n                        fcn.18000b948(puStack64);\n                    }\n                }\n                else {\n                    puVar9 = *(puVar10 + 2);\n                }\n                *ppuVar12 = puVar9;\n                ppuVar12 = ppuVar12 + 1;\n            }\n            ppuVar12 = ppuVar12 + 7U & 0xfffffffffffffff8;\n        }\n        arg3 = arg3 + 1;\n        uVar1 = *arg3;\n    } while( true );\n}\n",
        "token_count": 2270
    },
    "18003193": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.180031938(int64_t arg1, uint64_t arg2, ulong noname_2, ulong *arg4, int64_t noname_4, ulong noname_5, \n                  ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                  ulong noname_12, ulong noname_13, ulong noname_14, ulong noname_15, ulong noname_16, ulong noname_17, \n                  ulong noname_18, ulong noname_19, ulong noname_20, ulong noname_21, ulong noname_22, ulong noname_23, \n                  ulong noname_24, ulong noname_25, ulong arg_e0h, ulong arg_e8h)\n\n{\n    code *pcVar1;\n    int64_t arg1_00;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int16_t iVar7;\n    uint64_t uVar8;\n    uchar *puVar9;\n    int64_t *piVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    int64_t *piVar13;\n    int64_t iVar14;\n    uint16_t uVar15;\n    ulong arg1_01;\n    uint uVar16;\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_18h;\n    ulong var_20h;\n    ulong pvargDest;\n    ulong var_40h;\n    ulong var_48h;\n    ulong var_bp_50h;\n    ulong var_58h;\n    ulong var_60h;\n    ulong var_68h;\n    ulong var_70h;\n    ulong var_78h;\n    ulong var_88h;\n    ulong var_90h;\n    ulong var_c0h;\n    ulong var_c8h;\n    ulong var_d0h;\n    ulong uStack272;\n    uchar auStack264 [80];\n    uchar auStack184 [4];\n    int32_t iStack180;\n    uchar *puStack176;\n    ulong uStack168;\n    int32_t iStack160;\n    uint64_t uStack152;\n    ulong uStack144;\n    ulong uStack136;\n    ulong uStack128;\n    int64_t iStack120;\n    ulong *puStack112;\n    code *pcStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    ulong uStack64;\n    uint64_t uStack48;\n    \n    puVar11 = &stack0xfffffffffffffef8;\n    uStack64 = 0xfffffffffffffffe;\n    uStack48 = *0x18006ed40 ^ &stack0xffffffffffffff48;\n    uStack272 = 0x18003199f;\n    uStack152 = arg2;\n    iStack120 = arg1;\n    puStack112 = arg4;\n    fcn.18001e9c8(&stack0xffffffffffffff58, *(arg1 + 0x38));\n    piVar13 = NULL;\n    auStack184[0] = 0;\n    puStack176 = &stack0xffffffffffffff48;\n    if (*(arg2 + 0x10) != 0) {\n        puStack176 = *(arg2 + 0x10);\n    }\n    uStack272 = 0x1800319c0;\n    uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    arg1_01 = *(arg2 + 0x20);\n    uVar15 = *(arg2 + 0x18);\n    puVar9 = puStack176;\n    if ((noname_2 & 0xc) != 0) {\n        uStack272 = 0x1800319e1;\n        cVar2 = fcn.180014af8(uVar3 + 3);\n        if (cVar2 == '\\0') {\n            puVar12 = &stack0xfffffffffffffef8;\n            if (iStack160 != 0) {\n                uStack272 = 0x1800319f6;\n                fcn.18001dd14(0, uStack168);\n                puVar12 = &stack0xfffffffffffffef8;\n            }\n            goto code_r0x000180031e67;\n        }\n        uStack272 = 0x180031a2b;\n        iVar5 = fcn.180048870();\n        puVar12 = puStack176;\n        iVar5 = -iVar5;\n        puVar11 = &stack0xfffffffffffffef8 + iVar5;\n        puVar9 = &stack0xffffffffffffff48 + iVar5;\n        *(&stack0xfffffffffffffef0 + iVar5) = 0x180031a45;\n        iVar4 = fcn.1800341d0(puVar9, uVar3 + 3, puVar12, uVar3);\n        uVar8 = uStack152;\n        if (iVar4 != 0) {\n            if (iVar4 == 0xc) {\n                *(&stack0xfffffffffffffef0 + iVar5) = 0x180031a6e;\n                fcn.180015240();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if ((iVar4 == 0x16) || (iVar4 == 0x22)) {\n                *(&stack0xfffffffffffffef0 + iVar5) = 0x180031a68;\n                fcn.180015288();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if (iVar4 != 0x50) {\n                *(&stack0xfffffffffffffef0 + iVar5) = 0x180031a62;\n                fcn.180015288();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        iVar7 = *(uStack152 + 0x18);\n        if (iVar7 == 8) {\n            iVar7 = 0xe;\n        }\n        puVar9[uVar3] = 0xff;\n        puVar9[uVar3 + 1] = iVar7;\n        puVar9[uVar3 + 2] = 0;\n        arg1_01 = *(uVar8 + 0x28);\n        uVar15 = 0;\n    }\n    uVar3 = *(noname_4 + 0x10);\n    *(puVar11 + -8) = 0x180031acb;\n    cVar2 = fcn.180014af8(uVar3 * 0x18);\n    puVar12 = puVar11;\n    if (cVar2 == '\\0') {\n        if (iStack160 != 0) {\n            *(puVar11 + -8) = 0x180031ae0;\n            fcn.18001dd14(0, uStack168);\n        }\n        goto code_r0x000180031e67;\n    }\n    if (0x5555555 < *(noname_4 + 0x10)) {\n        if (iStack160 != 0) {\n            *(puVar11 + -8) = 0x180031b05;\n            fcn.18001dd14(0, uStack168);\n        }\n        goto code_r0x000180031e67;\n    }\n    iVar14 = *(noname_4 + 0x10) * 0x18;\n    *(puVar11 + -8) = 0x180031b31;\n    iVar5 = fcn.180048870();\n    iVar5 = -iVar5;\n    puStack176 = puVar11 + iVar5 + 0x50;\n    *(puVar11 + iVar5 + -8) = 0x180031b47;\n    fcn.180035830(puVar11 + iVar5 + 0x50, 0, iVar14);\n    *(puVar11 + iVar5 + -8) = 0x180031b53;\n    iVar4 = fcn.1800312c0(puVar9);\n    iStack180 = iVar4;\n    *(puVar11 + iVar5 + -8) = 0x180031b61;\n    cVar2 = fcn.180014af8(iVar4 + 0x20);\n    if (cVar2 == '\\0') {\n        puVar12 = puVar11 + iVar5;\n        if (iStack160 != 0) {\n            *(puVar11 + iVar5 + -8) = 0x180031b76;\n            fcn.18001dd14(0, uStack168);\n            puVar12 = puVar11 + iVar5;\n        }\n        goto code_r0x000180031e67;\n    }\n    *(puVar11 + iVar5 + -8) = 0x180031b96;\n    iVar14 = fcn.180048870();\n    iVar14 = -iVar14;\n    puVar12 = puVar11 + iVar14 + iVar5 + 0x50;\n    pcStack104 = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const____ptr64_.0;\n    uStack96 = 0;\n    uStack72 = 0;\n    uStack80 = 0;\n    uStack88 = 0;\n    *(puVar11 + iVar14 + iVar5 + 0x40) = &stack0xffffffffffffff98;\n    *(puVar11 + iVar14 + iVar5 + 0x38) = puStack176;\n    *(puVar11 + iVar14 + iVar5 + 0x30) = noname_5;\n    *(puVar11 + iVar14 + iVar5 + 0x28) = noname_4;\n    *(puVar11 + iVar14 + iVar5 + 0x20) = uVar15;\n    arg1_00 = iStack120;\n    *(puVar11 + iVar14 + iVar5 + -8) = 0x180031bfc;\n    uVar3 = fcn.1800314b0(arg1_00, puVar12, puVar9, &stack0xffffffffffffff70);\n    uStack152 = uStack152 & 0xffffffff00000000 | uVar3;\n    piVar10 = NULL;\n    piVar6 = piVar13;\n    if (uVar3 == 0) {\n        piVar6 = piVar10;\n        if (uVar15 == 4) {\n            *(puVar11 + iVar14 + iVar5 + -8) = 0x180031c89;\n            uVar16 = fcn.1800338a0(arg1_01, puVar12);\n            uStack144 = CONCAT44(uStack144._4_4_, uVar16);\n        }\n        else if (uVar15 == 5) {\n            *(puVar11 + iVar14 + iVar5 + -8) = 0x180031c73;\n            uStack144 = fcn.1800338a0(arg1_01, puVar12);\n        }\n        else if (uVar15 == 7) {\n            *(puVar11 + iVar14 + iVar5 + -8) = 0x180031c5d;\n            uStack144 = fcn.1800338a0(arg1_01, puVar12);\n        }\n        else if (uVar15 - 0x14 < 2) {\n            *(puVar11 + iVar14 + iVar5 + -8) = 0x180031c34;\n            uStack144 = fcn.1800338a0(arg1_01, puVar12);\n            piVar6 = piVar13;\n        }\n        else {\n            *(puVar11 + iVar14 + iVar5 + -8) = 0x180031c49;\n            piVar6 = fcn.1800338a0(arg1_01, puVar12);\n        }\n    }\n    puVar9 = puStack176;\n    if (*(noname_4 + 0x10) != 0) {\n        do {\n            *(puVar11 + iVar14 + iVar5 + -8) = 0x180031cac;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar9 + piVar13 * 0x18);\n            uVar3 = piVar13 + 1;\n            piVar13 = uVar3;\n            arg4 = puStack112;\n        } while (uVar3 < *(noname_4 + 0x10));\n    }\n    if (uStack152 != 0) {\n        *(puVar11 + iVar14 + iVar5 + -8) = 0x180031ccb;\n        fcn.18002d7fc(&stack0xffffffffffffff98);\n        puVar12 = puVar11 + iVar14 + iVar5;\n        if (iStack160 != 0) {\n            *(puVar11 + iVar14 + iVar5 + -8) = 0x180031cdc;\n            fcn.18001dd14(0, uStack168);\n            puVar12 = puVar11 + iVar14 + iVar5;\n        }\n        goto code_r0x000180031e67;\n    }\n    *(puVar11 + iVar14 + iVar5 + -8) = 0x180031ced;\n    fcn.18003139c(&stack0xffffffffffffff98);\n    if (arg4 == NULL) {\n        if (uVar15 == 8) {\n            *(puVar11 + iVar14 + iVar5 + -8) = 0x180031e4a;\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(piVar6);\n        }\n        else if (uVar15 == 9) {\ncode_r0x000180031e31:\n            if (piVar6 != NULL) {\n                pcVar1 = *(*piVar6 + 0x10);\n                *(puVar11 + iVar14 + iVar5 + -8) = 0x180031e3f;\n                (*pcVar1)(piVar6);\n            }\n        }\n        else if (uVar15 == 0xc) {\n            *(puVar11 + iVar14 + iVar5 + -8) = 0x180031e2f;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&stack0xffffffffffffff70);\n        }\n        else if (uVar15 == 0xd) goto code_r0x000180031e31;\n    }\n    else {\n        *arg4 = uVar15;\n        if (uVar15 < 0xb) {\n            if (uVar15 == 10) {\n                *(arg4 + 1) = piVar6;\n            }\n            else if (uVar15 == 2) {\ncode_r0x000180031dd2:\n                *(arg4 + 1) = piVar6;\n            }\n            else if (uVar15 == 3) {\ncode_r0x000180031dcd:\n                *(arg4 + 1) = piVar6;\n            }\n            else if (uVar15 == 4) {\n                *(arg4 + 1) = uStack144;\n            }\n            else if (uVar15 == 5) {\n                arg4[1] = uStack144;\n            }\n            else if (uVar15 == 6) {\n                arg4[1] = uStack144;\n            }\n            else if (uVar15 == 7) {\n                arg4[1] = uStack144;\n            }\n            else if (uVar15 == 8) {\n                arg4[1] = piVar6;\n            }\n            else if (uVar15 == 9) goto code_r0x000180031ddd;\n        }\n        else if (uVar15 == 0xb) {\n            *(arg4 + 1) = -(piVar6 != 0);\n        }\n        else if (uVar15 == 0xc) {\n            *arg4 = uStack144;\n            arg4[1] = uStack136;\n            arg4[2] = uStack128;\n        }\n        else if (uVar15 == 0xd) {\ncode_r0x000180031ddd:\n            arg4[1] = piVar6;\n        }\n        else if (0xf < uVar15) {\n            if (uVar15 < 0x12) {\n                *(arg4 + 1) = piVar6;\n            }\n            else {\n                if (uVar15 == 0x12) goto code_r0x000180031dd2;\n                if (uVar15 == 0x13) goto code_r0x000180031dcd;\n                if (uVar15 - 0x14 < 2) {\n                    arg4[1] = uStack144;\n                }\n            }\n        }\n    }\n    *(puVar11 + iVar14 + iVar5 + -8) = 0x180031e54;\n    fcn.18002d7fc(&stack0xffffffffffffff98);\n    puVar12 = puVar11 + iVar14 + iVar5;\n    if (iStack160 != 0) {\n        *(puVar11 + iVar14 + iVar5 + -8) = 0x180031e65;\n        fcn.18001dd14(0, uStack168);\n        puVar12 = puVar11 + iVar14 + iVar5;\n    }\ncode_r0x000180031e67:\n    uVar8 = uStack48 ^ &stack0xffffffffffffff48;\n    *(puVar12 + -8) = 0x180031e76;\n    fcn.1800349d0(uVar8);\n    return;\n}\n",
        "token_count": 3925
    },
    "180031fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180031fbc(ushort *arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *arg2_00;\n    uchar auStack376 [32];\n    int64_t iStack344;\n    int64_t iStack336;\n    int64_t iStack328;\n    int64_t iStack320;\n    int64_t aiStack312 [2];\n    uchar auStack296 [256];\n    uint64_t uStack40;\n    \n    uStack40 = *0x18006ed40 ^ auStack376;\n    fcn.180035830(arg1, 0, 0x40);\n    arg2_00 = auStack296;\n    iVar2 = fcn.18001efb8(arg2, 0x180056b98);\n    if (iVar2 == 0) {\n        iVar2 = fcn.18001efb8(arg2, 0x180052910);\n        uVar4 = 0xf10a;\n        if (iVar2 == 0) {\n            uVar4 = 0xf108;\n        }\n        fcn.1800153cc(uVar4, auStack296, 0x100);\n        *arg1 = uVar4;\n    }\n    else {\n        arg2_00 = *(arg2 + 0x18);\n        *arg1 = *(arg2 + 0x10);\n        *(arg1 + 0x10) = *(arg2 + 0x20);\n        *(arg1 + 0x1c) = *(arg2 + 0x38);\n        if (*(*(arg2 + 0x28) + -0x10) != 0) {\n            puVar3 = fcn.1800150ac(aiStack312, *(arg2 + 0x28));\n            uVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*puVar3);\n            *(arg1 + 0xc) = uVar4;\n            LOCK();\n            piVar1 = aiStack312[0] + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(aiStack312[0] + -0x18) + 8))();\n            }\n        }\n        if (*(*(arg2 + 0x30) + -0x10) != 0) {\n            puVar3 = fcn.1800150ac(&iStack328, *(arg2 + 0x30));\n            uVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*puVar3);\n            *(arg1 + 4) = uVar4;\n            LOCK();\n            piVar1 = iStack328 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iStack328 + -0x18) + 8))();\n            }\n        }\n    }\n    puVar3 = fcn.1800150ac(&iStack344, arg2_00);\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*puVar3);\n    *(arg1 + 8) = uVar4;\n    LOCK();\n    piVar1 = iStack344 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStack344 + -0x18) + 8))();\n    }\n    if (*(arg1 + 4) == 0) {\n        iVar5 = fcn.18001e94c();\n        puVar3 = fcn.1800150ac(&iStack336, *(iVar5 + 0x20));\n        uVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*puVar3);\n        *(arg1 + 4) = uVar4;\n        LOCK();\n        piVar1 = iStack336 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack336 + -0x18) + 8))();\n        }\n    }\n    if ((*(arg1 + 0xc) == 0) && (*(arg1 + 0x10) != 0)) {\n        iVar5 = fcn.18001e94c();\n        puVar3 = fcn.1800150ac(&iStack320, *(*(iVar5 + 8) + 200));\n        uVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*puVar3);\n        *(arg1 + 0xc) = uVar4;\n        LOCK();\n        piVar1 = iStack320 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack320 + -0x18) + 8))();\n        }\n    }\n    fcn.1800349d0(uStack40 ^ auStack376);\n    return;\n}\n",
        "token_count": 1194
    },
    "18003324": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180033244(int64_t arg1)\n\n{\n    if (*(arg1 + 0x7a) != '\\0') {\n        if (*(arg1 + 0x48) != 0) {\n            (*_sym.imp.ole32.dll_CoRevokeClassObject)();\n            *(arg1 + 0x48) = 0;\n        }\n        *(arg1 + 0x7a) = 0;\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "18003339": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180033394(int64_t arg1)\n\n{\n    if (*(arg1 + 0x40) != 0) {\n        (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(0, 0);\n        *(arg1 + 0x40) = 0;\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "18003887": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00018003882c)\n\nvoid fcn.180038878(void)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    \n    fcn.18003ff44(8);\n    if (*0x1800741a8 != 1) {\n        *0x1800741a4 = 1;\n        *0x1800741a0 = 1;\n        piVar1 = sub.KERNEL32.dll_DecodePointer(*0x1800762d0);\n        if (piVar1 != NULL) {\n            piVar2 = sub.KERNEL32.dll_DecodePointer(*0x1800762c8);\n            piVar7 = piVar2;\n            piVar8 = piVar1;\ncode_r0x000180038776:\n            piVar2 = piVar2 + -1;\n            if (piVar1 <= piVar2) goto code_r0x000180038784;\n            goto code_r0x000180038790;\n        }\ncode_r0x0001800387f1:\n        fcn.1800385c0(0x18004ec18, 0x18004ec30);\n        fcn.1800385c0(0x18004ec38, 0x18004ec40);\n    }\n    fcn.18003fe44(8);\n    return;\ncode_r0x000180038784:\n    iVar3 = fcn.1800399d0();\n    if (*piVar2 != iVar3) {\ncode_r0x000180038790:\n        if (piVar1 <= piVar2) {\n            pcVar4 = sub.KERNEL32.dll_DecodePointer(*piVar2);\n            iVar3 = fcn.1800399d0();\n            *piVar2 = iVar3;\n            (*pcVar4)();\n            piVar5 = sub.KERNEL32.dll_DecodePointer(*0x1800762d0);\n            piVar6 = sub.KERNEL32.dll_DecodePointer(*0x1800762c8);\n            if ((piVar8 != piVar5) || (piVar7 != piVar6)) {\n                piVar1 = piVar5;\n                piVar2 = piVar6;\n                piVar7 = piVar6;\n                piVar8 = piVar5;\n            }\n            goto code_r0x000180038776;\n        }\n        goto code_r0x0001800387f1;\n    }\n    goto code_r0x000180038776;\n}\n",
        "token_count": 597
    },
    "1800390d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180039090)\n\nint64_t fcn.1800390dc(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int32_t aiStackX8 [4];\n    int32_t aiStackX24 [2];\n    int64_t iStackX32;\n    uchar auStack72 [32];\n    int32_t iStack40;\n    \n    aiStackX24[0] = 0;\n    aiStackX8[0] = 0;\n    if (arg1 == NULL) {\n        puVar2 = fcn.180036050();\n        *puVar2 = 0x16;\n        fcn.180039810(0, 0, 0, 0);\n        return -1;\n    }\n    iStackX32 = arg1[5];\n    if (iStackX32 - 0x45U < 0x409) {\n        iVar1 = arg1[4];\n        if ((iVar1 < 0) || (0xb < iVar1)) {\n            iVar3 = iVar1 % 0xc;\n            iStackX32 = iStackX32 + iVar1 / 0xc;\n            arg1[4] = iVar3;\n            if (iVar3 < 0) {\n                iStackX32 = iStackX32 + -1;\n                arg1[4] = iVar3 + 0xc;\n            }\n            if (0x408 < iStackX32 - 0x45U) goto code_r0x0001800390c3;\n        }\n        iVar8 = *(arg1[4] * 4 + 0x180070058);\n        uVar4 = iStackX32 >> 0x3f & 3;\n        if (((((iStackX32 + uVar4 & 3) == uVar4) &&\n             (iVar5 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iStackX32) >> 0x40, 0) + iStackX32, \n             iStackX32 != ((iVar5 >> 6) - (iVar5 >> 0x3f)) * 100)) ||\n            (iVar5 = iStackX32 + 0x76c, \n            iVar6 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar5) >> 0x40, 0) + iVar5, \n            iVar5 == ((iVar6 >> 8) - (iVar6 >> 0x3f)) * 400)) && (1 < arg1[4])) {\n            iVar8 = iVar8 + 1;\n        }\n        iVar5 = iStackX32 + -1;\n        iVar6 = iStackX32 + 299 + SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iStackX32 + 299) >> 0x40, 0);\n        iVar7 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar5) >> 0x40, 0) + iVar5;\n        iStackX32 = *arg1 + (arg1[1] +\n                            (arg1[2] +\n                            (iStackX32 * 0x16d + -0x63df +\n                            (iVar5 + (iVar5 >> 0x3f & 3) >> 2) + iVar8 +\n                            ((((iVar6 >> 8) - (iVar6 >> 0x3f)) + arg1[3]) - ((iVar7 >> 6) - (iVar7 >> 0x3f)))) * 0x18) *\n                            0x3c) * 0x3c;\n        fcn.180043134();\n        iVar1 = fcn.180042698(aiStackX24);\n        if (iVar1 != 0) {\n            fcn.1800396e8(0, 0, 0, 0, 0);\n        }\n        iVar1 = fcn.1800426d8(aiStackX8);\n        if (iVar1 != 0) {\n            fcn.1800396e8(0, 0, 0, 0, 0);\n        }\n        iStackX32 = iStackX32 + aiStackX8[0];\n        iVar1 = fcn.1800390e8(auStack72, &iStackX32);\n        if (iVar1 == 0) {\n            if ((0 < arg1[8]) || ((arg1[8] < 0 && (0 < iStack40)))) {\n                iStackX32 = iStackX32 + aiStackX24[0];\n                iVar1 = fcn.1800390e8(auStack72, &iStackX32);\n                if (iVar1 != 0) goto code_r0x0001800390c3;\n            }\n            fcn.180035bc0(arg1, auStack72, 0x24);\n            return iStackX32;\n        }\n    }\ncode_r0x0001800390c3:\n    puVar2 = fcn.180036050();\n    *puVar2 = 0x16;\n    return -1;\n}\n",
        "token_count": 1223
    },
    "180043c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180043c40(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar auStack136 [32];\n    uint uStack104;\n    uint uStack96;\n    uint uStack88;\n    uchar *puStack80;\n    uchar auStack72 [16];\n    int64_t iStack56;\n    char cStack48;\n    uchar auStack40 [8];\n    uchar auStack32 [16];\n    uint64_t uStack16;\n    \n    uStack16 = *0x18006ed40 ^ auStack136;\n    fcn.1800352ac(auStack72, arg3);\n    puStack80 = auStack72;\n    uStack88 = 0;\n    uStack96 = 0;\n    uStack104 = 0;\n    uVar1 = fcn.180045eb0(auStack32, auStack40, arg2, 0);\n    iVar2 = fcn.1800452a8(auStack32, arg1);\n    if ((uVar1 & 3) == 0) {\n        if (iVar2 == 1) {\n            if (cStack48 != '\\0') {\n                *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n            }\n            goto code_r0x000180043d24;\n        }\n        if (iVar2 != 2) goto code_r0x000180043d0f;\n    }\n    else if ((uVar1 & 1) == 0) {\n        if ((uVar1 & 2) != 0) {\n            if (cStack48 != '\\0') {\n                *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n            }\n            goto code_r0x000180043d24;\n        }\ncode_r0x000180043d0f:\n        if (cStack48 != '\\0') {\n            *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n        }\n        goto code_r0x000180043d24;\n    }\n    if (cStack48 != '\\0') {\n        *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n    }\ncode_r0x000180043d24:\n    fcn.1800349d0(uStack16 ^ auStack136);\n    return;\n}\n",
        "token_count": 542
    },
    "180043d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180043d44(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar auStack136 [32];\n    uint uStack104;\n    uint uStack96;\n    uint uStack88;\n    uchar *puStack80;\n    uchar auStack72 [16];\n    int64_t iStack56;\n    char cStack48;\n    uchar auStack40 [8];\n    uchar auStack32 [16];\n    uint64_t uStack16;\n    \n    uStack16 = *0x18006ed40 ^ auStack136;\n    fcn.1800352ac(auStack72, arg3);\n    puStack80 = auStack72;\n    uStack88 = 0;\n    uStack96 = 0;\n    uStack104 = 0;\n    uVar1 = fcn.180045eb0(auStack32, auStack40, arg2, 0);\n    iVar2 = fcn.1800458ac(auStack32, arg1);\n    if ((uVar1 & 3) == 0) {\n        if (iVar2 == 1) {\n            if (cStack48 != '\\0') {\n                *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n            }\n            goto code_r0x000180043e28;\n        }\n        if (iVar2 != 2) goto code_r0x000180043e13;\n    }\n    else if ((uVar1 & 1) == 0) {\n        if ((uVar1 & 2) != 0) {\n            if (cStack48 != '\\0') {\n                *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n            }\n            goto code_r0x000180043e28;\n        }\ncode_r0x000180043e13:\n        if (cStack48 != '\\0') {\n            *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n        }\n        goto code_r0x000180043e28;\n    }\n    if (cStack48 != '\\0') {\n        *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n    }\ncode_r0x000180043e28:\n    fcn.1800349d0(uStack16 ^ auStack136);\n    return;\n}\n",
        "token_count": 539
    },
    "180044d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.180044d5c(uint16_t *arg1, uint8_t *arg2, uint64_t arg3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int64_t aiStack40 [2];\n    int64_t iStack24;\n    char cStack16;\n    \n    if ((arg2 != NULL) && (arg3 != 0)) {\n        if (*arg2 != 0) {\n            fcn.1800352ac(aiStack40, 0);\n            if (*(aiStack40[0] + 0x14) != 0) {\n                iVar2 = fcn.1800436c0(*arg2, aiStack40);\n                if (iVar2 == 0) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                      (*(aiStack40[0] + 4), 9, arg2, 1, arg1, arg1 != NULL);\n                    if (iVar2 != 0) goto code_r0x000180044c58;\n                }\n                else {\n                    iVar2 = *(aiStack40[0] + 0x10c);\n                    if ((((1 < iVar2) && (iVar2 <= arg3)) &&\n                        (iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                           (*(aiStack40[0] + 4), 9, arg2, iVar2, arg1, arg1 != NULL),  iVar2 != 0)) ||\n                       ((*(aiStack40[0] + 0x10c) <= arg3 && (arg2[1] != 0)))) {\n                        uVar1 = *(aiStack40[0] + 0x10c);\n                        if (cStack16 == '\\0') {\n                            return uVar1;\n                        }\n                        *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n                        return uVar1;\n                    }\n                }\n                puVar3 = fcn.180036050();\n                *puVar3 = 0x2a;\n                if (cStack16 != '\\0') {\n                    *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n                }\n                return 0xffffffff;\n            }\n            if (arg1 != NULL) {\n                *arg1 = *arg2;\n            }\ncode_r0x000180044c58:\n            if (cStack16 != '\\0') {\n                *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n            }\n            return 1;\n        }\n        if (arg1 != NULL) {\n            *arg1 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 606
    },
    "1800452a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint64_t fcn.1800452a8(uint16_t *arg1, uint32_t *arg2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int32_t iVar17;\n    uint32_t auStack88 [4];\n    uint32_t uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    \n    uVar1 = arg1[5];\n    uVar15 = 0;\n    uVar10 = 1;\n    uVar11 = uVar1 & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    auStack88[0] = *(arg1 + 3);\n    auStack88[1] = *(arg1 + 1);\n    auStack88[2] = *arg1 << 0x10;\n    iVar4 = 0;\n    uVar5 = uVar15;\n    if (iVar12 == -0x3fff) {\n        do {\n            if (auStack88[uVar5] != 0) {\n                auStack88[0] = 0;\n                auStack88[1] = 0;\n                uVar15 = 2;\n                break;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 3);\n    }\n    else {\n        uStack72 = *(arg1 + 3);\n        uStack68 = *(arg1 + 1);\n        iStack64 = *arg1 << 0x10;\n        uVar9 = str.5_v_[0] >> 0x1f & 0x1f;\n        uVar3 = str.5_v_[0] + uVar9;\n        iVar17 = uVar3 >> 5;\n        uVar3 = 0x1f - ((uVar3 & 0x1f) - uVar9);\n        uVar7 = uVar3;\n        if ((auStack88[iVar17] >> (uVar3 & 0x1f) & 1) != 0) {\n            if ((auStack88[iVar17] & ~(-1 << (uVar7 & 0x1f))) == 0) {\n                for (iVar6 = iVar17 + 1; iVar6 < 3; iVar6 = iVar6 + 1) {\n                    if (auStack88[iVar6] != 0) goto code_r0x0001800453b5;\n                }\n            }\n            else {\ncode_r0x0001800453b5:\n                uVar3 = str.5_v_[0] + L'\\xffffffff' >> 0x1f & 0x1f;\n                iVar4 = str.5_v_[0] + L'\\xffffffff' + uVar3;\n                iVar13 = iVar4 >> 5;\n                uVar9 = 1 << (0x1f - ((iVar4 & 0x1f) - uVar3) & 0x1f);\n                uVar3 = auStack88[iVar13] + uVar9;\n                if ((uVar3 < auStack88[iVar13]) || (uVar3 < uVar9)) {\n                    uVar5 = 1;\n                }\n                iVar4 = uVar5;\n                auStack88[iVar13] = uVar3;\n                iVar6 = iVar13 + -1;\n                while ((-1 < iVar6 && (iVar4 = uVar5,  iVar4 != 0))) {\n                    uVar3 = auStack88[iVar6] + 1;\n                    if ((uVar3 < auStack88[iVar6]) || (uVar5 = uVar15,  uVar3 == 0)) {\n                        uVar5 = uVar10;\n                    }\n                    iVar4 = uVar5;\n                    auStack88[iVar6] = uVar3;\n                    iVar6 = iVar6 + -1;\n                }\n            }\n        }\n        auStack88[iVar17] = auStack88[iVar17] & -1 << (uVar7 & 0x1f);\n        iVar6 = iVar17 + 1;\n        if (iVar6 < 3) {\n            fcn.180035830(auStack88 + iVar6, 0, (3 - iVar6) * 4);\n        }\n        iVar17 = iVar12;\n        if (iVar4 != 0) {\n            iVar17 = uVar11 - 0x3ffe;\n        }\n        if (iVar17 < *0x1800702ac - str.5_v_[0]) {\n            auStack88[0] = 0;\n            auStack88[1] = 0;\n            uVar15 = 2;\n            iVar4 = 0;\n        }\n        else if (*0x1800702ac < iVar17) {\n            uVar11 = str.5_v_[1] >> 0x1f & 0x1f;\n            iVar4 = str.5_v_[1] + uVar11;\n            iVar12 = iVar4 >> 5;\n            uVar7 = iVar4;\n            cVar2 = uVar11;\n            if (iVar17 < *0x1800702a8) {\n                auStack88[0] = auStack88[0] & 0x7fffffff;\n                iVar4 = str.5_v_[3] + iVar17;\n                uVar7 = (uVar7 & 0x1f) - cVar2;\n                uVar5 = uVar15;\n                uVar10 = uVar15;\n                do {\n                    uVar11 = auStack88[uVar5];\n                    auStack88[uVar5] = uVar11 >> (uVar7 & 0x1f) | uVar10;\n                    uVar5 = uVar5 + 1;\n                    uVar10 = (~(-1 << (uVar7 & 0x1f)) & uVar11) << (0x20 - uVar7 & 0x1f);\n                } while (uVar5 < 3);\n                iVar6 = 2;\n                puVar8 = auStack88 + (2 - iVar12);\n                do {\n                    if (iVar6 < iVar12) {\n                        auStack88[iVar6] = 0;\n                    }\n                    else {\n                        auStack88[iVar6] = *puVar8;\n                    }\n                    iVar6 = iVar6 + -1;\n                    puVar8 = puVar8 + -1;\n                } while (-1 < iVar6);\n            }\n            else {\n                uVar7 = (uVar7 & 0x1f) - cVar2;\n                auStack88[0] = 0x80000000;\n                auStack88[1] = 0;\n                auStack88[2] = 0;\n                uVar5 = uVar15;\n                do {\n                    uVar11 = auStack88[uVar15];\n                    auStack88[uVar15] = uVar11 >> (uVar7 & 0x1f) | uVar5;\n                    uVar15 = uVar15 + 1;\n                    uVar5 = (~(-1 << (uVar7 & 0x1f)) & uVar11) << (0x20 - uVar7 & 0x1f);\n                } while (uVar15 < 3);\n                iVar6 = 2;\n                puVar8 = auStack88 + (2 - iVar12);\n                do {\n                    if (iVar6 < iVar12) {\n                        auStack88[iVar6] = 0;\n                    }\n                    else {\n                        auStack88[iVar6] = *puVar8;\n                    }\n                    iVar6 = iVar6 + -1;\n                    puVar8 = puVar8 + -1;\n                } while (-1 < iVar6);\n                iVar4 = str.5_v_[3] + *0x1800702a8;\n                uVar15 = uVar10;\n            }\n        }\n        else {\n            auStack88[0] = uStack72;\n            auStack88[1] = uStack68;\n            auStack88[2] = iStack64;\n            uVar11 = *0x1800702ac - iVar12 >> 0x1f & 0x1f;\n            iVar4 = (*0x1800702ac - iVar12) + uVar11;\n            uVar7 = (iVar4 & 0x1f) - uVar11;\n            uVar5 = uVar15;\n            uVar16 = uVar15;\n            do {\n                uVar11 = auStack88[uVar5];\n                auStack88[uVar5] = uVar11 >> (uVar7 & 0x1f) | uVar16;\n                uVar5 = uVar5 + 1;\n                uVar16 = (uVar11 & ~(-1 << (uVar7 & 0x1f))) << (0x20 - uVar7 & 0x1f);\n            } while (uVar5 < 3);\n            iVar14 = iVar4 >> 5;\n            iVar6 = 2;\n            puVar8 = auStack88 + (2 - iVar14);\n            do {\n                if (iVar6 < iVar14) {\n                    auStack88[iVar6] = 0;\n                }\n                else {\n                    auStack88[iVar6] = *puVar8;\n                }\n                iVar6 = iVar6 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar6);\n            uVar3 = str.5_v_[0] >> 0x1f & 0x1f;\n            uVar11 = str.5_v_[0] + uVar3;\n            iVar4 = uVar11 >> 5;\n            uVar11 = 0x1f - ((uVar11 & 0x1f) - uVar3);\n            uVar7 = uVar11;\n            if ((auStack88[iVar4] >> (uVar11 & 0x1f) & 1) != 0) {\n                if ((auStack88[iVar4] & ~(-1 << (uVar7 & 0x1f))) == 0) {\n                    for (iVar6 = iVar4 + 1; iVar6 < 3; iVar6 = iVar6 + 1) {\n                        if (auStack88[iVar6] != 0) goto code_r0x0001800455a2;\n                    }\n                }\n                else {\ncode_r0x0001800455a2:\n                    uVar11 = str.5_v_[0] + L'\\xffffffff' >> 0x1f & 0x1f;\n                    iVar12 = str.5_v_[0] + L'\\xffffffff' + uVar11;\n                    iVar17 = iVar12 >> 5;\n                    uVar3 = 1 << (0x1f - ((iVar12 & 0x1f) - uVar11) & 0x1f);\n                    uVar11 = auStack88[iVar17] + uVar3;\n                    if ((uVar11 < auStack88[iVar17]) || (uVar5 = uVar15,  uVar11 < uVar3)) {\n                        uVar5 = uVar10;\n                    }\n                    auStack88[iVar17] = uVar11;\n                    iVar6 = iVar17 + -1;\n                    while ((-1 < iVar6 && (uVar5 != 0))) {\n                        uVar11 = auStack88[iVar6] + 1;\n                        if ((uVar11 < auStack88[iVar6]) || (uVar5 = uVar15,  uVar11 == 0)) {\n                            uVar5 = uVar10;\n                        }\n                        auStack88[iVar6] = uVar11;\n                        iVar6 = iVar6 + -1;\n                    }\n                }\n            }\n            auStack88[iVar4] = auStack88[iVar4] & -1 << (uVar7 & 0x1f);\n            iVar6 = iVar4 + 1;\n            if (iVar6 < 3) {\n                fcn.180035830(auStack88 + iVar6, 0, (3 - iVar6) * 4);\n            }\n            uVar11 = str.5_v_[1] + L'\\x01' >> 0x1f & 0x1f;\n            iVar4 = str.5_v_[1] + L'\\x01' + uVar11;\n            uVar7 = (iVar4 & 0x1f) - uVar11;\n            uVar5 = uVar15;\n            do {\n                uVar11 = auStack88[uVar15];\n                auStack88[uVar15] = uVar11 >> (uVar7 & 0x1f) | uVar5;\n                uVar15 = uVar15 + 1;\n                uVar5 = (uVar11 & ~(-1 << (uVar7 & 0x1f))) << (0x20 - uVar7 & 0x1f);\n            } while (uVar15 < 3);\n            iVar14 = iVar4 >> 5;\n            iVar6 = 2;\n            puVar8 = auStack88 + (2 - iVar14);\n            do {\n                if (iVar6 < iVar14) {\n                    auStack88[iVar6] = 0;\n                }\n                else {\n                    auStack88[iVar6] = *puVar8;\n                }\n                iVar6 = iVar6 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar6);\n            iVar4 = 0;\n            uVar15 = 2;\n        }\n    }\n    auStack88[0] = iVar4 << (0x1fU - str.5_v_[1] & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | auStack88[0];\n    if (str.5_v_[2] == L'@') {\n        arg2[1] = auStack88[0];\n        *arg2 = auStack88[1];\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg2 = auStack88[0];\n    }\n    return uVar15;\n}\n",
        "token_count": 3199
    },
    "1800458a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint64_t fcn.1800458ac(uint16_t *arg1, uint32_t *arg2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int32_t iVar17;\n    uint32_t auStack88 [4];\n    uint32_t uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    \n    uVar1 = arg1[5];\n    uVar15 = 0;\n    uVar10 = 1;\n    uVar11 = uVar1 & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    auStack88[0] = *(arg1 + 3);\n    auStack88[1] = *(arg1 + 1);\n    auStack88[2] = *arg1 << 0x10;\n    iVar4 = 0;\n    uVar5 = uVar15;\n    if (iVar12 == -0x3fff) {\n        do {\n            if (auStack88[uVar5] != 0) {\n                auStack88[0] = 0;\n                auStack88[1] = 0;\n                uVar15 = 2;\n                break;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 3);\n    }\n    else {\n        uStack72 = *(arg1 + 3);\n        uStack68 = *(arg1 + 1);\n        iStack64 = *arg1 << 0x10;\n        uVar9 = *0x1800702c8 >> 0x1f & 0x1f;\n        uVar3 = *0x1800702c8 + uVar9;\n        iVar17 = uVar3 >> 5;\n        uVar3 = 0x1f - ((uVar3 & 0x1f) - uVar9);\n        uVar7 = uVar3;\n        if ((auStack88[iVar17] >> (uVar3 & 0x1f) & 1) != 0) {\n            if ((auStack88[iVar17] & ~(-1 << (uVar7 & 0x1f))) == 0) {\n                for (iVar6 = iVar17 + 1; iVar6 < 3; iVar6 = iVar6 + 1) {\n                    if (auStack88[iVar6] != 0) goto code_r0x0001800459b9;\n                }\n            }\n            else {\ncode_r0x0001800459b9:\n                uVar3 = *0x1800702c8 + -1 >> 0x1f & 0x1f;\n                iVar4 = *0x1800702c8 + -1 + uVar3;\n                iVar13 = iVar4 >> 5;\n                uVar9 = 1 << (0x1f - ((iVar4 & 0x1f) - uVar3) & 0x1f);\n                uVar3 = auStack88[iVar13] + uVar9;\n                if ((uVar3 < auStack88[iVar13]) || (uVar3 < uVar9)) {\n                    uVar5 = 1;\n                }\n                iVar4 = uVar5;\n                auStack88[iVar13] = uVar3;\n                iVar6 = iVar13 + -1;\n                while ((-1 < iVar6 && (iVar4 = uVar5,  iVar4 != 0))) {\n                    uVar3 = auStack88[iVar6] + 1;\n                    if ((uVar3 < auStack88[iVar6]) || (uVar5 = uVar15,  uVar3 == 0)) {\n                        uVar5 = uVar10;\n                    }\n                    iVar4 = uVar5;\n                    auStack88[iVar6] = uVar3;\n                    iVar6 = iVar6 + -1;\n                }\n            }\n        }\n        auStack88[iVar17] = auStack88[iVar17] & -1 << (uVar7 & 0x1f);\n        iVar6 = iVar17 + 1;\n        if (iVar6 < 3) {\n            fcn.180035830(auStack88 + iVar6, 0, (3 - iVar6) * 4);\n        }\n        iVar17 = iVar12;\n        if (iVar4 != 0) {\n            iVar17 = uVar11 - 0x3ffe;\n        }\n        if (iVar17 < *0x1800702c4 - *0x1800702c8) {\n            auStack88[0] = 0;\n            auStack88[1] = 0;\n            uVar15 = 2;\n            iVar4 = 0;\n        }\n        else if (*0x1800702c4 < iVar17) {\n            uVar11 = *0x1800702cc >> 0x1f & 0x1f;\n            iVar4 = *0x1800702cc + uVar11;\n            iVar12 = iVar4 >> 5;\n            uVar7 = iVar4;\n            cVar2 = uVar11;\n            if (iVar17 < *0x1800702c0) {\n                auStack88[0] = auStack88[0] & 0x7fffffff;\n                iVar4 = *0x1800702d4 + iVar17;\n                uVar7 = (uVar7 & 0x1f) - cVar2;\n                uVar5 = uVar15;\n                uVar10 = uVar15;\n                do {\n                    uVar11 = auStack88[uVar5];\n                    auStack88[uVar5] = uVar11 >> (uVar7 & 0x1f) | uVar10;\n                    uVar5 = uVar5 + 1;\n                    uVar10 = (~(-1 << (uVar7 & 0x1f)) & uVar11) << (0x20 - uVar7 & 0x1f);\n                } while (uVar5 < 3);\n                iVar6 = 2;\n                puVar8 = auStack88 + (2 - iVar12);\n                do {\n                    if (iVar6 < iVar12) {\n                        auStack88[iVar6] = 0;\n                    }\n                    else {\n                        auStack88[iVar6] = *puVar8;\n                    }\n                    iVar6 = iVar6 + -1;\n                    puVar8 = puVar8 + -1;\n                } while (-1 < iVar6);\n            }\n            else {\n                uVar7 = (uVar7 & 0x1f) - cVar2;\n                auStack88[0] = 0x80000000;\n                auStack88[1] = 0;\n                auStack88[2] = 0;\n                uVar5 = uVar15;\n                do {\n                    uVar11 = auStack88[uVar15];\n                    auStack88[uVar15] = uVar11 >> (uVar7 & 0x1f) | uVar5;\n                    uVar15 = uVar15 + 1;\n                    uVar5 = (~(-1 << (uVar7 & 0x1f)) & uVar11) << (0x20 - uVar7 & 0x1f);\n                } while (uVar15 < 3);\n                iVar6 = 2;\n                puVar8 = auStack88 + (2 - iVar12);\n                do {\n                    if (iVar6 < iVar12) {\n                        auStack88[iVar6] = 0;\n                    }\n                    else {\n                        auStack88[iVar6] = *puVar8;\n                    }\n                    iVar6 = iVar6 + -1;\n                    puVar8 = puVar8 + -1;\n                } while (-1 < iVar6);\n                iVar4 = *0x1800702d4 + *0x1800702c0;\n                uVar15 = uVar10;\n            }\n        }\n        else {\n            auStack88[0] = uStack72;\n            auStack88[1] = uStack68;\n            auStack88[2] = iStack64;\n            uVar11 = *0x1800702c4 - iVar12 >> 0x1f & 0x1f;\n            iVar4 = (*0x1800702c4 - iVar12) + uVar11;\n            uVar7 = (iVar4 & 0x1f) - uVar11;\n            uVar5 = uVar15;\n            uVar16 = uVar15;\n            do {\n                uVar11 = auStack88[uVar5];\n                auStack88[uVar5] = uVar11 >> (uVar7 & 0x1f) | uVar16;\n                uVar5 = uVar5 + 1;\n                uVar16 = (uVar11 & ~(-1 << (uVar7 & 0x1f))) << (0x20 - uVar7 & 0x1f);\n            } while (uVar5 < 3);\n            iVar14 = iVar4 >> 5;\n            iVar6 = 2;\n            puVar8 = auStack88 + (2 - iVar14);\n            do {\n                if (iVar6 < iVar14) {\n                    auStack88[iVar6] = 0;\n                }\n                else {\n                    auStack88[iVar6] = *puVar8;\n                }\n                iVar6 = iVar6 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar6);\n            uVar3 = *0x1800702c8 >> 0x1f & 0x1f;\n            uVar11 = *0x1800702c8 + uVar3;\n            iVar4 = uVar11 >> 5;\n            uVar11 = 0x1f - ((uVar11 & 0x1f) - uVar3);\n            uVar7 = uVar11;\n            if ((auStack88[iVar4] >> (uVar11 & 0x1f) & 1) != 0) {\n                if ((auStack88[iVar4] & ~(-1 << (uVar7 & 0x1f))) == 0) {\n                    for (iVar6 = iVar4 + 1; iVar6 < 3; iVar6 = iVar6 + 1) {\n                        if (auStack88[iVar6] != 0) goto code_r0x000180045ba6;\n                    }\n                }\n                else {\ncode_r0x000180045ba6:\n                    uVar11 = *0x1800702c8 + -1 >> 0x1f & 0x1f;\n                    iVar12 = *0x1800702c8 + -1 + uVar11;\n                    iVar17 = iVar12 >> 5;\n                    uVar3 = 1 << (0x1f - ((iVar12 & 0x1f) - uVar11) & 0x1f);\n                    uVar11 = auStack88[iVar17] + uVar3;\n                    if ((uVar11 < auStack88[iVar17]) || (uVar5 = uVar15,  uVar11 < uVar3)) {\n                        uVar5 = uVar10;\n                    }\n                    auStack88[iVar17] = uVar11;\n                    iVar6 = iVar17 + -1;\n                    while ((-1 < iVar6 && (uVar5 != 0))) {\n                        uVar11 = auStack88[iVar6] + 1;\n                        if ((uVar11 < auStack88[iVar6]) || (uVar5 = uVar15,  uVar11 == 0)) {\n                            uVar5 = uVar10;\n                        }\n                        auStack88[iVar6] = uVar11;\n                        iVar6 = iVar6 + -1;\n                    }\n                }\n            }\n            auStack88[iVar4] = auStack88[iVar4] & -1 << (uVar7 & 0x1f);\n            iVar6 = iVar4 + 1;\n            if (iVar6 < 3) {\n                fcn.180035830(auStack88 + iVar6, 0, (3 - iVar6) * 4);\n            }\n            uVar11 = *0x1800702cc + 1 >> 0x1f & 0x1f;\n            iVar4 = *0x1800702cc + 1 + uVar11;\n            uVar7 = (iVar4 & 0x1f) - uVar11;\n            uVar5 = uVar15;\n            do {\n                uVar11 = auStack88[uVar15];\n                auStack88[uVar15] = uVar11 >> (uVar7 & 0x1f) | uVar5;\n                uVar15 = uVar15 + 1;\n                uVar5 = (uVar11 & ~(-1 << (uVar7 & 0x1f))) << (0x20 - uVar7 & 0x1f);\n            } while (uVar15 < 3);\n            iVar14 = iVar4 >> 5;\n            iVar6 = 2;\n            puVar8 = auStack88 + (2 - iVar14);\n            do {\n                if (iVar6 < iVar14) {\n                    auStack88[iVar6] = 0;\n                }\n                else {\n                    auStack88[iVar6] = *puVar8;\n                }\n                iVar6 = iVar6 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar6);\n            iVar4 = 0;\n            uVar15 = 2;\n        }\n    }\n    auStack88[0] = iVar4 << (0x1fU - *0x1800702cc & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | auStack88[0];\n    if (*0x1800702d0 == 0x40) {\n        arg2[1] = auStack88[0];\n        *arg2 = auStack88[1];\n    }\n    else if (*0x1800702d0 == 0x20) {\n        *arg2 = auStack88[0];\n    }\n    return uVar15;\n}\n",
        "token_count": 3201
    },
    "1800475f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.1800475f8(int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint64_t uVar3;\n    uchar auStack40 [8];\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    fcn.1800352ac(auStack40, 0);\n    if (arg3 == 0) {\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        return 0;\n    }\n    if (((arg1 == 0) || (arg2 == 0)) || (0x7fffffff < arg3)) {\n        puVar2 = fcn.180036050();\n        *puVar2 = 0x16;\n        fcn.180039810(0, 0, 0, 0);\ncode_r0x000180047557:\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        uVar3 = 0x7fffffff;\n    }\n    else {\n        if (*(iStack32 + 8) == 0) {\n            uVar3 = fcn.180047e7c(arg1, arg2, arg3, 0);\n        }\n        else {\n            iVar1 = fcn.180047df0(auStack40, *(iStack32 + 0xc), 0x1001, arg1);\n            if (iVar1 == 0) goto code_r0x000180047557;\n            uVar3 = iVar1 - 2;\n        }\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 443
    },
    "18001452": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong * fcn.180014520(ulong *arg1, ulong *arg2)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    iVar5 = arg1[1];\n    uVar1 = *arg1;\n    iVar4 = iVar5;\n    if (iVar5 != 0) {\n        do {\n            iVar3 = iVar4;\n            uVar2 = fcn.180013fc0(*(iVar3 + 0x10));\n            iVar4 = iVar3;\n            if ((uVar2 >> 0x11 & 1) != 0) break;\n            iVar4 = *(iVar3 + 8);\n            iVar5 = iVar3;\n        } while (iVar4 != 0);\n        if (iVar4 != 0) {\n            arg2[1] = iVar4;\n            goto code_r0x000180014571;\n        }\n    }\n    arg2[1] = iVar5;\ncode_r0x000180014571:\n    *arg2 = uVar1;\n    return arg2;\n}\n",
        "token_count": 248
    },
    "18001b34": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.18001b348(int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    if ((arg3 != 0) && (arg2 == 0)) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((~*(arg1 + 0x20) & 1) == 0) {\n        if (arg3 != 0) {\n            do {\n                uVar4 = 0xfffffff;\n                if (arg3 < 0xfffffff) {\n                    uVar4 = arg3 & 0xffffffff;\n                }\n                uVar3 = uVar4 * 8;\n                uVar2 = fcn.1800211d8(arg1, arg2, uVar3);\n                if (uVar2 != uVar3) {\n                    fcn.18002279c(3, 0);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                arg2 = arg2 + uVar4 * 8;\n                arg3 = arg3 - uVar4;\n            } while (arg3 != 0);\n        }\n    }\n    else if (arg3 != 0) {\n        do {\n            uVar4 = 0xfffffff;\n            if (arg3 < 0xfffffff) {\n                uVar4 = arg3 & 0xffffffff;\n            }\n            fcn.180021740(arg1, arg2, uVar4 << 3);\n            arg2 = arg2 + uVar4 * 8;\n            arg3 = arg3 - uVar4;\n        } while (arg3 != 0);\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "18002017": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.180020174(int64_t lpCriticalSection)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint8_t *puVar4;\n    uint64_t uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x28);\n    iVar2 = *(lpCriticalSection + 4);\n    uVar8 = *(lpCriticalSection + 8);\n    if ((iVar2 <= uVar8) || ((*(*(lpCriticalSection + 0x10) + uVar8 * 0x10) & 1) != 0)) {\n        uVar8 = 1;\n        iVar7 = 1;\n        if (1 < iVar2) {\n            puVar4 = *(lpCriticalSection + 0x10);\n            do {\n                puVar4 = puVar4 + 0x10;\n                if ((*puVar4 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n                uVar8 = uVar8 + 1;\n            } while (iVar7 < iVar2);\n        }\n        if (iVar2 <= uVar8) {\n            uVar9 = iVar2 + 0x20;\n            if (*(lpCriticalSection + 0x10) == 0) {\n                if (0xffffffff < uVar9 << 4) {\n                    fcn.180001030(0x80070057);\n                    pcVar3 = swi(3);\n                    uVar5 = (*pcVar3)();\n                    return uVar5;\n                }\n                iVar7 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2);\n            }\n            else {\n                uVar6 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar6);\n                if (0xffffffff < uVar9 << 4) {\n                    fcn.180001030(0x80070057);\n                    pcVar3 = swi(3);\n                    uVar5 = (*pcVar3)();\n                    return uVar5;\n                }\n                iVar7 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)(uVar6, uVar9 << 4 & 0xffffffff, 0x2002);\n            }\n            if (iVar7 == 0) {\n                if (*(lpCriticalSection + 0x10) != 0) {\n                    uVar6 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                    (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar6);\n                }\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x28);\n                fcn.180015240();\n                pcVar3 = swi(3);\n                uVar5 = (*pcVar3)();\n                return uVar5;\n            }\n            iVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar7);\n            fcn.180035830(*(lpCriticalSection + 4) * 0x10 + iVar7, 0, uVar9 - *(lpCriticalSection + 4) << 4);\n            *(lpCriticalSection + 4) = uVar9;\n            *(lpCriticalSection + 0x10) = iVar7;\n        }\n    }\n    if (*(lpCriticalSection + 0xc) <= uVar8) {\n        *(lpCriticalSection + 0xc) = uVar8 + 1;\n    }\n    puVar1 = *(lpCriticalSection + 0x10) + uVar8 * 0x10;\n    *puVar1 = *puVar1 | 1;\n    *(lpCriticalSection + 8) = uVar8 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x28);\n    return uVar8;\n}\n",
        "token_count": 844
    },
    "18002163": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.18002163c(int64_t arg1, uint32_t *arg2)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uchar auStack120 [32];\n    uchar auStack88 [64];\n    uint64_t uStack24;\n    \n    uStack24 = *0x18006ed40 ^ auStack120;\n    if (arg2 != NULL) {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002279c(4, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar4 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar4 && uVar4 != *(arg1 + 0x40)) {\n            fcn.180021474(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n        }\n        uVar1 = **(arg1 + 0x38);\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        *arg2 = uVar1;\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002279c(4, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar4 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar4 && uVar4 != *(arg1 + 0x40)) {\n            fcn.180021474(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n        }\n        uVar1 = **(arg1 + 0x38);\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        if ((uVar1 < 0x40) && (uVar3 = fcn.1800211d8(arg1, auStack88, uVar1),  uVar3 == uVar1)) {\n            auStack88[uVar1] = 0;\n            fcn.1800215d4(auStack88);\n        }\n    }\n    fcn.1800349d0(uStack24 ^ auStack120);\n    return;\n}\n",
        "token_count": 580
    },
    "1800218b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.1800218bc(int64_t arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    \n    if (arg2 < 0xffff) {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002279c(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar2 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n            fcn.1800213b4(arg1);\n        }\n        **(arg1 + 0x38) = arg2;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n    }\n    else {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002279c(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar2 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n            fcn.1800213b4(arg1);\n        }\n        **(arg1 + 0x38) = 0xffff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n        if (arg2 < 0xffffffff) {\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.18002279c(2, *(arg1 + 0x18));\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uVar2 = *(arg1 + 0x38) + 4;\n            if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n                fcn.1800213b4(arg1);\n            }\n            **(arg1 + 0x38) = arg2;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n        }\n        else {\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.18002279c(2, *(arg1 + 0x18));\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uVar2 = *(arg1 + 0x38) + 4;\n            if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n                fcn.1800213b4(arg1);\n            }\n            **(arg1 + 0x38) = 0xffffffff;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.18002279c(2, *(arg1 + 0x18));\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uVar2 = *(arg1 + 0x38) + 8;\n            if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n                fcn.1800213b4(arg1);\n            }\n            **(arg1 + 0x38) = arg2;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 8;\n        }\n    }\n    return;\n}\n",
        "token_count": 900
    },
    "180021a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.180021a08(int64_t arg1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    uint32_t *puVar4;\n    code *pcVar5;\n    uint64_t uVar6;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002279c(4, *(arg1 + 0x18));\n        pcVar5 = swi(3);\n        uVar6 = (*pcVar5)();\n        return uVar6;\n    }\n    uVar6 = *(arg1 + 0x38) + 2;\n    if (*(arg1 + 0x40) <= uVar6 && uVar6 != *(arg1 + 0x40)) {\n        fcn.180021474(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n    }\n    puVar3 = *(arg1 + 0x38);\n    uVar1 = *puVar3;\n    *(arg1 + 0x38) = puVar3 + 1;\n    if (uVar1 == 0xffff) {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002279c(4, *(arg1 + 0x18));\n            pcVar5 = swi(3);\n            uVar6 = (*pcVar5)();\n            return uVar6;\n        }\n        if (*(arg1 + 0x40) <= puVar3 + 3 && puVar3 + 3 != *(arg1 + 0x40)) {\n            fcn.180021474(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 4);\n        }\n        puVar4 = *(arg1 + 0x38);\n        uVar2 = *puVar4;\n        uVar6 = uVar2;\n        *(arg1 + 0x38) = puVar4 + 1;\n        if (uVar2 == 0xffffffff) {\n            if ((*(arg1 + 0x20) & 1) == 0) {\n                fcn.18002279c(4, *(arg1 + 0x18));\n                pcVar5 = swi(3);\n                uVar6 = (*pcVar5)();\n                return uVar6;\n            }\n            if (*(arg1 + 0x40) <= puVar4 + 3 && puVar4 + 3 != *(arg1 + 0x40)) {\n                fcn.180021474(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 8);\n            }\n            uVar6 = **(arg1 + 0x38);\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        }\n    }\n    else {\n        uVar6 = uVar1;\n    }\n    return uVar6;\n}\n",
        "token_count": 681
    },
    "180021af": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.180021af0(int64_t *lpString, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    ushort uVar2;\n    int64_t arg3;\n    code *pcVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    \n    uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*lpString);\n    uVar2 = *(lpString + 0xc);\n    if ((~*(arg2 + 0x20) & 1) == 0) {\n        fcn.18002279c(2, *(arg2 + 0x18));\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    uVar6 = *(arg2 + 0x38) + 2;\n    if (*(arg2 + 0x40) <= uVar6 && uVar6 != *(arg2 + 0x40)) {\n        fcn.1800213b4(arg2);\n    }\n    **(arg2 + 0x38) = uVar2;\n    *(arg2 + 0x38) = *(arg2 + 0x38) + 2;\n    if ((~*(arg2 + 0x20) & 1) == 0) {\n        fcn.18002279c(2, *(arg2 + 0x18));\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    uVar6 = *(arg2 + 0x38) + 2;\n    if (*(arg2 + 0x40) <= uVar6 && uVar6 != *(arg2 + 0x40)) {\n        fcn.1800213b4(arg2);\n    }\n    uVar7 = uVar4;\n    **(arg2 + 0x38) = uVar4;\n    *(arg2 + 0x38) = *(arg2 + 0x38) + 2;\n    arg3 = *lpString;\n    if ((uVar7 != 0) && (arg3 != 0)) {\n        if ((~*(arg2 + 0x20) & 1) == 0) {\n            fcn.18002279c(2, *(arg2 + 0x18));\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        piVar1 = arg2 + 0x40;\n        uVar8 = *piVar1 - *(arg2 + 0x38);\n        if (uVar7 < uVar8) {\n            uVar8 = uVar7;\n        }\n        uVar6 = uVar8;\n        iVar5 = fcn.1800341d0(*(arg2 + 0x38), *piVar1 - *(arg2 + 0x38), arg3, uVar6);\n        if (iVar5 != 0) {\n            if (iVar5 == 0xc) {\n                fcn.180015240();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            if (iVar5 != 0x50) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        *(arg2 + 0x38) = *(arg2 + 0x38) + uVar6;\n        uVar7 = uVar7 - uVar8;\n        if (uVar7 != 0) {\n            fcn.1800213b4(arg2);\n            uVar8 = uVar7 - uVar7 % *(arg2 + 0x28);\n            (**(**(arg2 + 0x30) + 0x70))(*(arg2 + 0x30), arg3 + uVar6, uVar8);\n            uVar7 = uVar7 - uVar8;\n            if (*(arg2 + 0xc) != 0) {\n                (**(**(arg2 + 0x30) + 0xa0))(*(arg2 + 0x30), 1, *(arg2 + 0x28), arg2 + 0x48, piVar1);\n                *(arg2 + 0x38) = *(arg2 + 0x48);\n            }\n            if (*(arg2 + 0x28) <= uVar7) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            if (*(arg2 + 0x38) != *(arg2 + 0x48)) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar5 = fcn.1800341d0(*(arg2 + 0x38), uVar7, arg3 + uVar6 + uVar8, uVar7);\n            if (iVar5 != 0) {\n                if (iVar5 == 0xc) {\n                    fcn.180015240();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                    fcn.180015288();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                if (iVar5 != 0x50) {\n                    fcn.180015288();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n            }\n            *(arg2 + 0x38) = *(arg2 + 0x38) + uVar7;\n        }\n    }\n    return;\n}\n",
        "token_count": 1340
    },
    "18002476": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t fcn.180024764(int64_t arg1)\n\n{\n    if ((*(arg1 + 0xb0) >> 0xc & 1) != 0) {\n        return (-((*(arg1 + 0xac) & 1) != 0) & 0xfffffff0) + 0x20;\n    }\n    return 0;\n}\n",
        "token_count": 83
    },
    "18002478": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.180024784(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t *apiStackX8 [4];\n    \n    if ((*(arg1 + 0xb0) >> 0xc & 1) != 0) {\n        if ((*(arg1 + 0xac) & 1) != (arg2 != 0)) {\n            apiStackX8[0] = NULL;\n            *(arg1 + 0xac) = *(arg1 + 0xac) ^ 1;\n            puVar1 = *(arg1 + 0x80);\n            if (puVar1 == NULL) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            iVar3 = (***puVar1)(puVar1, 0x1800595b0, apiStackX8);\n            if (-1 < iVar3) {\n                (**(*apiStackX8[0] + 0x28))(apiStackX8[0], 0xfffffd37);\n                (**(*apiStackX8[0] + 0x10))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "180025bb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.180025bb8(ulong *arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    uchar in_stack_00000028;\n    uchar in_stack_00000030;\n    uint in_stack_00000038;\n    ulong in_stack_00000040;\n    int64_t in_stack_00000048;\n    int64_t in_stack_00000050;\n    ulong in_stack_00000058;\n    \n    if (arg1 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *arg1 = arg2;\n    *(arg1 + 0x54) = noname_2;\n    *(arg1 + 10) = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    *(arg1 + 0x3c) = noname_2 >> 0xe & 1;\n    arg1[6] = 0;\n    arg1[5] = in_stack_00000058;\n    arg1[9] = arg4;\n    *(arg1 + 8) = in_stack_00000038;\n    *(arg1 + 7) = 1;\n    *(arg1 + 0x56) = in_stack_00000028;\n    *(arg1 + 0x57) = in_stack_00000030;\n    arg1[1] = in_stack_00000040;\n    if (in_stack_00000048 != 0) {\n        *(arg1 + 7) = 3;\n        arg1[2] = in_stack_00000048;\n    }\n    if (in_stack_00000050 != 0) {\n        *(arg1 + 7) = *(arg1 + 7) | 4;\n        arg1[3] = in_stack_00000050;\n    }\n    return;\n}\n",
        "token_count": 447
    },
    "18002ea0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nulong fcn.18002ea00(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t *arg1_00;\n    ulong uVar5;\n    \n    *(arg1 + 1) = arg3;\n    if (arg3 <= arg3 + 0x40) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40);\n        *arg1 = iVar4;\n        if (iVar4 != 0) {\n            arg1_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n            iVar2 = fcn.1800341d0(arg1_00, *(arg1 + 1), arg2, *(arg1 + 1));\n            if (iVar2 != 0) {\n                if (iVar2 == 0xc) {\n                    fcn.180015240();\n                    pcVar1 = swi(3);\n                    uVar5 = (*pcVar1)();\n                    return uVar5;\n                }\n                if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                    fcn.180015288();\n                    pcVar1 = swi(3);\n                    uVar5 = (*pcVar1)();\n                    return uVar5;\n                }\n                if (iVar2 != 0x50) {\n                    fcn.180015288();\n                    pcVar1 = swi(3);\n                    uVar5 = (*pcVar1)();\n                    return uVar5;\n                }\n            }\n            if (*(arg1_00 + 2) == -1) {\n                uVar3 = arg1_00[3];\n            }\n            else {\n                uVar3 = *arg1_00;\n            }\n            *(arg1 + 0xc) = ~(uVar3 >> 6) & 1;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*arg1);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 452
    },
    "18002f4e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.18002f4e0(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    if (arg2 == 0) {\ncode_r0x00018002f5a6:\n        uVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(*(arg1 + 0x40));\n        iVar4 = fcn.18000fa14(uVar3);\n        if (iVar4 == 0) {\n            return arg1;\n        }\n    }\n    else {\n        uVar3 = *(arg2 + 0x40);\n        while( true ) {\n            uVar3 = (*_sym.imp.USER32.dll_GetWindow)(uVar3, 2);\n            iVar4 = fcn.18000fa14(uVar3);\n            if (iVar4 != 0) break;\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(arg2 + 0x40));\n            uVar3 = fcn.18000fa14(uVar3);\n            arg2 = fcn.18002f464(arg1, uVar3);\n            if ((arg2 == 0) || (arg2 == arg1)) goto code_r0x00018002f5a6;\n            uVar3 = *(arg2 + 0x40);\n        }\n        uVar3 = (*_sym.imp.USER32.dll_GetWindow)(*(arg2 + 0x40), 2);\n        iVar4 = fcn.18000fa14(uVar3);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(iVar4 + 0x40));\n    if ((uVar1 >> 0x10 & 1) != 0) {\n        if ((((arg3 & 1) == 0) || (iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar4 + 0x40)),  iVar2 != 0)) &&\n           (((arg3 & 2) == 0 || (iVar2 = fcn.180013e88(iVar4),  iVar2 != 0)))) {\n            arg1 = iVar4;\n            iVar4 = 0;\n        }\n        iVar4 = fcn.18002f4e0(arg1, iVar4, arg3);\n    }\n    return iVar4;\n}\n",
        "token_count": 532
    },
    "18003296": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.180032964(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint64_t uVar5;\n    uint64_t *puVar6;\n    \n    if (arg2 == 0) {\n        fcn.18002279c(6, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if ((~*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002279c(1, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (*(arg2 + 0xc) == 0xffff) {\n        fcn.180015264();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    fcn.1800327d4(arg1, 0);\n    puVar4 = fcn.18001f390(*(arg1 + 0x58), arg2);\n    uVar1 = *puVar4;\n    uVar3 = ~*(arg1 + 0x20);\n    if (uVar1 == 0) {\n        if ((uVar3 & 1) == 0) {\n            fcn.18002279c(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar5 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n            fcn.1800213b4(arg1);\n        }\n        **(arg1 + 0x38) = 0xffff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n        fcn.180021af0(arg2, arg1);\n        fcn.180032218(arg1);\n        uVar1 = *(arg1 + 0x50);\n        puVar6 = fcn.18001f390(*(arg1 + 0x58), arg2);\n        *puVar6 = uVar1;\n        *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        if ((uVar3 & 1) == 0) {\n            fcn.18002279c(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar5 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n            fcn.1800213b4(arg1);\n        }\n        **(arg1 + 0x38) = uVar1 | 0x8000;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n    }\n    else {\n        if ((uVar3 & 1) == 0) {\n            fcn.18002279c(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar5 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n            fcn.1800213b4(arg1);\n        }\n        **(arg1 + 0x38) = 0x7fff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002279c(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar5 = *(arg1 + 0x38) + 4;\n        if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n            fcn.1800213b4(arg1);\n        }\n        **(arg1 + 0x38) = uVar1 | 0x80000000;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n    }\n    return;\n}\n",
        "token_count": 1083
    },
    "180032e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.180032e88(int64_t arg1, int64_t *arg2)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint32_t *puVar4;\n    ulong arg2_00;\n    uint64_t *puVar5;\n    \n    if ((~*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002279c(2, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    fcn.1800327d4(arg1, 0);\n    if (arg2 == NULL) {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002279c(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.1800213b4(arg1);\n        }\n        **(arg1 + 0x38) = 0;\n    }\n    else {\n        puVar4 = fcn.18001f390(*(arg1 + 0x58), arg2);\n        uVar1 = *puVar4;\n        if (uVar1 == 0) {\n            arg2_00 = (***arg2)(arg2);\n            fcn.180032964(arg1, arg2_00);\n            fcn.180032218(arg1);\n            uVar1 = *(arg1 + 0x50);\n            puVar5 = fcn.18001f390(*(arg1 + 0x58), arg2);\n            *puVar5 = uVar1;\n            *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n            (**(*arg2 + 0x10))(arg2, arg1);\n            return;\n        }\n        if (0x7ffe < uVar1) {\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.18002279c(2, *(arg1 + 0x18));\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            uVar3 = *(arg1 + 0x38) + 2;\n            if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n                fcn.1800213b4(arg1);\n            }\n            **(arg1 + 0x38) = 0x7fff;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n            if ((~*(arg1 + 0x20) & 1) != 0) {\n                uVar3 = *(arg1 + 0x38) + 4;\n                if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n                    fcn.1800213b4(arg1);\n                }\n                **(arg1 + 0x38) = uVar1;\n                *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n                return;\n            }\n            fcn.18002279c(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.18002279c(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.1800213b4(arg1);\n        }\n        **(arg1 + 0x38) = uVar1;\n    }\n    *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n    return;\n}\n",
        "token_count": 1003
    },
    "1800449a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.1800449a4(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    code *pcVar6;\n    code *pcVar7;\n    int64_t iVar8;\n    uchar auStackX32 [8];\n    uchar auStack56 [8];\n    uint8_t uStack48;\n    \n    iVar2 = fcn.1800399d0();\n    iVar8 = 0;\n    if (*0x180074fc8 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, 0x1800593c8);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        *0x180074fc8 = sub.KERNEL32.dll_EncodePointer(iVar4);\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, 0x1800593b8);\n        *0x180074fd0 = sub.KERNEL32.dll_EncodePointer(uVar5);\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, 0x1800593a0);\n        *0x180074fd8 = sub.KERNEL32.dll_EncodePointer(uVar5);\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetUserObjectInformationA\");\n        *0x180074fe8 = sub.KERNEL32.dll_EncodePointer(uVar5);\n        if (*0x180074fe8 != 0) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetProcessWindowStation\");\n            *0x180074fe0 = sub.KERNEL32.dll_EncodePointer(uVar5);\n        }\n    }\n    if ((*0x180074fe0 != iVar2) && (*0x180074fe8 != iVar2)) {\n        pcVar6 = sub.KERNEL32.dll_DecodePointer(*0x180074fe0);\n        pcVar7 = sub.KERNEL32.dll_DecodePointer(*0x180074fe8);\n        if (((pcVar6 != NULL) && (pcVar7 != NULL)) &&\n           (((iVar3 = (*pcVar6)(),  iVar3 == 0 || (iVar1 = (*pcVar7)(iVar3, 1, auStack56, 0xc, auStackX32),  iVar1 == 0)\n             ) || ((uStack48 & 1) == 0)))) {\n            arg3._0_4_ = arg3 | 0x200000;\n            goto code_r0x000180044b5e;\n        }\n    }\n    if ((((*0x180074fd0 != iVar2) && (pcVar6 = sub.KERNEL32.dll_DecodePointer(),  pcVar6 != NULL)) &&\n        (iVar8 = (*pcVar6)(),  iVar8 != 0)) &&\n       ((*0x180074fd8 != iVar2 && (pcVar6 = sub.KERNEL32.dll_DecodePointer(),  pcVar6 != NULL)))) {\n        iVar8 = (*pcVar6)(iVar8);\n    }\ncode_r0x000180044b5e:\n    pcVar6 = sub.KERNEL32.dll_DecodePointer(*0x180074fc8);\n    if (pcVar6 == NULL) {\n        return 0;\n    }\n    uVar5 = (*pcVar6)(iVar8, arg1, arg2, arg3);\n    return uVar5;\n}\n",
        "token_count": 823
    },
    "1800030f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.1800030f0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uStackX24;\n    ulong uStackX32;\n    \n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    fcn.180003040(arg1, arg2, &uStackX24);\n    return;\n}\n",
        "token_count": 84
    },
    "18000335": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0001800035af)\n// WARNING: Removing unreachable block (ram,0x0001800035be)\n// WARNING: Removing unreachable block (ram,0x0001800034b3)\n// WARNING: Removing unreachable block (ram,0x0001800034c2)\n// WARNING: Removing unreachable block (ram,0x0001800033b7)\n// WARNING: Removing unreachable block (ram,0x0001800033c6)\n// WARNING: Removing unreachable block (ram,0x000180003435)\n// WARNING: Removing unreachable block (ram,0x000180003444)\n// WARNING: Removing unreachable block (ram,0x000180003531)\n// WARNING: Removing unreachable block (ram,0x000180003540)\n// WARNING: Removing unreachable block (ram,0x00018000363b)\n// WARNING: Removing unreachable block (ram,0x00018000364a)\n\nvoid fcn.180003350(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    int64_t iStackX16;\n    int64_t aiStack96 [5];\n    uchar auStack56 [48];\n    \n    piVar5 = fcn.18001549c();\n    iVar7 = 0;\n    if (piVar5 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    aiStack96[0] = (**(*piVar5 + 0x18))();\n    aiStack96[0] = aiStack96[0] + 0x18;\n    iVar6 = -1;\n    pcVar8 = \"slider1.txt\";\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001640(aiStack96, \"slider1.txt\", ~iVar6 - 1);\n    piVar5 = fcn.18001549c();\n    if (piVar5 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    aiStack96[1] = (**(*piVar5 + 0x18))();\n    aiStack96[1] = aiStack96[1] + 0x18;\n    iVar6 = -1;\n    pcVar8 = \"slider2.txt\";\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001640(aiStack96 + 1, \"slider2.txt\", ~iVar6 - 1);\n    piVar5 = fcn.18001549c();\n    if (piVar5 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    aiStack96[2] = (**(*piVar5 + 0x18))();\n    aiStack96[2] = aiStack96[2] + 0x18;\n    iVar6 = -1;\n    pcVar8 = \"slider3.txt\";\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001640(aiStack96 + 2, \"slider3.txt\", ~iVar6 - 1);\n    piVar5 = fcn.18001549c();\n    if (piVar5 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    aiStack96[3] = (**(*piVar5 + 0x18))();\n    aiStack96[3] = aiStack96[3] + 0x18;\n    iVar6 = -1;\n    pcVar8 = \"slider4.txt\";\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001640(aiStack96 + 3, \"slider4.txt\", ~iVar6 - 1);\n    piVar5 = fcn.18001549c();\n    if (piVar5 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    aiStack96[4] = (**(*piVar5 + 0x18))(piVar5);\n    aiStack96[4] = aiStack96[4] + 0x18;\n    iVar6 = -1;\n    pcVar8 = \"slider5.txt\";\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001640(aiStack96 + 4, \"slider5.txt\", ~iVar6 - 1);\n    fcn.180015540(auStack56);\n    piVar5 = fcn.18001549c();\n    if (piVar5 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    iStackX16 = (**(*piVar5 + 0x18))(piVar5);\n    iStackX16 = iStackX16 + 0x18;\n    iVar6 = -1;\n    pcVar8 = 0x18004fa68;\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001640(&iStackX16, 0x18004fa68, ~iVar6 - 1);\n    iVar6 = iStackX16;\n    do {\n        fcn.180015568(auStack56, aiStack96[iVar7], 0x1000, 0);\n        fcn.180015a84(auStack56);\n        fcn.180015568(auStack56, aiStack96[iVar7], 0x4001, 0);\n        fcn.1800157fc(auStack56, iVar6);\n        fcn.180015a84(auStack56);\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 5);\n    LOCK();\n    piVar1 = iVar6 + -8;\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 + -1 < 1) {\n        (**(**(iVar6 + -0x18) + 8))();\n    }\n    fcn.180015b28(auStack56);\n    fcn.180034e20(aiStack96, 8, 5, fcn.1800014e0);\n    return;\n}\n",
        "token_count": 1752
    },
    "18000f20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.18000f208(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t arg1_00;\n    uint32_t uVar6;\n    uint32_t uStack104;\n    uint32_t uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    int32_t iStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint auStack56 [5];\n    uchar auStack36 [28];\n    \n    uVar1 = fcn.180013cd8(arg1);\n    arg1_00 = 0;\n    if (arg2 == 0) {\n        if ((uVar1 >> 0x1e & 1) == 0) {\n            iVar4 = (*_sym.imp.USER32.dll_GetWindow)(*(arg1 + 0x40), 4);\n        }\n        else {\n            iVar4 = (*_sym.imp.USER32.dll_GetParent)();\n        }\n        if ((iVar4 != 0) && (iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(iVar4, 0x36b),  iVar2 != 0)) {\n            iVar4 = iVar2;\n        }\n    }\n    else {\n        iVar4 = *(arg2 + 0x40);\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(arg1 + 0x40), &iStack88);\n    if ((uVar1 >> 0x1e & 1) == 0) {\n        if ((iVar4 != 0) &&\n           ((uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0),  (uVar1 >> 0x1c & 1) == 0 ||\n            ((uVar1 >> 0x1d & 1) != 0)))) {\n            iVar4 = arg1_00;\n        }\n        auStack56[0] = 0x28;\n        if (iVar4 == 0) {\n            piVar3 = fcn.18001c528();\n            iVar4 = arg1_00;\n            if (piVar3 != NULL) {\n                iVar4 = (**(*piVar3 + 0xe8))(piVar3);\n            }\n            if (iVar4 != 0) {\n                arg1_00 = *(iVar4 + 0x40);\n            }\n            uVar5 = fcn.18000c52c(arg1_00, 1);\n            fcn.18000c5ac(uVar5, auStack56);\n            (*_sym.imp.USER32.dll_CopyRect)(&iStack72, auStack36);\n        }\n        else {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar4, &iStack72);\n            uVar5 = fcn.18000c52c(iVar4, 2);\n            fcn.18000c5ac(uVar5, auStack56);\n        }\n        (*_sym.imp.USER32.dll_CopyRect)();\n    }\n    else {\n        uVar5 = (*_sym.imp.USER32.dll_GetParent)(*(arg1 + 0x40));\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar5, &uStack104);\n        (*_sym.imp.USER32.dll_GetClientRect)(iVar4, &iStack72);\n        (*_sym.imp.USER32.dll_MapWindowPoints)();\n    }\n    uVar1 = (iStack64 + iStack72) / 2 - (iStack80 - iStack88) / 2;\n    uVar6 = (iStack60 + iStack68) / 2 - (iStack76 - iStack84) / 2;\n    if (iStack96 < (iStack80 - iStack88) + uVar1) {\n        uVar1 = (iStack88 - iStack80) + iStack96;\n    }\n    if (uVar1 < uStack104) {\n        uVar1 = uStack104;\n    }\n    if (iStack92 < (iStack76 - iStack84) + uVar6) {\n        uVar6 = (iStack84 - iStack76) + iStack92;\n    }\n    if (uVar6 < uStack100) {\n        uVar6 = uStack100;\n    }\n    fcn.180014054(arg1, 0, uVar1, uVar6);\n    return;\n}\n",
        "token_count": 1033
    },
    "1800101b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t fcn.1800101bc(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    uchar auStackX24 [16];\n    \n    uVar4 = 0;\n    iVar2 = fcn.18001e94c();\n    piVar3 = fcn.18000f768(**(iVar2 + 200), auStackX24);\n    if (*piVar3 == 0) {\n        if ((arg2 & 0x3fc0) == arg2) {\n            iVar2 = fcn.18001e94c();\n            fcn.18000f6f0(**(iVar2 + 200));\n            uVar4 = 0x3fc0;\n        }\n    }\n    else {\n        iVar2 = fcn.18001e94c();\n        iVar1 = fcn.18000f7dc(**(iVar2 + 200), arg1);\n        if (iVar1 != 0) {\n            uVar4 = arg2;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 252
    },
    "18001841": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180018418(ulong arg1, uint16_t *arg2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    code *pcVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    int64_t iVar8;\n    uint16_t uVar9;\n    int32_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uchar auStack792 [32];\n    uint16_t *puStack760;\n    uchar *puStack752;\n    uint16_t auStack744 [4];\n    int64_t iStack736;\n    int64_t iStack728;\n    uchar auStack720 [8];\n    int32_t aiStack712 [6];\n    uint uStack688;\n    uint uStack684;\n    uchar *puStack680;\n    ulong uStack656;\n    ulong uStack640;\n    ulong uStack632;\n    uchar auStack616 [260];\n    uchar uStack356;\n    uchar uStack355;\n    uchar auStack344 [288];\n    uint64_t uStack56;\n    \n    uStack632 = 0xfffffffffffffffe;\n    uStack56 = *0x18006ed40 ^ auStack792;\n    iVar12 = 0;\n    auStack744[0] = 0;\n    iVar10 = 0;\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x180053560);\n    pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (pcVar5 == NULL) {\n        iVar11 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"ntdll.dll\");\n        if (iVar11 != 0) {\n            auStack744[0] = 0;\n            puStack760 = auStack744;\n            (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)(iVar11, 0x10, 1, 0x180017ba0);\n            if (auStack744[0] != 0) {\n                uVar9 = auStack744[0] & 0x3ff;\n                aiStack712[0] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(auStack744[0]);\n                aiStack712[1] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uVar9);\n                iVar10 = 2;\n            }\n        }\n    }\n    else {\n        auStack744[0] = (*pcVar5)();\n        uVar9 = auStack744[0] & 0x3ff;\n        aiStack712[0] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(auStack744[0]);\n        aiStack712[1] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uVar9);\n        iVar10 = 2;\n        pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar4, \"GetSystemDefaultUILanguage\");\n        if (pcVar5 != NULL) {\n            auStack744[0] = (*pcVar5)();\n            uVar9 = auStack744[0] & 0x3ff;\n            aiStack712[2] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(auStack744[0]);\n            aiStack712[3] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uVar9);\n            iVar10 = 4;\n        }\n    }\n    aiStack712[iVar10] = 0x800;\n    uStack355 = 0;\n    uStack356 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0x180000000, auStack616, 0x105);\n    if (iVar2 != 0) {\n        fcn.180035830(&uStack688, 0, 0x38);\n        uStack688 = 0x38;\n        puStack680 = auStack616;\n        uStack656 = 1000;\n        uStack640 = 0x180000000;\n        uStack684 = 0x88;\n        fcn.180017bb8(&iStack736, 0xffffffffffffffff);\n        if ((((*0x180073af8 == NULL) || ((iStack736 == -1 && (iStack736 = (**0x180073af8)(),  iStack736 != -1)))) &&\n            (*0x180073b08 != NULL)) && ((iStack736 != -1 && (iStack728 == 0)))) {\n            (**0x180073b08)(iStack736, &iStack728);\n        }\n        iVar11 = iVar12;\n        if (iVar10 + 1 != 0) {\n            do {\n                if (aiStack712[iVar11] == 0x800) {\n                    iVar2 = fcn.1800388f0(auStack720, 4, 0x1800534e0);\n                    if (iVar2 != 0) {\n                        if (iVar2 == 0xc) {\n                            fcn.180015240();\n                            pcVar5 = swi(3);\n                            (*pcVar5)();\n                            return;\n                        }\n                        if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                            fcn.180015288();\n                            pcVar5 = swi(3);\n                            (*pcVar5)();\n                            return;\n                        }\n                        if (iVar2 != 0x50) {\n                            fcn.180015288();\n                            pcVar5 = swi(3);\n                            (*pcVar5)();\n                            return;\n                        }\n                    }\ncode_r0x000180018701:\n                    puVar6 = fcn.180036050();\n                    uVar1 = *puVar6;\n                    puVar6 = fcn.180036050();\n                    *puVar6 = 0;\n                    puStack752 = auStack720;\n                    puStack760 = arg2;\n                    uVar3 = fcn.180035fe4(auStack344, 0x112, 0x111, arg1);\n                    piVar7 = fcn.180036050();\n                    if (*piVar7 == 0) {\n                        puVar6 = fcn.180036050();\n                        *puVar6 = uVar1;\ncode_r0x00018001876b:\n                        iVar8 = iVar12;\n                        if ((uVar3 != 0xffffffff) && (uVar3 < 0x112)) {\n                            iVar8 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n                        }\n                        if (iVar8 == 0) goto code_r0x000180018793;\n                    }\n                    else {\n                        piVar7 = fcn.180036050();\n                        if (*piVar7 == 0) goto code_r0x00018001876b;\n                        if (*piVar7 != 0xc) {\n                            if ((*piVar7 == 0x16) || (*piVar7 == 0x22)) {\n                                fcn.180001030(0x80070057);\n                                pcVar5 = swi(3);\n                                (*pcVar5)();\n                                return;\n                            }\n                            if (*piVar7 != 0x50) {\n                                fcn.180001030(0x80004005);\n                                pcVar5 = swi(3);\n                                (*pcVar5)();\n                                return;\n                            }\n                            goto code_r0x00018001876b;\n                        }\n                        fcn.180001030(0x8007000e);\n                    }\n                    if ((*0x180073b00 != NULL) && (iStack736 != -1)) {\n                        if ((*0x180073b10 != NULL) && (iStack728 != 0)) {\n                            iStack728 = 0;\n                            (**0x180073b10)(0);\n                        }\n                        (**0x180073b00)(iStack736);\n                    }\n                    goto code_r0x00018001886c;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(aiStack712[iVar11], 3);\n                if (iVar2 != 0) goto code_r0x000180018701;\ncode_r0x000180018793:\n                iVar11 = iVar11 + 1;\n            } while (iVar11 < iVar10 + 1);\n        }\n        if ((*0x180073b00 != NULL) && (iStack736 != -1)) {\n            if ((*0x180073b10 != NULL) && (iStack728 != 0)) {\n                iStack728 = 0;\n                (**0x180073b10)(0);\n            }\n            (**0x180073b00)(iStack736);\n        }\n    }\ncode_r0x00018001886c:\n    fcn.1800349d0(uStack56 ^ auStack792);\n    return;\n}\n",
        "token_count": 1918
    },
    "180019d1": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\ncode ** fcn.180019d18(code **arg1, uint64_t arg2, code *arg3)\n\n{\n    fcn.18000def0(arg1);\n    *arg1 = vtable.CDialog.0;\n    fcn.180035830(arg1 + 0x15, 0, 0x40);\n    arg1[0x16] = arg2 & 0xffff;\n    *(arg1 + 0x15) = arg2;\n    arg1[0x1a] = arg3;\n    return arg1;\n}\n",
        "token_count": 122
    },
    "18001eea": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.18001eea0(int64_t hdc, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t in_stack_00000028;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    (*_sym.imp.GDI32.dll_SetBkColor)(*(hdc + 8));\n    iStack16 = arg2 + arg4;\n    iStack12 = arg3 + in_stack_00000028;\n    iStack24 = arg2;\n    iStack20 = arg3;\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(hdc + 8), 0, 0, 2, &iStack24, 0, 0, 0);\n    return;\n}\n",
        "token_count": 183
    },
    "18001f39": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.18001f390(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    int64_t arg1_00;\n    uint32_t auStackX24 [2];\n    uchar auStackX32 [8];\n    \n    arg1_00 = arg1;\n    puVar1 = fcn.18001f110(arg1, arg2, auStackX24, auStackX32);\n    if (puVar1 == NULL) {\n        if (*(arg1_00 + 8) == 0) {\n            fcn.18001f054(arg1_00, *(arg1_00 + 0x10), 1);\n        }\n        puVar1 = fcn.18001f324(arg1);\n        puVar1[1] = arg2;\n        *puVar1 = *(*(arg1 + 8) + auStackX24[0] * 8);\n        *(*(arg1 + 8) + auStackX24[0] * 8) = puVar1;\n    }\n    return puVar1 + 2;\n}\n",
        "token_count": 240
    },
    "18002246": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nushort * fcn.180022464(ushort *arg1, int64_t lpString)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    int64_t iVar5;\n    ushort *puVar6;\n    int16_t in_R8W;\n    code *apcStack592 [3];\n    int64_t aiStack568 [70];\n    \n    *arg1 = 8;\n    *(arg1 + 4) = 0;\n    if (lpString != 0) {\n        if (in_R8W == 0xe) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar5 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(lpString, uVar4);\n            *(arg1 + 4) = iVar5;\n            if (iVar5 == 0) {\n                fcn.180015240();\n                pcVar3 = swi(3);\n                puVar6 = (*pcVar3)();\n                return puVar6;\n            }\n        }\n        else {\n            iVar5 = fcn.1800223dc(apcStack592, lpString);\n            iVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(*(iVar5 + 0x18), *(*(iVar5 + 0x18) + -0x10));\n            if (iVar5 == 0) {\n                fcn.180014bcc();\n                pcVar3 = swi(3);\n                puVar6 = (*pcVar3)();\n                return puVar6;\n            }\n            *(arg1 + 4) = iVar5;\n            apcStack592[0] =\n                 vtable.ATL::CFixedStringT_class_ATL::CStringT_wchar_t__class_StrTraitMFC_wchar_t__class_ATL::ChTraitsCRT_wchar_t_____256_.0\n            ;\n            fcn.180014bdc(aiStack568);\n            LOCK();\n            piVar1 = aiStack568[0] + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(aiStack568[0] + -0x18) + 8))();\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 523
    },
    "180022ed": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180022ed4(uint64_t lpBuffer, int64_t arg2, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    uint64_t arg3_00;\n    uchar auStack488 [32];\n    uchar *puStack456;\n    uint32_t *puStack448;\n    ulong uStack440;\n    uint uStack432;\n    uint32_t auStack424 [2];\n    uint64_t uStack416;\n    int64_t iStack408;\n    uchar auStack400 [8];\n    ulong uStack392;\n    uchar auStack332 [276];\n    uint64_t uStack56;\n    \n    uStack392 = 0xfffffffffffffffe;\n    uStack56 = *0x18006ed40 ^ auStack488;\n    arg3_00 = 0;\n    if (lpBuffer == 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg2 == 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(arg2, 0x104, lpBuffer, &uStack416);\n    if (uVar4 == 0) {\n        iVar5 = fcn.1800360d8(lpBuffer, 0x104, arg2, 0xffffffffffffffff);\n        if (iVar5 != 0) {\n            if (iVar5 == 0xc) {\n                fcn.180015240();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar5 != 0x50) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.180022e74(arg3, arg2);\n    }\n    else if (uVar4 < 0x104) {\n        piVar6 = fcn.18001549c();\n        if (piVar6 == NULL) {\n            fcn.180001030(0x80004005);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iStack408 = (**(*piVar6 + 0x18))(piVar6);\n        iStack408 = iStack408 + 0x18;\n        fcn.180022cd8(lpBuffer, &iStack408);\n        iVar3 = iStack408;\n        iVar5 = (*_sym.imp.SHLWAPI.dll_PathIsUNCA)(iStack408);\n        if (iVar5 == 0) {\n            uStack432 = 0;\n            uStack440 = 0;\n            puStack448 = auStack424;\n            puStack456 = auStack400;\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)(iVar3, 0, 0, 0);\n            if (iVar5 == 0) {\n                fcn.180022e74(arg3, arg2);\n                LOCK();\n                piVar1 = iVar3 + -8;\n                iVar5 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar5 + -1 < 1) {\n                    (**(**(iVar3 + -0x18) + 8))();\n                }\n                goto code_r0x0001800231d8;\n            }\n            if ((auStack424[0] & 2) == 0) {\n                (*_sym.imp.USER32.dll_CharUpperA)(lpBuffer);\n            }\n            if (((auStack424[0] & 4) == 0) && (iVar7 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(arg2),  iVar7 != -1)) {\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar7);\n                if ((uStack416 == 0) || (uStack416 <= lpBuffer)) {\n                    fcn.180022e74(arg3, arg2);\n                    LOCK();\n                    piVar1 = iVar3 + -8;\n                    iVar5 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                    if (iVar5 + -1 < 1) {\n                        (**(**(iVar3 + -0x18) + 8))();\n                    }\n                    goto code_r0x0001800231d8;\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)(auStack332);\n                iVar8 = uStack416 - lpBuffer;\n                if (0x103 < iVar5 + iVar8) {\n                    if (arg3 != 0) {\n                        *(arg3 + 0x10) = 3;\n                        if (arg2 == 0) {\n                            uVar4 = 0;\n                        }\n                        else {\n                            uVar4 = fcn.180035930(arg2);\n                        }\n                        fcn.180001640(arg3 + 0x18, arg2, uVar4);\n                    }\n                    LOCK();\n                    piVar1 = iVar3 + -8;\n                    iVar5 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                    if (iVar5 + -1 < 1) {\n                        (**(**(iVar3 + -0x18) + 8))();\n                    }\n                    goto code_r0x0001800231d8;\n                }\n                iVar5 = fcn.1800388f0(uStack416, 0x104 - iVar8, auStack332);\n                if (iVar5 != 0) {\n                    if (iVar5 == 0xc) {\n                        fcn.180015240();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar5 != 0x50) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n            }\n        }\n        LOCK();\n        piVar1 = iVar3 + -8;\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 + -1 < 1) {\n            (**(**(iVar3 + -0x18) + 8))();\n        }\n    }\n    else if (arg3 != 0) {\n        *(arg3 + 0x10) = 3;\n        if (arg2 != 0) {\n            uVar4 = fcn.180035930(arg2);\n            arg3_00 = uVar4;\n        }\n        fcn.180001640(arg3 + 0x18, arg2, arg3_00);\n    }\ncode_r0x0001800231d8:\n    fcn.1800349d0(uStack56 ^ auStack488);\n    return;\n}\n",
        "token_count": 1667
    },
    "1800234d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.1800234d8(ulong *arg1, ulong lpFileTime, ulong arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    uchar auStackX32 [8];\n    ulong uStack40;\n    uint16_t uStack32;\n    uint16_t uStack30;\n    uint16_t uStack26;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(lpFileTime, auStackX32);\n    if (iVar2 == 0) {\n        *arg1 = 0;\n        fcn.180001030(0x80070057);\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)();\n    if (iVar2 == 0) {\n        *arg1 = 0;\n        fcn.180001030(0x80070057);\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    uVar4 = 0;\n    if (0x76b < uStack32) {\n        fcn.1800233f4(&uStack40, uStack32, uStack30, uStack26);\n        uVar4 = uStack40;\n    }\n    *arg1 = uVar4;\n    return arg1;\n}\n",
        "token_count": 332
    },
    "18002963": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180029630(ulong noname_0, ulong *arg2, ulong arg3, int32_t *arg4)\n\n{\n    int16_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t in_stack_00000028;\n    uchar auStack136 [32];\n    int64_t **ppiStack104;\n    int64_t *piStack88;\n    int64_t *piStack80;\n    uint uStack72;\n    ulong uStack64;\n    ulong uStack52;\n    ulong uStack44;\n    uint64_t uStack32;\n    \n    uStack32 = *0x18006ed40 ^ auStack136;\n    if ((arg2 != NULL) && (arg4 != NULL)) {\n        piStack80 = NULL;\n        iVar3 = (***arg2)(arg2, 0x180055a48, &piStack80);\n        if (in_stack_00000028 != 0) {\n            fcn.180035830(arg4, 0, in_stack_00000028 << 2);\n        }\n        if (-1 < iVar3) {\n            uStack72 = 0;\n            piStack88 = NULL;\n            ppiStack104 = &piStack88;\n            uStack52 = *0x180059bb8;\n            uStack44 = *0x180059bc0;\n            uStack64 = arg3;\n            iVar3 = (**(*piStack80 + 0x18))(*0x180059bb8);\n            if (-1 < iVar3) {\n                uVar6 = 0;\n                iVar5 = 0;\n                while( true ) {\n                    uVar4 = in_stack_00000028;\n                    if (*(piStack88 + 1) < in_stack_00000028) {\n                        uVar4 = *(piStack88 + 1);\n                    }\n                    iVar2 = *piStack88;\n                    if (uVar4 <= uVar6) break;\n                    piVar1 = iVar2 + 0x38 + iVar5;\n                    uVar6 = uVar6 + 1;\n                    iVar5 = iVar5 + 0x48;\n                    *arg4 = *piVar1;\n                    arg4 = arg4 + 1;\n                }\n                if (iVar2 != 0) {\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                }\n            }\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(piStack88);\n        }\n        if (piStack80 != NULL) {\n            (**(*piStack80 + 0x10))();\n        }\n    }\n    fcn.1800349d0(uStack32 ^ auStack136);\n    return;\n}\n",
        "token_count": 615
    },
    "18002a30": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.18002a300(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    ulong *puVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int64_t **ppiVar8;\n    int64_t arg1_00;\n    int64_t **ppiVar9;\n    int64_t **ppiVar10;\n    uint32_t uVar11;\n    int64_t **ppiVar12;\n    ulong in_R9;\n    uchar auStack312 [32];\n    ulong uStack280;\n    ulong uStack272;\n    int64_t *piStack264;\n    int64_t **ppiStack256;\n    int64_t *piStack248;\n    int64_t iStack240;\n    int64_t **ppiStack232;\n    uint uStack224;\n    int64_t iStack216;\n    int64_t iStack208;\n    ulong uStack200;\n    int64_t **ppiStack192;\n    ulong uStack184;\n    uchar auStack168 [32];\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uchar auStack112 [32];\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint64_t uStack56;\n    \n    uStack184 = 0xfffffffffffffffe;\n    uStack56 = *0x18006ed40 ^ auStack312;\n    iVar1 = arg1[5];\n    iStack240 = arg1[4];\n    ppiVar10 = NULL;\n    if (arg1[0x12] == 0) {\n        piVar4 = arg1[2];\n        if ((piVar4 == NULL) ||\n           (iVar7 = (**(*piVar4 + 0x18))(piVar4, 0x1800594a0, &piStack264, &ppiStack256),  iVar7 < 0))\n        goto code_r0x00018002a7f9;\n        fcn.1800258f4(arg1, auStack168, 0x180059b70);\n        uStack136 = 0;\n        uStack132 = 0;\n        uStack124 = 0x20;\n        uStack128 = 0xffffffff;\n        uStack120 = 0;\n        uStack116 = 0x1fb;\n        fcn.1800258f4(arg1, auStack112, 0x180059b90);\n        uStack80 = 0x28;\n        uStack76 = 0;\n        uStack68 = 0x30;\n        uStack72 = 0xffffffff;\n        uStack64 = 0;\n        uStack60 = 0x1e;\n        uStack280 = uStack280._4_4_ << 0x20;\n        iVar7 = (**(*piStack264 + 0x20))(piStack264, 2, auStack168);\n        if (iVar7 < 0) {\n            (**(*piStack264 + 0x10))();\n            goto code_r0x00018002a7f9;\n        }\n        ppiStack232 = ppiStack256;\n        uStack224 = 1;\n        iStack216 = 0;\n        iStack208 = 0;\n        uStack200 = 0;\n        iVar7 = (**(*piStack264 + 0x30))(piStack264, 0, &ppiStack232);\n        if (iVar7 < 0) {\n            (**(*piStack264 + 0x10))();\n            goto code_r0x00018002a7f9;\n        }\n        arg1[5] = iStack216;\n        ppiStack256 = ppiStack192;\n        arg1[0xd] = iStack208;\n        arg1[4] = ppiStack192;\n        (**(*piStack264 + 0x10))();\n    }\n    else {\n        iVar7 = (**(*arg1[0x13] + 0x28))(arg1[0x13], 0x180059670, &piStack248);\n        if (iVar7 < 0) goto code_r0x00018002a7f9;\n        iVar7 = (***piStack248)(piStack248, 0x180059570, &ppiStack256);\n        if (-1 < iVar7) {\n            piStack264 = NULL;\n            iVar7 = (*(*ppiStack256)[4])(ppiStack256, 0x180059790, &piStack264);\n            if (-1 < iVar7) {\n                (**(*piStack264 + 0x28))(piStack264, arg1[1] + 0x178, arg1 + 0x16);\n                (**(*piStack264 + 0x10))();\n            }\n            (*(*ppiStack256)[2])();\n        }\n        ppiVar8 = fcn.18000b904(0x28);\n        piVar4 = piStack248;\n        ppiVar12 = ppiVar10;\n        ppiStack256 = ppiVar8;\n        if (ppiVar8 != NULL) {\n            *ppiVar8 = NULL;\n            ppiVar8[1] = NULL;\n            ppiVar8[4] = NULL;\n            ppiVar8[2] = NULL;\n            ppiVar8[3] = NULL;\n            ppiVar12 = ppiVar8;\n            if (*ppiVar8 != piStack248) {\n                if (piStack248 != NULL) {\n                    (**(*piStack248 + 8))(piStack248);\n                }\n                if (*ppiVar8 != NULL) {\n                    (**(**ppiVar8 + 0x10))();\n                }\n                *ppiVar8 = piVar4;\n            }\n        }\n        arg1[0x14] = ppiVar12;\n        (**(*piStack248 + 0x10))();\n        puVar2 = *arg1[0x14];\n        if (puVar2 != NULL) {\n            (***puVar2)(puVar2, 0x180055a68, arg1[0x14] + 1);\n        }\n        ppiVar8 = fcn.18000b904(0x48);\n        ppiVar12 = ppiVar10;\n        if (ppiVar8 != NULL) {\n            *ppiVar8 = NULL;\n            *(ppiVar8 + 1) = 0;\n            ppiVar8[2] = NULL;\n            ppiVar8[3] = NULL;\n            ppiVar8[5] = NULL;\n            ppiVar8[6] = NULL;\n            *(ppiVar8 + 0x3c) = 0;\n            ppiVar8[8] = 0x1f40;\n            ppiVar8[4] = NULL;\n            ppiVar12 = ppiVar8;\n        }\n        arg1[0x15] = ppiVar12;\n        fcn.180029770(ppiVar12, *arg1[0x14]);\n        *(arg1[0x14] + 0x10) = arg1[0x15];\n        uVar3 = *(arg1[0x15] + 0x18);\n        arg1[4] = uVar3;\n        if (0x1ffffff < uVar3) goto code_r0x00018002a7f9;\n        arg1_00 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)();\n        arg1[5] = arg1_00;\n        if (arg1_00 == 0) {\n            fcn.180015240();\n            pcVar6 = swi(3);\n            (*pcVar6)();\n            return;\n        }\n        ppiVar12 = arg1[4] << 6;\n        fcn.180035830(arg1_00, 0, ppiVar12);\n        ppiVar8 = arg1[0x14];\n        if (ppiVar8[3] != NULL) {\n            uStack272 = 0;\n            uStack280 = 0;\n            in_R9 = 0;\n            ppiVar12 = ppiVar8 + 3;\n            (**(**ppiVar8 + 0x30))();\n            ppiVar8[3] = NULL;\n        }\n        iVar7 = (**(**ppiVar8 + 0x38))();\n        if (-1 < iVar7) {\n            fcn.180027eb8(ppiVar8, 0, CONCAT71(ppiVar12 >> 8, 1), in_R9);\n        }\n        ppiVar12 = arg1[0x14] + 3;\n        if (*ppiVar12 != NULL) {\n            piVar4 = *arg1[0x14];\n            uStack272 = 0;\n            uStack280 = 0;\n            (**(*piVar4 + 0x30))(piVar4, 1, ppiVar12);\n            *ppiVar12 = NULL;\n        }\n    }\n    ppiVar12 = ppiVar10;\n    ppiVar8 = ppiVar10;\n    if (0 < arg1[4]) {\n        do {\n            ppiStack256 = fcn.18000b904(0x38);\n            ppiVar9 = ppiVar10;\n            if (ppiStack256 != NULL) {\n                ppiVar9 = fcn.180020d18(ppiStack256, 10);\n            }\n            *(ppiVar8 + arg1[5] + 0x38) = ppiVar9;\n            uVar11 = ppiVar12 + 1;\n            ppiVar12 = uVar11;\n            ppiVar8 = ppiVar8 + 8;\n        } while (uVar11 < arg1[4]);\n    }\n    if (iVar1 != 0) {\n        if (0 < iStack240) {\n            ppiVar12 = iVar1 + 0x38;\n            do {\n                puVar2 = (*ppiVar12)[1];\n                while (puVar2 != NULL) {\n                    if (puVar2 == NULL) {\n                        fcn.180015288();\n                        pcVar6 = swi(3);\n                        (*pcVar6)();\n                        return;\n                    }\n                    puVar5 = *puVar2;\n                    (**(*arg1 + 0x10))(arg1, puVar2[2], 1);\n                    puVar2 = puVar5;\n                }\n                fcn.180020bf8(*ppiVar12);\n                piVar4 = *ppiVar12;\n                if (piVar4 != NULL) {\n                    (**(*piVar4 + 8))(piVar4, 1);\n                }\n                uVar11 = ppiVar10 + 1;\n                ppiVar10 = uVar11;\n                ppiVar12 = ppiVar12 + 8;\n            } while (uVar11 < iStack240);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar1);\n    }\ncode_r0x00018002a7f9:\n    fcn.1800349d0(uStack56 ^ auStack312);\n    return;\n}\n",
        "token_count": 2489
    },
    "18002eac": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.18002eac4(ulong *hMem, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t *arg1;\n    ushort *puVar6;\n    uint64_t arg2_00;\n    int64_t arg2_01;\n    uint32_t uVar7;\n    uint64_t arg1_00;\n    int32_t iVar8;\n    uint64_t arg3;\n    bool bVar9;\n    uchar auStack200 [32];\n    uchar *puStack168;\n    uint uStack160;\n    ushort uStack152;\n    uchar auStack136 [64];\n    uint64_t uStack72;\n    \n    uStack72 = *0x18006ed40 ^ auStack200;\n    uStack152 = noname_2;\n    if (*(hMem + 1) != 0) {\n        arg1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*hMem);\n        bVar9 = *(arg1 + 2) == -1;\n        if (*(arg1 + 2) == -1) {\n            uVar7 = arg1[3];\n        }\n        else {\n            uVar7 = *arg1;\n        }\n        iVar8 = (-bVar9 & 2) + 1;\n        iVar5 = iVar8 * 2;\n        if (bVar9) {\n            arg1[3] = arg1[3] | 0x40;\n        }\n        else {\n            *arg1 = *arg1 | 0x40;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg2);\n        if (iVar3 < 0x20) {\n            puStack168 = auStack136;\n            uStack160 = 0x20;\n            iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg2, 0xffffffff);\n            iVar3 = iVar5 + iVar3 * 2;\n            if (iVar5 <= iVar3) {\n                puVar6 = fcn.18002e89c(arg1);\n                iVar4 = 0;\n                if ((uVar7 & 0x40) != 0) {\n                    iVar4 = fcn.1800360ec(iVar5 + puVar6);\n                    iVar4 = iVar5 + 2 + iVar4 * 2;\n                }\n                arg3 = iVar4 + 3 + puVar6 & 0xfffffffffffffffc;\n                arg1_00 = iVar3 + 3 + puVar6 & 0xfffffffffffffffc;\n                if (bVar9) {\n                    iVar2 = *(arg1 + 4);\n                }\n                else {\n                    iVar2 = *(arg1 + 2);\n                }\n                if ((iVar3 != iVar4) && (iVar2 != 0)) {\n                    arg2_00 = (*(hMem + 1) - arg3) + arg1;\n                    if (*(hMem + 1) < arg2_00) goto code_r0x00018002ec99;\n                    iVar4 = fcn.180034268(arg1_00, arg2_00, arg3, arg2_00);\n                    if (iVar4 != 0) {\n                        if (iVar4 == 0xc) {\n                            fcn.180015240();\n                            pcVar1 = swi(3);\n                            (*pcVar1)();\n                            return;\n                        }\n                        if ((iVar4 == 0x16) || (iVar4 == 0x22)) {\n                            fcn.180015288();\n                            pcVar1 = swi(3);\n                            (*pcVar1)();\n                            return;\n                        }\n                        if (iVar4 != 0x50) {\n                            fcn.180015288();\n                            pcVar1 = swi(3);\n                            (*pcVar1)();\n                            return;\n                        }\n                    }\n                }\n                arg2_01 = iVar3 + iVar8 * -2;\n                *puVar6 = uStack152;\n                iVar5 = fcn.180034268(iVar5 + puVar6, arg2_01, auStack136, arg2_01);\n                if (iVar5 != 0) {\n                    if (iVar5 == 0xc) {\n                        fcn.180015240();\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                        fcn.180015288();\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    if (iVar5 != 0x50) {\n                        fcn.180015288();\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                }\n                *(hMem + 1) = *(hMem + 1) + (arg1_00 - arg3);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*hMem);\n                *(hMem + 0xc) = 0;\n            }\n        }\n    }\ncode_r0x00018002ec99:\n    fcn.1800349d0(uStack72 ^ auStack200);\n    return;\n}\n",
        "token_count": 1159
    },
    "180030c3": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180030c34(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    ulong auStackX24 [2];\n    \n    auStackX24[0] = arg3;\n    fcn.180030b44(noname_0, noname_1, auStackX24, 1);\n    return;\n}\n",
        "token_count": 79
    },
    "1800383e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t fcn.1800383e0(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar uStackX8;\n    uchar uStackX9;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    fcn.1800352ac(&iStack40, 0);\n    if (arg1 < 0x100) {\n        if (*(iStack40 + 0x10c) < 2) {\n            uVar2 = *(*(iStack40 + 0x140) + arg1 * 2) & 4;\n        }\n        else {\n            uVar2 = fcn.180041c30(arg1, 4, &iStack40);\n        }\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n    }\n    else {\n        uStackX9 = arg1;\n        uStackX8 = arg1 >> 8;\n        if ((*(iStack32 + 8) == 0) || (iVar1 = fcn.180041fa8(&iStack40, 1, &uStackX8, 2),  iVar1 == 0)) {\n            if (cStack16 != '\\0') {\n                *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n            }\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0;\n            if (cStack16 != '\\0') {\n                *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 402
    },
    "18003851": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t fcn.18003851c(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar uStackX8;\n    uchar uStackX9;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    fcn.1800352ac(&iStack40, 0);\n    if (arg1 < 0x100) {\n        if (*(iStack40 + 0x10c) < 2) {\n            uVar2 = *(*(iStack40 + 0x140) + arg1 * 2) & 8;\n        }\n        else {\n            uVar2 = fcn.180041c30(arg1, 8, &iStack40);\n        }\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n    }\n    else {\n        uStackX9 = arg1;\n        uStackX8 = arg1 >> 8;\n        if ((*(iStack32 + 8) == 0) || (iVar1 = fcn.180041fa8(0, 1, &uStackX8, 2),  iVar1 == 0)) {\n            if (cStack16 != '\\0') {\n                *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n            }\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0;\n            if (cStack16 != '\\0') {\n                *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 399
    },
    "18000bab": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint64_t fcn.18000babc(int64_t arg1, uint64_t arg2, ulong noname_2, code *arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong *in_stack_00000028;\n    uint64_t in_stack_00000030;\n    int64_t *in_stack_00000038;\n    \n    if (arg1 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    if (in_stack_00000038 != NULL) {\n        *in_stack_00000038 = arg1;\n        in_stack_00000038[1] = arg4;\n        return 1;\n    }\n    if (in_stack_00000030 < 0x40) {\n        if (in_stack_00000030 == 0x3f) {\n            if (in_stack_00000028 == NULL) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            (*arg4)(arg1, arg2, in_stack_00000028[1], *in_stack_00000028);\n            return 1;\n        }\n        if (in_stack_00000030 == 0x39) {\n            (*arg4)();\n            return 1;\n        }\n        if (in_stack_00000030 == 0x3a) {\n            uVar2 = (*arg4)();\n        }\n        else {\n            if (in_stack_00000030 == 0x3b) {\n                (*arg4)();\n                return 1;\n            }\n            if (in_stack_00000030 == 0x3c) {\n                uVar2 = (*arg4)();\n            }\n            else {\n                if (in_stack_00000030 == 0x3d) {\n                    if (in_stack_00000028 == NULL) {\n                        fcn.180015288();\n                        pcVar1 = swi(3);\n                        uVar3 = (*pcVar1)();\n                        return uVar3;\n                    }\n                    (*arg4)(arg1, in_stack_00000028[1], *in_stack_00000028);\n                    return 1;\n                }\n                if (in_stack_00000030 != 0x3e) {\n                    return 0;\n                }\n                if (in_stack_00000028 == NULL) {\n                    fcn.180015288();\n                    pcVar1 = swi(3);\n                    uVar3 = (*pcVar1)();\n                    return uVar3;\n                }\n                uVar2 = (*arg4)(arg1, in_stack_00000028[1], *in_stack_00000028);\n            }\n        }\n    }\n    else if (in_stack_00000030 == 0x40) {\n        if (in_stack_00000028 == NULL) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        uVar2 = (*arg4)(arg1, arg2, in_stack_00000028[1], *in_stack_00000028);\n    }\n    else {\n        if (in_stack_00000030 == 0x41) {\n            if (in_stack_00000028 == NULL) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            (*arg4)(arg1, in_stack_00000028);\n        }\n        else {\n            if (in_stack_00000030 != 0x42) {\n                if (in_stack_00000030 == 0x43) {\n                    (*arg4)(arg1, in_stack_00000028);\n                    return 1;\n                }\n                if (in_stack_00000030 != 0x44) {\n                    return 0;\n                }\n                uVar2 = (*arg4)(arg1, in_stack_00000028);\n                goto code_r0x00018000bc2f;\n            }\n            if (in_stack_00000028 == NULL) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            (*arg4)(arg1, in_stack_00000028, arg2 & 0xffffffff);\n        }\n        uVar2 = *(in_stack_00000028 + 0x2c) == 0;\n        *(in_stack_00000028 + 0x2c) = 0;\n    }\ncode_r0x00018000bc2f:\n    return uVar2;\n}\n",
        "token_count": 1060
    },
    "18001494": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180014948(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (arg4 == -1) {\n        arg4._0_4_ = fcn.1800360ec(arg3);\n        arg4._0_4_ = arg4 + 1;\n    }\n    iVar2 = fcn.1800341d0(arg1, arg2 * 2, arg3, arg4 * 2);\n    if (iVar2 != 0) {\n        if (iVar2 == 0xc) {\n            fcn.180015240();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (iVar2 != 0x50) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "1800157f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.1800157fc(int64_t arg1, int64_t arg2)\n\n{\n    ulong arg3;\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    \n    if (arg2 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar2 = fcn.180037580(arg2, *(arg1 + 0x20));\n    if (iVar2 == -1) {\n        arg3 = *(arg1 + 0x18);\n        puVar3 = fcn.180036070();\n        fcn.180023e20(0xd, *puVar3, arg3);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "18002012": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * fcn.180020124(int32_t *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    *(arg1 + 6) = 0;\n    *(arg1 + 8) = 8;\n    arg1[1] = 0;\n    arg1[2] = 1;\n    arg1[3] = 0;\n    *(arg1 + 4) = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *arg1 = iVar2;\n    if (iVar2 == -1) {\n        fcn.180015240();\n        pcVar1 = swi(3);\n        piVar3 = (*pcVar1)();\n        return piVar3;\n    }\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(arg1 + 10);\n    return arg1;\n}\n",
        "token_count": 204
    },
    "180020fa": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180020fa0(int64_t *arg1, ulong lpWideCharStr)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    if (arg1 == NULL) {\n        return;\n    }\n    uVar3 = (*_sym.imp.OLEAUT32.dll_VariantInit)(lpWideCharStr);\n    uVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, lpWideCharStr, uVar3, 0, 0, 0, 0);\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar4) < 0) {\n        fcn.1800013f0(arg1, uVar4);\n    }\n    iVar1 = *arg1;\n    if ((uVar4 < 0) || (*(iVar1 + -0xc) < uVar4)) {\n        fcn.180001030(0x80070057);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    *(iVar1 + -0x10) = uVar4;\n    *(uVar4 + *arg1) = 0;\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, lpWideCharStr, uVar3, iVar1, uVar4, 0, 0);\n    if (uVar4 == 0xffffffff) {\n        iVar1 = *arg1;\n        if (iVar1 != 0) {\n            uVar4 = fcn.1800359d8(iVar1, *(iVar1 + -0xc));\n            goto code_r0x000180021076;\n        }\n        uVar4 = 0;\n    }\n    else {\ncode_r0x000180021076:\n        if (uVar4 < 0) goto code_r0x0001800210a4;\n    }\n    if (uVar4 <= *(*arg1 + -0xc)) {\n        *(*arg1 + -0x10) = uVar4;\n        *(uVar4 + *arg1) = 0;\n        return;\n    }\ncode_r0x0001800210a4:\n    fcn.180001030(0x80070057);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 534
    },
    "18002359": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.18002359c(int64_t arg1, int64_t *arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t *piVar4;\n    uchar uVar5;\n    uchar auStackX8 [8];\n    uchar auStackX16 [8];\n    uchar auStackX24 [8];\n    int64_t iStackX32;\n    uchar auStack56 [8];\n    uchar auStack48 [24];\n    \n    fcn.180035830(arg2, 0, 0x128);\n    iVar2 = fcn.1800360d8(arg2 + 0x22, 0x104, *(arg1 + 0x18), 0xffffffffffffffff);\n    if (iVar2 != 0) {\n        if (iVar2 == 0xc) {\n            fcn.180015240();\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        if (iVar2 != 0x50) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n    }\n    if (*(arg1 + 8) == *0x180055350) {\ncode_r0x00018002375a:\n        uVar3 = 1;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetFileTime)(*(arg1 + 8), auStackX8, auStackX16, auStackX24);\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(*(arg1 + 8), &iStackX32);\n            if (iVar2 != 0) {\n                arg2[3] = iStackX32;\n                if (*(*(arg1 + 0x18) + -0x10) == 0) {\n                    *(arg2 + 4) = 0;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)();\n                    uVar5 = iVar2;\n                    if (iVar2 == -1) {\n                        uVar5 = 0;\n                    }\n                    *(arg2 + 4) = uVar5;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(auStackX8, auStack56);\n                if (iVar2 == 0) {\ncode_r0x0001800236ad:\n                    *arg2 = 0;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(auStack56, auStack48);\n                    if (iVar2 == 0) goto code_r0x0001800236ad;\n                    piVar4 = fcn.1800234d8(auStack56, auStackX8, 0xffffffff);\n                    *arg2 = *piVar4;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(auStackX16, auStack56);\n                if (iVar2 == 0) {\ncode_r0x0001800236f4:\n                    arg2[2] = 0;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(auStack56, auStack48);\n                    if (iVar2 == 0) goto code_r0x0001800236f4;\n                    piVar4 = fcn.1800234d8(auStack56, auStackX16, 0xffffffff);\n                    arg2[2] = *piVar4;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(auStackX24, auStack56);\n                if (iVar2 == 0) {\ncode_r0x00018002373c:\n                    arg2[1] = 0;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(auStack56, auStack48);\n                    if (iVar2 == 0) goto code_r0x00018002373c;\n                    piVar4 = fcn.1800234d8(auStack56, auStackX24, 0xffffffff);\n                    arg2[1] = *piVar4;\n                }\n                if (*arg2 == 0) {\n                    *arg2 = arg2[1];\n                }\n                if (arg2[2] == 0) {\n                    arg2[2] = arg2[1];\n                }\n                goto code_r0x00018002375a;\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 1100
    },
    "18003093": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.180030938(char **arg1, char *arg2, int64_t arg3, ulong arg4)\n\n{\n    char cVar1;\n    char *arg1_00;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint64_t arg2_00;\n    \n    arg2_00 = 0;\n    if (arg2 == NULL) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg3 == 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    cVar1 = *arg2;\n    pcVar6 = arg2;\n    while (iVar5 = arg2_00,  cVar1 != '\\0') {\n        if (*pcVar6 == '%') {\n            cVar1 = pcVar6[1];\n            if ((cVar1 < '1') || ('9' < cVar1)) {\n                if ((cVar1 < 'A') || ('Z' < cVar1)) goto code_r0x0001800309cd;\n                if (cVar1 < ':') goto code_r0x0001800309a8;\n                iVar4 = cVar1 + -0x38;\n            }\n            else {\ncode_r0x0001800309a8:\n                iVar4 = cVar1 + -0x31;\n            }\n            pcVar6 = pcVar6 + 2;\n            if (arg4 <= iVar4) goto code_r0x0001800309e2;\n            if (*(arg3 + iVar4 * 8) != 0) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                arg2_00 = iVar5 + iVar4;\n            }\n        }\n        else {\ncode_r0x0001800309cd:\n            iVar4 = fcn.180039598(*pcVar6);\n            if (iVar4 != 0) {\n                iVar5 = iVar5 + 1;\n                pcVar6 = pcVar6 + 1;\n            }\n            pcVar6 = pcVar6 + 1;\ncode_r0x0001800309e2:\n            arg2_00 = iVar5 + 1;\n        }\n        cVar1 = *pcVar6;\n    }\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - iVar5) < 0) {\n        fcn.1800013f0(arg1, arg2_00);\n    }\n    pcVar6 = *arg1;\n    while( true ) {\n        iVar4 = arg2_00;\n        iVar5 = 0;\n        if (*arg2 == '\\0') break;\n        if (*arg2 == '%') {\n            cVar1 = arg2[1];\n            if ((cVar1 < '1') || ('9' < cVar1)) {\n                if ((cVar1 < 'A') || ('Z' < cVar1)) goto code_r0x000180030aa1;\n                if (cVar1 < ':') goto code_r0x000180030a3d;\n                iVar5 = cVar1 + -0x38;\n            }\n            else {\ncode_r0x000180030a3d:\n                iVar5 = cVar1 + -0x31;\n            }\n            arg2 = arg2 + 2;\n            if (arg4 <= iVar5) {\n                *pcVar6 = '?';\n                goto code_r0x000180030ac1;\n            }\n            if (*(arg3 + iVar5 * 8) != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                iVar5 = fcn.1800388f0(pcVar6, iVar4 + 1, *(arg3 + iVar5 * 8));\n                if (iVar5 != 0) {\n                    if (iVar5 == 0xc) {\n                        fcn.180015240();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar5 != 0x50) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                arg2_00 = iVar4 - iVar3;\n                pcVar6 = pcVar6 + iVar3;\n            }\n        }\n        else {\ncode_r0x000180030aa1:\n            iVar5 = fcn.180039598(*arg2);\n            if (iVar5 != 0) {\n                cVar1 = *arg2;\n                arg2 = arg2 + 1;\n                *pcVar6 = cVar1;\n                pcVar6 = pcVar6 + 1;\n                iVar4 = iVar4 + -1;\n            }\n            cVar1 = *arg2;\n            arg2 = arg2 + 1;\n            *pcVar6 = cVar1;\ncode_r0x000180030ac1:\n            pcVar6 = pcVar6 + 1;\n            arg2_00 = iVar4 - 1;\n        }\n    }\n    arg1_00 = *arg1;\n    iVar4 = pcVar6 - arg1_00;\n    if (iVar4 == -1) {\n        if (arg1_00 != NULL) {\n            iVar4 = fcn.1800359d8(arg1_00, *(arg1_00 + -0xc));\n            goto code_r0x000180030afd;\n        }\n    }\n    else {\ncode_r0x000180030afd:\n        iVar5 = iVar4;\n        if (iVar4 < 0) goto code_r0x000180030b36;\n    }\n    if (iVar5 <= *(*arg1 + -0xc)) {\n        *(*arg1 + -0x10) = iVar5;\n        (*arg1)[iVar5] = '\\0';\n        return;\n    }\ncode_r0x000180030b36:\n    fcn.180001030(0x80070057);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1419
    },
    "18000c13": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.18000c130(ulong noname_0, ulong arg2)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    uint16_t uVar9;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    uchar auStack200 [32];\n    uchar *puStack168;\n    uchar auStack152 [128];\n    uint64_t uStack24;\n    \n    uStack24 = *0x18006ed40 ^ auStack200;\n    uVar3 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar6 = uVar3;\n    iVar7 = uVar3 >> 0x10;\n    if ((4 < iVar6) && (iVar8 = 5,  5 < iVar7)) {\n        if (0x20 < iVar6) {\n            iVar6 = 0x20;\n        }\n        iVar5 = iVar6 + 0xf >> 4;\n        iVar11 = (iVar5 * 0x10 + (iVar6 + -4) / 2) - iVar6;\n        if (0xc < iVar11) {\n            iVar11 = 0xc;\n        }\n        if (0x20 < iVar7) {\n            iVar7 = 0x20;\n        }\n        fcn.180035830(auStack152, 0xff, 0x80);\n        puVar10 = 0x180051180;\n        puVar4 = auStack152 + (iVar7 + -6 >> 1) * iVar5 * 2;\n        do {\n            uVar1 = *puVar10;\n            puVar10 = puVar10 + 1;\n            uVar9 = ~(uVar1 << (iVar11 & 0x1f));\n            puVar4[1] = uVar9;\n            *puVar4 = uVar9 >> 8;\n            puVar4 = puVar4 + iVar5 * 2;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n        puStack168 = auStack152;\n        *0x180074040 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar6, iVar7, 1);\n        if (*0x180074040 == 0) {\n            *0x180074040 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n        }\n        fcn.1800349d0(uStack24 ^ auStack200);\n        return;\n    }\n    fcn.180015288();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 613
    },
    "18000f8b": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint64_t fcn.18000f8b4(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int64_t iVar3;\n    \n    iVar3 = fcn.1800206d0(0x180073ca0, 0x18000d9b0);\n    if (iVar3 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar3 + 0xb8) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar3 + 0xbc) = CONCAT44(uVar2 >> 0x10, uVar2);\n    return iVar3 + 0x98;\n}\n",
        "token_count": 194
    },
    "180012f3": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint64_t fcn.180012f3c(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t *in_stack_00000028;\n    uchar auStack40 [8];\n    int64_t iStack32;\n    int32_t iStack24;\n    \n    if (arg2 < 0x2b) {\ncode_r0x000180012f8a:\n        if (arg2 - 0x132 < 7) {\n            iStack24 = arg2 - 0x132;\n            iStack32 = arg3;\n            uVar1 = fcn.180012154(arg1, 0xbc19, 0, auStack40);\n            return -(*in_stack_00000028 != 0) & uVar1;\n        }\ncode_r0x000180013060:\n        uVar3 = 0;\n    }\n    else {\n        if ((0x2f < arg2) && (arg2 != 0x39)) {\n            if (arg2 == 0x4e) {\n                iStack32 = arg4;\n                uVar3 = fcn.18000bc40(arg1, 0, *(arg4 + 0x10) | 0xbc4e0000, auStack40);\n                return uVar3;\n            }\n            if (arg2 == 0x111) {\n                iVar2 = fcn.18000bc40(arg1, 0, arg3 >> 0x10 | 0xbd110000, 0);\n                if (iVar2 != 0) {\n                    if (in_stack_00000028 == NULL) {\n                        return 1;\n                    }\n                    *in_stack_00000028 = 1;\n                    return 1;\n                }\n                goto code_r0x000180013060;\n            }\n            if ((arg2 < 0x114) || ((0x115 < arg2 && (arg2 != 0x210)))) goto code_r0x000180012f8a;\n        }\n        uVar3 = fcn.180012154(arg1, arg2 + 0xbc00, arg3, arg4);\n    }\n    return uVar3;\n}\n",
        "token_count": 500
    },
    "18002f8d": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint64_t fcn.18002f8d4(int64_t hWnd)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x400, 0, 0);\n    uVar2 = 1;\n    if (uVar1 >> 0x10 == 0x534b) {\n        uVar2 = uVar1 & 0xffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 121
    },
    "18002879": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.180028790(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    ulong uVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    \n    uVar5 = 0;\n    if (arg3 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar2 = swi(3);\n        uVar3 = (*pcVar2)();\n        return uVar3;\n    }\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar1 = *(*(arg1 + 0x28) + 0x10);\n        if (arg2 <= *(arg1 + 0x18) + -1 + iVar1) {\n            uVar5 = arg2 - iVar1;\ncode_r0x0001800287fb:\n            *arg3 = *((*(*(arg1 + 0x28) + 0x20 + uVar5 * 0x50) + 7 + *(*(arg1 + 0x28) + 8 + uVar5 * 0x50) &\n                      0xfffffffffffffff8U) + 8 + *(arg1 + 0x10));\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        puVar4 = *(arg1 + 0x28) + 0x10;\n        do {\n            if (*puVar4 == arg2) goto code_r0x0001800287fb;\n            uVar5 = uVar5 + 1;\n            puVar4 = puVar4 + 10;\n        } while (uVar5 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 402
    },
    "1800312c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint64_t fcn.1800312c0(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint16_t in_DX;\n    int64_t iVar4;\n    \n    if (0x15 < in_DX) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        uVar3 = (*pcVar2)();\n        return uVar3;\n    }\n    uVar3 = *(in_DX * 4 + 0x180056b40) + 0xfU & 0xfffffff8;\n    do {\n        uVar1 = *arg1;\n        if (uVar1 == 0) {\n            return uVar3;\n        }\n        if (uVar1 != 0xff) {\n            iVar4 = 0x180056ae0;\n            if ((uVar1 & 0x40) == 0) {\n                iVar4 = 0x180056a80;\n            }\n            if (0x15 < (uVar1 & 0xbf)) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                uVar3 = (*pcVar2)();\n                return uVar3;\n            }\n            uVar3 = *(iVar4 + (uVar1 & 0xbf) * 4) + 7 + uVar3 & 0xfffffff8;\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 331
    },
    "18000fa5": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000fa58(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001e99c();\n    if (*(iVar1 + 0x28) != 0) {\n        fcn.18001f148(*(iVar1 + 0x28) + 0x30, arg1);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "18000fae": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.18000fae4(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 0x40);\n    if (iVar1 != 0) {\n        iVar2 = fcn.18001e99c();\n        if (*(iVar2 + 0x28) != 0) {\n            fcn.18001f1bc(*(iVar2 + 0x28) + 0x30, *(arg1 + 0x40));\n        }\n        *(arg1 + 0x40) = 0;\n    }\n    *(arg1 + 0xa0) = 0;\n    return iVar1;\n}\n",
        "token_count": 157
    },
    "18000fd5": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint64_t fcn.18000fd54(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    uVar4 = 0;\n    if (*(arg1 + 0x40) == 0) {\n        if (*(arg1 + 0xa0) == 0) {\n            return 0;\n        }\n        if (*(arg1 + 0x40) == 0) goto code_r0x00018000fd9d;\n    }\n    iVar3 = fcn.18001e99c();\n    if (*(iVar3 + 0x28) == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    fcn.18001f148(*(iVar3 + 0x28) + 0x30, *(arg1 + 0x40));\ncode_r0x00018000fd9d:\n    if ((*(arg1 + 0x40) != 0) || (*(arg1 + 0xa0) != 0)) {\n        if (*(arg1 + 0xa0) == 0) {\n            uVar2 = (*_sym.imp.USER32.dll_DestroyWindow)();\n        }\n        else {\n            uVar2 = (**(**(arg1 + 0xa0) + 0xb0))();\n        }\n        uVar4 = uVar2;\n    }\n    return uVar4;\n}\n",
        "token_count": 343
    },
    "1800196a": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.1800196ac(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = arg1[1];\n    if (iVar1 != 0) {\n        iVar2 = fcn.18001e99c();\n        if (*(iVar2 + 0x38) != 0) {\n            fcn.18001f1bc(*(iVar2 + 0x38) + 0x30, arg1[1]);\n        }\n    }\n    (**(*arg1 + 0x28))(arg1);\n    arg1[1] = 0;\n    return iVar1;\n}\n",
        "token_count": 145
    },
    "180019a1": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.180019a14(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 8);\n    if (iVar1 != 0) {\n        iVar2 = fcn.18001e99c();\n        if (*(iVar2 + 0x40) != 0) {\n            fcn.18001f1bc(*(iVar2 + 0x40) + 0x30, *(arg1 + 8));\n        }\n    }\n    *(arg1 + 8) = 0;\n    return iVar1;\n}\n",
        "token_count": 136
    },
    "18001eb4": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001eb44(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001e99c();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.18001f148(*(iVar1 + 0x30) + 0x30, arg1);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "18001eb7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.18001eb70(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 8);\n    if (iVar1 != 0) {\n        iVar2 = fcn.18001e99c();\n        if (*(iVar2 + 0x30) != 0) {\n            fcn.18001f1bc(*(iVar2 + 0x30) + 0x30, *(arg1 + 8));\n        }\n    }\n    *(arg1 + 8) = 0;\n    return iVar1;\n}\n",
        "token_count": 136
    },
    "1800257d": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\ncode ** fcn.1800257d4(code **arg1, code *arg2)\n\n{\n    arg1[1] = arg2;\n    *arg1 = vtable.CDataSourceControl.0;\n    arg1[2] = NULL;\n    arg1[3] = NULL;\n    arg1[4] = NULL;\n    arg1[5] = NULL;\n    fcn.180020d18(arg1 + 6, 10);\n    arg1[0xd] = NULL;\n    arg1[0xe] = NULL;\n    arg1[0xf] = NULL;\n    arg1[0x10] = NULL;\n    *(arg1 + 0x11) = 0;\n    arg1[0x12] = NULL;\n    arg1[0x13] = NULL;\n    arg1[0x14] = NULL;\n    arg1[0x15] = NULL;\n    *(arg1 + 0x16) = 0;\n    return arg1;\n}\n",
        "token_count": 217
    },
    "180027ce": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.180027ce8(int64_t arg1, ulong noname_1, ulong arg3, uint32_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uStack56;\n    uint uStack52;\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    uint uStack20;\n    uint uStack12;\n    \n    uStack12 = 1;\n    if ((((noname_1 & 1) != 0) || ((noname_1 & 2) != 0)) && (uVar2 = 0,  arg3 != 0)) {\n        do {\n            uVar1 = *arg4;\n            if (0x13 < uVar1) {\n                if (uVar1 == 0x14) {\ncode_r0x000180027d95:\n                    uStack12 = 5;\n                    goto code_r0x000180027d9a;\n                }\n                if (uVar1 != 0x15) {\n                    if (uVar1 == 0x17) goto code_r0x000180027d2c;\n                    if (uVar1 == 0x18) {\n                        uStack12 = 2;\n                        goto code_r0x000180027d9a;\n                    }\n                    if (uVar1 == 0x19) goto code_r0x000180027d9a;\n                    if (uVar1 == 0x1f) {\n                        uStack12 = 4;\n                        goto code_r0x000180027d9a;\n                    }\n                    goto code_r0x000180027d6e;\n                }\ncode_r0x000180027d4c:\n                uStack12 = 7;\ncode_r0x000180027d9a:\n                uStack52 = 0xffffffff;\n                uStack56 = 3;\n                uStack48 = 0;\n                uStack40 = 0;\n                uStack32 = 0;\n                uStack20 = 0;\n                fcn.180024e10(arg1 + -0x170, &uStack56);\n                return uStack20;\n            }\n            if (uVar1 == 0x13) goto code_r0x000180027d4c;\n            if (uVar1 < 9) {\n                if (5 < uVar1) goto code_r0x000180027d4c;\n                if (uVar1 == 1) {\n                    uStack12 = 3;\n                    goto code_r0x000180027d9a;\n                }\n                if (uVar1 == 2) goto code_r0x000180027d95;\n                if (uVar1 == 3) goto code_r0x000180027d2c;\n            }\n            else if (8 < uVar1) {\n                if (uVar1 < 0xb) {\ncode_r0x000180027d2c:\n                    uStack12 = 6;\n                    goto code_r0x000180027d9a;\n                }\n                if ((uVar1 < 0xd) || ((0xe < uVar1 && (uVar1 < 0x11)))) goto code_r0x000180027d4c;\n            }\ncode_r0x000180027d6e:\n            uVar2 = uVar2 + 1;\n            arg4 = arg4 + 0xe;\n        } while (uVar2 < arg3);\n    }\n    return 0;\n}\n",
        "token_count": 762
    },
    "180015bc": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint64_t fcn.180015bcc(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t arg1_00;\n    ulong arg3;\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint32_t *puVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    uVar2 = fcn.180035930(0x18004f88a);\n    fcn.180001640(arg2, 0x18004f88a, uVar2);\n    if ((1U - *(*arg2 + -8) | *(*arg2 + -0xc) - 0x80U) < 0) {\n        fcn.1800013f0(arg2, 0x80);\n    }\n    iVar7 = *arg2;\n    while( true ) {\n        iVar4 = fcn.180037710(iVar7, 0x81, *(arg1 + 0x20));\n        arg1_00 = *arg2;\n        iVar3 = 0;\n        if (((arg1_00 != 0) && (iVar3 = fcn.1800359d8(arg1_00, *(arg1_00 + -0xc)),  iVar3 < 0)) ||\n           (*(*arg2 + -0xc) < iVar3)) {\n            fcn.180001030(0x80070057);\n            pcVar1 = swi(3);\n            uVar6 = (*pcVar1)();\n            return uVar6;\n        }\n        *(*arg2 + -0x10) = iVar3;\n        *(iVar3 + *arg2) = 0;\n        if (iVar4 == 0) break;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        if ((iVar3 < 0x80) || (*(iVar3 + -1 + iVar7) == '\\n')) goto code_r0x000180015d27;\n        iVar7 = *arg2;\n        iVar3 = *(iVar7 + -0x10);\n        uVar2 = iVar3 + 0x80;\n        if ((1U - *(iVar7 + -8) | *(iVar7 + -0xc) - uVar2) < 0) {\n            fcn.1800013f0(arg2, uVar2);\n        }\n        iVar7 = iVar3 + *arg2;\n    }\n    iVar3 = fcn.180036f94(*(arg1 + 0x20));\n    if (iVar3 == 0) {\n        iVar3 = fcn.180036ecc(*(arg1 + 0x20));\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.180015240();\n                pcVar1 = swi(3);\n                uVar6 = (*pcVar1)();\n                return uVar6;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                uVar6 = (*pcVar1)();\n                return uVar6;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                uVar6 = (*pcVar1)();\n                return uVar6;\n            }\n        }\n        arg3 = *(arg1 + 0x18);\n        puVar5 = fcn.180036070();\n        fcn.180023e20(1, *puVar5, arg3);\n        pcVar1 = swi(3);\n        uVar6 = (*pcVar1)();\n        return uVar6;\n    }\ncode_r0x000180015d27:\n    if ((1U - *(*arg2 + -8) | *(*arg2 + -0xc)) < 0) {\n        fcn.1800013f0(arg2, 0);\n    }\n    iVar7 = *arg2;\n    iVar3 = *(iVar7 + -0x10);\n    if ((iVar3 != 0) && (*(iVar3 + -1 + iVar7) == '\\n')) {\n        uVar2 = iVar3 - 1;\n        if ((1U - *(iVar7 + -8) | *(iVar7 + -0xc) - uVar2) < 0) {\n            fcn.1800013f0(arg2, uVar2);\n        }\n        if ((uVar2 < 0) || (*(*arg2 + -0xc) < uVar2)) {\n            fcn.180001030(0x80070057);\n            pcVar1 = swi(3);\n            uVar6 = (*pcVar1)();\n            return uVar6;\n        }\n        *(*arg2 + -0x10) = uVar2;\n        *(uVar2 + *arg2) = 0;\n    }\n    return iVar3 != 0;\n}\n",
        "token_count": 1094
    },
    "18001abc": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint64_t fcn.18001abc4(uint32_t *arg1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    uVar4 = *arg1;\n    bVar5 = *(arg1 + 2) == -1;\n    if (bVar5) {\n        uVar4 = arg1[3];\n        piVar3 = arg1 + 0x1a;\n    }\n    else {\n        piVar3 = arg1 + 0x12;\n    }\n    if (*piVar3 == -1) {\n        piVar3 = piVar3 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar3 == -1) {\n        piVar3 = piVar3 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        piVar2 = piVar3;\n        piVar3 = piVar2 + 1;\n    } while (*piVar2 != 0);\n    if ((uVar4 & 0x40) != 0) {\n        piVar3 = piVar2 + (-bVar5 & 2) + 2;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    return piVar3 + 3U & 0xfffffffffffffffc;\n}\n",
        "token_count": 390
    },
    "18002430": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint fcn.180024304(int64_t arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    uint uVar1;\n    ulong *puVar2;\n    int64_t *in_stack_00000028;\n    \n    if (((arg1 == 0) || (arg3 == 0)) || (in_stack_00000028 == NULL)) {\n        uVar1 = 0x80004005;\n    }\n    else {\n        uVar1 = (**(*in_stack_00000028 + 0x20))\n                          (in_stack_00000028, (-(*(arg1 + 0x40) != 0) & 2U) + 2, arg2, arg1, arg4, arg3, 0);\n        if (arg2 != 0) {\n            puVar2 = arg1 + 0x28;\n            do {\n                fcn.18000b948(*puVar2);\n                puVar2 = puVar2 + 0xb;\n                arg2 = arg2 + -1;\n            } while (arg2 != 0);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 252
    },
    "18002e8f": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint64_t fcn.18002e8f4(uint32_t *arg1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint16_t *puVar5;\n    int16_t iVar6;\n    bool bVar7;\n    \n    bVar7 = *(arg1 + 2) == -1;\n    iVar3 = fcn.18002e89c(arg1);\n    if (*(arg1 + 2) == -1) {\n        uVar2 = arg1[3];\n    }\n    else {\n        uVar2 = *arg1;\n    }\n    if ((uVar2 & 0x40) != 0) {\n        iVar3 = iVar3 + ((-bVar7 & 2) + 1) * 2;\n        iVar4 = fcn.1800360ec(iVar3);\n        iVar3 = iVar3 + 2 + iVar4 * 2;\n    }\n    if (bVar7) {\n        iVar6 = *(arg1 + 4);\n    }\n    else {\n        iVar6 = *(arg1 + 2);\n    }\n    if (iVar6 != 0) {\n        do {\n            puVar5 = (iVar3 + 3U & 0xfffffffffffffffc) + (-bVar7 & 6) + 0x12;\n            if (*puVar5 == 0xffff) {\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                do {\n                    uVar1 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                } while (uVar1 != 0);\n            }\n            if (*puVar5 == 0xffff) {\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                do {\n                    uVar1 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                } while (uVar1 != 0);\n            }\n            uVar1 = *puVar5;\n            if ((uVar1 != 0) && (!bVar7)) {\n                uVar1 = uVar1 - 2;\n            }\n            iVar6 = iVar6 + -1;\n            iVar3 = puVar5 + uVar1 + 2;\n        } while (iVar6 != 0);\n    }\n    return iVar3 - arg1 & 0xffffffff;\n}\n",
        "token_count": 528
    },
    "18003547": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint64_t fcn.180035470(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint *puVar3;\n    uint64_t uVar4;\n    uint16_t uVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uchar auStack40 [8];\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    fcn.1800352ac(auStack40, 0);\n    if ((arg1 == NULL) || (arg2 == NULL)) {\n        puVar3 = fcn.180036050();\n        *puVar3 = 0x16;\n        fcn.180039810(0, 0, 0, 0);\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        uVar4 = 0x7fffffff;\n    }\n    else if (*(iStack32 + 8) == 0) {\n        uVar4 = fcn.180039630(arg1, arg2);\ncode_r0x00018003544a:\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n    }\n    else {\n        do {\n            uVar1 = *arg1;\n            puVar8 = arg1 + 1;\n            uVar4 = uVar1;\n            if (((*(uVar1 + 0x1d + iStack32) & 4) != 0) && (uVar4 = 0,  *puVar8 != 0)) {\n                uVar2 = *puVar8;\n                puVar8 = arg1 + 2;\n                uVar4 = CONCAT11(uVar1, uVar2);\n            }\n            uVar1 = *arg2;\n            puVar7 = arg2 + 1;\n            uVar6 = uVar1;\n            if (((*(uVar1 + 0x1d + iStack32) & 4) != 0) && (uVar6 = 0,  *puVar7 != 0)) {\n                uVar2 = *puVar7;\n                puVar7 = arg2 + 2;\n                uVar6 = CONCAT11(uVar1, uVar2);\n            }\n            uVar5 = uVar4;\n            if (uVar6 != uVar5) {\n                uVar4 = (-(uVar6 < uVar5) & 2) - 1;\n                goto code_r0x00018003544a;\n            }\n            arg2 = puVar7;\n            arg1 = puVar8;\n        } while (uVar5 != 0);\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 696
    },
    "18001b9e": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.18001b9e0(ulong noname_0, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    uint64_t arg2_00;\n    uint *puVar8;\n    uint32_t *puVar9;\n    int64_t iVar10;\n    uchar *puVar11;\n    uint *puVar12;\n    uint *in_stack_00000028;\n    int16_t in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t in_stack_00000040;\n    ulong *in_stack_00000048;\n    ulong var_98h;\n    uchar auStack392 [32];\n    uint uStack360;\n    int32_t *piStack352;\n    uint32_t uStack344;\n    uchar *puStack336;\n    uint32_t uStack328;\n    int64_t iStack320;\n    int64_t *piStack312;\n    ushort uStack296;\n    ushort uStack294;\n    int64_t iStack288;\n    uint64_t uStack280;\n    uint32_t uStack272;\n    uint uStack268;\n    uint32_t uStack264;\n    int64_t iStack256;\n    uint uStack248;\n    uint uStack244;\n    ushort uStack240;\n    ushort uStack238;\n    ushort uStack236;\n    int16_t iStack234;\n    ushort uStack232;\n    ulong *puStack224;\n    int32_t iStack216;\n    int32_t iStack212;\n    int32_t iStack208;\n    int32_t iStack204;\n    ulong uStack200;\n    int64_t iStack192;\n    ulong uStack184;\n    int64_t iStack176;\n    uchar auStack168 [80];\n    uchar auStack88 [16];\n    uint64_t uStack72;\n    \n    uStack184 = 0xfffffffffffffffe;\n    uStack72 = *0x18006ed40 ^ auStack392;\n    uStack200 = arg3;\n    iStack192 = arg2;\n    puStack224 = in_stack_00000048;\n    puVar12 = in_stack_00000028 + 0x12;\n    iVar5 = 0;\n    puVar8 = in_stack_00000028;\n    if (arg4 != 0) {\n        uStack248 = in_stack_00000028[2];\n        uStack244 = in_stack_00000028[1];\n        uStack240 = *(in_stack_00000028 + 3);\n        uStack238 = *(in_stack_00000028 + 0xe);\n        uStack236 = *(in_stack_00000028 + 4);\n        iStack234 = *puVar12;\n        uStack232 = *(in_stack_00000028 + 5);\n        puVar8 = &uStack248;\n        puVar12 = in_stack_00000028 + 6;\n    }\n    iStack212 = *(puVar8 + 10);\n    iStack204 = *(puVar8 + 0xe) + iStack212;\n    iStack216 = *(puVar8 + 2);\n    iStack208 = *(puVar8 + 3) + iStack216;\n    (*_sym.imp.USER32.dll_MapDialogRect)(*(arg2 + 0x40), &iStack216);\n    if (3 < in_stack_00000040) {\n        uVar3 = *in_stack_00000038;\n        in_stack_00000038 = in_stack_00000038 + 1;\n        in_stack_00000040 = in_stack_00000040 - 4;\n        if (uVar3 != 0) {\n            iVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(in_stack_00000038, uVar3);\n            in_stack_00000038 = in_stack_00000038 + uVar3 * 2;\n            in_stack_00000040 = in_stack_00000040 + uVar3 * -2;\n        }\n    }\n    uStack280 = 0;\n    piVar6 = fcn.18001549c();\n    if (piVar6 != NULL) {\n        iVar7 = (**(*piVar6 + 0x18))();\n        iVar7 = iVar7 + 0x18;\n        uStack296 = 0;\n        uStack272 = 0;\n        uStack268 = 0;\n        iStack256 = iVar7;\n        if ((in_stack_00000030 == 0x37a) || (in_stack_00000030 == 0x37b)) {\n            uStack264 = *in_stack_00000038;\n            in_stack_00000038 = in_stack_00000038 + 3;\n            iVar4 = uStack264 - 0xc;\n            arg2_00 = uStack280;\n            while (iVar4 != 0) {\n                uStack280 = uStack280 & 0xffffffff00000000 | *in_stack_00000038;\n                uStack294 = *(in_stack_00000038 + 1);\n                puVar9 = in_stack_00000038 + 6;\n                if (*in_stack_00000038 == 0x80010001) {\n                    uStack272 = *puVar9;\n                    uStack268 = *(in_stack_00000038 + 10);\n                    iVar10 = in_stack_00000038 + 0x16;\n                    if (iVar10 == 0) {\n                        uVar3 = 0;\n                    }\n                    else {\n                        uVar3 = fcn.180035930(iVar10);\n                    }\n                    fcn.180001640(&iStack256, iVar10, uVar3);\n                    iVar7 = iStack256;\n                    in_stack_00000038 = iVar10 + (*(iStack256 + -0x10) + 1);\n                    iVar4 = iVar4 + (-0x17 - *(iStack256 + -0x10));\n                    uStack296 = uStack294;\n                }\n                else {\n                    iStack176 = fcn.18000b904(0x28);\n                    in_stack_00000038 = puVar9;\n                    if (iStack176 == 0) {\n                        arg2_00 = 0;\n                        iVar4 = iVar4 + -6;\n                    }\n                    else {\n                        arg2_00 = fcn.1800259fc(iStack176, arg2_00, uStack280 & 0xffffffff);\n                        iVar4 = iVar4 + -6;\n                    }\n                }\n            }\n            in_stack_00000040 = in_stack_00000040 - uStack264;\n            in_stack_00000030 = in_stack_00000030 + -4;\n            uStack280 = arg2_00;\n        }\n        if (*puVar12 == 0x7b) {\n            iVar4 = (*_sym.imp.ole32.dll_CLSIDFromString)(puVar12, auStack88);\n        }\n        else {\n            iVar4 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(puVar12, auStack88);\n        }\n        fcn.1800303cc(auStack168, in_stack_00000038, in_stack_00000040, 0);\n        iVar10 = iStack192;\n        puVar11 = auStack168;\n        if (in_stack_00000030 == 0x378) {\n            puVar11 = NULL;\n        }\n        iStack288 = 0;\n        if ((-1 < iVar4) && (iVar4 = fcn.180016410(iStack192, 1),  iVar4 != 0)) {\n            piStack312 = &iStack288;\n            uStack328 = in_stack_00000030 == 0x377;\n            uStack344 = *(puVar8 + 4);\n            piStack352 = &iStack216;\n            uStack360 = *puVar8;\n            puStack336 = puVar11;\n            iStack320 = iVar5;\n            iVar4 = fcn.180016cc0(*(iVar10 + 0x98), 0, auStack88, 0);\n            if (iVar4 != 0) {\n                fcn.180024cdc(iStack288, 1);\n                uStack344 = 0x13;\n                piStack352 = piStack352 & 0xffffffff00000000;\n                uStack360 = 0;\n                (*_sym.imp.USER32.dll_SetWindowPos)(*(iStack288 + 0x48), uStack200, 0, 0);\n                *(iStack288 + 0xe0) = uStack280;\n                fcn.180001820(iStack288 + 0xf8, &iStack256);\n                *(iStack288 + 0xe8) = uStack296;\n                *(iStack288 + 0xf0) = uStack272;\n                *(iStack288 + 0xf4) = uStack268;\n            }\n        }\n        if (iVar5 != 0) {\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(iVar5);\n        }\n        if (iStack288 == 0) {\n            *puStack224 = 0;\n            fcn.18003086c(auStack168);\n            LOCK();\n            piVar1 = iVar7 + -8;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar4 + -1 < 1) {\n                (**(**(iVar7 + -0x18) + 8))();\n            }\n        }\n        else {\n            *puStack224 = *(iStack288 + 0x48);\n            fcn.18003086c(auStack168);\n            LOCK();\n            piVar1 = iVar7 + -8;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar4 + -1 < 1) {\n                (**(**(iVar7 + -0x18) + 8))();\n            }\n        }\n        fcn.1800349d0(uStack72 ^ auStack392);\n        return;\n    }\n    fcn.180001030(0x80004005);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 2277
    },
    "18003583": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.180035830(uint64_t *arg1, uint64_t noname_1, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    \n    uVar3 = arg3;\n    if (7 < arg3) {\n        noname_1 = (noname_1 & 0xff) * 0x101010101010101;\n        if (0x3f < arg3) {\n            uVar1 = -arg1 & 7;\n            if (uVar1 != 0) {\n                uVar3 = arg3 - uVar1;\n                *arg1 = noname_1;\n            }\n            arg1 = uVar1 + arg1;\n            arg3 = uVar3 & 0x3f;\n            uVar3 = uVar3 >> 6;\n            if (uVar3 != 0) {\n                puVar2 = arg1;\n                if (uVar3 < 0x1c00) {\n                    do {\n                        *puVar2 = noname_1;\n                        puVar2[1] = noname_1;\n                        puVar2[2] = noname_1;\n                        arg1 = puVar2 + 8;\n                        puVar2[3] = noname_1;\n                        puVar2[4] = noname_1;\n                        uVar3 = uVar3 - 1;\n                        puVar2[5] = noname_1;\n                        puVar2[6] = noname_1;\n                        puVar2[7] = noname_1;\n                        puVar2 = arg1;\n                    } while (uVar3 != 0);\n                }\n                else {\n                    do {\n                        *puVar2 = noname_1;\n                        puVar2[1] = noname_1;\n                        puVar2[2] = noname_1;\n                        arg1 = puVar2 + 8;\n                        puVar2[3] = noname_1;\n                        puVar2[4] = noname_1;\n                        uVar3 = uVar3 - 1;\n                        puVar2[5] = noname_1;\n                        puVar2[6] = noname_1;\n                        puVar2[7] = noname_1;\n                        puVar2 = arg1;\n                    } while (uVar3 != 0);\n                    LOCK();\n                }\n            }\n        }\n        uVar3 = arg3 & 7;\n        for (arg3 = arg3 >> 3; arg3 != 0; arg3 = arg3 - 1) {\n            *arg1 = noname_1;\n            arg1 = arg1 + 1;\n        }\n    }\n    for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *arg1 = noname_1;\n        arg1 = arg1 + 1;\n    }\n    return;\n}\n",
        "token_count": 648
    },
    "1800233f": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nint64_t * fcn.1800233f4(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint32_t in_stack_00000038;\n    uchar auStack56 [12];\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    if (arg2 < 0x76c) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0xb < arg3 - 1U) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0x1e < arg4 - 1U) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0x17 < in_stack_00000028) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0x3b < in_stack_00000030) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0x3b < in_stack_00000038) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    iStack40 = arg3 + -1;\n    iStack36 = arg2 + -0x76c;\n    iStack44 = arg4;\n    iVar3 = fcn.1800390dc(auStack56);\n    *arg1 = iVar3;\n    if (iVar3 == -1) {\n        fcn.180001030(0x80070057);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    return arg1;\n}\n",
        "token_count": 579
    },
    "18003336": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nbool fcn.180033368(int64_t lpMessageFilter)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(lpMessageFilter + 0x60, 0);\n    if (iVar1 == 0) {\n        *(lpMessageFilter + 0x40) = 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 90
    },
    "18003646": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint8_t * fcn.180036468(uint8_t *arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint8_t *puVar3;\n    uchar auStack40 [8];\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    fcn.1800352ac(auStack40, 0);\n    if (arg1 == NULL) {\n        puVar2 = fcn.180036050();\n        *puVar2 = 0x16;\n        fcn.180039810(0, 0, 0, 0);\n    }\n    else {\n        if (*(iStack32 + 8) == 0) {\n            arg1 = fcn.18003fd18(arg1);\ncode_r0x0001800363f0:\n            if (cStack16 == '\\0') {\n                return arg1;\n            }\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n            return arg1;\n        }\n        while( true ) {\n            uVar1 = *arg1;\n            if (uVar1 == 0) break;\n            if ((*(uVar1 + 0x1d + iStack32) & 4) == 0) {\n                puVar3 = arg1;\n                if (arg2 == uVar1) break;\n            }\n            else {\n                puVar3 = arg1 + 1;\n                if (*puVar3 == 0) goto code_r0x0001800363b7;\n                if (arg2 == CONCAT11(uVar1, *puVar3)) goto code_r0x0001800363f0;\n            }\n            arg1 = puVar3 + 1;\n        }\n        if (arg2 == uVar1) {\n            if (cStack16 == '\\0') {\n                return arg1;\n            }\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n            return arg1;\n        }\n    }\ncode_r0x0001800363b7:\n    if (cStack16 != '\\0') {\n        *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n    }\n    return NULL;\n}\n",
        "token_count": 510
    },
    "18000bed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000bedc(int64_t arg1)\n\n{\n    if (*(arg1 + 0x20) != 0) {\n        (**(*(arg1 + 0x20) + 0x38))();\n    }\n    *(arg1 + 0x38) = 0;\n    return;\n}\n",
        "token_count": 70
    },
    "18000101": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001010(int64_t hWnd, ulong lParam, ulong arg3)\n\n{\n    *(hWnd + 0xa8) = lParam;\n    *(hWnd + 0xac) = arg3;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x407, 0, lParam);\n    // WARNING: Could not recover jumptable at 0x00018000bab3. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x408, 0, arg3);\n    return;\n}\n",
        "token_count": 149
    },
    "18000105": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * fcn.180001050(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    uint16_t *puVar2;\n    uint64_t uVar3;\n    uint16_t *puVar4;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)();\n    if (iVar1 == 0) {\n        return NULL;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_SizeofResource)(arg1, arg2);\n        puVar4 = (uVar3 & 0xffffffff) + puVar2;\n        for (arg3._0_4_ = arg3 & 0xf; arg3 != 0; arg3._0_4_ = arg3 - 1) {\n            if (puVar4 <= puVar2) {\n                return NULL;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar4) {\n            if (*puVar2 == 0) {\n                return NULL;\n            }\n            return puVar2;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 282
    },
    "1800357d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800357dc(int64_t lpMem)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if ((lpMem != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x1800748a0, 0, lpMem),  iVar2 == 0)) {\n        puVar1 = fcn.180036050();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.180036008(uVar3);\n        *puVar1 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "18000123": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001230(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    if ((*(*arg1 + -0xc) < arg2) && (0 < arg2)) {\n        iVar2 = (**(**(*arg1 + -0x18) + 0x10))();\n        if (iVar2 == 0) {\n            fcn.180001170();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *arg1 = iVar2 + 0x18;\n        return;\n    }\n    fcn.180001170();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 165
    },
    "18000128": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.180001280(code **arg1)\n\n{\n    fcn.18000def0(arg1);\n    *(arg1 + 0xac) = 0;\n    *(arg1 + 0x15) = 0;\n    *(arg1 + 0x16) = 0;\n    *arg1 = vtable.CLoopSlider.0;\n    return arg1;\n}\n",
        "token_count": 86
    },
    "18000131": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001310(int64_t arg1)\n\n{\n    fcn.180001010(arg1, 1, 9);\n    *(arg1 + 0xb0) = 1;\n    // WARNING: Could not recover jumptable at 0x000180001308. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x40), 0x405, 1, 1);\n    return;\n}\n",
        "token_count": 115
    },
    "18000134": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001340(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "1800014e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800014e0(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "18000151": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180001510(int64_t *arg1, ulong hModule, ulong arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t arg2;\n    ushort *puVar3;\n    ulong uVar4;\n    \n    arg2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(hModule, (arg3 >> 4) + 1);\n    if (arg2 != 0) {\n        puVar3 = fcn.180001050(hModule, arg2, arg3);\n        if (puVar3 != NULL) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(3, 0, puVar3 + 1, *puVar3, 0, 0, 0, 0);\n            if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar2) < 0) {\n                fcn.1800013f0(arg1, uVar2);\n            }\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(3, 0, puVar3 + 1, *puVar3, *arg1, uVar2, 0, 0);\n            if ((-1 < uVar2) && (uVar2 <= *(*arg1 + -0xc))) {\n                *(*arg1 + -0x10) = uVar2;\n                *(uVar2 + *arg1) = 0;\n                return 1;\n            }\n            fcn.180001030(0x80070057);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 387
    },
    "18000164": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001640(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t arg1_00;\n    code *pcVar6;\n    int64_t iVar7;\n    \n    iVar7 = arg3;\n    if (arg3 == 0) {\n        iVar7 = *arg1;\n        piVar4 = *(iVar7 + -0x18);\n        if (*(iVar7 + -0x10) != 0) {\n            if (*(iVar7 + -8) < 0) {\n                if (*(iVar7 + -0xc) < 0) {\n                    fcn.180001030(0x80070057);\n                    pcVar6 = swi(3);\n                    (*pcVar6)();\n                    return;\n                }\n                *(iVar7 + -0x10) = 0;\n                **arg1 = 0;\n                return;\n            }\n            LOCK();\n            piVar1 = iVar7 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iVar7 + -0x18) + 8))();\n            }\n            iVar7 = (**(*piVar4 + 0x18))(piVar4);\n            *arg1 = iVar7 + 0x18;\n        }\n        return;\n    }\n    if (arg2 == 0) {\n        fcn.180001030(0x80070057);\n        pcVar6 = swi(3);\n        (*pcVar6)();\n        return;\n    }\n    iVar5 = *arg1;\n    uVar3 = *(iVar5 + -0x10);\n    if ((1U - *(iVar5 + -8) | *(iVar5 + -0xc) - arg3) < 0) {\n        fcn.1800013f0(arg1, arg3);\n    }\n    arg1_00 = *arg1;\n    if (uVar3 < arg2 - iVar5) {\n        fcn.1800341d0(arg1_00, *(arg1_00 + -0xc), arg2, iVar7);\n    }\n    else {\n        fcn.180034268(arg1_00, *(arg1_00 + -0xc), arg1_00 + (arg2 - iVar5), iVar7);\n    }\n    if ((-1 < arg3) && (arg3 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = arg3;\n        *(*arg1 + iVar7) = 0;\n        return;\n    }\n    fcn.180001030(0x80070057);\n    pcVar6 = swi(3);\n    (*pcVar6)();\n    return;\n}\n",
        "token_count": 645
    },
    "18000172": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001720(int64_t *arg1, char *arg2, ulong arg3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    \n    iVar3 = *arg1;\n    uVar2 = *(iVar3 + -0x10);\n    if (arg3 < 0) {\n        fcn.180001030(0x80070057);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    if (arg2 == NULL) {\n        iVar5 = 0;\n    }\n    else {\n        iVar6 = -1;\n        pcVar8 = arg2;\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar1 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar1 != '\\0');\n        iVar5 = ~iVar6 - 1;\n    }\n    if (iVar5 < arg3) {\n        arg3._0_4_ = iVar5;\n    }\n    if (0x7fffffff - arg3 < uVar2) {\n        fcn.180001030(0x80070057);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    uVar7 = uVar2 + arg3;\n    if ((1U - *(iVar3 + -8) | *(iVar3 + -0xc) - uVar7) < 0) {\n        fcn.1800013f0(arg1, uVar7);\n    }\n    if (arg2 - iVar3 <= uVar2) {\n        arg2 = *arg1 + (arg2 - iVar3);\n    }\n    fcn.1800341d0(uVar2 + *arg1, arg3, arg2, arg3);\n    if ((-1 < uVar7) && (uVar7 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar7;\n        *(uVar7 + *arg1) = 0;\n        return;\n    }\n    fcn.180001030(0x80070057);\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 543
    },
    "1800026f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.1800026f0(ulong arg1, ulong arg2)\n\n{\n    fcn.180013f20(arg1);\n    return;\n}\n",
        "token_count": 35
    },
    "1800027f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800027f0(uint16_t *arg1, uint16_t *arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint16_t uVar7;\n    uint16_t *puVar8;\n    uint64_t uVar9;\n    \n    puVar8 = arg2;\n    iVar2 = fcn.1800027d0(arg1);\n    iVar3 = fcn.1800027d0(arg2);\n    if (iVar2 != iVar3) {\n        return 1;\n    }\n    uVar9 = 0;\n    iVar4 = fcn.1800027d0(arg1);\n    iVar1 = *0x18006d0f0;\n    iVar3 = *0x18006d0e8;\n    iVar2 = *0x18006d0e4;\n    if (iVar4 != 0) {\n        do {\n            uVar6 = *arg1;\n            uVar7 = *puVar8;\n            if ((0x40 < uVar6) && (uVar6 <= ((iVar3 - iVar1) - iVar2) * 2 + 0x5a)) {\n                uVar6 = uVar6 + 0x20;\n            }\n            if (uVar7 - 0x41 < 0x1a) {\n                uVar7 = uVar7 + 0x20;\n            }\n            if (uVar6 != uVar7) {\n                return 1;\n            }\n            arg1 = arg1 + 1;\n            uVar9 = uVar9 + 1;\n            puVar8 = puVar8 + 1;\n            uVar5 = fcn.1800027d0(arg1);\n        } while (uVar9 < uVar5);\n    }\n    return 0;\n}\n",
        "token_count": 426
    },
    "18000293": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nint64_t fcn.180002930(int64_t arg1, int64_t arg2)\n\n{\n    char cVar1;\n    char cVar2;\n    char *pcVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    \n    uVar6 = 0;\n    iVar4 = *(arg1 + *(((*0x18006d0e8 + 2) * *0x18006d0e0 - *0x18006d0f0) * 0x140 + 0x3c + arg1) + 0x88 +\n             ((*0x18006d0e8 - *0x18006d0e4) - *0x18006d0f0) * 2) + arg1;\n    puVar7 = *(iVar4 + 0x20) + arg1;\n    if (*(iVar4 + 0x18) != 0) {\n        do {\n            pcVar3 = *puVar7 + arg1;\n            iVar5 = arg2 - pcVar3;\n            do {\n                cVar1 = *pcVar3;\n                cVar2 = pcVar3[iVar5];\n                if (cVar1 != cVar2) break;\n                pcVar3 = pcVar3 + 1;\n            } while (cVar2 != '\\0');\n            if (cVar1 == cVar2) {\n                return *(*(iVar4 + 0x1c) + arg1 +\n                        *(*(iVar4 + 0x24) + arg1 + (uVar6 + (*0x18006d0f0 * *0x18006d0f0 + *0x18006d0f4) * 4) * 2) * 4)\n                       + arg1;\n            }\n            uVar6 = uVar6 + 1;\n            puVar7 = puVar7 + 1;\n        } while (uVar6 < *(iVar4 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 454
    },
    "18000304": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180003040(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    \n    if (arg2 == 0) {\n        fcn.180001030(0x80070057);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar2 = fcn.180034a4c(arg2, arg3);\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar2) < 0) {\n        fcn.1800013f0(arg1, uVar2);\n    }\n    fcn.180034bd0(*arg1, uVar2 + 1, arg2, arg3);\n    if ((-1 < uVar2) && (uVar2 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar2;\n        *(uVar2 + *arg1) = 0;\n        return;\n    }\n    fcn.180001030(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 274
    },
    "18000312": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180003120(code **arg1)\n\n{\n    uchar auStack616 [64];\n    ulong uStack552;\n    uint64_t uStack24;\n    \n    uStack552 = 0xfffffffffffffffe;\n    uStack24 = *0x18006ed40 ^ auStack616;\n    *arg1 = vtable.CGdiObject.0;\n    fcn.180019a58(arg1);\n    fcn.1800349d0(uStack24 ^ auStack616);\n    return;\n}\n",
        "token_count": 110
    },
    "18000319": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180003190(int64_t hWnd, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t *piVar2;\n    ulong uVar3;\n    code *pcStack64;\n    ulong uStack56;\n    code *pcStack48;\n    ulong uStack40;\n    int32_t aiStack32 [2];\n    uint uStack24;\n    int32_t iStack20;\n    \n    uVar3 = 0xfffffffffffffffe;\n    uVar1 = (*_sym.imp.USER32.dll_GetDC)(*(*(hWnd + 0x40) + 0x40));\n    piVar2 = fcn.18001963c(uVar1);\n    (**(*piVar2 + 0xa0))(piVar2, aiStack32);\n    uStack40 = 0;\n    pcStack48 = vtable.CRgn.0;\n    uStack56 = 0;\n    pcStack64 = vtable.CBrush.0;\n    uVar1 = (*_sym.imp.GDI32.dll_CreateRectRgn)(aiStack32[0] + 0x289, 0x226, uStack24, iStack20 + -0x73, uVar3);\n    fcn.1800199d8(&pcStack48, uVar1);\n    uVar1 = (*_sym.imp.GDI32.dll_CreateSolidBrush)(arg2);\n    fcn.1800199d8(&pcStack64, uVar1);\n    (*_sym.imp.GDI32.dll_FillRgn)(piVar2[1], uStack40, uStack56);\n    pcStack64 = vtable.CBrush.0;\n    fcn.180003120(&pcStack64);\n    pcStack48 = vtable.CRgn.0;\n    fcn.180003120(&pcStack48);\n    return;\n}\n",
        "token_count": 395
    },
    "18000387": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180003870(int64_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(lpCriticalSection + 0x10);\n    return 1;\n}\n",
        "token_count": 42
    },
    "1800038a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800038a0(code **lpCriticalSection)\n\n{\n    *lpCriticalSection = vtable.CCriticalSection.0;\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)();\n    *lpCriticalSection = vtable.CSyncObject.0;\n    if (lpCriticalSection[1] != NULL) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        lpCriticalSection[1] = NULL;\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "18001dca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001dcac(code **arg1)\n\n{\n    *arg1 = vtable.CSyncObject.0;\n    if (arg1[1] != NULL) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        arg1[1] = NULL;\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "1800038d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800038d0(int64_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x10);\n    return 1;\n}\n",
        "token_count": 43
    },
    "1800048d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.1800048d0(code **arg1)\n\n{\n    fcn.180019d18(arg1, 100, 0);\n    *arg1 = vtable.CAboutDlg.0;\n    return arg1;\n}\n",
        "token_count": 53
    },
    "18000493": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180004930(int64_t arg1)\n\n{\n    fcn.1800012f0(arg1 + 0x478, 1);\n    fcn.1800012f0(arg1 + 0x3c0, 1);\n    fcn.1800012f0(arg1 + 0x308, 1);\n    fcn.1800012f0(arg1 + 0x250, 1);\n    fcn.1800012f0(arg1 + 0x198, 1);\n    if (*0x180070778 == '\\0') {\n        *0x180070778 = '\\0';\n    }\n    if (*0x180070778 == '\\0') {\n        *0x180070768 = 0;\n        *0x180070770 = 0;\n    }\n    *0x180070761 = 0;\n    *0x18007078c = 2;\n    *0x180070788 = 2;\n    *0x180070784 = 2;\n    *0x180070780 = 2;\n    *0x18007077c = 2;\n    *0x180070766 = 1;\n    *0x180070765 = 1;\n    *0x180070764 = 1;\n    *0x180070763 = 1;\n    *0x180070762 = 1;\n    fcn.180003350(0x180070620);\n    *0x180070760 = 0;\n    return;\n}\n",
        "token_count": 332
    },
    "1800049a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800049a0(ulong noname_0, ulong nIDDlgItem)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180013c24(*0x180070660, nIDDlgItem);\n    if (*(iVar1 + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(iVar1 + 0x40));\n    }\n    else {\n        (**(**(iVar1 + 0xa0) + 0x150))(*(iVar1 + 0xa0), 0);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "1800049c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800049c0(ulong noname_0, ulong nIDDlgItem)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180013c24(*0x180070660, nIDDlgItem);\n    if (*(iVar1 + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(iVar1 + 0x40));\n    }\n    else {\n        (**(**(iVar1 + 0xa0) + 0x150))(*(iVar1 + 0xa0), 1);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "180004f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180004f40(ulong noname_0, int64_t *arg2, int64_t *arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar auStack48 [40];\n    \n    fcn.180015540(auStack48);\n    fcn.180015568(auStack48, *arg2, 1, 0);\n    fcn.1800157fc(auStack48, *arg3);\n    fcn.180015a84(auStack48);\n    fcn.180015b28(auStack48);\n    iVar3 = *arg2;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    iVar3 = *arg3;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "18000a04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180009ee9)\n// WARNING: Removing unreachable block (ram,0x000180009ef5)\n// WARNING: Removing unreachable block (ram,0x000180009ef7)\n// WARNING: Removing unreachable block (ram,0x000180009f1b)\n// WARNING: Removing unreachable block (ram,0x000180009f1d)\n// WARNING: Removing unreachable block (ram,0x000180009f41)\n// WARNING: Removing unreachable block (ram,0x000180009f43)\n// WARNING: Removing unreachable block (ram,0x000180009f67)\n// WARNING: Removing unreachable block (ram,0x000180009f69)\n// WARNING: Removing unreachable block (ram,0x000180009f8d)\n// WARNING: Removing unreachable block (ram,0x000180009f8f)\n// WARNING: Removing unreachable block (ram,0x000180009fb3)\n// WARNING: Removing unreachable block (ram,0x000180009fb5)\n// WARNING: Removing unreachable block (ram,0x000180009fd9)\n// WARNING: Removing unreachable block (ram,0x000180009fdb)\n\nvoid fcn.18000a040(ulong arg1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    ulong hWnd;\n    int64_t *piVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    int64_t iStackX32;\n    \n    fcn.180009d40(arg1, 0x3eb, 1);\n    fcn.180009d40(arg1, 0x3ec, 1);\n    fcn.180009d40(arg1, 0x3ed, 1);\n    fcn.180009d40(arg1, 0x3f3, 1);\n    hWnd = fcn.180013c24(arg1, 0x3f0);\n    piVar5 = fcn.18001549c();\n    if (piVar5 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    iStackX32 = (**(*piVar5 + 0x18))(piVar5);\n    iStackX32 = iStackX32 + 0x18;\n    iVar6 = -1;\n    pcVar7 = \"... ;                                                               \";\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001640(&iStackX32, \"... ;                                                               \", ~iVar6 - 1);\n    iVar6 = -1;\n    pcVar7 = \"for ( int i = 0 ; i <80 ; i++)                                     \";\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001720(&iStackX32, \"for ( int i = 0 ; i <80 ; i++)                                     \", ~iVar6 - 1);\n    iVar6 = -1;\n    pcVar7 = \"{                                                                      \";\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001720(&iStackX32, \"{                                                                      \", ~iVar6 - 1);\n    iVar6 = -1;\n    pcVar7 = \"for ( int p = 0 ; p <1*800;p++);\";\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001720(&iStackX32, \"for ( int p = 0 ; p <1*800;p++);\", ~iVar6 - 1);\n    iVar6 = -1;\n    pcVar7 = \"                         dcObject .TextOut( ThreadsNr ) ;\";\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001720(&iStackX32, \"                         dcObject .TextOut( ThreadsNr ) ;\", ~iVar6 - 1);\n    iVar6 = -1;\n    pcVar7 = \"                 ... ;                                                    \";\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001720(&iStackX32, \"                 ... ;                                                    \", ~iVar6 - 1);\n    iVar6 = -1;\n    pcVar7 = \"      }                                                              \";\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001720(&iStackX32, \"      }                                                              \", ~iVar6 - 1);\n    iVar6 = -1;\n    pcVar7 = \"... ; \";\n    do {\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    fcn.180001720(&iStackX32, \"... ; \", ~iVar6 - 1);\n    iVar6 = iStackX32;\n    fcn.180013d70(hWnd, iStackX32);\n    LOCK();\n    piVar1 = iVar6 + -8;\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 + -1 < 1) {\n        (**(**(iVar6 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 1482
    },
    "18000b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18000b904(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    while( true ) {\n        iVar2 = fcn.180035724(arg1);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        if (*0x18006d2d0 == NULL) break;\n        iVar1 = (**0x18006d2d0)(arg1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "18000bea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18000bea4(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.18001e94c();\n    *(arg1 + 0x38) = uVar1;\n    *(arg1 + 8) = 1;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x30) = 0;\n    *(arg1 + 0x28) = 1;\n    return arg1;\n}\n",
        "token_count": 143
    },
    "18000bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000bf00(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001e94c();\n    // WARNING: Could not recover jumptable at 0x00018000bf19. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(iVar1 + 8) + 0x138))(*(iVar1 + 8), 1);\n    return;\n}\n",
        "token_count": 98
    },
    "18000bf2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000bf20(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001e94c();\n    // WARNING: Could not recover jumptable at 0x00018000bf37. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(iVar1 + 8) + 0x138))(*(iVar1 + 8), 0xffffffff);\n    return;\n}\n",
        "token_count": 99
    },
    "18000c35": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.18000c35c(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*0x180073808 == 0) {\n        *0x18007380c = fcn.18000c2fc();\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n        if (((((iVar1 == 0) ||\n              (*0x1800737d0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x180051368),  *0x1800737d0 == 0)) ||\n             (*0x1800737d8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MonitorFromWindow\"),  *0x1800737d8 == 0))\n            || ((*0x1800737e0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MonitorFromRect\"),  *0x1800737e0 == 0 ||\n                (*0x1800737e8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MonitorFromPoint\"),  *0x1800737e8 == 0))\n               )) || ((*0x1800737f8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"EnumDisplayMonitors\"), \n                      *0x1800737f8 == 0 ||\n                      ((*0x1800737f0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"GetMonitorInfoA\"), \n                       *0x1800737f0 == 0 ||\n                       (*0x180073800 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"EnumDisplayDevicesA\"), \n                       *0x180073800 == 0)))))) {\n            *0x1800737d0 = 0;\n            *0x1800737d8 = 0;\n            *0x1800737e0 = 0;\n            *0x1800737e8 = 0;\n            *0x1800737f0 = 0;\n            *0x1800737f8 = 0;\n            *0x180073800 = 0;\n        }\n        else {\n            bVar2 = true;\n        }\n        *0x180073808 = 1;\n        return bVar2;\n    }\n    return *0x1800737f0 != 0;\n}\n",
        "token_count": 537
    },
    "18000c52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000c52c(ulong arg1, uint64_t arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uchar auStack28 [20];\n    \n    iVar1 = fcn.18000c35c();\n    if (iVar1 == 0) {\n        if ((arg2 & 3) == 0) {\n            iVar1 = (*_sym.imp.USER32.dll_IsIconic)(arg1);\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.USER32.dll_GetWindowRect)(arg1);\n            }\n            else {\n                iVar1 = (*_sym.imp.USER32.dll_GetWindowPlacement)();\n            }\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.18000c4c0(auStack28, arg2 & 0xffffffff);\n            }\n        }\n        else {\n            uVar2 = 0x12340042;\n        }\n    }\n    else {\n        uVar2 = (**0x1800737d8)(arg1, arg2 & 0xffffffff);\n    }\n    return uVar2;\n}\n",
        "token_count": 257
    },
    "18000cf7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000cf78(ulong noname_0, ulong *arg2, ulong arg3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    uint *in_stack_00000028;\n    \n    uVar3 = 0;\n    if (arg3 != 0) {\n        do {\n            bVar1 = false;\n            puVar4 = 0x18006d3b0;\n            puVar5 = 0x18006d310;\n            iVar6 = 0x13;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*arg2, *puVar5);\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *in_stack_00000028 = *puVar4;\n                }\n                puVar5 = puVar5 + 1;\n                puVar4 = puVar4 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n            arg2 = arg2 + 1;\n            in_stack_00000028 = in_stack_00000028 + 1;\n        } while (uVar3 < arg3);\n    }\n    return 0;\n}\n",
        "token_count": 326
    },
    "18000d09": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000d09c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    uint32_t in_stack_00000028;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    arg4._0_4_ = ~arg3 & uVar1 | arg4;\n    if (uVar1 == arg4) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(arg1, arg2, arg4);\n        if (in_stack_00000028 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowPos)(arg1, 0, 0, 0, 0, 0, in_stack_00000028 | 0x17);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 212
    },
    "18000d12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000d128(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.18000d09c(arg1, 0xfffffff0, arg2, arg3);\n    return;\n}\n",
        "token_count": 55
    },
    "18000d14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000d148(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.18000d09c(arg1, 0xffffffec, arg2, arg3);\n    return;\n}\n",
        "token_count": 54
    },
    "18001eb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001eb20(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    \n    iVar1 = fcn.18001ea7c(1);\n    if (arg1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.18001f148(iVar1 + 0x30, arg1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.18001f148(iVar1 + 0x68, arg1);\n            if (iVar2 == 0) {\n                arg1_00 = fcn.18000b8f4(0x18001f97c);\n                iVar2 = fcn.180030cac(iVar1 + 8);\n                iVar3 = iVar2;\n                if (iVar2 == 0) {\n                    iVar3 = fcn.180015240();\n                }\n                (**(iVar1 + 0x20))(iVar3);\n                piVar4 = fcn.18001f390(iVar1 + 0x68, arg1);\n                *piVar4 = iVar2;\n                fcn.18000b8f4(arg1_00);\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n            else {\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 425
    },
    "18000d24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000d244(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001e94c();\n    if (*(iVar1 + 0x60) != NULL) {\n        (**(iVar1 + 0x60))(arg2, arg1);\n    }\n    return 0;\n}\n",
        "token_count": 80
    },
    "18000d3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.18000d3a8(code **arg1)\n\n{\n    fcn.18000be6c(arg1);\n    *(arg1 + 8) = 1;\n    *arg1 = vtable.CTestCmdUI.0;\n    return arg1;\n}\n",
        "token_count": 62
    },
    "18000d8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000d8c4(ulong arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    \n    uVar1 = *(arg2 + 8);\n    if (((uVar1 < 0x100) || (0x109 < uVar1)) && ((uVar1 < 0x200 || (0x209 < uVar1)))) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.180013c94(arg1, arg2);\n    }\n    return uVar2;\n}\n",
        "token_count": 133
    },
    "18000def": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.18000def0(code **arg1)\n\n{\n    fcn.18000bea4(arg1);\n    *arg1 = vtable.CWnd.0;\n    arg1[0xc] = vtable.CWnd::XAccessible.0;\n    arg1[0xd] = vtable.CWnd::XAccessibleServer.0;\n    arg1[8] = NULL;\n    *(arg1 + 9) = 0;\n    arg1[0xb] = NULL;\n    arg1[10] = NULL;\n    arg1[0xe] = NULL;\n    *(arg1 + 0xf) = 0;\n    arg1[0x10] = NULL;\n    *(arg1 + 0x11) = 0;\n    arg1[0x12] = NULL;\n    arg1[0x13] = NULL;\n    arg1[0x14] = NULL;\n    return arg1;\n}\n",
        "token_count": 204
    },
    "18000df6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000df64(int64_t hWnd, ulong lpRect, uint *arg3)\n\n{\n    uint uVar1;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(*(hWnd + 0x40));\n    uVar1 = fcn.180013cd8(hWnd);\n    *arg3 = uVar1;\n    return;\n}\n",
        "token_count": 79
    },
    "18000e13": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000e134(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int16_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = fcn.18001e99c();\n    if ((*(iVar4 + 0x78) != 0) && (iVar1 = *(*(iVar4 + 0x78) + 0x40),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0xa0);\n    if ((arg1 != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x2f8))(piVar2, 0xffffffffffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "18000e1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18000e1b4(int64_t hMenu, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong arg1;\n    int32_t iVar5;\n    \n    arg2 = arg2 & 0xffffffff;\n    if (hMenu == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        iVar4 = (*pcVar1)();\n        return iVar4;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(hMenu + 8));\n    iVar5 = 0;\n    if (0 < iVar2) {\n        do {\n            arg1 = (*_sym.imp.USER32.dll_GetSubMenu)(*(hMenu + 8));\n            iVar4 = fcn.18001eb20(arg1);\n            if (iVar4 == 0) {\n                iVar3 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(hMenu + 8));\n                if (iVar3 == arg2) goto code_r0x00018000e247;\n            }\n            else {\n                if (*(iVar4 + 8) == arg2) {\ncode_r0x00018000e247:\n                    iVar4 = fcn.18001eb44(*(hMenu + 8));\n                    return iVar4;\n                }\n                iVar4 = fcn.18000e1b4(iVar4, arg2);\n                if (iVar4 != 0) {\n                    return iVar4;\n                }\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 371
    },
    "18000e25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000e254(code **arg1)\n\n{\n    *arg1 = vtable._AFX_HTMLHELP_STATE.0;\n    if (arg1[1] != NULL) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "18000f16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000f160(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        (**(**arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 44
    },
    "18000f17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.18000f178(int64_t *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong in_R9;\n    ulong uVar3;\n    uint auStack40 [2];\n    int64_t *piStack32;\n    uint uStack24;\n    \n    uVar3 = 0xfffffffffffffffe;\n    uStack24 = 0;\n    auStack40[0] = arg2;\n    piStack32 = arg1;\n    iVar2 = fcn.18001dfbc();\n    uVar1 = *(iVar2 + 0x138);\n    *(iVar2 + 0x138) = arg1[8];\n    (**(*arg1 + 0x1f8))(arg1, auStack40, *arg1, in_R9, uVar3);\n    *(iVar2 + 0x138) = uVar1;\n    return 1;\n}\n",
        "token_count": 203
    },
    "18000f89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000f890(uint32_t *arg1)\n\n{\n    if (*arg1 != 0x7fffffff) {\n        fcn.18001fd50(*arg1);\n        *arg1 = 0x7fffffff;\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "18000f91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000f91c(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.1800206d0(0x180073ca0, 0x18000d9b0);\n    if (iVar2 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00018000f966. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*arg1 + 0x230))(arg1, *(iVar2 + 0xa0), *(iVar2 + 0xa8), *(iVar2 + 0xb0));\n    return;\n}\n",
        "token_count": 182
    },
    "18000f97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000f970(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.18001e99c();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x28) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.18000b8f4(0x18001f97c);\n        arg1_01 = fcn.18000b904(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.18001f450(arg1_01, 0x1800512b8, 0x18000f654, 0x18000d9a4);\n        }\n        *(iVar1 + 0x28) = uVar2;\n        fcn.18000b8f4(arg1_00);\n    }\n    return *(iVar1 + 0x28);\n}\n",
        "token_count": 235
    },
    "18000fa1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000fa14(ulong arg1)\n\n{\n    ulong arg1_00;\n    ulong hWnd;\n    \n    arg1_00 = fcn.18000f970(1);\n    hWnd = fcn.18001f528(arg1_00, arg1);\n    fcn.1800140cc(hWnd, arg1_00);\n    return hWnd;\n}\n",
        "token_count": 81
    },
    "18000fa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.18000fa84(int64_t arg1, int64_t arg2)\n\n{\n    int64_t arg2_00;\n    int64_t *piVar1;\n    \n    if (arg2 != 0) {\n        arg2_00 = fcn.18000f970(1);\n        *(arg1 + 0x40) = arg2;\n        piVar1 = fcn.18001f390(arg2_00 + 0x30, arg2);\n        *piVar1 = arg1;\n        fcn.1800140cc(arg1, arg2_00);\n    }\n    return arg2 != 0;\n}\n",
        "token_count": 142
    },
    "18000fe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18000fe40(ulong arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    arg3 = arg3 & 0xffffffff;\n    iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)();\n    if (iVar1 != 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar1);\n        if ((iVar2 != 0) && (iVar2 = fcn.18000fe40(iVar1, arg2 & 0xffffffff, arg3),  iVar2 != 0)) {\n            return iVar2;\n        }\n        if (arg3 == 0) {\n            iVar1 = fcn.18000fa14(iVar1);\n            return iVar1;\n        }\n        iVar1 = fcn.18000fa58(iVar1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetTopWindow)(arg1);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.18000fe40(iVar1, arg2 & 0xffffffff, arg3);\n        if (iVar2 != 0) break;\n        iVar1 = (*_sym.imp.USER32.dll_GetWindow)(iVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 315
    },
    "18000fee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000feec(int64_t arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    int64_t arg1_00;\n    \n    arg1_00 = *arg2;\n    while( true ) {\n        if (arg1_00 == 0) {\n            return 0;\n        }\n        piVar2 = fcn.18000fa58(arg1_00);\n        if ((piVar2 != NULL) && (iVar1 = (**(*piVar2 + 0x210))(piVar2, arg2),  iVar1 != 0)) break;\n        if (arg1_00 == arg1) {\n            return 0;\n        }\n        arg1_00 = (*_sym.imp.USER32.dll_GetParent)(arg1_00);\n    }\n    return 1;\n}\n",
        "token_count": 190
    },
    "18001011": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180010118(ulong arg1, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    int32_t iVar1;\n    \n    if ((arg4 != 0) && (iVar1 = fcn.18000ff5c(arg4, 0),  iVar1 != 0)) {\n        return;\n    }\n    fcn.18000f91c(arg1);\n    return;\n}\n",
        "token_count": 97
    },
    "18001024": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180010244(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    puVar3 = (**(*arg1 + 0x1f0))();\n    (*_sym.imp.USER32.dll_SetWindowLongPtrA)(arg1[8], 0xfffffffc, *puVar3);\n    *puVar3 = 0;\n    iVar1 = arg1[8];\n    if (iVar1 != 0) {\n        iVar2 = fcn.18001e99c();\n        if (*(iVar2 + 0x28) != 0) {\n            fcn.18001f1bc(*(iVar2 + 0x28) + 0x30, arg1[8]);\n        }\n        arg1[8] = 0;\n    }\n    arg1[0x14] = 0;\n    return iVar1;\n}\n",
        "token_count": 205
    },
    "1800106e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.1800106ec(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong arg1_00;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    if ((arg1 != 0) && (iVar3 = *(arg1 + 0x40),  iVar3 != 0)) {\n        while( true ) {\n            arg1_00 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n            piVar2 = fcn.18000fa14(arg1_00);\n            if (piVar2 == NULL) break;\n            iVar1 = (**(*piVar2 + 0x250))(piVar2);\n            if (iVar1 != 0) {\n                return piVar2;\n            }\n            iVar3 = piVar2[8];\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 190
    },
    "18001085": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.180010858(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    ulong arg2_00;\n    uint64_t uVar3;\n    uchar auStack184 [64];\n    ulong uStack120;\n    int64_t iStack24;\n    \n    iVar2 = fcn.18001e99c();\n    if (*(iVar2 + 0x28) == 0) {\n        uVar3 = 0;\n    }\n    else {\n        iVar2 = *(iVar2 + 0x28) + 0x30;\n        arg1_00 = fcn.18001f148(iVar2, arg1);\n        if (arg1_00 == 0) {\n            arg2_00 = (*_sym.imp.USER32.dll_GetParent)(arg1);\n            iVar2 = fcn.18001f148(iVar2, arg2_00);\n            if (((iVar2 != 0) && (*(iVar2 + 0x98) != 0)) &&\n               (iStack24 = fcn.18001f148(*(iVar2 + 0x98) + 0x48, arg1),  iStack24 != 0)) {\n                fcn.18000d020(auStack184, arg1);\n                iVar1 = fcn.18000ff5c(auStack184, arg2);\n                uStack120 = 0;\n                fcn.18001052c(auStack184);\n                return iVar1 != 0;\n            }\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.18000ff5c(arg1_00, arg2);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 389
    },
    "1800110a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800110a4(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uchar in_DL;\n    uint32_t uVar4;\n    \n    iVar2 = *arg1;\n    uVar1 = *(iVar2 + -0x10);\n    uVar4 = uVar1 + 1;\n    if ((1U - *(iVar2 + -8) | *(iVar2 + -0xc) - uVar4) < 0) {\n        fcn.1800013f0(arg1, uVar4);\n    }\n    *(uVar1 + *arg1) = in_DL;\n    if ((-1 < uVar4) && (uVar4 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar4;\n        *(uVar4 + *arg1) = 0;\n        return;\n    }\n    fcn.180001030(0x80070057);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 245
    },
    "18001147": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001147c(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    ulong uVar3;\n    \n    iVar2 = fcn.18000fa58(arg1);\n    uVar3 = 0;\n    if (iVar2 == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg1, 0xfffffff0);\n        if ((uVar1 >> 0x1e & 1) == 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetWindow)(arg1, 4);\n        }\n        else {\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)();\n        }\n    }\n    else {\n        arg1_00 = *(iVar2 + 0x70);\n        if (arg1_00 == 0) {\n            arg1_00 = (*_sym.imp.USER32.dll_GetParent)(*(iVar2 + 0x40));\n        }\n        iVar2 = fcn.18000fa14(arg1_00);\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x40);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 278
    },
    "1800114f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800114f4(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg1_00;\n    \n    if ((arg1 == 0) || (iVar1 = *(arg1 + 0x40),  *(arg1 + 0x40) == 0)) {\n        uVar2 = 0;\n    }\n    else {\n        do {\n            arg1_00 = iVar1;\n            iVar1 = fcn.18001147c(arg1_00);\n        } while (iVar1 != 0);\n        uVar2 = fcn.18000fa14(arg1_00);\n    }\n    return uVar2;\n}\n",
        "token_count": 155
    },
    "18001193": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180011938(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    if (((arg2 == -2) && (((arg3 == 0x201 || (arg3 == 0x207)) || (arg3 == 0x204)))) &&\n       (iVar2 = fcn.1800114f4(arg1),  iVar2 != 0)) {\n        uVar3 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(iVar2 + 0x40));\n        iVar2 = fcn.18000fa14(uVar3);\n        if (iVar2 != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n            iVar4 = fcn.18000fa14(uVar3);\n            if ((iVar2 != iVar4) && (iVar1 = fcn.180013e88(iVar2),  iVar1 != 0)) {\n                (*_sym.imp.USER32.dll_SetForegroundWindow)(*(iVar2 + 0x40));\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 266
    },
    "1800130a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.1800130ac(ulong *arg1)\n\n{\n    code **ppcVar1;\n    code **ppcVar2;\n    uint uVar3;\n    \n    ppcVar2 = NULL;\n    if (arg1 == NULL) {\n        uVar3 = 0x80004003;\n    }\n    else {\n        *arg1 = 0;\n        ppcVar1 = fcn.18000b904(0x30);\n        if (ppcVar1 != NULL) {\n            *(ppcVar1 + 5) = 0;\n            ppcVar1[2] = NULL;\n            ppcVar1[3] = NULL;\n            *ppcVar1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n            ppcVar1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n            ppcVar1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n            fcn.180020b00();\n            ppcVar2 = ppcVar1;\n        }\n        uVar3 = 0x8007000e;\n        if (ppcVar2 != NULL) {\n            uVar3 = 0;\n        }\n        *arg1 = ppcVar2;\n    }\n    return uVar3;\n}\n",
        "token_count": 304
    },
    "18001316": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180013168(void)\n\n{\n    int64_t iVar1;\n    uchar auStack616 [64];\n    ulong uStack552;\n    uint64_t uStack24;\n    \n    uStack552 = 0xfffffffffffffffe;\n    uStack24 = *0x18006ed40 ^ auStack616;\n    iVar1 = fcn.18001e94c();\n    fcn.18000bf20(*(iVar1 + 8));\n    fcn.1800349d0(uStack24 ^ auStack616);\n    return;\n}\n",
        "token_count": 118
    },
    "18001351": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.180013518(int64_t arg1, int16_t *arg2)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int16_t iVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    int64_t iStackX16;\n    uint auStack104 [2];\n    ulong uStack96;\n    int64_t iStack88;\n    \n    iVar8 = 1;\n    if (arg2 != NULL) {\n        do {\n            iVar3 = *arg2;\n            if (iVar3 == 0) break;\n            iVar2 = arg2[1];\n            uVar4 = *(arg2 + 2);\n            arg2 = arg2 + 4;\n            if (iVar2 == 0x1234) {\ncode_r0x0001800135d0:\n                fcn.180035830(&uStack96, 0, 0x30);\n                uStack96 = 0xffffffffffffffff;\n                auStack104[0] = 1;\n                fcn.1800018b0(&iStackX16, arg2);\n                iStack88 = iStackX16;\n                iVar7 = (*_sym.imp.USER32.dll_SendDlgItemMessageA)(*(arg1 + 0x40), iVar3, 0x401, 0, auStack104);\n                if (iVar7 == -1) {\n                    iVar8 = 0;\n                }\n                LOCK();\n                piVar1 = iStackX16 + -8;\n                iVar5 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar5 + -1 < 1) {\n                    (**(**(iStackX16 + -0x18) + 8))();\n                }\n            }\n            else {\n                iVar6 = 0x180;\n                if (iVar2 == 0x401) {\ncode_r0x0001800135aa:\n                    iVar7 = (*_sym.imp.USER32.dll_SendDlgItemMessageA)(*(arg1 + 0x40), iVar3, iVar6, 0, arg2);\n                    if (iVar7 == -1) {\n                        iVar8 = 0;\n                    }\n                }\n                else {\n                    iVar6 = iVar2;\n                    if (iVar2 == 0x403) {\n                        iVar6 = 0x143;\n                    }\n                    if (iVar6 == 0x401) goto code_r0x0001800135d0;\n                    if ((iVar6 == 0x180) || (iVar6 == 0x143)) goto code_r0x0001800135aa;\n                }\n            }\n            arg2 = arg2 + uVar4;\n        } while (iVar8 != 0);\n        if (iVar8 == 0) {\n            return 0;\n        }\n    }\n    fcn.180010790(*(arg1 + 0x40), 0x364, 0, 0);\n    return iVar8;\n}\n",
        "token_count": 668
    },
    "1800136a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800136ac(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t arg3_00;\n    uchar auStack104 [56];\n    ulong uStack48;\n    \n    *(arg1 + 0x40) = arg2;\n    uStack48 = 0x1800136c5;\n    iVar5 = fcn.18001e94c();\n    uStack48 = 0x1800136d2;\n    iVar5 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar5 + 0x18), arg3);\n    *(arg1 + 0x20) = iVar5;\n    if (iVar5 == 0) {\n        uStack48 = 0x1800136e8;\n        uVar6 = (*_sym.imp.USER32.dll_LoadIconA)(0, 0x7f00);\n        *(arg1 + 0x20) = uVar6;\n    }\n    iVar2 = fcn.18000dafc(*(arg1 + 0x18), *(arg1 + 0x40), &stack0xffffffffffffff98);\n    arg3_00 = 0;\n    if (iVar2 == 0) {\n        iVar1 = fcn.18000da60(arg1);\n        if (iVar1 == 0) {\n            uVar6 = 0;\n        }\n        else {\n            iVar5 = fcn.18001e94c();\n            if (*(iVar5 + 0x28) != '\\0') {\n                fcn.18001fcbc(1);\n                iVar4 = fcn.18001e94c();\n                iVar5 = *(arg1 + 0x40);\n                if (iVar5 != 0) {\n                    uVar3 = fcn.180035930(iVar5);\n                    arg3_00 = uVar3;\n                }\n                fcn.180001720(iVar4 + 0x58, iVar5, arg3_00);\n                fcn.1800110a4(iVar4 + 0x58);\n                fcn.18001fd50(1);\n            }\n            uVar6 = 1;\n        }\n    }\n    else {\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 534
    },
    "180013b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.180013b00(ulong arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t arg2_00;\n    \n    arg2_00 = 0;\n    iVar4 = 0;\n    if (arg2 != 0) {\n        iVar3 = fcn.18001e94c();\n        uVar1 = *(iVar3 + 0x18);\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar1, arg2, 0xf0);\n        if (iVar3 != 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar3);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            arg2_00 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar4);\n        }\n    }\n    uVar2 = fcn.180013518(arg1, arg2_00);\n    if ((arg2_00 != 0) && (iVar4 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar4);\n    }\n    return uVar2;\n}\n",
        "token_count": 275
    },
    "180013c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180013c94(int64_t hDlg, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*(hDlg + 0x78) >> 8 & 1) == 0) {\n        (*_sym.imp.USER32.dll_IsDialogMessageA)(*(hDlg + 0x40));\n    }\n    else {\n        iVar1 = fcn.18001e94c();\n        (**(**(iVar1 + 0x68) + 0x50))(*(iVar1 + 0x68), hDlg, arg2);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "180013f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180013f20(int64_t arg1)\n\n{\n    if (*(arg1 + 0xa0) != NULL) {\n        (**(**(arg1 + 0xa0) + 0xc0))();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "18001405": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180014054(int64_t hWnd, int64_t arg2, ulong X, ulong Y)\n\n{\n    ulong uVar1;\n    \n    uVar1 = 0;\n    if (*(hWnd + 0xa0) == 0) {\n        if (arg2 != 0) {\n            uVar1 = *(arg2 + 0x40);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(hWnd + 0x40), uVar1);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x138))(*(hWnd + 0xa0), arg2);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "18001461": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.180014614(int64_t arg1, int64_t arg2)\n\n{\n    ulong *puVar1;\n    \n    if (*(arg1 + 0x98) != 0) {\n        for (puVar1 = *(*(arg1 + 0x98) + 0x88); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[2] == arg2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 116
    },
    "18001464": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.180014644(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    \n    if (*(arg1 + 0x98) != 0) {\n        for (puVar3 = *(*(arg1 + 0x98) + 0x88); puVar3 != NULL; puVar3 = *puVar3) {\n            piVar1 = puVar3[2];\n            if (piVar1[1] == 0) {\n                iVar4 = *piVar1;\n            }\n            else {\n                iVar4 = *(piVar1[1] + 0x48);\n            }\n            if ((iVar4 != 0) && (iVar2 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar4 == iVar2)) {\n                return puVar3;\n            }\n            if ((piVar1[1] != 0) && (piVar1[1] == *(*(arg1 + 0x98) + 0xd8))) {\n                return puVar3;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 257
    },
    "180014ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180014ad0(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "180014ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180014ba4(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "180014bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180014bdc(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    \n    iVar5 = *arg1;\n    piVar3 = *(iVar5 + -0x18);\n    if (*(iVar5 + -0x10) != 0) {\n        if (*(iVar5 + -8) < 0) {\n            if (*(iVar5 + -0xc) < 0) {\n                fcn.180001030(0x80070057);\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            *(iVar5 + -0x10) = 0;\n            **arg1 = 0;\n        }\n        else {\n            LOCK();\n            piVar1 = iVar5 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iVar5 + -0x18) + 8))();\n            }\n            iVar5 = (**(*piVar3 + 0x18))(piVar3);\n            *arg1 = iVar5 + 0x18;\n        }\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "180014c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180014c4c(int64_t *arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg3;\n    code *pcVar3;\n    int64_t arg2_00;\n    ulong *puVar4;\n    int64_t iVar5;\n    \n    arg3 = *arg1;\n    iVar2 = *(arg3 + -0x10);\n    puVar4 = (**(**(arg3 + -0x18) + 0x20))();\n    iVar5 = (***puVar4)(puVar4, arg2, 2);\n    if (iVar5 == 0) {\n        fcn.180014bcc();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    if (iVar2 < arg2) {\n        arg2._0_4_ = iVar2;\n    }\n    arg2_00 = (arg2 + 1) * 2;\n    fcn.1800341d0(iVar5 + 0x18, arg2_00, arg3, arg2_00);\n    *(iVar5 + 8) = iVar2;\n    LOCK();\n    piVar1 = arg3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(arg3 + -0x18) + 8))(*(arg3 + -0x18), arg3 + -0x18);\n    }\n    *arg1 = iVar5 + 0x18;\n    return;\n}\n",
        "token_count": 365
    },
    "180014cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180014cfc(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    if ((*(*arg1 + -0xc) < arg2) && (0 < arg2)) {\n        iVar2 = (**(**(*arg1 + -0x18) + 0x10))();\n        if (iVar2 == 0) {\n            fcn.180014bcc();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *arg1 = iVar2 + 0x18;\n        return;\n    }\n    fcn.180014bcc();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 166
    },
    "180014d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.180014d90(int64_t *arg1, int64_t lpWideCharStr, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    \n    if (lpWideCharStr == 0) {\n        uVar4 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(3, 0, lpWideCharStr, 0xffffffff, 0, 0, 0, 0);\n        uVar4 = iVar2 - 1;\n    }\n    if (uVar4 < 1) {\n        fcn.180001370(arg1);\n    }\n    else {\n        if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar4) < 0) {\n            fcn.1800013f0(arg1, uVar4);\n        }\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(3, 0, lpWideCharStr, 0xffffffff, *arg1, uVar4, 0, 0);\n        if (*(*arg1 + -0xc) < uVar4) {\n            fcn.180001030(0x80070057);\n            pcVar1 = swi(3);\n            piVar3 = (*pcVar1)();\n            return piVar3;\n        }\n        *(*arg1 + -0x10) = uVar4;\n        *(uVar4 + *arg1) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 369
    },
    "180014fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.180014fd8(int64_t *arg1, ulong hModule, ulong arg3)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    int64_t arg2;\n    uint16_t *puVar4;\n    ulong uVar5;\n    \n    arg2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(hModule, (arg3 >> 4) + 1);\n    if ((arg2 == 0) || (puVar4 = fcn.180001050(hModule, arg2, arg3),  puVar4 == NULL)) {\n        uVar5 = 0;\n    }\n    else {\n        uVar2 = *puVar4;\n        if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar2) < 0) {\n            fcn.180014d48(arg1, uVar2);\n        }\n        fcn.180014948(*arg1, uVar2, puVar4 + 1, *puVar4);\n        uVar1 = *(*arg1 + -0xc);\n        if (uVar2 != uVar1 && uVar1 <= uVar2) {\n            fcn.180001030(0x80070057);\n            pcVar3 = swi(3);\n            uVar5 = (*pcVar3)();\n            return uVar5;\n        }\n        *(*arg1 + -0x10) = uVar2;\n        uVar5 = 1;\n        *(*arg1 + uVar2 * 2) = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 361
    },
    "18001520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.180015208(int64_t arg1)\n\n{\n    int32_t iVar1;\n    \n    *(arg1 + 0x14) = 1;\n    iVar1 = fcn.1800153cc(*(arg1 + 0x9c), arg1 + 0x1c, 0x80);\n    *(arg1 + 0x18) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 93
    },
    "1800153c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800153cc(uint64_t arg1, uchar *arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ushort *puVar3;\n    ulong uVar4;\n    \n    if ((arg2 == NULL) || (arg3 == 0)) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    iVar2 = fcn.18001e94c();\n    uVar4 = *(iVar2 + 0x18);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar4, ((arg1 & 0xffffffff) >> 4) + 1);\n    if ((iVar2 != 0) && (puVar3 = fcn.180001050(uVar4, iVar2, arg1 & 0xffffffff),  puVar3 != NULL)) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + 1, *puVar3, arg2, arg3 + -1, 0, 0);\n        arg2[uVar4] = 0;\n        return uVar4;\n    }\n    *arg2 = 0;\n    return 0;\n}\n",
        "token_count": 297
    },
    "18001548": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180015488(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001e94c();\n    return *(iVar1 + 0x18);\n}\n",
        "token_count": 44
    },
    "18001554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.180015540(code **arg1)\n\n{\n    fcn.180022bc8(arg1);\n    arg1[4] = NULL;\n    *arg1 = vtable.CStdioFile.0;\n    return arg1;\n}\n",
        "token_count": 55
    },
    "180015a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180015a84(int64_t arg1)\n\n{\n    ulong uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    \n    iVar3 = 0;\n    if (*(arg1 + 0x20) != 0) {\n        iVar3 = fcn.180036e54(*(arg1 + 0x20));\n    }\n    uVar1 = *0x180055350;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 8) = uVar1;\n    if (iVar3 != 0) {\n        uVar1 = *(arg1 + 0x18);\n        puVar4 = fcn.180036070();\n        fcn.180023e20(0xd, *puVar4, uVar1);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "180015ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180015ec0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    \n    piVar1 = *(arg1 + 8);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "1800161b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800161bc(ulong arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    \n    if (arg2 != 0) {\n        do {\n            iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg2);\n            if (iVar1 == arg1) {\n                return arg2;\n            }\n            arg2 = (*_sym.imp.USER32.dll_GetWindow)(arg2, 2);\n        } while (arg2 != 0);\n    }\n    return arg2;\n}\n",
        "token_count": 118
    },
    "180020a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.180020a70(ulong arg1, ulong arg2, int64_t *arg3)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.180020858(arg1, arg2);\n    *arg3 = iVar2;\n    if (iVar2 == 0) {\n        iVar2 = fcn.18002092c(arg1, arg2);\n        *arg3 = iVar2;\n        uVar1 = ~-(iVar2 != 0) & 0x80004002;\n    }\n    else {\n        fcn.1800209bc(arg1);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "1800163b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800163b8(ulong arg1, ulong arg2)\n\n{\n    fcn.180020e18(arg1, arg2);\n    return;\n}\n",
        "token_count": 38
    },
    "1800163d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800163d8(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    fcn.180020e5c(arg1, arg2, arg3);\n    return;\n}\n",
        "token_count": 46
    },
    "1800163f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800163f8(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        (**(**arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 45
    },
    "180020bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180020bf8(int64_t arg1)\n\n{\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 8) = 0;\n    fcn.18002f310(*(arg1 + 0x28));\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 105
    },
    "18001675": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180016750(ulong arg1, ulong arg2, uint *arg3, ulong arg4)\n\n{\n    uchar auStack184 [32];\n    ulong uStack152;\n    uint auStack72 [2];\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint64_t uStack40;\n    \n    uStack40 = *0x18006ed40 ^ auStack184;\n    uStack56 = *arg3;\n    uStack52 = arg3[1];\n    uStack48 = arg3[2];\n    uStack44 = arg3[3];\n    uStack64 = 0;\n    auStack72[0] = 2;\n    uStack152 = arg4;\n    fcn.180016524(arg1, arg2, arg3, auStack72);\n    fcn.1800349d0(uStack40 ^ auStack184);\n    return;\n}\n",
        "token_count": 212
    },
    "180016e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180016e0c(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong *puVar3;\n    \n    puVar3 = *(arg1 + 0x88);\n    while( true ) {\n        if (puVar3 == NULL) {\n            return;\n        }\n        if (puVar3 == NULL) break;\n        piVar1 = puVar3 + 2;\n        puVar3 = *puVar3;\n        if (*(*piVar1 + 8) != 0) {\n            fcn.180024cdc(*(*piVar1 + 8), arg2);\n        }\n    }\n    fcn.180015288();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 180
    },
    "180017ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180017ee0(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001c528();\n    if ((iVar1 != 0) && (*(iVar1 + 0x78) != NULL)) {\n        (**(iVar1 + 0x78))(1, 1);\n    }\n    // WARNING: Could not recover jumptable at 0x000180017f0b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_PostQuitMessage)(arg1);\n    return;\n}\n",
        "token_count": 131
    },
    "180018a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180018a84(code **arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    uchar auStack616 [56];\n    code **ppcStack560;\n    ulong uStack544;\n    uint64_t uStack24;\n    \n    uStack544 = 0xfffffffffffffffe;\n    uStack24 = *0x18006ed40 ^ auStack616;\n    *arg1 = vtable.CWinApp.0;\n    piVar1 = arg1[0x16];\n    ppcStack560 = arg1;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    piVar1 = arg1[0x22];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x30))(piVar1, 1);\n    }\n    iVar2 = fcn.18001e94c();\n    if (*(iVar2 + 0x28) == '\\0') {\n        if (*0x180073af0 != NULL) {\n            (**(**0x180073af0 + 8))(*0x180073af0, 1);\n            *0x180073af0 = NULL;\n        }\n        if (*0x180073ae8 != NULL) {\n            (**(**0x180073ae8 + 8))(*0x180073ae8, 1);\n            *0x180073ae8 = NULL;\n        }\n    }\n    if (arg1[0x1c] != NULL) {\n        fcn.18001f938(arg1[0x1c]);\n    }\n    if (arg1[0x1d] != NULL) {\n        fcn.18001f938(arg1[0x1d]);\n    }\n    if (*(arg1 + 0x24) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)();\n    }\n    if (*(arg1 + 0x122) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)();\n    }\n    piVar1 = arg1[0x23];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    iVar2 = fcn.18001e94c();\n    if (*(iVar2 + 0x20) == arg1[0x14]) {\n        *(iVar2 + 0x20) = 0;\n    }\n    if (*(iVar2 + 8) == arg1) {\n        *(iVar2 + 8) = 0;\n    }\n    fcn.1800357dc(arg1[0x14]);\n    fcn.1800357dc(arg1[0x15]);\n    fcn.1800357dc(arg1[0x18]);\n    fcn.1800357dc(arg1[0x19]);\n    fcn.1800357dc(arg1[0x1a]);\n    arg1[0xb] = NULL;\n    fcn.18001c6b0(arg1);\n    fcn.1800349d0(uStack24 ^ auStack616);\n    return;\n}\n",
        "token_count": 693
    },
    "180018d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180018d88(int64_t arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (*(arg1 + 8) != *(arg1 + 0x10)) {\n        uVar1 = (*_sym.imp.GDI32.dll_SetBkColor)();\n    }\n    if (*(arg1 + 0x10) != 0) {\n        uVar1 = (*_sym.imp.GDI32.dll_SetBkColor)(*(arg1 + 0x10), arg2);\n    }\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "18001933": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180019334(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    \n    uVar2 = 0;\n    uVar1 = uVar2;\n    if (*(arg1 + 8) != *(arg1 + 0x10)) {\n        if (arg2 != 0) {\n            uVar1 = *(arg2 + 8);\n        }\n        uVar1 = (*_sym.imp.GDI32.dll_ExtSelectClipRgn)(*(arg1 + 8), uVar1);\n    }\n    if (*(arg1 + 0x10) != 0) {\n        if (arg2 != 0) {\n            uVar2 = *(arg2 + 8);\n        }\n        uVar1 = (*_sym.imp.GDI32.dll_ExtSelectClipRgn)(*(arg1 + 0x10), uVar2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 217
    },
    "1800193a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800193a8(int64_t hdc, uint *arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint32_t uStackX8;\n    uint32_t uStackX12;\n    uint32_t uStackX16;\n    uint32_t uStackX20;\n    \n    (*_sym.imp.GDI32.dll_GetWindowExtEx)(*(hdc + 0x10), &uStackX8);\n    (*_sym.imp.GDI32.dll_GetViewportExtEx)(*(hdc + 0x10), &uStackX16);\n    uVar1 = fcn.180038a60(uStackX8);\n    uVar2 = fcn.180038a60(uStackX16);\n    uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg2, uVar2, uVar1);\n    *arg2 = uVar1;\n    uVar1 = fcn.180038a60(uStackX12);\n    uVar2 = fcn.180038a60(uStackX20);\n    uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg2[1], uVar2, uVar1);\n    arg2[1] = uVar1;\n    return;\n}\n",
        "token_count": 278
    },
    "18001942": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001942c(int64_t hdc, uint *arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint32_t uStackX8;\n    uint32_t uStackX12;\n    uint32_t uStackX16;\n    uint32_t uStackX20;\n    \n    (*_sym.imp.GDI32.dll_GetWindowExtEx)(*(hdc + 0x10), &uStackX16);\n    (*_sym.imp.GDI32.dll_GetViewportExtEx)(*(hdc + 0x10), &uStackX8);\n    uVar1 = fcn.180038a60(uStackX8);\n    uVar2 = fcn.180038a60(uStackX16);\n    uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg2, uVar2, uVar1);\n    *arg2 = uVar1;\n    uVar1 = fcn.180038a60(uStackX12);\n    uVar2 = fcn.180038a60(uStackX20);\n    uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg2[1], uVar2, uVar1);\n    arg2[1] = uVar1;\n    return;\n}\n",
        "token_count": 277
    },
    "18001959": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180019598(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.18001e99c();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x38) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.18000b8f4(0x18001f97c);\n        arg1_01 = fcn.18000b904(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.18001f450(arg1_01, 0x180053868, 0x180019510, 0x180018ec8);\n        }\n        *(iVar1 + 0x38) = uVar2;\n        fcn.18000b8f4(arg1_00);\n    }\n    return *(iVar1 + 0x38);\n}\n",
        "token_count": 229
    },
    "18001963": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001963c(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    \n    iVar1 = fcn.180019598(1);\n    if (arg1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.18001f148(iVar1 + 0x30, arg1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.18001f148(iVar1 + 0x68, arg1);\n            if (iVar2 == 0) {\n                arg1_00 = fcn.18000b8f4(0x18001f97c);\n                iVar2 = fcn.180030cac(iVar1 + 8);\n                iVar3 = iVar2;\n                if (iVar2 == 0) {\n                    iVar3 = fcn.180015240();\n                }\n                (**(iVar1 + 0x20))(iVar3);\n                piVar4 = fcn.18001f390(iVar1 + 0x68, arg1);\n                *piVar4 = iVar2;\n                fcn.18000b8f4(arg1_00);\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n            else {\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 423
    },
    "18001966": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.180019660(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t **ppiVar2;\n    \n    if (arg2 != 0) {\n        arg1[1] = arg2;\n        iVar1 = fcn.180019598(1);\n        ppiVar2 = fcn.18001f390(iVar1 + 0x30, arg1[1]);\n        *ppiVar2 = arg1;\n        (**(*arg1 + 0x18))(arg1, arg1[1]);\n    }\n    return arg2 != 0;\n}\n",
        "token_count": 138
    },
    "18001991": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180019910(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.18001e99c();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x40) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.18000b8f4(0x18001f97c);\n        arg1_01 = fcn.18000b904(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.18001f450(arg1_01, 0x180053928, 0x180019530, 0x180018ed4);\n        }\n        *(iVar1 + 0x40) = uVar2;\n        fcn.18000b8f4(arg1_00);\n    }\n    return *(iVar1 + 0x40);\n}\n",
        "token_count": 229
    },
    "1800199b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1800199b4(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    \n    iVar1 = fcn.180019910(1);\n    if (arg1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.18001f148(iVar1 + 0x30, arg1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.18001f148(iVar1 + 0x68, arg1);\n            if (iVar2 == 0) {\n                arg1_00 = fcn.18000b8f4(0x18001f97c);\n                iVar2 = fcn.180030cac(iVar1 + 8);\n                iVar3 = iVar2;\n                if (iVar2 == 0) {\n                    iVar3 = fcn.180015240();\n                }\n                (**(iVar1 + 0x20))(iVar3);\n                piVar4 = fcn.18001f390(iVar1 + 0x68, arg1);\n                *piVar4 = iVar2;\n                fcn.18000b8f4(arg1_00);\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n            else {\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 424
    },
    "1800199d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.1800199d8(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    \n    if (arg2 != 0) {\n        *(arg1 + 8) = arg2;\n        iVar1 = fcn.180019910(1);\n        piVar2 = fcn.18001f390(iVar1 + 0x30, *(arg1 + 8));\n        *piVar2 = arg1;\n    }\n    return arg2 != 0;\n}\n",
        "token_count": 123
    },
    "180019bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180019bfc(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong arg2_00;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    if (arg2 == 0x110) {\n        arg2_00 = fcn.18000fa58(arg1);\n        piVar2 = fcn.18001efec(0x180053fa0, arg2_00);\n        if (piVar2 == NULL) {\n            iVar3 = 1;\n        }\n        else {\n            iVar1 = (**(*piVar2 + 0x2a0))(piVar2);\n            iVar3 = iVar1;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 177
    },
    "180019d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180019d88(int64_t *arg1, ulong arg2)\n\n{\n    if ((*(arg1 + 0xf) & 0x18) != 0) {\n        (**(*arg1 + 0x118))(arg1, arg2 & 0xffffffff);\n    }\n    // WARNING: Could not recover jumptable at 0x000180019dba. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_EndDialog)(arg1[8], arg2);\n    return;\n}\n",
        "token_count": 123
    },
    "18001a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001a000(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.18001e94c();\n    uVar2 = 0;\n    if (*(iVar1 + 8) != 0) {\n        fcn.18001c278(*(iVar1 + 8), 0);\n    }\n    if (*(arg1 + 0xd0) != 0) {\n        uVar2 = *(*(arg1 + 0xd0) + 0x40);\n    }\n    uVar2 = fcn.18001c174(uVar2, arg1 + 0xd8);\n    fcn.180011e50(arg1);\n    return uVar2;\n}\n",
        "token_count": 166
    },
    "18001a05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001a05c(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    \n    fcn.18000fb30();\n    fcn.18000fae4(arg1);\n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(arg1 + 0xd8));\n    if (iVar2 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(arg1 + 0xd8), 1);\n    }\n    *(arg1 + 0xd8) = 0;\n    iVar1 = fcn.18001e94c();\n    if (*(iVar1 + 8) != 0) {\n        fcn.18001c278(*(iVar1 + 8), 1);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "18001a23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001a234(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t hWnd;\n    \n    if (*(arg1 + 200) == 0) {\n        iVar1 = fcn.180013b00(arg1, *(arg1 + 0xb0));\n    }\n    else {\n        iVar1 = fcn.180013518(arg1, *(arg1 + 200));\n    }\n    if ((iVar1 != 0) && (iVar1 = fcn.18000f178(arg1, 0),  iVar1 != 0)) {\n        hWnd = fcn.180013c24(arg1, 0xe146);\n        if (hWnd != 0) {\n            iVar1 = fcn.18001a1ac();\n            fcn.180013e58(hWnd, -(iVar1 != 0) & 5);\n        }\n        return 1;\n    }\n    fcn.180019d88(arg1, 0xffffffff);\n    return 0;\n}\n",
        "token_count": 221
    },
    "18001a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18001a400(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    ushort auStackX32 [4];\n    int64_t iStack128;\n    int64_t iStack120;\n    int64_t *piStack112;\n    uchar auStack104 [24];\n    ulong uStack80;\n    uchar auStack72 [32];\n    \n    uStack80 = 0xfffffffffffffffe;\n    iVar8 = 0;\n    if (arg4 == 0) {\n        iVar5 = fcn.18001e94c();\n        arg4 = *(iVar5 + 0x18);\n    }\n    iVar5 = fcn.18001e94c();\n    piVar2 = *(iVar5 + 0x68);\n    iStack120 = 0;\n    piStack112 = piVar2;\n    fcn.180013700(0x10);\n    fcn.180013700(0x3c000);\n    if (piVar2 != NULL) {\n        iVar4 = (**(*arg1 + 0x268))(arg1, auStack72);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        arg2 = (**(*piVar2 + 0x28))(piVar2, auStack72, arg2);\n    }\n    if (arg2 == 0) {\n        uVar7 = 0;\n    }\n    else {\n        piVar6 = fcn.18001549c();\n        if (piVar6 == NULL) {\n            fcn.180001030(0x80004005);\n            pcVar3 = swi(3);\n            uVar7 = (*pcVar3)();\n            return uVar7;\n        }\n        iStack128 = (**(*piVar6 + 0x18))(piVar6);\n        iStack128 = iStack128 + 0x18;\n        auStackX32[0] = 0;\n        iVar4 = fcn.18002ee0c(arg2, &iStack128, auStackX32);\n        iVar5 = iVar8;\n        if (iVar4 == 0) {\n            fcn.18002edc0(auStack104, arg2);\n            fcn.18002ecc4(auStack104);\n            iVar5 = fcn.18002e894(auStack104);\n            fcn.18002e87c(auStack104);\n            if (iVar5 != 0) {\n                arg2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar5);\n            }\n        }\n        *(arg1 + 0x11) = 0xffffffff;\n        *(arg1 + 0xf) = *(arg1 + 0xf) | 0x10;\n        fcn.180011e50(arg1);\n        if (arg3 != 0) {\n            iVar8 = *(arg3 + 0x40);\n        }\n        iVar8 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)(arg4, arg2, iVar8, fcn.180019bfc, 0);\n        LOCK();\n        piVar1 = iStack128 + -8;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        iStack120 = iVar8;\n        if (iVar4 + -1 < 1) {\n            (**(**(iStack128 + -0x18) + 8))();\n        }\n        if ((piVar2 != NULL) && (iVar8 != 0)) {\n            (**(*piVar2 + 0x30))(piVar2, auStack72);\n            (**(*arg1 + 0x268))(arg1, 0);\n        }\n        iVar4 = fcn.18000fb30();\n        if (iVar4 == 0) {\n            (**(*arg1 + 0x238))(arg1);\n        }\n        if ((iVar8 != 0) && ((*(arg1 + 0xf) & 0x10) == 0)) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(iVar8);\n            iVar8 = 0;\n        }\n        if (iVar5 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar5);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar5);\n        }\n        uVar7 = iVar8 != 0;\n    }\n    return uVar7;\n}\n",
        "token_count": 1029
    },
    "18001a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18001a908(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    ushort uStackX32;\n    int64_t in_stack_00000028;\n    int64_t iStack128;\n    int64_t iStack120;\n    int64_t *piStack112;\n    uchar auStack104 [24];\n    ulong uStack80;\n    uchar auStack72 [24];\n    ulong uStack48;\n    \n    if (arg3 == 0) {\n        uStack48 = 0x18001a92d;\n        piVar8 = fcn.18001c528();\n        if (piVar8 == NULL) {\n            arg3 = 0;\n        }\n        else {\n            uStack48 = 0x18001a93f;\n            arg3 = (**(*piVar8 + 0xe8))(piVar8);\n        }\n    }\n    arg1[0x19] = arg4;\n    uStack80 = 0xfffffffffffffffe;\n    iVar7 = 0;\n    if (in_stack_00000028 == 0) {\n        iVar4 = fcn.18001e94c();\n        in_stack_00000028 = *(iVar4 + 0x18);\n    }\n    iVar4 = fcn.18001e94c();\n    piVar8 = *(iVar4 + 0x68);\n    iStack120 = 0;\n    piStack112 = piVar8;\n    fcn.180013700(0x10);\n    fcn.180013700(0x3c000);\n    if (piVar8 != NULL) {\n        iVar3 = (**(*arg1 + 0x268))(arg1, &stack0xffffffffffffffb8);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        arg2 = (**(*piVar8 + 0x28))(piVar8, &stack0xffffffffffffffb8, arg2);\n    }\n    if (arg2 == 0) {\n        uVar6 = 0;\n    }\n    else {\n        piVar5 = fcn.18001549c();\n        if (piVar5 == NULL) {\n            fcn.180001030(0x80004005);\n            pcVar2 = swi(3);\n            uVar6 = (*pcVar2)();\n            return uVar6;\n        }\n        iStack128 = (**(*piVar5 + 0x18))(piVar5);\n        iStack128 = iStack128 + 0x18;\n        uStackX32 = 0;\n        iVar3 = fcn.18002ee0c(arg2, &stack0xffffffffffffff80, &stack0x00000020);\n        iVar4 = iVar7;\n        if (iVar3 == 0) {\n            fcn.18002edc0(&stack0xffffffffffffff98, arg2);\n            fcn.18002ecc4(&stack0xffffffffffffff98);\n            iVar4 = fcn.18002e894(&stack0xffffffffffffff98);\n            fcn.18002e87c(&stack0xffffffffffffff98);\n            if (iVar4 != 0) {\n                arg2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n            }\n        }\n        *(arg1 + 0x11) = 0xffffffff;\n        *(arg1 + 0xf) = *(arg1 + 0xf) | 0x10;\n        fcn.180011e50(arg1);\n        if (arg3 != 0) {\n            iVar7 = *(arg3 + 0x40);\n        }\n        iVar7 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)(in_stack_00000028, arg2, iVar7, fcn.180019bfc, 0);\n        LOCK();\n        piVar1 = iStack128 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        iStack120 = iVar7;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack128 + -0x18) + 8))();\n        }\n        if ((piVar8 != NULL) && (iVar7 != 0)) {\n            (**(*piVar8 + 0x30))(piVar8, &stack0xffffffffffffffb8);\n            (**(*arg1 + 0x268))(arg1, 0);\n        }\n        iVar3 = fcn.18000fb30();\n        if (iVar3 == 0) {\n            (**(*arg1 + 0x238))(arg1);\n        }\n        if ((iVar7 != 0) && ((*(arg1 + 0xf) & 0x10) == 0)) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(iVar7);\n            iVar7 = 0;\n        }\n        if (iVar4 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar4);\n        }\n        uVar6 = iVar7 != 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 1186
    },
    "18001ac5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18001ac58(int64_t arg1, ulong arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    \n    if (arg2 == 0) {\n        puVar2 = arg1 + 0x12;\n    }\n    else {\n        puVar2 = arg1 + 0x18;\n    }\n    if (*puVar2 == 0xffff) {\n        puVar2 = puVar2 + 2;\n    }\n    else {\n        do {\n            uVar1 = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (uVar1 != 0);\n    }\n    if (*puVar2 == 0xffff) {\n        puVar2 = puVar2 + 2;\n    }\n    else {\n        do {\n            uVar1 = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (uVar1 != 0);\n    }\n    uVar1 = *puVar2;\n    if ((uVar1 != 0) && (arg2 == 0)) {\n        uVar1 = uVar1 - 2;\n    }\n    return uVar1 + 5 + puVar2 & 0xfffffffffffffffc;\n}\n",
        "token_count": 280
    },
    "18001b0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001b0d0(int64_t arg1)\n\n{\n    ulong *puVar1;\n    \n    for (puVar1 = *(arg1 + 8); puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 8) = 0;\n    fcn.18002f310(*(arg1 + 0x28));\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 147
    },
    "18001b2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001b2f0(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    puVar3 = *(arg1 + 0x10);\n    iVar2 = 0;\n    do {\n        if (puVar3 == NULL) {\n            return iVar2;\n        }\n        piVar1 = puVar3[2];\n        puVar3 = *puVar3;\n    } while ((piVar1 == NULL) || (iVar2 = (**(*piVar1 + 8))(piVar1, arg2, arg3),  iVar2 == 0));\n    return iVar2;\n}\n",
        "token_count": 161
    },
    "18001b41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001b410(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001b10c(arg1, 0, *(arg1 + 8));\n    *(iVar1 + 0x10) = arg2;\n    if (*(arg1 + 8) == 0) {\n        *(arg1 + 0x10) = iVar1;\n    }\n    else {\n        *(*(arg1 + 8) + 8) = iVar1;\n    }\n    *(arg1 + 8) = iVar1;\n    return;\n}\n",
        "token_count": 135
    },
    "18001b45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.18001b454(int64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    \n    if (arg3 == NULL) {\n        arg3 = *(arg1 + 8);\n    }\n    else {\n        arg3 = *arg3;\n    }\n    while( true ) {\n        if (arg3 == NULL) {\n            return NULL;\n        }\n        if (arg3 + 2 == NULL) break;\n        if (arg3[2] == arg2) {\n            return arg3;\n        }\n        arg3 = *arg3;\n    }\n    fcn.180015288();\n    pcVar1 = swi(3);\n    puVar2 = (*pcVar1)();\n    return puVar2;\n}\n",
        "token_count": 177
    },
    "18001b4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001b4d8(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001b10c(arg1, *(arg1 + 0x10), 0);\n    *(iVar1 + 0x10) = arg2;\n    if (*(arg1 + 0x10) == NULL) {\n        *(arg1 + 8) = iVar1;\n    }\n    else {\n        **(arg1 + 0x10) = iVar1;\n    }\n    *(arg1 + 0x10) = iVar1;\n    return;\n}\n",
        "token_count": 138
    },
    "18001b51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001b51c(ulong noname_0, int64_t arg2)\n\n{\n    uint16_t uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    \n    if (*(arg2 + 0x98) != 0) {\n        puVar7 = *(*(arg2 + 0x98) + 0x88);\n        while (puVar7 != NULL) {\n            if (puVar7 == NULL) {\n                fcn.180015288();\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            iVar3 = puVar7[2];\n            puVar7 = *puVar7;\n            if (*(iVar3 + 8) != 0) {\n                for (iVar6 = *(*(iVar3 + 8) + 0xe0); iVar6 != 0; iVar6 = fcn.180025a20(iVar6)) {\n                    fcn.180025a1c(iVar6, *(iVar3 + 8));\n                    if (*(iVar6 + 8) != 0) {\n                        iVar5 = fcn.180013c24(arg2, *(iVar6 + 8));\n                        fcn.180028968(iVar6, *(iVar5 + 0xa0));\n                    }\n                }\n                uVar1 = *(*(iVar3 + 8) + 0xe8);\n                if (uVar1 != 0) {\n                    iVar6 = fcn.180013c24(arg2, uVar1);\n                    (**(**(iVar6 + 0xa0) + 0x168))();\n                    *(*(iVar3 + 8) + 0xe8) = *(iVar6 + 0xa0);\n                    piVar2 = *(*(iVar6 + 0xa0) + 0xd8);\n                    (**(*piVar2 + 0x10))(piVar2, *(iVar3 + 8), 1);\n                }\n            }\n        }\n        puVar7 = *(*(arg2 + 0x98) + 0x88);\n        while (puVar7 != NULL) {\n            if (puVar7 == NULL) {\n                fcn.180015288();\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            piVar2 = puVar7 + 2;\n            puVar7 = *puVar7;\n            iVar3 = *(*piVar2 + 8);\n            if ((iVar3 != 0) && (*(iVar3 + 0xd8) != 0)) {\n                (**(**(iVar3 + 0xd8) + 0x18))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 619
    },
    "18001b71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001b714(int64_t arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    if (arg2 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = fcn.18001b454(arg1 + 8, arg2, 0);\n    if (iVar3 == 0) {\n        fcn.18001b410(arg1 + 8, arg2);\n    }\n    return 0;\n}\n",
        "token_count": 147
    },
    "18001b92": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001b920(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    if (arg1 == 0) {\n        arg1 = fcn.18001fff4(0x180073c68, 0x18001b758);\n        if (arg1 == 0) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    iVar2 = fcn.18001e94c();\n    *(iVar2 + 0x68) = arg1;\n    return;\n}\n",
        "token_count": 140
    },
    "18001c17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001c174(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar4 = arg1;\n    if (arg1 != 0) goto code_r0x00018001c1d9;\n    iVar4 = fcn.18001dfbc();\n    if (*(iVar4 + 0x158) == 0) {\n        piVar5 = fcn.18001c528();\n        if (piVar5 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = (**(*piVar5 + 0xe8))(piVar5);\n        }\n        if (iVar4 == 0) {\n            iVar4 = 0;\n            iVar6 = iVar4;\n            iVar7 = iVar4;\n            goto joined_r0x00018001c207;\n        }\n        iVar4 = *(iVar4 + 0x40);\n    }\n    else {\n        iVar4 = *(*(iVar4 + 0x158) + 0x40);\n    }\n    for (; iVar6 = iVar4,  iVar7 = iVar4,  iVar4 != 0; iVar4 = (*_sym.imp.USER32.dll_GetParent)(iVar4)) {\ncode_r0x00018001c1d9:\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0);\n        iVar6 = iVar4;\n        iVar7 = iVar4;\n        if ((uVar2 >> 0x1e & 1) == 0) break;\n    }\njoined_r0x00018001c207:\n    while (iVar1 = iVar6,  iVar1 != 0) {\n        iVar6 = (*_sym.imp.USER32.dll_GetParent)(iVar1);\n        iVar4 = iVar1;\n    }\n    if ((arg1 == 0) && (iVar7 != 0)) {\n        iVar7 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar7);\n    }\n    if (arg2 != NULL) {\n        if (((iVar4 == 0) || (iVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar4),  iVar3 == 0)) || (iVar4 == iVar7))\n        {\n            *arg2 = 0;\n        }\n        else {\n            *arg2 = iVar4;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar4, 0);\n        }\n    }\n    return iVar7;\n}\n",
        "token_count": 586
    },
    "18001c41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001c410(ulong arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001e94c();\n    if (*(iVar1 + 8) == NULL) {\n        fcn.18001c280(0, arg1, arg2 & 0xffffffff, arg3 & 0xffffffff);\n    }\n    else {\n        (**(**(iVar1 + 8) + 0x130))();\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "18001c53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001c53c(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001dfbc();\n    return iVar1 + 0x58;\n}\n",
        "token_count": 46
    },
    "18001c57": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001c57c(ulong arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.18001e99c();\n    piVar1 = *(iVar2 + 8);\n    if (piVar1 == NULL) {\n        fcn.18001c550(arg1, arg2);\n    }\n    else {\n        (**(*piVar1 + 0xd8))(piVar1, arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "18001c5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001c5c4(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    fcn.18001f43c();\n    fcn.18001f704(0xffffffff);\n    if (arg1 == 0) {\n        iVar2 = fcn.18001e99c();\n        if ((iVar2 != 0) && (*(iVar2 + 0x78) != NULL)) {\n            (**(**(iVar2 + 0x78) + 0xc0))();\n            piVar1 = *(iVar2 + 0x78);\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 8))(piVar1, 1);\n            }\n            *(iVar2 + 0x78) = 0;\n        }\n    }\n    if (*0x180074050 != 0) {\n        fcn.180020648(*0x180074050, arg1, 0);\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "18001c65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001c65c(int64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    *(arg1 + 0x40) = 0;\n    *(arg1 + 0x48) = 0;\n    *(arg1 + 0x58) = 0;\n    *(arg1 + 0x60) = 0;\n    iVar1 = fcn.18001dfbc();\n    *(iVar1 + 0x60) = 0;\n    *(iVar1 + 0x90) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x88);\n    *(arg1 + 0x80) = 0;\n    *(arg1 + 0x78) = 0;\n    *(arg1 + 0x50) = 1;\n    return;\n}\n",
        "token_count": 187
    },
    "18001c95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001c954(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.18001e99c();\n    piVar1 = *(iVar2 + 8);\n    if (piVar1 == NULL) {\n        fcn.18001c8b0(arg1);\n    }\n    else {\n        (**(*piVar1 + 0xb0))(piVar1, arg1);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "18001c98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001c988(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    iVar1 = *(arg1 + 8);\n    if ((iVar1 == 0x200) || (iVar1 == 0xa0)) {\n        iVar3 = fcn.18001dfbc();\n        uVar2 = *(arg1 + 0x24);\n        if ((*(iVar3 + 0x88) == uVar2) && ((*(iVar3 + 0x8c) == uVar2 >> 0x20 && (*(arg1 + 8) == *(iVar3 + 0x90))))) {\n            return 0;\n        }\n        *(iVar3 + 0x88) = uVar2;\n        *(iVar3 + 0x90) = *(arg1 + 8);\n    }\n    else if ((iVar1 == 0xf) || (iVar1 == 0x118)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 231
    },
    "18001ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001ca00(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.18001e99c();\n    piVar1 = *(iVar2 + 8);\n    if (piVar1 == NULL) {\n        fcn.18001c988(arg1);\n    }\n    else {\n        (**(*piVar1 + 200))(piVar1, arg1);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "18001ca3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001ca34(ulong arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = fcn.18001e99c();\n    piVar1 = *(iVar4 + 8);\n    if (piVar1 != NULL) {\n        if (piVar1[0xf] != NULL) {\n            (*piVar1[0xf])();\n        }\n        if (arg2 != 0) {\n            (**(*piVar1 + 0xf0))();\n        }\n        *(iVar4 + 8) = 0;\n    }\n    fcn.18001c5c4(0);\n    if (*0x180057768 != NULL) {\n        iVar3 = fcn.18003d040(0x180057768);\n        if (iVar3 != 0) {\n            (**0x180057768)();\n        }\n    }\n    iVar4 = fcn.180039adc();\n    if (iVar4 != 0) {\n        fcn.180039cbc(iVar4);\n    }\n    (*_sym.imp.KERNEL32.dll_ExitThread)(arg1);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 285
    },
    "18001cbb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001cbb4(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    \n    iVar2 = fcn.18001dfbc();\n    uVar3 = (*_sym.imp.USER32.dll_GetMessageA)(iVar2 + 0x58, 0, 0, 0);\n    if (uVar3 != 0) {\n        if (*(iVar2 + 0x60) != 0x36a) {\n            iVar1 = fcn.18001c954(iVar2 + 0x58);\n            if (iVar1 == 0) {\n                (*_sym.imp.USER32.dll_TranslateMessage)(iVar2 + 0x58);\n                (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2 + 0x58);\n            }\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 201
    },
    "18001cc1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001cc18(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001e99c();\n    if (*(iVar1 + 8) == NULL) {\n        fcn.18001cbb4();\n    }\n    else {\n        (**(**(iVar1 + 8) + 0xb8))();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "18001d41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001d414(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t arg1_00;\n    code *pcVar1;\n    int64_t arg2_00;\n    uint32_t uVar2;\n    int32_t in_stack_00000028;\n    \n    arg2_00 = arg3;\n    uVar2 = arg3 + in_stack_00000028;\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar2) < 0) {\n        fcn.1800013f0(arg1, uVar2);\n    }\n    arg1_00 = *arg1;\n    fcn.1800341d0(arg1_00, arg2_00, arg2, arg2_00);\n    fcn.1800341d0(arg2_00 + arg1_00, in_stack_00000028, arg4, in_stack_00000028);\n    if ((-1 < uVar2) && (uVar2 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar2;\n        *(uVar2 + *arg1) = 0;\n        return;\n    }\n    fcn.180001030(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 314
    },
    "18001d4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nint64_t * fcn.18001d4d0(int64_t *arg1, int64_t *arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    piVar2 = NULL;\n    if (*(*arg2 + -0x18) != NULL) {\n        piVar2 = (**(**(*arg2 + -0x18) + 0x20))();\n    }\n    if (piVar2 == NULL) {\n        piVar2 = fcn.18001549c();\n        piVar2 = (**(*piVar2 + 0x20))();\n    }\n    if (piVar2 != NULL) {\n        iVar3 = (**(*piVar2 + 0x18))(piVar2);\n        *arg1 = iVar3 + 0x18;\n        if (arg3 != 0) {\n            fcn.180035930(arg3);\n        }\n        fcn.18001d414(arg1, *arg2, *(*arg2 + -0x10), arg3);\n        return arg1;\n    }\n    fcn.180001030(0x80004005);\n    pcVar1 = swi(3);\n    piVar2 = (*pcVar1)();\n    return piVar2;\n}\n",
        "token_count": 288
    },
    "18001d59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.18001d590(int64_t *arg1, int64_t arg2, int64_t *arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    \n    piVar3 = NULL;\n    uVar2 = 0;\n    if (*(*arg3 + -0x18) != NULL) {\n        piVar3 = (**(**(*arg3 + -0x18) + 0x20))();\n    }\n    if (piVar3 == NULL) {\n        piVar3 = fcn.18001549c();\n        piVar3 = (**(*piVar3 + 0x20))();\n    }\n    if (piVar3 != NULL) {\n        iVar4 = (**(*piVar3 + 0x18))(piVar3);\n        *arg1 = iVar4 + 0x18;\n        iVar4 = *arg3;\n        if (arg2 != 0) {\n            uVar2 = fcn.180035930(arg2);\n        }\n        fcn.18001d414(arg1, arg2, uVar2, iVar4);\n        return arg1;\n    }\n    fcn.180001030(0x80004005);\n    pcVar1 = swi(3);\n    piVar3 = (*pcVar1)();\n    return piVar3;\n}\n",
        "token_count": 308
    },
    "18001fd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001fd50(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    if (0x10 < arg1) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00018001fd75. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg1 * 0x28 + 0x180073cb0);\n    return;\n}\n",
        "token_count": 131
    },
    "18002078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002078c(uint32_t *arg1)\n\n{\n    if ((*arg1 != 0) && (*0x180074050 != 0)) {\n        fcn.180020308(*0x180074050, *arg1);\n    }\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 70
    },
    "18001dd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001dd14(void)\n\n{\n    if (*0x180073c88 != NULL) {\n        (**0x180073c88)();\n    }\n    return;\n}\n",
        "token_count": 40
    },
    "18001dd3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18001dd30(ulong noname_0, int64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    \n    if (arg2 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    if (*0x180073c80 == NULL) {\n        uVar3 = 2;\n    }\n    else {\n        iVar2 = (**0x180073c80)();\n        uVar3 = iVar2 != 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 152
    },
    "18001dd6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001dd68(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    \n    LOCK();\n    piVar1 = arg1 + 0x30;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        if (*(arg1 + 0x28) != NULL) {\n            (**(**(arg1 + 0x28) + 0x10))();\n            *(arg1 + 0x28) = 0;\n        }\n        if (*(arg1 + 0x10) != NULL) {\n            (**(**(arg1 + 0x10) + 0x10))();\n            *(arg1 + 0x10) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "18001dde": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001dde0(code **arg1)\n\n{\n    *arg1 = vtable._AFX_THREAD_STATE.0;\n    if (arg1[10] != NULL) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n    }\n    if (arg1[9] != NULL) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n    }\n    if (arg1[3] != NULL) {\n        fcn.1800357dc(arg1[3]);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "18001dfb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001dfbc(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.1800206d0(0x180073ca0, 0x18000d9b0);\n    if (iVar2 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "18001e94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001e94c(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.1800206d0(0x180073ca0, 0x18000d9b0);\n    if (iVar2 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (*(iVar2 + 8) == 0) {\n        iVar2 = fcn.18001fff4(0x180073c98, 0x18001e900);\n        if (iVar2 == 0) {\n            fcn.180015288();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "18001e99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001e99c(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.18001e94c();\n    iVar2 = fcn.1800206d0(iVar2 + 0xc0, 0x180018154);\n    if (iVar2 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "18001e9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001e9c8(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.18001e94c();\n    uVar1 = 0;\n    if (((*(iVar2 + 0xd0) != 0) && (*(arg2 + 0xd8) != -1)) && (*0x180073c80 != NULL)) {\n        uVar1 = (**0x180073c80)(*(arg2 + 0xd8), arg1);\n    }\n    *(arg1 + 8) = uVar1;\n    return arg1;\n}\n",
        "token_count": 149
    },
    "18001ea7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001ea7c(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.18001e99c();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x30) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.18000b8f4(0x18001f97c);\n        arg1_01 = fcn.18000b904(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.18001f450(arg1_01, 0x180054c18, 0x18001ea64, 0x18001ea2c);\n        }\n        *(iVar1 + 0x30) = uVar2;\n        fcn.18000b8f4(arg1_00);\n    }\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 234
    },
    "18001ec1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001ec14(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t iStackX8;\n    \n    fcn.180013c5c(*(arg1 + 8), arg2, &iStackX8);\n    if ((iStackX8 == 0) && (iVar2 = fcn.180013bfc(*(arg1 + 8)),  iVar2 == 0)) {\n        fcn.180015264();\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    *(arg1 + 0x14) = 0;\n    *(arg1 + 0x10) = arg2;\n    return iStackX8;\n}\n",
        "token_count": 179
    },
    "18001ef8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001ef80(int64_t arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    \n    if (arg1 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (arg2 != 0) {\n        do {\n            if (arg1 == arg2) {\n                return 1;\n            }\n            arg1 = *(arg1 + 0x18);\n        } while (arg1 != 0);\n        return 0;\n    }\n    fcn.180015288();\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 177
    },
    "18001efb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001efb8(ulong *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    if (arg1 == NULL) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = (***arg1)();\n    if (iVar3 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (iVar3 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (arg2 != 0) {\n        do {\n            if (iVar3 == arg2) {\n                return 1;\n            }\n            iVar3 = *(iVar3 + 0x18);\n        } while (iVar3 != 0);\n        return 0;\n    }\n    fcn.180015288();\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 285
    },
    "18001efe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001efec(ulong arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    \n    if ((arg2 == 0) || (iVar1 = fcn.18001efb8(arg2, arg1),  iVar1 == 0)) {\n        arg2 = 0;\n    }\n    return arg2;\n}\n",
        "token_count": 82
    },
    "18001f05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001f054(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    \n    uVar2 = arg2;\n    if (arg2 == 0) {\n        uVar2 = 0x11;\n    }\n    if (*(arg1 + 8) != 0) {\n        fcn.18000b948(*(arg1 + 8));\n        *(arg1 + 8) = 0;\n    }\n    if (arg3 != 0) {\n        uVar1 = SUB168(ZEXT816(8) * ZEXT816(uVar2), 0);\n        if (SUB168(ZEXT816(8) * ZEXT816(uVar2) >> 0x40, 0) != 0) {\n            uVar1 = 0xffffffffffffffff;\n        }\n        uVar1 = fcn.18000b904(uVar1);\n        *(arg1 + 8) = uVar1;\n        fcn.180035830(uVar1, 0, uVar2 << 3);\n    }\n    *(arg1 + 0x10) = uVar2;\n    return;\n}\n",
        "token_count": 262
    },
    "18001f0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001f0d4(int64_t arg1)\n\n{\n    if (*(arg1 + 8) != 0) {\n        fcn.18000b948(*(arg1 + 8));\n        *(arg1 + 8) = 0;\n    }\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    fcn.18002f310(*(arg1 + 0x28));\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 124
    },
    "18001f14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001f148(int64_t arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    \n    if (arg1 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (*(arg1 + 8) != 0) {\n        for (puVar3 = *(*(arg1 + 8) + ((arg2 >> 4 & 0xffffffff) % *(arg1 + 0x10)) * 8); puVar3 != NULL; puVar3 = *puVar3\n            ) {\n            if (puVar3[1] == arg2) {\n                return puVar3[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "18001f19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001f190(ulong arg1, ulong arg2, ulong *arg3)\n\n{\n    int64_t iVar1;\n    uchar auStackX32 [8];\n    uchar auStack24 [24];\n    \n    iVar1 = fcn.18001f110(arg1, arg2, auStack24, auStackX32);\n    if (iVar1 != 0) {\n        *arg3 = *(iVar1 + 0x10);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 116
    },
    "18001f1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001f1bc(int64_t arg1, uint64_t arg2)\n\n{\n    int64_t *piVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong *puVar4;\n    \n    if (*(arg1 + 8) != 0) {\n        puVar4 = *(arg1 + 8) + ((arg2 >> 4 & 0xffffffff) % *(arg1 + 0x10)) * 8;\n        puVar2 = *puVar4;\n        while (puVar3 = puVar2,  puVar3 != NULL) {\n            if (puVar3[1] == arg2) {\n                *puVar4 = *puVar3;\n                *puVar3 = *(arg1 + 0x20);\n                piVar1 = arg1 + 0x18;\n                *piVar1 = *piVar1 + -1;\n                *(arg1 + 0x20) = puVar3;\n                if (*piVar1 == 0) {\n                    fcn.18001f0d4(arg1);\n                }\n                return 1;\n            }\n            puVar4 = puVar3;\n            puVar2 = *puVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 279
    },
    "18001f22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001f224(int64_t arg1, int64_t **arg2, int64_t *arg3, int64_t *arg4)\n\n{\n    code *pcVar1;\n    int64_t **ppiVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    \n    piVar6 = *arg2;\n    if (piVar6 != NULL) {\n        if ((piVar6 == 0xffffffffffffffff) && (uVar5 = 0,  *(arg1 + 0x10) != 0)) {\n            ppiVar2 = *(arg1 + 8);\n            while (piVar6 = *ppiVar2,  piVar6 == NULL) {\n                uVar5 = uVar5 + 1;\n                ppiVar2 = ppiVar2 + 1;\n                if (*(arg1 + 0x10) <= uVar5) {\n                    fcn.180015288();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n        }\n        piVar3 = *piVar6;\n        if (piVar3 == NULL) {\n            uVar5 = *(arg1 + 0x10);\n            uVar4 = (piVar6[1] >> 4 & 0xffffffff) % uVar5 + 1;\n            if (uVar4 < uVar5) {\n                ppiVar2 = *(arg1 + 8) + uVar4 * 8;\n                do {\n                    piVar3 = *ppiVar2;\n                    if (piVar3 != NULL) break;\n                    uVar4 = uVar4 + 1;\n                    ppiVar2 = ppiVar2 + 1;\n                } while (uVar4 < uVar5);\n            }\n        }\n        *arg2 = piVar3;\n        *arg3 = piVar6[1];\n        *arg4 = piVar6[2];\n    }\n    return;\n}\n",
        "token_count": 450
    },
    "18001f43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001f43c(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001e99c();\n    *(iVar1 + 0x20) = *(iVar1 + 0x20) + 1;\n    return;\n}\n",
        "token_count": 62
    },
    "18001f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001f90c(int64_t *arg1)\n\n{\n    code *pcVar1;\n    \n    if (arg1 == NULL) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (*arg1 != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)();\n        *arg1 = 0;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "18001f93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001f938(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)();\n        uVar2 = uVar1;\n        if (uVar1 != 0) {\n            do {\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(arg1);\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(arg1);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "18001fc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.18001fc8c(void)\n\n{\n    if (*0x180073cac == 0) {\n        *0x180073cac = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x180073f58);\n    }\n    return *0x180073cac;\n}\n",
        "token_count": 71
    },
    "18001fd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001fd7c(int64_t arg1)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n    *(arg1 + 0x30) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x10);\n    *(arg1 + 0x34) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x14);\n    *(arg1 + 0x38) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n    *(arg1 + 0x3c) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(6);\n    *(arg1 + 0x40) = uVar2;\n    uVar1 = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n    *(arg1 + 0x28) = uVar1;\n    uVar1 = (*_sym.imp.USER32.dll_GetSysColorBrush)(6);\n    *(arg1 + 0x20) = uVar1;\n    return;\n}\n",
        "token_count": 274
    },
    "18001fdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001fdf0(int64_t arg1)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n    *(arg1 + 8) = uVar1;\n    uVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xc);\n    *(arg1 + 0xc) = uVar1;\n    *0x180073fd0 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n    *0x180073fd0 = *0x180073fd0 + 1;\n    *0x180073fd4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(3);\n    *0x180073fd4 = *0x180073fd4 + 1;\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x58);\n    *(arg1 + 0x18) = uVar1;\n    uVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a);\n    *(arg1 + 0x1c) = uVar1;\n    // WARNING: Could not recover jumptable at 0x00018001fe7b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    return;\n}\n",
        "token_count": 336
    },
    "18001fe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18001fe84(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    fcn.18001fdf0(arg1);\n    *(arg1 + 0x28) = 0;\n    fcn.18001fd7c(arg1);\n    uVar1 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n    *(arg1 + 0x48) = uVar1;\n    uVar1 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f00);\n    *(arg1 + 0x70) = 0;\n    *(arg1 + 0x58) = 0;\n    *(arg1 + 0x50) = uVar1;\n    *(arg1 + 0x10) = 2;\n    *(arg1 + 0x14) = 2;\n    return arg1;\n}\n",
        "token_count": 204
    },
    "18001ff2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18001ff24(ulong uBytes)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, uBytes);\n    if (iVar2 == 0) {\n        fcn.180015240();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "18001ff6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get thread local storage value"
        ],
        "decompiled_code": "\nulong fcn.18001ff60(uint *lpCriticalSection, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 10);\n    if ((((0 < arg2) && (arg2 < lpCriticalSection[3])) &&\n        (iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*lpCriticalSection),  iVar2 != 0)) && (arg2 < *(iVar2 + 0x10))) {\n        uVar1 = *(*(iVar2 + 0x18) + arg2 * 8);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n        return uVar1;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n    return 0;\n}\n",
        "token_count": 186
    },
    "18001ffd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18001ffd0(uint32_t *arg1)\n\n{\n    ulong uVar1;\n    \n    if ((*arg1 == 0) || (*0x180074050 == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.18001ff60(*0x180074050, *arg1);\n    }\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "18002008": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180020080(int64_t *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    \n    if (arg2 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *(arg2 + arg1[1]) = *arg1;\n    *arg1 = arg2;\n    return;\n}\n",
        "token_count": 96
    },
    "1800200a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800200a8(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    iVar4 = *arg1;\n    uVar3 = 0;\n    if (iVar4 == 0) {\n        uVar3 = 0;\n    }\n    else if (iVar4 == arg2) {\n        if (arg2 == 0) {\n            fcn.180015288();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        *arg1 = *(arg2 + arg1[1]);\ncode_r0x000180020110:\n        uVar3 = 1;\n    }\n    else {\n        if (iVar4 == 0) {\n            fcn.180015288();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        do {\n            iVar1 = arg1[1];\n            if (*(iVar1 + iVar4) == arg2) {\n                if (arg2 == 0) {\n                    fcn.180015288();\n                    pcVar2 = swi(3);\n                    uVar3 = (*pcVar2)();\n                    return uVar3;\n                }\n                *(iVar1 + iVar4) = *(iVar1 + arg2);\n                goto code_r0x000180020110;\n            }\n            iVar4 = *(iVar1 + iVar4);\n        } while (iVar4 != 0);\n    }\n    return uVar3;\n}\n",
        "token_count": 358
    },
    "18002030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.180020308(int64_t lpCriticalSection, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = arg2;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x28);\n    if ((0 < arg2) && (arg2 < *(lpCriticalSection + 0xc))) {\n        for (iVar3 = *(lpCriticalSection + 0x18); iVar3 != 0; iVar3 = *(iVar3 + 8)) {\n            if (arg2 < *(iVar3 + 0x10)) {\n                puVar2 = *(*(iVar3 + 0x18) + iVar4 * 8);\n                if (puVar2 != NULL) {\n                    (***puVar2)(puVar2, 1);\n                }\n                *(*(iVar3 + 0x18) + iVar4 * 8) = 0;\n            }\n        }\n        puVar1 = *(lpCriticalSection + 0x10) + iVar4 * 0x10;\n        *puVar1 = *puVar1 & 0xfffffffe;\n    }\n    // WARNING: Could not recover jumptable at 0x00018002039a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x28);\n    return;\n}\n",
        "token_count": 322
    },
    "18002064": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid fcn.180020648(uint *lpCriticalSection, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 10);\n    if (arg3 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*lpCriticalSection);\n        if (iVar2 != 0) {\n            fcn.180020554(lpCriticalSection, iVar2, arg2);\n        }\n    }\n    else {\n        iVar2 = *(lpCriticalSection + 6);\n        while (iVar2 != 0) {\n            iVar1 = *(iVar2 + 8);\n            fcn.180020554(lpCriticalSection, iVar2, arg2);\n            iVar2 = iVar1;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x0001800206c8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n    return;\n}\n",
        "token_count": 235
    },
    "1800207b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800207b8(int64_t **arg1)\n\n{\n    ulong uVar1;\n    \n    if (*arg1 == NULL) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(**arg1 + 0x10))();\n        *arg1 = NULL;\n    }\n    return uVar1;\n}\n",
        "token_count": 79
    },
    "1800207e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800207e0(ulong arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uchar auStack72 [32];\n    ulong uStack40;\n    ushort uStack32;\n    char cStack30;\n    uint64_t uStack24;\n    \n    uStack24 = *0x18006ed40 ^ auStack72;\n    uStack40 = str.mfcm90.dll._0_8_;\n    uStack32 = str.mfcm90.dll._8_2_;\n    cStack30 = str.mfcm90.dll[10];\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(&uStack40);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"AfxmReleaseManagedReferences\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(arg1);\n        }\n    }\n    fcn.1800349d0(uStack24 ^ auStack72);\n    return;\n}\n",
        "token_count": 231
    },
    "180020ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.180020ae8(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001e94c();\n    return *(iVar1 + 0x50) == 0;\n}\n",
        "token_count": 49
    },
    "180020b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180020b00(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001e94c();\n    LOCK();\n    *(iVar1 + 0x50) = *(iVar1 + 0x50) + 1;\n    return;\n}\n",
        "token_count": 64
    },
    "180020b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.180020b14(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001e94c();\n    return *(iVar1 + 0x54);\n}\n",
        "token_count": 45
    },
    "180020b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180020b8c(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.18001e94c();\n    LOCK();\n    piVar1 = iVar2 + 0x50;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        fcn.180020b28();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "180020c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180020c2c(int64_t arg1, ulong *arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    \n    if (arg2 == NULL) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    *arg2 = *(arg1 + 0x20);\n    piVar1 = arg1 + 0x18;\n    *piVar1 = *piVar1 + -1;\n    *(arg1 + 0x20) = arg2;\n    if (*piVar1 == 0) {\n        fcn.180020bf8(arg1);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "180020c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180020c58(int64_t arg1)\n\n{\n    int64_t *arg2;\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    \n    if (arg1 == 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        iVar3 = (*pcVar2)();\n        return iVar3;\n    }\n    arg2 = *(arg1 + 8);\n    if (arg2 == NULL) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        iVar3 = (*pcVar2)();\n        return iVar3;\n    }\n    iVar3 = *arg2;\n    iVar1 = arg2[2];\n    *(arg1 + 8) = iVar3;\n    if (iVar3 == 0) {\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        *(iVar3 + 8) = 0;\n    }\n    fcn.180020c2c(arg1, arg2);\n    return iVar1;\n}\n",
        "token_count": 239
    },
    "180020ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180020ca4(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    \n    if (arg2 == NULL) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg2 == *(arg1 + 8)) {\n        *(arg1 + 8) = *arg2;\n    }\n    else {\n        *arg2[1] = *arg2;\n    }\n    if (arg2 == *(arg1 + 0x10)) {\n        *(arg1 + 0x10) = arg2[1];\n    }\n    else {\n        *(*arg2 + 8) = arg2[1];\n    }\n    if (arg2 == NULL) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    *arg2 = *(arg1 + 0x20);\n    piVar1 = arg1 + 0x18;\n    *piVar1 = *piVar1 + -1;\n    *(arg1 + 0x20) = arg2;\n    if (*piVar1 == 0) {\n        fcn.180020bf8(arg1);\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "180020dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180020dd4(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180020d50(arg1, 0, *(arg1 + 8));\n    *(iVar1 + 0x10) = arg2;\n    if (*(arg1 + 8) == 0) {\n        *(arg1 + 0x10) = iVar1;\n    }\n    else {\n        *(*(arg1 + 8) + 8) = iVar1;\n    }\n    *(arg1 + 8) = iVar1;\n    return;\n}\n",
        "token_count": 134
    },
    "180020e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180020e18(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180020d50(arg1, *(arg1 + 0x10), 0);\n    *(iVar1 + 0x10) = arg2;\n    if (*(arg1 + 0x10) == NULL) {\n        *(arg1 + 8) = iVar1;\n    }\n    else {\n        **(arg1 + 0x10) = iVar1;\n    }\n    *(arg1 + 0x10) = iVar1;\n    return;\n}\n",
        "token_count": 135
    },
    "180020e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180020e5c(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    \n    if (arg2 == 0) {\n        fcn.180020dd4(arg1, arg3);\n    }\n    else {\n        iVar1 = fcn.180020d50(arg1, *(arg2 + 8), arg2);\n        *(iVar1 + 0x10) = arg3;\n        if (*(arg2 + 8) == NULL) {\n            *(arg1 + 8) = iVar1;\n        }\n        else {\n            **(arg2 + 8) = iVar1;\n        }\n        *(arg2 + 8) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "180020ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180020ef8(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    \n    if (arg1 == 0) {\n        iVar4 = 0;\n    }\n    else {\n        uVar2 = (*_sym.imp.OLEAUT32.dll_VariantInit)();\n        uVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, arg1, uVar2, 0, 0, 0, 0);\n        iVar4 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(0, uVar3);\n        if (iVar4 == 0) {\n            fcn.180015240();\n            pcVar1 = swi(3);\n            iVar4 = (*pcVar1)();\n            return iVar4;\n        }\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, arg1, uVar2, iVar4, uVar3, 0, 0);\n    }\n    return iVar4;\n}\n",
        "token_count": 246
    },
    "1800215d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.1800215d4(int64_t arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    \n    if (arg1 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    iVar4 = fcn.18001e94c();\n    fcn.18001fcbc(0);\n    puVar3 = *(iVar4 + 0x30);\n    while( true ) {\n        if (puVar3 == NULL) {\n            fcn.18001fd50(0);\n            return NULL;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(arg1, *puVar3);\n        if (iVar2 == 0) break;\n        puVar3 = puVar3[4];\n    }\n    fcn.18001fd50(0);\n    return puVar3;\n}\n",
        "token_count": 230
    },
    "180021db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180021db0(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    if (-1 < arg1) {\n        return;\n    }\n    if (arg1 == -0x7ff8fff2) {\n        fcn.180015240();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.1800149c4(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 114
    },
    "180021e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180021e68(int16_t *arg1, ulong noname_1, int16_t *arg3)\n\n{\n    uint32_t uVar1;\n    \n    if (arg3 == NULL) {\n        arg3 = arg1;\n    }\n    if ((arg3 != arg1) || (noname_1 != *arg1)) {\n        uVar1 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(arg1, arg3, 0, noname_1);\n        fcn.180021db0(uVar1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "180021e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180021e9c(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    \n    if (arg1 != arg2) {\n        uVar1 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)();\n        fcn.180021db0(uVar1);\n    }\n    return arg1;\n}\n",
        "token_count": 83
    },
    "180021ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180021ec0(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    \n    if (arg1 != arg2) {\n        uVar1 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)();\n        fcn.180021db0(uVar1);\n    }\n    return arg1;\n}\n",
        "token_count": 82
    },
    "18002226": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180022260(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    \n    fcn.180035830(arg1, 0, 0x18);\n    uVar1 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg1, arg2);\n    fcn.180021db0(uVar1);\n    return arg1;\n}\n",
        "token_count": 88
    },
    "18002229": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002229c(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    \n    fcn.180035830(arg1, 0, 0x18);\n    uVar1 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg1, arg2);\n    fcn.180021db0(uVar1);\n    return arg1;\n}\n",
        "token_count": 89
    },
    "1800222d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800222d8(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    \n    fcn.180035830(arg1, 0, 0x18);\n    uVar1 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg1, arg2);\n    fcn.180021db0(uVar1);\n    return arg1;\n}\n",
        "token_count": 90
    },
    "18002231": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180022314(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    *arg1 = \n    vtable.ATL::CFixedStringT_class_ATL::CStringT_wchar_t__class_StrTraitMFC_wchar_t__class_ATL::ChTraitsCRT_wchar_t_____256_.0\n    ;\n    fcn.180014bdc(arg1 + 3);\n    pcVar3 = arg1[3];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    *arg1 = vtable.ATL::CFixedStringMgr.0;\n    return;\n}\n",
        "token_count": 208
    },
    "180022ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180022ab0(ulong arg1, uchar *arg2, ulong arg3, ulong arg4)\n\n{\n    int16_t iVar1;\n    uchar *puVar2;\n    uchar auStack360 [32];\n    uchar auStack328 [272];\n    uint64_t uStack56;\n    \n    uStack56 = *0x18006ed40 ^ auStack360;\n    puVar2 = arg2;\n    if (arg2 == NULL) {\n        puVar2 = auStack328;\n        arg3._0_4_ = 0x104;\n    }\n    iVar1 = (*_sym.imp.COMDLG32.dll_GetFileTitleA)(arg1, puVar2);\n    if (iVar1 == 0) {\n        if (arg2 == NULL) {\n            (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar2);\n        }\n    }\n    else {\n        fcn.180030fec(arg1, arg2, arg3, arg4);\n    }\n    fcn.1800349d0(uStack56 ^ auStack360);\n    return;\n}\n",
        "token_count": 236
    },
    "180022b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180022b40(int64_t arg1)\n\n{\n    ulong arg2;\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(arg1 + 8) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        bVar3 = iVar1 == 0;\n    }\n    *(arg1 + 8) = 0xffffffffffffffff;\n    *(arg1 + 0x10) = 0;\n    fcn.180001370(arg1 + 0x18);\n    if (bVar3) {\n        arg2 = *(arg1 + 0x18);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.180023e80(uVar2, arg2);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "180022b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180022b9c(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    code *pcVar5;\n    int64_t iVar6;\n    \n    if (*(arg1 + 8) != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        *(arg1 + 8) = 0xffffffffffffffff;\n    }\n    piVar2 = arg1 + 0x18;\n    iVar6 = *piVar2;\n    piVar4 = *(iVar6 + -0x18);\n    if (*(iVar6 + -0x10) != 0) {\n        if (*(iVar6 + -8) < 0) {\n            if (*(iVar6 + -0xc) < 0) {\n                fcn.180001030(0x80070057);\n                pcVar5 = swi(3);\n                (*pcVar5)();\n                return;\n            }\n            *(iVar6 + -0x10) = 0;\n            **piVar2 = 0;\n            return;\n        }\n        LOCK();\n        piVar1 = iVar6 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iVar6 + -0x18) + 8))();\n        }\n        iVar6 = (**(*piVar4 + 0x18))(piVar4);\n        *piVar2 = iVar6 + 0x18;\n    }\n    return;\n}\n",
        "token_count": 360
    },
    "180022bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.180022bc8(code **arg1)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    code **ppcVar3;\n    int64_t iVar4;\n    \n    *arg1 = vtable.CFile.0;\n    piVar2 = fcn.18001549c();\n    if (piVar2 == NULL) {\n        fcn.180001030(0x80004005);\n        pcVar1 = swi(3);\n        ppcVar3 = (*pcVar1)();\n        return ppcVar3;\n    }\n    iVar4 = (**(*piVar2 + 0x18))(piVar2);\n    arg1[3] = iVar4 + 0x18;\n    arg1[1] = 0xffffffffffffffff;\n    *(arg1 + 2) = 0;\n    return arg1;\n}\n",
        "token_count": 191
    },
    "180022cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180022cd8(ulong arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    if ((1U - *(*arg2 + -8) | *(*arg2 + -0xc) - 0x104U) < 0) {\n        fcn.1800013f0(arg2, 0x104);\n    }\n    iVar1 = *arg2;\n    fcn.180035830(iVar1, 0, 0x104);\n    iVar3 = fcn.1800360d8(iVar1, 0x104, arg1, 0xffffffffffffffff);\n    if (iVar3 != 0) {\n        if (iVar3 == 0xc) {\n            fcn.180015240();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n            fcn.180015288();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if (iVar3 != 0x50) {\n            fcn.180015288();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n    }\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootA)(iVar1);\n    iVar1 = *arg2;\n    if (iVar1 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = fcn.1800359d8(iVar1, *(iVar1 + -0xc));\n        if (iVar3 < 0) goto code_r0x000180022db0;\n    }\n    if (iVar3 <= *(*arg2 + -0xc)) {\n        *(*arg2 + -0x10) = iVar3;\n        *(iVar3 + *arg2) = 0;\n        return;\n    }\ncode_r0x000180022db0:\n    fcn.180001030(0x80070057);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 483
    },
    "180022e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180022e74(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (arg1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *(arg1 + 0x14) = uVar1;\n        uVar2 = fcn.1800239e8(uVar1);\n        *(arg1 + 0x10) = uVar2;\n        if (arg2 != 0) {\n            uVar3 = fcn.180035930(arg2);\n        }\n        fcn.180001640(arg1 + 0x18, arg2, uVar3);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "180023e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180023e80(uint64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = arg1 & 0xffffffff;\n    if (arg1 != 0) {\n        uVar2 = fcn.1800239e8(arg1);\n        fcn.180023e20(uVar2, uVar3 & 0xffffffff, arg2);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "180023f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180023f6c(int64_t arg1, ulong arg2)\n\n{\n    int64_t arg2_00;\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    \n    if (*(arg1 + 0x58) < *(arg1 + 0x5c)) {\n        arg2_00 = *(arg1 + 0x40);\n        iVar2 = fcn.1800341d0(arg2, arg2_00, *(arg1 + 0x58) * arg2_00 + *(arg1 + 0x50), arg2_00);\n        if (iVar2 != 0) {\n            if (iVar2 == 0xc) {\n                fcn.180015240();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            if (iVar2 != 0x50) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n        }\n        uVar3 = 1;\n        *(arg1 + 0x58) = *(arg1 + 0x58) + 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 357
    },
    "1800241d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.1800241d4(code **arg1, code *arg2, code *arg3, ulong arg4)\n\n{\n    uint in_stack_00000028;\n    \n    fcn.18000bea4(arg1);\n    *arg1 = vtable.CEnumArray.0;\n    arg1[0xd] = vtable.CEnumArray::XEnumVOID.0;\n    arg1[9] = NULL;\n    *(arg1 + 0xb) = 0;\n    *(arg1 + 0xc) = in_stack_00000028;\n    arg1[8] = arg2;\n    arg1[10] = arg3;\n    *(arg1 + 0x5c) = arg4;\n    return arg1;\n}\n",
        "token_count": 166
    },
    "18002446": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180024468(int64_t arg1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    ulong unaff_RBX;\n    ulong in_R9;\n    \n    fcn.18000b948(*(arg1 + 0x18));\n    if ((*(arg1 + 0x48) != 0) &&\n       (iVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x1800748a0, 0, *(arg1 + 0x48), in_R9, unaff_RBX),  iVar2 == 0)) {\n        puVar1 = fcn.180036050();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.180036008(uVar3);\n        *puVar1 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "18002460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.180024604(int64_t *arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    (**(*arg1 + 0x188))(arg1, noname_1, arg3 + 0x10, arg3, 0, arg4);\n    return;\n}\n",
        "token_count": 72
    },
    "18002466": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.180024664(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    int64_t *apiStack24 [2];\n    \n    iVar1 = (*_sym.imp.OLEAUT32.dll_VariantInit)(in_stack_00000030);\n    apiStack24[0] = NULL;\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ole32.dll_CoGetClassObject)();\n        if (iVar1 < 0) {\n            return iVar1;\n        }\n        iVar1 = (**(*apiStack24[0] + 0x18))(apiStack24[0], arg2, arg4, in_stack_00000028);\n    }\n    else {\n        iVar1 = (*_sym.imp.ole32.dll_CoGetClassObject)(arg1, arg3, 0, 0x180059580, apiStack24);\n        if (iVar1 < 0) {\n            return iVar1;\n        }\n        iVar1 = (**(*apiStack24[0] + 0x38))(apiStack24[0], arg2, 0, arg4);\n    }\n    (**(*apiStack24[0] + 0x10))();\n    return iVar1;\n}\n",
        "token_count": 298
    },
    "180024af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180024af4(int64_t arg1)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t *piStackX8;\n    \n    fcn.180035830(arg1 + 0xb8, 0, 0x18);\n    puVar1 = *(arg1 + 0x80);\n    piStackX8 = NULL;\n    *(arg1 + 0xb8) = 0x18;\n    if (puVar1 == NULL) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    iVar3 = (***puVar1)(puVar1, 0x1800595b0, &piStackX8);\n    if (-1 < iVar3) {\n        (**(*piStackX8 + 0x18))(piStackX8, arg1 + 0xb8);\n        (**(*piStackX8 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "180024b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180024b74(int64_t arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    uchar auVar2 [16];\n    int32_t iVar3;\n    ulong arg1_00;\n    uint8_t *arg1_01;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar6 = 0;\n    if ((*(arg1 + 200) == 0) || (*(arg1 + 0xc0) == 0)) {\n        iVar6 = 0;\n    }\n    else {\n        auVar2 = ZEXT416(6) * ZEXT216(*(arg1 + 200));\n        arg1_00 = SUB168(auVar2, 0);\n        if (SUB168(auVar2 >> 0x40, 0) != 0) {\n            arg1_00 = 0xffffffffffffffff;\n        }\n        arg1_01 = fcn.18000b904(arg1_00);\n        iVar3 = (*_sym.imp.USER32.dll_CopyAcceleratorTableA)(*(arg1 + 0xc0), arg1_01, *(arg1 + 200));\n        puVar5 = arg1_01;\n        iVar7 = iVar6;\n        if (0 < iVar3) {\n            do {\n                if (arg2 == 0) {\n                    fcn.180015288();\n                    pcVar1 = swi(3);\n                    iVar6 = (*pcVar1)();\n                    return iVar6;\n                }\n                uVar4 = 0;\n                if (*(arg2 + 8) == 0x106) {\n                    uVar4 = 0x10;\n                }\n                if (((*puVar5 & 0xfd) == uVar4) && (*(puVar5 + 2) == *(arg2 + 0x10))) {\n                    iVar6 = 1;\n                    break;\n                }\n                iVar7 = iVar7 + 1;\n                puVar5 = puVar5 + 6;\n            } while (iVar7 < iVar3);\n        }\n        fcn.18000b948(arg1_01);\n    }\n    return iVar6;\n}\n",
        "token_count": 486
    },
    "180024d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180024d40(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t aiStackX8 [4];\n    \n    piVar1 = *(arg1 + 0x88);\n    if (piVar1 == NULL) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    aiStackX8[0] = 0;\n    iVar3 = (**(*piVar1 + 0x18))(piVar1, aiStackX8);\n    if ((-1 < iVar3) && (*(arg1 + 0x48) != aiStackX8[0])) {\n        *(arg1 + 0x48) = aiStackX8[0];\n        if (*(arg1 + 0x50) != 0) {\n            fcn.18000fa84(*(arg1 + 0x50), aiStackX8[0]);\n            *(*(arg1 + 0x50) + 0xa0) = arg1;\n        }\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "180025a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180025a7c(int64_t arg1, ulong arg2, ulong *arg3, ulong *arg4)\n\n{\n    ulong uVar1;\n    int64_t arg1_00;\n    \n    if (arg4 != NULL) {\n        *arg4 = 0;\n    }\n    arg1_00 = *(arg1 + 0xe0);\n    while( true ) {\n        if (arg1_00 == 0) {\n            return 0;\n        }\n        if (*(arg1_00 + 0xc) == arg2) break;\n        arg1_00 = *(arg1_00 + 0x20);\n    }\n    uVar1 = fcn.180025a28(arg1_00);\n    *arg3 = uVar1;\n    return 0;\n}\n",
        "token_count": 175
    },
    "180025c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180025c5c(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        (**(**arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 45
    },
    "180025ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180025cec(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        (**(**arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 43
    },
    "180025d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.180025d04(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    int32_t iStackX8;\n    int32_t iStackX12;\n    ulong uVar6;\n    uchar auStack48 [40];\n    \n    uVar6 = 0xfffffffffffffffe;\n    iStackX12 = *(arg1 + 0x68) - *(arg1 + 0x60);\n    iStackX8 = *(arg1 + 100) - *(arg1 + 0x5c);\n    fcn.180019724(auStack48, 0);\n    fcn.18001ed20(auStack48, &iStackX8);\n    piVar1 = *(arg1 + 0x80);\n    if (piVar1 == NULL) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    iVar3 = (**(*piVar1 + 0x88))(piVar1, 1, &iStackX8, in_R9, uVar6);\n    if (-1 < iVar3) {\n        iVar4 = (**(**(arg1 + 0x80) + 0x90))(*(arg1 + 0x80), 1, &iStackX8);\n        if (-1 < iVar4) {\n            fcn.18001ede0(auStack48, &iStackX8);\n            *(arg1 + 100) = iStackX8 + *(arg1 + 0x5c);\n            *(arg1 + 0x68) = *(arg1 + 0x60) + iStackX12;\n        }\n    }\n    fcn.180019788(auStack48);\n    return -1 < iVar3;\n}\n",
        "token_count": 436
    },
    "180027ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180027ad8(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ushort uVar5;\n    int64_t *piStackX8;\n    \n    if ((*(arg1 + 0xc) != -0x7ffeffff) && (piVar1 = *arg1,  piVar1 != NULL)) {\n        if (piVar1[0x10] == 0) {\n            fcn.180015288();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iVar3 = (***piVar1[0x10])(piVar1[0x10], 0x1800594e0, &piStackX8);\n        if (iVar3 < 0) {\n            iVar4 = fcn.180025a28(arg1);\n            if (iVar4 != 0) {\n                uVar5 = 0xd;\n                if (arg1[2][0x1b] != 0) {\n                    uVar5 = 0x800d;\n                }\n                (**(**arg1 + 0xe0))(*arg1, *(arg1 + 0xc), uVar5, iVar4);\n            }\n        }\n        else {\n            (**(*piStackX8 + 0x18))(piStackX8, *(arg1 + 0xc), arg1[2] != NULL, arg1 + 3);\n            (**(*piStackX8 + 0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "180027de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180027de0(ulong *arg1)\n\n{\n    fcn.18000b948(*arg1);\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 40
    },
    "180027e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180027e88(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        (**(**arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 44
    },
    "180027ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180027ea0(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        (**(**arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 44
    },
    "180027f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180027f80(int64_t arg1, uint64_t arg2, ulong *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    \n    uVar2 = 0;\n    if (arg3 != NULL) {\n        if (*(arg1 + 0x38) == '\\0') {\n            iVar4 = *(arg1 + 0x28);\n            if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar4 + 0x10)) {\n                uVar2 = arg2 - *(iVar4 + 0x10);\ncode_r0x000180027fd8:\n                puVar3 = *(iVar4 + 8 + uVar2 * 0x50) + *(arg1 + 0x10);\n                *arg3 = *puVar3;\n                arg3[1] = puVar3[1];\n                *(arg3 + 2) = *(puVar3 + 2);\n                *(arg3 + 0x12) = *(puVar3 + 0x12);\n                return 1;\n            }\n        }\n        else if (*(arg1 + 0x18) != 0) {\n            iVar4 = *(arg1 + 0x28);\n            puVar1 = iVar4 + 0x10;\n            do {\n                if (*puVar1 == arg2) goto code_r0x000180027fd8;\n                uVar2 = uVar2 + 1;\n                puVar1 = puVar1 + 10;\n            } while (uVar2 < *(arg1 + 0x18));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 380
    },
    "18002800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002800c(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    \n    uVar2 = 0;\n    if (arg3 != NULL) {\n        if (*(arg1 + 0x38) == '\\0') {\n            iVar4 = *(arg1 + 0x28);\n            if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar4 + 0x10)) {\n                uVar2 = arg2 - *(iVar4 + 0x10);\ncode_r0x000180028064:\n                puVar3 = *(iVar4 + 8 + uVar2 * 0x50) + *(arg1 + 0x10);\n                *arg3 = *puVar3;\n                *(arg3 + 1) = *(puVar3 + 1);\n                return 1;\n            }\n        }\n        else if (*(arg1 + 0x18) != 0) {\n            iVar4 = *(arg1 + 0x28);\n            puVar1 = iVar4 + 0x10;\n            do {\n                if (*puVar1 == arg2) goto code_r0x000180028064;\n                uVar2 = uVar2 + 1;\n                puVar1 = puVar1 + 10;\n            } while (uVar2 < *(arg1 + 0x18));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 344
    },
    "18002808": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180028088(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    \n    uVar2 = 0;\n    if (arg3 != NULL) {\n        if (*(arg1 + 0x38) == '\\0') {\n            iVar4 = *(arg1 + 0x28);\n            if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar4 + 0x10)) {\n                uVar2 = arg2 - *(iVar4 + 0x10);\ncode_r0x0001800280e0:\n                puVar3 = *(iVar4 + 8 + uVar2 * 0x50) + *(arg1 + 0x10);\n                *arg3 = *puVar3;\n                *(arg3 + 1) = *(puVar3 + 1);\n                return 1;\n            }\n        }\n        else if (*(arg1 + 0x18) != 0) {\n            iVar4 = *(arg1 + 0x28);\n            puVar1 = iVar4 + 0x10;\n            do {\n                if (*puVar1 == arg2) goto code_r0x0001800280e0;\n                uVar2 = uVar2 + 1;\n                puVar1 = puVar1 + 10;\n            } while (uVar2 < *(arg1 + 0x18));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 347
    },
    "18002810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180028104(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    uint *puVar6;\n    int64_t iVar7;\n    \n    uVar5 = 0;\n    if (arg3 != NULL) {\n        if (*(arg1 + 0x38) == '\\0') {\n            iVar7 = *(arg1 + 0x28);\n            if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar7 + 0x10)) {\n                uVar5 = arg2 - *(iVar7 + 0x10);\ncode_r0x000180028166:\n                puVar6 = *(iVar7 + 8 + uVar5 * 0x50) + *(arg1 + 0x10);\n                uVar1 = puVar6[1];\n                uVar2 = puVar6[2];\n                uVar3 = puVar6[3];\n                *arg3 = *puVar6;\n                arg3[1] = uVar1;\n                arg3[2] = uVar2;\n                arg3[3] = uVar3;\n                return 1;\n            }\n        }\n        else if (*(arg1 + 0x18) != 0) {\n            iVar7 = *(arg1 + 0x28);\n            puVar4 = iVar7 + 0x10;\n            do {\n                if (*puVar4 == arg2) goto code_r0x000180028166;\n                uVar5 = uVar5 + 1;\n                puVar4 = puVar4 + 10;\n            } while (uVar5 < *(arg1 + 0x18));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 410
    },
    "18002818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180028184(int64_t arg1, uint64_t arg2, ushort *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0001800281e0:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0001800281e0;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 304
    },
    "1800281f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800281fc(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x000180028258:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x000180028258;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "18002827": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180028274(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0001800282d0:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0001800282d0;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 304
    },
    "1800282e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800282ec(int64_t arg1, uint64_t arg2, ulong *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x000180028348:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x000180028348;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "18002836": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180028364(int64_t arg1, uint64_t arg2, ulong *arg3)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    uVar3 = 0;\n    if (arg3 != NULL) {\n        if (*(arg1 + 0x38) == '\\0') {\n            iVar2 = *(arg1 + 0x28);\n            if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar2 + 0x10)) {\n                uVar3 = arg2 - *(iVar2 + 0x10);\ncode_r0x0001800283d3:\n                *arg3 = *(*(iVar2 + 8 + uVar3 * 0x50) + *(arg1 + 0x10));\n                return 1;\n            }\n        }\n        else if (*(arg1 + 0x18) != 0) {\n            iVar2 = *(arg1 + 0x28);\n            puVar1 = iVar2 + 0x10;\n            do {\n                if (*puVar1 == arg2) goto code_r0x0001800283d3;\n                uVar3 = uVar3 + 1;\n                puVar1 = puVar1 + 10;\n            } while (uVar3 < *(arg1 + 0x18));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 314
    },
    "1800283f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800283f0(int64_t arg1, uint64_t arg2, ulong *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x00018002844c:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x00018002844c;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 304
    },
    "18002846": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180028468(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint64_t *puVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    uVar6 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar7 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar7 + 0x10)) {\n            uVar6 = arg2 - *(iVar7 + 0x10);\ncode_r0x0001800284c4:\n            uVar2 = arg3[1];\n            uVar3 = arg3[2];\n            uVar4 = arg3[3];\n            puVar1 = *(iVar7 + 8 + uVar6 * 0x50) + *(arg1 + 0x10);\n            *puVar1 = *arg3;\n            puVar1[1] = uVar2;\n            puVar1[2] = uVar3;\n            puVar1[3] = uVar4;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar7 = *(arg1 + 0x28);\n        puVar5 = iVar7 + 0x10;\n        do {\n            if (*puVar5 == arg2) goto code_r0x0001800284c4;\n            uVar6 = uVar6 + 1;\n            puVar5 = puVar5 + 10;\n        } while (uVar6 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 403
    },
    "1800284e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800284e4(int64_t arg1, uint64_t arg2, uchar *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x000180028540:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x000180028540;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 302
    },
    "18002855": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002855c(int64_t arg1, uint64_t arg2, uchar *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0001800285b8:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0001800285b8;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 305
    },
    "1800285d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800285d4(int64_t arg1, uint64_t arg2, ushort *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x000180028630:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x000180028630;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 302
    },
    "18002864": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002864c(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0001800286a8:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0001800286a8;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 305
    },
    "1800288e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800288e0(int64_t arg1)\n\n{\n    int64_t arg1_00;\n    ulong uVar1;\n    ulong uStack56;\n    uint uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    \n    if (*(arg1 + 0x90) == 0) {\n        if (*(arg1 + 0x70) != 0) {\n            uStack40 = *(arg1 + 0x80);\n            uStack32 = 0;\n            uStack24 = 0;\n            uStack48 = 0;\n            uStack56 = 1;\n            uVar1 = (**(**(arg1 + 0x10) + 0x40))(*(arg1 + 0x10), 1, 0x180059bb0, 0, &uStack56);\n            return uVar1;\n        }\n    }\n    else {\n        arg1_00 = *(arg1 + 0xa0);\n        if ((arg1_00 != 0) && (*(arg1_00 + 0x18) != 0)) {\n            uVar1 = fcn.180027dfc(arg1_00);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 280
    },
    "18002896": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180028968(int64_t arg1, int64_t arg2)\n\n{\n    if (*(arg1 + 0x10) != arg2) {\n        *(arg1 + 0x10) = arg2;\n        fcn.180027ad8(arg1);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "18002911": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002911c(ulong noname_0, int64_t **pvargDest, ulong *arg3)\n\n{\n    int64_t *apiStackX16 [3];\n    \n    if (pvargDest == NULL) {\n        return;\n    }\n    if ((noname_0 & 0x2000) == 0) {\n        if (noname_0 == 8) {\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*pvargDest);\n        }\n        else {\n            if (noname_0 != 9) {\n                if (noname_0 == 0xc) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(pvargDest);\n                    goto code_r0x0001800291e4;\n                }\n                if (noname_0 != 0xd) {\n                    if ((((noname_0 == 0x88) && (apiStackX16[0] = NULL,  arg3 != NULL)) &&\n                        ((***arg3)(arg3, 0x180055d40, apiStackX16),  apiStackX16[0] != NULL)) &&\n                       ((**(*apiStackX16[0] + 0x20))(apiStackX16[0], *pvargDest, 0),  apiStackX16[0] != NULL)) {\n                        (**(*apiStackX16[0] + 0x10))();\n                    }\n                    goto code_r0x0001800291e4;\n                }\n            }\n            if (*pvargDest == NULL) goto code_r0x0001800291e4;\n            (**(**pvargDest + 0x10))();\n        }\n    }\n    else {\n        if (*pvargDest == NULL) goto code_r0x0001800291e4;\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetDim)();\n    }\n    *pvargDest = NULL;\ncode_r0x0001800291e4:\n    if (((noname_0 & 0x1000) != 0) && ((noname_0 & 0x4000) != 0xffffffff)) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(pvargDest[1]);\n    }\n    return;\n}\n",
        "token_count": 493
    },
    "1800295a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.1800295ac(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    \n    iVar4 = 0;\n    uVar5 = 0;\n    uVar1 = *(*(arg1 + 0x10) + 8);\n    if (uVar1 != 0) {\n        iVar6 = 0;\n        do {\n            piVar2 = *(arg1 + 8);\n            if (piVar2 == NULL) {\n                iVar4 = -0x7fffbffe;\n            }\n            else {\n                piVar3 = *(arg1 + 0x10);\n                if (uVar5 < *(piVar3 + 1)) {\n                    uVar7 = *(iVar6 + *piVar3);\n                }\n                else {\n                    uVar7 = 0;\n                }\n                iVar4 = (**(*piVar2 + 0x20))(piVar2, *(arg1 + 0x18), uVar7, piVar3[2]);\n            }\n            if (iVar4 < 0) {\n                return iVar4;\n            }\n            uVar5 = uVar5 + 1;\n            iVar6 = iVar6 + 0x10;\n        } while (uVar5 < uVar1);\n    }\n    return iVar4;\n}\n",
        "token_count": 327
    },
    "18002d3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d3f8(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    \n    uVar6 = 0;\n    if (arg2 < 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    if (arg2 == 0) {\n        if (*(arg1 + 8) != 0) {\n            uVar9 = uVar6;\n            if (0 < *(arg1 + 0x10)) {\n                do {\n                    if (*(uVar6 + 0x10 + *(arg1 + 8)) != 0) {\n                        fcn.18000b948(*(uVar6 + *(arg1 + 8)));\n                    }\n                    uVar8 = uVar9 + 1;\n                    uVar6 = uVar6 + 0x18;\n                    uVar9 = uVar8;\n                } while (uVar8 < *(arg1 + 0x10));\n            }\n            fcn.18000b948(*(arg1 + 8));\n            *(arg1 + 8) = 0;\n        }\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n        return;\n    }\n    if (*(arg1 + 8) == 0) {\n        iVar4 = *(arg1 + 0x20);\n        if (*(arg1 + 0x20) < arg2) {\n            iVar4 = arg2;\n        }\n        arg1_00 = fcn.18000b904(iVar4 * 0x18);\n        *(arg1 + 8) = arg1_00;\n        fcn.180035830(arg1_00, 0, iVar4 * 0x18);\n        uVar9 = uVar6;\n        if (0 < arg2) {\n            do {\n                puVar1 = uVar6 + *(arg1 + 8);\n                if (puVar1 != NULL) {\n                    *puVar1 = 0;\n                    puVar1[1] = 0;\n                }\n                uVar8 = uVar9 + 1;\n                uVar6 = uVar6 + 0x18;\n                uVar9 = uVar8;\n            } while (uVar8 < arg2);\n        }\n    }\n    else {\n        iVar7 = *(arg1 + 0x18);\n        if (arg2 <= iVar7) {\n            iVar7 = *(arg1 + 0x10);\n            if (iVar7 < arg2) {\n                fcn.180035830(*(arg1 + 8) + iVar7 * 0x18, 0, (arg2 - iVar7) * 0x18);\n                uVar9 = uVar6;\n                if (0 < arg2 - *(arg1 + 0x10)) {\n                    do {\n                        puVar1 = *(arg1 + 8) + (uVar6 + *(arg1 + 0x10)) * 0x18;\n                        if (puVar1 != NULL) {\n                            *puVar1 = 0;\n                            puVar1[1] = 0;\n                        }\n                        uVar8 = uVar9 + 1;\n                        uVar9 = uVar8;\n                        uVar6 = uVar6 + 1;\n                    } while (uVar8 < arg2 - *(arg1 + 0x10));\n                }\n            }\n            else if ((arg2 < iVar7) && (0 < iVar7 - arg2)) {\n                iVar7 = arg2 * 0x18;\n                do {\n                    if (*(iVar7 + 0x10 + *(arg1 + 8)) != 0) {\n                        fcn.18000b948(*(iVar7 + *(arg1 + 8)));\n                    }\n                    uVar8 = uVar6 + 1;\n                    uVar6 = uVar8;\n                    iVar7 = iVar7 + 0x18;\n                } while (uVar8 < *(arg1 + 0x10) - arg2);\n            }\n            goto code_r0x00018002d6d7;\n        }\n        iVar5 = *(arg1 + 0x20);\n        if (iVar5 == 0) {\n            iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n            iVar5 = iVar4;\n            if (0x400 < iVar4) {\n                iVar5 = 0x400;\n            }\n            if (iVar4 < 4) {\n                iVar5 = 4;\n            }\n        }\n        iVar4 = arg2;\n        if (arg2 < iVar5 + iVar7) {\n            iVar4 = iVar5 + iVar7;\n        }\n        if (iVar4 < iVar7) {\n            fcn.180015288();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iVar7 = fcn.18000b904(iVar4 * 0x18);\n        iVar3 = fcn.1800341d0(iVar7, iVar4 * 0x18, *(arg1 + 8), *(arg1 + 0x10) * 0x18);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.180015240();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.180035830(iVar7 + *(arg1 + 0x10) * 0x18, 0, (arg2 - *(arg1 + 0x10)) * 0x18);\n        uVar9 = uVar6;\n        if (0 < arg2 - *(arg1 + 0x10)) {\n            do {\n                puVar1 = iVar7 + (uVar6 + *(arg1 + 0x10)) * 0x18;\n                if (puVar1 != NULL) {\n                    *puVar1 = 0;\n                    puVar1[1] = 0;\n                }\n                uVar8 = uVar9 + 1;\n                uVar9 = uVar8;\n                uVar6 = uVar6 + 1;\n            } while (uVar8 < arg2 - *(arg1 + 0x10));\n        }\n        fcn.18000b948(*(arg1 + 8));\n        *(arg1 + 8) = iVar7;\n    }\n    *(arg1 + 0x18) = iVar4;\ncode_r0x00018002d6d7:\n    *(arg1 + 0x10) = arg2;\n    return;\n}\n",
        "token_count": 1668
    },
    "18002d6f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d6f4(ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    fcn.18002d398(arg1);\n    *arg1 = arg2;\n    *(arg1 + 1) = arg3;\n    return;\n}\n",
        "token_count": 61
    },
    "18002d96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002d96c(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    int16_t *piVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    \n    iVar4 = *(arg1 + 0x10);\n    uVar5 = 0;\n    uVar6 = uVar5;\n    uVar8 = uVar5;\n    if (0 < iVar4) {\n        do {\n            if ((uVar5 < 0) || (iVar4 <= uVar6)) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            puVar1 = *(*(arg1 + 8) + uVar5);\n            if ((puVar1 == NULL) || (piVar2 = *(*(arg1 + 8) + 8 + uVar5),  piVar2 == NULL)) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            uVar7 = uVar8 + 1;\n            *puVar1 = *piVar2 != 0;\n            iVar4 = *(arg1 + 0x10);\n            uVar5 = uVar5 + 0x18;\n            uVar6 = uVar6 + 1;\n            uVar8 = uVar7;\n        } while (uVar7 < iVar4);\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "18002e51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002e51c(int64_t arg1)\n\n{\n    int32_t iVar1;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    int64_t iStackX32;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    ulong auStack24 [2];\n    \n    auStack24[0] = 0;\n    iStackX24 = 0;\n    iStackX32 = 0;\n    piVar2 = &iStackX24;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0xffffffff80000001, \"software\", 0, 0x2001f, piVar2);\n    if (iVar1 == 0) {\n        uVar3 = piVar2 & 0xffffffff00000000;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (iStackX24, *(arg1 + 0xa8), 0, 0, uVar3, 0x2001f, 0, &iStackX32, auStackX16);\n        if (iVar1 == 0) {\n            (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                      (iStackX32, *(arg1 + 0xd0), 0, 0, uVar3 & 0xffffffff00000000, 0x2001f, 0, auStack24, auStackX16);\n        }\n    }\n    if (iStackX24 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\n    if (iStackX32 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\n    return auStack24[0];\n}\n",
        "token_count": 398
    },
    "18002e62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18002e620(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [8];\n    int64_t iStackX32;\n    \n    iStackX32 = 0;\n    iVar1 = fcn.18002e51c(arg1);\n    if (iVar1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, arg2, 0, 0, 0, 0x2001f, 0, &iStackX32, auStackX24);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        iVar1 = iStackX32;\n    }\n    return iVar1;\n}\n",
        "token_count": 167
    },
    "18002e69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002e694(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    uchar auStack120 [32];\n    uint *puStack88;\n    uint uStack80;\n    uint auStack72 [2];\n    uchar auStack64 [16];\n    uint64_t uStack48;\n    \n    uStack48 = *0x18006ed40 ^ auStack120;\n    auStack72[0] = arg4;\n    if (*(arg1 + 0xa8) == 0) {\n        fcn.180035fc0(auStack64, 0x10, 0x180050768, arg4);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(arg2, arg3, auStack64, *(arg1 + 0xd0));\n    }\n    else {\n        iVar1 = fcn.18002e620(arg1, arg2);\n        if (iVar1 != 0) {\n            puStack88 = auStack72;\n            uStack80 = 4;\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, arg3, 0);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.1800349d0(uStack48 ^ auStack120);\n    return;\n}\n",
        "token_count": 302
    },
    "18002e75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002e754(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    for (iVar2 = (*_sym.imp.USER32.dll_GetCapture)(); iVar2 != 0; iVar2 = fcn.18001147c(iVar2)) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    for (iVar2 = (*_sym.imp.USER32.dll_GetFocus)(); iVar2 != 0; iVar2 = fcn.18001147c(iVar2)) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    iVar2 = fcn.1800114f4(arg1);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(iVar2 + 0x40));\n        while( true ) {\n            if (iVar2 == 0) {\n                (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x40), 0x111, 0xe147, 0);\n                return;\n            }\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x365, 0, 0);\n            if (iVar3 != 0) break;\n            iVar2 = fcn.18001147c(iVar2);\n        }\n        return;\n    }\n    fcn.180015288();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 401
    },
    "18002e83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002e834(int64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    if (*(arg1 + 0xc0) == 0) {\n        fcn.18002e754(arg1);\n    }\n    else if (*(arg1 + 0xc0) != 0x3f107) {\n        iVar1 = fcn.18001e94c();\n        (**(**(iVar1 + 8) + 0x158))(*(iVar1 + 8), *(arg1 + 0xc0), 1);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "18002e89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.18002e89c(int64_t arg1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = arg1 + 0x1a;\n    if (*(arg1 + 2) != -1) {\n        piVar2 = arg1 + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return piVar2;\n}\n",
        "token_count": 249
    },
    "18002edc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.18002edc0(ulong *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    \n    if (arg2 == 0) {\n        *arg1 = 0;\n        *(arg1 + 1) = 0;\n        *(arg1 + 0xc) = 0;\n    }\n    else {\n        uVar2 = fcn.18002e8f4(arg2);\n        iVar3 = fcn.18002ea00(arg1, arg2, uVar2);\n        if (iVar3 == 0) {\n            fcn.180015240();\n            pcVar1 = swi(3);\n            puVar4 = (*pcVar1)();\n            return puVar4;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 194
    },
    "18002ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002ee0c(uint32_t *arg1, int64_t *arg2, ushort *arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    ulong uVar6;\n    int16_t iVar7;\n    \n    iVar7 = -1;\n    if (*(arg1 + 2) == -1) {\n        uVar3 = arg1[3];\n    }\n    else {\n        uVar3 = *arg1;\n    }\n    if ((uVar3 & 0x40) == 0) {\n        uVar6 = 0;\n    }\n    else {\n        puVar5 = fcn.18002e89c(arg1);\n        *arg3 = *puVar5;\n        iVar4 = 1;\n        if (*(arg1 + 2) == iVar7) {\n            iVar4 = 3;\n        }\n        if ((1U - *(*arg2 + -8) | *(*arg2 + -0xc) - 0x20U) < 0) {\n            fcn.1800013f0(arg2, 0x20);\n        }\n        iVar1 = *arg2;\n        if (*(iVar1 + -0xc) < 0x20) {\n            fcn.180001030(0x80070057);\n            pcVar2 = swi(3);\n            uVar6 = (*pcVar2)();\n            return uVar6;\n        }\n        *(iVar1 + -0x10) = 0x20;\n        *(*arg2 + 0x20) = 0;\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar5 + iVar4 * 2, 0xffffffff, iVar1, 0x20, 0, 0);\n        iVar1 = *arg2;\n        if (iVar1 == 0) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = fcn.1800359d8(iVar1, *(iVar1 + -0xc));\n            if (iVar4 < 0) goto code_r0x00018002ef0f;\n        }\n        if (*(*arg2 + -0xc) < iVar4) {\ncode_r0x00018002ef0f:\n            fcn.180001030(0x80070057);\n            pcVar2 = swi(3);\n            uVar6 = (*pcVar2)();\n            return uVar6;\n        }\n        *(*arg2 + -0x10) = iVar4;\n        *(iVar4 + *arg2) = 0;\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 602
    },
    "18002ef1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18002ef1c(int64_t *arg1, ulong arg2, int32_t *arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    uint64_t uVar4;\n    \n    if (arg3 == NULL) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    puVar3 = (**(*arg1 + 0x78))();\n    do {\n        if (puVar3 == NULL) {\n            return 0;\n        }\n        iVar2 = puVar3[1];\n        uVar4 = *(iVar2 + 0x30);\n        if (uVar4 != 0xffffffffffffffff) {\n            do {\n                if ((*(iVar2 + 8) == arg3[1]) && (uVar4 == (*arg3 != 0))) {\n                    if (*(iVar2 + 0x44) == -1) {\n                        if (*(iVar2 + 0x40) == -1) {\n                            return iVar2;\n                        }\n                        if (*(iVar2 + 0x40) == arg2) {\n                            return iVar2;\n                        }\n                    }\n                    else if ((*(iVar2 + 0x40) < arg2 || *(iVar2 + 0x40) == arg2) &&\n                            (arg2 < *(iVar2 + 0x44) || arg2 == *(iVar2 + 0x44))) {\n                        return iVar2;\n                    }\n                }\n                uVar4 = *(iVar2 + 0x78);\n                iVar2 = iVar2 + 0x48;\n            } while (uVar4 != 0xffffffffffffffff);\n        }\n        puVar3 = *puVar3;\n    } while( true );\n}\n",
        "token_count": 404
    },
    "18002f2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002f2d8(ulong *arg1, int64_t arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    \n    if ((arg2 != 0) && (arg3 != 0)) {\n        puVar2 = fcn.18000b904(arg2 * arg3 + 8);\n        *puVar2 = *arg1;\n        *arg1 = puVar2;\n        return;\n    }\n    fcn.180015288();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 136
    },
    "18002f33": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002f330(int64_t hWnd, int64_t lParam)\n\n{\n    ulong uVar1;\n    \n    uVar1 = 0;\n    if (hWnd == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (lParam != 0) {\n            uVar1 = *(lParam + 0x10);\n        }\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x87, uVar1, lParam);\n    }\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "18002f36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18002f360(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    \n    if (arg1 != NULL) {\n        piVar1 = arg1[1];\n        if (piVar1 == NULL) {\n            iVar4 = *arg1;\n        }\n        else {\n            iVar4 = piVar1[9];\n        }\n        if (iVar4 == 0) {\n            if ((piVar1 == NULL) || (uVar3 = (**(*piVar1 + 0xf0))(piVar1),  (uVar3 >> 0x1b & 1) == 0))\n            goto code_r0x00018002f3b2;\n        }\n        else {\n            iVar2 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n            if (iVar2 != 0) {\ncode_r0x00018002f3b2:\n                if (arg1[1] == 0) {\n                    return 0;\n                }\n                if ((*(arg1[1] + 0xb0) >> 0xd & 1) == 0) {\n                    return 0;\n                }\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 290
    },
    "18002f3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.18002f3d8(int64_t hWnd)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    \n    if (hWnd == 0) {\n        uVar2 = 0;\n    }\n    else if (*(hWnd + 0xa0) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x87, 0, 0);\n        uVar2 = uVar1 & 0x30;\n    }\n    else {\n        uVar2 = fcn.180024764(*(hWnd + 0xa0));\n    }\n    return uVar2;\n}\n",
        "token_count": 157
    },
    "18002f41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002f418(int64_t hWnd, ulong noname_1, ulong noname_2, ulong lParam)\n\n{\n    ulong arg1;\n    uint64_t uVar1;\n    \n    uVar1 = 0;\n    if (hWnd != 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x87, 0, 0);\n    }\n    if ((uVar1 & 8) != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0xb1, 0, 0xffffffffffffffff);\n    }\n    if (*(hWnd + 0xa0) == 0) {\n        arg1 = (*_sym.imp.USER32.dll_SetFocus)(*(hWnd + 0x40));\n        fcn.18000fa14(arg1);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x160))();\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "18002f46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18002f464(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = iVar2;\n    if (arg2 != 0) {\n        do {\n            iVar2 = arg2;\n            uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(iVar2 + 0x40), 0xfffffff0);\n            if ((uVar1 & 0xc0000000) != 0x40000000) {\n                return iVar3;\n            }\n            if (iVar2 == arg1) {\n                return iVar3;\n            }\n            arg1_00 = (*_sym.imp.USER32.dll_GetParent)(*(iVar2 + 0x40));\n            arg2 = fcn.18000fa14(arg1_00);\n            uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg2 + 0x40), 0xffffffec);\n            iVar3 = iVar2;\n        } while ((uVar1 >> 0x10 & 1) == 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 274
    },
    "18002f5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002f5e8(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    \n    if (arg1 != 0) {\n        piVar5 = NULL;\n        iVar4 = arg1;\n        do {\n            iVar1 = *(iVar4 + 0x98);\n            if ((iVar1 != 0) || (piVar5 = *(iVar4 + 0xa0),  piVar5 != NULL)) break;\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(iVar4 + 0x40));\n            iVar4 = fcn.18000fa14(uVar3);\n        } while (iVar4 != 0);\n        if ((iVar4 != 0) && (iVar1 == 0)) {\n            (**(*piVar5 + 0x160))(piVar5);\n            uVar3 = (*_sym.imp.USER32.dll_GetFocus)();\n            iVar4 = fcn.18000fa14(uVar3);\n            if ((iVar4 != arg1) && (iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(arg1 + 0x40)),  iVar2 != 0)) {\n                fcn.180013ee8(arg1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "18002f68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002f688(int64_t hWnd, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong arg1;\n    int64_t iVar4;\n    \n    if (((hWnd != 0) && (iVar3 = (*_sym.imp.USER32.dll_IsWindow)(*(hWnd + 0x40)),  iVar3 != 0)) && (hWnd != arg2)) {\n        do {\n            piVar1 = *(hWnd + 0x98);\n            if (piVar1 != NULL) {\n                iVar2 = piVar1[0x19];\n                iVar4 = 0;\n                if (((iVar2 != 0) && (*(iVar2 + 0xb4) == 0)) && (iVar4 = fcn.18000fa14(*(iVar2 + 0x48)),  iVar4 == 0)) {\n                    return;\n                }\n                if ((arg2 != 0) && (iVar4 != 0)) {\n                    if (arg2 == iVar4) {\n                        return;\n                    }\n                    iVar3 = (*_sym.imp.USER32.dll_IsChild)(*(iVar4 + 0x40), *(arg2 + 0x40));\n                    if (iVar3 != 0) {\n                        return;\n                    }\n                }\n                (**(*piVar1 + 0xc0))(piVar1, 0);\n                return;\n            }\n            arg1 = (*_sym.imp.USER32.dll_GetParent)(*(hWnd + 0x40));\n            hWnd = fcn.18000fa14(arg1);\n        } while (hWnd != 0);\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "18002f74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18002f748(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    iVar2 = fcn.180013c24(arg1, arg2);\n    if (iVar2 == 0) {\n        iVar3 = fcn.18002f4e0(arg1, 0, 1);\n        iVar2 = iVar3;\n        if (iVar3 != arg1) {\n            do {\n                iVar1 = fcn.180013de0(iVar2);\n                if (iVar1 == arg2) {\n                    return iVar2;\n                }\n                iVar2 = fcn.18002f4e0(arg1, iVar2, 1);\n            } while ((iVar2 != 0) && (iVar2 != iVar3));\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 202
    },
    "18002f7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002f7cc(int64_t arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    \n    if (*(arg1 + 0xa0) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x40), 0x87, 0, 0);\n        if ((uVar1 & (-(arg2 != 0) & 0x10U) + 0x10) != 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x40), 0xf4, arg2 != 0, 1);\n        }\n    }\n    else {\n        fcn.180024784(*(arg1 + 0xa0), arg2);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "18002f84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002f848(ulong arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    \n    if ((arg2 == 0) || (uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg2 + 0x40)),  (uVar1 >> 0x10 & 1) != 0)) {\n        iVar2 = fcn.18002f4e0(arg1, 0, 3);\n    }\n    else {\n        iVar2 = fcn.18002f464(arg1, arg2);\n    }\n    arg1_00 = iVar2;\n    if (iVar2 != 0) {\n        do {\n            fcn.18002f7cc(arg1_00, 0);\n            arg1_00 = fcn.18002f4e0(arg1, arg1_00, 0);\n            if (arg1_00 == 0) {\n                return;\n            }\n        } while (arg1_00 != iVar2);\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "18002f91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18002f910(int64_t hWndParent, int64_t arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    \n    uVar2 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_IsChild)(*(hWndParent + 0x40));\n    if (iVar1 == 0) {\n        return;\n    }\n    if (arg3 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg3 + 0x40));\n        if ((uVar2 >> 0x10 & 1) != 0) {\n            return;\n        }\n        uVar2 = fcn.18002f3d8(arg3);\n    }\n    if (arg2 == arg3) {\n        if ((uVar2 & 0x20) == 0) {\n            return;\n        }\n        if (arg2 == 0) goto code_r0x00018002fa16;\n        uVar3 = fcn.18002f8d4(hWndParent);\n        iVar4 = fcn.18002f748(hWndParent, uVar3);\n        if (((iVar4 == 0) || (iVar4 == arg3)) || (uVar3 = fcn.18002f3d8(iVar4),  (uVar3 & 0x10) == 0))\n        goto code_r0x00018002fa16;\ncode_r0x00018002f9db:\n        fcn.18002f848(hWndParent, iVar4);\n    }\n    else {\n        iVar4 = arg3;\n        if (((arg2 != 0) && (iVar1 = fcn.18002f3d8(arg2),  iVar1 != 0)) || ((arg3 != 0 && (uVar2 != 0))))\n        goto code_r0x00018002f9db;\n    }\n    if ((uVar2 & 0x30) == 0) {\n        uVar2 = fcn.18002f8d4(hWndParent);\n        arg3 = fcn.18002f748(hWndParent, uVar2);\n        uVar2 = fcn.18002f3d8(arg3);\n        if ((uVar2 & 0x20) == 0) {\n            return;\n        }\n        iVar1 = fcn.180013e88(arg3);\n        if (iVar1 == 0) {\n            return;\n        }\n    }\ncode_r0x00018002fa16:\n    fcn.18002f7cc(arg3, 1);\n    return;\n}\n",
        "token_count": 588
    },
    "18002fa3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.18002fa38(ulong arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    \n    iVar2 = fcn.18000d970(arg1);\n    if (iVar2 == 0) {\ncode_r0x00018002fa84:\n        piVar3 = NULL;\n    }\n    else {\n        puVar4 = *(iVar2 + 0x88);\n        do {\n            if (puVar4 == NULL) goto code_r0x00018002fa84;\n            if (puVar4 == NULL) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                piVar3 = (*pcVar1)();\n                return piVar3;\n            }\n            piVar3 = puVar4[2];\n            puVar4 = *puVar4;\n        } while (((piVar3[1] == 0) || (*(piVar3[1] + 0x48) != *(arg2 + 0x40))) && (*piVar3 != *(arg2 + 0x40)));\n    }\n    return piVar3;\n}\n",
        "token_count": 267
    },
    "18002fa9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.18002fa98(int64_t arg1, int64_t *arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    ulong arg2_00;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t **ppiVar8;\n    int64_t **ppiVar9;\n    int32_t iVar10;\n    \n    if (arg1 == 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        piVar5 = (*pcVar2)();\n        return piVar5;\n    }\n    iVar3 = 0;\n    piVar5 = arg2;\n    iVar10 = 0;\n    if (arg2 != NULL) {\n        if (arg2[1] == 0) {\n            iVar6 = *arg2;\n        }\n        else {\n            iVar6 = *(arg2[1] + 0x48);\n        }\n        iVar10 = iVar3;\n        if (iVar6 != 0) {\n            arg2_00 = fcn.18000fa14(iVar6);\n            iVar6 = fcn.18002f464(arg1, arg2_00);\n            if (iVar6 != 0) {\n                piVar5 = fcn.18002fa38(arg1, iVar6);\n            }\n        }\n    }\n    while (((piVar5 = fcn.1800148dc(arg1, piVar5),  piVar5 != NULL && (iVar10 = iVar10 + 1,  piVar5 != arg2)) &&\n           (iVar10 < 0x3d))) {\n        if ((piVar5[1] != 0) && (iVar3 = fcn.180024b74(piVar5[1], arg3),  iVar3 != 0)) {\n            return piVar5;\n        }\n    }\n    iVar6 = fcn.18000d970(arg1);\n    if (iVar6 != 0) {\n        ppiVar8 = *(iVar6 + 0x88);\n        if (arg2 == NULL) {\n            if (ppiVar8 == NULL) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                piVar5 = (*pcVar2)();\n                return piVar5;\n            }\n            piVar5 = ppiVar8[2];\n            ppiVar9 = *ppiVar8;\n            arg2 = piVar5;\n        }\n        else {\n            piVar5 = NULL;\n            if (ppiVar8 == NULL) {\n                return NULL;\n            }\n            do {\n                ppiVar9 = ppiVar8;\n                if (piVar5 == arg2) break;\n                if (ppiVar8 == NULL) {\n                    fcn.180015288();\n                    pcVar2 = swi(3);\n                    piVar5 = (*pcVar2)();\n                    return piVar5;\n                }\n                ppiVar9 = *ppiVar8;\n                piVar5 = ppiVar8[2];\n                ppiVar8 = ppiVar9;\n            } while (ppiVar9 != NULL);\n        }\n        if ((ppiVar9 != NULL) && (piVar1 = arg2,  piVar5 != NULL)) {\n            while (piVar1 != NULL) {\n                if (ppiVar9 == NULL) {\n                    ppiVar9 = *(iVar6 + 0x88);\n                }\n                if (ppiVar9 == NULL) {\n                    fcn.180015288();\n                    pcVar2 = swi(3);\n                    piVar5 = (*pcVar2)();\n                    return piVar5;\n                }\n                piVar5 = ppiVar9[2];\n                ppiVar9 = *ppiVar9;\n                if ((piVar5[1] != 0) && (iVar10 = fcn.180024b74(piVar5[1], arg3),  iVar10 != 0)) {\n                    piVar1 = piVar5[1];\n                    if (piVar1 == NULL) {\n                        iVar7 = *piVar5;\n                    }\n                    else {\n                        iVar7 = piVar1[9];\n                    }\n                    if (iVar7 == 0) {\n                        if (piVar1 == NULL) {\n                            fcn.180015288();\n                            pcVar2 = swi(3);\n                            piVar5 = (*pcVar2)();\n                            return piVar5;\n                        }\n                        uVar4 = (**(*piVar1 + 0xf0))(piVar1);\n                        if ((uVar4 >> 0x1b & 1) == 0) {\n                            return piVar5;\n                        }\n                    }\n                    else {\n                        iVar10 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n                        if (iVar10 != 0) {\n                            return piVar5;\n                        }\n                    }\n                }\n                piVar1 = piVar5 - arg2;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 1098
    },
    "18003572": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180035724(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    uint64_t uVar4;\n    \n    if (arg1 < 0xffffffffffffffe1) {\n        uVar4 = 1;\n        if (arg1 != 0) {\n            uVar4 = arg1;\n        }\n        do {\n            if (*0x1800748a0 == 0) {\n                fcn.18003f928();\n                fcn.18003f700(0x1e);\n                fcn.180038590(0xff);\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x1800748a0, 0, uVar4);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (*0x180074bd0 == 0) {\n                puVar3 = fcn.180036050();\n                *puVar3 = 0xc;\n                break;\n            }\n            iVar1 = fcn.18003f974(arg1);\n        } while (iVar1 != 0);\n        puVar3 = fcn.180036050();\n        *puVar3 = 0xc;\n    }\n    else {\n        fcn.18003f974(arg1);\n        puVar3 = fcn.180036050();\n        *puVar3 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 331
    },
    "18003647": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.180036470(int64_t arg1, uint64_t arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    \n    if (arg1 == 0) {\n        iVar4 = fcn.180035724(arg2);\n    }\n    else {\n        if (arg2 == 0) {\n            fcn.1800357dc(arg1);\n        }\n        else {\n            if (arg2 < 0xffffffffffffffe1) {\n                do {\n                    if (arg2 == 0) {\n                        arg2 = 1;\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x1800748a0, 0, arg1, arg2);\n                    if (iVar4 != 0) {\n                        return iVar4;\n                    }\n                    if (*0x180074bd0 == 0) {\n                        puVar5 = fcn.180036050();\n                        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        uVar3 = fcn.180036008(uVar2);\n                        *puVar5 = uVar3;\n                        return 0;\n                    }\n                    iVar1 = fcn.18003f974(arg2);\n                    if (iVar1 == 0) {\n                        puVar5 = fcn.180036050();\n                        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        uVar3 = fcn.180036008(uVar2);\n                        *puVar5 = uVar3;\n                        goto code_r0x0001800364fc;\n                    }\n                } while (arg2 < 0xffffffffffffffe1);\n            }\n            fcn.18003f974(arg2);\n            puVar5 = fcn.180036050();\n            *puVar5 = 0xc;\n        }\ncode_r0x0001800364fc:\n        iVar4 = 0;\n    }\n    return iVar4;\n}\n",
        "token_count": 441
    },
    "180030c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180030c80(int64_t arg1)\n\n{\n    fcn.18002f310(*(arg1 + 8));\n    *(arg1 + 8) = 0;\n    *(arg1 + 0x10) = 0;\n    return;\n}\n",
        "token_count": 61
    },
    "180030d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180030d10(int64_t arg1, uint64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t arg1_01;\n    \n    if (arg2 < 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    iVar5 = *(arg1 + 8);\n    if (arg2 == 0) {\n        fcn.18000b948(iVar5);\n        *(arg1 + 8) = 0;\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        if (iVar5 == 0) {\n            if (0xffffffff < arg2) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            arg1_00 = fcn.18000b904(arg2);\n            *(arg1 + 8) = arg1_00;\n            fcn.180035830(arg1_00, 0, arg2);\n            *(arg1 + 0x18) = arg2;\n        }\n        else {\n            iVar1 = *(arg1 + 0x18);\n            if (iVar1 < arg2) {\n                iVar5 = *(arg1 + 0x20);\n                if (*(arg1 + 0x20) == 0) {\n                    iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n                    if (((iVar4 < 4) || (iVar5 = 0x400,  iVar4 < 0x401)) && (iVar5 = iVar4,  iVar4 < 4)) {\n                        iVar5 = 4;\n                    }\n                }\n                arg1_01 = arg2;\n                if (arg2 < iVar5 + iVar1) {\n                    arg1_01 = iVar5 + iVar1;\n                }\n                if (arg1_01 < iVar1) {\n                    fcn.180015288();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                iVar5 = fcn.18000b904(arg1_01);\n                iVar3 = fcn.1800341d0(iVar5, arg1_01, *(arg1 + 8), *(arg1 + 0x10));\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.180015240();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.180035830(*(arg1 + 0x10) + iVar5, 0, arg2 - *(arg1 + 0x10));\n                fcn.18000b948(*(arg1 + 8));\n                *(arg1 + 8) = iVar5;\n                *(arg1 + 0x18) = arg1_01;\n            }\n            else {\n                iVar1 = *(arg1 + 0x10);\n                if (iVar1 < arg2) {\n                    fcn.180035830(iVar5 + iVar1, 0, arg2 - iVar1);\n                }\n            }\n        }\n        *(arg1 + 0x10) = arg2;\n    }\n    return;\n}\n",
        "token_count": 911
    },
    "180030fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.180030fec(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    \n    if (arg1 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    uVar4 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)();\n    if (arg2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar4);\n        uVar3 = iVar2 + 1;\n    }\n    else {\n        iVar2 = fcn.1800360d8(arg2, arg3, uVar4, 0xffffffffffffffff);\n        if (iVar2 != 0) {\n            if (iVar2 == 0xc) {\n                fcn.180015240();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            if (iVar2 != 0x50) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 380
    },
    "18003139": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003139c(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    \n    iVar4 = *(arg1 + 0x10);\n    iVar7 = 0;\n    iVar6 = 0;\n    if (0 < iVar4) {\n        iVar5 = 0;\n        do {\n            if ((iVar5 < 0) || (iVar4 <= iVar6)) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            piVar1 = *(*(arg1 + 8) + iVar5);\n            if ((piVar1 == NULL) || (piVar2 = *(*(arg1 + 8) + 8 + iVar5),  piVar2 == NULL)) {\n                fcn.180015288();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar7 = iVar7 + 1;\n            iVar6 = iVar6 + 1;\n            *piVar2 = -(*piVar1 != 0);\n            iVar4 = *(arg1 + 0x10);\n            iVar5 = iVar5 + 0x18;\n        } while (iVar7 < iVar4);\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "18003140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180031408(code **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    pcVar3 = arg1[6];\n    *arg1 = vtable.COleDispatchException.0;\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    pcVar3 = arg1[5];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    pcVar3 = arg1[3];\n    LOCK();\n    piVar1 = pcVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(pcVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "18003221": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180032218(int64_t arg1)\n\n{\n    code *pcVar1;\n    \n    if (0x3ffffffd < *(arg1 + 0x50)) {\n        fcn.18002279c(5, *(arg1 + 0x18));\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "18003223": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003223c(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    \n    iVar6 = 0;\n    if (arg2 < 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    iVar5 = *(arg1 + 8);\n    if (arg2 == 0) {\n        if (iVar5 != 0) {\n            if (0 < *(arg1 + 0x10)) {\n                do {\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < *(arg1 + 0x10));\n            }\n            fcn.18000b948(iVar5);\n            *(arg1 + 8) = 0;\n        }\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n        return;\n    }\n    if (iVar5 == 0) {\n        iVar4 = *(arg1 + 0x20);\n        if (*(arg1 + 0x20) < arg2) {\n            iVar4 = arg2;\n        }\n        arg1_00 = fcn.18000b904(iVar4 << 2);\n        *(arg1 + 8) = arg1_00;\n        fcn.180035830(arg1_00, 0, iVar4 << 2);\n        if (0 < arg2) {\n            do {\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < arg2);\n        }\n    }\n    else {\n        iVar1 = *(arg1 + 0x18);\n        if (arg2 <= iVar1) {\n            iVar1 = *(arg1 + 0x10);\n            if (iVar1 < arg2) {\n                fcn.180035830(iVar5 + iVar1 * 4, 0, (arg2 - iVar1) * 4);\n                if (0 < arg2 - *(arg1 + 0x10)) {\n                    do {\n                        iVar6 = iVar6 + 1;\n                    } while (iVar6 < arg2 - *(arg1 + 0x10));\n                }\n            }\n            else if ((arg2 < iVar1) && (0 < iVar1 - arg2)) {\n                do {\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < *(arg1 + 0x10) - arg2);\n            }\n            goto code_r0x00018003244b;\n        }\n        iVar5 = *(arg1 + 0x20);\n        if (iVar5 == 0) {\n            iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n            iVar5 = iVar4;\n            if (0x400 < iVar4) {\n                iVar5 = 0x400;\n            }\n            if (iVar4 < 4) {\n                iVar5 = 4;\n            }\n        }\n        iVar4 = arg2;\n        if (arg2 < iVar5 + iVar1) {\n            iVar4 = iVar5 + iVar1;\n        }\n        if (iVar4 < iVar1) {\n            fcn.180015288();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iVar5 = fcn.18000b904(iVar4 << 2);\n        iVar3 = fcn.1800341d0(iVar5, iVar4 << 2, *(arg1 + 8), *(arg1 + 0x10) << 2);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.180015240();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.180035830(iVar5 + *(arg1 + 0x10) * 4, 0, (arg2 - *(arg1 + 0x10)) * 4);\n        if (0 < arg2 - *(arg1 + 0x10)) {\n            do {\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < arg2 - *(arg1 + 0x10));\n        }\n        fcn.18000b948(*(arg1 + 8));\n        *(arg1 + 8) = iVar5;\n    }\n    *(arg1 + 0x18) = iVar4;\ncode_r0x00018003244b:\n    *(arg1 + 0x10) = arg2;\n    return;\n}\n",
        "token_count": 1180
    },
    "18003246": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180032468(int64_t arg1, int64_t arg2, uint *arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    \n    if ((arg2 < 0) || (arg4 < 1)) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (arg2 < *(arg1 + 0x10)) {\n        iVar2 = *(arg1 + 0x10);\n        fcn.18003223c(arg1, arg4 + iVar2, 0xffffffffffffffff);\n        iVar3 = 0;\n        if (0 < arg4) {\n            do {\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < arg4);\n        }\n        iVar2 = (iVar2 - arg2) * 4;\n        iVar3 = fcn.180034268(*(arg1 + 8) + (arg2 + arg4) * 4, iVar2, *(arg1 + 8) + arg2 * 4, iVar2);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.180015240();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180015288();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.180035830(*(arg1 + 8) + arg2 * 4, 0, arg4 << 2);\n        iVar3 = 0;\n        if (0 < arg4) {\n            do {\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < arg4);\n        }\n    }\n    else {\n        fcn.18003223c(arg1, arg2 + arg4, 0xffffffffffffffff);\n    }\n    arg2 = arg2 << 2;\n    do {\n        *(arg2 + *(arg1 + 8)) = *arg3;\n        arg2 = arg2 + 4;\n        arg4 = arg4 + -1;\n    } while (arg4 != 0);\n    return;\n}\n",
        "token_count": 565
    },
    "18003258": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180032588(code **arg1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    *arg1 = vtable.CArray_enum_CArchive::LoadArrayObjType__enum_CArchive::LoadArrayObjType_const____ptr64_.0;\n    if (arg1[1] != NULL) {\n        if (0 < arg1[2]) {\n            do {\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg1[2]);\n        }\n        fcn.18000b948(arg1[1]);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "1800326b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800326b8(int64_t arg1, ulong *arg2)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    ulong *puVar3;\n    code **ppcStackX24;\n    code **ppcStackX32;\n    \n    arg1_00 = *(arg1 + 0x60);\n    ppcStackX24 = NULL;\n    if (arg1_00 == 0) {\n        ppcStackX32 = fcn.18000b904(0x38);\n        if (ppcStackX32 == NULL) {\n            arg1_00 = 0;\n        }\n        else {\n            arg1_00 = fcn.18001f2dc(ppcStackX32, 10);\n        }\n    }\n    iVar2 = fcn.18001f190(arg1_00, 1, &ppcStackX24);\n    if (iVar2 == 0) {\n        ppcStackX32 = fcn.18000b904(0x28);\n        if (ppcStackX32 == NULL) {\n            ppcStackX32 = NULL;\n        }\n        else {\n            *ppcStackX32 = \n            vtable.CArray_enum_CArchive::LoadArrayObjType__enum_CArchive::LoadArrayObjType_const____ptr64_.0;\n            ppcStackX32[1] = NULL;\n            ppcStackX32[4] = NULL;\n            ppcStackX32[3] = NULL;\n            ppcStackX32[2] = NULL;\n        }\n        ppcVar1 = ppcStackX32;\n        fcn.18003223c(ppcStackX32, 1, *(arg1 + 0x68));\n        puVar3 = fcn.18001f390(arg1_00, 1);\n        *puVar3 = ppcVar1;\n        ppcStackX24 = ppcVar1;\n    }\n    *(arg1 + 0x60) = arg1_00;\n    if (arg2 != NULL) {\n        *arg2 = ppcStackX24;\n    }\n    return;\n}\n",
        "token_count": 474
    },
    "18003302": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.180033024(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong uStackX8;\n    uint auStackX24 [2];\n    int64_t iStackX32;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.18002279c(4, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        piVar4 = (*pcVar2)();\n        return piVar4;\n    }\n    iVar5 = fcn.180032b10(arg1, arg2, auStackX24, &uStackX8);\n    if (iVar5 == 0) {\n        uVar6 = uStackX8 & 0xffffffff;\n        if (*(*(arg1 + 0x58) + 0x10) - 1U < uStackX8) {\n            fcn.18002279c(5, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            piVar4 = (*pcVar2)();\n            return piVar4;\n        }\n        uStackX8 = 0;\n        iVar3 = fcn.18001f190(*(arg1 + 0x60), 1, &uStackX8);\n        if (iVar3 != 0) {\n            if (uStackX8 == 0) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                piVar4 = (*pcVar2)();\n                return piVar4;\n            }\n            if (uStackX8 <= *(uStackX8 + 0x10) - 1U) {\n                if (*(uStackX8 + 0x10) <= uVar6) {\n                    fcn.180015288();\n                    pcVar2 = swi(3);\n                    piVar4 = (*pcVar2)();\n                    return piVar4;\n                }\n                if (*(*(uStackX8 + 8) + uVar6 * 4) == 1) {\n                    fcn.18002279c(5, *(arg1 + 0x18));\n                    pcVar2 = swi(3);\n                    piVar4 = (*pcVar2)();\n                    return piVar4;\n                }\n            }\n        }\n        if (uVar6 < *(*(arg1 + 0x58) + 0x10)) {\n            piVar4 = *(*(*(arg1 + 0x58) + 8) + uVar6 * 8);\n            if (piVar4 == NULL) {\n                return NULL;\n            }\n            if (arg2 == 0) {\n                return piVar4;\n            }\n            iVar3 = fcn.18001efb8(piVar4, arg2);\n            if (iVar3 != 0) {\n                return piVar4;\n            }\n            fcn.18002279c(6, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            piVar4 = (*pcVar2)();\n            return piVar4;\n        }\n        iVar5 = fcn.180015288();\n    }\n    piVar4 = fcn.18001ef3c(iVar5);\n    if (piVar4 == NULL) {\n        fcn.180015240();\n    }\n    fcn.180032218(arg1);\n    fcn.180033dcc(*(arg1 + 0x58), *(arg1 + 0x50), piVar4, 1);\n    iStackX32 = 0;\n    fcn.18001f190(*(arg1 + 0x60), 1, &iStackX32);\n    iVar5 = iStackX32;\n    if (iStackX32 == 0) {\n        fcn.180015288();\n    }\n    uStackX8 = CONCAT44(uStackX8._4_4_, 2);\n    fcn.180032468(iVar5, *(arg1 + 0x50), &uStackX8, 1);\n    *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n    uVar1 = *(arg1 + 0x14);\n    *(arg1 + 0x14) = auStackX24[0];\n    (**(*piVar4 + 0x10))(piVar4, arg1);\n    *(arg1 + 0x14) = uVar1;\n    return piVar4;\n}\n",
        "token_count": 1029
    },
    "1800331e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00018001fd59)\n\nvoid fcn.1800331ec(void)\n\n{\n    ulong *arg2;\n    int64_t iVar1;\n    \n    iVar1 = fcn.18001e94c();\n    fcn.18001fcbc(0xb);\n    while (arg2 = *(iVar1 + 0x70),  arg2 != NULL) {\n        fcn.1800200a8(iVar1 + 0x70, arg2);\n        if (arg2 != NULL) {\n            (***arg2)(arg2, 1);\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00018001fd75. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x180073e68);\n    return;\n}\n",
        "token_count": 195
    },
    "18003327": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00018001fd59)\n\nvoid fcn.180033270(void)\n\n{\n    int64_t arg1;\n    \n    arg1 = fcn.18001e94c();\n    fcn.18001fcbc(0);\n    while (arg1 = *(arg1 + 0x40),  arg1 != 0) {\n        fcn.180033244(arg1);\n    }\n    // WARNING: Could not recover jumptable at 0x00018001fd75. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x180073cb0);\n    return;\n}\n",
        "token_count": 154
    },
    "1800332d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800332d8(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    \n    iVar3 = fcn.18001fff4(0x180074128, 0x1800332a4);\n    if (iVar3 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    if (*(iVar3 + 0x10) != 0) {\n        uVar4 = fcn.180020858(*(iVar3 + 0x10), 0x180059530);\n        iVar2 = (*_sym.imp.ole32.dll_OleIsCurrentClipboard)(uVar4);\n        if (iVar2 == 0) {\n            return *(iVar3 + 0x10);\n        }\n        *(iVar3 + 0x10) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 224
    },
    "18003333": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180033338(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.1800332d8();\n    if (iVar1 != 0) {\n        (*_sym.imp.ole32.dll_OleFlushClipboard)();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "18003352": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180033520(code **arg1)\n\n{\n    *arg1 = vtable.COleMessageFilter.0;\n    fcn.180033394(arg1);\n    if (arg1[4] != NULL) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = NULL;\n    return;\n}\n",
        "token_count": 80
    },
    "18003383": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.18003383c(code **arg1)\n\n{\n    fcn.18000bea4(arg1);\n    *arg1 = vtable.COleMessageFilter.0;\n    arg1[0xc] = vtable.COleMessageFilter::XMessageFilter.0;\n    *(arg1 + 9) = 1;\n    *(arg1 + 0x4c) = 1;\n    *(arg1 + 0x44) = 0;\n    *(arg1 + 0xb) = 2;\n    *(arg1 + 0x54) = 10000;\n    *(arg1 + 0x5c) = 8000;\n    *(arg1 + 10) = 0;\n    *(arg1 + 8) = 0;\n    return arg1;\n}\n",
        "token_count": 178
    },
    "1800338d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800338dc(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (arg2 < 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    iVar5 = *(arg1 + 8);\n    if (arg2 == 0) {\n        fcn.18000b948(iVar5);\n        *(arg1 + 8) = 0;\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        if (iVar5 == 0) {\n            arg1_00 = fcn.18000b904(arg2 << 3);\n            *(arg1 + 8) = arg1_00;\n            fcn.180035830(arg1_00, 0, arg2 << 3);\n            *(arg1 + 0x18) = arg2;\n        }\n        else {\n            iVar1 = *(arg1 + 0x18);\n            if (iVar1 < arg2) {\n                iVar5 = *(arg1 + 0x20);\n                if (*(arg1 + 0x20) == 0) {\n                    iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n                    if (((iVar4 < 4) || (iVar5 = 0x400,  iVar4 < 0x401)) && (iVar5 = iVar4,  iVar4 < 4)) {\n                        iVar5 = 4;\n                    }\n                }\n                iVar4 = arg2;\n                if (arg2 < iVar5 + iVar1) {\n                    iVar4 = iVar5 + iVar1;\n                }\n                if (iVar4 < iVar1) {\n                    fcn.180015288();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                iVar5 = fcn.18000b904(iVar4 << 3);\n                iVar3 = fcn.1800341d0(iVar5, iVar4 << 3, *(arg1 + 8), *(arg1 + 0x10) << 3);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.180015240();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.180035830(iVar5 + *(arg1 + 0x10) * 8, 0, (arg2 - *(arg1 + 0x10)) * 8);\n                fcn.18000b948(*(arg1 + 8));\n                *(arg1 + 8) = iVar5;\n                *(arg1 + 0x18) = iVar4;\n            }\n            else {\n                iVar1 = *(arg1 + 0x10);\n                if (iVar1 < arg2) {\n                    fcn.180035830(iVar5 + iVar1 * 8, 0, (arg2 - iVar1) * 8);\n                }\n            }\n        }\n        *(arg1 + 0x10) = arg2;\n    }\n    return;\n}\n",
        "token_count": 885
    },
    "180033c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180033c28(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (arg2 < 0) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    iVar5 = *(arg1 + 8);\n    if (arg2 == 0) {\n        fcn.18000b948(iVar5);\n        *(arg1 + 8) = 0;\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        if (iVar5 == 0) {\n            arg1_00 = fcn.18000b904(arg2 << 3);\n            *(arg1 + 8) = arg1_00;\n            fcn.180035830(arg1_00, 0, arg2 << 3);\n            *(arg1 + 0x18) = arg2;\n        }\n        else {\n            iVar1 = *(arg1 + 0x18);\n            if (iVar1 < arg2) {\n                iVar5 = *(arg1 + 0x20);\n                if (*(arg1 + 0x20) == 0) {\n                    iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n                    if (((iVar4 < 4) || (iVar5 = 0x400,  iVar4 < 0x401)) && (iVar5 = iVar4,  iVar4 < 4)) {\n                        iVar5 = 4;\n                    }\n                }\n                iVar4 = arg2;\n                if (arg2 < iVar5 + iVar1) {\n                    iVar4 = iVar5 + iVar1;\n                }\n                if (iVar4 < iVar1) {\n                    fcn.180015288();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                iVar5 = fcn.18000b904(iVar4 << 3);\n                iVar3 = fcn.1800341d0(iVar5, iVar4 << 3, *(arg1 + 8), *(arg1 + 0x10) << 3);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.180015240();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.180015288();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.180035830(iVar5 + *(arg1 + 0x10) * 8, 0, (arg2 - *(arg1 + 0x10)) * 8);\n                fcn.18000b948(*(arg1 + 8));\n                *(arg1 + 8) = iVar5;\n                *(arg1 + 0x18) = iVar4;\n            }\n            else {\n                iVar1 = *(arg1 + 0x10);\n                if (iVar1 < arg2) {\n                    fcn.180035830(iVar5 + iVar1 * 8, 0, (arg2 - iVar1) * 8);\n                }\n            }\n        }\n        *(arg1 + 0x10) = arg2;\n    }\n    return;\n}\n",
        "token_count": 885
    },
    "180033dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180033dcc(int64_t arg1, int64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    if ((arg2 < 0) || (arg4 < 1)) {\n        fcn.180015288();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg2 < *(arg1 + 0x10)) {\n        iVar1 = *(arg1 + 0x10);\n        fcn.180033c28(arg1, iVar1 + arg4, 0xffffffffffffffff);\n        iVar3 = fcn.180034268(*(arg1 + 8) + (arg2 + arg4) * 8, ((*(arg1 + 0x10) - arg2) - arg4) * 8, \n                              *(arg1 + 8) + arg2 * 8, (iVar1 - arg2) * 8);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.180015240();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.180015288();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.180035830(*(arg1 + 8) + arg2 * 8, 0, arg4 << 3);\n    }\n    else {\n        fcn.180033c28(arg1, arg2 + arg4, 0xffffffffffffffff);\n    }\n    arg2 = arg2 << 3;\n    do {\n        *(arg2 + *(arg1 + 8)) = arg3;\n        arg2 = arg2 + 8;\n        arg4 = arg4 + -1;\n    } while (arg4 != 0);\n    return;\n}\n",
        "token_count": 495
    },
    "180033f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.180033f90(code **arg1, ulong arg2)\n\n{\n    fcn.180019d18(arg1, 0, arg2);\n    *(arg1 + 0x1d) = 0xffffffff;\n    *arg1 = vtable.CCommonDialog.0;\n    return arg1;\n}\n",
        "token_count": 72
    },
    "180033fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.180033fc0(code **arg1, code *arg2, ulong arg3, ulong arg4)\n\n{\n    ulong in_stack_00000028;\n    \n    fcn.180033f90(arg1, in_stack_00000028);\n    *arg1 = vtable.COleBusyDialog.0;\n    fcn.180035830(arg1 + 0x1e, 0, 0x50);\n    *(arg1 + 0x1e) = 0x50;\n    *(arg1 + 0xf4) = arg4;\n    if (arg3 != 0) {\n        *(arg1 + 0xf4) = arg4 | 8;\n    }\n    arg1[0x26] = arg2;\n    arg1[0x21] = 0x180033f40;\n    return arg1;\n}\n",
        "token_count": 190
    },
    "18003406": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18003406c(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint uVar3;\n    int64_t iStackX8;\n    \n    if (*(arg1 + 0xd0) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(*(arg1 + 0xd0) + 0x40);\n    }\n    uVar2 = fcn.18001c174(uVar2, &iStackX8);\n    *(arg1 + 0xf8) = uVar2;\n    fcn.180011e50(arg1);\n    iVar1 = sub.oledlg.dll_OleUIBusyA(arg1 + 0xf0);\n    fcn.18000fb30();\n    fcn.18000fae4(arg1);\n    if (iStackX8 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStackX8, 1);\n    }\n    uVar2 = 2;\n    if (iVar1 != 2) {\n        if (iVar1 == 0x75) {\n            *(arg1 + 0x140) = 1;\n        }\n        else if (iVar1 == 0x76) {\n            *(arg1 + 0x140) = 2;\n        }\n        else if (iVar1 == 0x77) {\n            *(arg1 + 0x140) = 3;\n        }\n        else {\n            *(arg1 + 0xe8) = iVar1;\n            uVar3 = 0xffffffff;\n            if (iVar1 == 1) {\n                uVar3 = 1;\n            }\n            *(arg1 + 0x140) = uVar3;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 405
    },
    "180034a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180034a4c(int64_t arg1, ulong arg2)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    ulong uStack56;\n    uint uStack48;\n    ulong uStack40;\n    uint uStack32;\n    \n    if (arg1 == 0) {\n        puVar1 = fcn.180036050();\n        *puVar1 = 0x16;\n        fcn.180039810(0, 0, 0, 0);\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uStack40 = 0;\n        uStack56 = 0;\n        uStack48 = 0x7fffffff;\n        uStack32 = 0x42;\n        uVar2 = (*0x18003b630)(&uStack56);\n    }\n    return uVar2;\n}\n",
        "token_count": 189
    },
    "18003824": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180038248(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong arg1_00;\n    \n    if (*0x180074768 == 0) {\n        arg1_00 = 0x18006f660;\n    }\n    else {\n        arg1_00 = 0;\n    }\n    fcn.180037fc4(arg1_00, arg1, arg2, arg3);\n    return;\n}\n",
        "token_count": 99
    },
    "18003989": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.180039898(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    if (arg1 == 0) {\n        fcn.18003b1f8();\n    }\n    uVar1 = *(arg1 + 0x14);\n    if (*(arg1 + 0x18) + *(arg2 + 8) == 0) {\n        fcn.18003b1f8();\n    }\n    uVar3 = 0;\n    if (uVar1 != 0) {\n        iVar2 = *(arg2 + 8);\n        piVar4 = iVar2 + *(arg1 + 0x18);\n        do {\n            if (arg3 < *piVar4 + iVar2) break;\n            uVar3 = uVar3 + 1;\n            piVar4 = piVar4 + 2;\n        } while (uVar3 < uVar1);\n        if (uVar3 != 0) {\n            return *(*(arg1 + 0x18) + (uVar3 - 1) * 8 + 4 + iVar2);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 289
    },
    "18003f37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18003f37c(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0x18005dc50; ppcVar1 < 0x18005dc50; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "18004265": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180042658(uint *arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.180036050();\n        *puVar1 = 0x16;\n        fcn.180039810(0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg1 = *0x18006ff64;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 124
    },
    "18004269": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180042698(uint *arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.180036050();\n        *puVar1 = 0x16;\n        fcn.180039810(0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg1 = *0x18006ff68;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 124
    },
    "1800426d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800426d8(uint *arg1)\n\n{\n    uint *puVar1;\n    ulong uVar2;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.180036050();\n        *puVar1 = 0x16;\n        fcn.180039810(0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg1 = *0x18006ff60;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 126
    },
    "18004837": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180048374(ulong lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n    return 0;\n}\n",
        "token_count": 33
    },
    "1800483d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.1800483d0(uint *arg1)\n\n{\n    int32_t iVar1;\n    \n    fcn.180035830(arg1 + 10, 0, 0x28);\n    *(arg1 + 0x14) = 0;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0;\n    *(arg1 + 4) = 0x180000000;\n    *(arg1 + 2) = 0x180000000;\n    *arg1 = 0x60;\n    arg1[6] = 0x900;\n    *(arg1 + 8) = 0x180059bd8;\n    iVar1 = fcn.180048374(arg1 + 10);\n    if (iVar1 < 0) {\n        *0x1800705e0 = 1;\n    }\n    return arg1;\n}\n",
        "token_count": 202
    },
    "180034fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.180034fcc(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180034ec4(arg1);\n    return (iVar1 != 0) - 1;\n}\n",
        "token_count": 52
    },
    "18000103": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.180001030(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    if (arg1 == -0x7ff8fff2) {\n        fcn.180015240();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.1800149c4(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 99
    },
    "18001345": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.18001345c(int64_t arg1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t arg3;\n    uchar auStack104 [96];\n    \n    iVar2 = fcn.18000dafc(*(arg1 + 0x18), *(arg1 + 0x40), auStack104);\n    arg3 = 0;\n    if (iVar2 == 0) {\n        iVar1 = fcn.18000da60(arg1);\n        if (iVar1 == 0) {\n            uVar6 = 0;\n        }\n        else {\n            iVar4 = fcn.18001e94c();\n            if (*(iVar4 + 0x28) != '\\0') {\n                fcn.18001fcbc(1);\n                iVar5 = fcn.18001e94c();\n                iVar4 = *(arg1 + 0x40);\n                if (iVar4 != 0) {\n                    uVar3 = fcn.180035930(iVar4);\n                    arg3 = uVar3;\n                }\n                fcn.180001720(iVar5 + 0x58, iVar4, arg3);\n                fcn.1800110a4(iVar5 + 0x58);\n                fcn.18001fd50(1);\n            }\n            uVar6 = 1;\n        }\n    }\n    else {\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 347
    },
    "18002ecc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.18002ecc4(ulong arg1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint16_t in_DX;\n    char *arg2;\n    ulong in_R9;\n    uchar auStack136 [32];\n    int32_t iStack104;\n    char acStack76 [36];\n    uint64_t uStack40;\n    \n    uStack40 = *0x18006ed40 ^ auStack136;\n    uVar1 = 10;\n    arg2 = \"System\";\n    iVar3 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.GDI32.dll_GetStockObject)(0xd);\n        if (iVar3 == 0) goto code_r0x00018002ed81;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar3, 0x3c);\n    if (iVar2 != 0) {\n        arg2 = acStack76;\n        uVar4 = (*_sym.imp.USER32.dll_GetDC)();\n        if (iStack104 < 0) {\n            iStack104 = -iStack104;\n        }\n        (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar4, 0x5a);\n        uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(iStack104, 0x48);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar4);\n    }\ncode_r0x00018002ed81:\n    if (in_DX == 0) {\n        in_DX = uVar1;\n    }\n    fcn.18002eac4(arg1, arg2, in_DX, in_R9);\n    fcn.1800349d0(uStack40 ^ auStack136);\n    return;\n}\n",
        "token_count": 420
    },
    "1800027c": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nulong fcn.1800027c0(void)\n\n{\n    int64_t in_GS_OFFSET;\n    \n    return *(in_GS_OFFSET + 0x60);\n}\n",
        "token_count": 37
    },
    "18001b48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.18001b48c(code **arg1)\n\n{\n    ulong *puVar1;\n    \n    *arg1 = vtable.CList_class_IControlSiteFactory____ptr64__class_IControlSiteFactory____ptr64_.0;\n    for (puVar1 = arg1[1]; puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    arg1[3] = NULL;\n    arg1[4] = NULL;\n    arg1[2] = NULL;\n    arg1[1] = NULL;\n    fcn.18002f310(arg1[5]);\n    arg1[5] = NULL;\n    return;\n}\n",
        "token_count": 145
    },
    "18001f11": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong * fcn.18001f110(int64_t arg1, uint64_t arg2, uint *arg3, uint *arg4)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    \n    *arg4 = arg2 >> 4;\n    uVar1 = (arg2 >> 4 & 0xffffffff) % *(arg1 + 0x10);\n    *arg3 = uVar1;\n    if (*(arg1 + 8) != 0) {\n        for (puVar2 = *(*(arg1 + 8) + uVar1 * 8); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == arg2) {\n                return puVar2;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 179
    },
    "180020cf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.180020cf0(int64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    if (arg3 == NULL) {\n        arg3 = *(arg1 + 8);\n    }\n    else {\n        arg3 = *arg3;\n    }\n    for (; (arg3 != NULL && (arg3[2] != arg2)); arg3 = *arg3) {\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "180021ee": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180035850)\n// WARNING: Removing unreachable block (ram,0x000180035858)\n// WARNING: Removing unreachable block (ram,0x00018003585e)\n// WARNING: Removing unreachable block (ram,0x0001800358a7)\n// WARNING: Removing unreachable block (ram,0x0001800358e0)\n// WARNING: Removing unreachable block (ram,0x000180035910)\n// WARNING: Removing unreachable block (ram,0x0001800358b0)\n// WARNING: Removing unreachable block (ram,0x0001800358d8)\n// WARNING: Removing unreachable block (ram,0x000180035891)\n\nvoid fcn.180021ee4(ulong *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = 3;\n    do {\n        *arg1 = 0;\n        arg1 = arg1 + 1;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 229
    },
    "180037e7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180037dd2)\n// WARNING: Removing unreachable block (ram,0x000180037dd7)\n// WARNING: Removing unreachable block (ram,0x000180037ddd)\n// WARNING: Removing unreachable block (ram,0x000180037de5)\n// WARNING: Removing unreachable block (ram,0x000180037de9)\n\nint32_t fcn.180037e7c(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    iVar4 = 0;\n    fcn.18003ff44(1);\n    for (uVar3 = 0; uVar3 < *0x1800760a0; uVar3 = uVar3 + 1) {\n        iVar5 = uVar3;\n        if ((*(*0x180075088 + iVar5 * 8) != 0) && (iVar1 = *(*0x180075088 + iVar5 * 8),  (*(iVar1 + 0x18) & 0x83) != 0))\n        {\n            fcn.18004013c(uVar3, iVar1);\n            iVar1 = *(*0x180075088 + iVar5 * 8);\n            if (((*(iVar1 + 0x18) & 0x83) != 0) && (iVar2 = fcn.180037cfc(iVar1),  iVar2 != -1)) {\n                iVar4 = iVar4 + 1;\n            }\n            fcn.1800401c4(uVar3, *(*0x180075088 + iVar5 * 8));\n        }\n    }\n    fcn.18003fe44(1);\n    return iVar4;\n}\n",
        "token_count": 394
    },
    "18003886": {
        "rules": [
            "contain loop",
            "terminate process"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00018003881d)\n// WARNING: Removing unreachable block (ram,0x000180038735)\n// WARNING: Removing unreachable block (ram,0x000180038752)\n// WARNING: Removing unreachable block (ram,0x000180038776)\n// WARNING: Removing unreachable block (ram,0x000180038784)\n// WARNING: Removing unreachable block (ram,0x00018003878e)\n// WARNING: Removing unreachable block (ram,0x000180038790)\n// WARNING: Removing unreachable block (ram,0x000180038795)\n// WARNING: Removing unreachable block (ram,0x0001800387ca)\n// WARNING: Removing unreachable block (ram,0x0001800387cf)\n// WARNING: Removing unreachable block (ram,0x0001800387ef)\n// WARNING: Removing unreachable block (ram,0x0001800387f1)\n// WARNING: Removing unreachable block (ram,0x000180038852)\n\nvoid fcn.18003886c(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    fcn.18003ff44(8);\n    if (*0x1800741a8 != 1) {\n        *0x1800741a4 = 1;\n        *0x1800741a0 = 0;\n        fcn.1800385c0(0x18004ec38, 0x18004ec40);\n    }\n    *0x1800741a8 = 1;\n    fcn.18003fe44(8);\n    fcn.180038554(arg1);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 387
    },
    "18003992": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.180039924(int64_t arg1, int64_t *arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    iVar3 = *arg2;\n    if (arg1 == 0) {\n        fcn.18003b1f8();\n    }\n    uVar1 = *(arg1 + 0x14);\n    if (*(arg1 + 0x18) + arg2[1] == 0) {\n        fcn.18003b1f8();\n    }\n    uVar4 = 0;\n    if (uVar1 != 0) {\n        iVar2 = arg2[1];\n        piVar5 = iVar2 + *(arg1 + 0x18);\n        do {\n            if (iVar3 < *piVar5 + iVar2) break;\n            uVar4 = uVar4 + 1;\n            piVar5 = piVar5 + 2;\n        } while (uVar4 < uVar1);\n        if (uVar4 != 0) {\n            return *(*(arg1 + 0x18) + (uVar4 - 1) * 8 + 4 + iVar2);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 295
    },
    "18001f84": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.18001f848(int64_t arg1, int64_t lpString)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar auStack312 [32];\n    uchar uStack280;\n    uchar auStack279 [255];\n    uint64_t uStack24;\n    \n    uStack24 = *0x18006ed40 ^ auStack312;\n    if (arg1 == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (lpString == 0) {\n        fcn.180015288();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    uStack280 = 0;\n    fcn.180035830(auStack279, 0, 0xff);\n    if (uVar2 < 0x101) {\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowTextA)(arg1, &uStack280);\n        if (uVar3 == uVar2) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&uStack280, lpString);\n            if (iVar4 == 0) goto code_r0x00018001f8e5;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg1, lpString);\ncode_r0x00018001f8e5:\n    fcn.1800349d0(uStack24 ^ auStack312);\n    return;\n}\n",
        "token_count": 375
    }
}